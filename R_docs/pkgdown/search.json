[{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Step Function","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple step function.","code":"# Generate the data n <- 500 p_x <- 10 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,     general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect BART samples burnin.","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model additive random effect structure.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) noise_sd <- sd(f_XW) / snr y <- f_XW + rfx_term + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, rfx_group_ids_train = rfx_group_ids_train,      rfx_basis_train = rfx_basis_train, X_test = X_test, leaf_basis_test = leaf_basis_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6|X3−1|τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 \\lvert X_3 - 1 \\rvert\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.97"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.88"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-2-linear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.95"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.94"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-3-linear-outcome-model-homogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=3g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 3\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau1(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 1"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 1"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-4-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)={−1.1 ifX1>X20.9 ifX1≤X2τ(X)=11+exp(−X3)+X210π(X)=Φ(μ(X))Z∼Bernoulli(π(X))X1,X2,X3∼N(0,1)X4∼N(X2,1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= \\begin{cases} -1.1 & \\text{ } X_1 > X_2\\\\ 0.9 & \\text{ } X_1 \\leq X_2 \\end{cases}\\\\ \\tau(X) &= \\frac{1}{1+\\exp(-X_3)} + \\frac{X_2}{10}\\\\ \\pi(X) &= \\Phi\\left(\\mu(X)\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right)\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim N\\left(X_2,1\\right)\\\\ \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n,x2,1) X <- cbind(x1,x2,x3,x4) p <- ncol(X) mu <- function(x) {-1*(x[,1]>(x[,2])) + 1*(x[,1]<(x[,2])) - 0.1} tau <- function(x) {1/(1 + exp(-x[,3])) + x[,2]/10} mu_x <- mu(X) tau_x <- tau(X) pi_x <- pnorm(mu_x) Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x sigma <- diff(range(mu_x + tau_x*pi))/8 y <- E_XZ + sigma*rnorm(n) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.99"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-5-nonlinear-outcome-model-heterogeneous-treatment-effect-with-additive-random-effects","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","title":"Causal Machine Learning in StochTree","text":"augment simulated example Demo 1 additive random effect structure show bcf() function can estimate incorporate effects forest sampling procedure.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw augmented “demo 1” DGP","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"simulate “warm-start” model (running root-MCMC BART random effects simply matter modifying code snippet setting num_gfr <- 0 num_mcmc > 0). Inspect BART samples initialized XBART warm-start      Examine test set interval coverage clear causal inference much difficult presence strong covariate-dependent prognostic effects strong group-level random effects. sense, proper prior calibration three μ\\mu, τ\\tau random effects models crucial.","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$rfx_preds_test), rfx_term_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Random effects terms\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ-rfx_term) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.95"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-6-nonlinear-outcome-model-heterogeneous-treatment-effect-using-different-features-in-the-prognostic-and-treatment-forests","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","title":"Causal Machine Learning in StochTree","text":", consider case might prefer use subset covariates treatment effect forest. might want ? Well, many cases plausible covariates (example age, income, etc…) influence outcome interest causal problem, moderate treatment effect. case, ’d need include variables prognostic forest deconfounding don’t necessarily need include treatment effect forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-5","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw modified “demo 1” DGP","code":"mu <- function(x) {1+g(x)+x[,1]*x[,3]-x[,2]+3*x[,3]} tau <- function(x) {1 - 2*x[,1] + 2*x[,2] + 1*x[,1]*x[,2]} n <- 500 snr <- 4 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) x6 <- rnorm(n) x7 <- rnorm(n) x8 <- rnorm(n) x9 <- rnorm(n) x10 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) p <- ncol(X) mu_x <- mu(X) tau_x <- tau(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.5 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect burned-samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.828 test_tau_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_tau_mean - tau_test)^2)) #> [1] 1.665139 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 2.015857"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.82 test_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_mean - tau_test)^2)) #> [1] 1.472791 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 1.871234"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.872 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.569408 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.901226"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.904 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.397716 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.921583"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect-1","dir":"Articles","previous_headings":"Continuous Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+2X1−𝟙(X2<0)×4+𝟙(X2≥0)×4+3(|X3|−2π)τ(X)=1+2X4X1,X2,X3,X4,X5∼N(0,1)U∼Uniform(0,1)π(X)=μ(X)−12+4(U−12)Z∼𝒩(π(X),1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + 2 X_1 - \\mathbb{1}\\left(X_2 < 0\\right) \\times 4 + \\mathbb{1}\\left(X_2 \\geq 0\\right) \\times 4 + 3 \\left(\\lvert X_3 \\rvert - \\sqrt{\\frac{2}{\\pi}} \\right)\\\\ \\tau(X) &= 1 + 2 X_4\\\\ X_1,X_2,X_3,X_4,X_5 &\\sim N\\left(0,1\\right)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ \\pi(X) &= \\frac{\\mu(X) - 1}{2} + 4 \\left(U - \\frac{1}{2}\\right)\\\\ Z &\\sim \\mathcal{N}\\left(\\pi(X), 1\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-6","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- 1 + 2*x1 - 4*(x2 < 0) + 4*(x2 >= 0) + 3*(abs(x3) - sqrt(2/pi)) tau_x <- 1 + 2*x4 u <- runif(n) pi_x <- ((mu_x-1)/4) + 4*(u-0.5) Z <- pi_x + rnorm(n,0,1) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-5","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-4","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Custom Sampling Routines in StochTree","text":"functions bart() bcf() provide simple performant interfaces supervised learning / causal inference, stochtree also offers access many “low-level” data structures typically implemented C++. low-level interface designed performance even simplicity — rather intent provide “prototype” interface C++ code doesn’t require modifying C++. illustrate prototype interface might useful, consider classic BART algorithm:    INPUT: yy, XX, τ\\tau, ν\\nu, λ\\lambda, α\\alpha, β\\beta    OUTPUT: mm samples decision forest kk trees global variance parameter σ2\\sigma^2    Initialize σ2\\sigma^2 via default data-dependent calibration exercise    Initialize “forest 0” kk trees single root node, referring tree jj’s prediction vector f0,jf_{0,j}    Compute residual r=y−∑j=1kf0,jr = y - \\sum_{j=1}^k f_{0,j}    iiIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Initialize forest ii forest −1i-1       jjIN {1,…,k}\\left\\{1,\\dots,k\\right\\}:          Add predictions tree jj residual: r=r+fi,jr = r + f_{,j}          Update tree jj via Metropolis-Hastings rr XX data tree priors depending (τ\\tau, σ2\\sigma^2, α\\alpha, β\\beta)          Sample leaf node parameters tree jj via Gibbs (leaf node prior N(0,τ)N\\left(0,\\tau\\right))          Subtract (updated) predictions tree jj residual: r=r−fi,jr = r - f_{,j}       Sample σ2\\sigma^2 via Gibbs (prior IG(ν/2,νλ/2)IG(\\nu/2,\\nu\\lambda/2)) algorithm conceptually simple, much core computation carried low-level languages C C++ tree data structure. result, changes algorithm, supporting heteroskedasticity (Pratola et al. (2020)), categorical outcomes (Murray (2021)) causal effect estimation (Hahn, Murray, Carvalho (2020)) require modifying low-level code. prototype interface exposes core components loop R level, thus making possible interchange C++ computation steps like “update tree jj via Metropolis-Hastings” R computation custom variance model, user-specified additive mean model components, . begin, load stochtree package","code":"library(stochtree)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) y <- f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size <- 100 global_variance_init <- 1. current_sigma2 <- global_variance_init tau_init <- 1/num_trees leaf_prior_scale <- as.matrix(ifelse(p_W >= 1, diag(tau_init, p_W), diag(tau_init, 1))) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1     leaf_dimension <- p_W } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0     leaf_dimension <- 1 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_config <- createForestModelConfig(     feature_types = feature_types, num_trees = num_trees, num_features = p_X,      num_observations = n, variable_weights = var_weights, leaf_dimension = leaf_dimension,      alpha = alpha, beta = beta, min_samples_leaf = min_samples_leaf, max_depth = max_depth,      leaf_model_type = outcome_model_type, leaf_model_scale = leaf_prior_scale,      cutpoint_grid_size = cutpoint_grid_size ) global_model_config <- createGlobalModelConfig(global_error_variance = global_variance_init) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Initialize the leaves of each tree in the forest active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, outcome_model_type, mean(resid)) active_forest$adjust_residual(forest_dataset, outcome, forest_model, ifelse(outcome_model_type==1, T, F), F) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = T     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = F     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale) } # Forest predictions preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via “grow--root” (Hahn (2023))   Inspect BART samples obtained “warm-starting”","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-2-supervised-learning-with-additive-random-effects","dir":"Articles","previous_headings":"","what":"Demo 2: Supervised Learning with Additive Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example add simple “random effects” structure: every observation either group 1 group 2 random group intercept (simulated quite strong, underscoring need random effects modeling).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- c(-5, 5) rfx_basis <- rep(1, n) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rfx_coefs[group_ids] * rfx_basis y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init <- 1. current_sigma2 <- global_variance_init tau_init <- 1/num_trees leaf_prior_scale <- as.matrix(ifelse(p_W >= 1, diag(tau_init, p_W), diag(tau_init, 1))) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1) xi_init <- matrix(c(1,1),1,2) sigma_alpha_init <- matrix(c(1),1,1) sigma_xi_init <- matrix(c(1),1,1) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_config <- createForestModelConfig(     feature_types = feature_types, num_trees = num_trees, num_features = p_X,      num_observations = n, variable_weights = var_weights, leaf_dimension = leaf_dimension,      alpha = alpha, beta = beta, min_samples_leaf = min_samples_leaf, max_depth = max_depth,      leaf_model_type = outcome_model_type, leaf_model_scale = leaf_prior_scale,      cutpoint_grid_size = cutpoint_grid_size ) global_model_config <- createGlobalModelConfig(global_error_variance = global_variance_init) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Initialize the leaves of each tree in the forest active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, outcome_model_type, mean(resid)) active_forest$adjust_residual(forest_dataset, outcome, forest_model, ifelse(outcome_model_type==1, T, F), F)  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = T     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale)          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, current_sigma2, rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = F     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale)          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, current_sigma2, rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-3-supervised-learning-with-additive-multi-component-random-effects","dir":"Articles","previous_headings":"","what":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example, case allowing random intercept regression coefficient (pre-specified basis) group (1 2).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init <- 1. current_sigma2 <- global_variance_init tau_init <- 1/num_trees leaf_prior_scale <- as.matrix(ifelse(p_W >= 1, diag(tau_init, p_W), diag(tau_init, 1))) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1,0) xi_init <- matrix(c(1,0,1,0),2,2) sigma_alpha_init <- diag(1,2,2) sigma_xi_init <- diag(1,2,2) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_config <- createForestModelConfig(     feature_types = feature_types, num_trees = num_trees, num_features = p_X,      num_observations = n, variable_weights = var_weights, leaf_dimension = leaf_dimension,      alpha = alpha, beta = beta, min_samples_leaf = min_samples_leaf, max_depth = max_depth,      leaf_model_type = outcome_model_type, leaf_model_scale = leaf_prior_scale,      cutpoint_grid_size = cutpoint_grid_size ) global_model_config <- createGlobalModelConfig(global_error_variance = global_variance_init) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Initialize the leaves of each tree in the forest active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, outcome_model_type, mean(resid)) active_forest$adjust_residual(forest_dataset, outcome, forest_model, ifelse(outcome_model_type==1, T, F), F)  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = T     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale)          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = F     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale)          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-4-supervised-learning-with-additive-linear-model","dir":"Articles","previous_headings":"","what":"Demo 4: Supervised Learning with Additive Linear Model","title":"Custom Sampling Routines in StochTree","text":"Instead group random effects, show combine stochastic forest additive linear regression term. model corresponds broadly y=Wβ+f(X)+ϵf(X)∼BART(c,d)β∼𝒩(0,τ)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= W\\beta + f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}(c,d)\\\\ \\beta &\\sim \\mathcal{N}(0, \\tau)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}(,b) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) beta_W <- c(5) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) lm_term <- W %*% beta_W y <- lm_term + f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha_bart <- 0.9 beta_bart <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init <- 1. current_sigma2 <- global_variance_init tau_init <- 1/num_trees leaf_prior_scale <- as.matrix(ifelse(p_W >= 1, diag(tau_init, p_W), diag(tau_init, 1))) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- F feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) beta_tau <- 20 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_config <- createForestModelConfig(     feature_types = feature_types, num_trees = num_trees, num_features = p_X,      num_observations = n, variable_weights = var_weights, leaf_dimension = leaf_dimension,      alpha = alpha, beta = beta, min_samples_leaf = min_samples_leaf, max_depth = max_depth,      leaf_model_type = outcome_model_type, leaf_model_scale = leaf_prior_scale,      cutpoint_grid_size = cutpoint_grid_size ) global_model_config <- createGlobalModelConfig(global_error_variance = global_variance_init) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Initialize the leaves of each tree in the forest active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, outcome_model_type, mean(resid)) active_forest$adjust_residual(forest_dataset, outcome, forest_model, ifelse(outcome_model_type==1, T, F), F) num_warmstart <- 20 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc beta_init <- 0 global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) beta_samples <- c(beta_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = T     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2) } for (i in (num_warmstart+1):num_samples) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = F     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2) } # Linear model predictions lm_preds <- (sapply(1:num_samples, function(x) W[,1]*beta_samples[x+1]))*y_std  # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Overall predictions preds <- forest_preds + lm_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std  # Regression parameter beta_samples <- beta_samples*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model    Inspect BART samples obtained “warm-starting” plus additive random effects model    Now inspect samples BART forest alone (without considering additive linear model predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(beta_samples[1:num_warmstart], ylab=\"beta\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(beta_samples[(num_warmstart+1):num_samples], ylab=\"beta\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-5-causal-inference","dir":"Articles","previous_headings":"","what":"Demo 5: Causal Inference","title":"Custom Sampling Routines in StochTree","text":"show implement Bayesian Causal Forest (BCF) model Hahn, Murray, Carvalho (2020) using stochtree’s prototype API, including demoing non-trivial sampling step done R level.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"background","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Background","title":"Custom Sampling Routines in StochTree","text":"supervised learning case previous demo conceptually simple, motivate causal effect estimation task additional notation. Let yy refer continuous outcome interest, ZZ refer binary treatment, XX set covariates may influence YY, ZZ, . XX exhaustive set covariates influence ZZ YY, can specific YY terms causal model (see example Pearl (2009)) Y=F(Z,X,ϵY)\\begin{equation*} \\begin{aligned} Y &= F(Z, X, \\epsilon_Y) \\end{aligned} \\end{equation*} ϵY\\epsilon_Y outcome specific random noise FF function generates YY (many cases, FF can thought inverse CDF conditional XX ZZ). “potential outcomes” (see Imbens Rubin (2015)) can recovered Y1=F(1,X,ϵY)Y^1 = F(1, X, \\epsilon_Y) Y0=F(0,X,ϵY)Y^0 = F(0, X, \\epsilon_Y). causal outcome model can decomposed “mean” “error” terms Y=μ(X)+Zτ(X)+[η(X)+Zδ(X)]μ(X)=𝔼ϵY[F(0,X,ϵY)]τ(X)=𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]η(X)=F(0,X,ϵY)−𝔼ϵY[F(0,X,ϵY)]δ(X)=F(1,X,ϵY)−F(0,X,ϵY)−𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]\\begin{equation*} \\begin{aligned} Y &= \\mu(X) + Z\\tau(X) + \\left[\\eta(X) + Z\\delta(X)\\right]\\\\ \\mu(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\tau(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right]\\\\ \\eta(X) &= F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\delta(X) &= F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right] \\end{aligned} \\end{equation*} τ(X)\\tau(X) precisely conditional average treatment effect (CATE) estimand. Unfortunately, functional form FF unavailable analysis, τ(X)\\tau(X) derived. flexible, regularized nonparametrics enter picture, aim estimate μ(X)\\mu(X) τ(X)\\tau(X) data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"Demo 5: Causal Inference > Background","what":"Bayesian Causal Forest (BCF)","title":"Custom Sampling Routines in StochTree","text":"BCF estimates μ(X)\\mu(X) τ(X)\\tau(X) using separate BART forests term. Furthermore, rather rely common implicit coding ZZ 0 control observations 1 treated observations, consider coding control observations parameter b0b_0 treated observations parameter b1b_1. Placing N(0,1/2)N(0,1/2) prior bzb_z, essentially redefines outcome model y=μ(X)+τ(X)f(Z)+ϵf(Z)=b0(1−Z)+b1Zϵ∼N(0,σ2)b0,b1∼N(0,1/2)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) f(Z) + \\epsilon\\\\ f(Z) &= b_0(1-Z) + b_1 Z\\\\ \\epsilon &\\sim N\\left(0, \\sigma^2\\right)\\\\ b_0, b_1 &\\sim N\\left(0, 1/2\\right) \\end{aligned} \\end{equation*} Updating bzb_z requires additional Gibbs step, derive . Conditioning sampled forests μ\\mu τ\\tau, essentially regressing y−μ(Z)y - \\mu(Z) [(1−Z)τ(X),Zτ(X)]\\left[(1-Z)\\tau(X), Z\\tau(X)\\right] closed form posterior b0∣y,X,μ,τ∼N(syτ,0sττ,0+2σ2,σ2sττ,0+2σ2)b1∣y,X,μ,τ∼N(syτ,1sττ,1+2σ2,σ2sττ,1+2σ2)\\begin{equation*} \\begin{aligned} b_0 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,0}}{s_{\\tau\\tau,0} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,0} + 2\\sigma^2}\\right)\\\\ b_1 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,1}}{s_{\\tau\\tau,1} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,1} + 2\\sigma^2}\\right) \\end{aligned} \\end{equation*} syτ,z=∑:Zi=z(yi−μ(Xi))τ(Xi)s_{y\\tau,z} = \\sum_{: Z_i = z} (y_i - \\mu(X_i))\\tau(X_i) sττ,z=∑:Zi=zτ(Xi)τ(Xi)s_{\\tau\\tau,z} = \\sum_{: Z_i = z} \\tau(X_i)\\tau(X_i).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"simulated causal DGP mirrors nonlinear, heterogeneous treatment effect DGP presented Hahn, Murray, Carvalho (2020).","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Prepare run sampler (now must specify initial values b0b_0 b1b_1, choose -1/2 1/2 instead 0 1). Initialize R-level access C++ classes needed sample model Run grow--root sampler “warm-start” BART, also updating adaptive coding parameter b0b_0 b1b_1 Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"# Mu forest alpha_mu <- 0.95 beta_mu <- 2.0 min_samples_leaf_mu <- 5 max_depth_mu <- 10 num_trees_mu <- 250 cutpoint_grid_size_mu = 100 tau_init_mu = 1/num_trees_mu leaf_prior_scale_mu = matrix(c(tau_init_mu), ncol = 1) a_leaf_mu <- 3. b_leaf_mu <- var(resid)/(num_trees_mu) leaf_regression_mu <- F sigma_leaf_mu <- var(resid)/(num_trees_mu) current_leaf_scale_mu <- as.matrix(sigma_leaf_mu)  # Tau forest alpha_tau <- 0.25 beta_tau <- 3.0 min_samples_leaf_tau <- 5 max_depth_tau <- 10 num_trees_tau <- 50 cutpoint_grid_size_tau = 100 a_leaf_tau <- 3. b_leaf_tau <- var(resid)/(2*num_trees_tau) leaf_regression_tau <- T sigma_leaf_tau <- var(resid)/(2*num_trees_tau) current_leaf_scale_tau <- as.matrix(sigma_leaf_tau)  # Common parameters nu <- 3 sigma2hat <- (sigma(lm(resid~X)))^2 quantile_cutoff <- 0.9 if (is.null(lambda)) {     lambda <- (sigma2hat*qgamma(1-quantile_cutoff,nu))/nu } sigma2 <- sigma2hat current_sigma2 <- sigma2 # Sampling composition num_gfr <- 20 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc  # Sigma^2 samples global_var_samples <- rep(0, num_samples)  # Adaptive coding parameter samples b_0_samples <- rep(0, num_samples) b_1_samples <- rep(0, num_samples) b_0 <- -0.5 b_1 <- 0.5 current_b_0 <- b_0 current_b_1 <- b_1 tau_basis <- (1-Z)*current_b_0 + Z*current_b_1 # Data X_mu <- cbind(X, pi_x) X_tau <- X feature_types <- c(0,0,0,1,1) feature_types_mu <- as.integer(c(feature_types,0)) feature_types_tau <- as.integer(feature_types) variable_weights_mu = rep(1/ncol(X_mu), ncol(X_mu)) variable_weights_tau = rep(1/ncol(X_tau), ncol(X_tau)) forest_dataset_mu <- createForestDataset(X_mu) forest_dataset_tau <- createForestDataset(X_tau, tau_basis) outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures global_model_config <- createGlobalModelConfig(global_error_variance = current_sigma2) forest_model_config_mu <- createForestModelConfig(     feature_types = feature_types_mu, num_trees = num_trees_mu, num_features = ncol(X_mu),      num_observations = nrow(X_mu), variable_weights = variable_weights_mu, leaf_dimension = 1,      alpha = alpha_mu, beta = beta_mu, min_samples_leaf = min_samples_leaf_mu, max_depth = max_depth_mu,      leaf_model_type = 0, leaf_model_scale = current_leaf_scale_mu, cutpoint_grid_size = cutpoint_grid_size ) forest_model_mu <- createForestModel(forest_dataset_mu, forest_model_config_mu, global_model_config) forest_model_config_tau <- createForestModelConfig(     feature_types = feature_types_tau, num_trees = num_trees_tau, num_features = ncol(X_tau),      num_observations = nrow(X_tau), variable_weights = variable_weights_tau, leaf_dimension = 1,      alpha = alpha_tau, beta = beta_tau, min_samples_leaf = min_samples_leaf_tau, max_depth = max_depth_tau,      leaf_model_type = 1, leaf_model_scale = current_leaf_scale_tau,      cutpoint_grid_size = cutpoint_grid_size ) forest_model_tau <- createForestModel(forest_dataset_tau, forest_model_config_tau, global_model_config)  # Container of forest samples forest_samples_mu <- createForestSamples(num_trees_mu, 1, T) active_forest_mu <- createForest(num_trees_mu, 1, T) forest_samples_tau <- createForestSamples(num_trees_tau, 1, F) active_forest_tau <- createForest(num_trees_tau, 1, F)  # Initialize the leaves of each tree in the prognostic forest active_forest_mu$prepare_for_sampler(forest_dataset_mu, outcome, forest_model_mu, 0, mean(resid)) active_forest_mu$adjust_residual(forest_dataset_mu, outcome, forest_model_mu, F, F)  # Initialize the leaves of each tree in the treatment effect forest active_forest_tau$prepare_for_sampler(forest_dataset_tau, outcome, forest_model_tau, 1, 0.) active_forest_tau$adjust_residual(forest_dataset_tau, outcome, forest_model_tau, T, F) if (num_gfr > 0){     for (i in 1:num_gfr) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              forest_model_config_mu, global_model_config, keep_forest = T, gfr = T         )                  # Sample variance parameters (if requested)         current_sigma2 <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         global_var_samples[i] <- current_sigma2         global_model_config$update_global_error_variance(current_sigma2)          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              forest_model_config_tau, global_model_config, keep_forest = T, gfr = T         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         current_sigma2 <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_tau, rng, nu, lambda         )         global_var_samples[i] <- current_sigma2         global_model_config$update_global_error_variance(current_sigma2)     } } if (num_burnin + num_mcmc > 0) {     for (i in (num_gfr+1):num_samples) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              forest_model_config_mu, global_model_config, keep_forest = T, gfr = F         )                  # Sample variance parameters (if requested)         current_sigma2 <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         global_var_samples[i] <- current_sigma2         global_model_config$update_global_error_variance(current_sigma2)          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              forest_model_config_tau, global_model_config, keep_forest = T, gfr = F         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         current_sigma2 <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_tau, rng, nu, lambda         )         global_var_samples[i] <- current_sigma2         global_model_config$update_global_error_variance(current_sigma2)     } } # Forest predictions mu_hat <- forest_samples_mu$predict(forest_dataset_mu)*y_std + y_bar tau_hat_raw <- forest_samples_tau$predict_raw(forest_dataset_tau) tau_hat <- t(t(tau_hat_raw) * (b_1_samples - b_0_samples))*y_std y_hat <- mu_hat + tau_hat * as.numeric(Z)  # Global error variance sigma2_samples <- global_var_samples*(y_std^2)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect XBART results    Inspect warm start BART results    Inspect “adaptive coding” parameters b0b_0 b1b_1.","code":"plot(sigma2_samples[1:num_gfr], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,1:num_gfr]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,1:num_gfr]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,1:num_gfr]) - tau_x)^2) #> [1] 0.3264316 plot(sigma2_samples[(num_gfr+1):num_samples], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,(num_gfr+1):num_samples]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,(num_gfr+1):num_samples]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,(num_gfr+1):num_samples]) - tau_x)^2) #> [1] 0.4371387 plot(b_0_samples, col = \"blue\", ylab = \"Coding parameter draws\",       ylim = c(min(min(b_0_samples), min(b_1_samples)), max(max(b_0_samples), max(b_1_samples)))) points(b_1_samples, col = \"orange\") legend(\"topleft\", legend = c(\"b_0\", \"b_1\"), col = c(\"blue\", \"orange\"), pch = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Kernel Methods from Tree Ensembles in StochTree","text":"trained tree ensemble strong --sample performance admits natural motivation “distance” two samples: shared leaf membership. number leaves ensemble 1 ss (, tree 1 3 leaves, reserves numbers 1 - 3, turn tree 2 5 leaves, reserves numbers 4 - 8 label leaves, ). dataset nn observations, construct matrix WW follows:    Initialize WW matrix zeroes nn rows many columns leaves ensemble    Let s = 0    jjIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Let num_leaves number leaves tree jj       iiIN {1,…,n}\\left\\{1,\\dots,n\\right\\}:          Let k leaf tree jj maps observation ii          Set element Wi,k+s=1W_{,k+s} = 1       Let s = s + num_leaves sparse matrix WW matrix representation basis predictions ensemble (.e. integrating leaf parameters just analyzing leaf indices). ensemble mm trees, can determine proportion trees map observation leaf computing WWT/mW W^T / m. can form basis kernel function used Gaussian process regression, demonstrate . begin, load stochtree package tgp package serve point reference.","code":"library(stochtree) library(tgp) library(MASS) library(Matrix) library(mvtnorm)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-1-univariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Univariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"begin simulated example tgp package (Gramacy Taddy (2010)). data generating process (DGP) non-stationary single numeric covariate. define training set test set evaluate various approaches modeling sample outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data X_train <- seq(0,20,length=100) X_test <- seq(0,20,length=99) y_train <- (sin(pi*X_train/5) + 0.2*cos(4*pi*X_train/5)) * (X_train <= 9.6) lin_train <- X_train>9.6;  y_train[lin_train] <- -1 + X_train[lin_train]/10 y_train <- y_train + rnorm(length(y_train), sd=0.1) y_test <- (sin(pi*X_test/5) + 0.2*cos(4*pi*X_test/5)) * (X_test <= 9.6) lin_test <- X_test>9.6;  y_test[lin_test] <- -1 + X_test[lin_test]/10  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 0.0466081"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) colnames(X_train) <- colnames(X_test) <- \"x1\" mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 0.09391597"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-2-multivariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 2: Multivariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"proceed simulated “Friedman” dataset, implemented tgp.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data, add many \"noise variables\" n <- 100 friedman.df <- friedman.1.data(n=n) train_inds <- sort(sample(1:n, floor(0.8*n), replace = FALSE)) test_inds <- (1:n)[!((1:n) %in% train_inds)] X <- as.matrix(friedman.df)[,1:10] X <- cbind(X, matrix(runif(n*10), ncol = 10)) y <- as.matrix(friedman.df)[,12] + rnorm(n,0,1)*(sd(as.matrix(friedman.df)[,11])/2) X_train <- X[train_inds,] X_test <- X[test_inds,] y_train <- y[train_inds] y_test <- y[test_inds]  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 5.023593"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE use case BART kernel classical kriging perhaps unclear without empirical investigation, see later vignette kernel approach can beneficial causal inference applications.","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 5.801955"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean relatively simple covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 20 a_0 <- 1.5 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean complex covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_trees <- 20 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data (relatively simple) covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X2≥0 X2<0.25−2X2≥0.25 X2<0.52X2≥0.5 X2<0.756X2≥0.75 X2<1σ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data complex covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X4X2≥0 X2<0.25−2X4X2≥0.25 X2<0.52X4X2≥0.5 X2<0.756X4X2≥0.75 X2<1σ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6X_4 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2X_4 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2X_4 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6X_4 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6*X[,4]) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2*X[,4]) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2*X[,4]) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6*X[,4]) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-1-bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"","what":"Demo 1: Bayesian Causal Forest (BCF)","title":"Model Serialization in StochTree","text":"BCF models initially sampled constructed using bcf() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw modified version data generating process defined Hahn, Murray, Carvalho (2020). Sample BCF model.","code":"# Generate synthetic data n <- 1000 snr <- 2 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      mu_forest_params = mu_forest_params, tau_forest_params = tau_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BCF model disk.","code":"saveBCFModelToJsonFile(bcf_model, \"bcf.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BCF model disk. Check predictions align original model.","code":"bcf_model_reload <- createBCFModelFromJsonFile(\"bcf.json\") bcf_preds_reload <- predict(bcf_model_reload, X_train, Z_train, pi_train, rfx_group_ids_train, rfx_basis_train) plot(rowMeans(bcf_model$mu_hat_train), rowMeans(bcf_preds_reload$mu_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Prognostic forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$tau_hat_train), rowMeans(bcf_preds_reload$tau_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Treatment forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$y_hat_train), rowMeans(bcf_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Overall outcome\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-2-bart","dir":"Articles","previous_headings":"","what":"Demo 2: BART","title":"Model Serialization in StochTree","text":"BART models initially sampled constructed using bart() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw relatively straightforward heteroskedastic supervised learning DGP. Sample BART model.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 100,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BART model disk.","code":"saveBARTModelToJsonFile(bart_model, \"bart.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BART model disk. Check predictions align original model.","code":"bart_model_reload <- createBARTModelFromJsonFile(\"bart.json\") bart_preds_reload <- predict(bart_model_reload, X_train) plot(rowMeans(bart_model$y_hat_train), rowMeans(bart_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Mean Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bart_model$sigma_x_hat_train), rowMeans(bart_preds_reload$variance_forest_predictions),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Variance Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Mixing MCMC sampler perennial concern complex Bayesian models, BART exception. common way address concerns run multiple independent “chains” MCMC sampler, chain gets stuck different region posterior, combined samples attain better coverage full posterior. idea works classic “-root” MCMC sampler Chipman, George, McCulloch (2010), key insight Hahn (2023) XBART algorithm may used warm-start initialize multiple chains BART MCMC sampler. Operationally, two approaches implementation (setting num_gfr > 0 warm-start initialization desired), vignette demonstrate run multi-chain sampler sequentially parallel. begin, load stochtree necessary packages","code":"library(stochtree) library(foreach) library(doParallel) #> Loading required package: iterators #> Loading required package: parallel"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"data-simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Data Simulation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-sequentially","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains Sequentially","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Define high-level parameters, including number chains run number samples per chain. run 4 independent chains 5 warm-start iterations 100 MCMC iterations . Run sampler, storing resulting BART objects list Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare original ŷ\\hat{y} values","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 bart_models <- list() general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) for (i in 1:num_chains) {     bart_models[[i]] <- stochtree::bart(         X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, X_test = X_test,          leaf_basis_test = leaf_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,          general_params = general_params, mean_forest_params = mean_forest_params     ) } json_string_list <- list() for (i in 1:num_chains) {     json_string_list[[i]] <- saveBARTModelToJsonString(bart_models[[i]]) } combined_bart <- createBARTModelFromCombinedJsonString(json_string_list) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(bart_models[[i]]$y_hat_test),           rowMeans(yhat_combined[,inds_start:inds_end]),          xlab = \"original\", ylab = \"deserialized\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"use high-level parameters sequential demo. order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params   )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } #> Warning: executing %dopar% sequentially: no parallel backend registered stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"warmstarting-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Warmstarting Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"example, ran multiple parallel chains MCMC sampler starting “root” forest. Consider instead “warmstart” approach Hahn (2023), forests sampled using fast “grow--root” (GFR) algorithm several MCMC chains run using different GFR forests. use high-level parameters parallel demo. First, sample model using grow--root algorithm main R session several iterations (use forests see independent parallel chains moment). order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) xbart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = 0, num_mcmc = 0,      general_params = general_params, mean_forest_params = mean_forest_params ) xbart_model_string <- stochtree::saveBARTModelToJsonString(xbart_model) ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   bart_params <- list(sample_sigma_global = T, sample_sigma_leaf = T,                        num_trees_mean = num_trees, random_seed = random_seed)   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(       X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,        X_test = X_test, leaf_basis_test = leaf_basis_test,        num_gfr = 0, num_burnin = num_burnin, num_mcmc = num_mcmc,        general_params = general_params, mean_forest_params = mean_forest_params,        previous_model_json = xbart_model_string, previous_model_warmstart_sample_num = num_gfr - i + 1,    )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"“classic” BART model Chipman, George, McCulloch (2010) y=f(X)+ϵf(X)∼BART(α,β)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}\\left(\\alpha, \\beta\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}\\left(,b\\right) \\end{aligned} \\end{equation*} semiparametric, nonparametric tree ensemble f(X)f(X) homoskedastic error variance parameter σ2\\sigma^2. Note Chipman, George, McCulloch (2010), aa bb parameterized =ν2a = \\frac{\\nu}{2} b=νλ2b = \\frac{\\nu\\lambda}{2}.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"setting-priors-on-variance-parameters-in-stochtree","dir":"Articles","previous_headings":"","what":"Setting Priors on Variance Parameters in stochtree","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"default, stochtree employs Jeffreys’ prior σ2\\sigma^2σ2∝1σ2\\begin{equation*} \\begin{aligned} \\sigma^2 &\\propto \\frac{1}{\\sigma^2} \\end{aligned} \\end{equation*} corresponds improper prior =0a = 0 b=0b = 0. provide convenience functions users wishing set σ2\\sigma^2 prior Chipman, George, McCulloch (2010). case, ν\\nu set default 3 λ\\lambda calibrated follows: “overestimate,” σ̂2\\hat{\\sigma}^2, σ2\\sigma^2 obtained via simple linear regression yy XX λ\\lambda chosen ensure p(σ2<σ̂2)=qp(\\sigma^2 < \\hat{\\sigma}^2) = q value qq, typically set default value 0.9. done stochtree via calibrateInverseGammaErrorVariance function. Now run BART model variance parameterization Inspect --sample predictions model  Inspect posterior samples σ2\\sigma^2","code":"# Load library library(stochtree)  # Generate data n <- 500 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd)  # Test/train split test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]  # Calibrate the scale parameter for the variance term as in Chipman et al (2010) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y_train, X_train, nu = nu) general_params <- list(sigma2_global_shape = nu/2, sigma2_global_scale = (nu*lambda)/2) bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     num_gfr = 0, num_burnin = 1000, num_mcmc = 100,                     general_params = general_params) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(bart_model$sigma2_global_samples, ylab = \"sigma^2\", xlab = \"iteration\") abline(h = noise_sd^2, col = \"red\", lty = 3, lwd = 3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"demo-1-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Supervised Learning","title":"Deeper Dive on Sampled Forests in StochTree","text":"Generate sample data feature 10 “important” feature.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,10]) & (0.25 > X[,10])) * (-7.5) +      ((0.25 <= X[,10]) & (0.5 > X[,10])) * (-2.5) +      ((0.5 <= X[,10]) & (0.75 > X[,10])) * (2.5) +      ((0.75 <= X[,10]) & (1 > X[,10])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"sampling-and-analysis","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling and Analysis","title":"Deeper Dive on Sampled Forests in StochTree","text":"Run BART. Inspect MCMC samples   Check variable split count last GFR sample split counts appear relatively uniform across features, let’s dig deeper look individual trees, starting first tree last “grow--root” sample. tree single split “important” feature. Now, let’s look second tree. tree also splits important feature. see “later” trees splitting features, also note trees fitting outcome already residualized many “relevant splits” made trees 1 2. Now, let’s inspect first tree last GFR sample depth, following scikit-learn vignette","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 general_params <- list(keep_gfr = T) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params ) plot(bart_model$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) bart_model$mean_forests$get_forest_split_counts(10, p_x) #>  [1] 26 29 27 26 21 31 30 26 24 23 bart_model$mean_forests$get_aggregate_split_counts(p_x) #>  [1] 2104 2531 2605 2662 2378 2856 2734 2790 2841 3397 splits = bart_model$mean_forests$get_granular_split_counts(p_x) splits[10,1,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,2,] #>  [1] 0 0 0 0 0 0 0 0 0 2 splits[10,20,] #>  [1] 0 0 0 0 0 0 0 0 1 0 splits[10,30,] #>  [1] 0 0 0 0 1 0 0 0 0 0 forest_num <- 9 tree_num <- 0 nodes <- sort(bart_model$mean_forests$nodes(forest_num, tree_num)) for (nid in nodes) {     if (bart_model$mean_forests$is_leaf_node(forest_num, tree_num, nid)) {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         leaf_values <- bart_model$mean_forests$node_leaf_values(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a leaf node with value=\",              format(leaf_values, digits = 3), \"\\n\", sep = \"\")     } else {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         left <- bart_model$mean_forests$left_child_node(forest_num, tree_num, nid)         feature <- bart_model$mean_forests$node_split_index(forest_num, tree_num, nid)         threshold <- bart_model$mean_forests$node_split_threshold(forest_num, tree_num, nid)         right <- bart_model$mean_forests$right_child_node(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a split node, which tells us to go to node \",              left, \" if X[:, \", feature, \"] <= \", format(threshold, digits = 3),              \" else to node \", right, \"\\n\", sep = \"\")     } } #> node=0 is a split node, which tells us to go to node 1 if X[:, 9] <= 0.496 else to node 2 #>  node=1 is a leaf node with value=-0.27 #>  node=2 is a leaf node with value=0.311"},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Drew Herren. Author, maintainer. Richard Hahn. Author. Jared Murray. Author. Carlos Carvalho. Author. Jingyu . Author. stochtree contributors. Copyright holder.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herren D, Hahn R, Murray J, Carvalho C, J (2025). stochtree: Stochastic tree Ensembles (XBART BART) Supervised Learning Causal Inference. R package version 0.1.0, https://stochtree.ai.","code":"@Manual{,   title = {stochtree: Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference},   author = {Drew Herren and Richard Hahn and Jared Murray and Carlos Carvalho and Jingyu He},   year = {2025},   note = {R package version 0.1.0},   url = {https://stochtree.ai}, }"},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"stochtree-r-package","dir":"","previous_headings":"","what":"Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference","title":"Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference","text":"Software building stochastic tree ensembles (.e. BART, XBART) supervised learning causal inference.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference","text":"stochtree can installed CRAN via development version stochtree can installed github via","code":"install.package(\"stochtree\") remotes::install_github(\"StochasticTree/stochtree\", ref=\"r-dev\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — CppJson","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_ptr External pointer C++ nlohmann::json object num_forests Number forests nlohmann::json object forest_labels Names forest objects overall nlohmann::json object num_rfx Number random effects terms nlohman::json object rfx_container_labels Names rfx container objects overall nlohmann::json object rfx_mapper_labels Names rfx label mapper objects overall nlohmann::json object rfx_groupid_labels Names rfx group id objects overall nlohmann::json object","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"CppJson$new() CppJson$add_forest() CppJson$add_random_effects() CppJson$add_scalar() CppJson$add_integer() CppJson$add_boolean() CppJson$add_string() CppJson$add_vector() CppJson$add_integer_vector() CppJson$add_string_vector() CppJson$add_list() CppJson$add_string_list() CppJson$get_scalar() CppJson$get_integer() CppJson$get_boolean() CppJson$get_string() CppJson$get_vector() CppJson$get_integer_vector() CppJson$get_string_vector() CppJson$get_numeric_list() CppJson$get_string_list() CppJson$return_json_string() CppJson$save_file() CppJson$load_from_file() CppJson$load_from_string()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Create new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-forest-","dir":"Reference","previous_headings":"","what":"Method add_forest()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert forest container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_forest(forest_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"forest_samples ForestSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-random-effects-","dir":"Reference","previous_headings":"","what":"Method add_random_effects()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert random effects container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_random_effects(rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"rfx_samples RandomEffectSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-scalar-","dir":"Reference","previous_headings":"","what":"Method add_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_scalar(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-","dir":"Reference","previous_headings":"","what":"Method add_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Integer value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-boolean-","dir":"Reference","previous_headings":"","what":"Method add_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_boolean(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-","dir":"Reference","previous_headings":"","what":"Method add_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-vector-","dir":"Reference","previous_headings":"","what":"Method add_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-vector-","dir":"Reference","previous_headings":"","what":"Method add_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add array json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Character vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-list-","dir":"Reference","previous_headings":"","what":"Method add_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-list-","dir":"Reference","previous_headings":"","what":"Method add_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-scalar-","dir":"Reference","previous_headings":"","what":"Method get_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve scalar value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_scalar(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-","dir":"Reference","previous_headings":"","what":"Method get_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-boolean-","dir":"Reference","previous_headings":"","what":"Method get_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_boolean(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-","dir":"Reference","previous_headings":"","what":"Method get_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-vector-","dir":"Reference","previous_headings":"","what":"Method get_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-vector-","dir":"Reference","previous_headings":"","what":"Method get_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-vector-","dir":"Reference","previous_headings":"","what":"Method get_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve character vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-numeric-list-","dir":"Reference","previous_headings":"","what":"Method get_numeric_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list numeric vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_numeric_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-list-","dir":"Reference","previous_headings":"","what":"Method get_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list string vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-return-json-string-","dir":"Reference","previous_headings":"","what":"Method return_json_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert JSON object -memory string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$return_json_string()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-save-file-","dir":"Reference","previous_headings":"","what":"Method save_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Save json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$save_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-file-","dir":"Reference","previous_headings":"","what":"Method load_from_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-string-","dir":"Reference","previous_headings":"","what":"Method load_from_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_string(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Persists C++ random number generator throughout R session ensure reproducibility given random seed. seed provided, C++ random number generator initialized using std::random_device.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"rng_ptr External pointer C++ std::mt19937 class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"CppRNG$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Create new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"","code":"CppRNG$new(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores a single ensemble of decision trees (often treated as the ","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Wrapper around C++ tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_ptr External pointer C++ TreeEnsemble class internal_forest_is_empty Whether forest yet \"initialized\" predict function can called.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Forest$new() Forest$predict() Forest$predict_raw() Forest$set_root_leaves() Forest$prepare_for_sampler() Forest$adjust_residual() Forest$num_trees() Forest$leaf_dimension() Forest$is_constant_leaf() Forest$is_exponentiated() Forest$add_numeric_split_tree() Forest$get_tree_leaves() Forest$get_tree_split_counts() Forest$get_forest_split_counts() Forest$tree_max_depth() Forest$average_max_depth() Forest$is_empty()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Create new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"vector predictions many rows forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict \"raw\" leaf values (without multiplied basis) every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array vector (length number observations). case multivariate leaf regression, array matrix (number observations leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$set_root_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$adjust_residual(dataset, outcome, forest_model, requires_basis, add)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return number trees ensemble Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return output dimension trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return constant leaf status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return exponentiation status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$add_numeric_split_tree(   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_leaves(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable given tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_split_counts(tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_forest_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method tree_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum depth specific tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$tree_max_depth(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Tree index within forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-empty-","dir":"Reference","previous_headings":"","what":"Method is_empty()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest object created, \"empty\" sense none component trees leaves values. two ways \"initialize\" Forest object. First, set_root_leaves() method simply initializes every tree forest single node carrying (user-specified) leaf value. Second, prepare_for_sampler() method initializes every tree forest single node value also propagates information ForestModel object, must synchronized Forest forest sampler loop.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_empty()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"TRUE Forest yet initialized constant root value, FALSE otherwise forest already initialized / grown.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a forest — ForestDataset","title":"Dataset used to sample a forest — ForestDataset","text":"dataset consists three matrices / vectors: covariates, bases, variance weights. basis vector variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a forest — ForestDataset","text":"data_ptr External pointer C++ ForestDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a forest — ForestDataset","text":"ForestDataset$new() ForestDataset$update_basis() ForestDataset$num_observations() ForestDataset$num_covariates() ForestDataset$num_basis() ForestDataset$has_basis() ForestDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a forest — ForestDataset","text":"Create new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$new(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-update-basis-","dir":"Reference","previous_headings":"","what":"Method update_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Update basis matrix dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$update_basis(basis)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"basis Updated matrix bases used define leaf regression","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number observations ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-covariates-","dir":"Reference","previous_headings":"","what":"Method num_covariates()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number covariates ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_covariates()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Covariate count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-basis-","dir":"Reference","previous_headings":"","what":"Method num_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number bases ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Basis count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines and samples a forest model — ForestModel","title":"Class that defines and samples a forest model — ForestModel","text":"Hosts C++ data structures needed sample ensemble decision trees, exposes functionality run forest sampler (using either MCMC grow--root algorithm).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines and samples a forest model — ForestModel","text":"tracker_ptr External pointer C++ ForestTracker class tree_prior_ptr External pointer C++ TreePrior class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines and samples a forest model — ForestModel","text":"ForestModel$new() ForestModel$sample_one_iteration() ForestModel$propagate_basis_update() ForestModel$propagate_residual_update() ForestModel$update_alpha() ForestModel$update_beta() ForestModel$update_min_samples_leaf() ForestModel$update_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines and samples a forest model — ForestModel","text":"Create new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$new(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth = -1 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree can reach","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-sample-one-iteration-","dir":"Reference","previous_headings":"","what":"Method sample_one_iteration()","title":"Class that defines and samples a forest model — ForestModel","text":"Run single iteration forest sampling algorithm (MCMC GFR)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$sample_one_iteration(   forest_dataset,   residual,   forest_samples,   active_forest,   rng,   forest_model_config,   global_model_config,   keep_forest = T,   gfr = T )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset Dataset used sample forest residual Outcome used sample forest forest_samples Container forest samples active_forest \"Active\" forest updated sampler iteration rng Wrapper around C++ random number generator forest_model_config ForestModelConfig object containing forest model parameters settings global_model_config GlobalModelConfig object containing global model parameters settings keep_forest (Optional) Whether updated forest sample saved forest_samples. Default: TRUE. gfr (Optional) Whether forest sampled using \"grow--root\" (GFR) algorithm. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-basis-update-","dir":"Reference","previous_headings":"","what":"Method propagate_basis_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Propagates basis update (full/partial) residual iteratively () adding back previous prediction tree, (b) recomputing predictions tree (caching C++ side), (c) subtracting new predictions residual. useful cases basis (e.g. leaf regression) updated outside tree sampler (e.g. adaptive coding binary treatment BCF). basis updated, overall \"function\" represented tree model changed reflected residual next sampling loop run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_basis_update(dataset, outcome, active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions active_forest \"Active\" forest updated sampler iteration","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-residual-update-","dir":"Reference","previous_headings":"","what":"Method propagate_residual_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Update current state outcome (.e. partial residual) data subtracting current predictions tree. function run Outcome class's update_data method, overwrites partial residual entirely new stream outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_residual_update(residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"residual Outcome used sample forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Class that defines and samples a forest model — ForestModel","text":"Update alpha tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"alpha New value alpha used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Class that defines and samples a forest model — ForestModel","text":"Update beta tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"beta New value beta used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Class that defines and samples a forest model — ForestModel","text":"Update min_samples_leaf tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"min_samples_leaf New value min_samples_leaf used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Class that defines and samples a forest model — ForestModel","text":"Update max_depth tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"max_depth New value max_depth used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Object used to get / set parameters and other model configuration options for a forest model in the ","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"\"low-level\" stochtree interface enables high degreee sampler customization, users employ R wrappers around C++ objects like ForestDataset, Outcome, CppRng, ForestModel run Gibbs sampler BART model custom modifications. ForestModelConfig allows users specify / query parameters forest model wish run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) Vector specifying sampling probability p covariates ForestDataset Root node split probability tree prior Depth prior penalty tree prior Minimum number samples tree leaf Maximum depth tree ensemble model Scale parameter used Gaussian leaf models Shape parameter IG leaf models Scale parameter IG leaf models Number unique cutpoints consider","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"feature_types Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled num_features Number features training dataset num_observations Number observations training dataset leaf_dimension Dimension leaf model alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree ensemble model. Setting -1 enforce depth limits trees. leaf_model_type Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression) leaf_model_scale Scale parameter used Gaussian leaf models variable_weights Vector specifying sampling probability p covariates ForestDataset variance_forest_shape Shape parameter IG leaf models (applicable leaf_model_type = 3) variance_forest_scale Scale parameter IG leaf models (applicable leaf_model_type = 3) cutpoint_grid_size Number unique cutpoints consider Create new ForestModelConfig object.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"ForestModelConfig$new() ForestModelConfig$update_feature_types() ForestModelConfig$update_variable_weights() ForestModelConfig$update_alpha() ForestModelConfig$update_beta() ForestModelConfig$update_min_samples_leaf() ForestModelConfig$update_max_depth() ForestModelConfig$update_leaf_model_scale() ForestModelConfig$update_variance_forest_shape() ForestModelConfig$update_variance_forest_scale() ForestModelConfig$update_cutpoint_grid_size() ForestModelConfig$get_feature_types() ForestModelConfig$get_variable_weights() ForestModelConfig$get_alpha() ForestModelConfig$get_beta() ForestModelConfig$get_min_samples_leaf() ForestModelConfig$get_max_depth() ForestModelConfig$get_leaf_model_scale() ForestModelConfig$get_variance_forest_shape() ForestModelConfig$get_variance_forest_scale() ForestModelConfig$get_cutpoint_grid_size()","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$new(   feature_types = NULL,   num_trees = NULL,   num_features = NULL,   num_observations = NULL,   variable_weights = NULL,   leaf_dimension = 1,   alpha = 0.95,   beta = 2,   min_samples_leaf = 5,   max_depth = -1,   leaf_model_type = 1,   leaf_model_scale = NULL,   variance_forest_shape = 1,   variance_forest_scale = 1,   cutpoint_grid_size = 100 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"feature_types Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled num_features Number features training dataset num_observations Number observations training dataset variable_weights Vector specifying sampling probability p covariates ForestDataset leaf_dimension Dimension leaf model (default: 1) alpha Root node split probability tree prior (default: 0.95) beta Depth prior penalty tree prior (default: 2.0) min_samples_leaf Minimum number samples tree leaf (default: 5) max_depth Maximum depth tree ensemble model. Setting -1 enforce depth limits trees. Default: -1. leaf_model_type Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression). Default: 0. leaf_model_scale Scale parameter used Gaussian leaf models (can either scalar q x q matrix, q dimensionality basis >1 leaf_model_int = 2). Calibrated internally 1/num_trees, propagated along diagonal needed multivariate leaf models. variance_forest_shape Shape parameter IG leaf models (applicable leaf_model_type = 3). Default: 1. variance_forest_scale Scale parameter IG leaf models (applicable leaf_model_type = 3). Default: 1. cutpoint_grid_size Number unique cutpoints consider (default: 100)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"new ForestModelConfig object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-feature-types-","dir":"Reference","previous_headings":"","what":"Method update_feature_types()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update feature types","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_feature_types(feature_types)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"feature_types Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-variable-weights-","dir":"Reference","previous_headings":"","what":"Method update_variable_weights()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update variable weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_variable_weights(variable_weights)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"variable_weights Vector specifying sampling probability p covariates ForestDataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update root node split probability tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"alpha Root node split probability tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update depth prior penalty tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"beta Depth prior penalty tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update root node split probability tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"min_samples_leaf Minimum number samples tree leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update root node split probability tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"max_depth Maximum depth tree ensemble model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-leaf-model-scale-","dir":"Reference","previous_headings":"","what":"Method update_leaf_model_scale()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update scale parameter used Gaussian leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_leaf_model_scale(leaf_model_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"leaf_model_scale Scale parameter used Gaussian leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-variance-forest-shape-","dir":"Reference","previous_headings":"","what":"Method update_variance_forest_shape()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update shape parameter IG leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_variance_forest_shape(variance_forest_shape)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"variance_forest_shape Shape parameter IG leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-variance-forest-scale-","dir":"Reference","previous_headings":"","what":"Method update_variance_forest_scale()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update scale parameter IG leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_variance_forest_scale(variance_forest_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"variance_forest_scale Scale parameter IG leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-cutpoint-grid-size-","dir":"Reference","previous_headings":"","what":"Method update_cutpoint_grid_size()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update number unique cutpoints consider","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_cutpoint_grid_size(cutpoint_grid_size)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"cutpoint_grid_size Number unique cutpoints consider","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-feature-types-","dir":"Reference","previous_headings":"","what":"Method get_feature_types()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query feature types ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_feature_types()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-variable-weights-","dir":"Reference","previous_headings":"","what":"Method get_variable_weights()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query variable weights ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_variable_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-alpha-","dir":"Reference","previous_headings":"","what":"Method get_alpha()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query root node split probability tree prior ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_alpha()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-beta-","dir":"Reference","previous_headings":"","what":"Method get_beta()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query depth prior penalty tree prior ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_beta()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method get_min_samples_leaf()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query root node split probability tree prior ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_min_samples_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-max-depth-","dir":"Reference","previous_headings":"","what":"Method get_max_depth()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query root node split probability tree prior ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-leaf-model-scale-","dir":"Reference","previous_headings":"","what":"Method get_leaf_model_scale()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query scale parameter used Gaussian leaf models ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_leaf_model_scale()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-variance-forest-shape-","dir":"Reference","previous_headings":"","what":"Method get_variance_forest_shape()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query shape parameter IG leaf models ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_variance_forest_shape()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-variance-forest-scale-","dir":"Reference","previous_headings":"","what":"Method get_variance_forest_scale()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query scale parameter IG leaf models ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_variance_forest_scale()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-cutpoint-grid-size-","dir":"Reference","previous_headings":"","what":"Method get_cutpoint_grid_size()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query number unique cutpoints consider ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_cutpoint_grid_size()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — ForestSamples","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_container_ptr External pointer C++ ForestContainer class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ForestSamples$new() ForestSamples$load_from_json() ForestSamples$append_from_json() ForestSamples$load_from_json_string() ForestSamples$append_from_json_string() ForestSamples$predict() ForestSamples$predict_raw() ForestSamples$predict_raw_single_forest() ForestSamples$predict_raw_single_tree() ForestSamples$set_root_leaves() ForestSamples$prepare_for_sampler() ForestSamples$adjust_residual() ForestSamples$save_json() ForestSamples$load_json() ForestSamples$num_samples() ForestSamples$num_trees() ForestSamples$leaf_dimension() ForestSamples$is_constant_leaf() ForestSamples$is_exponentiated() ForestSamples$add_forest_with_constant_leaves() ForestSamples$add_numeric_split_tree() ForestSamples$get_tree_leaves() ForestSamples$get_tree_split_counts() ForestSamples$get_forest_split_counts() ForestSamples$get_aggregate_split_counts() ForestSamples$get_granular_split_counts() ForestSamples$ensemble_tree_max_depth() ForestSamples$average_ensemble_max_depth() ForestSamples$average_max_depth() ForestSamples$num_forest_leaves() ForestSamples$sum_leaves_squared() ForestSamples$is_leaf_node() ForestSamples$is_numeric_split_node() ForestSamples$is_categorical_split_node() ForestSamples$parent_node() ForestSamples$left_child_node() ForestSamples$right_child_node() ForestSamples$node_depth() ForestSamples$node_split_index() ForestSamples$node_split_threshold() ForestSamples$node_split_categories() ForestSamples$node_leaf_values() ForestSamples$num_nodes() ForestSamples$num_leaves() ForestSamples$num_leaf_parents() ForestSamples$num_split_nodes() ForestSamples$nodes() ForestSamples$leaves() ForestSamples$delete_sample()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns samples ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array two-dimensional (number observations, number forest samples). case multivariate leaf regression, array three-dimension (number observations, leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-forest-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_forest()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_forest(forest_dataset, forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-tree-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific tree specific forest every observation forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_tree(forest_dataset, forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$set_root_leaves(forest_num, leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest sample within container. leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$adjust_residual(   dataset,   outcome,   forest_model,   requires_basis,   forest_num,   add )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction forest_num Index forest used update residuals add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-save-json-","dir":"Reference","previous_headings":"","what":"Method save_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Store trees metadata ForestDataset class json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$save_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name output json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-json-","dir":"Reference","previous_headings":"","what":"Method load_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Load trees metadata ensemble json file. Note trees metadata already present ForestDataset class overwritten.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name model input json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-samples-","dir":"Reference","previous_headings":"","what":"Method num_samples()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number samples ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sample count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number trees ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return output dimension trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return constant leaf status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return exponentiation status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-forest-with-constant-leaves-","dir":"Reference","previous_headings":"","what":"Method add_forest_with_constant_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add new -root ensemble container, leaves set value / vector provided","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_forest_with_constant_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"leaf_value Value (vector values) initialize root nodes tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_numeric_split_tree(   forest_num,   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree split tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_split_counts(forest_num, tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_forest_split_counts(forest_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-aggregate-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_aggregate_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, aggregated across ensembles trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_aggregate_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-granular-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_granular_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, reported separately ensemble tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_granular_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-ensemble-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method ensemble_tree_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum depth specific tree specific ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$ensemble_tree_max_depth(ensemble_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number tree_num Tree index within ensemble ensemble_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-ensemble-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_ensemble_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_ensemble_max_depth(ensemble_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-forest-leaves-","dir":"Reference","previous_headings":"","what":"Method num_forest_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_forest_leaves(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count leaves ensemble stored forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-sum-leaves-squared-","dir":"Reference","previous_headings":"","what":"Method sum_leaves_squared()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sum squared (raw) leaf values given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$sum_leaves_squared(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-leaf-node-","dir":"Reference","previous_headings":"","what":"Method is_leaf_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_leaf_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node leaf, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-numeric-split-node-","dir":"Reference","previous_headings":"","what":"Method is_numeric_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples numeric split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_numeric_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node numeric split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-categorical-split-node-","dir":"Reference","previous_headings":"","what":"Method is_categorical_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples categorical split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_categorical_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node categorical split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-parent-node-","dir":"Reference","previous_headings":"","what":"Method parent_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Parent node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$parent_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID parent node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-left-child-node-","dir":"Reference","previous_headings":"","what":"Method left_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Left child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$left_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID left child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-right-child-node-","dir":"Reference","previous_headings":"","what":"Method right_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Right child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$right_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID right child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-depth-","dir":"Reference","previous_headings":"","what":"Method node_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Depth given node given tree given forest ForestSamples object, 0 depth root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_depth(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-index-","dir":"Reference","previous_headings":"","what":"Method node_split_index()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Split index given node given tree given forest ForestSamples object. Returns -1 node leaf.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_index(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-threshold-","dir":"Reference","previous_headings":"","what":"Method node_split_threshold()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defines numeric split given node given tree given forest ForestSamples object. Returns Inf node leaf categorical split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_threshold(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-categories-","dir":"Reference","previous_headings":"","what":"Method node_split_categories()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array category indices define categorical split given node given tree given forest ForestSamples object. Returns c(Inf) node leaf numeric split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_categories(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Categories defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-leaf-values-","dir":"Reference","previous_headings":"","what":"Method node_leaf_values()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node value(s) given node given tree given forest ForestSamples object. Values stale node split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_leaf_values(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Vector (often univariate) leaf values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-nodes-","dir":"Reference","previous_headings":"","what":"Method num_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaves-","dir":"Reference","previous_headings":"","what":"Method num_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaves","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaf-parents-","dir":"Reference","previous_headings":"","what":"Method num_leaf_parents()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaf parents (split nodes two leaves children) given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaf_parents(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaf parents","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-split-nodes-","dir":"Reference","previous_headings":"","what":"Method num_split_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number split nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_split_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree split nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-nodes-","dir":"Reference","previous_headings":"","what":"Method nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array node indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaves-","dir":"Reference","previous_headings":"","what":"Method leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array leaf indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices leaf nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Modify ForestSamples object removing forest sample indexed `forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$delete_sample(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Object used to get / set global parameters and other global model configuration options in the ","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"\"low-level\" stochtree interface enables high degreee sampler customization, users employ R wrappers around C++ objects like ForestDataset, Outcome, CppRng, ForestModel run Gibbs sampler BART model custom modifications. GlobalModelConfig allows users specify / query global parameters model wish run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"Global error variance parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"global_error_variance Global error variance parameter Create new GlobalModelConfig object.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"GlobalModelConfig$new() GlobalModelConfig$update_global_error_variance() GlobalModelConfig$get_global_error_variance()","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"","code":"GlobalModelConfig$new(global_error_variance = 1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"global_error_variance Global error variance parameter (default: 1.0)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"new GlobalModelConfig object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"method-update-global-error-variance-","dir":"Reference","previous_headings":"","what":"Method update_global_error_variance()","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"Update global error variance parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"","code":"GlobalModelConfig$update_global_error_variance(global_error_variance)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"global_error_variance Global error variance parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"method-get-global-error-variance-","dir":"Reference","previous_headings":"","what":"Method get_global_error_variance()","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"Query global error variance parameter GlobalModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"","code":"GlobalModelConfig$get_global_error_variance()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome / partial residual used to sample an additive model. — Outcome","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome class wrapper around vector (mutable) outcomes ML tasks (supervised learning, causal inference). additive tree ensemble sampled, outcome used sample specific model term \"partial residual\" consisting outcome minus predictions every model term (trees, group random effects, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"data_ptr External pointer C++ Outcome class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Outcome$new() Outcome$get_data() Outcome$add_vector() Outcome$subtract_vector() Outcome$update_data()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Create new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$new(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Extract raw data R underlying C++ object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$get_data()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"R vector containing (copy ) values Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data adding values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$add_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector added outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-subtract-vector-","dir":"Reference","previous_headings":"","what":"Method subtract_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data subtracting values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$subtract_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector subtracted outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-update-data-","dir":"Reference","previous_headings":"","what":"Method update_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data replacing element elements new_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$update_data(new_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new_vector Vector overwrite current data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps the ","title":"Class that wraps the ","text":"Coordinates various C++ random effects classes persists needed prediction / serialization","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps the ","text":"rfx_container_ptr External pointer C++ StochTree::RandomEffectsContainer class label_mapper_ptr External pointer C++ StochTree::LabelMapper class training_group_ids Unique vector group IDs training dataset","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps the ","text":"RandomEffectSamples$new() RandomEffectSamples$load_in_session() RandomEffectSamples$load_from_json() RandomEffectSamples$append_from_json() RandomEffectSamples$load_from_json_string() RandomEffectSamples$append_from_json_string() RandomEffectSamples$predict() RandomEffectSamples$extract_parameter_samples() RandomEffectSamples$delete_sample() RandomEffectSamples$extract_label_mapping()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps the ","text":"Create new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-in-session-","dir":"Reference","previous_headings":"","what":"Method load_in_session()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object \"-session\" R objects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_in_session(   num_components,   num_groups,   random_effects_tracker )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that wraps the ","text":"Predict random effects observation implied rfx_group_ids rfx_basis. random effects model \"intercept-\" rfx_basis vector ones size length(rfx_group_ids).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$predict(rfx_group_ids, rfx_basis = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"rfx_group_ids Indices random effects groups prediction set rfx_basis (Optional ) Basis used random effects prediction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"Matrix many rows observations provided many columns samples drawn model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-parameter-samples-","dir":"Reference","previous_headings":"","what":"Method extract_parameter_samples()","title":"Class that wraps the ","text":"Extract random effects parameters sampled. \"redundant parameterization\" Gelman et al (2008), includes four parameters: alpha (\"working parameter\" shared across every group), xi (\"group parameter\" sampled separately group), beta (product alpha xi, corresponds overall group-level random effects), sigma (group-independent prior variance component xi).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_parameter_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that wraps the ","text":"Modify RandomEffectsSamples object removing parameter samples index sample_num.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$delete_sample(sample_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"sample_num Index RFX sample removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-label-mapping-","dir":"Reference","previous_headings":"","what":"Method extract_label_mapping()","title":"Class that wraps the ","text":"Convert mapping group IDs random effect components indices C++ R native format","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_label_mapping()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List mapping group ID random effect components.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a random effects model — RandomEffectsDataset","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"dataset consists three matrices / vectors: group labels, bases, variance weights. Variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"data_ptr External pointer C++ RandomEffectsDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"RandomEffectsDataset$new() RandomEffectsDataset$num_observations() RandomEffectsDataset$has_group_labels() RandomEffectsDataset$has_basis() RandomEffectsDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Create new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$new(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Return number observations RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-group-labels-","dir":"Reference","previous_headings":"","what":"Method has_group_labels()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset group label indices","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_group_labels()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True group label vector loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"The core ","title":"The core ","text":"Stores current model state, prior parameters, procedures sampling conditional posterior parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The core ","text":"rfx_model_ptr External pointer C++ StochTree::RandomEffectsModel class num_groups Number groups random effects model num_components Number components (.e. dimension basis) random effects model","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The core ","text":"RandomEffectsModel$new() RandomEffectsModel$sample_random_effect() RandomEffectsModel$predict() RandomEffectsModel$set_working_parameter() RandomEffectsModel$set_group_parameters() RandomEffectsModel$set_working_parameter_cov() RandomEffectsModel$set_group_parameter_cov() RandomEffectsModel$set_variance_prior_shape() RandomEffectsModel$set_variance_prior_scale()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The core ","text":"Create new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$new(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-sample-random-effect-","dir":"Reference","previous_headings":"","what":"Method sample_random_effect()","title":"The core ","text":"Sample random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$sample_random_effect(   rfx_dataset,   residual,   rfx_tracker,   rfx_samples,   keep_sample,   global_variance,   rng )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset residual Object type Outcome rfx_tracker Object type RandomEffectsTracker rfx_samples Object type RandomEffectSamples keep_sample Whether sample retained rfx_samples. FALSE, state rfx_tracker updated, parameter values added sample container. Samples commonly discarded due burn-thinning. global_variance Scalar global variance parameter rng Object type CppRNG","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"The core ","text":"Predict (single sample ) random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$predict(rfx_dataset, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset rfx_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"Vector predictions size matching number observations rfx_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter()","title":"The core ","text":"Set value \"working parameter.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameters-","dir":"Reference","previous_headings":"","what":"Method set_group_parameters()","title":"The core ","text":"Set value \"group parameters.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameters(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter_cov()","title":"The core ","text":"Set value working parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_group_parameter_cov()","title":"The core ","text":"Set value group parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-shape-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_shape()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_shape(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-scale-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_scale()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_scale(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines a ","title":"Class that defines a ","text":"Stores mapping every observation group index, mapping group indices training sample observations available group, predictions observation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines a ","text":"rfx_tracker_ptr External pointer C++ StochTree::RandomEffectsTracker class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines a ","text":"RandomEffectsTracker$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines a ","text":"Create new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines a ","text":"","code":"RandomEffectsTracker$new(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines a ","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines a ","text":"new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the BART algorithm for supervised learning. — bart","title":"Run the BART algorithm for supervised learning. — bart","text":"Run BART algorithm supervised learning.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"bart(   X_train,   y_train,   leaf_basis_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   leaf_basis_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mean_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the BART algorithm for supervised learning. — bart","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). y_train Outcome modeled ensemble. leaf_basis_train (Optional) Bases used define regression model y ~ W leaf regression tree. default, BART assumes constant leaf node parameters, implicitly regressing constant basis ones (.e. y ~ 1). rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. leaf_basis_test (Optional) Test set bases used define \"sample\" evaluation data. test set optional, structure provided test set must match training set (.e. X_train leaf_basis_train provided, test set must consist X_test leaf_basis_test number columns). rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BART model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BART sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var(y_train), y_train possibly standardized outcome, set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mean_forest_params (Optional) list mean forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional mean model. Default: 200. num_trees = 0, conditional mean modeled using forest, function proceed num_trees > 0 variance forest. alpha Prior probability splitting tree depth 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, mean model. Default: 5. max_depth Maximum depth tree ensemble mean model. Default: 10. Can overridden -1 enforce depth limits trees. sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(leaf_basis_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. var_forest_leaf_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var(y_train))/num_trees, y_train possibly standardized outcome, set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the BART algorithm for supervised learning. — bart","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"Run Bayesian Causal Forest (BCF) algorithm regularized causal effect estimation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"bcf(   X_train,   Z_train,   y_train,   propensity_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   Z_test = NULL,   propensity_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mu_forest_params = list(),   tau_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). Z_train Vector (continuous binary) treatment assignments. y_train Outcome modeled ensemble. propensity_train (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. Z_test (Optional) Test set (continuous binary) treatment assignments. propensity_test (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BCF model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BCF sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var((y_train-mean(y_train))/sd(y_train)) set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). workaround wish provide custom weight propensity score include column X_train set propensity_covariate 'none' adjust keep_vars accordingly mu tau forests. propensity_covariate Whether include propensity score covariate either forests. Enter \"none\" neither, \"mu\" prognostic forest, \"tau\" treatment forest, \"\" forests. \"none\" propensity score provided, estimated (X_train, Z_train) using stochtree::bart(). Default: \"mu\". adaptive_coding Whether use \"adaptive coding\" scheme binary treatment variable coded manually (0,1) (-1,1) learned via parameters b_0 b_1 attach outcome model [b_0 (1-Z) + b_1 Z] tau(X). ignored Z binary. Default: TRUE. control_coding_init Initial value \"control\" group coding parameter. ignored Z binary. Default: -0.5. treated_coding_init Initial value \"treatment\" group coding parameter. ignored Z binary. Default: 0.5. rfx_prior_var Prior (diagonals ) covariance additive group-level random regression coefficients. Must vector length ncol(rfx_basis_train). Default: rep(1, ncol(rfx_basis_train)) random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mu_forest_params (Optional) list prognostic forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble prognostic forest. Default: 250. Must positive integer. alpha Prior probability splitting tree depth 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, prognostic forest. Default: 5. max_depth Maximum depth tree ensemble prognostic forest. Default: 10. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable prognostic forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. tau_forest_params (Optional) list treatment effect forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble treatment effect forest. Default: 50. Must positive integer. alpha Prior probability splitting tree depth 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.25. beta Exponent decreases split probabilities nodes depth > 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 3. min_samples_leaf Minimum allowable size leaf, terms training samples, treatment effect forest. Default: 5. max_depth Maximum depth tree ensemble treatment effect forest. Default: 5. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable treatment effect forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(Z_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. variance_forest_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var((y_train-mean(y_train))/sd(y_train)))/num_trees set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, X_test = X_test, Z_test = Z_test,                   propensity_test = pi_test) plot(rowMeans(bcf_model$mu_hat_test), mu_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(bcf_model$tau_hat_test), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Chipman, H., George, E., Hahn, R., McCulloch, R., Pratola, M. Sparapani, R. (2022). Bayesian Additive Regression Trees, Computational Approaches. Wiley StatsRef: Statistics Reference Online (eds N. Balakrishnan, T. Colton, B. Everitt, W. Piegorsch, F. Ruggeri J.L. Teugels). https://doi.org/10.1002/9781118445112.stat08288","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"calibrateInverseGammaErrorVariance(   y,   X,   W = NULL,   nu = 3,   quant = 0.9,   standardize = TRUE )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"y Outcome modeled using BART, BCF another nonparametric ensemble method. X Covariates used partition trees ensemble series ensemble. W (Optional) Basis used define \"leaf regression\" model decision tree. \"classic\" BART model assumes constant leaf parameter, equivalent \"leaf regression\" basis ones, though necessary pass vector ones, BART function. Default: NULL. nu shape parameter global error variance's IG prior. scale parameter Sparapani et al (2021) parameterization defined nu*lambda lambda output function. Default: 3. quant (Optional) Quantile inverse gamma prior distribution represented linear-regression-based overestimate sigma^2. Default: 0.9. standardize (Optional) Whether outcome standardized ((y-mean(y))/sd(y)) calibration lambda. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Value lambda determines scale parameter global error variance prior (sigma^2 ~ IG(nu,nu*lambda))","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) y <- 10*X[,1] - 20*X[,2] + rnorm(n) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y, X, nu = nu) sigma2hat <- mean(resid(lm(y~X))^2) mean(var(y)/rgamma(100000, nu, rate = nu*lambda) < sigma2hat) #> [1] 0.90021"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf indices — computeForestLeafIndices","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"Compute return vector representation forest's leaf predictions every observation dataset. vector \"row-major\" format can easily re-represented CSR sparse matrix: elements organized first n elements correspond leaf predictions n observations dataset first tree ensemble, next n elements correspond predictions second tree . \"data\" element corresponds uniquely mapped column index corresponds single leaf single tree (.e. tree 1 3 leaves, column indices range 0 2, tree 2's leaf indices begin 3, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"computeForestLeafIndices(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"List vectors. vector size num_obs * num_trees, num_obs = nrow(covariates) num_trees number trees relevant forest model_object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafIndices(bart_model, X, \"mean\") #>          [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>     [1,]    0    0    0    0    0    0    0    0    0     0 #>     [2,]    0    0    0    0    0    0    0    0    0     0 #>     [3,]    0    0    0    0    0    0    0    0    0     0 #>     [4,]    0    0    0    0    0    0    0    0    0     0 #>     [5,]    0    0    0    0    0    0    0    0    0     0 #>     [6,]    0    0    0    0    0    0    0    0    0     0 #>     [7,]    0    0    0    0    0    0    0    0    0     0 #>     [8,]    0    0    0    0    0    0    0    0    0     0 #>     [9,]    1    1    1    1    1    1    1    1    1     1 #>    [10,]    0    0    0    0    0    0    0    0    0     0 #>    [11,]    0    0    0    0    0    0    0    0    0     0 #>    [12,]    0    0    0    0    0    0    0    0    0     0 #>    [13,]    1    1    1    2    1    1    1    1    1     1 #>    [14,]    0    0    0    0    0    0    0    0    0     0 #>    [15,]    0    0    0    0    0    0    0    0    0     0 #>    [16,]    0    0    0    0    0    0    0    0    0     0 #>    [17,]    0    0    0    0    0    0    0    0    0     0 #>    [18,]    1    1    1    2    1    1    1    1    1     1 #>    [19,]    0    0    0    0    0    0    0    0    0     0 #>    [20,]    0    0    0    0    0    0    0    0    0     0 #>    [21,]    0    0    0    0    0    0    0    0    0     0 #>    [22,]    0    0    0    0    0    0    0    0    0     0 #>    [23,]    0    0    0    0    0    0    0    0    0     0 #>    [24,]    0    0    0    0    0    0    0    0    0     0 #>    [25,]    0    0    0    0    0    0    0    0    0     0 #>    [26,]    0    0    0    0    0    0    0    0    0     0 #>    [27,]    0    0    0    0    0    0    0    0    0     0 #>    [28,]    0    0    0    0    0    0    0    0    0     0 #>    [29,]    0    0    0    0    0    0    0    0    0     0 #>    [30,]    0    0    0    0    0    0    0    0    0     0 #>    [31,]    0    0    0    0    0    0    0    0    0     0 #>    [32,]    0    0    0    0    0    0    0    0    0     0 #>    [33,]    0    0    0    0    0    0    0    0    0     0 #>    [34,]    0    0    0    0    0    0    0    0    0     0 #>    [35,]    0    0    0    0    0    0    0    0    0     0 #>    [36,]    0    0    0    0    0    0    0    0    0     0 #>    [37,]    0    0    0    0    0    0    0    0    0     0 #>    [38,]    0    0    0    0    0    0    0    0    0     0 #>    [39,]    0    0    0    0    0    0    0    0    0     0 #>    [40,]    0    0    0    0    0    0    0    0    0     0 #>    [41,]    0    0    0    0    0    0    0    0    0     0 #>    [42,]    1    1    1    1    1    1    1    1    1     1 #>    [43,]    0    0    0    0    0    0    0    0    0     0 #>    [44,]    0    0    0    0    0    0    0    0    0     0 #>    [45,]    0    0    0    0    0    0    0    0    0     0 #>    [46,]    0    0    0    0    0    0    0    0    0     0 #>    [47,]    0    0    0    0    0    0    0    0    0     0 #>    [48,]    0    0    0    0    0    0    0    0    0     0 #>    [49,]    0    0    0    0    0    0    0    0    0     0 #>    [50,]    0    0    0    0    0    0    0    0    0     0 #>    [51,]    1    1    1    2    1    1    1    1    1     1 #>    [52,]    0    0    0    0    0    0    0    0    0     0 #>    [53,]    1    1    1    1    1    1    1    1    1     1 #>    [54,]    0    0    0    0    0    0    0    0    0     0 #>    [55,]    0    0    0    0    0    0    0    0    0     0 #>    [56,]    0    0    0    0    0    0    0    0    0     0 #>    [57,]    0    0    0    0    0    0    0    0    0     0 #>    [58,]    0    0    0    0    0    0    0    0    0     0 #>    [59,]    0    0    0    0    0    0    0    0    0     0 #>    [60,]    0    0    0    0    0    0    0    0    0     0 #>    [61,]    0    0    0    0    0    0    0    0    0     0 #>    [62,]    0    0    0    0    0    0    0    0    0     0 #>    [63,]    0    0    0    0    0    0    0    0    0     0 #>    [64,]    0    0    0    0    0    0    0    0    0     0 #>    [65,]    1    1    1    1    1    1    1    1    1     1 #>    [66,]    0    0    0    0    0    0    0    0    0     0 #>    [67,]    0    0    0    0    0    0    0    0    0     0 #>    [68,]    0    0    0    0    0    0    0    0    0     0 #>    [69,]    0    0    0    0    0    0    0    0    0     0 #>    [70,]    0    0    0    0    0    0    0    0    0     0 #>    [71,]    0    0    0    0    0    0    0    0    0     0 #>    [72,]    0    0    0    0    0    0    0    0    0     0 #>    [73,]    0    0    0    0    0    0    0    0    0     0 #>    [74,]    0    0    0    0    0    0    0    0    0     0 #>    [75,]    0    0    0    0    0    0    0    0    0     0 #>    [76,]    0    0    0    0    0    0    0    0    0     0 #>    [77,]    0    0    0    0    0    0    0    0    0     0 #>    [78,]    0    0    0    0    0    0    0    0    0     0 #>    [79,]    1    1    1    2    1    1    1    1    1     1 #>    [80,]    0    0    0    0    0    0    0    0    0     0 #>    [81,]    0    0    0    0    0    0    0    0    0     0 #>    [82,]    1    1    1    1    1    1    1    1    1     1 #>    [83,]    0    0    0    0    0    0    0    0    0     0 #>    [84,]    1    1    1    1    1    1    1    1    1     1 #>    [85,]    0    0    0    0    0    0    0    0    0     0 #>    [86,]    0    0    0    0    0    0    0    0    0     0 #>    [87,]    0    0    0    0    0    0    0    0    0     0 #>    [88,]    0    0    0    0    0    0    0    0    0     0 #>    [89,]    0    0    0    0    0    0    0    0    0     0 #>    [90,]    0    0    0    0    0    0    0    0    0     0 #>    [91,]    1    1    1    2    1    1    1    1    1     1 #>    [92,]    0    0    0    0    0    0    0    0    0     0 #>    [93,]    1    1    1    1    1    1    1    1    1     1 #>    [94,]    1    1    1    1    1    1    1    1    1     1 #>    [95,]    0    0    0    0    0    0    0    0    0     0 #>    [96,]    0    0    0    0    0    0    0    0    0     0 #>    [97,]    0    0    0    0    0    0    0    0    0     0 #>    [98,]    0    0    0    0    0    0    0    0    0     0 #>    [99,]    0    0    0    0    0    0    0    0    0     0 #>   [100,]    0    0    0    0    0    0    0    0    0     0 #>   [101,]    2    2    2    3    2    2    2    2    2     2 #>   [102,]    3    3    3    4    3    3    3    3    3     3 #>   [103,]    2    2    2    3    2    2    2    2    2     2 #>   [104,]    3    3    3    4    3    3    3    3    3     3 #>   [105,]    3    3    3    4    3    3    3    3    3     3 #>   [106,]    2    2    2    3    2    2    2    2    2     2 #>   [107,]    3    3    3    4    3    3    3    3    3     3 #>   [108,]    3    3    3    4    3    3    3    3    3     3 #>   [109,]    3    3    3    4    3    3    3    3    3     3 #>   [110,]    3    3    3    4    3    3    3    3    3     3 #>   [111,]    2    2    2    3    2    2    2    2    2     2 #>   [112,]    3    3    3    4    3    3    3    3    3     3 #>   [113,]    3    3    3    4    3    3    3    3    3     3 #>   [114,]    3    3    3    4    3    3    3    3    3     3 #>   [115,]    3    3    3    4    3    3    3    3    3     3 #>   [116,]    2    2    2    3    2    2    2    2    2     2 #>   [117,]    3    3    3    4    3    3    3    3    3     3 #>   [118,]    3    3    3    4    3    3    3    3    3     3 #>   [119,]    2    2    2    3    2    2    2    2    2     2 #>   [120,]    3    3    3    4    3    3    3    3    3     3 #>   [121,]    3    3    3    4    3    3    3    3    3     3 #>   [122,]    3    3    3    4    3    3    3    3    3     3 #>   [123,]    3    3    3    4    3    3    3    3    3     3 #>   [124,]    3    3    3    4    3    3    3    3    3     3 #>   [125,]    3    3    3    4    3    3    3    3    3     3 #>   [126,]    3    3    3    4    3    3    3    3    3     3 #>   [127,]    3    3    3    4    3    3    3    3    3     3 #>   [128,]    2    2    2    3    2    2    2    2    2     2 #>   [129,]    3    3    3    4    3    3    3    3    3     3 #>   [130,]    3    3    3    4    3    3    3    3    3     3 #>   [131,]    3    3    3    4    3    3    3    3    3     3 #>   [132,]    3    3    3    4    3    3    3    3    3     3 #>   [133,]    3    3    3    4    3    3    3    3    3     3 #>   [134,]    2    2    2    3    2    2    2    2    2     2 #>   [135,]    2    2    2    3    2    2    2    2    2     2 #>   [136,]    3    3    3    4    3    3    3    3    3     3 #>   [137,]    2    2    2    3    2    2    2    2    2     2 #>   [138,]    2    2    2    3    2    2    2    2    2     2 #>   [139,]    3    3    3    4    3    3    3    3    3     3 #>   [140,]    3    3    3    4    3    3    3    3    3     3 #>   [141,]    3    3    3    4    3    3    3    3    3     3 #>   [142,]    3    3    3    4    3    3    3    3    3     3 #>   [143,]    3    3    3    4    3    3    3    3    3     3 #>   [144,]    3    3    3    4    3    3    3    3    3     3 #>   [145,]    2    2    2    3    2    2    2    2    2     2 #>   [146,]    3    3    3    4    3    3    3    3    3     3 #>   [147,]    3    3    3    4    3    3    3    3    3     3 #>   [148,]    3    3    3    4    3    3    3    3    3     3 #>   [149,]    2    2    2    3    2    2    2    2    2     2 #>   [150,]    3    3    3    4    3    3    3    3    3     3 #>   [151,]    3    3    3    4    3    3    3    3    3     3 #>   [152,]    2    2    2    3    2    2    2    2    2     2 #>   [153,]    3    3    3    4    3    3    3    3    3     3 #>   [154,]    3    3    3    4    3    3    3    3    3     3 #>   [155,]    3    3    3    4    3    3    3    3    3     3 #>   [156,]    3    3    3    4    3    3    3    3    3     3 #>   [157,]    3    3    3    4    3    3    3    3    3     3 #>   [158,]    3    3    3    4    3    3    3    3    3     3 #>   [159,]    3    3    3    4    3    3    3    3    3     3 #>   [160,]    3    3    3    4    3    3    3    3    3     3 #>   [161,]    3    3    3    4    3    3    3    3    3     3 #>   [162,]    3    3    3    4    3    3    3    3    3     3 #>   [163,]    3    3    3    4    3    3    3    3    3     3 #>   [164,]    2    2    2    3    2    2    2    2    2     2 #>   [165,]    3    3    3    4    3    3    3    3    3     3 #>   [166,]    3    3    3    4    3    3    3    3    3     3 #>   [167,]    3    3    3    4    3    3    3    3    3     3 #>   [168,]    2    2    2    3    2    2    2    2    2     2 #>   [169,]    3    3    3    4    3    3    3    3    3     3 #>   [170,]    3    3    3    4    3    3    3    3    3     3 #>   [171,]    3    3    3    4    3    3    3    3    3     3 #>   [172,]    2    2    2    3    2    2    2    2    2     2 #>   [173,]    2    2    2    3    2    2    2    2    2     2 #>   [174,]    3    3    3    4    3    3    3    3    3     3 #>   [175,]    3    3    3    4    3    3    3    3    3     3 #>   [176,]    3    3    3    4    3    3    3    3    3     3 #>   [177,]    2    2    2    3    2    2    2    2    2     2 #>   [178,]    3    3    3    4    3    3    3    3    3     3 #>   [179,]    3    3    3    4    3    3    3    3    3     3 #>   [180,]    3    3    3    4    3    3    3    3    3     3 #>   [181,]    3    3    3    4    3    3    3    3    3     3 #>   [182,]    3    3    3    4    3    3    3    3    3     3 #>   [183,]    3    3    3    4    3    3    3    3    3     3 #>   [184,]    3    3    3    4    3    3    3    3    3     3 #>   [185,]    3    3    3    4    3    3    3    3    3     3 #>   [186,]    3    3    3    4    3    3    3    3    3     3 #>   [187,]    3    3    3    4    3    3    3    3    3     3 #>   [188,]    3    3    3    4    3    3    3    3    3     3 #>   [189,]    3    3    3    4    3    3    3    3    3     3 #>   [190,]    3    3    3    4    3    3    3    3    3     3 #>   [191,]    3    3    3    4    3    3    3    3    3     3 #>   [192,]    3    3    3    4    3    3    3    3    3     3 #>   [193,]    3    3    3    4    3    3    3    3    3     3 #>   [194,]    2    2    2    3    2    2    2    2    2     2 #>   [195,]    3    3    3    4    3    3    3    3    3     3 #>   [196,]    2    2    2    3    2    2    2    2    2     2 #>   [197,]    2    2    2    3    2    2    2    2    2     2 #>   [198,]    3    3    3    4    3    3    3    3    3     3 #>   [199,]    3    3    3    4    3    3    3    3    3     3 #>   [200,]    2    2    2    3    2    2    2    2    2     2 #>   [201,]    4    4    4    5    4    4    4    4    4     4 #>   [202,]    4    4    4    5    4    4    4    4    4     4 #>   [203,]    4    4    4    5    4    4    4    4    4     4 #>   [204,]    5    5    5    6    5    5    5    5    5     5 #>   [205,]    4    4    4    5    4    4    4    4    4     4 #>   [206,]    4    4    4    5    4    4    4    4    4     4 #>   [207,]    4    4    4    5    4    4    4    4    4     4 #>   [208,]    4    4    4    5    4    4    4    4    4     4 #>   [209,]    4    4    4    5    4    4    4    4    4     4 #>   [210,]    5    5    5    6    5    5    5    5    5     5 #>   [211,]    4    4    4    5    4    4    4    4    4     4 #>   [212,]    4    4    4    5    4    4    4    4    4     4 #>   [213,]    4    4    4    5    4    4    4    4    4     4 #>   [214,]    4    4    4    5    4    4    4    4    4     4 #>   [215,]    4    4    4    5    4    4    4    4    4     4 #>   [216,]    4    4    4    5    4    4    4    4    4     4 #>   [217,]    4    4    4    5    4    4    4    4    4     4 #>   [218,]    5    5    5    6    5    5    5    5    5     5 #>   [219,]    4    4    4    5    4    4    4    4    4     4 #>   [220,]    4    4    4    5    4    4    4    4    4     4 #>   [221,]    5    5    5    6    5    5    5    5    5     5 #>   [222,]    4    4    4    5    4    4    4    4    4     4 #>   [223,]    4    4    4    5    4    4    4    4    4     4 #>   [224,]    4    4    4    5    4    4    4    4    4     4 #>   [225,]    5    5    5    6    5    5    5    5    5     5 #>   [226,]    4    4    4    5    4    4    4    4    4     4 #>   [227,]    4    4    4    5    4    4    4    4    4     4 #>   [228,]    4    4    4    5    4    4    4    4    4     4 #>   [229,]    4    4    4    5    4    4    4    4    4     4 #>   [230,]    4    4    4    5    4    4    4    4    4     4 #>   [231,]    4    4    4    5    4    4    4    4    4     4 #>   [232,]    4    4    4    5    4    4    4    4    4     4 #>   [233,]    4    4    4    5    4    4    4    4    4     4 #>   [234,]    4    4    4    5    4    4    4    4    4     4 #>   [235,]    4    4    4    5    4    4    4    4    4     4 #>   [236,]    4    4    4    5    4    4    4    4    4     4 #>   [237,]    4    4    4    5    4    4    4    4    4     4 #>   [238,]    4    4    4    5    4    4    4    4    4     4 #>   [239,]    5    5    5    6    5    5    5    5    5     5 #>   [240,]    4    4    4    5    4    4    4    4    4     4 #>   [241,]    4    4    4    5    4    4    4    4    4     4 #>   [242,]    4    4    4    5    4    4    4    4    4     4 #>   [243,]    5    5    5    6    5    5    5    5    5     5 #>   [244,]    4    4    4    5    4    4    4    4    4     4 #>   [245,]    5    5    5    6    5    5    5    5    5     5 #>   [246,]    4    4    4    5    4    4    4    4    4     4 #>   [247,]    4    4    4    5    4    4    4    4    4     4 #>   [248,]    4    4    4    5    4    4    4    4    4     4 #>   [249,]    4    4    4    5    4    4    4    4    4     4 #>   [250,]    4    4    4    5    4    4    4    4    4     4 #>   [251,]    4    4    4    5    4    4    4    4    4     4 #>   [252,]    4    4    4    5    4    4    4    4    4     4 #>   [253,]    5    5    5    6    5    5    5    5    5     5 #>   [254,]    4    4    4    5    4    4    4    4    4     4 #>   [255,]    4    4    4    5    4    4    4    4    4     4 #>   [256,]    4    4    4    5    4    4    4    4    4     4 #>   [257,]    4    4    4    5    4    4    4    4    4     4 #>   [258,]    4    4    4    5    4    4    4    4    4     4 #>   [259,]    4    4    4    5    4    4    4    4    4     4 #>   [260,]    4    4    4    5    4    4    4    4    4     4 #>   [261,]    4    4    4    5    4    4    4    4    4     4 #>   [262,]    4    4    4    5    4    4    4    4    4     4 #>   [263,]    4    4    4    5    4    4    4    4    4     4 #>   [264,]    4    4    4    5    4    4    4    4    4     4 #>   [265,]    4    4    4    5    4    4    4    4    4     4 #>   [266,]    4    4    4    5    4    4    4    4    4     4 #>   [267,]    4    4    4    5    4    4    4    4    4     4 #>   [268,]    4    4    4    5    4    4    4    4    4     4 #>   [269,]    4    4    4    5    4    4    4    4    4     4 #>   [270,]    4    4    4    5    4    4    4    4    4     4 #>   [271,]    4    4    4    5    4    4    4    4    4     4 #>   [272,]    5    5    5    6    5    5    5    5    5     5 #>   [273,]    5    5    5    6    5    5    5    5    5     5 #>   [274,]    5    5    5    6    5    5    5    5    5     5 #>   [275,]    5    5    5    6    5    5    5    5    5     5 #>   [276,]    5    5    5    6    5    5    5    5    5     5 #>   [277,]    5    5    5    6    5    5    5    5    5     5 #>   [278,]    4    4    4    5    4    4    4    4    4     4 #>   [279,]    4    4    4    5    4    4    4    4    4     4 #>   [280,]    4    4    4    5    4    4    4    4    4     4 #>   [281,]    4    4    4    5    4    4    4    4    4     4 #>   [282,]    4    4    4    5    4    4    4    4    4     4 #>   [283,]    4    4    4    5    4    4    4    4    4     4 #>   [284,]    5    5    5    6    5    5    5    5    5     5 #>   [285,]    4    4    4    5    4    4    4    4    4     4 #>   [286,]    4    4    4    5    4    4    4    4    4     4 #>   [287,]    4    4    4    5    4    4    4    4    4     4 #>   [288,]    4    4    4    5    4    4    4    4    4     4 #>   [289,]    4    4    4    5    4    4    4    4    4     4 #>   [290,]    4    4    4    5    4    4    4    4    4     4 #>   [291,]    4    4    4    5    4    4    4    4    4     4 #>   [292,]    4    4    4    5    4    4    4    4    4     4 #>   [293,]    4    4    4    5    4    4    4    4    4     4 #>   [294,]    5    5    5    6    5    5    5    5    5     5 #>   [295,]    5    5    5    6    5    5    5    5    5     5 #>   [296,]    4    4    4    5    4    4    4    4    4     4 #>   [297,]    4    4    4    5    4    4    4    4    4     4 #>   [298,]    4    4    4    5    4    4    4    4    4     4 #>   [299,]    4    4    4    5    4    4    4    4    4     4 #>   [300,]    4    4    4    5    4    4    4    4    4     4 #>   [301,]    7    7    7    8    8    8    8    8    7     7 #>   [302,]    6    6    6    7    6    6    6    6    6     6 #>   [303,]    6    6    6    7    6    6    6    6    6     6 #>   [304,]    6    6    6    7    6    6    6    6    6     6 #>   [305,]    7    7    7    8    7    7    7    7    7     7 #>   [306,]    6    6    6    7    6    6    6    6    6     6 #>   [307,]    6    6    6    7    6    6    6    6    6     6 #>   [308,]    6    6    6    7    6    6    6    6    6     6 #>   [309,]    6    6    6    7    6    6    6    6    6     6 #>   [310,]    7    7    7    8    7    7    7    7    7     7 #>   [311,]    7    7    7    8    7    7    7    7    7     7 #>   [312,]    7    7    7    8    7    7    7    7    7     7 #>   [313,]    6    6    6    7    6    6    6    6    6     6 #>   [314,]    7    7    7    8    8    8    8    8    7     7 #>   [315,]    7    7    7    8    8    8    8    8    7     7 #>   [316,]    6    6    6    7    6    6    6    6    6     6 #>   [317,]    7    7    7    8    8    8    8    8    7     7 #>   [318,]    7    7    7    8    7    7    7    7    7     7 #>   [319,]    6    6    6    7    6    6    6    6    6     6 #>   [320,]    6    6    6    7    6    6    6    6    6     6 #>   [321,]    6    6    6    7    6    6    6    6    6     6 #>   [322,]    7    7    7    8    7    7    7    7    7     7 #>   [323,]    6    6    6    7    6    6    6    6    6     6 #>   [324,]    6    6    6    7    6    6    6    6    6     6 #>   [325,]    6    6    6    7    6    6    6    6    6     6 #>   [326,]    7    7    7    8    7    7    7    7    7     7 #>   [327,]    7    7    7    8    7    7    7    7    7     7 #>   [328,]    6    6    6    7    6    6    6    6    6     6 #>   [329,]    6    6    6    7    6    6    6    6    6     6 #>   [330,]    6    6    6    7    6    6    6    6    6     6 #>   [331,]    7    7    7    8    7    7    7    7    7     7 #>   [332,]    7    7    7    8    7    7    7    7    7     7 #>   [333,]    6    6    6    7    6    6    6    6    6     6 #>   [334,]    6    6    6    7    6    6    6    6    6     6 #>   [335,]    6    6    6    7    6    6    6    6    6     6 #>   [336,]    6    6    6    7    6    6    6    6    6     6 #>   [337,]    6    6    6    7    6    6    6    6    6     6 #>   [338,]    7    7    7    8    7    7    7    7    7     7 #>   [339,]    6    6    6    7    6    6    6    6    6     6 #>   [340,]    6    6    6    7    6    6    6    6    6     6 #>   [341,]    6    6    6    7    6    6    6    6    6     6 #>   [342,]    6    6    6    7    6    6    6    6    6     6 #>   [343,]    7    7    7    8    7    7    7    7    7     7 #>   [344,]    6    6    6    7    6    6    6    6    6     6 #>   [345,]    6    6    6    7    6    6    6    6    6     6 #>   [346,]    6    6    6    7    6    6    6    6    6     6 #>   [347,]    7    7    7    8    7    7    7    7    7     7 #>   [348,]    6    6    6    7    6    6    6    6    6     6 #>   [349,]    6    6    6    7    6    6    6    6    6     6 #>   [350,]    6    6    6    7    6    6    6    6    6     6 #>   [351,]    6    6    6    7    6    6    6    6    6     6 #>   [352,]    7    7    7    8    7    7    7    7    7     7 #>   [353,]    6    6    6    7    6    6    6    6    6     6 #>   [354,]    6    6    6    7    6    6    6    6    6     6 #>   [355,]    6    6    6    7    6    6    6    6    6     6 #>   [356,]    6    6    6    7    6    6    6    6    6     6 #>   [357,]    6    6    6    7    6    6    6    6    6     6 #>   [358,]    7    7    7    8    7    7    7    7    7     7 #>   [359,]    7    7    7    8    8    8    8    8    7     7 #>   [360,]    6    6    6    7    6    6    6    6    6     6 #>   [361,]    7    7    7    8    8    8    8    8    7     7 #>   [362,]    6    6    6    7    6    6    6    6    6     6 #>   [363,]    6    6    6    7    6    6    6    6    6     6 #>   [364,]    6    6    6    7    6    6    6    6    6     6 #>   [365,]    6    6    6    7    6    6    6    6    6     6 #>   [366,]    7    7    7    8    7    7    7    7    7     7 #>   [367,]    6    6    6    7    6    6    6    6    6     6 #>   [368,]    6    6    6    7    6    6    6    6    6     6 #>   [369,]    6    6    6    7    6    6    6    6    6     6 #>   [370,]    7    7    7    8    8    8    8    8    7     7 #>   [371,]    7    7    7    8    7    7    7    7    7     7 #>   [372,]    6    6    6    7    6    6    6    6    6     6 #>   [373,]    6    6    6    7    6    6    6    6    6     6 #>   [374,]    6    6    6    7    6    6    6    6    6     6 #>   [375,]    7    7    7    8    7    7    7    7    7     7 #>   [376,]    6    6    6    7    6    6    6    6    6     6 #>   [377,]    7    7    7    8    7    7    7    7    7     7 #>   [378,]    6    6    6    7    6    6    6    6    6     6 #>   [379,]    7    7    7    8    7    7    7    7    7     7 #>   [380,]    6    6    6    7    6    6    6    6    6     6 #>   [381,]    6    6    6    7    6    6    6    6    6     6 #>   [382,]    6    6    6    7    6    6    6    6    6     6 #>   [383,]    6    6    6    7    6    6    6    6    6     6 #>   [384,]    6    6    6    7    6    6    6    6    6     6 #>   [385,]    6    6    6    7    6    6    6    6    6     6 #>   [386,]    6    6    6    7    6    6    6    6    6     6 #>   [387,]    7    7    7    8    7    7    7    7    7     7 #>   [388,]    6    6    6    7    6    6    6    6    6     6 #>   [389,]    6    6    6    7    6    6    6    6    6     6 #>   [390,]    7    7    7    8    7    7    7    7    7     7 #>   [391,]    7    7    7    8    7    7    7    7    7     7 #>   [392,]    7    7    7    8    7    7    7    7    7     7 #>   [393,]    6    6    6    7    6    6    6    6    6     6 #>   [394,]    6    6    6    7    6    6    6    6    6     6 #>   [395,]    7    7    7    8    7    7    7    7    7     7 #>   [396,]    6    6    6    7    6    6    6    6    6     6 #>   [397,]    6    6    6    7    6    6    6    6    6     6 #>   [398,]    6    6    6    7    6    6    6    6    6     6 #>   [399,]    6    6    6    7    6    6    6    6    6     6 #>   [400,]    7    7    7    8    7    7    7    7    7     7 #>   [401,]    9    9    9   10   10   10   10   10    9     9 #>   [402,]    9    9    9   10   10   10   10   10    9     9 #>   [403,]    8    8    8    9    9    9    9    9    8     8 #>   [404,]    9    9    9   10   10   10   10   10    9     9 #>   [405,]    9    9    9   10   10   10   10   10    9     9 #>   [406,]    8    8    8    9    9    9    9    9    8     8 #>   [407,]    8    8    8    9    9    9    9    9    8     8 #>   [408,]    9    9    9   10   10   10   10   10    9     9 #>   [409,]    9    9    9   10   10   10   10   10    9     9 #>   [410,]    9    9    9   10   10   10   10   10    9     9 #>   [411,]    9    9    9   10   10   10   10   10    9     9 #>   [412,]    9    9    9   10   10   10   10   10    9     9 #>   [413,]    9    9    9   10   10   10   10   10    9     9 #>   [414,]    9    9    9   10   10   10   10   10    9     9 #>   [415,]    9    9    9   10   10   10   10   10    9     9 #>   [416,]    9    9    9   10   10   10   10   10    9     9 #>   [417,]    9    9    9   10   10   10   10   10    9     9 #>   [418,]    9    9    9   10   10   10   10   10    9     9 #>   [419,]    9    9    9   10   10   10   10   10    9     9 #>   [420,]    8    8    8    9    9    9    9    9    8     8 #>   [421,]    8    8    8    9    9    9    9    9    8     8 #>   [422,]    9    9    9   10   10   10   10   10    9     9 #>   [423,]    9    9    9   10   10   10   10   10    9     9 #>   [424,]    9    9    9   10   10   10   10   10    9     9 #>   [425,]    8    8    8    9    9    9    9    9    8     8 #>   [426,]    9    9    9   10   10   10   10   10    9     9 #>   [427,]    9    9    9   10   10   10   10   10    9     9 #>   [428,]    9    9    9   10   10   10   10   10    9     9 #>   [429,]    9    9    9   10   10   10   10   10    9     9 #>   [430,]    9    9    9   10   10   10   10   10    9     9 #>   [431,]    9    9    9   10   10   10   10   10    9     9 #>   [432,]    9    9    9   10   10   10   10   10    9     9 #>   [433,]    9    9    9   10   10   10   10   10    9     9 #>   [434,]    9    9    9   10   10   10   10   10    9     9 #>   [435,]    8    8    8    9    9    9    9    9    8     8 #>   [436,]    9    9    9   10   10   10   10   10    9     9 #>   [437,]    8    8    8    9    9    9    9    9    8     8 #>   [438,]    9    9    9   10   10   10   10   10    9     9 #>   [439,]    9    9    9   10   10   10   10   10    9     9 #>   [440,]    9    9    9   10   10   10   10   10    9     9 #>   [441,]    9    9    9   10   10   10   10   10    9     9 #>   [442,]    8    8    8    9    9    9    9    9    8     8 #>   [443,]    9    9    9   10   10   10   10   10    9     9 #>   [444,]    8    8    8    9    9    9    9    9    8     8 #>   [445,]    9    9    9   10   10   10   10   10    9     9 #>   [446,]    9    9    9   10   10   10   10   10    9     9 #>   [447,]    9    9    9   10   10   10   10   10    9     9 #>   [448,]    9    9    9   10   10   10   10   10    9     9 #>   [449,]    9    9    9   10   10   10   10   10    9     9 #>   [450,]    9    9    9   10   10   10   10   10    9     9 #>   [451,]    9    9    9   10   10   10   10   10    9     9 #>   [452,]    9    9    9   10   10   10   10   10    9     9 #>   [453,]    8    8    8    9    9    9    9    9    8     8 #>   [454,]    9    9    9   10   10   10   10   10    9     9 #>   [455,]    9    9    9   10   10   10   10   10    9     9 #>   [456,]    8    8    8    9    9    9    9    9    8     8 #>   [457,]    8    8    8    9    9    9    9    9    8     8 #>   [458,]    9    9    9   10   10   10   10   10    9     9 #>   [459,]    9    9    9   10   10   10   10   10    9     9 #>   [460,]    9    9    9   10   10   10   10   10    9     9 #>   [461,]    9    9    9   10   10   10   10   10    9     9 #>   [462,]    9    9    9   10   10   10   10   10    9     9 #>   [463,]    9    9    9   10   10   10   10   10    9     9 #>   [464,]    9    9    9   10   10   10   10   10    9     9 #>   [465,]    8    8    8    9    9    9    9    9    8     8 #>   [466,]    9    9    9   10   10   10   10   10    9     9 #>   [467,]    9    9    9   10   10   10   10   10    9     9 #>   [468,]    9    9    9   10   10   10   10   10    9     9 #>   [469,]    9    9    9   10   10   10   10   10    9     9 #>   [470,]    9    9    9   10   10   10   10   10    9     9 #>   [471,]    9    9    9   10   10   10   10   10    9     9 #>   [472,]    9    9    9   10   10   10   10   10    9     9 #>   [473,]    8    8    8    9    9    9    9    9    8     8 #>   [474,]    8    8    8    9    9    9    9    9    8     8 #>   [475,]    9    9    9   10   10   10   10   10    9     9 #>   [476,]    9    9    9   10   10   10   10   10    9     9 #>   [477,]    9    9    9   10   10   10   10   10    9     9 #>   [478,]    9    9    9   10   10   10   10   10    9     9 #>   [479,]    9    9    9   10   10   10   10   10    9     9 #>   [480,]    8    8    8    9    9    9    9    9    8     8 #>   [481,]    9    9    9   10   10   10   10   10    9     9 #>   [482,]    8    8    8    9    9    9    9    9    8     8 #>   [483,]    9    9    9   10   10   10   10   10    9     9 #>   [484,]    8    8    8    9    9    9    9    9    8     8 #>   [485,]    8    8    8    9    9    9    9    9    8     8 #>   [486,]    8    8    8    9    9    9    9    9    8     8 #>   [487,]    9    9    9   10   10   10   10   10    9     9 #>   [488,]    9    9    9   10   10   10   10   10    9     9 #>   [489,]    8    8    8    9    9    9    9    9    8     8 #>   [490,]    9    9    9   10   10   10   10   10    9     9 #>   [491,]    9    9    9   10   10   10   10   10    9     9 #>   [492,]    9    9    9   10   10   10   10   10    9     9 #>   [493,]    9    9    9   10   10   10   10   10    9     9 #>   [494,]    8    8    8    9    9    9    9    9    8     8 #>   [495,]    9    9    9   10   10   10   10   10    9     9 #>   [496,]    9    9    9   10   10   10   10   10    9     9 #>   [497,]    9    9    9   10   10   10   10   10    9     9 #>   [498,]    9    9    9   10   10   10   10   10    9     9 #>   [499,]    8    8    8    9    9    9    9    9    8     8 #>   [500,]    9    9    9   10   10   10   10   10    9     9 #>   [501,]   10   12   11   12   12   12   12   12   11    10 #>   [502,]   11   10   10   11   11   11   11   11   10    10 #>   [503,]   10   11   11   12   12   12   12   12   11    10 #>   [504,]   11   10   10   11   11   11   11   11   10    10 #>   [505,]   11   10   10   11   11   11   11   11   10    10 #>   [506,]   10   12   11   12   12   12   12   12   11    10 #>   [507,]   11   10   10   11   11   11   11   11   10    10 #>   [508,]   11   10   10   11   11   11   11   11   10    10 #>   [509,]   11   10   10   11   11   11   11   11   10    10 #>   [510,]   11   10   10   11   11   11   11   11   10    10 #>   [511,]   10   12   11   12   12   12   12   12   11    10 #>   [512,]   11   10   10   11   11   11   11   11   10    10 #>   [513,]   11   10   10   11   11   11   11   11   10    10 #>   [514,]   11   10   10   11   11   11   11   11   10    10 #>   [515,]   11   10   10   11   11   11   11   11   10    10 #>   [516,]   10   11   11   12   12   12   12   12   11    10 #>   [517,]   11   10   10   11   11   11   11   11   10    10 #>   [518,]   11   10   10   11   11   11   11   11   10    10 #>   [519,]   10   12   11   12   12   12   12   12   11    10 #>   [520,]   11   10   10   11   11   11   11   11   10    10 #>   [521,]   11   10   10   11   11   11   11   11   10    10 #>   [522,]   11   10   10   11   11   11   11   11   10    10 #>   [523,]   11   10   10   11   11   11   11   11   10    10 #>   [524,]   11   10   10   11   11   11   11   11   10    10 #>   [525,]   11   10   10   11   11   11   11   11   10    10 #>   [526,]   11   10   10   11   11   11   11   11   10    10 #>   [527,]   11   10   10   11   11   11   11   11   10    10 #>   [528,]   10   12   11   12   12   12   12   12   11    10 #>   [529,]   11   10   10   11   11   11   11   11   10    10 #>   [530,]   11   10   10   11   11   11   11   11   10    10 #>   [531,]   11   10   10   11   11   11   11   11   10    10 #>   [532,]   11   10   10   11   11   11   11   11   10    10 #>   [533,]   11   10   10   11   11   11   11   11   10    10 #>   [534,]   10   12   11   12   12   12   12   12   11    10 #>   [535,]   10   12   11   12   12   12   12   12   11    10 #>   [536,]   11   10   10   11   11   11   11   11   10    10 #>   [537,]   10   12   11   12   12   12   12   12   11    10 #>   [538,]   10   12   11   12   12   12   12   12   11    10 #>   [539,]   11   10   10   11   11   11   11   11   10    10 #>   [540,]   11   10   10   11   11   11   11   11   10    10 #>   [541,]   11   10   10   11   11   11   11   11   10    10 #>   [542,]   11   10   10   11   11   11   11   11   10    10 #>   [543,]   11   10   10   11   11   11   11   11   10    10 #>   [544,]   11   10   10   11   11   11   11   11   10    10 #>   [545,]   10   11   11   12   12   12   12   12   11    10 #>   [546,]   11   10   10   11   11   11   11   11   10    10 #>   [547,]   11   10   10   11   11   11   11   11   10    10 #>   [548,]   11   10   10   11   11   11   11   11   10    10 #>   [549,]   10   11   11   12   12   12   12   12   11    10 #>   [550,]   11   10   10   11   11   11   11   11   10    10 #>   [551,]   11   10   10   11   11   11   11   11   10    10 #>   [552,]   10   12   11   12   12   12   12   12   11    10 #>   [553,]   11   10   10   11   11   11   11   11   10    10 #>   [554,]   11   10   10   11   11   11   11   11   10    10 #>   [555,]   11   10   10   11   11   11   11   11   10    10 #>   [556,]   11   10   10   11   11   11   11   11   10    10 #>   [557,]   11   10   10   11   11   11   11   11   10    10 #>   [558,]   11   10   10   11   11   11   11   11   10    10 #>   [559,]   11   10   10   11   11   11   11   11   10    10 #>   [560,]   11   10   10   11   11   11   11   11   10    10 #>   [561,]   11   10   10   11   11   11   11   11   10    10 #>   [562,]   11   10   10   11   11   11   11   11   10    10 #>   [563,]   11   10   10   11   11   11   11   11   10    10 #>   [564,]   10   12   11   12   12   12   12   12   11    10 #>   [565,]   11   10   10   11   11   11   11   11   10    10 #>   [566,]   11   10   10   11   11   11   11   11   10    10 #>   [567,]   11   10   10   11   11   11   11   11   10    10 #>   [568,]   10   12   11   12   12   12   12   12   11    10 #>   [569,]   11   10   10   11   11   11   11   11   10    10 #>   [570,]   11   10   10   11   11   11   11   11   10    10 #>   [571,]   11   10   10   11   11   11   11   11   10    10 #>   [572,]   10   11   11   12   12   12   12   12   11    10 #>   [573,]   10   12   11   12   12   12   12   12   11    10 #>   [574,]   11   10   10   11   11   11   11   11   10    10 #>   [575,]   11   10   10   11   11   11   11   11   10    10 #>   [576,]   11   10   10   11   11   11   11   11   10    10 #>   [577,]   10   11   11   12   12   12   12   12   11    10 #>   [578,]   11   10   10   11   11   11   11   11   10    10 #>   [579,]   11   10   10   11   11   11   11   11   10    10 #>   [580,]   11   10   10   11   11   11   11   11   10    10 #>   [581,]   11   10   10   11   11   11   11   11   10    10 #>   [582,]   11   10   10   11   11   11   11   11   10    10 #>   [583,]   11   10   10   11   11   11   11   11   10    10 #>   [584,]   11   10   10   11   11   11   11   11   10    10 #>   [585,]   11   10   10   11   11   11   11   11   10    10 #>   [586,]   11   10   10   11   11   11   11   11   10    10 #>   [587,]   11   10   10   11   11   11   11   11   10    10 #>   [588,]   11   10   10   11   11   11   11   11   10    10 #>   [589,]   11   10   10   11   11   11   11   11   10    10 #>   [590,]   11   10   10   11   11   11   11   11   10    10 #>   [591,]   11   10   10   11   11   11   11   11   10    10 #>   [592,]   11   10   10   11   11   11   11   11   10    10 #>   [593,]   11   10   10   11   11   11   11   11   10    10 #>   [594,]   10   11   11   12   12   12   12   12   11    10 #>   [595,]   11   10   10   11   11   11   11   11   10    10 #>   [596,]   10   12   11   12   12   12   12   12   11    10 #>   [597,]   10   12   11   12   12   12   12   12   11    10 #>   [598,]   11   10   10   11   11   11   11   11   10    10 #>   [599,]   11   10   10   11   11   11   11   11   10    10 #>   [600,]   10   11   11   12   12   12   12   12   11    10 #>   [601,]   13   14   13   14   14   14   14   14   12    11 #>   [602,]   13   14   13   14   14   14   14   14   12    12 #>   [603,]   12   13   12   13   13   13   13   13   12    11 #>   [604,]   13   14   13   14   14   14   14   14   12    11 #>   [605,]   13   14   13   14   14   14   14   14   12    11 #>   [606,]   13   14   13   14   14   14   14   14   12    11 #>   [607,]   13   14   13   14   14   14   14   14   12    11 #>   [608,]   13   14   13   14   14   14   14   14   12    11 #>   [609,]   13   14   13   14   14   14   14   14   12    12 #>   [610,]   12   13   12   13   13   13   13   13   12    12 #>   [611,]   12   13   12   13   13   13   13   13   12    11 #>   [612,]   13   14   13   14   14   14   14   14   12    12 #>   [613,]   13   14   13   14   14   14   14   14   12    12 #>   [614,]   12   13   12   13   13   13   13   13   12    11 #>   [615,]   13   14   13   14   14   14   14   14   12    11 #>   [616,]   13   14   13   14   14   14   14   14   12    11 #>   [617,]   13   14   13   14   14   14   14   14   12    12 #>   [618,]   13   14   13   14   14   14   14   14   12    12 #>   [619,]   13   14   13   14   14   14   14   14   12    11 #>   [620,]   13   14   13   14   14   14   14   14   12    11 #>   [621,]   13   14   13   14   14   14   14   14   12    12 #>   [622,]   13   14   13   14   14   14   14   14   12    11 #>   [623,]   13   14   13   14   14   14   14   14   12    11 #>   [624,]   13   14   13   14   14   14   14   14   12    12 #>   [625,]   13   14   13   14   14   14   14   14   12    11 #>   [626,]   13   14   13   14   14   14   14   14   12    11 #>   [627,]   13   14   13   14   14   14   14   14   12    11 #>   [628,]   13   14   13   14   14   14   14   14   12    11 #>   [629,]   13   14   13   14   14   14   14   14   12    12 #>   [630,]   13   14   13   14   14   14   14   14   12    11 #>   [631,]   13   14   13   14   14   14   14   14   12    12 #>   [632,]   12   13   12   13   13   13   13   13   12    12 #>   [633,]   13   14   13   14   14   14   14   14   12    12 #>   [634,]   13   14   13   14   14   14   14   14   12    11 #>   [635,]   13   14   13   14   14   14   14   14   12    11 #>   [636,]   13   14   13   14   14   14   14   14   12    11 #>   [637,]   13   14   13   14   14   14   14   14   12    11 #>   [638,]   13   14   13   14   14   14   14   14   12    11 #>   [639,]   13   14   13   14   14   14   14   14   12    11 #>   [640,]   12   13   12   13   13   13   13   13   12    12 #>   [641,]   13   14   13   14   14   14   14   14   12    11 #>   [642,]   13   14   13   14   14   14   14   14   12    11 #>   [643,]   13   14   13   14   14   14   14   14   12    11 #>   [644,]   13   14   13   14   14   14   14   14   12    11 #>   [645,]   13   14   13   14   14   14   14   14   12    11 #>   [646,]   13   14   13   14   14   14   14   14   12    11 #>   [647,]   13   14   13   14   14   14   14   14   12    11 #>   [648,]   12   13   12   13   13   13   13   13   12    11 #>   [649,]   13   14   13   14   14   14   14   14   12    11 #>   [650,]   13   14   13   14   14   14   14   14   12    11 #>   [651,]   13   14   13   14   14   14   14   14   12    11 #>   [652,]   13   14   13   14   14   14   14   14   12    11 #>   [653,]   13   14   13   14   14   14   14   14   12    12 #>   [654,]   13   14   13   14   14   14   14   14   12    11 #>   [655,]   13   14   13   14   14   14   14   14   12    11 #>   [656,]   13   14   13   14   14   14   14   14   12    11 #>   [657,]   13   14   13   14   14   14   14   14   12    11 #>   [658,]   13   14   13   14   14   14   14   14   12    11 #>   [659,]   13   14   13   14   14   14   14   14   12    11 #>   [660,]   13   14   13   14   14   14   14   14   12    12 #>   [661,]   13   14   13   14   14   14   14   14   12    12 #>   [662,]   13   14   13   14   14   14   14   14   12    11 #>   [663,]   13   14   13   14   14   14   14   14   12    12 #>   [664,]   13   14   13   14   14   14   14   14   12    11 #>   [665,]   13   14   13   14   14   14   14   14   12    11 #>   [666,]   13   14   13   14   14   14   14   14   12    11 #>   [667,]   13   14   13   14   14   14   14   14   12    11 #>   [668,]   13   14   13   14   14   14   14   14   12    11 #>   [669,]   13   14   13   14   14   14   14   14   12    11 #>   [670,]   12   13   12   13   13   13   13   13   12    12 #>   [671,]   13   14   13   14   14   14   14   14   12    11 #>   [672,]   13   14   13   14   14   14   14   14   12    11 #>   [673,]   13   14   13   14   14   14   14   14   12    11 #>   [674,]   13   14   13   14   14   14   14   14   12    11 #>   [675,]   13   14   13   14   14   14   14   14   12    12 #>   [676,]   13   14   13   14   14   14   14   14   12    11 #>   [677,]   13   14   13   14   14   14   14   14   12    11 #>   [678,]   13   14   13   14   14   14   14   14   12    11 #>   [679,]   13   14   13   14   14   14   14   14   12    11 #>   [680,]   13   14   13   14   14   14   14   14   12    12 #>   [681,]   13   14   13   14   14   14   14   14   12    12 #>   [682,]   13   14   13   14   14   14   14   14   12    11 #>   [683,]   13   14   13   14   14   14   14   14   12    12 #>   [684,]   13   14   13   14   14   14   14   14   12    11 #>   [685,]   13   14   13   14   14   14   14   14   12    11 #>   [686,]   13   14   13   14   14   14   14   14   12    12 #>   [687,]   13   14   13   14   14   14   14   14   12    11 #>   [688,]   13   14   13   14   14   14   14   14   12    11 #>   [689,]   13   14   13   14   14   14   14   14   12    11 #>   [690,]   13   14   13   14   14   14   14   14   12    11 #>   [691,]   13   14   13   14   14   14   14   14   12    11 #>   [692,]   13   14   13   14   14   14   14   14   12    11 #>   [693,]   13   14   13   14   14   14   14   14   12    11 #>   [694,]   13   14   13   14   14   14   14   14   12    11 #>   [695,]   13   14   13   14   14   14   14   14   12    11 #>   [696,]   13   14   13   14   14   14   14   14   12    11 #>   [697,]   13   14   13   14   14   14   14   14   12    11 #>   [698,]   13   14   13   14   14   14   14   14   12    11 #>   [699,]   13   14   13   14   14   14   14   14   12    11 #>   [700,]   13   14   13   14   14   14   14   14   12    11 #>   [701,]   15   16   15   16   16   16   16   15   13    13 #>   [702,]   14   15   14   15   15   15   15   15   13    13 #>   [703,]   14   15   14   15   15   15   15   15   13    13 #>   [704,]   14   15   14   15   15   15   15   15   13    13 #>   [705,]   14   15   14   15   15   15   15   15   13    13 #>   [706,]   14   15   14   15   15   15   15   15   14    14 #>   [707,]   14   15   14   15   15   15   15   15   13    13 #>   [708,]   14   15   14   15   15   15   15   15   14    14 #>   [709,]   15   16   16   16   16   16   16   15   14    14 #>   [710,]   14   15   14   15   15   15   15   15   13    13 #>   [711,]   14   15   14   15   15   15   15   15   13    13 #>   [712,]   14   15   14   15   15   15   15   15   14    14 #>   [713,]   15   16   16   16   16   16   16   15   13    13 #>   [714,]   14   15   14   15   15   15   15   15   13    13 #>   [715,]   14   15   14   15   15   15   15   15   14    14 #>   [716,]   14   15   14   15   15   15   15   15   13    13 #>   [717,]   15   16   16   16   16   16   16   15   13    13 #>   [718,]   15   16   16   16   16   16   16   15   13    13 #>   [719,]   14   15   14   15   15   15   15   15   13    13 #>   [720,]   14   15   14   15   15   15   15   15   13    13 #>   [721,]   14   15   14   15   15   15   15   15   13    13 #>   [722,]   14   15   14   15   15   15   15   15   13    13 #>   [723,]   14   15   14   15   15   15   15   15   13    13 #>   [724,]   14   15   14   15   15   15   15   15   13    13 #>   [725,]   14   15   14   15   15   15   15   15   13    13 #>   [726,]   14   15   14   15   15   15   15   15   14    14 #>   [727,]   15   16   16   16   16   16   16   15   13    13 #>   [728,]   14   15   14   15   15   15   15   15   13    13 #>   [729,]   14   15   14   15   15   15   15   15   13    13 #>   [730,]   14   15   14   15   15   15   15   15   13    13 #>   [731,]   14   15   14   15   15   15   15   15   13    13 #>   [732,]   14   15   14   15   15   15   15   15   13    13 #>   [733,]   14   15   14   15   15   15   15   15   13    13 #>   [734,]   14   15   14   15   15   15   15   15   13    13 #>   [735,]   14   15   14   15   15   15   15   15   13    13 #>   [736,]   15   16   16   16   16   16   16   15   13    13 #>   [737,]   14   15   14   15   15   15   15   15   13    13 #>   [738,]   14   15   14   15   15   15   15   15   13    13 #>   [739,]   14   15   14   15   15   15   15   15   13    13 #>   [740,]   14   15   14   15   15   15   15   15   13    13 #>   [741,]   14   15   14   15   15   15   15   15   13    13 #>   [742,]   15   16   15   16   16   16   16   15   13    13 #>   [743,]   14   15   14   15   15   15   15   15   14    14 #>   [744,]   14   15   14   15   15   15   15   15   13    13 #>   [745,]   14   15   14   15   15   15   15   15   13    13 #>   [746,]   14   15   14   15   15   15   15   15   14    14 #>   [747,]   14   15   14   15   15   15   15   15   13    13 #>   [748,]   14   15   14   15   15   15   15   15   13    13 #>   [749,]   14   15   14   15   15   15   15   15   13    13 #>   [750,]   14   15   14   15   15   15   15   15   13    13 #>   [751,]   15   16   15   16   16   16   16   15   14    14 #>   [752,]   14   15   14   15   15   15   15   15   13    13 #>   [753,]   15   16   16   16   16   16   16   15   13    13 #>   [754,]   14   15   14   15   15   15   15   15   13    13 #>   [755,]   14   15   14   15   15   15   15   15   13    13 #>   [756,]   15   16   15   16   16   16   16   15   14    14 #>   [757,]   14   15   14   15   15   15   15   15   13    13 #>   [758,]   14   15   14   15   15   15   15   15   13    13 #>   [759,]   14   15   14   15   15   15   15   15   13    13 #>   [760,]   14   15   14   15   15   15   15   15   13    13 #>   [761,]   14   15   14   15   15   15   15   15   14    14 #>   [762,]   14   15   14   15   15   15   15   15   13    13 #>   [763,]   14   15   14   15   15   15   15   15   13    13 #>   [764,]   14   15   14   15   15   15   15   15   14    14 #>   [765,]   15   16   15   16   16   16   16   15   13    13 #>   [766,]   15   16   15   16   16   16   16   15   14    14 #>   [767,]   14   15   14   15   15   15   15   15   13    13 #>   [768,]   14   15   14   15   15   15   15   15   13    13 #>   [769,]   14   15   14   15   15   15   15   15   13    13 #>   [770,]   14   15   14   15   15   15   15   15   13    13 #>   [771,]   14   15   14   15   15   15   15   15   13    13 #>   [772,]   14   15   14   15   15   15   15   15   13    13 #>   [773,]   14   15   14   15   15   15   15   15   13    13 #>   [774,]   14   15   14   15   15   15   15   15   13    13 #>   [775,]   14   15   14   15   15   15   15   15   13    13 #>   [776,]   14   15   14   15   15   15   15   15   14    14 #>   [777,]   14   15   14   15   15   15   15   15   13    13 #>   [778,]   14   15   14   15   15   15   15   15   13    13 #>   [779,]   15   16   15   16   16   16   16   15   13    13 #>   [780,]   14   15   14   15   15   15   15   15   13    13 #>   [781,]   14   15   14   15   15   15   15   15   13    13 #>   [782,]   15   16   15   16   16   16   16   15   13    13 #>   [783,]   15   16   16   16   16   16   16   15   13    13 #>   [784,]   15   16   16   16   16   16   16   15   13    13 #>   [785,]   14   15   14   15   15   15   15   15   13    13 #>   [786,]   14   15   14   15   15   15   15   15   13    13 #>   [787,]   15   16   16   16   16   16   16   15   13    13 #>   [788,]   14   15   14   15   15   15   15   15   13    13 #>   [789,]   14   15   14   15   15   15   15   15   13    13 #>   [790,]   14   15   14   15   15   15   15   15   13    13 #>   [791,]   15   16   15   16   16   16   16   15   13    13 #>   [792,]   14   15   14   15   15   15   15   15   13    13 #>   [793,]   15   16   16   16   16   16   16   15   13    13 #>   [794,]   15   16   15   16   16   16   16   15   14    14 #>   [795,]   14   15   14   15   15   15   15   15   13    13 #>   [796,]   14   15   14   15   15   15   15   15   13    13 #>   [797,]   14   15   14   15   15   15   15   15   13    13 #>   [798,]   14   15   14   15   15   15   15   15   13    13 #>   [799,]   14   15   14   15   15   15   15   15   13    13 #>   [800,]   14   15   14   15   15   15   15   15   13    13 #>   [801,]   16   17   17   17   17   17   17   16   15    15 #>   [802,]   16   17   17   17   17   17   17   16   15    15 #>   [803,]   16   17   17   17   17   17   17   16   15    15 #>   [804,]   17   18   18   17   18   18   18   17   16    16 #>   [805,]   16   17   17   17   17   17   17   16   15    15 #>   [806,]   16   17   17   17   17   17   17   16   15    15 #>   [807,]   17   18   18   17   18   18   18   17   16    16 #>   [808,]   16   17   17   17   17   17   17   16   15    15 #>   [809,]   16   17   17   17   18   18   18   17   16    16 #>   [810,]   17   18   18   17   18   18   18   17   16    16 #>   [811,]   16   17   17   17   17   17   17   16   15    15 #>   [812,]   16   17   17   17   17   17   17   16   15    15 #>   [813,]   16   17   17   17   18   18   18   17   16    16 #>   [814,]   16   17   17   17   18   18   18   17   16    16 #>   [815,]   17   18   18   17   17   17   17   16   15    15 #>   [816,]   17   18   18   17   18   18   18   17   16    16 #>   [817,]   16   17   17   17   17   17   17   16   15    15 #>   [818,]   17   18   18   17   17   17   17   16   15    15 #>   [819,]   16   17   17   17   17   17   17   16   15    15 #>   [820,]   16   17   17   17   18   18   18   17   16    16 #>   [821,]   17   18   18   17   17   17   17   16   15    15 #>   [822,]   16   17   17   17   18   18   18   17   16    16 #>   [823,]   17   18   18   17   17   17   17   16   15    15 #>   [824,]   16   17   17   17   18   18   18   17   16    16 #>   [825,]   17   18   18   17   18   18   18   17   16    16 #>   [826,]   16   17   17   17   17   17   17   16   15    15 #>   [827,]   17   18   18   17   17   17   17   16   15    15 #>   [828,]   17   18   18   17   18   18   18   17   16    16 #>   [829,]   16   17   17   17   17   17   17   16   15    15 #>   [830,]   16   17   17   17   17   17   17   16   15    15 #>   [831,]   16   17   17   17   17   17   17   16   15    15 #>   [832,]   16   17   17   17   17   17   17   16   15    15 #>   [833,]   16   17   17   17   17   17   17   16   15    15 #>   [834,]   16   17   17   17   17   17   17   16   15    15 #>   [835,]   16   17   17   17   17   17   17   16   15    15 #>   [836,]   16   17   17   17   18   18   18   17   16    16 #>   [837,]   16   17   17   17   17   17   17   16   15    15 #>   [838,]   16   17   17   17   17   17   17   16   15    15 #>   [839,]   17   18   18   17   18   18   18   17   16    16 #>   [840,]   16   17   17   17   17   17   17   16   15    15 #>   [841,]   16   17   17   17   17   17   17   16   15    15 #>   [842,]   16   17   17   17   17   17   17   16   15    15 #>   [843,]   17   18   18   17   17   17   17   16   15    15 #>   [844,]   16   17   17   17   17   17   17   16   15    15 #>   [845,]   17   18   18   17   17   17   17   16   15    15 #>   [846,]   16   17   17   17   17   17   17   16   15    15 #>   [847,]   17   18   18   17   17   17   17   16   15    15 #>   [848,]   16   17   17   17   17   17   17   16   15    15 #>   [849,]   16   17   17   17   17   17   17   16   15    15 #>   [850,]   16   17   17   17   18   18   18   17   16    16 #>   [851,]   16   17   17   17   17   17   17   16   15    15 #>   [852,]   16   17   17   17   18   18   18   17   16    16 #>   [853,]   17   18   18   17   17   17   17   16   15    15 #>   [854,]   16   17   17   17   18   18   18   17   16    16 #>   [855,]   16   17   17   17   18   18   18   17   16    16 #>   [856,]   16   17   17   17   17   17   17   16   15    15 #>   [857,]   16   17   17   17   18   18   18   17   16    16 #>   [858,]   16   17   17   17   17   17   17   16   15    15 #>   [859,]   16   17   17   17   18   18   18   17   16    16 #>   [860,]   16   17   17   17   17   17   17   16   15    15 #>   [861,]   17   18   18   17   17   17   17   16   15    15 #>   [862,]   16   17   17   17   17   17   17   16   15    15 #>   [863,]   16   17   17   17   17   17   17   16   15    15 #>   [864,]   17   18   18   17   17   17   17   16   15    15 #>   [865,]   16   17   17   17   17   17   17   16   15    15 #>   [866,]   16   17   17   17   17   17   17   16   15    15 #>   [867,]   16   17   17   17   18   18   18   17   16    16 #>   [868,]   16   17   17   17   17   17   17   16   15    15 #>   [869,]   16   17   17   17   17   17   17   16   15    15 #>   [870,]   16   17   17   17   17   17   17   16   15    15 #>   [871,]   17   18   18   17   17   17   17   16   15    15 #>   [872,]   17   18   18   17   17   17   17   16   15    15 #>   [873,]   17   18   18   17   18   18   18   17   16    16 #>   [874,]   17   18   18   17   17   17   17   16   15    15 #>   [875,]   17   18   18   17   17   17   17   16   15    15 #>   [876,]   17   18   18   17   18   18   18   17   16    16 #>   [877,]   17   18   18   17   17   17   17   16   15    15 #>   [878,]   16   17   17   17   17   17   17   16   15    15 #>   [879,]   16   17   17   17   17   17   17   16   15    15 #>   [880,]   16   17   17   17   17   17   17   16   15    15 #>   [881,]   16   17   17   17   17   17   17   16   15    15 #>   [882,]   16   17   17   17   17   17   17   16   15    15 #>   [883,]   16   17   17   17   17   17   17   16   15    15 #>   [884,]   17   18   18   17   17   17   17   16   15    15 #>   [885,]   16   17   17   17   17   17   17   16   15    15 #>   [886,]   16   17   17   17   18   18   18   17   16    16 #>   [887,]   16   17   17   17   17   17   17   16   15    15 #>   [888,]   17   18   18   17   17   17   17   16   15    15 #>   [889,]   16   17   17   17   17   17   17   16   15    15 #>   [890,]   16   17   17   17   18   18   18   17   16    16 #>   [891,]   16   17   17   17   18   18   18   17   16    16 #>   [892,]   16   17   17   17   17   17   17   16   15    15 #>   [893,]   16   17   17   17   17   17   17   16   15    15 #>   [894,]   17   18   18   17   17   17   17   16   15    15 #>   [895,]   17   18   18   17   17   17   17   16   15    15 #>   [896,]   16   17   17   17   17   17   17   16   15    15 #>   [897,]   16   17   17   17   17   17   17   16   15    15 #>   [898,]   16   17   17   17   17   17   17   16   15    15 #>   [899,]   16   17   17   17   17   17   17   16   15    15 #>   [900,]   17   18   18   17   17   17   17   16   15    15 #>   [901,]   19   20   20   19   20   20   20   19   18    18 #>   [902,]   19   20   20   19   20   20   20   19   18    18 #>   [903,]   18   19   19   18   19   19   19   18   17    17 #>   [904,]   18   19   19   18   19   19   19   18   17    17 #>   [905,]   18   19   19   18   19   19   19   18   17    17 #>   [906,]   18   19   19   18   19   19   19   18   17    17 #>   [907,]   18   19   19   18   19   19   19   18   17    17 #>   [908,]   19   20   20   19   20   20   20   19   18    18 #>   [909,]   18   19   19   18   19   19   19   18   17    17 #>   [910,]   18   19   19   18   19   19   19   18   17    17 #>   [911,]   18   19   19   18   19   19   19   18   17    17 #>   [912,]   18   19   19   18   19   19   19   18   17    17 #>   [913,]   19   20   20   19   20   20   20   19   18    18 #>   [914,]   18   19   19   18   19   19   19   18   17    17 #>   [915,]   19   20   20   19   20   20   20   19   18    18 #>   [916,]   19   20   20   19   20   20   20   19   18    18 #>   [917,]   18   19   19   18   19   19   19   18   17    17 #>   [918,]   18   19   19   18   19   19   19   18   17    17 #>   [919,]   19   20   20   19   20   20   20   19   18    18 #>   [920,]   19   20   20   19   20   20   20   19   18    18 #>   [921,]   18   19   19   18   19   19   19   18   17    17 #>   [922,]   19   20   20   19   20   20   20   19   18    18 #>   [923,]   19   20   20   19   20   20   20   19   18    18 #>   [924,]   18   19   19   18   19   19   19   18   17    17 #>   [925,]   18   19   19   18   19   19   19   18   17    17 #>   [926,]   19   20   20   19   20   20   20   19   18    18 #>   [927,]   19   20   20   19   20   20   20   19   18    18 #>   [928,]   18   19   19   18   19   19   19   18   17    17 #>   [929,]   19   20   20   19   20   20   20   19   18    18 #>   [930,]   19   20   20   19   20   20   20   19   18    18 #>   [931,]   18   19   19   18   19   19   19   18   17    17 #>   [932,]   18   19   19   18   19   19   19   18   17    17 #>   [933,]   19   20   20   19   20   20   20   19   18    18 #>   [934,]   18   19   19   18   19   19   19   18   17    17 #>   [935,]   18   19   19   18   19   19   19   18   17    17 #>   [936,]   19   20   20   19   20   20   20   19   18    18 #>   [937,]   19   20   20   19   20   20   20   19   18    18 #>   [938,]   19   20   20   19   20   20   20   19   18    18 #>   [939,]   18   19   19   18   19   19   19   18   17    17 #>   [940,]   18   19   19   18   19   19   19   18   17    17 #>   [941,]   19   20   20   19   20   20   20   19   18    18 #>   [942,]   18   19   19   18   19   19   19   18   17    17 #>   [943,]   19   20   20   19   20   20   20   19   18    18 #>   [944,]   19   20   20   19   20   20   20   19   18    18 #>   [945,]   18   19   19   18   19   19   19   18   17    17 #>   [946,]   19   20   20   19   20   20   20   19   18    18 #>   [947,]   18   19   19   18   19   19   19   18   17    17 #>   [948,]   18   19   19   18   19   19   19   18   17    17 #>   [949,]   18   19   19   18   19   19   19   18   17    17 #>   [950,]   19   20   20   19   20   20   20   19   18    18 #>   [951,]   19   20   20   19   20   20   20   19   18    18 #>   [952,]   18   19   19   18   19   19   19   18   17    17 #>   [953,]   19   20   20   19   20   20   20   19   18    18 #>   [954,]   18   19   19   18   19   19   19   18   17    17 #>   [955,]   19   20   20   19   20   20   20   19   18    18 #>   [956,]   19   20   20   19   20   20   20   19   18    18 #>   [957,]   18   19   19   18   19   19   19   18   17    17 #>   [958,]   19   20   20   19   20   20   20   19   18    18 #>   [959,]   19   20   20   19   20   20   20   19   18    18 #>   [960,]   19   20   20   19   20   20   20   19   18    18 #>   [961,]   19   20   20   19   20   20   20   19   18    18 #>   [962,]   18   19   19   18   19   19   19   18   17    17 #>   [963,]   19   20   20   19   20   20   20   19   18    18 #>   [964,]   19   20   20   19   20   20   20   19   18    18 #>   [965,]   18   19   19   18   19   19   19   18   17    17 #>   [966,]   19   20   20   19   20   20   20   19   18    18 #>   [967,]   18   19   19   18   19   19   19   18   17    17 #>   [968,]   19   20   20   19   20   20   20   19   18    18 #>   [969,]   19   20   20   19   20   20   20   19   18    18 #>   [970,]   18   19   19   18   19   19   19   18   17    17 #>   [971,]   19   20   20   19   20   20   20   19   18    18 #>   [972,]   18   19   19   18   19   19   19   18   17    17 #>   [973,]   18   19   19   18   19   19   19   18   17    17 #>   [974,]   18   19   19   18   19   19   19   18   17    17 #>   [975,]   19   20   20   19   20   20   20   19   18    18 #>   [976,]   18   19   19   18   19   19   19   18   17    17 #>   [977,]   19   20   20   19   20   20   20   19   18    18 #>   [978,]   19   20   20   19   20   20   20   19   18    18 #>   [979,]   18   19   19   18   19   19   19   18   17    17 #>   [980,]   19   20   20   19   20   20   20   19   18    18 #>   [981,]   19   20   20   19   20   20   20   19   18    18 #>   [982,]   18   19   19   18   19   19   19   18   17    17 #>   [983,]   19   20   20   19   20   20   20   19   18    18 #>   [984,]   19   20   20   19   20   20   20   19   18    18 #>   [985,]   19   20   20   19   20   20   20   19   18    18 #>   [986,]   18   19   19   18   19   19   19   18   17    17 #>   [987,]   19   20   20   19   20   20   20   19   18    18 #>   [988,]   18   19   19   18   19   19   19   18   17    17 #>   [989,]   18   19   19   18   19   19   19   18   17    17 #>   [990,]   19   20   20   19   20   20   20   19   18    18 #>   [991,]   18   19   19   18   19   19   19   18   17    17 #>   [992,]   18   19   19   18   19   19   19   18   17    17 #>   [993,]   19   20   20   19   20   20   20   19   18    18 #>   [994,]   18   19   19   18   19   19   19   18   17    17 #>   [995,]   19   20   20   19   20   20   20   19   18    18 #>   [996,]   19   20   20   19   20   20   20   19   18    18 #>   [997,]   19   20   20   19   20   20   20   19   18    18 #>   [998,]   18   19   19   18   19   19   19   18   17    17 #>   [999,]   18   19   19   18   19   19   19   18   17    17 #>  [1000,]   19   20   20   19   20   20   20   19   18    18 #>  [1001,]   21   22   21   21   22   22   22   21   20    19 #>  [1002,]   21   22   21   21   22   22   22   21   20    19 #>  [1003,]   20   21   21   20   21   21   21   20   19    20 #>  [1004,]   20   21   21   21   22   22   22   21   20    19 #>  [1005,]   20   21   21   21   22   22   22   21   20    19 #>  [1006,]   21   22   21   21   22   22   22   21   20    19 #>  [1007,]   20   21   21   20   21   21   21   20   19    20 #>  [1008,]   20   21   21   20   21   21   21   20   19    20 #>  [1009,]   20   21   21   21   22   22   22   21   20    19 #>  [1010,]   20   21   21   21   22   22   22   21   20    19 #>  [1011,]   20   21   21   21   22   22   22   21   20    19 #>  [1012,]   20   21   21   21   22   22   22   21   20    19 #>  [1013,]   21   22   21   20   21   21   21   20   19    21 #>  [1014,]   21   22   21   21   22   22   22   21   20    19 #>  [1015,]   21   22   21   21   22   22   22   21   20    19 #>  [1016,]   21   22   21   20   21   21   21   20   19    21 #>  [1017,]   21   22   21   20   21   21   21   20   19    21 #>  [1018,]   20   21   21   21   22   22   22   21   20    19 #>  [1019,]   20   21   21   21   22   22   22   21   20    19 #>  [1020,]   20   21   21   20   21   21   21   20   19    20 #>  [1021,]   21   22   21   21   22   22   22   21   20    19 #>  [1022,]   20   21   21   20   21   21   21   20   19    21 #>  [1023,]   20   21   21   21   22   22   22   21   20    19 #>  [1024,]   20   21   21   20   21   21   21   20   19    21 #>  [1025,]   20   21   21   20   21   21   21   20   19    20 #>  [1026,]   20   21   21   21   22   22   22   21   20    19 #>  [1027,]   20   21   21   21   22   22   22   21   20    19 #>  [1028,]   20   21   21   21   22   22   22   21   20    19 #>  [1029,]   21   22   21   20   21   21   21   20   19    21 #>  [1030,]   20   21   21   21   22   22   22   21   20    19 #>  [1031,]   20   21   21   21   22   22   22   21   20    19 #>  [1032,]   20   21   21   21   22   22   22   21   20    19 #>  [1033,]   21   22   21   21   22   22   22   21   20    19 #>  [1034,]   20   21   21   21   22   22   22   21   20    19 #>  [1035,]   21   22   21   21   22   22   22   21   20    19 #>  [1036,]   20   21   21   21   22   22   22   21   20    19 #>  [1037,]   20   21   21   21   22   22   22   21   20    19 #>  [1038,]   20   21   21   21   22   22   22   21   20    19 #>  [1039,]   20   21   21   20   21   21   21   20   19    20 #>  [1040,]   20   21   21   20   21   21   21   20   19    21 #>  [1041,]   21   22   21   21   22   22   22   21   20    19 #>  [1042,]   20   21   21   21   22   22   22   21   20    19 #>  [1043,]   20   21   21   20   21   21   21   20   19    21 #>  [1044,]   21   22   21   20   21   21   21   20   19    20 #>  [1045,]   20   21   21   20   21   21   21   20   19    21 #>  [1046,]   20   21   21   20   21   21   21   20   19    21 #>  [1047,]   20   21   21   20   21   21   21   20   19    21 #>  [1048,]   20   21   21   21   22   22   22   21   20    19 #>  [1049,]   20   21   21   20   21   21   21   20   19    20 #>  [1050,]   21   22   21   20   21   21   21   20   19    20 #>  [1051,]   20   21   21   20   21   21   21   20   19    21 #>  [1052,]   20   21   21   21   22   22   22   21   20    19 #>  [1053,]   20   21   21   20   21   21   21   20   19    20 #>  [1054,]   20   21   21   20   21   21   21   20   19    21 #>  [1055,]   20   21   21   20   21   21   21   20   19    20 #>  [1056,]   20   21   21   20   21   21   21   20   19    20 #>  [1057,]   20   21   21   21   22   22   22   21   20    19 #>  [1058,]   20   21   21   21   22   22   22   21   20    19 #>  [1059,]   21   22   21   20   21   21   21   20   19    20 #>  [1060,]   20   21   21   21   22   22   22   21   20    19 #>  [1061,]   21   22   21   21   22   22   22   21   20    19 #>  [1062,]   20   21   21   21   22   22   22   21   20    19 #>  [1063,]   20   21   21   20   21   21   21   20   19    21 #>  [1064,]   20   21   21   21   22   22   22   21   20    19 #>  [1065,]   20   21   21   20   21   21   21   20   19    20 #>  [1066,]   20   21   21   20   21   21   21   20   19    20 #>  [1067,]   20   21   21   21   22   22   22   21   20    19 #>  [1068,]   21   22   21   21   22   22   22   21   20    19 #>  [1069,]   20   21   21   21   22   22   22   21   20    19 #>  [1070,]   21   22   21   20   21   21   21   20   19    21 #>  [1071,]   20   21   21   21   22   22   22   21   20    19 #>  [1072,]   20   21   21   20   21   21   21   20   19    21 #>  [1073,]   21   22   21   21   22   22   22   21   20    19 #>  [1074,]   20   21   21   21   22   22   22   21   20    19 #>  [1075,]   20   21   21   21   22   22   22   21   20    19 #>  [1076,]   21   22   21   20   21   21   21   20   19    21 #>  [1077,]   21   22   21   20   21   21   21   20   19    21 #>  [1078,]   20   21   21   20   21   21   21   20   19    21 #>  [1079,]   21   22   21   20   21   21   21   20   19    21 #>  [1080,]   20   21   21   21   22   22   22   21   20    19 #>  [1081,]   21   22   21   21   22   22   22   21   20    19 #>  [1082,]   20   21   21   21   22   22   22   21   20    19 #>  [1083,]   21   22   21   20   21   21   21   20   19    21 #>  [1084,]   20   21   21   20   21   21   21   20   19    20 #>  [1085,]   20   21   21   21   22   22   22   21   20    19 #>  [1086,]   21   22   21   20   21   21   21   20   19    20 #>  [1087,]   20   21   21   21   22   22   22   21   20    19 #>  [1088,]   20   21   21   21   22   22   22   21   20    19 #>  [1089,]   20   21   21   20   21   21   21   20   19    21 #>  [1090,]   20   21   21   20   21   21   21   20   19    20 #>  [1091,]   20   21   21   21   22   22   22   21   20    19 #>  [1092,]   20   21   21   21   22   22   22   21   20    19 #>  [1093,]   21   22   21   21   22   22   22   21   20    19 #>  [1094,]   20   21   21   20   21   21   21   20   19    21 #>  [1095,]   20   21   21   21   22   22   22   21   20    19 #>  [1096,]   21   22   21   21   22   22   22   21   20    19 #>  [1097,]   20   21   21   21   22   22   22   21   20    19 #>  [1098,]   20   21   21   20   21   21   21   20   19    20 #>  [1099,]   21   22   21   21   22   22   22   21   20    19 #>  [1100,]   20   21   21   20   21   21   21   20   19    20 #>  [1101,]   23   24   23   23   24   24   24   23   22    23 #>  [1102,]   22   23   22   22   23   23   23   22   21    22 #>  [1103,]   23   24   23   23   24   24   24   23   22    23 #>  [1104,]   23   24   23   23   24   24   24   23   22    23 #>  [1105,]   23   24   23   23   24   24   24   23   22    23 #>  [1106,]   22   23   22   22   23   23   23   22   21    22 #>  [1107,]   23   24   23   23   24   24   24   23   22    23 #>  [1108,]   23   24   23   23   24   24   24   23   22    23 #>  [1109,]   23   24   23   23   24   24   24   23   22    23 #>  [1110,]   23   24   23   23   24   24   24   23   22    23 #>  [1111,]   22   23   22   22   23   23   23   22   21    22 #>  [1112,]   22   23   22   22   23   23   23   22   21    22 #>  [1113,]   23   24   23   23   24   24   24   23   22    23 #>  [1114,]   23   24   23   23   24   24   24   23   22    23 #>  [1115,]   22   23   22   22   23   23   23   22   21    22 #>  [1116,]   23   24   23   23   24   24   24   23   22    23 #>  [1117,]   22   23   22   22   23   23   23   22   21    22 #>  [1118,]   23   24   23   23   24   24   24   23   22    23 #>  [1119,]   22   23   22   22   23   23   23   22   21    22 #>  [1120,]   23   24   23   23   24   24   24   23   22    23 #>  [1121,]   23   24   23   23   24   24   24   23   22    23 #>  [1122,]   23   24   23   23   24   24   24   23   22    23 #>  [1123,]   22   23   22   22   23   23   23   22   21    22 #>  [1124,]   23   24   23   23   24   24   24   23   22    23 #>  [1125,]   23   24   23   23   24   24   24   23   22    23 #>  [1126,]   22   23   22   22   23   23   23   22   21    22 #>  [1127,]   23   24   23   23   24   24   24   23   22    23 #>  [1128,]   23   24   23   23   24   24   24   23   22    23 #>  [1129,]   22   23   22   22   23   23   23   22   21    22 #>  [1130,]   22   23   22   22   23   23   23   22   21    22 #>  [1131,]   22   23   22   22   23   23   23   22   21    22 #>  [1132,]   23   24   23   23   24   24   24   23   22    23 #>  [1133,]   23   24   23   23   24   24   24   23   22    23 #>  [1134,]   22   23   22   22   23   23   23   22   21    22 #>  [1135,]   22   23   22   22   23   23   23   22   21    22 #>  [1136,]   23   24   23   23   24   24   24   23   22    23 #>  [1137,]   22   23   22   22   23   23   23   22   21    22 #>  [1138,]   23   24   23   23   24   24   24   23   22    23 #>  [1139,]   23   24   23   23   24   24   24   23   22    23 #>  [1140,]   23   24   23   23   24   24   24   23   22    23 #>  [1141,]   23   24   23   23   24   24   24   23   22    23 #>  [1142,]   22   23   22   22   23   23   23   22   21    22 #>  [1143,]   22   23   22   22   23   23   23   22   21    22 #>  [1144,]   22   23   22   22   23   23   23   22   21    22 #>  [1145,]   23   24   23   23   24   24   24   23   22    23 #>  [1146,]   22   23   22   22   23   23   23   22   21    22 #>  [1147,]   22   23   22   22   23   23   23   22   21    22 #>  [1148,]   22   23   22   22   23   23   23   22   21    22 #>  [1149,]   23   24   23   23   24   24   24   23   22    23 #>  [1150,]   23   24   23   23   24   24   24   23   22    23 #>  [1151,]   23   24   23   23   24   24   24   23   22    23 #>  [1152,]   23   24   23   23   24   24   24   23   22    23 #>  [1153,]   23   24   23   23   24   24   24   23   22    23 #>  [1154,]   23   24   23   23   24   24   24   23   22    23 #>  [1155,]   23   24   23   23   24   24   24   23   22    23 #>  [1156,]   22   23   22   22   23   23   23   22   21    22 #>  [1157,]   23   24   23   23   24   24   24   23   22    23 #>  [1158,]   23   24   23   23   24   24   24   23   22    23 #>  [1159,]   23   24   23   23   24   24   24   23   22    23 #>  [1160,]   22   23   22   22   23   23   23   22   21    22 #>  [1161,]   22   23   22   22   23   23   23   22   21    22 #>  [1162,]   23   24   23   23   24   24   24   23   22    23 #>  [1163,]   22   23   22   22   23   23   23   22   21    22 #>  [1164,]   22   23   22   22   23   23   23   22   21    22 #>  [1165,]   22   23   22   22   23   23   23   22   21    22 #>  [1166,]   22   23   22   22   23   23   23   22   21    22 #>  [1167,]   23   24   23   23   24   24   24   23   22    23 #>  [1168,]   22   23   22   22   23   23   23   22   21    22 #>  [1169,]   23   24   23   23   24   24   24   23   22    23 #>  [1170,]   22   23   22   22   23   23   23   22   21    22 #>  [1171,]   23   24   23   23   24   24   24   23   22    23 #>  [1172,]   23   24   23   23   24   24   24   23   22    23 #>  [1173,]   23   24   23   23   24   24   24   23   22    23 #>  [1174,]   23   24   23   23   24   24   24   23   22    23 #>  [1175,]   22   23   22   22   23   23   23   22   21    22 #>  [1176,]   23   24   23   23   24   24   24   23   22    23 #>  [1177,]   23   24   23   23   24   24   24   23   22    23 #>  [1178,]   22   23   22   22   23   23   23   22   21    22 #>  [1179,]   22   23   22   22   23   23   23   22   21    22 #>  [1180,]   23   24   23   23   24   24   24   23   22    23 #>  [1181,]   22   23   22   22   23   23   23   22   21    22 #>  [1182,]   23   24   23   23   24   24   24   23   22    23 #>  [1183,]   23   24   23   23   24   24   24   23   22    23 #>  [1184,]   23   24   23   23   24   24   24   23   22    23 #>  [1185,]   23   24   23   23   24   24   24   23   22    23 #>  [1186,]   23   24   23   23   24   24   24   23   22    23 #>  [1187,]   23   24   23   23   24   24   24   23   22    23 #>  [1188,]   23   24   23   23   24   24   24   23   22    23 #>  [1189,]   23   24   23   23   24   24   24   23   22    23 #>  [1190,]   23   24   23   23   24   24   24   23   22    23 #>  [1191,]   23   24   23   23   24   24   24   23   22    23 #>  [1192,]   22   23   22   22   23   23   23   22   21    22 #>  [1193,]   22   23   22   22   23   23   23   22   21    22 #>  [1194,]   22   23   22   22   23   23   23   22   21    22 #>  [1195,]   22   23   22   22   23   23   23   22   21    22 #>  [1196,]   22   23   22   22   23   23   23   22   21    22 #>  [1197,]   23   24   23   23   24   24   24   23   22    23 #>  [1198,]   23   24   23   23   24   24   24   23   22    23 #>  [1199,]   23   24   23   23   24   24   24   23   22    23 #>  [1200,]   22   23   22   22   23   23   23   22   21    22 #>  [1201,]   24   25   24   24   25   25   25   24   23    24 #>  [1202,]   24   25   24   24   25   25   25   24   23    24 #>  [1203,]   24   25   24   24   25   25   25   24   23    24 #>  [1204,]   24   25   24   24   25   25   25   24   23    24 #>  [1205,]   25   26   25   25   26   26   26   25   24    25 #>  [1206,]   24   25   24   24   25   25   25   24   23    24 #>  [1207,]   24   25   24   24   25   25   25   24   23    24 #>  [1208,]   24   25   24   24   25   25   25   24   23    24 #>  [1209,]   24   25   24   24   25   25   25   24   23    24 #>  [1210,]   24   25   24   24   25   25   25   24   23    24 #>  [1211,]   24   25   24   24   25   25   25   24   23    24 #>  [1212,]   24   25   24   24   25   25   25   24   23    24 #>  [1213,]   24   25   24   24   25   25   25   24   23    24 #>  [1214,]   24   25   24   24   25   25   25   24   23    24 #>  [1215,]   24   25   24   24   25   25   25   24   23    24 #>  [1216,]   24   25   24   24   25   25   25   24   23    24 #>  [1217,]   24   25   24   24   25   25   25   24   23    24 #>  [1218,]   25   26   25   25   26   26   26   25   24    25 #>  [1219,]   24   25   24   24   25   25   25   24   23    24 #>  [1220,]   24   25   24   24   25   25   25   24   23    24 #>  [1221,]   24   25   24   24   25   25   25   24   23    24 #>  [1222,]   24   25   24   24   25   25   25   24   23    24 #>  [1223,]   24   25   24   24   25   25   25   24   23    24 #>  [1224,]   24   25   24   24   25   25   25   24   23    24 #>  [1225,]   24   25   24   24   25   25   25   24   23    24 #>  [1226,]   24   25   24   24   25   25   25   24   23    24 #>  [1227,]   24   25   24   24   25   25   25   24   23    24 #>  [1228,]   24   25   24   24   25   25   25   24   23    24 #>  [1229,]   24   25   24   24   25   25   25   24   23    24 #>  [1230,]   24   25   24   24   25   25   25   24   23    24 #>  [1231,]   24   25   24   24   25   25   25   24   23    24 #>  [1232,]   25   26   25   25   26   26   26   25   24    25 #>  [1233,]   24   25   24   24   25   25   25   24   23    24 #>  [1234,]   24   25   24   24   25   25   25   24   23    24 #>  [1235,]   24   25   24   24   25   25   25   24   23    24 #>  [1236,]   24   25   24   24   25   25   25   24   23    24 #>  [1237,]   24   25   24   24   25   25   25   24   23    24 #>  [1238,]   24   25   24   24   25   25   25   24   23    24 #>  [1239,]   24   25   24   24   25   25   25   24   23    24 #>  [1240,]   24   25   24   24   25   25   25   24   23    24 #>  [1241,]   24   25   24   24   25   25   25   24   23    24 #>  [1242,]   24   25   24   24   25   25   25   24   23    24 #>  [1243,]   24   25   24   24   25   25   25   24   23    24 #>  [1244,]   24   25   24   24   25   25   25   24   23    24 #>  [1245,]   24   25   24   24   25   25   25   24   23    24 #>  [1246,]   24   25   24   24   25   25   25   24   23    24 #>  [1247,]   24   25   24   24   25   25   25   24   23    24 #>  [1248,]   24   25   24   24   25   25   25   24   23    24 #>  [1249,]   24   25   24   24   25   25   25   24   23    24 #>  [1250,]   24   25   24   24   25   25   25   24   23    24 #>  [1251,]   24   25   24   24   25   25   25   24   23    24 #>  [1252,]   24   25   24   24   25   25   25   24   23    24 #>  [1253,]   24   25   24   24   25   25   25   24   23    24 #>  [1254,]   24   25   24   24   25   25   25   24   23    24 #>  [1255,]   24   25   24   24   25   25   25   24   23    24 #>  [1256,]   24   25   24   24   25   25   25   24   23    24 #>  [1257,]   24   25   24   24   25   25   25   24   23    24 #>  [1258,]   24   25   24   24   25   25   25   24   23    24 #>  [1259,]   24   25   24   24   25   25   25   24   23    24 #>  [1260,]   24   25   24   24   25   25   25   24   23    24 #>  [1261,]   24   25   24   24   25   25   25   24   23    24 #>  [1262,]   24   25   24   24   25   25   25   24   23    24 #>  [1263,]   24   25   24   24   25   25   25   24   23    24 #>  [1264,]   24   25   24   24   25   25   25   24   23    24 #>  [1265,]   24   25   24   24   25   25   25   24   23    24 #>  [1266,]   24   25   24   24   25   25   25   24   23    24 #>  [1267,]   24   25   24   24   25   25   25   24   23    24 #>  [1268,]   24   25   24   24   25   25   25   24   23    24 #>  [1269,]   24   25   24   24   25   25   25   24   23    24 #>  [1270,]   24   25   24   24   25   25   25   24   23    24 #>  [1271,]   25   26   25   25   26   26   26   25   24    25 #>  [1272,]   24   25   24   24   25   25   25   24   23    24 #>  [1273,]   24   25   24   24   25   25   25   24   23    24 #>  [1274,]   24   25   24   24   25   25   25   24   23    24 #>  [1275,]   25   26   25   25   26   26   26   25   24    25 #>  [1276,]   24   25   24   24   25   25   25   24   23    24 #>  [1277,]   24   25   24   24   25   25   25   24   23    24 #>  [1278,]   24   25   24   24   25   25   25   24   23    24 #>  [1279,]   24   25   24   24   25   25   25   24   23    24 #>  [1280,]   24   25   24   24   25   25   25   24   23    24 #>  [1281,]   24   25   24   24   25   25   25   24   23    24 #>  [1282,]   24   25   24   24   25   25   25   24   23    24 #>  [1283,]   24   25   24   24   25   25   25   24   23    24 #>  [1284,]   24   25   24   24   25   25   25   24   23    24 #>  [1285,]   24   25   24   24   25   25   25   24   23    24 #>  [1286,]   24   25   24   24   25   25   25   24   23    24 #>  [1287,]   24   25   24   24   25   25   25   24   23    24 #>  [1288,]   24   25   24   24   25   25   25   24   23    24 #>  [1289,]   24   25   24   24   25   25   25   24   23    24 #>  [1290,]   24   25   24   24   25   25   25   24   23    24 #>  [1291,]   24   25   24   24   25   25   25   24   23    24 #>  [1292,]   24   25   24   24   25   25   25   24   23    24 #>  [1293,]   24   25   24   24   25   25   25   24   23    24 #>  [1294,]   24   25   24   24   25   25   25   24   23    24 #>  [1295,]   25   26   25   25   26   26   26   25   24    25 #>  [1296,]   24   25   24   24   25   25   25   24   23    24 #>  [1297,]   24   25   24   24   25   25   25   24   23    24 #>  [1298,]   24   25   24   24   25   25   25   24   23    24 #>  [1299,]   24   25   24   24   25   25   25   24   23    24 #>  [1300,]   25   26   25   25   26   26   26   25   24    25 #>  [1301,]   27   28   27   27   28   28   27   27   26    27 #>  [1302,]   27   28   27   27   28   28   27   27   26    27 #>  [1303,]   26   27   26   26   27   27   27   26   25    26 #>  [1304,]   27   28   27   27   28   28   27   27   26    27 #>  [1305,]   27   28   27   27   28   28   27   27   26    27 #>  [1306,]   27   28   27   27   28   28   27   27   26    27 #>  [1307,]   26   27   26   26   27   27   27   26   25    26 #>  [1308,]   27   28   27   27   28   28   27   26   25    26 #>  [1309,]   27   28   27   27   28   28   27   27   26    27 #>  [1310,]   27   28   27   27   28   28   27   27   26    27 #>  [1311,]   27   28   27   27   28   28   27   27   26    27 #>  [1312,]   27   28   27   27   28   28   27   27   26    27 #>  [1313,]   27   28   27   27   28   28   27   26   25    26 #>  [1314,]   27   28   27   27   28   28   27   27   26    27 #>  [1315,]   27   28   27   27   28   28   27   27   26    27 #>  [1316,]   27   28   27   27   28   28   27   26   25    26 #>  [1317,]   27   28   27   27   28   28   27   26   25    26 #>  [1318,]   27   28   27   27   28   28   27   27   26    27 #>  [1319,]   27   28   27   27   28   28   27   27   26    27 #>  [1320,]   27   28   27   27   28   28   27   26   25    26 #>  [1321,]   27   28   27   27   28   28   27   27   26    27 #>  [1322,]   27   28   27   27   28   28   27   26   25    26 #>  [1323,]   27   28   27   27   28   28   27   27   26    27 #>  [1324,]   27   28   27   27   28   28   27   26   25    26 #>  [1325,]   27   28   27   27   28   28   27   26   25    26 #>  [1326,]   27   28   27   27   28   28   27   27   26    27 #>  [1327,]   27   28   27   27   28   28   27   27   26    27 #>  [1328,]   27   28   27   27   28   28   27   27   26    27 #>  [1329,]   27   28   27   27   28   28   27   27   26    27 #>  [1330,]   27   28   27   27   28   28   27   27   26    27 #>  [1331,]   27   28   27   27   28   28   27   27   26    27 #>  [1332,]   27   28   27   27   28   28   27   27   26    27 #>  [1333,]   27   28   27   27   28   28   27   27   26    27 #>  [1334,]   27   28   27   27   28   28   27   27   26    27 #>  [1335,]   27   28   27   27   28   28   27   27   26    27 #>  [1336,]   27   28   27   27   28   28   27   27   26    27 #>  [1337,]   27   28   27   27   28   28   27   27   26    27 #>  [1338,]   27   28   27   27   28   28   27   27   26    27 #>  [1339,]   27   28   27   27   28   28   27   26   25    26 #>  [1340,]   27   28   27   27   28   28   27   26   25    26 #>  [1341,]   27   28   27   27   28   28   27   27   26    27 #>  [1342,]   27   28   27   27   28   28   27   27   26    27 #>  [1343,]   27   28   27   27   28   28   27   26   25    26 #>  [1344,]   27   28   27   27   28   28   27   26   25    26 #>  [1345,]   27   28   27   27   28   28   27   26   25    26 #>  [1346,]   27   28   27   27   28   28   27   26   25    26 #>  [1347,]   27   28   27   27   28   28   27   26   25    26 #>  [1348,]   27   28   27   27   28   28   27   27   26    27 #>  [1349,]   26   27   26   26   27   27   27   26   25    26 #>  [1350,]   27   28   27   27   28   28   27   26   25    26 #>  [1351,]   27   28   27   27   28   28   27   26   25    26 #>  [1352,]   27   28   27   27   28   28   27   27   26    27 #>  [1353,]   26   27   26   26   27   27   27   26   25    26 #>  [1354,]   27   28   27   27   28   28   27   26   25    26 #>  [1355,]   26   27   26   26   27   27   27   26   25    26 #>  [1356,]   26   27   26   26   27   27   27   26   25    26 #>  [1357,]   27   28   27   27   28   28   27   27   26    27 #>  [1358,]   27   28   27   27   28   28   27   27   26    27 #>  [1359,]   27   28   27   27   28   28   27   26   25    26 #>  [1360,]   27   28   27   27   28   28   27   27   26    27 #>  [1361,]   27   28   27   27   28   28   27   27   26    27 #>  [1362,]   27   28   27   27   28   28   27   27   26    27 #>  [1363,]   27   28   27   27   28   28   27   26   25    26 #>  [1364,]   27   28   27   27   28   28   27   27   26    27 #>  [1365,]   27   28   27   27   28   28   27   26   25    26 #>  [1366,]   26   27   26   26   27   27   27   26   25    26 #>  [1367,]   27   28   27   27   28   28   27   27   26    27 #>  [1368,]   27   28   27   27   28   28   27   27   26    27 #>  [1369,]   27   28   27   27   28   28   27   27   26    27 #>  [1370,]   27   28   27   27   28   28   27   26   25    26 #>  [1371,]   27   28   27   27   28   28   27   27   26    27 #>  [1372,]   27   28   27   27   28   28   27   26   25    26 #>  [1373,]   27   28   27   27   28   28   27   27   26    27 #>  [1374,]   27   28   27   27   28   28   27   27   26    27 #>  [1375,]   27   28   27   27   28   28   27   27   26    27 #>  [1376,]   27   28   27   27   28   28   27   26   25    26 #>  [1377,]   27   28   27   27   28   28   27   26   25    26 #>  [1378,]   27   28   27   27   28   28   27   26   25    26 #>  [1379,]   27   28   27   27   28   28   27   26   25    26 #>  [1380,]   27   28   27   27   28   28   27   27   26    27 #>  [1381,]   27   28   27   27   28   28   27   27   26    27 #>  [1382,]   27   28   27   27   28   28   27   27   26    27 #>  [1383,]   27   28   27   27   28   28   27   26   25    26 #>  [1384,]   27   28   27   27   28   28   27   26   25    26 #>  [1385,]   27   28   27   27   28   28   27   27   26    27 #>  [1386,]   27   28   27   27   28   28   27   26   25    26 #>  [1387,]   27   28   27   27   28   28   27   27   26    27 #>  [1388,]   27   28   27   27   28   28   27   27   26    27 #>  [1389,]   27   28   27   27   28   28   27   26   25    26 #>  [1390,]   27   28   27   27   28   28   27   26   25    26 #>  [1391,]   27   28   27   27   28   28   27   27   26    27 #>  [1392,]   27   28   27   27   28   28   27   27   26    27 #>  [1393,]   27   28   27   27   28   28   27   27   26    27 #>  [1394,]   27   28   27   27   28   28   27   26   25    26 #>  [1395,]   27   28   27   27   28   28   27   27   26    27 #>  [1396,]   27   28   27   27   28   28   27   27   26    27 #>  [1397,]   27   28   27   27   28   28   27   27   26    27 #>  [1398,]   27   28   27   27   28   28   27   26   25    26 #>  [1399,]   27   28   27   27   28   28   27   27   26    27 #>  [1400,]   27   28   27   27   28   28   27   26   25    26 #>  [1401,]   29   30   28   28   29   29   28   28   27    28 #>  [1402,]   29   30   28   29   30   30   29   29   28    30 #>  [1403,]   29   30   28   29   30   30   29   29   28    29 #>  [1404,]   29   30   28   28   29   29   28   28   27    28 #>  [1405,]   29   30   28   29   30   30   29   29   28    29 #>  [1406,]   29   30   28   29   30   30   29   29   28    29 #>  [1407,]   29   30   28   29   30   30   29   29   28    30 #>  [1408,]   29   30   28   28   29   29   28   28   27    28 #>  [1409,]   29   30   28   28   29   29   28   28   27    28 #>  [1410,]   29   30   28   29   30   30   29   29   28    29 #>  [1411,]   29   30   28   28   29   29   28   28   27    28 #>  [1412,]   29   30   28   29   30   30   29   29   28    30 #>  [1413,]   29   30   28   28   29   29   28   28   27    28 #>  [1414,]   29   30   28   29   30   30   29   29   28    29 #>  [1415,]   29   30   28   29   30   30   29   29   28    30 #>  [1416,]   29   30   28   29   30   30   29   29   28    30 #>  [1417,]   29   30   28   28   29   29   28   28   27    28 #>  [1418,]   29   30   28   29   30   30   29   29   28    30 #>  [1419,]   29   30   28   29   30   30   29   29   28    30 #>  [1420,]   28   29   28   29   30   30   29   29   28    30 #>  [1421,]   28   29   28   29   30   30   29   29   28    29 #>  [1422,]   29   30   28   28   29   29   28   28   27    28 #>  [1423,]   29   30   28   29   30   30   29   29   28    30 #>  [1424,]   29   30   28   29   30   30   29   29   28    29 #>  [1425,]   28   29   28   29   30   30   29   29   28    29 #>  [1426,]   29   30   28   29   30   30   29   29   28    30 #>  [1427,]   29   30   28   28   29   29   28   28   27    28 #>  [1428,]   29   30   28   29   30   30   29   29   28    29 #>  [1429,]   29   30   28   29   30   30   29   29   28    30 #>  [1430,]   29   30   28   28   29   29   28   28   27    28 #>  [1431,]   29   30   28   29   30   30   29   29   28    29 #>  [1432,]   29   30   28   29   30   30   29   29   28    29 #>  [1433,]   29   30   28   29   30   30   29   29   28    30 #>  [1434,]   29   30   28   29   30   30   29   29   28    29 #>  [1435,]   28   29   28   28   29   29   28   28   27    28 #>  [1436,]   29   30   28   29   30   30   29   29   28    30 #>  [1437,]   29   30   28   29   30   30   29   29   28    30 #>  [1438,]   29   30   28   29   30   30   29   29   28    30 #>  [1439,]   29   30   28   29   30   30   29   29   28    29 #>  [1440,]   29   30   28   29   30   30   29   29   28    29 #>  [1441,]   29   30   28   29   30   30   29   29   28    30 #>  [1442,]   29   30   28   29   30   30   29   29   28    29 #>  [1443,]   29   30   28   28   29   29   28   28   27    28 #>  [1444,]   28   29   28   28   29   29   28   28   27    28 #>  [1445,]   29   30   28   29   30   30   29   29   28    30 #>  [1446,]   29   30   28   28   29   29   28   28   27    28 #>  [1447,]   29   30   28   29   30   30   29   29   28    29 #>  [1448,]   29   30   28   29   30   30   29   29   28    29 #>  [1449,]   29   30   28   28   29   29   28   28   27    28 #>  [1450,]   29   30   28   29   30   30   29   29   28    30 #>  [1451,]   29   30   28   29   30   30   29   29   28    30 #>  [1452,]   29   30   28   28   29   29   28   28   27    28 #>  [1453,]   28   29   28   29   30   30   29   29   28    30 #>  [1454,]   29   30   28   28   29   29   28   28   27    28 #>  [1455,]   29   30   28   28   29   29   28   28   27    28 #>  [1456,]   28   29   28   29   30   30   29   29   28    30 #>  [1457,]   29   30   28   29   30   30   29   29   28    29 #>  [1458,]   29   30   28   28   29   29   28   28   27    28 #>  [1459,]   29   30   28   29   30   30   29   29   28    30 #>  [1460,]   29   30   28   29   30   30   29   29   28    30 #>  [1461,]   29   30   28   29   30   30   29   29   28    30 #>  [1462,]   29   30   28   29   30   30   29   29   28    29 #>  [1463,]   29   30   28   29   30   30   29   29   28    30 #>  [1464,]   29   30   28   29   30   30   29   29   28    30 #>  [1465,]   28   29   28   29   30   30   29   29   28    29 #>  [1466,]   29   30   28   28   29   29   28   28   27    28 #>  [1467,]   29   30   28   29   30   30   29   29   28    29 #>  [1468,]   29   30   28   29   30   30   29   29   28    30 #>  [1469,]   29   30   28   28   29   29   28   28   27    28 #>  [1470,]   29   30   28   29   30   30   29   29   28    29 #>  [1471,]   29   30   28   29   30   30   29   29   28    30 #>  [1472,]   29   30   28   29   30   30   29   29   28    29 #>  [1473,]   29   30   28   29   30   30   29   29   28    29 #>  [1474,]   28   29   28   29   30   30   29   29   28    29 #>  [1475,]   29   30   28   29   30   30   29   29   28    30 #>  [1476,]   29   30   28   29   30   30   29   29   28    29 #>  [1477,]   29   30   28   29   30   30   29   29   28    30 #>  [1478,]   29   30   28   29   30   30   29   29   28    30 #>  [1479,]   29   30   28   28   29   29   28   28   27    28 #>  [1480,]   28   29   28   28   29   29   28   28   27    28 #>  [1481,]   29   30   28   28   29   29   28   28   27    28 #>  [1482,]   29   30   28   28   29   29   28   28   27    28 #>  [1483,]   29   30   28   28   29   29   28   28   27    28 #>  [1484,]   29   30   28   29   30   30   29   29   28    30 #>  [1485,]   28   29   28   29   30   30   29   29   28    30 #>  [1486,]   28   29   28   29   30   30   29   29   28    29 #>  [1487,]   29   30   28   28   29   29   28   28   27    28 #>  [1488,]   29   30   28   28   29   29   28   28   27    28 #>  [1489,]   28   29   28   28   29   29   28   28   27    28 #>  [1490,]   29   30   28   28   29   29   28   28   27    28 #>  [1491,]   29   30   28   29   30   30   29   29   28    29 #>  [1492,]   29   30   28   28   29   29   28   28   27    28 #>  [1493,]   29   30   28   29   30   30   29   29   28    30 #>  [1494,]   29   30   28   29   30   30   29   29   28    29 #>  [1495,]   29   30   28   28   29   29   28   28   27    28 #>  [1496,]   29   30   28   28   29   29   28   28   27    28 #>  [1497,]   29   30   28   29   30   30   29   29   28    30 #>  [1498,]   29   30   28   29   30   30   29   29   28    29 #>  [1499,]   29   30   28   28   29   29   28   28   27    28 #>  [1500,]   29   30   28   29   30   30   29   29   28    30 #>  [1501,]   30   31   30   31   32   32   32   31   30    32 #>  [1502,]   30   31   30   31   32   32   32   31   30    32 #>  [1503,]   30   31   30   31   32   32   31   31   30    32 #>  [1504,]   30   31   30   31   32   32   32   31   30    32 #>  [1505,]   30   31   30   31   32   32   32   31   30    32 #>  [1506,]   30   31   30   31   32   32   31   31   30    32 #>  [1507,]   30   31   30   31   32   32   31   31   30    32 #>  [1508,]   30   31   31   32   33   32   32   31   30    32 #>  [1509,]   30   31   30   31   32   32   32   31   30    32 #>  [1510,]   30   31   30   31   32   32   32   31   30    32 #>  [1511,]   30   31   30   31   32   32   32   31   30    32 #>  [1512,]   30   31   30   31   32   32   32   31   30    32 #>  [1513,]   30   31   31   32   33   32   32   31   30    32 #>  [1514,]   30   31   30   31   32   32   32   31   30    32 #>  [1515,]   30   31   31   32   33   32   32   31   30    32 #>  [1516,]   30   31   30   31   32   32   32   31   30    32 #>  [1517,]   30   31   30   31   32   32   32   31   30    32 #>  [1518,]   30   31   30   31   32   32   32   31   30    32 #>  [1519,]   30   31   31   32   33   32   32   31   30    32 #>  [1520,]   31   32   29   30   31   31   30   30   29    31 #>  [1521,]   30   31   30   31   32   32   31   31   30    32 #>  [1522,]   30   31   31   32   33   32   32   31   30    32 #>  [1523,]   30   31   30   31   32   32   31   31   30    32 #>  [1524,]   31   32   29   30   31   31   30   30   29    31 #>  [1525,]   30   31   30   31   32   32   31   31   30    32 #>  [1526,]   30   31   30   31   32   32   32   31   30    32 #>  [1527,]   30   31   31   32   33   32   32   31   30    32 #>  [1528,]   31   32   29   30   31   31   30   30   29    31 #>  [1529,]   30   31   31   32   33   32   32   31   30    32 #>  [1530,]   30   31   30   31   32   32   32   31   30    32 #>  [1531,]   30   31   30   31   32   32   32   31   30    32 #>  [1532,]   30   31   30   31   32   32   32   31   30    32 #>  [1533,]   30   31   30   31   32   32   32   31   30    32 #>  [1534,]   30   31   30   31   32   32   31   31   30    32 #>  [1535,]   30   31   30   31   32   32   31   31   30    32 #>  [1536,]   30   31   31   32   33   32   32   31   30    32 #>  [1537,]   30   31   31   32   33   32   31   31   30    32 #>  [1538,]   30   31   31   32   33   32   32   31   30    32 #>  [1539,]   30   31   30   31   32   32   32   31   30    32 #>  [1540,]   30   31   30   31   32   32   32   31   30    32 #>  [1541,]   30   31   31   32   33   32   32   31   30    32 #>  [1542,]   30   31   30   31   32   32   31   31   30    32 #>  [1543,]   30   31   30   31   32   32   32   31   30    32 #>  [1544,]   30   31   30   31   32   32   31   31   30    32 #>  [1545,]   30   31   30   31   32   32   32   31   30    32 #>  [1546,]   30   31   31   32   33   32   32   31   30    32 #>  [1547,]   30   31   30   31   32   32   32   31   30    32 #>  [1548,]   30   31   30   31   32   32   32   31   30    32 #>  [1549,]   30   31   30   31   32   32   32   31   30    32 #>  [1550,]   31   32   29   30   31   31   30   30   29    31 #>  [1551,]   30   31   31   32   33   32   32   31   30    32 #>  [1552,]   31   32   29   30   31   31   30   30   29    31 #>  [1553,]   30   31   31   32   33   32   31   31   30    32 #>  [1554,]   30   31   30   31   32   32   31   31   30    32 #>  [1555,]   30   31   31   32   33   32   31   31   30    32 #>  [1556,]   30   31   30   31   32   32   31   31   30    32 #>  [1557,]   30   31   30   31   32   32   31   31   30    32 #>  [1558,]   30   31   31   32   33   32   32   31   30    32 #>  [1559,]   30   31   30   31   32   32   32   31   30    32 #>  [1560,]   30   31   31   32   33   32   32   31   30    32 #>  [1561,]   30   31   30   31   32   32   32   31   30    32 #>  [1562,]   30   31   30   31   32   32   32   31   30    32 #>  [1563,]   30   31   30   31   32   32   32   31   30    32 #>  [1564,]   30   31   31   32   33   32   31   31   30    32 #>  [1565,]   30   31   30   31   32   32   31   31   30    32 #>  [1566,]   30   31   31   32   33   32   32   31   30    32 #>  [1567,]   30   31   30   31   32   32   32   31   30    32 #>  [1568,]   30   31   30   31   32   32   32   31   30    32 #>  [1569,]   30   31   31   32   33   32   32   31   30    32 #>  [1570,]   30   31   30   31   32   32   32   31   30    32 #>  [1571,]   30   31   31   32   33   32   32   31   30    32 #>  [1572,]   30   31   30   31   32   32   32   31   30    32 #>  [1573,]   30   31   30   31   32   32   31   31   30    32 #>  [1574,]   30   31   30   31   32   32   31   31   30    32 #>  [1575,]   30   31   30   31   32   32   32   31   30    32 #>  [1576,]   31   32   29   30   31   31   30   30   29    31 #>  [1577,]   30   31   31   32   33   32   32   31   30    32 #>  [1578,]   30   31   30   31   32   32   32   31   30    32 #>  [1579,]   30   31   30   31   32   32   32   31   30    32 #>  [1580,]   30   31   31   32   33   32   31   31   30    32 #>  [1581,]   30   31   31   32   33   32   32   31   30    32 #>  [1582,]   30   31   30   31   32   32   31   31   30    32 #>  [1583,]   30   31   31   32   33   32   32   31   30    32 #>  [1584,]   30   31   30   31   32   32   31   31   30    32 #>  [1585,]   30   31   30   31   32   32   31   31   30    32 #>  [1586,]   31   32   29   30   31   31   30   30   29    31 #>  [1587,]   30   31   31   32   33   32   32   31   30    32 #>  [1588,]   30   31   30   31   32   32   31   31   30    32 #>  [1589,]   30   31   30   31   32   32   31   31   30    32 #>  [1590,]   30   31   31   32   33   32   32   31   30    32 #>  [1591,]   30   31   30   31   32   32   32   31   30    32 #>  [1592,]   30   31   30   31   32   32   32   31   30    32 #>  [1593,]   30   31   30   31   32   32   32   31   30    32 #>  [1594,]   30   31   30   31   32   32   31   31   30    32 #>  [1595,]   30   31   30   31   32   32   32   31   30    32 #>  [1596,]   30   31   31   32   33   32   32   31   30    32 #>  [1597,]   30   31   31   32   33   32   32   31   30    32 #>  [1598,]   30   31   30   31   32   32   31   31   30    32 #>  [1599,]   30   31   30   31   32   32   31   31   30    32 #>  [1600,]   30   31   31   32   33   32   32   31   30    32 #>  [1601,]   33   34   33   34   35   34   34   33   32    34 #>  [1602,]   33   34   33   34   35   34   34   33   32    34 #>  [1603,]   33   34   33   34   35   34   34   33   32    34 #>  [1604,]   33   34   33   34   35   34   34   33   32    34 #>  [1605,]   33   34   33   34   35   34   34   33   32    34 #>  [1606,]   33   34   33   34   35   34   34   33   32    34 #>  [1607,]   33   34   33   34   35   35   35   34   33    34 #>  [1608,]   33   34   33   34   35   34   34   33   32    34 #>  [1609,]   33   34   33   34   35   34   34   33   32    34 #>  [1610,]   33   34   33   34   35   35   35   34   33    34 #>  [1611,]   33   34   33   34   35   34   34   33   32    34 #>  [1612,]   33   34   33   34   35   34   34   33   32    34 #>  [1613,]   33   34   33   34   35   34   34   33   32    34 #>  [1614,]   33   34   33   34   35   34   34   33   32    34 #>  [1615,]   33   34   33   34   35   34   34   33   32    34 #>  [1616,]   33   34   33   34   35   35   35   34   33    34 #>  [1617,]   33   34   33   34   35   34   34   33   32    34 #>  [1618,]   33   34   33   34   35   34   34   33   32    34 #>  [1619,]   33   34   33   34   35   34   34   33   32    34 #>  [1620,]   33   34   33   34   35   35   35   34   33    34 #>  [1621,]   33   34   33   34   35   34   34   33   32    34 #>  [1622,]   33   34   33   34   35   34   34   33   32    34 #>  [1623,]   33   34   33   34   35   34   34   33   32    34 #>  [1624,]   33   34   33   34   35   35   35   34   33    34 #>  [1625,]   32   33   32   33   34   33   33   32   31    33 #>  [1626,]   33   34   33   34   35   34   34   33   32    34 #>  [1627,]   33   34   33   34   35   34   34   33   32    34 #>  [1628,]   33   34   33   34   35   35   35   34   33    34 #>  [1629,]   33   34   33   34   35   34   34   33   32    34 #>  [1630,]   33   34   33   34   35   34   34   33   32    34 #>  [1631,]   33   34   33   34   35   34   34   33   32    34 #>  [1632,]   33   34   33   34   35   34   34   33   32    34 #>  [1633,]   33   34   33   34   35   34   34   33   32    34 #>  [1634,]   33   34   33   34   35   34   34   33   32    34 #>  [1635,]   33   34   33   34   35   34   34   33   32    34 #>  [1636,]   33   34   33   34   35   34   34   33   32    34 #>  [1637,]   33   34   33   34   35   34   34   33   32    34 #>  [1638,]   33   34   33   34   35   34   34   33   32    34 #>  [1639,]   33   34   33   34   35   34   34   33   32    34 #>  [1640,]   33   34   33   34   35   34   34   33   32    34 #>  [1641,]   33   34   33   34   35   34   34   33   32    34 #>  [1642,]   33   34   33   34   35   34   34   33   32    34 #>  [1643,]   33   34   33   34   35   34   34   33   32    34 #>  [1644,]   33   34   33   34   35   34   34   33   32    34 #>  [1645,]   33   34   33   34   35   34   34   33   32    34 #>  [1646,]   33   34   33   34   35   34   34   33   32    34 #>  [1647,]   33   34   33   34   35   34   34   33   32    34 #>  [1648,]   33   34   33   34   35   34   34   33   32    34 #>  [1649,]   33   34   33   34   35   34   34   33   32    34 #>  [1650,]   33   34   33   34   35   35   35   34   33    34 #>  [1651,]   33   34   33   34   35   34   34   33   32    34 #>  [1652,]   33   34   33   34   35   35   35   34   33    34 #>  [1653,]   33   34   33   34   35   34   34   33   32    34 #>  [1654,]   33   34   33   34   35   35   35   34   33    34 #>  [1655,]   33   34   33   34   35   34   34   33   32    34 #>  [1656,]   32   33   32   33   34   33   33   32   31    33 #>  [1657,]   33   34   33   34   35   34   34   33   32    34 #>  [1658,]   33   34   33   34   35   34   34   33   32    34 #>  [1659,]   33   34   33   34   35   34   34   33   32    34 #>  [1660,]   33   34   33   34   35   34   34   33   32    34 #>  [1661,]   33   34   33   34   35   34   34   33   32    34 #>  [1662,]   33   34   33   34   35   34   34   33   32    34 #>  [1663,]   33   34   33   34   35   34   34   33   32    34 #>  [1664,]   33   34   33   34   35   34   34   33   32    34 #>  [1665,]   32   33   32   33   34   33   33   32   31    33 #>  [1666,]   33   34   33   34   35   34   34   33   32    34 #>  [1667,]   33   34   33   34   35   34   34   33   32    34 #>  [1668,]   33   34   33   34   35   34   34   33   32    34 #>  [1669,]   33   34   33   34   35   34   34   33   32    34 #>  [1670,]   33   34   33   34   35   34   34   33   32    34 #>  [1671,]   33   34   33   34   35   34   34   33   32    34 #>  [1672,]   33   34   33   34   35   34   34   33   32    34 #>  [1673,]   33   34   33   34   35   34   34   33   32    34 #>  [1674,]   33   34   33   34   35   34   34   33   32    34 #>  [1675,]   33   34   33   34   35   34   34   33   32    34 #>  [1676,]   33   34   33   34   35   35   35   34   33    34 #>  [1677,]   33   34   33   34   35   34   34   33   32    34 #>  [1678,]   33   34   33   34   35   34   34   33   32    34 #>  [1679,]   33   34   33   34   35   34   34   33   32    34 #>  [1680,]   32   33   32   33   34   33   33   32   31    33 #>  [1681,]   33   34   33   34   35   34   34   33   32    34 #>  [1682,]   33   34   33   34   35   34   34   33   32    34 #>  [1683,]   33   34   33   34   35   34   34   33   32    34 #>  [1684,]   33   34   33   34   35   34   34   33   32    34 #>  [1685,]   32   33   32   33   34   33   33   32   31    33 #>  [1686,]   33   34   33   34   35   35   35   34   33    34 #>  [1687,]   33   34   33   34   35   34   34   33   32    34 #>  [1688,]   33   34   33   34   35   34   34   33   32    34 #>  [1689,]   32   33   32   33   34   33   33   32   31    33 #>  [1690,]   33   34   33   34   35   34   34   33   32    34 #>  [1691,]   33   34   33   34   35   35   35   34   33    34 #>  [1692,]   33   34   33   34   35   34   34   33   32    34 #>  [1693,]   33   34   33   34   35   34   34   33   32    34 #>  [1694,]   33   34   33   34   35   34   34   33   32    34 #>  [1695,]   33   34   33   34   35   34   34   33   32    34 #>  [1696,]   33   34   33   34   35   34   34   33   32    34 #>  [1697,]   33   34   33   34   35   34   34   33   32    34 #>  [1698,]   33   34   33   34   35   34   34   33   32    34 #>  [1699,]   33   34   33   34   35   34   34   33   32    34 #>  [1700,]   33   34   33   34   35   34   34   33   32    34 #>  [1701,]   35   36   35   36   37   37   37   36   35    36 #>  [1702,]   34   35   34   35   36   36   36   35   34    35 #>  [1703,]   34   35   34   35   36   36   36   35   34    35 #>  [1704,]   35   36   35   36   37   37   37   36   35    36 #>  [1705,]   34   35   34   35   36   36   36   35   34    35 #>  [1706,]   34   35   34   35   36   36   36   35   34    35 #>  [1707,]   35   36   35   36   37   37   37   36   35    36 #>  [1708,]   34   35   34   35   36   36   36   35   34    35 #>  [1709,]   35   36   35   36   37   37   37   36   35    36 #>  [1710,]   35   36   35   36   37   37   37   36   35    36 #>  [1711,]   34   35   34   35   36   36   36   35   34    35 #>  [1712,]   34   35   34   35   36   36   36   35   34    35 #>  [1713,]   35   36   35   36   37   37   37   36   35    36 #>  [1714,]   35   36   35   36   37   37   37   36   35    36 #>  [1715,]   34   35   34   35   36   36   36   35   34    35 #>  [1716,]   35   36   35   36   37   37   37   36   35    36 #>  [1717,]   34   35   34   35   36   36   36   35   34    35 #>  [1718,]   34   35   34   35   36   36   36   35   34    35 #>  [1719,]   34   35   34   35   36   36   36   35   34    35 #>  [1720,]   35   36   35   36   37   37   37   36   35    36 #>  [1721,]   34   35   34   35   36   36   36   35   34    35 #>  [1722,]   35   36   35   36   37   37   37   36   35    36 #>  [1723,]   34   35   34   35   36   36   36   35   34    35 #>  [1724,]   35   36   35   36   37   37   37   36   35    36 #>  [1725,]   35   36   35   36   37   37   37   36   35    36 #>  [1726,]   34   35   34   35   36   36   36   35   34    35 #>  [1727,]   34   35   34   35   36   36   36   35   34    35 #>  [1728,]   35   36   35   36   37   37   37   36   35    36 #>  [1729,]   34   35   34   35   36   36   36   35   34    35 #>  [1730,]   34   35   34   35   36   36   36   35   34    35 #>  [1731,]   34   35   34   35   36   36   36   35   34    35 #>  [1732,]   34   35   34   35   36   36   36   35   34    35 #>  [1733,]   34   35   34   35   36   36   36   35   34    35 #>  [1734,]   34   35   34   35   36   36   36   35   34    35 #>  [1735,]   34   35   34   35   36   36   36   35   34    35 #>  [1736,]   35   36   35   36   37   37   37   36   35    36 #>  [1737,]   34   35   34   35   36   36   36   35   34    35 #>  [1738,]   34   35   34   35   36   36   36   35   34    35 #>  [1739,]   35   36   35   36   37   37   37   36   35    36 #>  [1740,]   34   35   34   35   36   36   36   35   34    35 #>  [1741,]   34   35   34   35   36   36   36   35   34    35 #>  [1742,]   34   35   34   35   36   36   36   35   34    35 #>  [1743,]   34   35   34   35   36   36   36   35   34    35 #>  [1744,]   34   35   34   35   36   36   36   35   34    35 #>  [1745,]   34   35   34   35   36   36   36   35   34    35 #>  [1746,]   34   35   34   35   36   36   36   35   34    35 #>  [1747,]   34   35   34   35   36   36   36   35   34    35 #>  [1748,]   34   35   34   35   36   36   36   35   34    35 #>  [1749,]   34   35   34   35   36   36   36   35   34    35 #>  [1750,]   35   36   35   36   37   37   37   36   35    36 #>  [1751,]   34   35   34   35   36   36   36   35   34    35 #>  [1752,]   35   36   35   36   37   37   37   36   35    36 #>  [1753,]   35   36   35   36   37   37   37   36   35    36 #>  [1754,]   35   36   35   36   37   37   37   36   35    36 #>  [1755,]   35   36   35   36   37   37   37   36   35    36 #>  [1756,]   34   35   34   35   36   36   36   35   34    35 #>  [1757,]   35   36   35   36   37   37   37   36   35    36 #>  [1758,]   35   36   35   36   37   37   37   36   35    36 #>  [1759,]   35   36   35   36   37   37   37   36   35    36 #>  [1760,]   34   35   34   35   36   36   36   35   34    35 #>  [1761,]   34   35   34   35   36   36   36   35   34    35 #>  [1762,]   34   35   34   35   36   36   36   35   34    35 #>  [1763,]   34   35   34   35   36   36   36   35   34    35 #>  [1764,]   34   35   34   35   36   36   36   35   34    35 #>  [1765,]   34   35   34   35   36   36   36   35   34    35 #>  [1766,]   34   35   34   35   36   36   36   35   34    35 #>  [1767,]   35   36   35   36   37   37   37   36   35    36 #>  [1768,]   34   35   34   35   36   36   36   35   34    35 #>  [1769,]   34   35   34   35   36   36   36   35   34    35 #>  [1770,]   34   35   34   35   36   36   36   35   34    35 #>  [1771,]   34   35   34   35   36   36   36   35   34    35 #>  [1772,]   35   36   35   36   37   37   37   36   35    36 #>  [1773,]   35   36   35   36   37   37   37   36   35    36 #>  [1774,]   34   35   34   35   36   36   36   35   34    35 #>  [1775,]   34   35   34   35   36   36   36   35   34    35 #>  [1776,]   35   36   35   36   37   37   37   36   35    36 #>  [1777,]   34   35   34   35   36   36   36   35   34    35 #>  [1778,]   34   35   34   35   36   36   36   35   34    35 #>  [1779,]   34   35   34   35   36   36   36   35   34    35 #>  [1780,]   34   35   34   35   36   36   36   35   34    35 #>  [1781,]   34   35   34   35   36   36   36   35   34    35 #>  [1782,]   34   35   34   35   36   36   36   35   34    35 #>  [1783,]   34   35   34   35   36   36   36   35   34    35 #>  [1784,]   34   35   34   35   36   36   36   35   34    35 #>  [1785,]   35   36   35   36   37   37   37   36   35    36 #>  [1786,]   35   36   35   36   37   37   37   36   35    36 #>  [1787,]   34   35   34   35   36   36   36   35   34    35 #>  [1788,]   34   35   34   35   36   36   36   35   34    35 #>  [1789,]   34   35   34   35   36   36   36   35   34    35 #>  [1790,]   35   36   35   36   37   37   37   36   35    36 #>  [1791,]   35   36   35   36   37   37   37   36   35    36 #>  [1792,]   34   35   34   35   36   36   36   35   34    35 #>  [1793,]   34   35   34   35   36   36   36   35   34    35 #>  [1794,]   34   35   34   35   36   36   36   35   34    35 #>  [1795,]   34   35   34   35   36   36   36   35   34    35 #>  [1796,]   34   35   34   35   36   36   36   35   34    35 #>  [1797,]   34   35   34   35   36   36   36   35   34    35 #>  [1798,]   34   35   34   35   36   36   36   35   34    35 #>  [1799,]   34   35   34   35   36   36   36   35   34    35 #>  [1800,]   34   35   34   35   36   36   36   35   34    35 #>  [1801,]   37   38   37   38   38   38   38   37   36    37 #>  [1802,]   36   37   36   37   39   39   39   38   37    38 #>  [1803,]   36   37   36   37   39   39   39   38   37    38 #>  [1804,]   36   37   36   37   39   39   39   38   37    38 #>  [1805,]   37   38   37   38   38   38   38   37   36    37 #>  [1806,]   36   37   36   37   39   39   39   38   37    38 #>  [1807,]   36   37   36   37   39   39   39   38   37    38 #>  [1808,]   36   37   36   37   39   39   39   38   37    38 #>  [1809,]   36   37   36   37   40   40   40   39   38    39 #>  [1810,]   37   38   37   38   38   38   38   37   36    37 #>  [1811,]   37   38   37   38   38   38   38   37   36    37 #>  [1812,]   37   38   37   38   38   38   38   37   36    37 #>  [1813,]   36   37   36   37   40   40   40   39   38    39 #>  [1814,]   37   38   37   38   38   38   38   37   36    37 #>  [1815,]   37   38   37   38   38   38   38   37   36    37 #>  [1816,]   36   37   36   37   39   39   39   38   37    38 #>  [1817,]   37   38   37   38   38   38   38   37   36    37 #>  [1818,]   37   38   37   38   38   38   38   37   36    37 #>  [1819,]   36   37   36   37   39   39   39   38   37    38 #>  [1820,]   36   37   36   37   40   40   40   39   38    39 #>  [1821,]   36   37   36   37   39   39   39   38   37    38 #>  [1822,]   37   38   37   38   38   38   38   37   36    37 #>  [1823,]   36   37   36   37   39   39   39   38   37    38 #>  [1824,]   36   37   36   37   39   39   39   38   37    38 #>  [1825,]   36   37   36   37   39   39   39   38   37    38 #>  [1826,]   37   38   37   38   38   38   38   37   36    37 #>  [1827,]   37   38   37   38   38   38   38   37   36    37 #>  [1828,]   36   37   36   37   39   39   39   38   37    38 #>  [1829,]   36   37   36   37   39   39   39   38   37    38 #>  [1830,]   36   37   36   37   39   39   39   38   37    38 #>  [1831,]   37   38   37   38   38   38   38   37   36    37 #>  [1832,]   37   38   37   38   38   38   38   37   36    37 #>  [1833,]   36   37   36   37   40   40   40   39   38    39 #>  [1834,]   36   37   36   37   39   39   39   38   37    38 #>  [1835,]   36   37   36   37   39   39   39   38   37    38 #>  [1836,]   36   37   36   37   40   40   40   39   38    39 #>  [1837,]   36   37   36   37   39   39   39   38   37    38 #>  [1838,]   37   38   37   38   38   38   38   37   36    37 #>  [1839,]   37   38   37   38   38   38   38   37   36    37 #>  [1840,]   36   37   36   37   39   39   39   38   37    38 #>  [1841,]   36   37   36   37   39   39   39   38   37    38 #>  [1842,]   36   37   36   37   40   40   40   39   38    39 #>  [1843,]   37   38   37   38   38   38   38   37   36    37 #>  [1844,]   36   37   36   37   39   39   39   38   37    38 #>  [1845,]   36   37   36   37   39   39   39   38   37    38 #>  [1846,]   36   37   36   37   39   39   39   38   37    38 #>  [1847,]   37   38   37   38   38   38   38   37   36    37 #>  [1848,]   36   37   36   37   39   39   39   38   37    38 #>  [1849,]   36   37   36   37   39   39   39   38   37    38 #>  [1850,]   36   37   36   37   39   39   39   38   37    38 #>  [1851,]   36   37   36   37   40   40   40   39   38    39 #>  [1852,]   37   38   37   38   38   38   38   37   36    37 #>  [1853,]   36   37   36   37   40   40   40   39   38    39 #>  [1854,]   36   37   36   37   40   40   40   39   38    39 #>  [1855,]   36   37   36   37   39   39   39   38   37    38 #>  [1856,]   36   37   36   37   40   40   40   39   38    39 #>  [1857,]   36   37   36   37   39   39   39   38   37    38 #>  [1858,]   37   38   37   38   38   38   38   37   36    37 #>  [1859,]   37   38   37   38   38   38   38   37   36    37 #>  [1860,]   36   37   36   37   39   39   39   38   37    38 #>  [1861,]   37   38   37   38   38   38   38   37   36    37 #>  [1862,]   36   37   36   37   40   40   40   39   38    39 #>  [1863,]   36   37   36   37   39   39   39   38   37    38 #>  [1864,]   36   37   36   37   39   39   39   38   37    38 #>  [1865,]   36   37   36   37   40   40   40   39   38    39 #>  [1866,]   37   38   37   38   38   38   38   37   36    37 #>  [1867,]   36   37   36   37   39   39   39   38   37    38 #>  [1868,]   37   38   37   38   38   38   38   37   36    37 #>  [1869,]   36   37   36   37   39   39   39   38   37    38 #>  [1870,]   37   38   37   38   38   38   38   37   36    37 #>  [1871,]   37   38   37   38   38   38   38   37   36    37 #>  [1872,]   36   37   36   37   39   39   39   38   37    38 #>  [1873,]   36   37   36   37   39   39   39   38   37    38 #>  [1874,]   36   37   36   37   39   39   39   38   37    38 #>  [1875,]   37   38   37   38   38   38   38   37   36    37 #>  [1876,]   36   37   36   37   39   39   39   38   37    38 #>  [1877,]   37   38   37   38   38   38   38   37   36    37 #>  [1878,]   36   37   36   37   39   39   39   38   37    38 #>  [1879,]   37   38   37   38   38   38   38   37   36    37 #>  [1880,]   36   37   36   37   39   39   39   38   37    38 #>  [1881,]   36   37   36   37   39   39   39   38   37    38 #>  [1882,]   36   37   36   37   40   40   40   39   38    39 #>  [1883,]   37   38   37   38   38   38   38   37   36    37 #>  [1884,]   36   37   36   37   40   40   40   39   38    39 #>  [1885,]   36   37   36   37   40   40   40   39   38    39 #>  [1886,]   36   37   36   37   39   39   39   38   37    38 #>  [1887,]   37   38   37   38   38   38   38   37   36    37 #>  [1888,]   36   37   36   37   39   39   39   38   37    38 #>  [1889,]   36   37   36   37   40   40   40   39   38    39 #>  [1890,]   37   38   37   38   38   38   38   37   36    37 #>  [1891,]   37   38   37   38   38   38   38   37   36    37 #>  [1892,]   37   38   37   38   38   38   38   37   36    37 #>  [1893,]   36   37   36   37   40   40   40   39   38    39 #>  [1894,]   36   37   36   37   40   40   40   39   38    39 #>  [1895,]   37   38   37   38   38   38   38   37   36    37 #>  [1896,]   37   38   37   38   38   38   38   37   36    37 #>  [1897,]   36   37   36   37   39   39   39   38   37    38 #>  [1898,]   36   37   36   37   39   39   39   38   37    38 #>  [1899,]   36   37   36   37   39   39   39   38   37    38 #>  [1900,]   37   38   37   38   38   38   38   37   36    37 #>  [1901,]   38   39   38   41   42   41   41   40   39    40 #>  [1902,]   38   40   39   39   41   41   41   40   39    40 #>  [1903,]   38   39   38   40   42   41   41   40   39    40 #>  [1904,]   38   40   39   39   41   41   41   40   39    40 #>  [1905,]   38   40   39   39   41   41   41   40   39    40 #>  [1906,]   38   39   38   40   42   41   41   40   39    40 #>  [1907,]   38   40   39   39   41   41   41   40   39    40 #>  [1908,]   38   40   39   39   41   41   41   40   39    40 #>  [1909,]   38   40   39   39   41   41   42   41   40    41 #>  [1910,]   38   40   39   39   41   41   41   40   39    40 #>  [1911,]   38   39   38   41   42   41   41   40   39    40 #>  [1912,]   38   40   39   39   41   41   41   40   39    40 #>  [1913,]   38   40   39   39   41   41   42   41   40    41 #>  [1914,]   38   39   38   41   42   41   41   40   39    40 #>  [1915,]   38   40   39   39   41   41   41   40   39    40 #>  [1916,]   38   39   38   41   42   41   41   40   39    40 #>  [1917,]   38   40   39   39   41   41   42   41   40    41 #>  [1918,]   38   40   39   39   41   41   42   41   40    41 #>  [1919,]   38   39   38   41   42   41   41   40   39    40 #>  [1920,]   38   40   39   39   41   41   41   40   39    40 #>  [1921,]   38   40   39   39   41   41   41   40   39    40 #>  [1922,]   38   40   39   39   41   41   41   40   39    40 #>  [1923,]   38   40   39   39   41   41   41   40   39    40 #>  [1924,]   38   40   39   39   41   41   41   40   39    40 #>  [1925,]   38   40   39   39   41   41   41   40   39    40 #>  [1926,]   38   40   39   39   41   41   41   40   39    40 #>  [1927,]   38   40   39   39   41   41   42   41   40    41 #>  [1928,]   38   39   38   41   42   41   41   40   39    40 #>  [1929,]   38   40   39   39   41   41   41   40   39    40 #>  [1930,]   38   40   39   39   41   41   41   40   39    40 #>  [1931,]   38   40   39   39   41   41   41   40   39    40 #>  [1932,]   38   40   39   39   41   41   41   40   39    40 #>  [1933,]   38   40   39   39   41   41   41   40   39    40 #>  [1934,]   38   39   38   40   42   41   41   40   39    40 #>  [1935,]   38   39   38   40   42   41   41   40   39    40 #>  [1936,]   38   40   39   39   41   41   41   40   39    40 #>  [1937,]   38   39   38   40   42   41   41   40   39    40 #>  [1938,]   38   39   38   41   42   41   41   40   39    40 #>  [1939,]   38   40   39   39   41   41   41   40   39    40 #>  [1940,]   38   40   39   39   41   41   41   40   39    40 #>  [1941,]   38   40   39   39   41   41   41   40   39    40 #>  [1942,]   38   39   38   40   42   41   42   41   40    41 #>  [1943,]   38   40   39   39   41   41   41   40   39    40 #>  [1944,]   38   40   39   39   41   41   41   40   39    40 #>  [1945,]   38   39   38   41   42   41   41   40   39    40 #>  [1946,]   38   40   39   39   41   41   41   40   39    40 #>  [1947,]   38   40   39   39   41   41   41   40   39    40 #>  [1948,]   38   40   39   39   41   41   41   40   39    40 #>  [1949,]   38   39   38   41   42   41   41   40   39    40 #>  [1950,]   38   40   39   39   41   41   41   40   39    40 #>  [1951,]   38   40   39   39   41   41   42   41   40    41 #>  [1952,]   38   39   38   41   42   41   41   40   39    40 #>  [1953,]   38   40   39   39   41   41   42   41   40    41 #>  [1954,]   38   40   39   39   41   41   41   40   39    40 #>  [1955,]   38   40   39   39   41   41   41   40   39    40 #>  [1956,]   38   40   39   39   41   41   41   40   39    40 #>  [1957,]   38   40   39   39   41   41   41   40   39    40 #>  [1958,]   38   40   39   39   41   41   41   40   39    40 #>  [1959,]   38   40   39   39   41   41   41   40   39    40 #>  [1960,]   38   40   39   39   41   41   41   40   39    40 #>  [1961,]   38   40   39   39   41   41   41   40   39    40 #>  [1962,]   38   40   39   39   41   41   41   40   39    40 #>  [1963,]   38   40   39   39   41   41   41   40   39    40 #>  [1964,]   38   39   38   40   42   41   41   40   39    40 #>  [1965,]   38   40   39   39   41   41   42   41   40    41 #>  [1966,]   38   40   39   39   41   41   42   41   40    41 #>  [1967,]   38   40   39   39   41   41   41   40   39    40 #>  [1968,]   38   39   38   41   42   41   41   40   39    40 #>  [1969,]   38   40   39   39   41   41   41   40   39    40 #>  [1970,]   38   40   39   39   41   41   41   40   39    40 #>  [1971,]   38   40   39   39   41   41   41   40   39    40 #>  [1972,]   38   39   38   41   42   41   41   40   39    40 #>  [1973,]   38   39   38   40   42   41   41   40   39    40 #>  [1974,]   38   40   39   39   41   41   41   40   39    40 #>  [1975,]   38   40   39   39   41   41   41   40   39    40 #>  [1976,]   38   40   39   39   41   41   41   40   39    40 #>  [1977,]   38   39   38   41   42   41   41   40   39    40 #>  [1978,]   38   40   39   39   41   41   41   40   39    40 #>  [1979,]   38   40   39   39   41   41   42   41   40    41 #>  [1980,]   38   40   39   39   41   41   41   40   39    40 #>  [1981,]   38   40   39   39   41   41   41   40   39    40 #>  [1982,]   38   40   39   39   41   41   42   41   40    41 #>  [1983,]   38   40   39   39   41   41   41   40   39    40 #>  [1984,]   38   40   39   39   41   41   42   41   40    41 #>  [1985,]   38   40   39   39   41   41   41   40   39    40 #>  [1986,]   38   40   39   39   41   41   41   40   39    40 #>  [1987,]   38   40   39   39   41   41   41   40   39    40 #>  [1988,]   38   40   39   39   41   41   41   40   39    40 #>  [1989,]   38   39   38   40   42   41   41   40   39    40 #>  [1990,]   38   40   39   39   41   41   41   40   39    40 #>  [1991,]   38   40   39   39   41   41   42   41   40    41 #>  [1992,]   38   40   39   39   41   41   41   40   39    40 #>  [1993,]   38   40   39   39   41   41   42   41   40    41 #>  [1994,]   38   39   38   40   42   41   42   41   40    41 #>  [1995,]   38   40   39   39   41   41   41   40   39    40 #>  [1996,]   38   39   38   41   42   41   41   40   39    40 #>  [1997,]   38   39   38   41   42   41   41   40   39    40 #>  [1998,]   38   40   39   39   41   41   41   40   39    40 #>  [1999,]   38   40   39   39   41   41   41   40   39    40 #>  [2000,]   38   39   38   41   42   41   41   40   39    40 #>  [2001,]   40   42   41   43   44   43   44   43   41    42 #>  [2002,]   39   41   40   42   43   42   43   42   43    43 #>  [2003,]   39   41   40   42   43   42   43   42   42    43 #>  [2004,]   39   41   40   42   43   42   43   42   43    43 #>  [2005,]   40   42   41   43   44   43   44   43   41    42 #>  [2006,]   40   43   42   44   45   43   44   43   41    42 #>  [2007,]   39   41   40   42   43   42   43   42   42    43 #>  [2008,]   39   41   40   42   43   42   43   42   43    43 #>  [2009,]   40   43   42   44   45   43   44   43   41    42 #>  [2010,]   39   41   40   42   43   42   43   42   43    43 #>  [2011,]   40   43   42   44   45   43   44   43   41    42 #>  [2012,]   39   41   40   42   43   42   43   42   42    43 #>  [2013,]   40   42   41   43   44   43   44   43   41    42 #>  [2014,]   39   41   40   42   43   42   43   42   43    43 #>  [2015,]   39   41   40   42   43   42   43   42   43    43 #>  [2016,]   39   41   40   42   43   42   43   42   43    43 #>  [2017,]   40   42   41   43   44   43   44   43   41    42 #>  [2018,]   40   43   42   44   45   43   44   43   41    42 #>  [2019,]   40   43   42   44   45   43   44   43   41    42 #>  [2020,]   40   42   41   43   44   43   44   43   41    42 #>  [2021,]   40   43   42   44   45   43   44   43   41    42 #>  [2022,]   40   42   41   43   44   43   44   43   41    42 #>  [2023,]   39   41   40   42   43   42   43   42   43    43 #>  [2024,]   40   42   41   43   44   43   44   43   41    42 #>  [2025,]   39   41   40   42   43   42   43   42   43    43 #>  [2026,]   39   41   40   42   43   42   43   42   43    43 #>  [2027,]   40   43   42   44   45   43   44   43   41    42 #>  [2028,]   40   42   41   43   44   43   44   43   41    42 #>  [2029,]   40   42   41   43   44   43   44   43   41    42 #>  [2030,]   39   41   40   42   43   42   43   42   43    43 #>  [2031,]   39   41   40   42   43   42   43   42   42    43 #>  [2032,]   39   41   40   42   43   42   43   42   43    43 #>  [2033,]   40   43   42   44   45   43   44   43   41    42 #>  [2034,]   39   41   40   42   43   42   43   42   43    43 #>  [2035,]   39   41   40   42   43   42   43   42   43    43 #>  [2036,]   40   43   42   44   45   43   44   43   41    42 #>  [2037,]   39   41   40   42   43   42   43   42   43    43 #>  [2038,]   40   43   42   44   45   43   44   43   41    42 #>  [2039,]   40   42   41   43   44   43   44   43   41    42 #>  [2040,]   39   41   40   42   43   42   43   42   43    43 #>  [2041,]   40   43   42   44   45   43   44   43   41    42 #>  [2042,]   40   43   42   44   45   43   44   43   41    42 #>  [2043,]   40   42   41   43   44   43   44   43   41    42 #>  [2044,]   39   41   40   42   43   42   43   42   43    43 #>  [2045,]   39   41   40   42   43   42   43   42   43    43 #>  [2046,]   39   41   40   42   43   42   43   42   43    43 #>  [2047,]   39   41   40   42   43   42   43   42   43    43 #>  [2048,]   40   43   42   44   45   43   44   43   41    42 #>  [2049,]   39   41   40   42   43   42   43   42   43    43 #>  [2050,]   40   42   41   43   44   43   44   43   41    42 #>  [2051,]   40   42   41   43   44   43   44   43   41    42 #>  [2052,]   39   41   40   42   43   42   43   42   42    43 #>  [2053,]   40   42   41   43   44   43   44   43   41    42 #>  [2054,]   40   42   41   43   44   43   44   43   41    42 #>  [2055,]   39   41   40   42   43   42   43   42   43    43 #>  [2056,]   40   42   41   43   44   43   44   43   41    42 #>  [2057,]   39   41   40   42   43   42   43   42   43    43 #>  [2058,]   40   43   42   44   45   43   44   43   41    42 #>  [2059,]   39   41   40   42   43   42   43   42   42    43 #>  [2060,]   39   41   40   42   43   42   43   42   42    43 #>  [2061,]   40   43   42   44   45   43   44   43   41    42 #>  [2062,]   40   43   42   44   45   43   44   43   41    42 #>  [2063,]   40   42   41   43   44   43   44   43   41    42 #>  [2064,]   40   43   42   44   45   43   44   43   41    42 #>  [2065,]   40   42   41   43   44   43   44   43   41    42 #>  [2066,]   40   42   41   43   44   43   44   43   41    42 #>  [2067,]   39   41   40   42   43   42   43   42   43    43 #>  [2068,]   39   41   40   42   43   42   43   42   43    43 #>  [2069,]   39   41   40   42   43   42   43   42   43    43 #>  [2070,]   40   42   41   43   44   43   44   43   41    42 #>  [2071,]   39   41   40   42   43   42   43   42   43    43 #>  [2072,]   39   41   40   42   43   42   43   42   43    43 #>  [2073,]   40   43   42   44   45   43   44   43   41    42 #>  [2074,]   39   41   40   42   43   42   43   42   43    43 #>  [2075,]   39   41   40   42   43   42   43   42   43    43 #>  [2076,]   39   41   40   42   43   42   43   42   43    43 #>  [2077,]   40   42   41   43   44   43   44   43   41    42 #>  [2078,]   39   41   40   42   43   42   43   42   43    43 #>  [2079,]   40   42   41   43   44   43   44   43   41    42 #>  [2080,]   39   41   40   42   43   42   43   42   43    43 #>  [2081,]   40   42   41   43   44   43   44   43   41    42 #>  [2082,]   40   43   42   44   45   43   44   43   41    42 #>  [2083,]   40   42   41   43   44   43   44   43   41    42 #>  [2084,]   40   42   41   43   44   43   44   43   41    42 #>  [2085,]   40   43   42   44   45   43   44   43   41    42 #>  [2086,]   39   41   40   42   43   42   43   42   43    43 #>  [2087,]   40   42   41   43   44   43   44   43   41    42 #>  [2088,]   39   41   40   42   43   42   43   42   43    43 #>  [2089,]   40   42   41   43   44   43   44   43   41    42 #>  [2090,]   40   42   41   43   44   43   44   43   41    42 #>  [2091,]   40   42   41   43   44   43   44   43   41    42 #>  [2092,]   39   41   40   42   43   42   43   42   43    43 #>  [2093,]   40   43   42   44   45   43   44   43   41    42 #>  [2094,]   40   42   41   43   44   43   44   43   41    42 #>  [2095,]   39   41   40   42   43   42   43   42   43    43 #>  [2096,]   39   41   40   42   43   42   43   42   43    43 #>  [2097,]   39   41   40   42   43   42   43   42   42    43 #>  [2098,]   39   41   40   42   43   42   43   42   43    43 #>  [2099,]   40   43   42   44   45   43   44   43   41    42 #>  [2100,]   40   42   41   43   44   43   44   43   41    42 #>  [2101,]   42   45   44   45   46   44   45   44   44    44 #>  [2102,]   42   45   44   45   46   44   45   44   44    44 #>  [2103,]   41   44   43   46   47   45   46   45   46    46 #>  [2104,]   41   44   43   47   48   46   47   46   45    45 #>  [2105,]   41   44   43   46   47   45   46   45   47    47 #>  [2106,]   42   45   44   45   46   44   45   44   44    44 #>  [2107,]   41   44   43   46   47   45   46   45   46    46 #>  [2108,]   41   44   43   46   47   45   46   45   46    46 #>  [2109,]   41   44   43   46   47   45   46   45   46    46 #>  [2110,]   41   44   43   47   48   46   47   46   45    45 #>  [2111,]   41   44   43   46   47   45   46   45   47    47 #>  [2112,]   41   44   43   46   47   45   46   45   47    47 #>  [2113,]   42   45   44   45   46   44   45   44   44    44 #>  [2114,]   42   45   44   45   46   44   45   44   44    44 #>  [2115,]   42   45   44   45   46   44   45   44   44    44 #>  [2116,]   42   45   44   45   46   44   45   44   44    44 #>  [2117,]   42   45   44   45   46   44   45   44   44    44 #>  [2118,]   41   44   43   47   48   46   47   46   45    45 #>  [2119,]   41   44   43   46   47   45   46   45   47    47 #>  [2120,]   41   44   43   46   47   45   46   45   46    46 #>  [2121,]   42   45   44   45   46   44   45   44   44    44 #>  [2122,]   41   44   43   46   47   45   46   45   47    47 #>  [2123,]   41   44   43   46   47   45   46   45   46    46 #>  [2124,]   41   44   43   46   47   45   46   45   47    47 #>  [2125,]   41   44   43   47   48   46   47   46   45    45 #>  [2126,]   42   45   44   45   46   44   45   44   44    44 #>  [2127,]   41   44   43   46   47   45   46   45   47    47 #>  [2128,]   41   44   43   46   47   45   46   45   47    47 #>  [2129,]   42   45   44   45   46   44   45   44   44    44 #>  [2130,]   41   44   43   46   47   45   46   45   46    46 #>  [2131,]   41   44   43   46   47   45   46   45   47    47 #>  [2132,]   41   44   43   46   47   45   46   45   47    47 #>  [2133,]   42   45   44   45   46   44   45   44   44    44 #>  [2134,]   41   44   43   46   47   45   46   45   46    46 #>  [2135,]   42   45   44   45   46   44   45   44   44    44 #>  [2136,]   41   44   43   46   47   45   46   45   46    46 #>  [2137,]   41   44   43   46   47   45   46   45   46    46 #>  [2138,]   41   44   43   46   47   45   46   45   47    47 #>  [2139,]   41   44   43   47   48   46   47   46   45    45 #>  [2140,]   41   44   43   46   47   45   46   45   46    46 #>  [2141,]   42   45   44   45   46   44   45   44   44    44 #>  [2142,]   41   44   43   46   47   45   46   45   46    46 #>  [2143,]   41   44   43   47   48   46   47   46   45    45 #>  [2144,]   42   45   44   45   46   44   45   44   44    44 #>  [2145,]   41   44   43   47   48   46   47   46   45    45 #>  [2146,]   41   44   43   46   47   45   46   45   47    47 #>  [2147,]   41   44   43   46   47   45   46   45   47    47 #>  [2148,]   41   44   43   46   47   45   46   45   47    47 #>  [2149,]   41   44   43   46   47   45   46   45   46    46 #>  [2150,]   42   45   44   45   46   44   45   44   44    44 #>  [2151,]   41   44   43   46   47   45   46   45   47    47 #>  [2152,]   41   44   43   46   47   45   46   45   47    47 #>  [2153,]   41   44   43   47   48   46   47   46   45    45 #>  [2154,]   41   44   43   46   47   45   46   45   46    46 #>  [2155,]   41   44   43   46   47   45   46   45   46    46 #>  [2156,]   41   44   43   46   47   45   46   45   46    46 #>  [2157,]   41   44   43   46   47   45   46   45   46    46 #>  [2158,]   41   44   43   46   47   45   46   45   47    47 #>  [2159,]   42   45   44   45   46   44   45   44   44    44 #>  [2160,]   41   44   43   46   47   45   46   45   46    46 #>  [2161,]   42   45   44   45   46   44   45   44   44    44 #>  [2162,]   41   44   43   46   47   45   46   45   46    46 #>  [2163,]   41   44   43   46   47   45   46   45   47    47 #>  [2164,]   41   44   43   46   47   45   46   45   46    46 #>  [2165,]   41   44   43   46   47   45   46   45   46    46 #>  [2166,]   41   44   43   46   47   45   46   45   47    47 #>  [2167,]   41   44   43   46   47   45   46   45   46    46 #>  [2168,]   42   45   44   45   46   44   45   44   44    44 #>  [2169,]   41   44   43   46   47   45   46   45   47    47 #>  [2170,]   42   45   44   45   46   44   45   44   44    44 #>  [2171,]   41   44   43   46   47   45   46   45   47    47 #>  [2172,]   41   44   43   47   48   46   47   46   45    45 #>  [2173,]   42   45   44   45   46   44   45   44   44    44 #>  [2174,]   41   44   43   47   48   46   47   46   45    45 #>  [2175,]   41   44   43   47   48   46   47   46   45    45 #>  [2176,]   42   45   44   45   46   44   45   44   44    44 #>  [2177,]   42   45   44   45   46   44   45   44   44    44 #>  [2178,]   41   44   43   46   47   45   46   45   47    47 #>  [2179,]   42   45   44   45   46   44   45   44   44    44 #>  [2180,]   41   44   43   46   47   45   46   45   46    46 #>  [2181,]   42   45   44   45   46   44   45   44   44    44 #>  [2182,]   41   44   43   46   47   45   46   45   46    46 #>  [2183,]   42   45   44   45   46   44   45   44   44    44 #>  [2184,]   41   44   43   47   48   46   47   46   45    45 #>  [2185,]   41   44   43   46   47   45   46   45   46    46 #>  [2186,]   42   45   44   45   46   44   45   44   44    44 #>  [2187,]   41   44   43   46   47   45   46   45   47    47 #>  [2188,]   41   44   43   46   47   45   46   45   46    46 #>  [2189,]   41   44   43   46   47   45   46   45   46    46 #>  [2190,]   41   44   43   46   47   45   46   45   47    47 #>  [2191,]   41   44   43   46   47   45   46   45   47    47 #>  [2192,]   41   44   43   46   47   45   46   45   47    47 #>  [2193,]   42   45   44   45   46   44   45   44   44    44 #>  [2194,]   41   44   43   47   48   46   47   46   45    45 #>  [2195,]   41   44   43   47   48   46   47   46   45    45 #>  [2196,]   42   45   44   45   46   44   45   44   44    44 #>  [2197,]   41   44   43   46   47   45   46   45   46    46 #>  [2198,]   41   44   43   46   47   45   46   45   46    46 #>  [2199,]   42   45   44   45   46   44   45   44   44    44 #>  [2200,]   41   44   43   47   48   46   47   46   45    45 #>  [2201,]   43   46   45   48   49   47   48   47   50    50 #>  [2202,]   44   47   46   49   50   48   49   48   48    48 #>  [2203,]   44   47   46   49   50   48   49   48   48    48 #>  [2204,]   43   46   45   48   49   47   48   47   50    50 #>  [2205,]   43   46   45   48   49   47   48   47   50    50 #>  [2206,]   44   47   46   49   50   48   49   48   48    48 #>  [2207,]   43   46   45   48   49   47   48   47   49    49 #>  [2208,]   43   46   45   48   49   47   48   47   50    50 #>  [2209,]   43   46   45   48   49   47   48   47   50    50 #>  [2210,]   43   46   45   48   49   47   48   47   50    50 #>  [2211,]   43   46   45   48   49   47   48   47   50    50 #>  [2212,]   44   47   46   49   50   48   49   48   48    48 #>  [2213,]   43   46   45   48   49   47   48   47   50    50 #>  [2214,]   43   46   45   48   49   47   48   47   50    50 #>  [2215,]   43   46   45   48   49   47   48   47   50    50 #>  [2216,]   43   46   45   48   49   47   48   47   50    50 #>  [2217,]   43   46   45   48   49   47   48   47   50    50 #>  [2218,]   44   47   46   49   50   48   49   48   48    48 #>  [2219,]   44   47   46   49   50   48   49   48   48    48 #>  [2220,]   44   47   46   49   50   48   49   48   48    48 #>  [2221,]   43   46   45   48   49   47   48   47   49    49 #>  [2222,]   43   46   45   48   49   47   48   47   50    50 #>  [2223,]   43   46   45   48   49   47   48   47   49    49 #>  [2224,]   43   46   45   48   49   47   48   47   50    50 #>  [2225,]   44   47   46   49   50   48   49   48   48    48 #>  [2226,]   43   46   45   48   49   47   48   47   50    50 #>  [2227,]   43   46   45   48   49   47   48   47   50    50 #>  [2228,]   44   47   46   49   50   48   49   48   48    48 #>  [2229,]   43   46   45   48   49   47   48   47   50    50 #>  [2230,]   43   46   45   48   49   47   48   47   50    50 #>  [2231,]   43   46   45   48   49   47   48   47   50    50 #>  [2232,]   43   46   45   48   49   47   48   47   50    50 #>  [2233,]   44   47   46   49   50   48   49   48   48    48 #>  [2234,]   44   47   46   49   50   48   49   48   48    48 #>  [2235,]   43   46   45   48   49   47   48   47   49    49 #>  [2236,]   43   46   45   48   49   47   48   47   50    50 #>  [2237,]   43   46   45   48   49   47   48   47   49    49 #>  [2238,]   43   46   45   48   49   47   48   47   50    50 #>  [2239,]   43   46   45   48   49   47   48   47   50    50 #>  [2240,]   43   46   45   48   49   47   48   47   50    50 #>  [2241,]   43   46   45   48   49   47   48   47   50    50 #>  [2242,]   43   46   45   48   49   47   48   47   49    49 #>  [2243,]   43   46   45   48   49   47   48   47   50    50 #>  [2244,]   43   46   45   48   49   47   48   47   49    49 #>  [2245,]   43   46   45   48   49   47   48   47   50    50 #>  [2246,]   43   46   45   48   49   47   48   47   50    50 #>  [2247,]   43   46   45   48   49   47   48   47   50    50 #>  [2248,]   43   46   45   48   49   47   48   47   50    50 #>  [2249,]   43   46   45   48   49   47   48   47   50    50 #>  [2250,]   43   46   45   48   49   47   48   47   50    50 #>  [2251,]   43   46   45   48   49   47   48   47   50    50 #>  [2252,]   43   46   45   48   49   47   48   47   50    50 #>  [2253,]   43   46   45   48   49   47   48   47   49    49 #>  [2254,]   43   46   45   48   49   47   48   47   50    50 #>  [2255,]   43   46   45   48   49   47   48   47   50    50 #>  [2256,]   43   46   45   48   49   47   48   47   49    49 #>  [2257,]   43   46   45   48   49   47   48   47   49    49 #>  [2258,]   43   46   45   48   49   47   48   47   50    50 #>  [2259,]   43   46   45   48   49   47   48   47   50    50 #>  [2260,]   44   47   46   49   50   48   49   48   48    48 #>  [2261,]   43   46   45   48   49   47   48   47   50    50 #>  [2262,]   43   46   45   48   49   47   48   47   50    50 #>  [2263,]   43   46   45   48   49   47   48   47   50    50 #>  [2264,]   43   46   45   48   49   47   48   47   50    50 #>  [2265,]   44   47   46   49   50   48   49   48   48    48 #>  [2266,]   43   46   45   48   49   47   48   47   50    50 #>  [2267,]   43   46   45   48   49   47   48   47   50    50 #>  [2268,]   43   46   45   48   49   47   48   47   50    50 #>  [2269,]   43   46   45   48   49   47   48   47   50    50 #>  [2270,]   44   47   46   49   50   48   49   48   48    48 #>  [2271,]   43   46   45   48   49   47   48   47   50    50 #>  [2272,]   43   46   45   48   49   47   48   47   50    50 #>  [2273,]   44   47   46   49   50   48   49   48   48    48 #>  [2274,]   43   46   45   48   49   47   48   47   49    49 #>  [2275,]   43   46   45   48   49   47   48   47   50    50 #>  [2276,]   43   46   45   48   49   47   48   47   50    50 #>  [2277,]   43   46   45   48   49   47   48   47   50    50 #>  [2278,]   43   46   45   48   49   47   48   47   50    50 #>  [2279,]   43   46   45   48   49   47   48   47   50    50 #>  [2280,]   43   46   45   48   49   47   48   47   49    49 #>  [2281,]   43   46   45   48   49   47   48   47   50    50 #>  [2282,]   43   46   45   48   49   47   48   47   49    49 #>  [2283,]   43   46   45   48   49   47   48   47   50    50 #>  [2284,]   44   47   46   49   50   48   49   48   48    48 #>  [2285,]   43   46   45   48   49   47   48   47   49    49 #>  [2286,]   43   46   45   48   49   47   48   47   49    49 #>  [2287,]   43   46   45   48   49   47   48   47   50    50 #>  [2288,]   43   46   45   48   49   47   48   47   50    50 #>  [2289,]   43   46   45   48   49   47   48   47   49    49 #>  [2290,]   43   46   45   48   49   47   48   47   50    50 #>  [2291,]   43   46   45   48   49   47   48   47   50    50 #>  [2292,]   43   46   45   48   49   47   48   47   50    50 #>  [2293,]   44   47   46   49   50   48   49   48   48    48 #>  [2294,]   43   46   45   48   49   47   48   47   49    49 #>  [2295,]   43   46   45   48   49   47   48   47   50    50 #>  [2296,]   43   46   45   48   49   47   48   47   50    50 #>  [2297,]   44   47   46   49   50   48   49   48   48    48 #>  [2298,]   44   47   46   49   50   48   49   48   48    48 #>  [2299,]   43   46   45   48   49   47   48   47   49    49 #>  [2300,]   43   46   45   48   49   47   48   47   50    50 #>  [2301,]   45   48   47   50   51   49   50   49   51    51 #>  [2302,]   45   48   47   50   51   49   50   49   51    51 #>  [2303,]   46   49   48   51   52   50   51   50   52    52 #>  [2304,]   45   48   47   50   51   49   50   49   51    51 #>  [2305,]   45   48   47   50   51   49   50   49   51    51 #>  [2306,]   46   49   48   51   52   50   51   50   52    52 #>  [2307,]   45   48   47   50   51   49   50   49   51    51 #>  [2308,]   45   48   47   50   51   49   50   49   51    51 #>  [2309,]   45   48   47   50   51   49   50   49   51    51 #>  [2310,]   45   48   47   50   51   49   50   49   51    51 #>  [2311,]   45   48   47   50   51   49   50   49   51    51 #>  [2312,]   46   50   49   52   53   50   51   50   52    52 #>  [2313,]   45   48   47   50   51   49   50   49   51    51 #>  [2314,]   45   48   47   50   51   49   50   49   51    51 #>  [2315,]   45   48   47   50   51   49   50   49   51    51 #>  [2316,]   45   48   47   50   51   49   50   49   51    51 #>  [2317,]   45   48   47   50   51   49   50   49   51    51 #>  [2318,]   45   48   47   50   51   49   50   49   51    51 #>  [2319,]   46   49   48   51   52   50   51   50   52    52 #>  [2320,]   46   50   49   52   53   50   51   50   52    52 #>  [2321,]   45   48   47   50   51   49   50   49   51    51 #>  [2322,]   45   48   47   50   51   49   50   49   51    51 #>  [2323,]   45   48   47   50   51   49   50   49   51    51 #>  [2324,]   45   48   47   50   51   49   50   49   51    51 #>  [2325,]   46   50   49   52   53   50   51   50   52    52 #>  [2326,]   45   48   47   50   51   49   50   49   51    51 #>  [2327,]   45   48   47   50   51   49   50   49   51    51 #>  [2328,]   46   49   48   51   52   50   51   50   52    52 #>  [2329,]   45   48   47   50   51   49   50   49   51    51 #>  [2330,]   45   48   47   50   51   49   50   49   51    51 #>  [2331,]   45   48   47   50   51   49   50   49   51    51 #>  [2332,]   45   48   47   50   51   49   50   49   51    51 #>  [2333,]   46   50   49   52   53   50   51   50   52    52 #>  [2334,]   46   49   48   51   52   50   51   50   52    52 #>  [2335,]   45   48   47   50   51   49   50   49   51    51 #>  [2336,]   45   48   47   50   51   49   50   49   51    51 #>  [2337,]   45   48   47   50   51   49   50   49   51    51 #>  [2338,]   45   48   47   50   51   49   50   49   51    51 #>  [2339,]   45   48   47   50   51   49   50   49   51    51 #>  [2340,]   45   48   47   50   51   49   50   49   51    51 #>  [2341,]   45   48   47   50   51   49   50   49   51    51 #>  [2342,]   45   48   47   50   51   49   50   49   51    51 #>  [2343,]   45   48   47   50   51   49   50   49   51    51 #>  [2344,]   45   48   47   50   51   49   50   49   51    51 #>  [2345,]   45   48   47   50   51   49   50   49   51    51 #>  [2346,]   45   48   47   50   51   49   50   49   51    51 #>  [2347,]   45   48   47   50   51   49   50   49   51    51 #>  [2348,]   45   48   47   50   51   49   50   49   51    51 #>  [2349,]   45   48   47   50   51   49   50   49   51    51 #>  [2350,]   45   48   47   50   51   49   50   49   51    51 #>  [2351,]   45   48   47   50   51   49   50   49   51    51 #>  [2352,]   45   48   47   50   51   49   50   49   51    51 #>  [2353,]   45   48   47   50   51   49   50   49   51    51 #>  [2354,]   45   48   47   50   51   49   50   49   51    51 #>  [2355,]   45   48   47   50   51   49   50   49   51    51 #>  [2356,]   45   48   47   50   51   49   50   49   51    51 #>  [2357,]   45   48   47   50   51   49   50   49   51    51 #>  [2358,]   45   48   47   50   51   49   50   49   51    51 #>  [2359,]   45   48   47   50   51   49   50   49   51    51 #>  [2360,]   46   50   49   52   53   50   51   50   52    52 #>  [2361,]   45   48   47   50   51   49   50   49   51    51 #>  [2362,]   45   48   47   50   51   49   50   49   51    51 #>  [2363,]   45   48   47   50   51   49   50   49   51    51 #>  [2364,]   45   48   47   50   51   49   50   49   51    51 #>  [2365,]   46   49   48   51   52   50   51   50   52    52 #>  [2366,]   45   48   47   50   51   49   50   49   51    51 #>  [2367,]   45   48   47   50   51   49   50   49   51    51 #>  [2368,]   45   48   47   50   51   49   50   49   51    51 #>  [2369,]   45   48   47   50   51   49   50   49   51    51 #>  [2370,]   46   50   49   52   53   50   51   50   52    52 #>  [2371,]   45   48   47   50   51   49   50   49   51    51 #>  [2372,]   45   48   47   50   51   49   50   49   51    51 #>  [2373,]   46   49   48   51   52   50   51   50   52    52 #>  [2374,]   45   48   47   50   51   49   50   49   51    51 #>  [2375,]   45   48   47   50   51   49   50   49   51    51 #>  [2376,]   45   48   47   50   51   49   50   49   51    51 #>  [2377,]   45   48   47   50   51   49   50   49   51    51 #>  [2378,]   45   48   47   50   51   49   50   49   51    51 #>  [2379,]   45   48   47   50   51   49   50   49   51    51 #>  [2380,]   45   48   47   50   51   49   50   49   51    51 #>  [2381,]   45   48   47   50   51   49   50   49   51    51 #>  [2382,]   45   48   47   50   51   49   50   49   51    51 #>  [2383,]   45   48   47   50   51   49   50   49   51    51 #>  [2384,]   45   48   47   50   51   49   50   49   51    51 #>  [2385,]   45   48   47   50   51   49   50   49   51    51 #>  [2386,]   45   48   47   50   51   49   50   49   51    51 #>  [2387,]   45   48   47   50   51   49   50   49   51    51 #>  [2388,]   45   48   47   50   51   49   50   49   51    51 #>  [2389,]   45   48   47   50   51   49   50   49   51    51 #>  [2390,]   45   48   47   50   51   49   50   49   51    51 #>  [2391,]   45   48   47   50   51   49   50   49   51    51 #>  [2392,]   45   48   47   50   51   49   50   49   51    51 #>  [2393,]   46   50   49   52   53   50   51   50   52    52 #>  [2394,]   45   48   47   50   51   49   50   49   51    51 #>  [2395,]   45   48   47   50   51   49   50   49   51    51 #>  [2396,]   45   48   47   50   51   49   50   49   51    51 #>  [2397,]   46   49   48   51   52   50   51   50   52    52 #>  [2398,]   46   49   48   51   52   50   51   50   52    52 #>  [2399,]   45   48   47   50   51   49   50   49   51    51 #>  [2400,]   45   48   47   50   51   49   50   49   51    51 #>  [2401,]   48   52   51   54   55   52   53   52   54    54 #>  [2402,]   47   51   50   53   54   51   52   51   53    53 #>  [2403,]   47   51   50   53   54   51   52   51   53    53 #>  [2404,]   47   51   50   53   54   51   52   51   53    53 #>  [2405,]   48   52   51   54   55   52   53   52   54    54 #>  [2406,]   47   51   50   53   54   51   52   51   53    53 #>  [2407,]   47   51   50   53   54   51   52   51   53    53 #>  [2408,]   47   51   50   53   54   51   52   51   53    53 #>  [2409,]   47   51   50   53   54   51   52   51   53    53 #>  [2410,]   47   51   50   53   54   51   52   51   53    53 #>  [2411,]   47   51   50   53   54   51   52   51   53    53 #>  [2412,]   47   51   50   53   54   51   52   51   53    53 #>  [2413,]   47   51   50   53   54   51   52   51   53    53 #>  [2414,]   48   52   51   54   55   52   53   52   54    54 #>  [2415,]   48   52   51   54   55   52   53   52   54    54 #>  [2416,]   47   51   50   53   54   51   52   51   53    53 #>  [2417,]   47   51   50   53   54   51   52   51   53    53 #>  [2418,]   48   52   51   54   55   52   53   52   54    54 #>  [2419,]   47   51   50   53   54   51   52   51   53    53 #>  [2420,]   47   51   50   53   54   51   52   51   53    53 #>  [2421,]   47   51   50   53   54   51   52   51   53    53 #>  [2422,]   47   51   50   53   54   51   52   51   53    53 #>  [2423,]   47   51   50   53   54   51   52   51   53    53 #>  [2424,]   47   51   50   53   54   51   52   51   53    53 #>  [2425,]   47   51   50   53   54   51   52   51   53    53 #>  [2426,]   48   52   51   54   55   52   53   52   54    54 #>  [2427,]   48   52   51   54   55   52   53   52   54    54 #>  [2428,]   47   51   50   53   54   51   52   51   53    53 #>  [2429,]   47   51   50   53   54   51   52   51   53    53 #>  [2430,]   47   51   50   53   54   51   52   51   53    53 #>  [2431,]   47   51   50   53   54   51   52   51   53    53 #>  [2432,]   48   52   51   54   55   52   53   52   54    54 #>  [2433,]   47   51   50   53   54   51   52   51   53    53 #>  [2434,]   47   51   50   53   54   51   52   51   53    53 #>  [2435,]   47   51   50   53   54   51   52   51   53    53 #>  [2436,]   47   51   50   53   54   51   52   51   53    53 #>  [2437,]   47   51   50   53   54   51   52   51   53    53 #>  [2438,]   47   51   50   53   54   51   52   51   53    53 #>  [2439,]   47   51   50   53   54   51   52   51   53    53 #>  [2440,]   47   51   50   53   54   51   52   51   53    53 #>  [2441,]   47   51   50   53   54   51   52   51   53    53 #>  [2442,]   47   51   50   53   54   51   52   51   53    53 #>  [2443,]   48   52   51   54   55   52   53   52   54    54 #>  [2444,]   47   51   50   53   54   51   52   51   53    53 #>  [2445,]   47   51   50   53   54   51   52   51   53    53 #>  [2446,]   47   51   50   53   54   51   52   51   53    53 #>  [2447,]   47   51   50   53   54   51   52   51   53    53 #>  [2448,]   47   51   50   53   54   51   52   51   53    53 #>  [2449,]   47   51   50   53   54   51   52   51   53    53 #>  [2450,]   47   51   50   53   54   51   52   51   53    53 #>  [2451,]   47   51   50   53   54   51   52   51   53    53 #>  [2452,]   47   51   50   53   54   51   52   51   53    53 #>  [2453,]   47   51   50   53   54   51   52   51   53    53 #>  [2454,]   47   51   50   53   54   51   52   51   53    53 #>  [2455,]   47   51   50   53   54   51   52   51   53    53 #>  [2456,]   47   51   50   53   54   51   52   51   53    53 #>  [2457,]   47   51   50   53   54   51   52   51   53    53 #>  [2458,]   48   52   51   54   55   52   53   52   54    54 #>  [2459,]   48   52   51   54   55   52   53   52   54    54 #>  [2460,]   47   51   50   53   54   51   52   51   53    53 #>  [2461,]   48   52   51   54   55   52   53   52   54    54 #>  [2462,]   47   51   50   53   54   51   52   51   53    53 #>  [2463,]   47   51   50   53   54   51   52   51   53    53 #>  [2464,]   47   51   50   53   54   51   52   51   53    53 #>  [2465,]   47   51   50   53   54   51   52   51   53    53 #>  [2466,]   48   52   51   54   55   52   53   52   54    54 #>  [2467,]   47   51   50   53   54   51   52   51   53    53 #>  [2468,]   47   51   50   53   54   51   52   51   53    53 #>  [2469,]   47   51   50   53   54   51   52   51   53    53 #>  [2470,]   48   52   51   54   55   52   53   52   54    54 #>  [2471,]   48   52   51   54   55   52   53   52   54    54 #>  [2472,]   47   51   50   53   54   51   52   51   53    53 #>  [2473,]   47   51   50   53   54   51   52   51   53    53 #>  [2474,]   47   51   50   53   54   51   52   51   53    53 #>  [2475,]   48   52   51   54   55   52   53   52   54    54 #>  [2476,]   47   51   50   53   54   51   52   51   53    53 #>  [2477,]   47   51   50   53   54   51   52   51   53    53 #>  [2478,]   47   51   50   53   54   51   52   51   53    53 #>  [2479,]   48   52   51   54   55   52   53   52   54    54 #>  [2480,]   47   51   50   53   54   51   52   51   53    53 #>  [2481,]   47   51   50   53   54   51   52   51   53    53 #>  [2482,]   47   51   50   53   54   51   52   51   53    53 #>  [2483,]   47   51   50   53   54   51   52   51   53    53 #>  [2484,]   47   51   50   53   54   51   52   51   53    53 #>  [2485,]   47   51   50   53   54   51   52   51   53    53 #>  [2486,]   47   51   50   53   54   51   52   51   53    53 #>  [2487,]   48   52   51   54   55   52   53   52   54    54 #>  [2488,]   47   51   50   53   54   51   52   51   53    53 #>  [2489,]   47   51   50   53   54   51   52   51   53    53 #>  [2490,]   47   51   50   53   54   51   52   51   53    53 #>  [2491,]   48   52   51   54   55   52   53   52   54    54 #>  [2492,]   47   51   50   53   54   51   52   51   53    53 #>  [2493,]   47   51   50   53   54   51   52   51   53    53 #>  [2494,]   47   51   50   53   54   51   52   51   53    53 #>  [2495,]   48   52   51   54   55   52   53   52   54    54 #>  [2496,]   47   51   50   53   54   51   52   51   53    53 #>  [2497,]   47   51   50   53   54   51   52   51   53    53 #>  [2498,]   47   51   50   53   54   51   52   51   53    53 #>  [2499,]   47   51   50   53   54   51   52   51   53    53 #>  [2500,]   48   52   51   54   55   52   53   52   54    54 #>  [2501,]   50   54   53   56   57   54   55   54   57    56 #>  [2502,]   49   53   52   55   56   53   54   53   55    55 #>  [2503,]   49   53   52   55   56   53   54   53   55    55 #>  [2504,]   49   53   52   55   56   53   54   53   55    55 #>  [2505,]   50   54   53   56   57   54   55   54   57    56 #>  [2506,]   49   53   52   55   56   53   54   53   55    55 #>  [2507,]   49   53   52   55   56   53   54   53   55    55 #>  [2508,]   49   53   52   55   56   53   54   53   55    55 #>  [2509,]   50   54   53   56   57   54   55   54   57    56 #>  [2510,]   49   53   52   55   56   53   54   53   55    55 #>  [2511,]   50   54   53   56   57   54   55   54   57    56 #>  [2512,]   49   53   52   55   56   53   54   53   55    55 #>  [2513,]   50   54   53   56   57   54   55   54   56    56 #>  [2514,]   49   53   52   55   56   53   54   53   55    55 #>  [2515,]   49   53   52   55   56   53   54   53   55    55 #>  [2516,]   49   53   52   55   56   53   54   53   55    55 #>  [2517,]   50   54   53   56   57   54   55   54   57    56 #>  [2518,]   50   54   53   56   57   54   55   54   56    56 #>  [2519,]   50   54   53   56   57   54   55   54   56    56 #>  [2520,]   50   54   53   56   57   54   55   54   57    56 #>  [2521,]   50   54   53   56   57   54   55   54   56    56 #>  [2522,]   50   54   53   56   57   54   55   54   56    56 #>  [2523,]   49   53   52   55   56   53   54   53   55    55 #>  [2524,]   50   54   53   56   57   54   55   54   56    56 #>  [2525,]   49   53   52   55   56   53   54   53   55    55 #>  [2526,]   49   53   52   55   56   53   54   53   55    55 #>  [2527,]   50   54   53   56   57   54   55   54   57    56 #>  [2528,]   50   54   53   56   57   54   55   54   57    56 #>  [2529,]   50   54   53   56   57   54   55   54   57    56 #>  [2530,]   49   53   52   55   56   53   54   53   55    55 #>  [2531,]   49   53   52   55   56   53   54   53   55    55 #>  [2532,]   49   53   52   55   56   53   54   53   55    55 #>  [2533,]   50   54   53   56   57   54   55   54   57    56 #>  [2534,]   49   53   52   55   56   53   54   53   55    55 #>  [2535,]   49   53   52   55   56   53   54   53   55    55 #>  [2536,]   50   54   53   56   57   54   55   54   56    56 #>  [2537,]   49   53   52   55   56   53   54   53   55    55 #>  [2538,]   50   54   53   56   57   54   55   54   57    56 #>  [2539,]   50   54   53   56   57   54   55   54   56    56 #>  [2540,]   49   53   52   55   56   53   54   53   55    55 #>  [2541,]   50   54   53   56   57   54   55   54   57    56 #>  [2542,]   50   54   53   56   57   54   55   54   57    56 #>  [2543,]   49   53   52   55   56   53   54   53   55    55 #>  [2544,]   49   53   52   55   56   53   54   53   55    55 #>  [2545,]   49   53   52   55   56   53   54   53   55    55 #>  [2546,]   49   53   52   55   56   53   54   53   55    55 #>  [2547,]   49   53   52   55   56   53   54   53   55    55 #>  [2548,]   49   53   52   55   56   53   54   53   55    55 #>  [2549,]   49   53   52   55   56   53   54   53   55    55 #>  [2550,]   49   53   52   55   56   53   54   53   55    55 #>  [2551,]   50   54   53   56   57   54   55   54   57    56 #>  [2552,]   49   53   52   55   56   53   54   53   55    55 #>  [2553,]   50   54   53   56   57   54   55   54   57    56 #>  [2554,]   50   54   53   56   57   54   55   54   56    56 #>  [2555,]   49   53   52   55   56   53   54   53   55    55 #>  [2556,]   50   54   53   56   57   54   55   54   57    56 #>  [2557,]   49   53   52   55   56   53   54   53   55    55 #>  [2558,]   50   54   53   56   57   54   55   54   57    56 #>  [2559,]   49   53   52   55   56   53   54   53   55    55 #>  [2560,]   49   53   52   55   56   53   54   53   55    55 #>  [2561,]   50   54   53   56   57   54   55   54   57    56 #>  [2562,]   50   54   53   56   57   54   55   54   56    56 #>  [2563,]   49   53   52   55   56   53   54   53   55    55 #>  [2564,]   50   54   53   56   57   54   55   54   57    56 #>  [2565,]   50   54   53   56   57   54   55   54   57    56 #>  [2566,]   50   54   53   56   57   54   55   54   57    56 #>  [2567,]   49   53   52   55   56   53   54   53   55    55 #>  [2568,]   49   53   52   55   56   53   54   53   55    55 #>  [2569,]   49   53   52   55   56   53   54   53   55    55 #>  [2570,]   50   54   53   56   57   54   55   54   56    56 #>  [2571,]   49   53   52   55   56   53   54   53   55    55 #>  [2572,]   49   53   52   55   56   53   54   53   55    55 #>  [2573,]   50   54   53   56   57   54   55   54   57    56 #>  [2574,]   49   53   52   55   56   53   54   53   55    55 #>  [2575,]   49   53   52   55   56   53   54   53   55    55 #>  [2576,]   49   53   52   55   56   53   54   53   55    55 #>  [2577,]   50   54   53   56   57   54   55   54   56    56 #>  [2578,]   49   53   52   55   56   53   54   53   55    55 #>  [2579,]   50   54   53   56   57   54   55   54   56    56 #>  [2580,]   49   53   52   55   56   53   54   53   55    55 #>  [2581,]   50   54   53   56   57   54   55   54   57    56 #>  [2582,]   50   54   53   56   57   54   55   54   57    56 #>  [2583,]   50   54   53   56   57   54   55   54   56    56 #>  [2584,]   50   54   53   56   57   54   55   54   57    56 #>  [2585,]   50   54   53   56   57   54   55   54   57    56 #>  [2586,]   49   53   52   55   56   53   54   53   55    55 #>  [2587,]   50   54   53   56   57   54   55   54   57    56 #>  [2588,]   49   53   52   55   56   53   54   53   55    55 #>  [2589,]   50   54   53   56   57   54   55   54   57    56 #>  [2590,]   50   54   53   56   57   54   55   54   57    56 #>  [2591,]   50   54   53   56   57   54   55   54   57    56 #>  [2592,]   49   53   52   55   56   53   54   53   55    55 #>  [2593,]   50   54   53   56   57   54   55   54   56    56 #>  [2594,]   50   54   53   56   57   54   55   54   57    56 #>  [2595,]   49   53   52   55   56   53   54   53   55    55 #>  [2596,]   49   53   52   55   56   53   54   53   55    55 #>  [2597,]   49   53   52   55   56   53   54   53   55    55 #>  [2598,]   49   53   52   55   56   53   54   53   55    55 #>  [2599,]   50   54   53   56   57   54   55   54   57    56 #>  [2600,]   50   54   53   56   57   54   55   54   56    56 #>  [2601,]   52   56   54   58   60   57   58   57   60    59 #>  [2602,]   51   55   54   58   59   56   57   56   59    58 #>  [2603,]   51   55   54   57   58   55   56   55   58    57 #>  [2604,]   51   55   54   58   59   56   57   56   59    58 #>  [2605,]   52   56   54   58   59   56   57   56   59    58 #>  [2606,]   51   55   54   58   59   56   57   56   59    58 #>  [2607,]   51   55   54   57   58   55   56   55   58    57 #>  [2608,]   51   55   54   58   59   56   57   56   59    58 #>  [2609,]   51   55   54   58   59   56   57   56   59    58 #>  [2610,]   52   56   54   58   59   56   57   56   59    58 #>  [2611,]   52   56   54   58   59   56   57   56   59    58 #>  [2612,]   52   56   54   57   58   55   56   55   58    57 #>  [2613,]   51   55   54   58   59   56   57   56   59    58 #>  [2614,]   52   56   54   58   60   57   58   57   60    59 #>  [2615,]   52   56   54   58   60   57   58   57   60    59 #>  [2616,]   51   55   54   58   60   57   58   57   60    59 #>  [2617,]   52   56   54   58   59   56   57   56   59    58 #>  [2618,]   52   56   54   58   59   56   57   56   59    58 #>  [2619,]   51   55   54   58   59   56   57   56   59    58 #>  [2620,]   51   55   54   58   59   56   57   56   59    58 #>  [2621,]   51   55   54   58   59   56   57   56   59    58 #>  [2622,]   52   56   54   58   59   56   57   56   59    58 #>  [2623,]   51   55   54   58   59   56   57   56   59    58 #>  [2624,]   51   55   54   58   59   56   57   56   59    58 #>  [2625,]   51   55   54   58   59   56   57   56   59    58 #>  [2626,]   52   56   54   58   59   56   57   56   59    58 #>  [2627,]   52   56   54   58   59   56   57   56   59    58 #>  [2628,]   51   55   54   58   59   56   57   56   59    58 #>  [2629,]   51   55   54   58   59   56   57   56   59    58 #>  [2630,]   51   55   54   58   59   56   57   56   59    58 #>  [2631,]   52   56   54   57   58   55   56   55   58    57 #>  [2632,]   52   56   54   58   59   56   57   56   59    58 #>  [2633,]   51   55   54   58   59   56   57   56   59    58 #>  [2634,]   51   55   54   58   59   56   57   56   59    58 #>  [2635,]   51   55   54   58   59   56   57   56   59    58 #>  [2636,]   51   55   54   58   59   56   57   56   59    58 #>  [2637,]   51   55   54   58   59   56   57   56   59    58 #>  [2638,]   52   56   54   58   59   56   57   56   59    58 #>  [2639,]   52   56   54   58   59   56   57   56   59    58 #>  [2640,]   51   55   54   58   59   56   57   56   59    58 #>  [2641,]   51   55   54   58   60   57   58   57   60    59 #>  [2642,]   51   55   54   58   59   56   57   56   59    58 #>  [2643,]   52   56   54   58   59   56   57   56   59    58 #>  [2644,]   51   55   54   58   60   57   58   57   60    59 #>  [2645,]   51   55   54   58   59   56   57   56   59    58 #>  [2646,]   51   55   54   58   59   56   57   56   59    58 #>  [2647,]   52   56   54   58   59   56   57   56   59    58 #>  [2648,]   51   55   54   58   59   56   57   56   59    58 #>  [2649,]   51   55   54   58   59   56   57   56   59    58 #>  [2650,]   51   55   54   58   60   57   58   57   60    59 #>  [2651,]   51   55   54   58   59   56   57   56   59    58 #>  [2652,]   52   56   54   57   58   55   56   55   58    57 #>  [2653,]   51   55   54   58   59   56   57   56   59    58 #>  [2654,]   51   55   54   58   59   56   57   56   59    58 #>  [2655,]   51   55   54   58   59   56   57   56   59    58 #>  [2656,]   51   55   54   58   59   56   57   56   59    58 #>  [2657,]   51   55   54   58   59   56   57   56   59    58 #>  [2658,]   52   56   54   58   59   56   57   56   59    58 #>  [2659,]   52   56   54   57   58   55   56   55   58    57 #>  [2660,]   51   55   54   57   58   55   56   55   58    57 #>  [2661,]   52   56   54   58   59   56   57   56   59    58 #>  [2662,]   51   55   54   58   59   56   57   56   59    58 #>  [2663,]   51   55   54   58   59   56   57   56   59    58 #>  [2664,]   51   55   54   58   59   56   57   56   59    58 #>  [2665,]   51   55   54   58   59   56   57   56   59    58 #>  [2666,]   52   56   54   58   59   56   57   56   59    58 #>  [2667,]   51   55   54   58   59   56   57   56   59    58 #>  [2668,]   52   56   54   58   59   56   57   56   59    58 #>  [2669,]   51   55   54   58   59   56   57   56   59    58 #>  [2670,]   52   56   54   58   60   57   58   57   60    59 #>  [2671,]   52   56   54   58   59   56   57   56   59    58 #>  [2672,]   51   55   54   58   59   56   57   56   59    58 #>  [2673,]   51   55   54   58   60   57   58   57   60    59 #>  [2674,]   51   55   54   58   59   56   57   56   59    58 #>  [2675,]   52   56   54   58   59   56   57   56   59    58 #>  [2676,]   51   55   54   58   59   56   57   56   59    58 #>  [2677,]   52   56   54   58   59   56   57   56   59    58 #>  [2678,]   51   55   54   58   59   56   57   56   59    58 #>  [2679,]   52   56   54   58   59   56   57   56   59    58 #>  [2680,]   51   55   54   58   59   56   57   56   59    58 #>  [2681,]   51   55   54   58   59   56   57   56   59    58 #>  [2682,]   51   55   54   58   59   56   57   56   59    58 #>  [2683,]   52   56   54   58   59   56   57   56   59    58 #>  [2684,]   51   55   54   58   59   56   57   56   59    58 #>  [2685,]   51   55   54   58   59   56   57   56   59    58 #>  [2686,]   51   55   54   58   59   56   57   56   59    58 #>  [2687,]   52   56   54   58   59   56   57   56   59    58 #>  [2688,]   51   55   54   58   59   56   57   56   59    58 #>  [2689,]   51   55   54   58   59   56   57   56   59    58 #>  [2690,]   52   56   54   58   59   56   57   56   59    58 #>  [2691,]   52   56   54   58   59   56   57   56   59    58 #>  [2692,]   52   56   54   58   59   56   57   56   59    58 #>  [2693,]   51   55   54   58   59   56   57   56   59    58 #>  [2694,]   51   55   54   58   59   56   57   56   59    58 #>  [2695,]   52   56   54   58   59   56   57   56   59    58 #>  [2696,]   52   56   54   58   60   57   58   57   60    59 #>  [2697,]   51   55   54   57   58   55   56   55   58    57 #>  [2698,]   51   55   54   58   59   56   57   56   59    58 #>  [2699,]   51   55   54   58   60   57   58   57   60    59 #>  [2700,]   52   56   54   58   59   56   57   56   59    58 #>  [2701,]   53   57   55   59   61   58   59   60   62    61 #>  [2702,]   54   59   56   60   62   59   60   58   61    60 #>  [2703,]   53   57   55   59   61   58   59   59   62    61 #>  [2704,]   53   57   55   59   61   58   59   60   62    61 #>  [2705,]   54   59   56   60   62   59   60   58   61    60 #>  [2706,]   53   57   55   59   61   58   59   60   62    61 #>  [2707,]   53   57   55   59   61   58   59   59   62    61 #>  [2708,]   53   57   55   59   61   58   59   59   62    61 #>  [2709,]   54   59   56   60   63   59   60   58   61    60 #>  [2710,]   54   59   56   60   62   59   60   58   61    60 #>  [2711,]   53   57   55   59   61   58   59   60   62    61 #>  [2712,]   54   59   56   60   63   59   60   58   61    60 #>  [2713,]   54   58   56   60   62   59   60   58   61    60 #>  [2714,]   53   57   55   59   61   58   59   60   62    61 #>  [2715,]   53   57   55   59   61   58   59   60   62    61 #>  [2716,]   53   57   55   59   61   58   59   59   62    61 #>  [2717,]   54   58   56   60   62   59   60   58   61    60 #>  [2718,]   54   59   56   60   62   59   60   58   61    60 #>  [2719,]   53   57   55   59   61   58   59   60   62    61 #>  [2720,]   54   58   56   60   62   59   60   58   61    60 #>  [2721,]   54   59   56   60   62   59   60   58   61    60 #>  [2722,]   53   57   55   59   61   58   59   59   62    61 #>  [2723,]   54   59   56   60   62   59   60   58   61    60 #>  [2724,]   54   58   56   60   62   59   60   58   61    60 #>  [2725,]   53   57   55   59   61   58   59   59   62    61 #>  [2726,]   53   57   55   59   61   58   59   60   62    61 #>  [2727,]   54   59   56   60   62   59   60   58   61    60 #>  [2728,]   53   57   55   59   61   58   59   60   62    61 #>  [2729,]   54   59   56   60   62   59   60   58   61    60 #>  [2730,]   53   57   55   59   61   58   59   60   62    61 #>  [2731,]   54   59   56   60   62   59   60   58   61    60 #>  [2732,]   54   59   56   60   62   59   60   58   61    60 #>  [2733,]   54   59   56   60   63   59   60   58   61    60 #>  [2734,]   53   57   55   59   61   58   59   60   62    61 #>  [2735,]   53   57   55   59   61   58   59   60   62    61 #>  [2736,]   54   59   56   60   62   59   60   58   61    60 #>  [2737,]   53   57   55   59   61   58   59   60   62    61 #>  [2738,]   53   57   55   59   61   58   59   60   62    61 #>  [2739,]   53   57   55   59   61   58   59   59   62    61 #>  [2740,]   54   58   56   60   62   59   60   58   61    60 #>  [2741,]   53   57   55   59   61   58   59   60   62    61 #>  [2742,]   53   57   55   59   61   58   59   60   62    61 #>  [2743,]   53   57   55   59   61   58   59   60   62    61 #>  [2744,]   54   58   56   60   62   59   60   58   61    60 #>  [2745,]   53   57   55   59   61   58   59   59   62    61 #>  [2746,]   53   57   55   59   61   58   59   59   62    61 #>  [2747,]   53   57   55   59   61   58   59   59   62    61 #>  [2748,]   53   57   55   59   61   58   59   60   62    61 #>  [2749,]   53   57   55   59   61   58   59   59   62    61 #>  [2750,]   53   57   55   59   61   58   59   59   62    61 #>  [2751,]   53   57   55   59   61   58   59   60   62    61 #>  [2752,]   53   57   55   59   61   58   59   60   62    61 #>  [2753,]   54   58   56   60   62   59   60   58   61    60 #>  [2754,]   53   57   55   59   61   58   59   59   62    61 #>  [2755,]   53   57   55   59   61   58   59   59   62    61 #>  [2756,]   53   57   55   59   61   58   59   59   62    61 #>  [2757,]   53   57   55   59   61   58   59   60   62    61 #>  [2758,]   53   57   55   59   61   58   59   60   62    61 #>  [2759,]   53   57   55   59   61   58   59   59   62    61 #>  [2760,]   54   59   56   60   62   59   60   58   61    60 #>  [2761,]   54   59   56   60   63   59   60   58   61    60 #>  [2762,]   53   57   55   59   61   58   59   60   62    61 #>  [2763,]   54   58   56   60   62   59   60   58   61    60 #>  [2764,]   53   57   55   59   61   58   59   60   62    61 #>  [2765,]   53   57   55   59   61   58   59   59   62    61 #>  [2766,]   53   57   55   59   61   58   59   59   62    61 #>  [2767,]   53   57   55   59   61   58   59   60   62    61 #>  [2768,]   53   57   55   59   61   58   59   60   62    61 #>  [2769,]   53   57   55   59   61   58   59   60   62    61 #>  [2770,]   54   58   56   60   62   59   60   58   61    60 #>  [2771,]   53   57   55   59   61   58   59   60   62    61 #>  [2772,]   53   57   55   59   61   58   59   59   62    61 #>  [2773,]   53   57   55   59   61   58   59   60   62    61 #>  [2774,]   53   57   55   59   61   58   59   60   62    61 #>  [2775,]   54   59   56   60   62   59   60   58   61    60 #>  [2776,]   53   57   55   59   61   58   59   60   62    61 #>  [2777,]   53   57   55   59   61   58   59   60   62    61 #>  [2778,]   53   57   55   59   61   58   59   59   62    61 #>  [2779,]   53   57   55   59   61   58   59   59   62    61 #>  [2780,]   54   59   56   60   62   59   60   58   61    60 #>  [2781,]   54   59   56   60   63   59   60   58   61    60 #>  [2782,]   53   57   55   59   61   58   59   60   62    61 #>  [2783,]   54   58   56   60   62   59   60   58   61    60 #>  [2784,]   54   58   56   60   62   59   60   58   61    60 #>  [2785,]   53   57   55   59   61   58   59   60   62    61 #>  [2786,]   54   58   56   60   62   59   60   58   61    60 #>  [2787,]   53   57   55   59   61   58   59   60   62    61 #>  [2788,]   54   59   56   60   62   59   60   58   61    60 #>  [2789,]   53   57   55   59   61   58   59   59   62    61 #>  [2790,]   53   57   55   59   61   58   59   59   62    61 #>  [2791,]   53   57   55   59   61   58   59   60   62    61 #>  [2792,]   53   57   55   59   61   58   59   60   62    61 #>  [2793,]   53   57   55   59   61   58   59   60   62    61 #>  [2794,]   53   57   55   59   61   58   59   59   62    61 #>  [2795,]   53   57   55   59   61   58   59   60   62    61 #>  [2796,]   53   57   55   59   61   58   59   60   62    61 #>  [2797,]   53   57   55   59   61   58   59   60   62    61 #>  [2798,]   53   57   55   59   61   58   59   59   62    61 #>  [2799,]   53   57   55   59   61   58   59   60   62    61 #>  [2800,]   53   57   55   59   61   58   59   59   62    61 #>  [2801,]   55   60   57   61   64   60   61   61   63    62 #>  [2802,]   56   61   58   62   65   61   62   62   64    63 #>  [2803,]   55   60   57   61   64   60   61   61   63    62 #>  [2804,]   55   60   57   61   64   60   61   61   63    62 #>  [2805,]   55   60   57   61   64   60   61   61   63    62 #>  [2806,]   55   60   57   61   64   60   61   61   63    62 #>  [2807,]   55   60   57   61   64   60   61   61   63    62 #>  [2808,]   55   60   57   61   64   60   61   61   63    62 #>  [2809,]   56   61   58   62   65   61   62   62   64    63 #>  [2810,]   56   61   58   62   65   61   62   62   64    63 #>  [2811,]   55   60   57   61   64   60   61   61   63    62 #>  [2812,]   56   61   58   62   65   61   62   62   64    63 #>  [2813,]   55   60   57   61   64   60   61   61   63    62 #>  [2814,]   55   60   57   61   64   60   61   61   63    62 #>  [2815,]   55   60   57   61   64   60   61   61   63    62 #>  [2816,]   55   60   57   61   64   60   61   61   63    62 #>  [2817,]   56   61   58   62   65   61   62   62   64    63 #>  [2818,]   55   60   57   61   64   60   61   61   63    62 #>  [2819,]   55   60   57   61   64   60   61   61   63    62 #>  [2820,]   55   60   57   61   64   60   61   61   63    62 #>  [2821,]   56   61   58   62   65   61   62   62   64    63 #>  [2822,]   55   60   57   61   64   60   61   61   63    62 #>  [2823,]   55   60   57   61   64   60   61   61   63    62 #>  [2824,]   55   60   57   61   64   60   61   61   63    62 #>  [2825,]   55   60   57   61   64   60   61   61   63    62 #>  [2826,]   55   60   57   61   64   60   61   61   63    62 #>  [2827,]   55   60   57   61   64   60   61   61   63    62 #>  [2828,]   55   60   57   61   64   60   61   61   63    62 #>  [2829,]   56   61   58   62   65   61   62   62   64    63 #>  [2830,]   55   60   57   61   64   60   61   61   63    62 #>  [2831,]   55   60   57   61   64   60   61   61   63    62 #>  [2832,]   55   60   57   61   64   60   61   61   63    62 #>  [2833,]   56   61   58   62   65   61   62   62   64    63 #>  [2834,]   55   60   57   61   64   60   61   61   63    62 #>  [2835,]   55   60   57   61   64   60   61   61   63    62 #>  [2836,]   55   60   57   61   64   60   61   61   63    62 #>  [2837,]   55   60   57   61   64   60   61   61   63    62 #>  [2838,]   55   60   57   61   64   60   61   61   63    62 #>  [2839,]   55   60   57   61   64   60   61   61   63    62 #>  [2840,]   55   60   57   61   64   60   61   61   63    62 #>  [2841,]   55   60   57   61   64   60   61   61   63    62 #>  [2842,]   55   60   57   61   64   60   61   61   63    62 #>  [2843,]   55   60   57   61   64   60   61   61   63    62 #>  [2844,]   55   60   57   61   64   60   61   61   63    62 #>  [2845,]   55   60   57   61   64   60   61   61   63    62 #>  [2846,]   55   60   57   61   64   60   61   61   63    62 #>  [2847,]   55   60   57   61   64   60   61   61   63    62 #>  [2848,]   55   60   57   61   64   60   61   61   63    62 #>  [2849,]   55   60   57   61   64   60   61   61   63    62 #>  [2850,]   55   60   57   61   64   60   61   61   63    62 #>  [2851,]   55   60   57   61   64   60   61   61   63    62 #>  [2852,]   55   60   57   61   64   60   61   61   63    62 #>  [2853,]   55   60   57   61   64   60   61   61   63    62 #>  [2854,]   55   60   57   61   64   60   61   61   63    62 #>  [2855,]   55   60   57   61   64   60   61   61   63    62 #>  [2856,]   55   60   57   61   64   60   61   61   63    62 #>  [2857,]   55   60   57   61   64   60   61   61   63    62 #>  [2858,]   55   60   57   61   64   60   61   61   63    62 #>  [2859,]   55   60   57   61   64   60   61   61   63    62 #>  [2860,]   56   61   58   62   65   61   62   62   64    63 #>  [2861,]   55   60   57   61   64   60   61   61   63    62 #>  [2862,]   55   60   57   61   64   60   61   61   63    62 #>  [2863,]   56   61   58   62   65   61   62   62   64    63 #>  [2864,]   55   60   57   61   64   60   61   61   63    62 #>  [2865,]   55   60   57   61   64   60   61   61   63    62 #>  [2866,]   55   60   57   61   64   60   61   61   63    62 #>  [2867,]   55   60   57   61   64   60   61   61   63    62 #>  [2868,]   55   60   57   61   64   60   61   61   63    62 #>  [2869,]   55   60   57   61   64   60   61   61   63    62 #>  [2870,]   56   61   58   62   65   61   62   62   64    63 #>  [2871,]   55   60   57   61   64   60   61   61   63    62 #>  [2872,]   55   60   57   61   64   60   61   61   63    62 #>  [2873,]   55   60   57   61   64   60   61   61   63    62 #>  [2874,]   55   60   57   61   64   60   61   61   63    62 #>  [2875,]   55   60   57   61   64   60   61   61   63    62 #>  [2876,]   55   60   57   61   64   60   61   61   63    62 #>  [2877,]   55   60   57   61   64   60   61   61   63    62 #>  [2878,]   55   60   57   61   64   60   61   61   63    62 #>  [2879,]   55   60   57   61   64   60   61   61   63    62 #>  [2880,]   56   61   58   62   65   61   62   62   64    63 #>  [2881,]   56   61   58   62   65   61   62   62   64    63 #>  [2882,]   55   60   57   61   64   60   61   61   63    62 #>  [2883,]   55   60   57   61   64   60   61   61   63    62 #>  [2884,]   55   60   57   61   64   60   61   61   63    62 #>  [2885,]   55   60   57   61   64   60   61   61   63    62 #>  [2886,]   56   61   58   62   65   61   62   62   64    63 #>  [2887,]   55   60   57   61   64   60   61   61   63    62 #>  [2888,]   55   60   57   61   64   60   61   61   63    62 #>  [2889,]   55   60   57   61   64   60   61   61   63    62 #>  [2890,]   55   60   57   61   64   60   61   61   63    62 #>  [2891,]   55   60   57   61   64   60   61   61   63    62 #>  [2892,]   55   60   57   61   64   60   61   61   63    62 #>  [2893,]   55   60   57   61   64   60   61   61   63    62 #>  [2894,]   55   60   57   61   64   60   61   61   63    62 #>  [2895,]   55   60   57   61   64   60   61   61   63    62 #>  [2896,]   55   60   57   61   64   60   61   61   63    62 #>  [2897,]   55   60   57   61   64   60   61   61   63    62 #>  [2898,]   55   60   57   61   64   60   61   61   63    62 #>  [2899,]   55   60   57   61   64   60   61   61   63    62 #>  [2900,]   55   60   57   61   64   60   61   61   63    62 #>  [2901,]   57   62   59   63   66   62   63   63   66    65 #>  [2902,]   57   62   59   63   66   62   63   63   66    65 #>  [2903,]   57   62   59   63   66   62   63   63   66    65 #>  [2904,]   57   62   59   63   66   62   63   63   66    65 #>  [2905,]   58   63   60   64   67   63   64   64   65    64 #>  [2906,]   57   62   59   63   66   62   63   63   66    65 #>  [2907,]   57   62   59   63   66   62   63   63   66    65 #>  [2908,]   57   62   59   63   66   62   63   63   66    65 #>  [2909,]   57   62   59   63   66   62   63   63   66    65 #>  [2910,]   57   62   59   63   66   62   63   63   66    65 #>  [2911,]   57   62   59   63   66   62   63   63   66    65 #>  [2912,]   57   62   59   63   66   62   63   63   66    65 #>  [2913,]   57   62   59   63   66   62   63   63   66    65 #>  [2914,]   57   62   59   63   66   62   63   63   66    65 #>  [2915,]   57   62   59   63   66   62   63   63   66    65 #>  [2916,]   57   62   59   63   66   62   63   63   66    65 #>  [2917,]   57   62   59   63   66   62   63   63   66    65 #>  [2918,]   58   63   60   64   67   63   64   64   65    64 #>  [2919,]   57   62   59   63   66   62   63   63   67    66 #>  [2920,]   57   62   59   63   66   62   63   63   67    66 #>  [2921,]   57   62   59   63   66   62   63   63   66    65 #>  [2922,]   57   62   59   63   66   62   63   63   67    66 #>  [2923,]   57   62   59   63   66   62   63   63   66    65 #>  [2924,]   57   62   59   63   66   62   63   63   66    65 #>  [2925,]   57   62   59   63   66   62   63   63   66    65 #>  [2926,]   57   62   59   63   66   62   63   63   66    65 #>  [2927,]   57   62   59   63   66   62   63   63   67    66 #>  [2928,]   57   62   59   63   66   62   63   63   66    65 #>  [2929,]   57   62   59   63   66   62   63   63   67    66 #>  [2930,]   57   62   59   63   66   62   63   63   66    65 #>  [2931,]   57   62   59   63   66   62   63   63   66    65 #>  [2932,]   58   63   60   64   67   63   64   64   65    64 #>  [2933,]   57   62   59   63   66   62   63   63   66    65 #>  [2934,]   57   62   59   63   66   62   63   63   66    65 #>  [2935,]   57   62   59   63   66   62   63   63   66    65 #>  [2936,]   57   62   59   63   66   62   63   63   67    66 #>  [2937,]   57   62   59   63   66   62   63   63   66    65 #>  [2938,]   57   62   59   63   66   62   63   63   66    65 #>  [2939,]   57   62   59   63   66   62   63   63   66    65 #>  [2940,]   57   62   59   63   66   62   63   63   66    65 #>  [2941,]   57   62   59   63   66   62   63   63   66    65 #>  [2942,]   57   62   59   63   66   62   63   63   66    65 #>  [2943,]   57   62   59   63   66   62   63   63   66    65 #>  [2944,]   57   62   59   63   66   62   63   63   66    65 #>  [2945,]   57   62   59   63   66   62   63   63   66    65 #>  [2946,]   57   62   59   63   66   62   63   63   66    65 #>  [2947,]   57   62   59   63   66   62   63   63   66    65 #>  [2948,]   57   62   59   63   66   62   63   63   66    65 #>  [2949,]   57   62   59   63   66   62   63   63   66    65 #>  [2950,]   57   62   59   63   66   62   63   63   66    65 #>  [2951,]   57   62   59   63   66   62   63   63   66    65 #>  [2952,]   57   62   59   63   66   62   63   63   66    65 #>  [2953,]   57   62   59   63   66   62   63   63   66    65 #>  [2954,]   57   62   59   63   66   62   63   63   66    65 #>  [2955,]   57   62   59   63   66   62   63   63   66    65 #>  [2956,]   57   62   59   63   66   62   63   63   66    65 #>  [2957,]   57   62   59   63   66   62   63   63   66    65 #>  [2958,]   57   62   59   63   66   62   63   63   67    66 #>  [2959,]   57   62   59   63   66   62   63   63   66    65 #>  [2960,]   57   62   59   63   66   62   63   63   66    65 #>  [2961,]   57   62   59   63   66   62   63   63   66    65 #>  [2962,]   57   62   59   63   66   62   63   63   66    65 #>  [2963,]   57   62   59   63   66   62   63   63   66    65 #>  [2964,]   57   62   59   63   66   62   63   63   67    66 #>  [2965,]   57   62   59   63   66   62   63   63   66    65 #>  [2966,]   57   62   59   63   66   62   63   63   67    66 #>  [2967,]   57   62   59   63   66   62   63   63   66    65 #>  [2968,]   57   62   59   63   66   62   63   63   66    65 #>  [2969,]   57   62   59   63   66   62   63   63   66    65 #>  [2970,]   57   62   59   63   66   62   63   63   66    65 #>  [2971,]   58   63   60   64   67   63   64   64   65    64 #>  [2972,]   57   62   59   63   66   62   63   63   66    65 #>  [2973,]   57   62   59   63   66   62   63   63   66    65 #>  [2974,]   57   62   59   63   66   62   63   63   66    65 #>  [2975,]   58   63   60   64   67   63   64   64   65    64 #>  [2976,]   57   62   59   63   66   62   63   63   66    65 #>  [2977,]   57   62   59   63   66   62   63   63   67    66 #>  [2978,]   57   62   59   63   66   62   63   63   66    65 #>  [2979,]   57   62   59   63   66   62   63   63   66    65 #>  [2980,]   57   62   59   63   66   62   63   63   66    65 #>  [2981,]   57   62   59   63   66   62   63   63   67    66 #>  [2982,]   57   62   59   63   66   62   63   63   66    65 #>  [2983,]   57   62   59   63   66   62   63   63   66    65 #>  [2984,]   57   62   59   63   66   62   63   63   66    65 #>  [2985,]   57   62   59   63   66   62   63   63   66    65 #>  [2986,]   57   62   59   63   66   62   63   63   66    65 #>  [2987,]   57   62   59   63   66   62   63   63   67    66 #>  [2988,]   57   62   59   63   66   62   63   63   66    65 #>  [2989,]   57   62   59   63   66   62   63   63   66    65 #>  [2990,]   57   62   59   63   66   62   63   63   66    65 #>  [2991,]   58   63   60   64   67   63   64   64   65    64 #>  [2992,]   57   62   59   63   66   62   63   63   66    65 #>  [2993,]   57   62   59   63   66   62   63   63   66    65 #>  [2994,]   57   62   59   63   66   62   63   63   66    65 #>  [2995,]   58   63   60   64   67   63   64   64   65    64 #>  [2996,]   57   62   59   63   66   62   63   63   66    65 #>  [2997,]   57   62   59   63   66   62   63   63   67    66 #>  [2998,]   57   62   59   63   66   62   63   63   66    65 #>  [2999,]   57   62   59   63   66   62   63   63   66    65 #>  [3000,]   58   63   60   64   67   63   64   64   65    64 #>  [3001,]   60   65   62   66   69   65   66   66   69    68 #>  [3002,]   60   65   62   66   69   65   66   66   69    68 #>  [3003,]   59   64   61   65   68   64   65   65   68    67 #>  [3004,]   60   65   62   66   69   65   66   66   69    68 #>  [3005,]   60   65   62   66   69   65   66   66   69    68 #>  [3006,]   60   65   62   66   69   65   66   66   69    68 #>  [3007,]   59   64   61   65   68   64   65   65   68    67 #>  [3008,]   60   65   62   66   69   65   66   66   69    68 #>  [3009,]   60   65   62   66   69   65   66   66   69    68 #>  [3010,]   60   65   62   66   69   65   66   66   69    68 #>  [3011,]   60   65   62   66   69   65   66   66   69    68 #>  [3012,]   60   65   62   66   69   65   66   66   69    68 #>  [3013,]   59   64   61   65   68   64   65   65   68    67 #>  [3014,]   60   65   62   66   69   65   66   66   69    68 #>  [3015,]   60   65   62   66   69   65   66   66   69    68 #>  [3016,]   59   64   61   65   68   64   65   65   68    67 #>  [3017,]   60   65   62   66   69   65   66   66   69    68 #>  [3018,]   60   65   62   66   69   65   66   66   69    68 #>  [3019,]   59   64   61   65   68   64   65   65   68    67 #>  [3020,]   60   65   62   66   69   65   66   66   69    68 #>  [3021,]   59   64   61   65   68   64   65   65   68    67 #>  [3022,]   60   65   62   66   69   65   66   66   69    68 #>  [3023,]   59   64   61   65   68   64   65   65   68    67 #>  [3024,]   60   65   62   66   69   65   66   66   69    68 #>  [3025,]   60   65   62   66   69   65   66   66   69    68 #>  [3026,]   60   65   62   66   69   65   66   66   69    68 #>  [3027,]   60   65   62   66   69   65   66   66   69    68 #>  [3028,]   60   65   62   66   69   65   66   66   69    68 #>  [3029,]   60   65   62   66   69   65   66   66   69    68 #>  [3030,]   59   64   61   65   68   64   65   65   68    67 #>  [3031,]   59   64   61   65   68   64   65   65   68    67 #>  [3032,]   60   65   62   66   69   65   66   66   69    68 #>  [3033,]   60   65   62   66   69   65   66   66   69    68 #>  [3034,]   60   65   62   66   69   65   66   66   69    68 #>  [3035,]   59   64   61   65   68   64   65   65   68    67 #>  [3036,]   59   64   61   65   68   64   65   65   68    67 #>  [3037,]   59   64   61   65   68   64   65   65   68    67 #>  [3038,]   60   65   62   66   69   65   66   66   69    68 #>  [3039,]   59   64   61   65   68   64   65   65   68    67 #>  [3040,]   59   64   61   65   68   64   65   65   68    67 #>  [3041,]   60   65   62   66   69   65   66   66   69    68 #>  [3042,]   60   65   62   66   69   65   66   66   69    68 #>  [3043,]   60   65   62   66   69   65   66   66   69    68 #>  [3044,]   60   65   62   66   69   65   66   66   69    68 #>  [3045,]   60   65   62   66   69   65   66   66   69    68 #>  [3046,]   60   65   62   66   69   65   66   66   69    68 #>  [3047,]   59   64   61   65   68   64   65   65   68    67 #>  [3048,]   60   65   62   66   69   65   66   66   69    68 #>  [3049,]   59   64   61   65   68   64   65   65   68    67 #>  [3050,]   60   65   62   66   69   65   66   66   69    68 #>  [3051,]   60   65   62   66   69   65   66   66   69    68 #>  [3052,]   60   65   62   66   69   65   66   66   69    68 #>  [3053,]   60   65   62   66   69   65   66   66   69    68 #>  [3054,]   59   64   61   65   68   64   65   65   68    67 #>  [3055,]   60   65   62   66   69   65   66   66   69    68 #>  [3056,]   60   65   62   66   69   65   66   66   69    68 #>  [3057,]   60   65   62   66   69   65   66   66   69    68 #>  [3058,]   60   65   62   66   69   65   66   66   69    68 #>  [3059,]   60   65   62   66   69   65   66   66   69    68 #>  [3060,]   60   65   62   66   69   65   66   66   69    68 #>  [3061,]   60   65   62   66   69   65   66   66   69    68 #>  [3062,]   59   64   61   65   68   64   65   65   68    67 #>  [3063,]   60   65   62   66   69   65   66   66   69    68 #>  [3064,]   60   65   62   66   69   65   66   66   69    68 #>  [3065,]   60   65   62   66   69   65   66   66   69    68 #>  [3066,]   60   65   62   66   69   65   66   66   69    68 #>  [3067,]   60   65   62   66   69   65   66   66   69    68 #>  [3068,]   60   65   62   66   69   65   66   66   69    68 #>  [3069,]   60   65   62   66   69   65   66   66   69    68 #>  [3070,]   59   64   61   65   68   64   65   65   68    67 #>  [3071,]   60   65   62   66   69   65   66   66   69    68 #>  [3072,]   60   65   62   66   69   65   66   66   69    68 #>  [3073,]   60   65   62   66   69   65   66   66   69    68 #>  [3074,]   60   65   62   66   69   65   66   66   69    68 #>  [3075,]   60   65   62   66   69   65   66   66   69    68 #>  [3076,]   60   65   62   66   69   65   66   66   69    68 #>  [3077,]   59   64   61   65   68   64   65   65   68    67 #>  [3078,]   60   65   62   66   69   65   66   66   69    68 #>  [3079,]   59   64   61   65   68   64   65   65   68    67 #>  [3080,]   59   64   61   65   68   64   65   65   68    67 #>  [3081,]   60   65   62   66   69   65   66   66   69    68 #>  [3082,]   60   65   62   66   69   65   66   66   69    68 #>  [3083,]   59   64   61   65   68   64   65   65   68    67 #>  [3084,]   60   65   62   66   69   65   66   66   69    68 #>  [3085,]   60   65   62   66   69   65   66   66   69    68 #>  [3086,]   60   65   62   66   69   65   66   66   69    68 #>  [3087,]   60   65   62   66   69   65   66   66   69    68 #>  [3088,]   60   65   62   66   69   65   66   66   69    68 #>  [3089,]   60   65   62   66   69   65   66   66   69    68 #>  [3090,]   60   65   62   66   69   65   66   66   69    68 #>  [3091,]   60   65   62   66   69   65   66   66   69    68 #>  [3092,]   60   65   62   66   69   65   66   66   69    68 #>  [3093,]   59   64   61   65   68   64   65   65   68    67 #>  [3094,]   60   65   62   66   69   65   66   66   69    68 #>  [3095,]   59   64   61   65   68   64   65   65   68    67 #>  [3096,]   60   65   62   66   69   65   66   66   69    68 #>  [3097,]   60   65   62   66   69   65   66   66   69    68 #>  [3098,]   59   64   61   65   68   64   65   65   68    67 #>  [3099,]   60   65   62   66   69   65   66   66   69    68 #>  [3100,]   60   65   62   66   69   65   66   66   69    68 #>  [3101,]   61   66   63   67   70   66   67   67   72    70 #>  [3102,]   61   66   63   67   70   66   67   67   72    70 #>  [3103,]   61   66   63   67   70   66   67   67   71    70 #>  [3104,]   62   67   64   68   71   67   69   68   70    69 #>  [3105,]   61   66   63   67   70   66   67   67   72    70 #>  [3106,]   61   66   63   67   70   66   67   67   71    70 #>  [3107,]   62   67   64   68   71   67   68   68   70    69 #>  [3108,]   61   66   63   67   70   66   67   67   72    70 #>  [3109,]   61   66   63   67   70   66   67   67   72    70 #>  [3110,]   62   67   64   68   71   67   69   68   70    69 #>  [3111,]   61   66   63   67   70   66   67   67   72    70 #>  [3112,]   61   66   63   67   70   66   67   67   72    70 #>  [3113,]   61   66   63   67   70   66   67   67   72    70 #>  [3114,]   61   66   63   67   70   66   67   67   72    70 #>  [3115,]   61   66   63   67   70   66   67   67   72    70 #>  [3116,]   62   67   64   68   71   67   68   68   70    69 #>  [3117,]   61   66   63   67   70   66   67   67   72    70 #>  [3118,]   61   66   63   67   70   66   67   67   72    70 #>  [3119,]   61   66   63   67   70   66   67   67   72    70 #>  [3120,]   62   67   64   68   71   67   68   68   70    69 #>  [3121,]   61   66   63   67   70   66   67   67   71    70 #>  [3122,]   61   66   63   67   70   66   67   67   72    70 #>  [3123,]   61   66   63   67   70   66   67   67   71    70 #>  [3124,]   62   67   64   68   71   67   68   68   70    69 #>  [3125,]   62   67   64   68   71   67   68   68   70    69 #>  [3126,]   61   66   63   67   70   66   67   67   72    70 #>  [3127,]   61   66   63   67   70   66   67   67   72    70 #>  [3128,]   62   67   64   68   71   67   69   68   70    69 #>  [3129,]   61   66   63   67   70   66   67   67   72    70 #>  [3130,]   61   66   63   67   70   66   67   67   72    70 #>  [3131,]   61   66   63   67   70   66   67   67   72    70 #>  [3132,]   61   66   63   67   70   66   67   67   72    70 #>  [3133,]   61   66   63   67   70   66   67   67   72    70 #>  [3134,]   61   66   63   67   70   66   67   67   71    70 #>  [3135,]   61   66   63   67   70   66   67   67   71    70 #>  [3136,]   61   66   63   67   70   66   67   67   72    70 #>  [3137,]   61   66   63   67   70   66   67   67   71    70 #>  [3138,]   61   66   63   67   70   66   67   67   72    70 #>  [3139,]   62   67   64   68   71   67   68   68   70    69 #>  [3140,]   61   66   63   67   70   66   67   67   72    70 #>  [3141,]   61   66   63   67   70   66   67   67   72    70 #>  [3142,]   61   66   63   67   70   66   67   67   71    70 #>  [3143,]   61   66   63   67   70   66   67   67   72    70 #>  [3144,]   61   66   63   67   70   66   67   67   71    70 #>  [3145,]   61   66   63   67   70   66   67   67   72    70 #>  [3146,]   61   66   63   67   70   66   67   67   72    70 #>  [3147,]   61   66   63   67   70   66   67   67   72    70 #>  [3148,]   61   66   63   67   70   66   67   67   72    70 #>  [3149,]   61   66   63   67   70   66   67   67   72    70 #>  [3150,]   62   67   64   68   71   67   68   68   70    69 #>  [3151,]   61   66   63   67   70   66   67   67   72    70 #>  [3152,]   62   67   64   68   71   67   69   68   70    69 #>  [3153,]   61   66   63   67   70   66   67   67   71    70 #>  [3154,]   62   67   64   68   71   67   69   68   70    69 #>  [3155,]   61   66   63   67   70   66   67   67   71    70 #>  [3156,]   61   66   63   67   70   66   67   67   71    70 #>  [3157,]   62   67   64   68   71   67   69   68   70    69 #>  [3158,]   61   66   63   67   70   66   67   67   72    70 #>  [3159,]   61   66   63   67   70   66   67   67   72    70 #>  [3160,]   61   66   63   67   70   66   67   67   72    70 #>  [3161,]   61   66   63   67   70   66   67   67   72    70 #>  [3162,]   61   66   63   67   70   66   67   67   72    70 #>  [3163,]   61   66   63   67   70   66   67   67   72    70 #>  [3164,]   61   66   63   67   70   66   67   67   71    70 #>  [3165,]   61   66   63   67   70   66   67   67   71    70 #>  [3166,]   61   66   63   67   70   66   67   67   72    70 #>  [3167,]   61   66   63   67   70   66   67   67   72    70 #>  [3168,]   61   66   63   67   70   66   67   67   72    70 #>  [3169,]   61   66   63   67   70   66   67   67   72    70 #>  [3170,]   61   66   63   67   70   66   67   67   72    70 #>  [3171,]   61   66   63   67   70   66   67   67   72    70 #>  [3172,]   61   66   63   67   70   66   67   67   72    70 #>  [3173,]   62   67   64   68   71   67   69   68   70    69 #>  [3174,]   61   66   63   67   70   66   67   67   71    70 #>  [3175,]   61   66   63   67   70   66   67   67   72    70 #>  [3176,]   62   67   64   68   71   67   69   68   70    69 #>  [3177,]   61   66   63   67   70   66   67   67   72    70 #>  [3178,]   61   66   63   67   70   66   67   67   72    70 #>  [3179,]   61   66   63   67   70   66   67   67   72    70 #>  [3180,]   61   66   63   67   70   66   67   67   71    70 #>  [3181,]   61   66   63   67   70   66   67   67   72    70 #>  [3182,]   61   66   63   67   70   66   67   67   71    70 #>  [3183,]   61   66   63   67   70   66   67   67   72    70 #>  [3184,]   61   66   63   67   70   66   67   67   71    70 #>  [3185,]   61   66   63   67   70   66   67   67   71    70 #>  [3186,]   62   67   64   68   71   67   68   68   70    69 #>  [3187,]   61   66   63   67   70   66   67   67   72    70 #>  [3188,]   61   66   63   67   70   66   67   67   71    70 #>  [3189,]   61   66   63   67   70   66   67   67   71    70 #>  [3190,]   61   66   63   67   70   66   67   67   72    70 #>  [3191,]   62   67   64   68   71   67   69   68   70    69 #>  [3192,]   61   66   63   67   70   66   67   67   72    70 #>  [3193,]   61   66   63   67   70   66   67   67   72    70 #>  [3194,]   61   66   63   67   70   66   67   67   71    70 #>  [3195,]   61   66   63   67   70   66   67   67   72    70 #>  [3196,]   61   66   63   67   70   66   67   67   72    70 #>  [3197,]   61   66   63   67   70   66   67   67   72    70 #>  [3198,]   61   66   63   67   70   66   67   67   71    70 #>  [3199,]   61   66   63   67   70   66   67   67   71    70 #>  [3200,]   61   66   63   67   70   66   67   67   72    70 #>  [3201,]   63   68   65   69   72   68   70   69   73    71 #>  [3202,]   64   69   66   70   73   69   71   70   74    72 #>  [3203,]   64   69   66   70   73   69   71   70   74    72 #>  [3204,]   63   68   65   69   72   68   70   69   73    71 #>  [3205,]   63   68   65   69   72   68   70   69   73    71 #>  [3206,]   64   69   66   70   73   69   71   70   74    72 #>  [3207,]   64   69   66   70   73   69   71   70   74    72 #>  [3208,]   63   68   65   69   72   68   70   69   73    71 #>  [3209,]   63   68   65   69   72   68   70   69   73    71 #>  [3210,]   63   68   65   69   72   68   70   69   73    71 #>  [3211,]   63   68   65   69   72   68   70   69   73    71 #>  [3212,]   64   69   66   70   73   69   71   70   74    72 #>  [3213,]   63   68   65   69   72   68   70   69   73    71 #>  [3214,]   63   68   65   69   72   68   70   69   73    71 #>  [3215,]   63   68   65   69   72   68   70   69   73    71 #>  [3216,]   63   68   65   69   72   68   70   69   73    71 #>  [3217,]   63   68   65   69   72   68   70   69   73    71 #>  [3218,]   64   69   66   70   73   69   71   70   74    72 #>  [3219,]   64   69   66   70   73   69   71   70   74    72 #>  [3220,]   64   69   66   70   73   69   71   70   74    72 #>  [3221,]   63   68   65   69   72   68   70   69   73    71 #>  [3222,]   63   68   65   69   72   68   70   69   73    71 #>  [3223,]   64   69   66   70   73   69   71   70   74    72 #>  [3224,]   63   68   65   69   72   68   70   69   73    71 #>  [3225,]   64   69   66   70   73   69   71   70   74    72 #>  [3226,]   63   68   65   69   72   68   70   69   73    71 #>  [3227,]   63   68   65   69   72   68   70   69   73    71 #>  [3228,]   64   69   66   70   73   69   71   70   74    72 #>  [3229,]   63   68   65   69   72   68   70   69   73    71 #>  [3230,]   63   68   65   69   72   68   70   69   73    71 #>  [3231,]   64   69   66   70   73   69   71   70   74    72 #>  [3232,]   64   69   66   70   73   69   71   70   74    72 #>  [3233,]   64   69   66   70   73   69   71   70   74    72 #>  [3234,]   64   69   66   70   73   69   71   70   74    72 #>  [3235,]   63   68   65   69   72   68   70   69   73    71 #>  [3236,]   63   68   65   69   72   68   70   69   73    71 #>  [3237,]   63   68   65   69   72   68   70   69   73    71 #>  [3238,]   63   68   65   69   72   68   70   69   73    71 #>  [3239,]   63   68   65   69   72   68   70   69   73    71 #>  [3240,]   63   68   65   69   72   68   70   69   73    71 #>  [3241,]   63   68   65   69   72   68   70   69   73    71 #>  [3242,]   64   69   66   70   73   69   71   70   74    72 #>  [3243,]   63   68   65   69   72   68   70   69   73    71 #>  [3244,]   63   68   65   69   72   68   70   69   73    71 #>  [3245,]   63   68   65   69   72   68   70   69   73    71 #>  [3246,]   63   68   65   69   72   68   70   69   73    71 #>  [3247,]   63   68   65   69   72   68   70   69   73    71 #>  [3248,]   63   68   65   69   72   68   70   69   73    71 #>  [3249,]   63   68   65   69   72   68   70   69   73    71 #>  [3250,]   63   68   65   69   72   68   70   69   73    71 #>  [3251,]   63   68   65   69   72   68   70   69   73    71 #>  [3252,]   63   68   65   69   72   68   70   69   73    71 #>  [3253,]   63   68   65   69   72   68   70   69   73    71 #>  [3254,]   63   68   65   69   72   68   70   69   73    71 #>  [3255,]   63   68   65   69   72   68   70   69   73    71 #>  [3256,]   64   69   66   70   73   69   71   70   74    72 #>  [3257,]   63   68   65   69   72   68   70   69   73    71 #>  [3258,]   63   68   65   69   72   68   70   69   73    71 #>  [3259,]   63   68   65   69   72   68   70   69   73    71 #>  [3260,]   64   69   66   70   73   69   71   70   74    72 #>  [3261,]   63   68   65   69   72   68   70   69   73    71 #>  [3262,]   63   68   65   69   72   68   70   69   73    71 #>  [3263,]   63   68   65   69   72   68   70   69   73    71 #>  [3264,]   64   69   66   70   73   69   71   70   74    72 #>  [3265,]   64   69   66   70   73   69   71   70   74    72 #>  [3266,]   63   68   65   69   72   68   70   69   73    71 #>  [3267,]   63   68   65   69   72   68   70   69   73    71 #>  [3268,]   63   68   65   69   72   68   70   69   73    71 #>  [3269,]   63   68   65   69   72   68   70   69   73    71 #>  [3270,]   64   69   66   70   73   69   71   70   74    72 #>  [3271,]   64   69   66   70   73   69   71   70   74    72 #>  [3272,]   63   68   65   69   72   68   70   69   73    71 #>  [3273,]   64   69   66   70   73   69   71   70   74    72 #>  [3274,]   63   68   65   69   72   68   70   69   73    71 #>  [3275,]   63   68   65   69   72   68   70   69   73    71 #>  [3276,]   63   68   65   69   72   68   70   69   73    71 #>  [3277,]   63   68   65   69   72   68   70   69   73    71 #>  [3278,]   63   68   65   69   72   68   70   69   73    71 #>  [3279,]   63   68   65   69   72   68   70   69   73    71 #>  [3280,]   63   68   65   69   72   68   70   69   73    71 #>  [3281,]   63   68   65   69   72   68   70   69   73    71 #>  [3282,]   63   68   65   69   72   68   70   69   73    71 #>  [3283,]   63   68   65   69   72   68   70   69   73    71 #>  [3284,]   64   69   66   70   73   69   71   70   74    72 #>  [3285,]   63   68   65   69   72   68   70   69   73    71 #>  [3286,]   63   68   65   69   72   68   70   69   73    71 #>  [3287,]   63   68   65   69   72   68   70   69   73    71 #>  [3288,]   63   68   65   69   72   68   70   69   73    71 #>  [3289,]   63   68   65   69   72   68   70   69   73    71 #>  [3290,]   63   68   65   69   72   68   70   69   73    71 #>  [3291,]   63   68   65   69   72   68   70   69   73    71 #>  [3292,]   63   68   65   69   72   68   70   69   73    71 #>  [3293,]   64   69   66   70   73   69   71   70   74    72 #>  [3294,]   63   68   65   69   72   68   70   69   73    71 #>  [3295,]   63   68   65   69   72   68   70   69   73    71 #>  [3296,]   63   68   65   69   72   68   70   69   73    71 #>  [3297,]   64   69   66   70   73   69   71   70   74    72 #>  [3298,]   64   69   66   70   73   69   71   70   74    72 #>  [3299,]   63   68   65   69   72   68   70   69   73    71 #>  [3300,]   64   69   66   70   73   69   71   70   74    72 #>  [3301,]   65   70   67   71   74   70   73   72   76    74 #>  [3302,]   65   70   67   71   74   70   73   72   76    74 #>  [3303,]   65   70   67   71   74   70   72   71   75    73 #>  [3304,]   66   71   68   72   75   70   73   72   76    74 #>  [3305,]   65   70   67   71   74   70   73   72   76    74 #>  [3306,]   65   70   67   71   74   70   73   72   76    74 #>  [3307,]   65   70   67   71   74   70   72   71   75    73 #>  [3308,]   65   70   67   71   74   70   73   72   76    74 #>  [3309,]   65   70   67   71   74   70   73   72   76    74 #>  [3310,]   66   71   68   72   75   70   73   72   76    74 #>  [3311,]   65   70   67   71   74   70   73   72   76    74 #>  [3312,]   65   70   67   71   74   70   72   71   75    73 #>  [3313,]   65   70   67   71   74   70   73   72   76    74 #>  [3314,]   65   70   67   71   74   70   73   72   76    74 #>  [3315,]   65   70   67   71   74   70   73   72   76    74 #>  [3316,]   65   70   67   71   74   70   73   72   76    74 #>  [3317,]   65   70   67   71   74   70   73   72   76    74 #>  [3318,]   66   72   69   73   75   70   73   72   76    74 #>  [3319,]   65   70   67   71   74   70   73   72   76    74 #>  [3320,]   65   70   67   71   74   70   73   72   76    74 #>  [3321,]   66   72   69   73   75   70   73   72   76    74 #>  [3322,]   65   70   67   71   74   70   73   72   76    74 #>  [3323,]   66   71   68   72   75   70   73   72   76    74 #>  [3324,]   65   70   67   71   74   70   73   72   76    74 #>  [3325,]   66   71   68   72   75   70   73   72   76    74 #>  [3326,]   65   70   67   71   74   70   73   72   76    74 #>  [3327,]   65   70   67   71   74   70   73   72   76    74 #>  [3328,]   65   70   67   71   74   70   73   72   76    74 #>  [3329,]   65   70   67   71   74   70   73   72   76    74 #>  [3330,]   65   70   67   71   74   70   73   72   76    74 #>  [3331,]   65   70   67   71   74   70   72   71   75    73 #>  [3332,]   65   70   67   71   74   70   73   72   76    74 #>  [3333,]   65   70   67   71   74   70   73   72   76    74 #>  [3334,]   65   70   67   71   74   70   73   72   76    74 #>  [3335,]   65   70   67   71   74   70   73   72   76    74 #>  [3336,]   65   70   67   71   74   70   73   72   76    74 #>  [3337,]   65   70   67   71   74   70   73   72   76    74 #>  [3338,]   65   70   67   71   74   70   73   72   76    74 #>  [3339,]   66   72   69   73   75   70   73   72   76    74 #>  [3340,]   65   70   67   71   74   70   73   72   76    74 #>  [3341,]   65   70   67   71   74   70   73   72   76    74 #>  [3342,]   65   70   67   71   74   70   73   72   76    74 #>  [3343,]   66   72   69   73   75   70   73   72   76    74 #>  [3344,]   65   70   67   71   74   70   73   72   76    74 #>  [3345,]   66   71   68   72   75   70   73   72   76    74 #>  [3346,]   65   70   67   71   74   70   73   72   76    74 #>  [3347,]   65   70   67   71   74   70   73   72   76    74 #>  [3348,]   65   70   67   71   74   70   73   72   76    74 #>  [3349,]   65   70   67   71   74   70   73   72   76    74 #>  [3350,]   65   70   67   71   74   70   73   72   76    74 #>  [3351,]   65   70   67   71   74   70   73   72   76    74 #>  [3352,]   65   70   67   71   74   70   72   71   75    73 #>  [3353,]   66   72   69   73   75   70   73   72   76    74 #>  [3354,]   65   70   67   71   74   70   73   72   76    74 #>  [3355,]   65   70   67   71   74   70   73   72   76    74 #>  [3356,]   65   70   67   71   74   70   73   72   76    74 #>  [3357,]   65   70   67   71   74   70   73   72   76    74 #>  [3358,]   65   70   67   71   74   70   73   72   76    74 #>  [3359,]   65   70   67   71   74   70   72   71   75    73 #>  [3360,]   65   70   67   71   74   70   72   71   75    73 #>  [3361,]   66   72   69   73   75   70   73   72   76    74 #>  [3362,]   65   70   67   71   74   70   73   72   76    74 #>  [3363,]   65   70   67   71   74   70   73   72   76    74 #>  [3364,]   65   70   67   71   74   70   73   72   76    74 #>  [3365,]   65   70   67   71   74   70   73   72   76    74 #>  [3366,]   65   70   67   71   74   70   73   72   76    74 #>  [3367,]   65   70   67   71   74   70   73   72   76    74 #>  [3368,]   65   70   67   71   74   70   73   72   76    74 #>  [3369,]   65   70   67   71   74   70   73   72   76    74 #>  [3370,]   65   70   67   71   74   70   73   72   76    74 #>  [3371,]   65   70   67   71   74   70   73   72   76    74 #>  [3372,]   66   71   68   72   75   70   73   72   76    74 #>  [3373,]   66   72   69   73   75   70   73   72   76    74 #>  [3374,]   66   71   68   72   75   70   73   72   76    74 #>  [3375,]   66   71   68   72   75   70   73   72   76    74 #>  [3376,]   66   71   68   72   75   70   73   72   76    74 #>  [3377,]   66   72   69   73   75   70   73   72   76    74 #>  [3378,]   65   70   67   71   74   70   73   72   76    74 #>  [3379,]   65   70   67   71   74   70   73   72   76    74 #>  [3380,]   65   70   67   71   74   70   73   72   76    74 #>  [3381,]   65   70   67   71   74   70   73   72   76    74 #>  [3382,]   65   70   67   71   74   70   73   72   76    74 #>  [3383,]   65   70   67   71   74   70   73   72   76    74 #>  [3384,]   66   72   69   73   75   70   73   72   76    74 #>  [3385,]   65   70   67   71   74   70   73   72   76    74 #>  [3386,]   65   70   67   71   74   70   73   72   76    74 #>  [3387,]   65   70   67   71   74   70   73   72   76    74 #>  [3388,]   65   70   67   71   74   70   73   72   76    74 #>  [3389,]   65   70   67   71   74   70   73   72   76    74 #>  [3390,]   65   70   67   71   74   70   73   72   76    74 #>  [3391,]   65   70   67   71   74   70   73   72   76    74 #>  [3392,]   65   70   67   71   74   70   73   72   76    74 #>  [3393,]   65   70   67   71   74   70   73   72   76    74 #>  [3394,]   66   72   69   73   75   70   73   72   76    74 #>  [3395,]   66   71   68   72   75   70   73   72   76    74 #>  [3396,]   65   70   67   71   74   70   73   72   76    74 #>  [3397,]   65   70   67   71   74   70   72   71   75    73 #>  [3398,]   65   70   67   71   74   70   73   72   76    74 #>  [3399,]   65   70   67   71   74   70   73   72   76    74 #>  [3400,]   66   72   69   73   75   70   73   72   76    74 #>  [3401,]   68   74   70   75   77   72   75   75   78    76 #>  [3402,]   67   73   70   75   77   72   75   74   78    76 #>  [3403,]   67   73   70   74   76   71   74   73   77    75 #>  [3404,]   68   74   70   75   77   72   75   74   78    76 #>  [3405,]   68   74   70   75   77   72   75   75   78    76 #>  [3406,]   67   73   70   75   77   72   75   75   78    76 #>  [3407,]   67   73   70   74   76   71   74   73   77    75 #>  [3408,]   67   73   70   74   76   71   74   73   77    75 #>  [3409,]   67   73   70   75   77   72   75   75   78    76 #>  [3410,]   68   74   70   75   77   72   75   74   78    76 #>  [3411,]   68   74   70   75   77   72   75   74   78    76 #>  [3412,]   68   74   70   75   77   72   75   75   78    76 #>  [3413,]   68   74   70   74   76   71   74   73   77    75 #>  [3414,]   68   74   70   75   77   72   75   75   78    76 #>  [3415,]   68   74   70   75   77   72   75   75   78    76 #>  [3416,]   68   74   70   74   76   71   74   73   77    75 #>  [3417,]   68   74   70   75   77   72   75   74   78    76 #>  [3418,]   68   74   70   75   77   72   75   74   78    76 #>  [3419,]   68   74   70   75   77   72   75   74   78    76 #>  [3420,]   67   73   70   74   76   71   74   73   77    75 #>  [3421,]   67   73   70   75   77   72   75   74   78    76 #>  [3422,]   68   74   70   74   76   71   74   73   77    75 #>  [3423,]   67   73   70   75   77   72   75   74   78    76 #>  [3424,]   68   74   70   74   76   71   74   73   77    75 #>  [3425,]   67   73   70   74   76   71   74   73   77    75 #>  [3426,]   68   74   70   75   77   72   75   75   78    76 #>  [3427,]   68   74   70   75   77   72   75   74   78    76 #>  [3428,]   68   74   70   75   77   72   75   74   78    76 #>  [3429,]   67   73   70   75   77   72   75   74   78    76 #>  [3430,]   67   73   70   75   77   72   75   74   78    76 #>  [3431,]   68   74   70   75   77   72   75   74   78    76 #>  [3432,]   68   74   70   75   77   72   75   74   78    76 #>  [3433,]   68   74   70   75   77   72   75   75   78    76 #>  [3434,]   67   73   70   75   77   72   75   74   78    76 #>  [3435,]   67   73   70   75   77   72   75   74   78    76 #>  [3436,]   67   73   70   75   77   72   75   74   78    76 #>  [3437,]   67   73   70   75   77   72   75   74   78    76 #>  [3438,]   68   74   70   75   77   72   75   74   78    76 #>  [3439,]   68   74   70   74   76   71   74   73   77    75 #>  [3440,]   67   73   70   74   76   71   74   73   77    75 #>  [3441,]   67   73   70   75   77   72   75   75   78    76 #>  [3442,]   67   73   70   75   77   72   75   74   78    76 #>  [3443,]   68   74   70   75   77   72   75   75   78    76 #>  [3444,]   67   73   70   74   76   71   74   73   77    75 #>  [3445,]   67   73   70   75   77   72   75   75   78    76 #>  [3446,]   68   74   70   74   76   71   74   73   77    75 #>  [3447,]   68   74   70   75   77   72   75   74   78    76 #>  [3448,]   68   74   70   75   77   72   75   74   78    76 #>  [3449,]   67   73   70   74   76   71   74   73   77    75 #>  [3450,]   67   73   70   74   76   71   74   73   77    75 #>  [3451,]   68   74   70   75   77   72   75   75   78    76 #>  [3452,]   68   74   70   75   77   72   75   74   78    76 #>  [3453,]   67   73   70   74   76   71   74   73   77    75 #>  [3454,]   67   73   70   74   76   71   74   73   77    75 #>  [3455,]   67   73   70   74   76   71   74   73   77    75 #>  [3456,]   67   73   70   74   76   71   74   73   77    75 #>  [3457,]   67   73   70   75   77   72   75   75   78    76 #>  [3458,]   68   74   70   75   77   72   75   75   78    76 #>  [3459,]   68   74   70   74   76   71   74   73   77    75 #>  [3460,]   67   73   70   75   77   72   75   75   78    76 #>  [3461,]   68   74   70   75   77   72   75   75   78    76 #>  [3462,]   67   73   70   75   77   72   75   74   78    76 #>  [3463,]   68   74   70   74   76   71   74   73   77    75 #>  [3464,]   67   73   70   75   77   72   75   75   78    76 #>  [3465,]   67   73   70   74   76   71   74   73   77    75 #>  [3466,]   68   74   70   74   76   71   74   73   77    75 #>  [3467,]   67   73   70   75   77   72   75   74   78    76 #>  [3468,]   68   74   70   75   77   72   75   75   78    76 #>  [3469,]   68   74   70   75   77   72   75   74   78    76 #>  [3470,]   68   74   70   74   76   71   74   73   77    75 #>  [3471,]   68   74   70   75   77   72   75   75   78    76 #>  [3472,]   67   73   70   74   76   71   74   73   77    75 #>  [3473,]   67   73   70   75   77   72   75   75   78    76 #>  [3474,]   67   73   70   75   77   72   75   75   78    76 #>  [3475,]   68   74   70   75   77   72   75   75   78    76 #>  [3476,]   67   73   70   75   77   72   75   75   78    76 #>  [3477,]   68   74   70   75   77   72   75   74   78    76 #>  [3478,]   67   73   70   74   76   71   74   73   77    75 #>  [3479,]   68   74   70   75   77   72   75   74   78    76 #>  [3480,]   67   73   70   75   77   72   75   74   78    76 #>  [3481,]   67   73   70   75   77   72   75   75   78    76 #>  [3482,]   67   73   70   75   77   72   75   74   78    76 #>  [3483,]   68   74   70   75   77   72   75   74   78    76 #>  [3484,]   67   73   70   74   76   71   74   73   77    75 #>  [3485,]   67   73   70   75   77   72   75   74   78    76 #>  [3486,]   67   73   70   74   76   71   74   73   77    75 #>  [3487,]   68   74   70   75   77   72   75   75   78    76 #>  [3488,]   67   73   70   75   77   72   75   74   78    76 #>  [3489,]   67   73   70   74   76   71   74   73   77    75 #>  [3490,]   68   74   70   74   76   71   74   73   77    75 #>  [3491,]   68   74   70   75   77   72   75   74   78    76 #>  [3492,]   68   74   70   75   77   72   75   75   78    76 #>  [3493,]   67   73   70   75   77   72   75   74   78    76 #>  [3494,]   67   73   70   75   77   72   75   75   78    76 #>  [3495,]   68   74   70   75   77   72   75   74   78    76 #>  [3496,]   68   74   70   75   77   72   75   75   78    76 #>  [3497,]   67   73   70   75   77   72   75   75   78    76 #>  [3498,]   67   73   70   74   76   71   74   73   77    75 #>  [3499,]   67   73   70   75   77   72   75   74   78    76 #>  [3500,]   68   74   70   74   76   71   74   73   77    75 #>  [3501,]   70   76   72   76   78   73   76   76   79    77 #>  [3502,]   70   76   72   76   78   73   76   76   79    77 #>  [3503,]   69   75   71   77   79   74   77   77   80    78 #>  [3504,]   70   76   72   76   78   73   76   76   79    77 #>  [3505,]   70   76   72   76   78   73   76   76   79    77 #>  [3506,]   70   76   72   76   78   73   76   76   79    77 #>  [3507,]   69   75   71   77   79   74   77   77   80    78 #>  [3508,]   69   75   71   77   79   74   77   77   80    78 #>  [3509,]   70   76   72   76   78   73   76   76   79    77 #>  [3510,]   70   76   72   76   78   73   76   76   79    77 #>  [3511,]   70   76   72   76   78   73   76   76   79    77 #>  [3512,]   70   76   72   76   78   73   76   76   79    77 #>  [3513,]   70   76   72   76   78   73   76   76   79    77 #>  [3514,]   70   76   72   76   78   73   76   76   79    77 #>  [3515,]   70   76   72   76   78   73   76   76   79    77 #>  [3516,]   70   76   72   76   78   73   76   76   79    77 #>  [3517,]   70   76   72   76   78   73   76   76   79    77 #>  [3518,]   70   76   72   76   78   73   76   76   79    77 #>  [3519,]   70   76   72   76   78   73   76   76   79    77 #>  [3520,]   69   75   71   78   79   74   77   77   80    78 #>  [3521,]   70   76   72   76   78   73   76   76   79    77 #>  [3522,]   70   76   72   76   78   73   76   76   79    77 #>  [3523,]   70   76   72   76   78   73   76   76   79    77 #>  [3524,]   70   76   72   76   78   73   76   76   79    77 #>  [3525,]   69   75   71   77   79   74   77   77   80    78 #>  [3526,]   70   76   72   76   78   73   76   76   79    77 #>  [3527,]   70   76   72   76   78   73   76   76   79    77 #>  [3528,]   70   76   72   76   78   73   76   76   79    77 #>  [3529,]   70   76   72   76   78   73   76   76   79    77 #>  [3530,]   70   76   72   76   78   73   76   76   79    77 #>  [3531,]   70   76   72   76   78   73   76   76   79    77 #>  [3532,]   70   76   72   76   78   73   76   76   79    77 #>  [3533,]   70   76   72   76   78   73   76   76   79    77 #>  [3534,]   70   76   72   76   78   73   76   76   79    77 #>  [3535,]   70   76   72   76   78   73   76   76   79    77 #>  [3536,]   70   76   72   76   78   73   76   76   79    77 #>  [3537,]   70   76   72   76   78   73   76   76   79    77 #>  [3538,]   70   76   72   76   78   73   76   76   79    77 #>  [3539,]   69   75   71   77   79   74   77   77   80    78 #>  [3540,]   70   76   72   76   78   73   76   76   79    77 #>  [3541,]   70   76   72   76   78   73   76   76   79    77 #>  [3542,]   70   76   72   76   78   73   76   76   79    77 #>  [3543,]   70   76   72   76   78   73   76   76   79    77 #>  [3544,]   69   75   71   78   79   74   77   77   80    78 #>  [3545,]   70   76   72   76   78   73   76   76   79    77 #>  [3546,]   69   75   71   77   79   74   77   77   80    78 #>  [3547,]   70   76   72   76   78   73   76   76   79    77 #>  [3548,]   70   76   72   76   78   73   76   76   79    77 #>  [3549,]   69   75   71   77   79   74   77   77   80    78 #>  [3550,]   69   75   71   78   79   74   77   77   80    78 #>  [3551,]   70   76   72   76   78   73   76   76   79    77 #>  [3552,]   70   76   72   76   78   73   76   76   79    77 #>  [3553,]   69   75   71   78   79   74   77   77   80    78 #>  [3554,]   70   76   72   76   78   73   76   76   79    77 #>  [3555,]   69   75   71   77   79   74   77   77   80    78 #>  [3556,]   69   75   71   77   79   74   77   77   80    78 #>  [3557,]   70   76   72   76   78   73   76   76   79    77 #>  [3558,]   70   76   72   76   78   73   76   76   79    77 #>  [3559,]   69   75   71   77   79   74   77   77   80    78 #>  [3560,]   70   76   72   76   78   73   76   76   79    77 #>  [3561,]   70   76   72   76   78   73   76   76   79    77 #>  [3562,]   70   76   72   76   78   73   76   76   79    77 #>  [3563,]   70   76   72   76   78   73   76   76   79    77 #>  [3564,]   70   76   72   76   78   73   76   76   79    77 #>  [3565,]   69   75   71   77   79   74   77   77   80    78 #>  [3566,]   69   75   71   77   79   74   77   77   80    78 #>  [3567,]   70   76   72   76   78   73   76   76   79    77 #>  [3568,]   70   76   72   76   78   73   76   76   79    77 #>  [3569,]   70   76   72   76   78   73   76   76   79    77 #>  [3570,]   69   75   71   78   79   74   77   77   80    78 #>  [3571,]   70   76   72   76   78   73   76   76   79    77 #>  [3572,]   70   76   72   76   78   73   76   76   79    77 #>  [3573,]   70   76   72   76   78   73   76   76   79    77 #>  [3574,]   70   76   72   76   78   73   76   76   79    77 #>  [3575,]   70   76   72   76   78   73   76   76   79    77 #>  [3576,]   70   76   72   76   78   73   76   76   79    77 #>  [3577,]   70   76   72   76   78   73   76   76   79    77 #>  [3578,]   70   76   72   76   78   73   76   76   79    77 #>  [3579,]   70   76   72   76   78   73   76   76   79    77 #>  [3580,]   70   76   72   76   78   73   76   76   79    77 #>  [3581,]   70   76   72   76   78   73   76   76   79    77 #>  [3582,]   70   76   72   76   78   73   76   76   79    77 #>  [3583,]   70   76   72   76   78   73   76   76   79    77 #>  [3584,]   69   75   71   78   79   74   77   77   80    78 #>  [3585,]   70   76   72   76   78   73   76   76   79    77 #>  [3586,]   69   75   71   78   79   74   77   77   80    78 #>  [3587,]   70   76   72   76   78   73   76   76   79    77 #>  [3588,]   70   76   72   76   78   73   76   76   79    77 #>  [3589,]   70   76   72   76   78   73   76   76   79    77 #>  [3590,]   69   75   71   77   79   74   77   77   80    78 #>  [3591,]   70   76   72   76   78   73   76   76   79    77 #>  [3592,]   70   76   72   76   78   73   76   76   79    77 #>  [3593,]   70   76   72   76   78   73   76   76   79    77 #>  [3594,]   70   76   72   76   78   73   76   76   79    77 #>  [3595,]   70   76   72   76   78   73   76   76   79    77 #>  [3596,]   70   76   72   76   78   73   76   76   79    77 #>  [3597,]   70   76   72   76   78   73   76   76   79    77 #>  [3598,]   69   75   71   77   79   74   77   77   80    78 #>  [3599,]   70   76   72   76   78   73   76   76   79    77 #>  [3600,]   69   75   71   77   79   74   77   77   80    78 #>  [3601,]   71   77   73   79   80   75   78   78   81    79 #>  [3602,]   71   77   73   79   80   75   78   78   81    79 #>  [3603,]   71   77   73   79   80   75   78   78   81    79 #>  [3604,]   72   78   74   80   81   76   79   79   82    80 #>  [3605,]   71   77   73   79   80   75   78   78   81    79 #>  [3606,]   71   77   73   79   80   75   78   78   81    79 #>  [3607,]   71   77   73   79   80   75   78   78   81    79 #>  [3608,]   71   77   73   79   80   75   78   78   81    79 #>  [3609,]   71   77   73   79   80   75   78   78   81    79 #>  [3610,]   71   77   73   79   80   75   78   78   81    79 #>  [3611,]   72   78   74   80   81   76   79   79   82    80 #>  [3612,]   72   78   75   80   81   76   79   79   82    80 #>  [3613,]   71   77   73   79   80   75   78   78   81    79 #>  [3614,]   72   78   74   80   81   76   79   79   82    80 #>  [3615,]   72   78   75   80   81   76   79   79   82    80 #>  [3616,]   71   77   73   79   80   75   78   78   81    79 #>  [3617,]   71   77   73   79   80   75   78   78   81    79 #>  [3618,]   71   77   73   79   80   75   78   78   81    79 #>  [3619,]   72   78   75   80   81   76   79   79   82    80 #>  [3620,]   71   77   73   79   80   75   78   78   81    79 #>  [3621,]   72   78   74   80   81   76   79   79   82    80 #>  [3622,]   71   77   73   79   80   75   78   78   81    79 #>  [3623,]   71   77   73   79   80   75   78   78   81    79 #>  [3624,]   71   77   73   79   80   75   78   78   81    79 #>  [3625,]   71   77   73   79   80   75   78   78   81    79 #>  [3626,]   71   77   73   79   80   75   78   78   81    79 #>  [3627,]   72   78   75   80   81   76   79   79   82    80 #>  [3628,]   71   77   73   79   80   75   78   78   81    79 #>  [3629,]   71   77   73   79   80   75   78   78   81    79 #>  [3630,]   71   77   73   79   80   75   78   78   81    79 #>  [3631,]   72   78   74   80   81   76   79   79   82    80 #>  [3632,]   71   77   73   79   80   75   78   78   81    79 #>  [3633,]   72   78   75   80   81   76   79   79   82    80 #>  [3634,]   71   77   73   79   80   75   78   78   81    79 #>  [3635,]   71   77   73   79   80   75   78   78   81    79 #>  [3636,]   72   78   75   80   81   76   79   79   82    80 #>  [3637,]   71   77   73   79   80   75   78   78   81    79 #>  [3638,]   72   78   75   80   81   76   79   79   82    80 #>  [3639,]   71   77   73   79   80   75   78   78   81    79 #>  [3640,]   71   77   73   79   80   75   78   78   81    79 #>  [3641,]   72   78   75   80   81   76   79   79   82    80 #>  [3642,]   72   78   74   80   81   76   79   79   82    80 #>  [3643,]   71   77   73   79   80   75   78   78   81    79 #>  [3644,]   71   77   73   79   80   75   78   78   81    79 #>  [3645,]   71   77   73   79   80   75   78   78   81    79 #>  [3646,]   71   77   73   79   80   75   78   78   81    79 #>  [3647,]   71   77   73   79   80   75   78   78   81    79 #>  [3648,]   72   78   74   80   81   76   79   79   82    80 #>  [3649,]   71   77   73   79   80   75   78   78   81    79 #>  [3650,]   71   77   73   79   80   75   78   78   81    79 #>  [3651,]   71   77   73   79   80   75   78   78   81    79 #>  [3652,]   71   77   73   79   80   75   78   78   81    79 #>  [3653,]   71   77   73   79   80   75   78   78   81    79 #>  [3654,]   71   77   73   79   80   75   78   78   81    79 #>  [3655,]   71   77   73   79   80   75   78   78   81    79 #>  [3656,]   71   77   73   79   80   75   78   78   81    79 #>  [3657,]   71   77   73   79   80   75   78   78   81    79 #>  [3658,]   72   78   75   80   81   76   79   79   82    80 #>  [3659,]   71   77   73   79   80   75   78   78   81    79 #>  [3660,]   71   77   73   79   80   75   78   78   81    79 #>  [3661,]   72   78   75   80   81   76   79   79   82    80 #>  [3662,]   71   77   73   79   80   75   78   78   81    79 #>  [3663,]   71   77   73   79   80   75   78   78   81    79 #>  [3664,]   71   77   73   79   80   75   78   78   81    79 #>  [3665,]   71   77   73   79   80   75   78   78   81    79 #>  [3666,]   71   77   73   79   80   75   78   78   81    79 #>  [3667,]   71   77   73   79   80   75   78   78   81    79 #>  [3668,]   72   78   75   80   81   76   79   79   82    80 #>  [3669,]   72   78   75   80   81   76   79   79   82    80 #>  [3670,]   71   77   73   79   80   75   78   78   81    79 #>  [3671,]   71   77   73   79   80   75   78   78   81    79 #>  [3672,]   71   77   73   79   80   75   78   78   81    79 #>  [3673,]   71   77   73   79   80   75   78   78   81    79 #>  [3674,]   72   78   74   80   81   76   79   79   82    80 #>  [3675,]   72   78   75   80   81   76   79   79   82    80 #>  [3676,]   71   77   73   79   80   75   78   78   81    79 #>  [3677,]   71   77   73   79   80   75   78   78   81    79 #>  [3678,]   71   77   73   79   80   75   78   78   81    79 #>  [3679,]   71   77   73   79   80   75   78   78   81    79 #>  [3680,]   71   77   73   79   80   75   78   78   81    79 #>  [3681,]   71   77   73   79   80   75   78   78   81    79 #>  [3682,]   72   78   74   80   81   76   79   79   82    80 #>  [3683,]   71   77   73   79   80   75   78   78   81    79 #>  [3684,]   71   77   73   79   80   75   78   78   81    79 #>  [3685,]   71   77   73   79   80   75   78   78   81    79 #>  [3686,]   71   77   73   79   80   75   78   78   81    79 #>  [3687,]   71   77   73   79   80   75   78   78   81    79 #>  [3688,]   71   77   73   79   80   75   78   78   81    79 #>  [3689,]   71   77   73   79   80   75   78   78   81    79 #>  [3690,]   71   77   73   79   80   75   78   78   81    79 #>  [3691,]   71   77   73   79   80   75   78   78   81    79 #>  [3692,]   72   78   75   80   81   76   79   79   82    80 #>  [3693,]   72   78   75   80   81   76   79   79   82    80 #>  [3694,]   71   77   73   79   80   75   78   78   81    79 #>  [3695,]   71   77   73   79   80   75   78   78   81    79 #>  [3696,]   72   78   75   80   81   76   79   79   82    80 #>  [3697,]   72   78   75   80   81   76   79   79   82    80 #>  [3698,]   71   77   73   79   80   75   78   78   81    79 #>  [3699,]   71   77   73   79   80   75   78   78   81    79 #>  [3700,]   71   77   73   79   80   75   78   78   81    79 #>  [3701,]   74   80   77   82   83   78   81   81   84    82 #>  [3702,]   74   80   77   82   83   78   81   81   84    82 #>  [3703,]   73   79   76   81   82   77   80   80   83    81 #>  [3704,]   74   80   77   82   83   78   81   81   84    82 #>  [3705,]   74   80   77   82   83   78   81   81   84    82 #>  [3706,]   74   80   77   82   83   78   81   81   84    82 #>  [3707,]   74   80   77   82   83   78   81   81   84    82 #>  [3708,]   74   80   77   82   83   78   81   81   84    82 #>  [3709,]   74   80   77   82   83   78   81   81   84    82 #>  [3710,]   74   80   77   82   83   78   81   81   84    82 #>  [3711,]   74   80   77   82   83   78   81   81   84    82 #>  [3712,]   73   79   76   81   82   77   80   80   83    81 #>  [3713,]   74   80   77   82   83   78   81   81   84    82 #>  [3714,]   73   79   76   81   82   77   80   80   83    81 #>  [3715,]   74   80   77   82   83   78   81   81   84    82 #>  [3716,]   74   80   77   82   83   78   81   81   84    82 #>  [3717,]   74   80   77   82   83   78   81   81   84    82 #>  [3718,]   74   80   77   82   83   78   81   81   84    82 #>  [3719,]   74   80   77   82   83   78   81   81   84    82 #>  [3720,]   74   80   77   82   83   78   81   81   84    82 #>  [3721,]   74   80   77   82   83   78   81   81   84    82 #>  [3722,]   74   80   77   82   83   78   81   81   84    82 #>  [3723,]   74   80   77   82   83   78   81   81   84    82 #>  [3724,]   74   80   77   82   83   78   81   81   84    82 #>  [3725,]   74   80   77   82   83   78   81   81   84    82 #>  [3726,]   73   79   76   81   82   77   80   80   83    81 #>  [3727,]   74   80   77   82   83   78   81   81   84    82 #>  [3728,]   74   80   77   82   83   78   81   81   84    82 #>  [3729,]   74   80   77   82   83   78   81   81   84    82 #>  [3730,]   74   80   77   82   83   78   81   81   84    82 #>  [3731,]   74   80   77   82   83   78   81   81   84    82 #>  [3732,]   73   79   76   81   82   77   80   80   83    81 #>  [3733,]   74   80   77   82   83   78   81   81   84    82 #>  [3734,]   74   80   77   82   83   78   81   81   84    82 #>  [3735,]   74   80   77   82   83   78   81   81   84    82 #>  [3736,]   74   80   77   82   83   78   81   81   84    82 #>  [3737,]   74   80   77   82   83   78   81   81   84    82 #>  [3738,]   74   80   77   82   83   78   81   81   84    82 #>  [3739,]   74   80   77   82   83   78   81   81   84    82 #>  [3740,]   74   80   77   82   83   78   81   81   84    82 #>  [3741,]   74   80   77   82   83   78   81   81   84    82 #>  [3742,]   74   80   77   82   83   78   81   81   84    82 #>  [3743,]   74   80   77   82   83   78   81   81   84    82 #>  [3744,]   74   80   77   82   83   78   81   81   84    82 #>  [3745,]   74   80   77   82   83   78   81   81   84    82 #>  [3746,]   74   80   77   82   83   78   81   81   84    82 #>  [3747,]   74   80   77   82   83   78   81   81   84    82 #>  [3748,]   73   79   76   81   82   77   80   80   83    81 #>  [3749,]   74   80   77   82   83   78   81   81   84    82 #>  [3750,]   74   80   77   82   83   78   81   81   84    82 #>  [3751,]   73   79   76   81   82   77   80   80   83    81 #>  [3752,]   74   80   77   82   83   78   81   81   84    82 #>  [3753,]   74   80   77   82   83   78   81   81   84    82 #>  [3754,]   73   79   76   81   82   77   80   80   83    81 #>  [3755,]   74   80   77   82   83   78   81   81   84    82 #>  [3756,]   74   80   77   82   83   78   81   81   84    82 #>  [3757,]   74   80   77   82   83   78   81   81   84    82 #>  [3758,]   74   80   77   82   83   78   81   81   84    82 #>  [3759,]   74   80   77   82   83   78   81   81   84    82 #>  [3760,]   74   80   77   82   83   78   81   81   84    82 #>  [3761,]   74   80   77   82   83   78   81   81   84    82 #>  [3762,]   73   79   76   81   82   77   80   80   83    81 #>  [3763,]   74   80   77   82   83   78   81   81   84    82 #>  [3764,]   74   80   77   82   83   78   81   81   84    82 #>  [3765,]   74   80   77   82   83   78   81   81   84    82 #>  [3766,]   73   79   76   81   82   77   80   80   83    81 #>  [3767,]   74   80   77   82   83   78   81   81   84    82 #>  [3768,]   74   80   77   82   83   78   81   81   84    82 #>  [3769,]   73   79   76   81   82   77   80   80   83    81 #>  [3770,]   74   80   77   82   83   78   81   81   84    82 #>  [3771,]   74   80   77   82   83   78   81   81   84    82 #>  [3772,]   74   80   77   82   83   78   81   81   84    82 #>  [3773,]   74   80   77   82   83   78   81   81   84    82 #>  [3774,]   74   80   77   82   83   78   81   81   84    82 #>  [3775,]   74   80   77   82   83   78   81   81   84    82 #>  [3776,]   74   80   77   82   83   78   81   81   84    82 #>  [3777,]   74   80   77   82   83   78   81   81   84    82 #>  [3778,]   74   80   77   82   83   78   81   81   84    82 #>  [3779,]   74   80   77   82   83   78   81   81   84    82 #>  [3780,]   73   79   76   81   82   77   80   80   83    81 #>  [3781,]   73   79   76   81   82   77   80   80   83    81 #>  [3782,]   74   80   77   82   83   78   81   81   84    82 #>  [3783,]   74   80   77   82   83   78   81   81   84    82 #>  [3784,]   74   80   77   82   83   78   81   81   84    82 #>  [3785,]   74   80   77   82   83   78   81   81   84    82 #>  [3786,]   74   80   77   82   83   78   81   81   84    82 #>  [3787,]   74   80   77   82   83   78   81   81   84    82 #>  [3788,]   74   80   77   82   83   78   81   81   84    82 #>  [3789,]   73   79   76   81   82   77   80   80   83    81 #>  [3790,]   74   80   77   82   83   78   81   81   84    82 #>  [3791,]   74   80   77   82   83   78   81   81   84    82 #>  [3792,]   74   80   77   82   83   78   81   81   84    82 #>  [3793,]   74   80   77   82   83   78   81   81   84    82 #>  [3794,]   74   80   77   82   83   78   81   81   84    82 #>  [3795,]   74   80   77   82   83   78   81   81   84    82 #>  [3796,]   74   80   77   82   83   78   81   81   84    82 #>  [3797,]   74   80   77   82   83   78   81   81   84    82 #>  [3798,]   74   80   77   82   83   78   81   81   84    82 #>  [3799,]   74   80   77   82   83   78   81   81   84    82 #>  [3800,]   74   80   77   82   83   78   81   81   84    82 #>  [3801,]   75   81   80   85   86   81   83   83   86    84 #>  [3802,]   75   81   80   85   86   81   83   83   86    84 #>  [3803,]   75   81   79   84   85   80   82   82   85    83 #>  [3804,]   76   82   78   83   84   79   84   84   87    85 #>  [3805,]   75   81   80   85   86   81   83   83   86    84 #>  [3806,]   75   81   80   85   86   81   83   83   86    84 #>  [3807,]   76   82   78   83   84   79   84   84   87    85 #>  [3808,]   75   81   79   84   85   80   82   82   85    83 #>  [3809,]   76   82   78   83   84   79   84   84   87    85 #>  [3810,]   76   82   78   83   84   79   84   84   87    85 #>  [3811,]   75   81   80   85   86   81   83   83   86    84 #>  [3812,]   75   81   80   85   86   81   83   83   86    84 #>  [3813,]   75   81   80   85   86   81   83   83   86    84 #>  [3814,]   76   82   78   83   84   79   85   85   87    85 #>  [3815,]   75   81   80   85   86   81   83   83   86    84 #>  [3816,]   76   82   78   83   84   79   85   85   87    85 #>  [3817,]   75   81   80   85   86   81   83   83   86    84 #>  [3818,]   75   81   80   85   86   81   83   83   86    84 #>  [3819,]   75   81   80   85   86   81   83   83   86    84 #>  [3820,]   76   82   78   83   84   79   84   84   87    85 #>  [3821,]   75   81   80   85   86   81   83   83   86    84 #>  [3822,]   75   81   79   84   85   80   82   82   85    83 #>  [3823,]   75   81   80   85   86   81   83   83   86    84 #>  [3824,]   76   82   78   83   84   79   84   84   87    85 #>  [3825,]   76   82   78   83   84   79   84   84   87    85 #>  [3826,]   75   81   80   85   86   81   83   83   86    84 #>  [3827,]   75   81   80   85   86   81   83   83   86    84 #>  [3828,]   76   82   78   83   84   79   84   84   87    85 #>  [3829,]   75   81   80   85   86   81   83   83   86    84 #>  [3830,]   75   81   80   85   86   81   83   83   86    84 #>  [3831,]   75   81   80   85   86   81   83   83   86    84 #>  [3832,]   75   81   80   85   86   81   83   83   86    84 #>  [3833,]   75   81   80   85   86   81   83   83   86    84 #>  [3834,]   75   81   80   85   86   81   83   83   86    84 #>  [3835,]   75   81   80   85   86   81   83   83   86    84 #>  [3836,]   76   82   78   83   84   79   84   84   87    85 #>  [3837,]   75   81   80   85   86   81   83   83   86    84 #>  [3838,]   75   81   80   85   86   81   83   83   86    84 #>  [3839,]   76   82   78   83   84   79   84   84   87    85 #>  [3840,]   75   81   79   84   85   80   82   82   85    83 #>  [3841,]   75   81   80   85   86   81   83   83   86    84 #>  [3842,]   75   81   80   85   86   81   83   83   86    84 #>  [3843,]   75   81   80   85   86   81   83   83   86    84 #>  [3844,]   75   81   79   84   85   80   82   82   85    83 #>  [3845,]   75   81   80   85   86   81   83   83   86    84 #>  [3846,]   75   81   79   84   85   80   82   82   85    83 #>  [3847,]   75   81   80   85   86   81   83   83   86    84 #>  [3848,]   75   81   80   85   86   81   83   83   86    84 #>  [3849,]   75   81   79   84   85   80   82   82   85    83 #>  [3850,]   76   82   78   83   84   79   85   85   87    85 #>  [3851,]   75   81   80   85   86   81   83   83   86    84 #>  [3852,]   76   82   78   83   84   79   84   84   87    85 #>  [3853,]   75   81   79   84   85   80   82   82   85    83 #>  [3854,]   76   82   78   83   84   79   84   84   87    85 #>  [3855,]   75   81   79   84   85   80   82   82   85    83 #>  [3856,]   75   81   79   84   85   80   82   82   85    83 #>  [3857,]   76   82   78   83   84   79   84   84   87    85 #>  [3858,]   75   81   80   85   86   81   83   83   86    84 #>  [3859,]   76   82   78   83   84   79   85   85   87    85 #>  [3860,]   75   81   80   85   86   81   83   83   86    84 #>  [3861,]   75   81   80   85   86   81   83   83   86    84 #>  [3862,]   75   81   80   85   86   81   83   83   86    84 #>  [3863,]   75   81   80   85   86   81   83   83   86    84 #>  [3864,]   75   81   80   85   86   81   83   83   86    84 #>  [3865,]   75   81   79   84   85   80   82   82   85    83 #>  [3866,]   75   81   79   84   85   80   82   82   85    83 #>  [3867,]   76   82   78   83   84   79   84   84   87    85 #>  [3868,]   75   81   80   85   86   81   83   83   86    84 #>  [3869,]   75   81   80   85   86   81   83   83   86    84 #>  [3870,]   75   81   79   84   85   80   82   82   85    83 #>  [3871,]   75   81   80   85   86   81   83   83   86    84 #>  [3872,]   75   81   79   84   85   80   82   82   85    83 #>  [3873,]   76   82   78   83   84   79   85   85   87    85 #>  [3874,]   75   81   80   85   86   81   83   83   86    84 #>  [3875,]   75   81   80   85   86   81   83   83   86    84 #>  [3876,]   76   82   78   83   84   79   85   85   87    85 #>  [3877,]   75   81   80   85   86   81   83   83   86    84 #>  [3878,]   75   81   80   85   86   81   83   83   86    84 #>  [3879,]   75   81   80   85   86   81   83   83   86    84 #>  [3880,]   75   81   80   85   86   81   83   83   86    84 #>  [3881,]   75   81   80   85   86   81   83   83   86    84 #>  [3882,]   75   81   80   85   86   81   83   83   86    84 #>  [3883,]   75   81   80   85   86   81   83   83   86    84 #>  [3884,]   75   81   79   84   85   80   82   82   85    83 #>  [3885,]   75   81   80   85   86   81   83   83   86    84 #>  [3886,]   76   82   78   83   84   79   85   85   87    85 #>  [3887,]   75   81   80   85   86   81   83   83   86    84 #>  [3888,]   75   81   80   85   86   81   83   83   86    84 #>  [3889,]   75   81   80   85   86   81   83   83   86    84 #>  [3890,]   76   82   78   83   84   79   84   84   87    85 #>  [3891,]   76   82   78   83   84   79   84   84   87    85 #>  [3892,]   75   81   80   85   86   81   83   83   86    84 #>  [3893,]   75   81   80   85   86   81   83   83   86    84 #>  [3894,]   75   81   80   85   86   81   83   83   86    84 #>  [3895,]   75   81   80   85   86   81   83   83   86    84 #>  [3896,]   75   81   80   85   86   81   83   83   86    84 #>  [3897,]   75   81   80   85   86   81   83   83   86    84 #>  [3898,]   75   81   79   84   85   80   82   82   85    83 #>  [3899,]   75   81   80   85   86   81   83   83   86    84 #>  [3900,]   75   81   79   84   85   80   82   82   85    83 #>  [3901,]   77   83   81   86   87   83   87   87   89    87 #>  [3902,]   77   83   81   86   87   84   87   87   89    87 #>  [3903,]   77   83   81   86   87   84   87   87   89    87 #>  [3904,]   77   83   81   86   87   83   87   87   89    87 #>  [3905,]   77   83   81   86   87   84   87   87   89    87 #>  [3906,]   77   83   81   86   87   84   87   87   89    87 #>  [3907,]   77   83   81   86   87   84   87   87   89    87 #>  [3908,]   77   83   81   86   87   83   87   87   89    87 #>  [3909,]   77   83   81   86   87   83   87   87   89    87 #>  [3910,]   77   83   81   86   87   84   87   87   89    87 #>  [3911,]   77   83   81   86   87   83   87   87   89    87 #>  [3912,]   77   83   81   86   87   84   87   87   89    87 #>  [3913,]   77   83   81   86   87   83   87   87   89    87 #>  [3914,]   77   83   81   86   87   83   87   87   89    87 #>  [3915,]   77   83   81   86   87   84   87   87   89    87 #>  [3916,]   77   83   81   86   87   84   87   87   89    87 #>  [3917,]   77   83   81   86   87   83   87   87   89    87 #>  [3918,]   78   84   82   87   88   82   86   86   88    86 #>  [3919,]   77   83   81   86   87   84   87   87   89    87 #>  [3920,]   77   83   81   86   87   84   87   87   89    87 #>  [3921,]   77   83   81   86   87   83   87   87   89    87 #>  [3922,]   77   83   81   86   87   83   87   87   89    87 #>  [3923,]   77   83   81   86   87   84   87   87   89    87 #>  [3924,]   77   83   81   86   87   84   87   87   89    87 #>  [3925,]   77   83   81   86   87   84   87   87   89    87 #>  [3926,]   77   83   81   86   87   84   87   87   89    87 #>  [3927,]   77   83   81   86   87   83   87   87   89    87 #>  [3928,]   77   83   81   86   87   84   87   87   89    87 #>  [3929,]   77   83   81   86   87   84   87   87   89    87 #>  [3930,]   77   83   81   86   87   83   87   87   89    87 #>  [3931,]   77   83   81   86   87   84   87   87   89    87 #>  [3932,]   77   83   81   86   87   84   87   87   89    87 #>  [3933,]   77   83   81   86   87   84   87   87   89    87 #>  [3934,]   77   83   81   86   87   84   87   87   89    87 #>  [3935,]   77   83   81   86   87   83   87   87   89    87 #>  [3936,]   77   83   81   86   87   84   87   87   89    87 #>  [3937,]   77   83   81   86   87   84   87   87   89    87 #>  [3938,]   77   83   81   86   87   84   87   87   89    87 #>  [3939,]   77   83   81   86   87   84   87   87   89    87 #>  [3940,]   77   83   81   86   87   84   87   87   89    87 #>  [3941,]   77   83   81   86   87   84   87   87   89    87 #>  [3942,]   77   83   81   86   87   84   87   87   89    87 #>  [3943,]   77   83   81   86   87   83   87   87   89    87 #>  [3944,]   77   83   81   86   87   83   87   87   89    87 #>  [3945,]   77   83   81   86   87   83   87   87   89    87 #>  [3946,]   77   83   81   86   87   83   87   87   89    87 #>  [3947,]   77   83   81   86   87   84   87   87   89    87 #>  [3948,]   77   83   81   86   87   84   87   87   89    87 #>  [3949,]   77   83   81   86   87   83   87   87   89    87 #>  [3950,]   77   83   81   86   87   84   87   87   89    87 #>  [3951,]   78   84   82   87   88   82   86   86   88    86 #>  [3952,]   77   83   81   86   87   83   87   87   89    87 #>  [3953,]   78   84   82   87   88   82   86   86   88    86 #>  [3954,]   77   83   81   86   87   83   87   87   89    87 #>  [3955,]   77   83   81   86   87   83   87   87   89    87 #>  [3956,]   77   83   81   86   87   84   87   87   89    87 #>  [3957,]   77   83   81   86   87   84   87   87   89    87 #>  [3958,]   77   83   81   86   87   83   87   87   89    87 #>  [3959,]   77   83   81   86   87   84   87   87   89    87 #>  [3960,]   77   83   81   86   87   84   87   87   89    87 #>  [3961,]   77   83   81   86   87   84   87   87   89    87 #>  [3962,]   77   83   81   86   87   84   87   87   89    87 #>  [3963,]   77   83   81   86   87   84   87   87   89    87 #>  [3964,]   77   83   81   86   87   84   87   87   89    87 #>  [3965,]   77   83   81   86   87   84   87   87   89    87 #>  [3966,]   77   83   81   86   87   83   87   87   89    87 #>  [3967,]   77   83   81   86   87   84   87   87   89    87 #>  [3968,]   77   83   81   86   87   83   87   87   89    87 #>  [3969,]   77   83   81   86   87   83   87   87   89    87 #>  [3970,]   77   83   81   86   87   84   87   87   89    87 #>  [3971,]   77   83   81   86   87   84   87   87   89    87 #>  [3972,]   77   83   81   86   87   84   87   87   89    87 #>  [3973,]   77   83   81   86   87   84   87   87   89    87 #>  [3974,]   77   83   81   86   87   84   87   87   89    87 #>  [3975,]   77   83   81   86   87   84   87   87   89    87 #>  [3976,]   77   83   81   86   87   84   87   87   89    87 #>  [3977,]   77   83   81   86   87   84   87   87   89    87 #>  [3978,]   77   83   81   86   87   84   87   87   89    87 #>  [3979,]   77   83   81   86   87   83   87   87   89    87 #>  [3980,]   77   83   81   86   87   83   87   87   89    87 #>  [3981,]   77   83   81   86   87   83   87   87   89    87 #>  [3982,]   77   83   81   86   87   83   87   87   89    87 #>  [3983,]   77   83   81   86   87   83   87   87   89    87 #>  [3984,]   78   84   82   87   88   82   86   86   88    86 #>  [3985,]   77   83   81   86   87   84   87   87   89    87 #>  [3986,]   77   83   81   86   87   84   87   87   89    87 #>  [3987,]   77   83   81   86   87   83   87   87   89    87 #>  [3988,]   77   83   81   86   87   83   87   87   89    87 #>  [3989,]   77   83   81   86   87   83   87   87   89    87 #>  [3990,]   77   83   81   86   87   83   87   87   89    87 #>  [3991,]   77   83   81   86   87   83   87   87   89    87 #>  [3992,]   77   83   81   86   87   83   87   87   89    87 #>  [3993,]   77   83   81   86   87   84   87   87   89    87 #>  [3994,]   78   84   82   87   88   82   86   86   88    86 #>  [3995,]   77   83   81   86   87   83   87   87   89    87 #>  [3996,]   77   83   81   86   87   83   87   87   89    87 #>  [3997,]   77   83   81   86   87   84   87   87   89    87 #>  [3998,]   77   83   81   86   87   84   87   87   89    87 #>  [3999,]   77   83   81   86   87   83   87   87   89    87 #>  [4000,]   77   83   81   86   87   84   87   87   89    87 #>  [4001,]   79   85   83   88   89   85   88   88   90    88 #>  [4002,]   79   86   84   89   90   86   89   89   91    89 #>  [4003,]   79   86   84   89   90   86   89   89   91    89 #>  [4004,]   79   85   83   88   89   85   88   88   90    88 #>  [4005,]   79   86   84   89   90   86   89   89   91    89 #>  [4006,]   79   86   84   89   90   86   89   89   91    89 #>  [4007,]   79   86   84   89   90   86   89   89   91    89 #>  [4008,]   79   85   83   88   89   85   88   88   90    88 #>  [4009,]   79   85   83   88   89   85   88   88   90    88 #>  [4010,]   79   86   84   89   90   86   89   89   91    89 #>  [4011,]   79   85   83   88   89   85   88   88   90    88 #>  [4012,]   79   86   84   89   90   86   89   89   91    89 #>  [4013,]   79   85   83   88   89   85   88   88   90    88 #>  [4014,]   79   85   83   88   89   85   88   88   90    88 #>  [4015,]   79   86   84   89   90   86   89   89   91    89 #>  [4016,]   79   86   84   89   90   86   89   89   91    89 #>  [4017,]   79   85   83   88   89   85   88   88   90    88 #>  [4018,]   79   86   84   89   90   86   89   89   91    89 #>  [4019,]   79   86   84   89   90   86   89   89   91    89 #>  [4020,]   79   86   84   89   90   86   89   89   91    89 #>  [4021,]   79   85   83   88   89   85   88   88   90    88 #>  [4022,]   79   85   83   88   89   85   88   88   90    88 #>  [4023,]   79   86   84   89   90   86   89   89   91    89 #>  [4024,]   79   86   84   89   90   86   89   89   91    89 #>  [4025,]   79   86   84   89   90   86   89   89   91    89 #>  [4026,]   79   86   84   89   90   86   89   89   91    89 #>  [4027,]   79   85   83   88   89   85   88   88   90    88 #>  [4028,]   79   86   84   89   90   86   89   89   91    89 #>  [4029,]   79   86   84   89   90   86   89   89   91    89 #>  [4030,]   79   85   83   88   89   85   88   88   90    88 #>  [4031,]   79   86   84   89   90   86   89   89   91    89 #>  [4032,]   79   86   84   89   90   86   89   89   91    89 #>  [4033,]   79   86   84   89   90   86   89   89   91    89 #>  [4034,]   79   86   84   89   90   86   89   89   91    89 #>  [4035,]   79   85   83   88   89   85   88   88   90    88 #>  [4036,]   79   86   84   89   90   86   89   89   91    89 #>  [4037,]   79   86   84   89   90   86   89   89   91    89 #>  [4038,]   79   86   84   89   90   86   89   89   91    89 #>  [4039,]   79   86   84   89   90   86   89   89   91    89 #>  [4040,]   79   86   84   89   90   86   89   89   91    89 #>  [4041,]   79   86   84   89   90   86   89   89   91    89 #>  [4042,]   79   86   84   89   90   86   89   89   91    89 #>  [4043,]   79   85   83   88   89   85   88   88   90    88 #>  [4044,]   79   85   83   88   89   85   88   88   90    88 #>  [4045,]   79   85   83   88   89   85   88   88   90    88 #>  [4046,]   79   85   83   88   89   85   88   88   90    88 #>  [4047,]   79   86   84   89   90   86   89   89   91    89 #>  [4048,]   79   86   84   89   90   86   89   89   91    89 #>  [4049,]   79   85   83   88   89   85   88   88   90    88 #>  [4050,]   79   86   84   89   90   86   89   89   91    89 #>  [4051,]   79   86   84   89   90   86   89   89   91    89 #>  [4052,]   79   85   83   88   89   85   88   88   90    88 #>  [4053,]   79   86   84   89   90   86   89   89   91    89 #>  [4054,]   79   85   83   88   89   85   88   88   90    88 #>  [4055,]   79   85   83   88   89   85   88   88   90    88 #>  [4056,]   79   86   84   89   90   86   89   89   91    89 #>  [4057,]   79   86   84   89   90   86   89   89   91    89 #>  [4058,]   79   85   83   88   89   85   88   88   90    88 #>  [4059,]   79   86   84   89   90   86   89   89   91    89 #>  [4060,]   79   86   84   89   90   86   89   89   91    89 #>  [4061,]   79   86   84   89   90   86   89   89   91    89 #>  [4062,]   79   86   84   89   90   86   89   89   91    89 #>  [4063,]   79   86   84   89   90   86   89   89   91    89 #>  [4064,]   79   86   84   89   90   86   89   89   91    89 #>  [4065,]   79   86   84   89   90   86   89   89   91    89 #>  [4066,]   79   85   83   88   89   85   88   88   90    88 #>  [4067,]   79   86   84   89   90   86   89   89   91    89 #>  [4068,]   79   85   83   88   89   85   88   88   90    88 #>  [4069,]   79   85   83   88   89   85   88   88   90    88 #>  [4070,]   79   86   84   89   90   86   89   89   91    89 #>  [4071,]   79   86   84   89   90   86   89   89   91    89 #>  [4072,]   79   86   84   89   90   86   89   89   91    89 #>  [4073,]   79   86   84   89   90   86   89   89   91    89 #>  [4074,]   79   85   83   88   89   85   88   88   90    88 #>  [4075,]   79   86   84   89   90   86   89   89   91    89 #>  [4076,]   79   86   84   89   90   86   89   89   91    89 #>  [4077,]   79   86   84   89   90   86   89   89   91    89 #>  [4078,]   79   86   84   89   90   86   89   89   91    89 #>  [4079,]   79   85   83   88   89   85   88   88   90    88 #>  [4080,]   79   85   83   88   89   85   88   88   90    88 #>  [4081,]   79   85   83   88   89   85   88   88   90    88 #>  [4082,]   79   85   83   88   89   85   88   88   90    88 #>  [4083,]   79   85   83   88   89   85   88   88   90    88 #>  [4084,]   79   86   84   89   90   86   89   89   91    89 #>  [4085,]   79   85   83   88   89   85   88   88   90    88 #>  [4086,]   79   86   84   89   90   86   89   89   91    89 #>  [4087,]   79   85   83   88   89   85   88   88   90    88 #>  [4088,]   79   85   83   88   89   85   88   88   90    88 #>  [4089,]   79   85   83   88   89   85   88   88   90    88 #>  [4090,]   79   85   83   88   89   85   88   88   90    88 #>  [4091,]   79   85   83   88   89   85   88   88   90    88 #>  [4092,]   79   85   83   88   89   85   88   88   90    88 #>  [4093,]   79   86   84   89   90   86   89   89   91    89 #>  [4094,]   79   86   84   89   90   86   89   89   91    89 #>  [4095,]   79   85   83   88   89   85   88   88   90    88 #>  [4096,]   79   85   83   88   89   85   88   88   90    88 #>  [4097,]   79   86   84   89   90   86   89   89   91    89 #>  [4098,]   79   86   84   89   90   86   89   89   91    89 #>  [4099,]   79   85   83   88   89   85   88   88   90    88 #>  [4100,]   79   86   84   89   90   86   89   89   91    89 #>  [4101,]   80   87   85   91   92   89   92   92   94    91 #>  [4102,]   81   88   85   90   91   87   90   90   92    90 #>  [4103,]   80   87   85   90   91   87   90   90   92    90 #>  [4104,]   80   87   85   91   92   88   91   91   93    91 #>  [4105,]   81   88   85   91   92   89   92   92   94    91 #>  [4106,]   80   87   85   91   92   89   92   92   94    91 #>  [4107,]   81   88   85   90   91   87   90   90   92    90 #>  [4108,]   80   87   85   91   92   88   91   91   93    91 #>  [4109,]   81   88   85   91   92   88   91   91   93    91 #>  [4110,]   81   88   85   90   91   87   90   90   92    90 #>  [4111,]   80   87   85   91   92   89   92   92   94    91 #>  [4112,]   81   88   85   91   92   89   92   92   94    91 #>  [4113,]   81   88   85   90   91   87   90   90   92    90 #>  [4114,]   80   87   85   91   92   89   92   92   94    91 #>  [4115,]   80   87   85   91   92   89   92   92   94    91 #>  [4116,]   80   87   85   90   91   87   90   90   92    90 #>  [4117,]   81   88   85   90   91   87   90   90   92    90 #>  [4118,]   81   88   85   90   91   87   90   90   92    90 #>  [4119,]   80   87   85   90   91   87   90   90   92    90 #>  [4120,]   81   88   85   91   92   89   92   92   94    91 #>  [4121,]   81   88   85   90   91   87   90   90   92    90 #>  [4122,]   81   88   85   90   91   87   90   90   92    90 #>  [4123,]   81   88   85   90   91   87   90   90   92    90 #>  [4124,]   81   88   85   90   91   87   90   90   92    90 #>  [4125,]   81   88   85   90   91   87   90   90   92    90 #>  [4126,]   80   87   85   91   92   89   92   92   94    91 #>  [4127,]   81   88   85   90   91   87   90   90   92    90 #>  [4128,]   80   87   85   91   92   89   92   92   94    91 #>  [4129,]   81   88   85   90   91   87   90   90   92    90 #>  [4130,]   81   88   85   90   91   87   90   90   92    90 #>  [4131,]   81   88   85   90   91   87   90   90   92    90 #>  [4132,]   81   88   85   90   91   87   90   90   92    90 #>  [4133,]   81   88   85   91   92   89   92   92   94    91 #>  [4134,]   80   87   85   90   91   87   90   90   92    90 #>  [4135,]   80   87   85   90   91   87   90   90   92    90 #>  [4136,]   81   88   85   90   91   87   90   90   92    90 #>  [4137,]   80   87   85   90   91   87   90   90   92    90 #>  [4138,]   80   87   85   91   92   89   92   92   94    91 #>  [4139,]   81   88   85   90   91   87   90   90   92    90 #>  [4140,]   81   88   85   90   91   87   90   90   92    90 #>  [4141,]   81   88   85   91   92   89   92   92   94    91 #>  [4142,]   80   87   85   91   92   89   92   92   94    91 #>  [4143,]   81   88   85   91   92   88   91   91   93    91 #>  [4144,]   81   88   85   90   91   87   90   90   92    90 #>  [4145,]   80   87   85   91   92   89   92   92   94    91 #>  [4146,]   80   87   85   91   92   89   92   92   94    91 #>  [4147,]   81   88   85   90   91   87   90   90   92    90 #>  [4148,]   81   88   85   90   91   87   90   90   92    90 #>  [4149,]   80   87   85   90   91   87   90   90   92    90 #>  [4150,]   81   88   85   91   92   89   92   92   94    91 #>  [4151,]   81   88   85   91   92   88   91   91   93    91 #>  [4152,]   80   87   85   91   92   89   92   92   94    91 #>  [4153,]   81   88   85   91   92   89   92   92   94    91 #>  [4154,]   81   88   85   90   91   87   90   90   92    90 #>  [4155,]   80   87   85   91   92   89   92   92   94    91 #>  [4156,]   80   87   85   91   92   89   92   92   94    91 #>  [4157,]   80   87   85   91   92   89   92   92   94    91 #>  [4158,]   81   88   85   91   92   89   92   92   94    91 #>  [4159,]   80   87   85   90   91   87   90   90   92    90 #>  [4160,]   81   88   85   91   92   88   91   91   93    91 #>  [4161,]   81   88   85   91   92   89   92   92   94    91 #>  [4162,]   80   87   85   90   91   87   90   90   92    90 #>  [4163,]   81   88   85   91   92   89   92   92   94    91 #>  [4164,]   80   87   85   91   92   89   92   92   94    91 #>  [4165,]   80   87   85   91   92   89   92   92   94    91 #>  [4166,]   81   88   85   91   92   89   92   92   94    91 #>  [4167,]   80   87   85   91   92   88   91   91   93    91 #>  [4168,]   80   87   85   91   92   89   92   92   94    91 #>  [4169,]   80   87   85   90   91   87   90   90   92    90 #>  [4170,]   81   88   85   90   91   87   90   90   92    90 #>  [4171,]   81   88   85   91   92   89   92   92   94    91 #>  [4172,]   80   87   85   91   92   89   92   92   94    91 #>  [4173,]   80   87   85   91   92   89   92   92   94    91 #>  [4174,]   81   88   85   91   92   89   92   92   94    91 #>  [4175,]   81   88   85   91   92   89   92   92   94    91 #>  [4176,]   81   88   85   91   92   89   92   92   94    91 #>  [4177,]   80   87   85   90   91   87   90   90   92    90 #>  [4178,]   81   88   85   91   92   89   92   92   94    91 #>  [4179,]   80   87   85   90   91   87   90   90   92    90 #>  [4180,]   81   88   85   90   91   87   90   90   92    90 #>  [4181,]   81   88   85   91   92   89   92   92   94    91 #>  [4182,]   80   87   85   90   91   87   90   90   92    90 #>  [4183,]   81   88   85   90   91   87   90   90   92    90 #>  [4184,]   81   88   85   91   92   89   92   92   94    91 #>  [4185,]   80   87   85   90   91   87   90   90   92    90 #>  [4186,]   81   88   85   90   91   87   90   90   92    90 #>  [4187,]   81   88   85   91   92   89   92   92   94    91 #>  [4188,]   81   88   85   91   92   89   92   92   94    91 #>  [4189,]   80   87   85   91   92   89   92   92   94    91 #>  [4190,]   81   88   85   91   92   89   92   92   94    91 #>  [4191,]   80   87   85   91   92   88   91   91   93    91 #>  [4192,]   81   88   85   91   92   89   92   92   94    91 #>  [4193,]   81   88   85   90   91   87   90   90   92    90 #>  [4194,]   80   87   85   91   92   89   92   92   94    91 #>  [4195,]   81   88   85   90   91   87   90   90   92    90 #>  [4196,]   80   87   85   91   92   89   92   92   94    91 #>  [4197,]   80   87   85   91   92   89   92   92   94    91 #>  [4198,]   80   87   85   90   91   87   90   90   92    90 #>  [4199,]   81   88   85   90   91   87   90   90   92    90 #>  [4200,]   80   87   85   90   91   87   90   90   92    90 #>  [4201,]   82   89   86   92   94   91   94   94   96    93 #>  [4202,]   83   90   87   93   93   90   93   93   95    92 #>  [4203,]   82   89   86   92   94   91   94   94   96    93 #>  [4204,]   82   89   86   92   95   91   94   94   96    93 #>  [4205,]   83   90   87   93   93   90   93   93   95    92 #>  [4206,]   82   89   86   92   94   91   94   94   96    93 #>  [4207,]   83   90   87   93   93   90   93   93   95    92 #>  [4208,]   82   89   86   92   94   91   94   94   96    93 #>  [4209,]   83   90   87   93   93   90   93   93   95    92 #>  [4210,]   83   90   87   93   93   90   93   93   95    92 #>  [4211,]   82   89   86   92   95   91   94   94   96    93 #>  [4212,]   83   90   87   93   93   90   93   93   95    92 #>  [4213,]   83   90   87   93   93   90   93   93   95    92 #>  [4214,]   82   89   86   92   95   91   94   94   96    93 #>  [4215,]   83   90   87   93   93   90   93   93   95    92 #>  [4216,]   82   89   86   92   94   91   94   94   96    93 #>  [4217,]   83   90   87   93   93   90   93   93   95    92 #>  [4218,]   83   90   87   93   93   90   93   93   95    92 #>  [4219,]   82   89   86   92   95   91   94   94   96    93 #>  [4220,]   83   90   87   93   93   90   93   93   95    92 #>  [4221,]   83   90   87   93   93   90   93   93   95    92 #>  [4222,]   83   90   87   93   93   90   93   93   95    92 #>  [4223,]   83   90   87   93   93   90   93   93   95    92 #>  [4224,]   83   90   87   93   93   90   93   93   95    92 #>  [4225,]   83   90   87   93   93   90   93   93   95    92 #>  [4226,]   82   89   86   92   95   91   94   94   96    93 #>  [4227,]   83   90   87   93   93   90   93   93   95    92 #>  [4228,]   82   89   86   92   94   91   94   94   96    93 #>  [4229,]   83   90   87   93   93   90   93   93   95    92 #>  [4230,]   83   90   87   93   93   90   93   93   95    92 #>  [4231,]   83   90   87   93   93   90   93   93   95    92 #>  [4232,]   83   90   87   93   93   90   93   93   95    92 #>  [4233,]   83   90   87   93   93   90   93   93   95    92 #>  [4234,]   82   89   86   92   94   91   94   94   96    93 #>  [4235,]   82   89   86   92   94   91   94   94   96    93 #>  [4236,]   83   90   87   93   93   90   93   93   95    92 #>  [4237,]   82   89   86   92   94   91   94   94   96    93 #>  [4238,]   82   89   86   92   95   91   94   94   96    93 #>  [4239,]   83   90   87   93   93   90   93   93   95    92 #>  [4240,]   83   90   87   93   93   90   93   93   95    92 #>  [4241,]   83   90   87   93   93   90   93   93   95    92 #>  [4242,]   82   89   86   92   95   91   94   94   96    93 #>  [4243,]   83   90   87   93   93   90   93   93   95    92 #>  [4244,]   83   90   87   93   93   90   93   93   95    92 #>  [4245,]   82   89   86   92   94   91   94   94   96    93 #>  [4246,]   83   90   87   93   93   90   93   93   95    92 #>  [4247,]   83   90   87   93   93   90   93   93   95    92 #>  [4248,]   83   90   87   93   93   90   93   93   95    92 #>  [4249,]   82   89   86   92   94   91   94   94   96    93 #>  [4250,]   83   90   87   93   93   90   93   93   95    92 #>  [4251,]   83   90   87   93   93   90   93   93   95    92 #>  [4252,]   82   89   86   92   94   91   94   94   96    93 #>  [4253,]   83   90   87   93   93   90   93   93   95    92 #>  [4254,]   83   90   87   93   93   90   93   93   95    92 #>  [4255,]   82   89   86   92   94   91   94   94   96    93 #>  [4256,]   82   89   86   92   94   91   94   94   96    93 #>  [4257,]   82   89   86   92   94   91   94   94   96    93 #>  [4258,]   83   90   87   93   93   90   93   93   95    92 #>  [4259,]   82   89   86   92   94   91   94   94   96    93 #>  [4260,]   83   90   87   93   93   90   93   93   95    92 #>  [4261,]   83   90   87   93   93   90   93   93   95    92 #>  [4262,]   82   89   86   92   95   91   94   94   96    93 #>  [4263,]   83   90   87   93   93   90   93   93   95    92 #>  [4264,]   82   89   86   92   94   91   94   94   96    93 #>  [4265,]   82   89   86   92   94   91   94   94   96    93 #>  [4266,]   83   90   87   93   93   90   93   93   95    92 #>  [4267,]   83   90   87   93   93   90   93   93   95    92 #>  [4268,]   82   89   86   92   95   91   94   94   96    93 #>  [4269,]   82   89   86   92   95   91   94   94   96    93 #>  [4270,]   83   90   87   93   93   90   93   93   95    92 #>  [4271,]   83   90   87   93   93   90   93   93   95    92 #>  [4272,]   82   89   86   92   94   91   94   94   96    93 #>  [4273,]   82   89   86   92   94   91   94   94   96    93 #>  [4274,]   83   90   87   93   93   90   93   93   95    92 #>  [4275,]   83   90   87   93   93   90   93   93   95    92 #>  [4276,]   83   90   87   93   93   90   93   93   95    92 #>  [4277,]   82   89   86   92   94   91   94   94   96    93 #>  [4278,]   83   90   87   93   93   90   93   93   95    92 #>  [4279,]   82   89   86   92   94   91   94   94   96    93 #>  [4280,]   83   90   87   93   93   90   93   93   95    92 #>  [4281,]   83   90   87   93   93   90   93   93   95    92 #>  [4282,]   82   89   86   92   95   91   94   94   96    93 #>  [4283,]   83   90   87   93   93   90   93   93   95    92 #>  [4284,]   83   90   87   93   93   90   93   93   95    92 #>  [4285,]   83   90   87   93   93   90   93   93   95    92 #>  [4286,]   83   90   87   93   93   90   93   93   95    92 #>  [4287,]   83   90   87   93   93   90   93   93   95    92 #>  [4288,]   83   90   87   93   93   90   93   93   95    92 #>  [4289,]   82   89   86   92   94   91   94   94   96    93 #>  [4290,]   83   90   87   93   93   90   93   93   95    92 #>  [4291,]   82   89   86   92   94   91   94   94   96    93 #>  [4292,]   83   90   87   93   93   90   93   93   95    92 #>  [4293,]   83   90   87   93   93   90   93   93   95    92 #>  [4294,]   82   89   86   92   94   91   94   94   96    93 #>  [4295,]   83   90   87   93   93   90   93   93   95    92 #>  [4296,]   82   89   86   92   95   91   94   94   96    93 #>  [4297,]   82   89   86   92   95   91   94   94   96    93 #>  [4298,]   83   90   87   93   93   90   93   93   95    92 #>  [4299,]   83   90   87   93   93   90   93   93   95    92 #>  [4300,]   82   89   86   92   94   91   94   94   96    93 #>  [4301,]   85   92   89   96   97   93   96   96   98    95 #>  [4302,]   85   92   89   96   97   93   96   96   98    95 #>  [4303,]   84   91   88   94   96   92   95   95   97    94 #>  [4304,]   84   91   88   94   96   92   95   95   97    94 #>  [4305,]   85   92   89   96   97   93   96   96   98    95 #>  [4306,]   85   92   89   96   97   93   96   96   98    95 #>  [4307,]   84   91   88   94   96   92   95   95   97    94 #>  [4308,]   84   91   88   94   96   92   95   95   97    94 #>  [4309,]   85   92   89   96   97   93   96   96   98    95 #>  [4310,]   85   92   89   95   97   93   96   96   98    95 #>  [4311,]   85   92   89   95   97   93   96   96   98    95 #>  [4312,]   84   91   88   94   96   92   95   95   97    94 #>  [4313,]   85   92   89   96   97   93   96   96   98    95 #>  [4314,]   85   92   89   95   97   93   96   96   98    95 #>  [4315,]   85   92   89   96   97   93   96   96   98    95 #>  [4316,]   85   92   89   96   97   93   96   96   98    95 #>  [4317,]   85   92   89   96   97   93   96   96   98    95 #>  [4318,]   85   92   89   96   97   93   96   96   98    95 #>  [4319,]   85   92   89   96   97   93   96   96   98    95 #>  [4320,]   85   92   89   96   97   93   96   96   98    95 #>  [4321,]   85   92   89   96   97   93   96   96   98    95 #>  [4322,]   85   92   89   96   97   93   96   96   98    95 #>  [4323,]   84   91   88   94   96   92   95   95   97    94 #>  [4324,]   85   92   89   96   97   93   96   96   98    95 #>  [4325,]   84   91   88   94   96   92   95   95   97    94 #>  [4326,]   85   92   89   96   97   93   96   96   98    95 #>  [4327,]   85   92   89   96   97   93   96   96   98    95 #>  [4328,]   85   92   89   96   97   93   96   96   98    95 #>  [4329,]   85   92   89   96   97   93   96   96   98    95 #>  [4330,]   85   92   89   96   97   93   96   96   98    95 #>  [4331,]   84   91   88   94   96   92   95   95   97    94 #>  [4332,]   84   91   88   94   96   92   95   95   97    94 #>  [4333,]   85   92   89   96   97   93   96   96   98    95 #>  [4334,]   85   92   89   96   97   93   96   96   98    95 #>  [4335,]   85   92   89   96   97   93   96   96   98    95 #>  [4336,]   85   92   89   96   97   93   96   96   98    95 #>  [4337,]   84   91   88   94   96   92   95   95   97    94 #>  [4338,]   85   92   89   96   97   93   96   96   98    95 #>  [4339,]   85   92   89   96   97   93   96   96   98    95 #>  [4340,]   84   91   88   94   96   92   95   95   97    94 #>  [4341,]   85   92   89   96   97   93   96   96   98    95 #>  [4342,]   85   92   89   96   97   93   96   96   98    95 #>  [4343,]   85   92   89   96   97   93   96   96   98    95 #>  [4344,]   85   92   89   96   97   93   96   96   98    95 #>  [4345,]   85   92   89   96   97   93   96   96   98    95 #>  [4346,]   84   91   88   94   96   92   95   95   97    94 #>  [4347,]   84   91   88   94   96   92   95   95   97    94 #>  [4348,]   85   92   89   95   97   93   96   96   98    95 #>  [4349,]   85   92   89   96   97   93   96   96   98    95 #>  [4350,]   85   92   89   96   97   93   96   96   98    95 #>  [4351,]   85   92   89   96   97   93   96   96   98    95 #>  [4352,]   84   91   88   94   96   92   95   95   97    94 #>  [4353,]   85   92   89   96   97   93   96   96   98    95 #>  [4354,]   85   92   89   96   97   93   96   96   98    95 #>  [4355,]   84   91   88   94   96   92   95   95   97    94 #>  [4356,]   85   92   89   96   97   93   96   96   98    95 #>  [4357,]   84   91   88   94   96   92   95   95   97    94 #>  [4358,]   85   92   89   96   97   93   96   96   98    95 #>  [4359,]   84   91   88   94   96   92   95   95   97    94 #>  [4360,]   84   91   88   94   96   92   95   95   97    94 #>  [4361,]   85   92   89   96   97   93   96   96   98    95 #>  [4362,]   85   92   89   96   97   93   96   96   98    95 #>  [4363,]   85   92   89   96   97   93   96   96   98    95 #>  [4364,]   85   92   89   96   97   93   96   96   98    95 #>  [4365,]   85   92   89   96   97   93   96   96   98    95 #>  [4366,]   85   92   89   96   97   93   96   96   98    95 #>  [4367,]   85   92   89   96   97   93   96   96   98    95 #>  [4368,]   84   91   88   94   96   92   95   95   97    94 #>  [4369,]   85   92   89   96   97   93   96   96   98    95 #>  [4370,]   85   92   89   95   97   93   96   96   98    95 #>  [4371,]   85   92   89   96   97   93   96   96   98    95 #>  [4372,]   84   91   88   94   96   92   95   95   97    94 #>  [4373,]   85   92   89   96   97   93   96   96   98    95 #>  [4374,]   84   91   88   94   96   92   95   95   97    94 #>  [4375,]   85   92   89   96   97   93   96   96   98    95 #>  [4376,]   84   91   88   94   96   92   95   95   97    94 #>  [4377,]   85   92   89   96   97   93   96   96   98    95 #>  [4378,]   85   92   89   96   97   93   96   96   98    95 #>  [4379,]   85   92   89   96   97   93   96   96   98    95 #>  [4380,]   84   91   88   94   96   92   95   95   97    94 #>  [4381,]   85   92   89   96   97   93   96   96   98    95 #>  [4382,]   85   92   89   96   97   93   96   96   98    95 #>  [4383,]   85   92   89   96   97   93   96   96   98    95 #>  [4384,]   85   92   89   96   97   93   96   96   98    95 #>  [4385,]   85   92   89   96   97   93   96   96   98    95 #>  [4386,]   84   91   88   94   96   92   95   95   97    94 #>  [4387,]   85   92   89   96   97   93   96   96   98    95 #>  [4388,]   85   92   89   96   97   93   96   96   98    95 #>  [4389,]   85   92   89   96   97   93   96   96   98    95 #>  [4390,]   85   92   89   96   97   93   96   96   98    95 #>  [4391,]   85   92   89   96   97   93   96   96   98    95 #>  [4392,]   84   91   88   94   96   92   95   95   97    94 #>  [4393,]   85   92   89   96   97   93   96   96   98    95 #>  [4394,]   85   92   89   96   97   93   96   96   98    95 #>  [4395,]   85   92   89   96   97   93   96   96   98    95 #>  [4396,]   84   91   88   94   96   92   95   95   97    94 #>  [4397,]   84   91   88   94   96   92   95   95   97    94 #>  [4398,]   84   91   88   94   96   92   95   95   97    94 #>  [4399,]   85   92   89   96   97   93   96   96   98    95 #>  [4400,]   85   92   89   96   97   93   96   96   98    95 #>  [4401,]   86   93   90   97   98   94   97   98  100    97 #>  [4402,]   87   94   91   98   99   95   97   97   99    96 #>  [4403,]   87   94   91   98   99   95   97   97   99    96 #>  [4404,]   86   93   90   97   98   94   97   98  100    97 #>  [4405,]   86   93   90   97   98   94   97   98  100    97 #>  [4406,]   87   94   91   98   99   95   97   98  100    97 #>  [4407,]   87   94   91   98   99   95   97   97   99    96 #>  [4408,]   86   93   90   97   98   94   97   98  100    97 #>  [4409,]   86   93   90   97   98   94   97   98  100    97 #>  [4410,]   87   94   91   98   99   95   97   98  100    97 #>  [4411,]   86   93   90   97   98   94   97   98  100    97 #>  [4412,]   87   94   91   98   99   95   97   98  100    97 #>  [4413,]   86   93   90   97   98   94   97   97   99    96 #>  [4414,]   86   93   90   97   98   94   97   98  100    97 #>  [4415,]   86   93   90   97   98   94   97   98  100    97 #>  [4416,]   86   93   90   97   98   94   97   97   99    96 #>  [4417,]   86   93   90   97   98   94   97   98  100    97 #>  [4418,]   87   94   91   98   99   95   97   97   99    96 #>  [4419,]   87   94   91   98   99   95   97   97   99    96 #>  [4420,]   87   94   91   98   99   95   97   98  100    97 #>  [4421,]   86   93   90   97   98   94   97   97   99    96 #>  [4422,]   86   93   90   97   98   94   97   97   99    96 #>  [4423,]   87   94   91   98   99   95   97   97   99    96 #>  [4424,]   86   93   90   97   98   94   97   97   99    96 #>  [4425,]   87   94   91   98   99   95   97   98  100    97 #>  [4426,]   86   93   90   97   98   94   97   98  100    97 #>  [4427,]   86   93   90   97   98   94   97   98  100    97 #>  [4428,]   87   94   91   98   99   95   97   98  100    97 #>  [4429,]   87   94   91   98   99   95   97   98  100    97 #>  [4430,]   86   93   90   97   98   94   97   97   99    96 #>  [4431,]   87   94   91   98   99   95   97   97   99    96 #>  [4432,]   87   94   91   98   99   95   97   98  100    97 #>  [4433,]   87   94   91   98   99   95   97   98  100    97 #>  [4434,]   87   94   91   98   99   95   97   97   99    96 #>  [4435,]   86   93   90   97   98   94   97   97   99    96 #>  [4436,]   86   93   90   97   98   94   97   97   99    96 #>  [4437,]   86   93   90   97   98   94   97   97   99    96 #>  [4438,]   86   93   90   97   98   94   97   98  100    97 #>  [4439,]   87   94   91   98   99   95   97   97   99    96 #>  [4440,]   87   94   91   98   99   95   97   97   99    96 #>  [4441,]   86   93   90   97   98   94   97   98  100    97 #>  [4442,]   87   94   91   98   99   95   97   98  100    97 #>  [4443,]   86   93   90   97   98   94   97   98  100    97 #>  [4444,]   86   93   90   97   98   94   97   97   99    96 #>  [4445,]   86   93   90   97   98   94   97   98  100    97 #>  [4446,]   86   93   90   97   98   94   97   98  100    97 #>  [4447,]   87   94   91   98   99   95   97   97   99    96 #>  [4448,]   87   94   91   98   99   95   97   98  100    97 #>  [4449,]   86   93   90   97   98   94   97   97   99    96 #>  [4450,]   87   94   91   98   99   95   97   98  100    97 #>  [4451,]   86   93   90   97   98   94   97   98  100    97 #>  [4452,]   86   93   90   97   98   94   97   98  100    97 #>  [4453,]   87   94   91   98   99   95   97   98  100    97 #>  [4454,]   86   93   90   97   98   94   97   97   99    96 #>  [4455,]   86   93   90   97   98   94   97   98  100    97 #>  [4456,]   87   94   91   98   99   95   97   98  100    97 #>  [4457,]   87   94   91   98   99   95   97   98  100    97 #>  [4458,]   86   93   90   97   98   94   97   98  100    97 #>  [4459,]   86   93   90   97   98   94   97   97   99    96 #>  [4460,]   87   94   91   98   99   95   97   98  100    97 #>  [4461,]   87   94   91   98   99   95   97   98  100    97 #>  [4462,]   86   93   90   97   98   94   97   97   99    96 #>  [4463,]   87   94   91   98   99   95   97   98  100    97 #>  [4464,]   87   94   91   98   99   95   97   98  100    97 #>  [4465,]   87   94   91   98   99   95   97   98  100    97 #>  [4466,]   86   93   90   97   98   94   97   98  100    97 #>  [4467,]   86   93   90   97   98   94   97   98  100    97 #>  [4468,]   86   93   90   97   98   94   97   98  100    97 #>  [4469,]   86   93   90   97   98   94   97   98  100    97 #>  [4470,]   87   94   91   98   99   95   97   97   99    96 #>  [4471,]   87   94   91   98   99   95   97   98  100    97 #>  [4472,]   86   93   90   97   98   94   97   98  100    97 #>  [4473,]   87   94   91   98   99   95   97   98  100    97 #>  [4474,]   86   93   90   97   98   94   97   98  100    97 #>  [4475,]   87   94   91   98   99   95   97   98  100    97 #>  [4476,]   86   93   90   97   98   94   97   98  100    97 #>  [4477,]   87   94   91   98   99   95   97   97   99    96 #>  [4478,]   87   94   91   98   99   95   97   98  100    97 #>  [4479,]   86   93   90   97   98   94   97   97   99    96 #>  [4480,]   86   93   90   97   98   94   97   97   99    96 #>  [4481,]   86   93   90   97   98   94   97   98  100    97 #>  [4482,]   86   93   90   97   98   94   97   98  100    97 #>  [4483,]   86   93   90   97   98   94   97   97   99    96 #>  [4484,]   87   94   91   98   99   95   97   98  100    97 #>  [4485,]   86   93   90   97   98   94   97   98  100    97 #>  [4486,]   87   94   91   98   99   95   97   97   99    96 #>  [4487,]   86   93   90   97   98   94   97   98  100    97 #>  [4488,]   86   93   90   97   98   94   97   98  100    97 #>  [4489,]   86   93   90   97   98   94   97   98  100    97 #>  [4490,]   86   93   90   97   98   94   97   98  100    97 #>  [4491,]   86   93   90   97   98   94   97   98  100    97 #>  [4492,]   86   93   90   97   98   94   97   98  100    97 #>  [4493,]   87   94   91   98   99   95   97   97   99    96 #>  [4494,]   87   94   91   98   99   95   97   98  100    97 #>  [4495,]   86   93   90   97   98   94   97   97   99    96 #>  [4496,]   86   93   90   97   98   94   97   98  100    97 #>  [4497,]   87   94   91   98   99   95   97   98  100    97 #>  [4498,]   87   94   91   98   99   95   97   97   99    96 #>  [4499,]   86   93   90   97   98   94   97   98  100    97 #>  [4500,]   87   94   91   98   99   95   97   97   99    96 #>  [4501,]   89   96   94  101  102   98   99  100  102    99 #>  [4502,]   89   96   94  101  102   98   99  100  102    99 #>  [4503,]   88   95   92   99  100   96  101  102  104   100 #>  [4504,]   88   95   92   99  100   96  100  101  103   100 #>  [4505,]   89   96   93  100  101   97   98   99  101    98 #>  [4506,]   89   96   94  101  102   98   99  100  102    99 #>  [4507,]   88   95   92   99  100   96  100  101  103   100 #>  [4508,]   88   95   92   99  100   96  100  101  103   100 #>  [4509,]   89   96   94  101  102   98   99  100  102    99 #>  [4510,]   89   96   94  101  102   98   99  100  102    99 #>  [4511,]   89   96   94  101  102   98   99  100  102    99 #>  [4512,]   88   95   92   99  100   96  101  102  104   100 #>  [4513,]   89   96   93  100  101   97   98   99  101    98 #>  [4514,]   89   96   94  101  102   98   99  100  102    99 #>  [4515,]   89   96   94  101  102   98   99  100  102    99 #>  [4516,]   89   96   93  100  101   97   98   99  101    98 #>  [4517,]   89   96   93  100  101   97   98   99  101    98 #>  [4518,]   89   96   94  101  102   98   99  100  102    99 #>  [4519,]   89   96   94  101  102   98   99  100  102    99 #>  [4520,]   89   96   93  100  101   97   98   99  101    98 #>  [4521,]   89   96   94  101  102   98   99  100  102    99 #>  [4522,]   89   96   93  100  101   97   98   99  101    98 #>  [4523,]   89   96   94  101  102   98   99  100  102    99 #>  [4524,]   89   96   93  100  101   97   98   99  101    98 #>  [4525,]   88   95   92   99  100   96  101  102  104   100 #>  [4526,]   89   96   94  101  102   98   99  100  102    99 #>  [4527,]   89   96   94  101  102   98   99  100  102    99 #>  [4528,]   89   96   94  101  102   98   99  100  102    99 #>  [4529,]   89   96   93  100  101   97   98   99  101    98 #>  [4530,]   89   96   94  101  102   98   99  100  102    99 #>  [4531,]   88   95   92   99  100   96  100  101  103   100 #>  [4532,]   89   96   94  101  102   98   99  100  102    99 #>  [4533,]   89   96   94  101  102   98   99  100  102    99 #>  [4534,]   89   96   94  101  102   98   99  100  102    99 #>  [4535,]   89   96   94  101  102   98   99  100  102    99 #>  [4536,]   89   96   94  101  102   98   99  100  102    99 #>  [4537,]   89   96   94  101  102   98   99  100  102    99 #>  [4538,]   89   96   94  101  102   98   99  100  102    99 #>  [4539,]   89   96   93  100  101   97   98   99  101    98 #>  [4540,]   89   96   93  100  101   97   98   99  101    98 #>  [4541,]   89   96   94  101  102   98   99  100  102    99 #>  [4542,]   89   96   94  101  102   98   99  100  102    99 #>  [4543,]   89   96   93  100  101   97   98   99  101    98 #>  [4544,]   89   96   93  100  101   97   98   99  101    98 #>  [4545,]   89   96   93  100  101   97   98   99  101    98 #>  [4546,]   89   96   93  100  101   97   98   99  101    98 #>  [4547,]   89   96   93  100  101   97   98   99  101    98 #>  [4548,]   89   96   94  101  102   98   99  100  102    99 #>  [4549,]   89   96   93  100  101   97   98   99  101    98 #>  [4550,]   89   96   93  100  101   97   98   99  101    98 #>  [4551,]   89   96   93  100  101   97   98   99  101    98 #>  [4552,]   88   95   92   99  100   96  100  101  103   100 #>  [4553,]   89   96   93  100  101   97   98   99  101    98 #>  [4554,]   89   96   93  100  101   97   98   99  101    98 #>  [4555,]   89   96   93  100  101   97   98   99  101    98 #>  [4556,]   89   96   93  100  101   97   98   99  101    98 #>  [4557,]   88   95   92   99  100   96  100  101  103   100 #>  [4558,]   89   96   94  101  102   98   99  100  102    99 #>  [4559,]   88   95   92   99  100   96  100  101  103   100 #>  [4560,]   88   95   92   99  100   96  101  102  104   100 #>  [4561,]   89   96   94  101  102   98   99  100  102    99 #>  [4562,]   89   96   94  101  102   98   99  100  102    99 #>  [4563,]   89   96   93  100  101   97   98   99  101    98 #>  [4564,]   89   96   94  101  102   98   99  100  102    99 #>  [4565,]   89   96   93  100  101   97   98   99  101    98 #>  [4566,]   89   96   93  100  101   97   98   99  101    98 #>  [4567,]   89   96   94  101  102   98   99  100  102    99 #>  [4568,]   88   95   92   99  100   96  100  101  103   100 #>  [4569,]   89   96   94  101  102   98   99  100  102    99 #>  [4570,]   89   96   93  100  101   97   98   99  101    98 #>  [4571,]   89   96   93  100  101   97   98   99  101    98 #>  [4572,]   89   96   93  100  101   97   98   99  101    98 #>  [4573,]   89   96   94  101  102   98   99  100  102    99 #>  [4574,]   89   96   94  101  102   98   99  100  102    99 #>  [4575,]   89   96   94  101  102   98   99  100  102    99 #>  [4576,]   89   96   93  100  101   97   98   99  101    98 #>  [4577,]   89   96   93  100  101   97   98   99  101    98 #>  [4578,]   89   96   93  100  101   97   98   99  101    98 #>  [4579,]   89   96   93  100  101   97   98   99  101    98 #>  [4580,]   89   96   94  101  102   98   99  100  102    99 #>  [4581,]   89   96   93  100  101   97   98   99  101    98 #>  [4582,]   89   96   94  101  102   98   99  100  102    99 #>  [4583,]   89   96   93  100  101   97   98   99  101    98 #>  [4584,]   89   96   93  100  101   97   98   99  101    98 #>  [4585,]   89   96   94  101  102   98   99  100  102    99 #>  [4586,]   88   95   92   99  100   96  100  101  103   100 #>  [4587,]   89   96   94  101  102   98   99  100  102    99 #>  [4588,]   89   96   94  101  102   98   99  100  102    99 #>  [4589,]   89   96   93  100  101   97   98   99  101    98 #>  [4590,]   89   96   93  100  101   97   98   99  101    98 #>  [4591,]   89   96   94  101  102   98   99  100  102    99 #>  [4592,]   89   96   94  101  102   98   99  100  102    99 #>  [4593,]   89   96   94  101  102   98   99  100  102    99 #>  [4594,]   89   96   93  100  101   97   98   99  101    98 #>  [4595,]   89   96   94  101  102   98   99  100  102    99 #>  [4596,]   88   95   92   99  100   96  100  101  103   100 #>  [4597,]   88   95   92   99  100   96  101  102  104   100 #>  [4598,]   89   96   93  100  101   97   98   99  101    98 #>  [4599,]   89   96   94  101  102   98   99  100  102    99 #>  [4600,]   89   96   93  100  101   97   98   99  101    98 #>  [4601,]   90   97   95  102  103   99  102  103  105   101 #>  [4602,]   90   97   95  102  103   99  102  103  105   101 #>  [4603,]   90   97   95  102  103   99  102  103  105   101 #>  [4604,]   91   99   97  103  104  100  103  104  106   102 #>  [4605,]   90   97   95  102  103   99  102  103  105   101 #>  [4606,]   91   98   96  103  104  100  103  104  106   102 #>  [4607,]   90   97   95  102  103   99  102  103  105   101 #>  [4608,]   90   97   95  102  103   99  102  103  105   101 #>  [4609,]   91   98   96  103  104  100  103  104  106   102 #>  [4610,]   91   99   97  103  104  100  103  104  106   102 #>  [4611,]   91   98   96  103  104  100  103  104  106   102 #>  [4612,]   91   98   96  103  104  100  103  104  106   102 #>  [4613,]   90   97   95  102  103   99  102  103  105   101 #>  [4614,]   91   98   96  103  104  100  103  104  106   102 #>  [4615,]   91   98   96  103  104  100  103  104  106   102 #>  [4616,]   90   97   95  102  103   99  102  103  105   101 #>  [4617,]   90   97   95  102  103   99  102  103  105   101 #>  [4618,]   91   99   97  103  104  100  103  104  106   102 #>  [4619,]   91   98   96  103  104  100  103  104  106   102 #>  [4620,]   90   97   95  102  103   99  102  103  105   101 #>  [4621,]   91   98   96  103  104  100  103  104  106   102 #>  [4622,]   90   97   95  102  103   99  102  103  105   101 #>  [4623,]   91   98   96  103  104  100  103  104  106   102 #>  [4624,]   90   97   95  102  103   99  102  103  105   101 #>  [4625,]   90   97   95  102  103   99  102  103  105   101 #>  [4626,]   91   98   96  103  104  100  103  104  106   102 #>  [4627,]   91   98   96  103  104  100  103  104  106   102 #>  [4628,]   90   97   95  102  103   99  102  103  105   101 #>  [4629,]   90   97   95  102  103   99  102  103  105   101 #>  [4630,]   91   98   96  103  104  100  103  104  106   102 #>  [4631,]   91   98   96  103  104  100  103  104  106   102 #>  [4632,]   91   98   96  103  104  100  103  104  106   102 #>  [4633,]   91   98   96  103  104  100  103  104  106   102 #>  [4634,]   91   98   96  103  104  100  103  104  106   102 #>  [4635,]   90   97   95  102  103   99  102  103  105   101 #>  [4636,]   91   98   96  103  104  100  103  104  106   102 #>  [4637,]   90   97   95  102  103   99  102  103  105   101 #>  [4638,]   91   98   96  103  104  100  103  104  106   102 #>  [4639,]   90   97   95  102  103   99  102  103  105   101 #>  [4640,]   90   97   95  102  103   99  102  103  105   101 #>  [4641,]   91   98   96  103  104  100  103  104  106   102 #>  [4642,]   91   98   96  103  104  100  103  104  106   102 #>  [4643,]   90   97   95  102  103   99  102  103  105   101 #>  [4644,]   90   97   95  102  103   99  102  103  105   101 #>  [4645,]   90   97   95  102  103   99  102  103  105   101 #>  [4646,]   90   97   95  102  103   99  102  103  105   101 #>  [4647,]   90   97   95  102  103   99  102  103  105   101 #>  [4648,]   91   98   96  103  104  100  103  104  106   102 #>  [4649,]   90   97   95  102  103   99  102  103  105   101 #>  [4650,]   90   97   95  102  103   99  102  103  105   101 #>  [4651,]   90   97   95  102  103   99  102  103  105   101 #>  [4652,]   91   98   96  103  104  100  103  104  106   102 #>  [4653,]   90   97   95  102  103   99  102  103  105   101 #>  [4654,]   90   97   95  102  103   99  102  103  105   101 #>  [4655,]   90   97   95  102  103   99  102  103  105   101 #>  [4656,]   90   97   95  102  103   99  102  103  105   101 #>  [4657,]   90   97   95  102  103   99  102  103  105   101 #>  [4658,]   91   98   96  103  104  100  103  104  106   102 #>  [4659,]   90   97   95  102  103   99  102  103  105   101 #>  [4660,]   91   98   96  103  104  100  103  104  106   102 #>  [4661,]   91   98   96  103  104  100  103  104  106   102 #>  [4662,]   91   98   96  103  104  100  103  104  106   102 #>  [4663,]   90   97   95  102  103   99  102  103  105   101 #>  [4664,]   91   98   96  103  104  100  103  104  106   102 #>  [4665,]   90   97   95  102  103   99  102  103  105   101 #>  [4666,]   90   97   95  102  103   99  102  103  105   101 #>  [4667,]   91   98   96  103  104  100  103  104  106   102 #>  [4668,]   91   98   96  103  104  100  103  104  106   102 #>  [4669,]   91   98   96  103  104  100  103  104  106   102 #>  [4670,]   90   97   95  102  103   99  102  103  105   101 #>  [4671,]   90   97   95  102  103   99  102  103  105   101 #>  [4672,]   90   97   95  102  103   99  102  103  105   101 #>  [4673,]   91   99   97  103  104  100  103  104  106   102 #>  [4674,]   91   99   97  103  104  100  103  104  106   102 #>  [4675,]   91   99   97  103  104  100  103  104  106   102 #>  [4676,]   90   97   95  102  103   99  102  103  105   101 #>  [4677,]   90   97   95  102  103   99  102  103  105   101 #>  [4678,]   90   97   95  102  103   99  102  103  105   101 #>  [4679,]   90   97   95  102  103   99  102  103  105   101 #>  [4680,]   91   98   96  103  104  100  103  104  106   102 #>  [4681,]   90   97   95  102  103   99  102  103  105   101 #>  [4682,]   91   98   96  103  104  100  103  104  106   102 #>  [4683,]   90   97   95  102  103   99  102  103  105   101 #>  [4684,]   90   97   95  102  103   99  102  103  105   101 #>  [4685,]   91   98   96  103  104  100  103  104  106   102 #>  [4686,]   90   97   95  102  103   99  102  103  105   101 #>  [4687,]   90   97   95  102  103   99  102  103  105   101 #>  [4688,]   90   97   95  102  103   99  102  103  105   101 #>  [4689,]   90   97   95  102  103   99  102  103  105   101 #>  [4690,]   90   97   95  102  103   99  102  103  105   101 #>  [4691,]   90   97   95  102  103   99  102  103  105   101 #>  [4692,]   91   98   96  103  104  100  103  104  106   102 #>  [4693,]   91   98   96  103  104  100  103  104  106   102 #>  [4694,]   90   97   95  102  103   99  102  103  105   101 #>  [4695,]   90   97   95  102  103   99  102  103  105   101 #>  [4696,]   91   98   96  103  104  100  103  104  106   102 #>  [4697,]   91   98   96  103  104  100  103  104  106   102 #>  [4698,]   90   97   95  102  103   99  102  103  105   101 #>  [4699,]   91   98   96  103  104  100  103  104  106   102 #>  [4700,]   90   97   95  102  103   99  102  103  105   101 #>  [4701,]   92  100   98  104  106  101  105  106  108   104 #>  [4702,]   92  100   98  104  105  101  104  105  107   103 #>  [4703,]   92  100   98  104  105  101  104  105  107   103 #>  [4704,]   92  100   98  104  106  101  104  105  107   103 #>  [4705,]   93  101   99  104  106  101  105  106  108   104 #>  [4706,]   92  100   98  104  106  101  104  105  107   103 #>  [4707,]   92  100   98  104  105  101  104  105  107   103 #>  [4708,]   92  100   98  104  106  101  104  105  107   103 #>  [4709,]   92  100   98  104  106  101  104  105  107   103 #>  [4710,]   92  100   98  104  105  101  105  106  108   104 #>  [4711,]   92  100   98  104  106  101  105  106  108   104 #>  [4712,]   92  100   98  104  106  101  105  106  108   104 #>  [4713,]   92  100   98  104  105  101  104  105  107   103 #>  [4714,]   92  100   98  104  106  101  105  106  108   104 #>  [4715,]   92  100   98  104  106  101  105  106  108   104 #>  [4716,]   92  100   98  104  105  101  105  106  108   104 #>  [4717,]   92  100   98  104  105  101  105  106  108   104 #>  [4718,]   93  101   99  104  105  101  105  106  108   104 #>  [4719,]   92  100   98  104  105  101  105  106  108   104 #>  [4720,]   92  100   98  104  106  101  104  105  107   103 #>  [4721,]   92  100   98  104  105  101  104  105  107   103 #>  [4722,]   92  100   98  104  105  101  105  106  108   104 #>  [4723,]   92  100   98  104  105  101  104  105  107   103 #>  [4724,]   92  100   98  104  105  101  105  106  108   104 #>  [4725,]   92  100   98  104  105  101  104  105  107   103 #>  [4726,]   92  100   98  104  106  101  105  106  108   104 #>  [4727,]   92  100   98  104  106  101  105  106  108   104 #>  [4728,]   92  100   98  104  106  101  104  105  107   103 #>  [4729,]   92  100   98  104  105  101  104  105  107   103 #>  [4730,]   92  100   98  104  105  101  104  105  107   103 #>  [4731,]   92  100   98  104  105  101  105  106  108   104 #>  [4732,]   92  100   98  104  105  101  105  106  108   104 #>  [4733,]   92  100   98  104  106  101  104  105  107   103 #>  [4734,]   92  100   98  104  105  101  104  105  107   103 #>  [4735,]   92  100   98  104  105  101  104  105  107   103 #>  [4736,]   92  100   98  104  105  101  104  105  107   103 #>  [4737,]   92  100   98  104  105  101  104  105  107   103 #>  [4738,]   92  100   98  104  106  101  105  106  108   104 #>  [4739,]   92  100   98  104  105  101  105  106  108   104 #>  [4740,]   92  100   98  104  105  101  104  105  107   103 #>  [4741,]   92  100   98  104  106  101  104  105  107   103 #>  [4742,]   92  100   98  104  106  101  104  105  107   103 #>  [4743,]   92  100   98  104  106  101  105  106  108   104 #>  [4744,]   92  100   98  104  105  101  104  105  107   103 #>  [4745,]   92  100   98  104  106  101  104  105  107   103 #>  [4746,]   92  100   98  104  106  101  104  105  107   103 #>  [4747,]   92  100   98  104  105  101  105  106  108   104 #>  [4748,]   92  100   98  104  105  101  104  105  107   103 #>  [4749,]   92  100   98  104  105  101  104  105  107   103 #>  [4750,]   92  100   98  104  106  101  104  105  107   103 #>  [4751,]   92  100   98  104  106  101  105  106  108   104 #>  [4752,]   92  100   98  104  106  101  105  106  108   104 #>  [4753,]   92  100   98  104  106  101  104  105  107   103 #>  [4754,]   92  100   98  104  105  101  104  105  107   103 #>  [4755,]   92  100   98  104  106  101  104  105  107   103 #>  [4756,]   92  100   98  104  106  101  104  105  107   103 #>  [4757,]   92  100   98  104  106  101  104  105  107   103 #>  [4758,]   92  100   98  104  106  101  105  106  108   104 #>  [4759,]   92  100   98  104  105  101  105  106  108   104 #>  [4760,]   92  100   98  104  106  101  104  105  107   103 #>  [4761,]   92  100   98  104  106  101  105  106  108   104 #>  [4762,]   92  100   98  104  105  101  104  105  107   103 #>  [4763,]   92  100   98  104  106  101  104  105  107   103 #>  [4764,]   92  100   98  104  106  101  104  105  107   103 #>  [4765,]   92  100   98  104  106  101  104  105  107   103 #>  [4766,]   92  100   98  104  106  101  105  106  108   104 #>  [4767,]   92  100   98  104  106  101  104  105  107   103 #>  [4768,]   92  100   98  104  106  101  105  106  108   104 #>  [4769,]   92  100   98  104  106  101  104  105  107   103 #>  [4770,]   92  100   98  104  105  101  105  106  108   104 #>  [4771,]   93  101   99  104  106  101  105  106  108   104 #>  [4772,]   92  100   98  104  106  101  104  105  107   103 #>  [4773,]   92  100   98  104  106  101  104  105  107   103 #>  [4774,]   92  100   98  104  106  101  104  105  107   103 #>  [4775,]   93  101   99  104  106  101  105  106  108   104 #>  [4776,]   92  100   98  104  106  101  104  105  107   103 #>  [4777,]   92  100   98  104  105  101  105  106  108   104 #>  [4778,]   92  100   98  104  106  101  104  105  107   103 #>  [4779,]   92  100   98  104  105  101  105  106  108   104 #>  [4780,]   92  100   98  104  105  101  104  105  107   103 #>  [4781,]   92  100   98  104  106  101  104  105  107   103 #>  [4782,]   92  100   98  104  106  101  104  105  107   103 #>  [4783,]   92  100   98  104  105  101  105  106  108   104 #>  [4784,]   92  100   98  104  106  101  104  105  107   103 #>  [4785,]   92  100   98  104  105  101  104  105  107   103 #>  [4786,]   92  100   98  104  105  101  104  105  107   103 #>  [4787,]   92  100   98  104  106  101  105  106  108   104 #>  [4788,]   92  100   98  104  106  101  104  105  107   103 #>  [4789,]   92  100   98  104  106  101  104  105  107   103 #>  [4790,]   92  100   98  104  106  101  105  106  108   104 #>  [4791,]   92  100   98  104  106  101  105  106  108   104 #>  [4792,]   92  100   98  104  106  101  105  106  108   104 #>  [4793,]   92  100   98  104  105  101  104  105  107   103 #>  [4794,]   92  100   98  104  106  101  104  105  107   103 #>  [4795,]   93  101   99  104  105  101  105  106  108   104 #>  [4796,]   92  100   98  104  106  101  105  106  108   104 #>  [4797,]   92  100   98  104  106  101  104  105  107   103 #>  [4798,]   92  100   98  104  105  101  104  105  107   103 #>  [4799,]   92  100   98  104  106  101  104  105  107   103 #>  [4800,]   93  101   99  104  105  101  105  106  108   104 #>  [4801,]   94  102  100  105  107  102  106  107  109   105 #>  [4802,]   94  102  100  106  108  103  106  107  109   105 #>  [4803,]   94  102  100  106  108  103  106  107  109   105 #>  [4804,]   95  103  100  105  107  102  106  107  109   105 #>  [4805,]   94  102  100  105  107  102  106  107  109   105 #>  [4806,]   94  102  100  106  108  103  106  107  109   105 #>  [4807,]   95  103  100  106  108  103  106  107  109   105 #>  [4808,]   94  102  100  105  107  102  106  107  109   105 #>  [4809,]   94  102  100  105  107  102  106  107  109   105 #>  [4810,]   95  103  100  106  108  103  106  107  109   105 #>  [4811,]   94  102  100  105  107  102  106  107  109   105 #>  [4812,]   94  102  100  106  108  103  106  107  109   105 #>  [4813,]   94  102  100  105  107  102  106  107  109   105 #>  [4814,]   94  102  100  105  107  102  106  107  109   105 #>  [4815,]   95  103  100  105  107  102  106  108  111   107 #>  [4816,]   95  103  100  105  107  102  106  107  109   105 #>  [4817,]   94  102  100  105  107  102  106  107  109   105 #>  [4818,]   95  103  100  106  108  103  106  107  109   105 #>  [4819,]   94  102  100  106  108  103  106  108  111   107 #>  [4820,]   94  102  100  106  108  103  106  108  110   106 #>  [4821,]   95  103  100  105  107  102  106  107  109   105 #>  [4822,]   94  102  100  105  107  102  106  108  110   106 #>  [4823,]   95  103  100  106  108  103  106  107  109   105 #>  [4824,]   94  102  100  105  107  102  106  107  109   105 #>  [4825,]   95  103  100  106  108  103  106  107  109   105 #>  [4826,]   94  102  100  105  107  102  106  107  109   105 #>  [4827,]   95  103  100  105  107  102  106  108  111   107 #>  [4828,]   94  102  100  106  108  103  106  107  109   105 #>  [4829,]   94  102  100  106  108  103  106  108  110   106 #>  [4830,]   94  102  100  105  107  102  106  107  109   105 #>  [4831,]   94  102  100  106  108  103  106  107  109   105 #>  [4832,]   94  102  100  106  108  103  106  107  109   105 #>  [4833,]   94  102  100  106  108  103  106  107  109   105 #>  [4834,]   94  102  100  106  108  103  106  107  109   105 #>  [4835,]   94  102  100  105  107  102  106  107  109   105 #>  [4836,]   94  102  100  105  107  102  106  108  111   107 #>  [4837,]   94  102  100  105  107  102  106  107  109   105 #>  [4838,]   94  102  100  105  107  102  106  107  109   105 #>  [4839,]   95  103  100  106  108  103  106  107  109   105 #>  [4840,]   94  102  100  106  108  103  106  107  109   105 #>  [4841,]   94  102  100  105  107  102  106  107  109   105 #>  [4842,]   94  102  100  106  108  103  106  107  109   105 #>  [4843,]   95  103  100  105  107  102  106  107  109   105 #>  [4844,]   94  102  100  105  107  102  106  107  109   105 #>  [4845,]   95  103  100  105  107  102  106  107  109   105 #>  [4846,]   94  102  100  105  107  102  106  107  109   105 #>  [4847,]   94  102  100  106  108  103  106  107  109   105 #>  [4848,]   94  102  100  106  108  103  106  107  109   105 #>  [4849,]   94  102  100  105  107  102  106  107  109   105 #>  [4850,]   94  102  100  106  108  103  106  107  109   105 #>  [4851,]   94  102  100  105  107  102  106  107  109   105 #>  [4852,]   94  102  100  105  107  102  106  107  109   105 #>  [4853,]   95  103  100  106  108  103  106  107  109   105 #>  [4854,]   94  102  100  105  107  102  106  107  109   105 #>  [4855,]   94  102  100  105  107  102  106  108  110   106 #>  [4856,]   94  102  100  106  108  103  106  107  109   105 #>  [4857,]   94  102  100  106  108  103  106  107  109   105 #>  [4858,]   94  102  100  105  107  102  106  108  111   107 #>  [4859,]   94  102  100  105  107  102  106  107  109   105 #>  [4860,]   94  102  100  106  108  103  106  107  109   105 #>  [4861,]   95  103  100  106  108  103  106  107  109   105 #>  [4862,]   94  102  100  105  107  102  106  107  109   105 #>  [4863,]   94  102  100  106  108  103  106  107  109   105 #>  [4864,]   94  102  100  106  108  103  106  108  110   106 #>  [4865,]   94  102  100  106  108  103  106  107  109   105 #>  [4866,]   94  102  100  105  107  102  106  108  110   106 #>  [4867,]   94  102  100  105  107  102  106  107  109   105 #>  [4868,]   94  102  100  105  107  102  106  107  109   105 #>  [4869,]   94  102  100  105  107  102  106  107  109   105 #>  [4870,]   94  102  100  106  108  103  106  107  109   105 #>  [4871,]   94  102  100  106  108  103  106  107  109   105 #>  [4872,]   95  103  100  106  108  103  106  107  109   105 #>  [4873,]   95  103  100  106  108  103  106  107  109   105 #>  [4874,]   95  103  100  105  107  102  106  107  109   105 #>  [4875,]   95  103  100  106  108  103  106  107  109   105 #>  [4876,]   95  103  100  105  107  102  106  107  109   105 #>  [4877,]   95  103  100  106  108  103  106  108  110   106 #>  [4878,]   94  102  100  106  108  103  106  107  109   105 #>  [4879,]   94  102  100  105  107  102  106  107  109   105 #>  [4880,]   94  102  100  105  107  102  106  107  109   105 #>  [4881,]   94  102  100  105  107  102  106  108  110   106 #>  [4882,]   94  102  100  105  107  102  106  107  109   105 #>  [4883,]   94  102  100  105  107  102  106  108  110   106 #>  [4884,]   95  103  100  106  108  103  106  107  109   105 #>  [4885,]   94  102  100  105  107  102  106  107  109   105 #>  [4886,]   94  102  100  106  108  103  106  107  109   105 #>  [4887,]   94  102  100  105  107  102  106  108  110   106 #>  [4888,]   94  102  100  105  107  102  106  107  109   105 #>  [4889,]   94  102  100  105  107  102  106  107  109   105 #>  [4890,]   94  102  100  105  107  102  106  107  109   105 #>  [4891,]   94  102  100  105  107  102  106  107  109   105 #>  [4892,]   94  102  100  105  107  102  106  107  109   105 #>  [4893,]   94  102  100  106  108  103  106  107  109   105 #>  [4894,]   95  103  100  106  108  103  106  107  109   105 #>  [4895,]   95  103  100  105  107  102  106  107  109   105 #>  [4896,]   94  102  100  105  107  102  106  107  109   105 #>  [4897,]   94  102  100  106  108  103  106  108  111   107 #>  [4898,]   94  102  100  106  108  103  106  107  109   105 #>  [4899,]   94  102  100  105  107  102  106  107  109   105 #>  [4900,]   95  103  100  106  108  103  106  108  110   106 #>  [4901,]   97  105  102  108  110  105  108  110  113   108 #>  [4902,]   97  105  102  108  110  105  108  110  113   108 #>  [4903,]   96  104  101  107  109  104  107  109  112   109 #>  [4904,]   96  104  101  107  109  104  107  109  112   110 #>  [4905,]   96  104  101  107  109  104  107  109  112   110 #>  [4906,]   96  104  101  107  109  104  107  109  112   110 #>  [4907,]   96  104  101  107  109  104  107  109  112   109 #>  [4908,]   97  105  102  108  110  105  108  110  113   108 #>  [4909,]   96  104  101  107  109  104  107  109  112   110 #>  [4910,]   96  104  101  107  109  104  107  109  112   110 #>  [4911,]   96  104  101  107  109  104  107  109  112   110 #>  [4912,]   97  105  102  108  110  105  108  110  113   108 #>  [4913,]   97  105  102  108  110  105  108  110  113   108 #>  [4914,]   96  104  101  107  109  104  107  109  112   110 #>  [4915,]   97  105  102  108  110  105  108  110  113   108 #>  [4916,]   97  105  102  108  110  105  108  110  113   108 #>  [4917,]   96  104  101  107  109  104  107  109  112   110 #>  [4918,]   96  104  101  107  109  104  107  109  112   110 #>  [4919,]   97  105  102  108  110  105  108  110  113   108 #>  [4920,]   97  105  102  108  110  105  108  110  113   108 #>  [4921,]   96  104  101  107  109  104  107  109  112   110 #>  [4922,]   97  105  102  108  110  105  108  110  113   108 #>  [4923,]   97  105  102  108  110  105  108  110  113   108 #>  [4924,]   96  104  101  107  109  104  107  109  112   109 #>  [4925,]   96  104  101  107  109  104  107  109  112   109 #>  [4926,]   97  105  102  108  110  105  108  110  113   108 #>  [4927,]   97  105  102  108  110  105  108  110  113   108 #>  [4928,]   96  104  101  107  109  104  107  109  112   110 #>  [4929,]   97  105  102  108  110  105  108  110  113   108 #>  [4930,]   97  105  102  108  110  105  108  110  113   108 #>  [4931,]   96  104  101  107  109  104  107  109  112   110 #>  [4932,]   96  104  101  107  109  104  107  109  112   110 #>  [4933,]   97  105  102  108  110  105  108  110  113   108 #>  [4934,]   96  104  101  107  109  104  107  109  112   110 #>  [4935,]   96  104  101  107  109  104  107  109  112   110 #>  [4936,]   97  105  102  108  110  105  108  110  113   108 #>  [4937,]   97  105  102  108  110  105  108  110  113   108 #>  [4938,]   97  105  102  108  110  105  108  110  113   108 #>  [4939,]   96  104  101  107  109  104  107  109  112   109 #>  [4940,]   96  104  101  107  109  104  107  109  112   109 #>  [4941,]   97  105  102  108  110  105  108  110  113   108 #>  [4942,]   96  104  101  107  109  104  107  109  112   110 #>  [4943,]   97  105  102  108  110  105  108  110  113   108 #>  [4944,]   97  105  102  108  110  105  108  110  113   108 #>  [4945,]   97  105  102  108  110  105  108  110  113   108 #>  [4946,]   97  105  102  108  110  105  108  110  113   108 #>  [4947,]   96  104  101  107  109  104  107  109  112   110 #>  [4948,]   96  104  101  107  109  104  107  109  112   110 #>  [4949,]   96  104  101  107  109  104  107  109  112   109 #>  [4950,]   97  105  102  108  110  105  108  110  113   108 #>  [4951,]   97  105  102  108  110  105  108  110  113   108 #>  [4952,]   96  104  101  107  109  104  107  109  112   110 #>  [4953,]   97  105  102  108  110  105  108  110  113   108 #>  [4954,]   96  104  101  107  109  104  107  109  112   109 #>  [4955,]   97  105  102  108  110  105  108  110  113   108 #>  [4956,]   97  105  102  108  110  105  108  110  113   108 #>  [4957,]   96  104  101  107  109  104  107  109  112   110 #>  [4958,]   97  105  102  108  110  105  108  110  113   108 #>  [4959,]   97  105  102  108  110  105  108  110  113   108 #>  [4960,]   97  105  102  108  110  105  108  110  113   108 #>  [4961,]   97  105  102  108  110  105  108  110  113   108 #>  [4962,]   96  104  101  107  109  104  107  109  112   110 #>  [4963,]   97  105  102  108  110  105  108  110  113   108 #>  [4964,]   97  105  102  108  110  105  108  110  113   108 #>  [4965,]   96  104  101  107  109  104  107  109  112   109 #>  [4966,]   97  105  102  108  110  105  108  110  113   108 #>  [4967,]   96  104  101  107  109  104  107  109  112   110 #>  [4968,]   97  105  102  108  110  105  108  110  113   108 #>  [4969,]   97  105  102  108  110  105  108  110  113   108 #>  [4970,]   96  104  101  107  109  104  107  109  112   109 #>  [4971,]   97  105  102  108  110  105  108  110  113   108 #>  [4972,]   96  104  101  107  109  104  107  109  112   109 #>  [4973,]   96  104  101  107  109  104  107  109  112   110 #>  [4974,]   96  104  101  107  109  104  107  109  112   110 #>  [4975,]   97  105  102  108  110  105  108  110  113   108 #>  [4976,]   96  104  101  107  109  104  107  109  112   110 #>  [4977,]   97  105  102  108  110  105  108  110  113   108 #>  [4978,]   97  105  102  108  110  105  108  110  113   108 #>  [4979,]   96  104  101  107  109  104  107  109  112   110 #>  [4980,]   97  105  102  108  110  105  108  110  113   108 #>  [4981,]   97  105  102  108  110  105  108  110  113   108 #>  [4982,]   96  104  101  107  109  104  107  109  112   110 #>  [4983,]   97  105  102  108  110  105  108  110  113   108 #>  [4984,]   97  105  102  108  110  105  108  110  113   108 #>  [4985,]   97  105  102  108  110  105  108  110  113   108 #>  [4986,]   96  104  101  107  109  104  107  109  112   109 #>  [4987,]   97  105  102  108  110  105  108  110  113   108 #>  [4988,]   96  104  101  107  109  104  107  109  112   110 #>  [4989,]   96  104  101  107  109  104  107  109  112   109 #>  [4990,]   97  105  102  108  110  105  108  110  113   108 #>  [4991,]   96  104  101  107  109  104  107  109  112   110 #>  [4992,]   96  104  101  107  109  104  107  109  112   110 #>  [4993,]   97  105  102  108  110  105  108  110  113   108 #>  [4994,]   96  104  101  107  109  104  107  109  112   110 #>  [4995,]   97  105  102  108  110  105  108  110  113   108 #>  [4996,]   97  105  102  108  110  105  108  110  113   108 #>  [4997,]   97  105  102  108  110  105  108  110  113   108 #>  [4998,]   96  104  101  107  109  104  107  109  112   109 #>  [4999,]   96  104  101  107  109  104  107  109  112   110 #>  [5000,]   97  105  102  108  110  105  108  110  113   108 #>  [5001,]   98  106  103  109  111  106  109  111  114   111 #>  [5002,]   99  107  104  110  112  107  110  112  115   112 #>  [5003,]   98  106  103  109  111  106  109  111  114   111 #>  [5004,]   98  106  103  109  111  106  109  111  114   111 #>  [5005,]   98  106  103  109  111  106  109  111  114   111 #>  [5006,]   98  106  103  109  111  106  109  111  114   111 #>  [5007,]   98  106  103  109  111  106  109  111  114   111 #>  [5008,]   98  106  103  109  111  106  109  111  114   111 #>  [5009,]   98  106  103  109  111  106  109  111  114   111 #>  [5010,]   99  107  104  110  112  107  110  112  115   112 #>  [5011,]   98  106  103  109  111  106  109  111  114   111 #>  [5012,]   99  107  104  110  112  107  110  112  115   112 #>  [5013,]   98  106  103  109  111  106  109  111  114   111 #>  [5014,]   98  106  103  109  111  106  109  111  114   111 #>  [5015,]   98  106  103  109  111  106  109  111  114   111 #>  [5016,]   98  106  103  109  111  106  109  111  114   111 #>  [5017,]   98  106  103  109  111  106  109  111  114   111 #>  [5018,]   98  106  103  109  111  106  109  111  114   111 #>  [5019,]   98  106  103  109  111  106  109  111  114   111 #>  [5020,]   98  106  103  109  111  106  109  111  114   111 #>  [5021,]   99  107  104  110  112  107  110  112  115   112 #>  [5022,]   98  106  103  109  111  106  109  111  114   111 #>  [5023,]   98  106  103  109  111  106  109  111  114   111 #>  [5024,]   98  106  103  109  111  106  109  111  114   111 #>  [5025,]   98  106  103  109  111  106  109  111  114   111 #>  [5026,]   98  106  103  109  111  106  109  111  114   111 #>  [5027,]   98  106  103  109  111  106  109  111  114   111 #>  [5028,]   98  106  103  109  111  106  109  111  114   111 #>  [5029,]   98  106  103  109  111  106  109  111  114   111 #>  [5030,]   98  106  103  109  111  106  109  111  114   111 #>  [5031,]   98  106  103  109  111  106  109  111  114   111 #>  [5032,]   98  106  103  109  111  106  109  111  114   111 #>  [5033,]   98  106  103  109  111  106  109  111  114   111 #>  [5034,]   98  106  103  109  111  106  109  111  114   111 #>  [5035,]   98  106  103  109  111  106  109  111  114   111 #>  [5036,]   98  106  103  109  111  106  109  111  114   111 #>  [5037,]   98  106  103  109  111  106  109  111  114   111 #>  [5038,]   98  106  103  109  111  106  109  111  114   111 #>  [5039,]   98  106  103  109  111  106  109  111  114   111 #>  [5040,]   98  106  103  109  111  106  109  111  114   111 #>  [5041,]   98  106  103  109  111  106  109  111  114   111 #>  [5042,]   98  106  103  109  111  106  109  111  114   111 #>  [5043,]   98  106  103  109  111  106  109  111  114   111 #>  [5044,]   98  106  103  109  111  106  109  111  114   111 #>  [5045,]   98  106  103  109  111  106  109  111  114   111 #>  [5046,]   98  106  103  109  111  106  109  111  114   111 #>  [5047,]   98  106  103  109  111  106  109  111  114   111 #>  [5048,]   98  106  103  109  111  106  109  111  114   111 #>  [5049,]   98  106  103  109  111  106  109  111  114   111 #>  [5050,]   98  106  103  109  111  106  109  111  114   111 #>  [5051,]   98  106  103  109  111  106  109  111  114   111 #>  [5052,]   98  106  103  109  111  106  109  111  114   111 #>  [5053,]   98  106  103  109  111  106  109  111  114   111 #>  [5054,]   98  106  103  109  111  106  109  111  114   111 #>  [5055,]   98  106  103  109  111  106  109  111  114   111 #>  [5056,]   98  106  103  109  111  106  109  111  114   111 #>  [5057,]   98  106  103  109  111  106  109  111  114   111 #>  [5058,]   98  106  103  109  111  106  109  111  114   111 #>  [5059,]   98  106  103  109  111  106  109  111  114   111 #>  [5060,]   98  106  103  109  111  106  109  111  114   111 #>  [5061,]   98  106  103  109  111  106  109  111  114   111 #>  [5062,]   98  106  103  109  111  106  109  111  114   111 #>  [5063,]   98  106  103  109  111  106  109  111  114   111 #>  [5064,]   98  106  103  109  111  106  109  111  114   111 #>  [5065,]   98  106  103  109  111  106  109  111  114   111 #>  [5066,]   98  106  103  109  111  106  109  111  114   111 #>  [5067,]   98  106  103  109  111  106  109  111  114   111 #>  [5068,]   98  106  103  109  111  106  109  111  114   111 #>  [5069,]   98  106  103  109  111  106  109  111  114   111 #>  [5070,]   98  106  103  109  111  106  109  111  114   111 #>  [5071,]   98  106  103  109  111  106  109  111  114   111 #>  [5072,]   98  106  103  109  111  106  109  111  114   111 #>  [5073,]   98  106  103  109  111  106  109  111  114   111 #>  [5074,]   98  106  103  109  111  106  109  111  114   111 #>  [5075,]   98  106  103  109  111  106  109  111  114   111 #>  [5076,]   98  106  103  109  111  106  109  111  114   111 #>  [5077,]   98  106  103  109  111  106  109  111  114   111 #>  [5078,]   98  106  103  109  111  106  109  111  114   111 #>  [5079,]   98  106  103  109  111  106  109  111  114   111 #>  [5080,]   98  106  103  109  111  106  109  111  114   111 #>  [5081,]   98  106  103  109  111  106  109  111  114   111 #>  [5082,]   98  106  103  109  111  106  109  111  114   111 #>  [5083,]   98  106  103  109  111  106  109  111  114   111 #>  [5084,]   98  106  103  109  111  106  109  111  114   111 #>  [5085,]   98  106  103  109  111  106  109  111  114   111 #>  [5086,]   99  107  104  110  112  107  110  112  115   112 #>  [5087,]   98  106  103  109  111  106  109  111  114   111 #>  [5088,]   98  106  103  109  111  106  109  111  114   111 #>  [5089,]   98  106  103  109  111  106  109  111  114   111 #>  [5090,]   98  106  103  109  111  106  109  111  114   111 #>  [5091,]   98  106  103  109  111  106  109  111  114   111 #>  [5092,]   98  106  103  109  111  106  109  111  114   111 #>  [5093,]   98  106  103  109  111  106  109  111  114   111 #>  [5094,]   98  106  103  109  111  106  109  111  114   111 #>  [5095,]   98  106  103  109  111  106  109  111  114   111 #>  [5096,]   98  106  103  109  111  106  109  111  114   111 #>  [5097,]   98  106  103  109  111  106  109  111  114   111 #>  [5098,]   98  106  103  109  111  106  109  111  114   111 #>  [5099,]   98  106  103  109  111  106  109  111  114   111 #>  [5100,]   98  106  103  109  111  106  109  111  114   111 #>  [5101,]  100  109  106  112  114  109  111  113  116   113 #>  [5102,]  100  108  105  111  113  108  114  116  119   116 #>  [5103,]  100  108  105  111  113  108  113  115  118   115 #>  [5104,]  100  109  106  112  114  109  111  113  116   113 #>  [5105,]  100  109  106  112  114  109  111  113  116   113 #>  [5106,]  100  109  106  112  114  110  112  114  117   114 #>  [5107,]  100  108  105  111  113  108  114  116  119   116 #>  [5108,]  100  109  106  112  114  109  111  113  116   113 #>  [5109,]  100  109  106  112  114  109  111  113  116   113 #>  [5110,]  100  109  106  112  114  109  111  113  116   113 #>  [5111,]  100  109  106  112  114  109  111  113  116   113 #>  [5112,]  100  109  106  112  114  109  111  113  116   113 #>  [5113,]  100  108  105  111  113  108  114  116  119   116 #>  [5114,]  100  109  106  112  114  109  111  113  116   113 #>  [5115,]  100  109  106  112  114  109  111  113  116   113 #>  [5116,]  100  108  105  111  113  108  113  115  118   115 #>  [5117,]  100  109  106  112  114  109  111  113  116   113 #>  [5118,]  100  108  105  111  113  108  114  116  119   116 #>  [5119,]  100  108  105  111  113  108  113  115  118   115 #>  [5120,]  100  109  106  112  114  109  111  113  116   113 #>  [5121,]  100  108  105  111  113  108  114  116  119   116 #>  [5122,]  100  108  105  111  113  108  114  116  119   116 #>  [5123,]  100  108  105  111  113  108  114  116  119   116 #>  [5124,]  100  108  105  111  113  108  114  116  119   116 #>  [5125,]  100  109  106  112  114  110  112  114  117   114 #>  [5126,]  100  109  106  112  114  109  111  113  116   113 #>  [5127,]  100  109  106  112  114  109  111  113  116   113 #>  [5128,]  100  109  106  112  114  109  111  113  116   113 #>  [5129,]  100  109  106  112  114  109  111  113  116   113 #>  [5130,]  100  108  105  111  113  108  114  116  119   116 #>  [5131,]  100  108  105  111  113  108  114  116  119   116 #>  [5132,]  100  108  105  111  113  108  114  116  119   116 #>  [5133,]  100  109  106  112  114  109  111  113  116   113 #>  [5134,]  100  108  105  111  113  108  113  115  118   115 #>  [5135,]  100  108  105  111  113  108  113  115  118   115 #>  [5136,]  100  108  105  111  113  108  114  116  119   116 #>  [5137,]  100  108  105  111  113  108  113  115  118   115 #>  [5138,]  100  109  106  112  114  109  111  113  116   113 #>  [5139,]  100  108  105  111  113  108  113  115  118   115 #>  [5140,]  100  108  105  111  113  108  114  116  119   116 #>  [5141,]  100  109  106  112  114  109  111  113  116   113 #>  [5142,]  100  109  106  112  114  109  111  113  116   113 #>  [5143,]  100  109  106  112  114  109  111  113  116   113 #>  [5144,]  100  108  105  111  113  108  114  116  119   116 #>  [5145,]  100  109  106  112  114  109  111  113  116   113 #>  [5146,]  100  109  106  112  114  109  111  113  116   113 #>  [5147,]  100  108  105  111  113  108  114  116  119   116 #>  [5148,]  100  109  106  112  114  109  111  113  116   113 #>  [5149,]  100  108  105  111  113  108  113  115  118   115 #>  [5150,]  100  109  106  112  114  109  111  113  116   113 #>  [5151,]  100  109  106  112  114  109  111  113  116   113 #>  [5152,]  100  109  106  112  114  109  111  113  116   113 #>  [5153,]  100  109  106  112  114  109  111  113  116   113 #>  [5154,]  100  108  105  111  113  108  114  116  119   116 #>  [5155,]  100  109  106  112  114  109  111  113  116   113 #>  [5156,]  100  109  106  112  114  109  111  113  116   113 #>  [5157,]  100  109  106  112  114  109  111  113  116   113 #>  [5158,]  100  109  106  112  114  109  111  113  116   113 #>  [5159,]  100  108  105  111  113  108  113  115  118   115 #>  [5160,]  100  109  106  112  114  110  112  114  117   114 #>  [5161,]  100  109  106  112  114  109  111  113  116   113 #>  [5162,]  100  108  105  111  113  108  113  115  118   115 #>  [5163,]  100  109  106  112  114  109  111  113  116   113 #>  [5164,]  100  109  106  112  114  109  111  113  116   113 #>  [5165,]  100  109  106  112  114  110  112  114  117   114 #>  [5166,]  100  109  106  112  114  109  111  113  116   113 #>  [5167,]  100  109  106  112  114  109  111  113  116   113 #>  [5168,]  100  109  106  112  114  109  111  113  116   113 #>  [5169,]  100  109  106  112  114  109  111  113  116   113 #>  [5170,]  100  108  105  111  113  108  114  116  119   116 #>  [5171,]  100  109  106  112  114  109  111  113  116   113 #>  [5172,]  100  109  106  112  114  109  111  113  116   113 #>  [5173,]  100  109  106  112  114  110  112  114  117   114 #>  [5174,]  100  109  106  112  114  109  111  113  116   113 #>  [5175,]  100  109  106  112  114  109  111  113  116   113 #>  [5176,]  100  109  106  112  114  109  111  113  116   113 #>  [5177,]  100  108  105  111  113  108  113  115  118   115 #>  [5178,]  100  109  106  112  114  109  111  113  116   113 #>  [5179,]  100  108  105  111  113  108  113  115  118   115 #>  [5180,]  100  108  105  111  113  108  114  116  119   116 #>  [5181,]  100  109  106  112  114  109  111  113  116   113 #>  [5182,]  100  109  106  112  114  109  111  113  116   113 #>  [5183,]  100  108  105  111  113  108  114  116  119   116 #>  [5184,]  100  109  106  112  114  109  111  113  116   113 #>  [5185,]  100  109  106  112  114  109  111  113  116   113 #>  [5186,]  100  108  105  111  113  108  114  116  119   116 #>  [5187,]  100  109  106  112  114  109  111  113  116   113 #>  [5188,]  100  109  106  112  114  109  111  113  116   113 #>  [5189,]  100  109  106  112  114  109  111  113  116   113 #>  [5190,]  100  109  106  112  114  109  111  113  116   113 #>  [5191,]  100  109  106  112  114  109  111  113  116   113 #>  [5192,]  100  109  106  112  114  109  111  113  116   113 #>  [5193,]  100  108  105  111  113  108  114  116  119   116 #>  [5194,]  100  109  106  112  114  109  111  113  116   113 #>  [5195,]  100  108  105  111  113  108  114  116  119   116 #>  [5196,]  100  109  106  112  114  109  111  113  116   113 #>  [5197,]  100  109  106  112  114  109  111  113  116   113 #>  [5198,]  100  108  105  111  113  108  113  115  118   115 #>  [5199,]  100  109  106  112  114  109  111  113  116   113 #>  [5200,]  100  108  105  111  113  108  113  115  118   115 #>  [5201,]  102  111  108  114  116  111  116  118  121   118 #>  [5202,]  102  111  108  114  116  111  115  117  120   117 #>  [5203,]  102  111  108  114  116  111  116  118  121   118 #>  [5204,]  102  111  108  114  116  111  116  118  121   118 #>  [5205,]  102  111  108  114  116  111  116  118  121   118 #>  [5206,]  102  111  108  114  116  111  115  117  120   117 #>  [5207,]  101  110  107  113  115  111  116  118  121   118 #>  [5208,]  102  111  108  114  116  111  116  118  121   118 #>  [5209,]  102  111  108  114  116  111  116  118  121   118 #>  [5210,]  102  111  108  114  116  111  116  118  121   118 #>  [5211,]  102  111  108  114  116  111  115  117  120   117 #>  [5212,]  102  111  108  114  116  111  115  117  120   117 #>  [5213,]  102  111  108  114  116  111  116  118  121   118 #>  [5214,]  102  111  108  114  116  111  116  118  121   118 #>  [5215,]  102  111  108  114  116  111  115  117  120   117 #>  [5216,]  102  111  108  114  116  111  116  118  121   118 #>  [5217,]  102  111  108  114  116  111  115  117  120   117 #>  [5218,]  102  111  108  114  116  111  115  117  120   117 #>  [5219,]  102  111  108  114  116  111  115  117  120   117 #>  [5220,]  102  111  108  114  116  111  116  118  121   118 #>  [5221,]  101  110  107  113  115  111  115  117  120   117 #>  [5222,]  102  111  108  114  116  111  116  118  121   118 #>  [5223,]  102  111  108  114  116  111  115  117  120   117 #>  [5224,]  102  111  108  114  116  111  116  118  121   118 #>  [5225,]  102  111  108  114  116  111  116  118  121   118 #>  [5226,]  102  111  108  114  116  111  115  117  120   117 #>  [5227,]  102  111  108  114  116  111  116  118  121   118 #>  [5228,]  102  111  108  114  116  111  116  118  121   118 #>  [5229,]  102  111  108  114  116  111  115  117  120   117 #>  [5230,]  102  111  108  114  116  111  115  117  120   117 #>  [5231,]  102  111  108  114  116  111  115  117  120   117 #>  [5232,]  102  111  108  114  116  111  115  117  120   117 #>  [5233,]  102  111  108  114  116  111  116  118  121   118 #>  [5234,]  102  111  108  114  116  111  115  117  120   117 #>  [5235,]  102  111  108  114  116  111  115  117  120   117 #>  [5236,]  102  111  108  114  116  111  116  118  121   118 #>  [5237,]  102  111  108  114  116  111  115  117  120   117 #>  [5238,]  102  111  108  114  116  111  116  118  121   118 #>  [5239,]  101  110  107  113  115  111  116  118  121   118 #>  [5240,]  102  111  108  114  116  111  116  118  121   118 #>  [5241,]  102  111  108  114  116  111  116  118  121   118 #>  [5242,]  102  111  108  114  116  111  115  117  120   117 #>  [5243,]  102  111  108  114  116  111  115  117  120   117 #>  [5244,]  102  111  108  114  116  111  115  117  120   117 #>  [5245,]  102  111  108  114  116  111  116  118  121   118 #>  [5246,]  102  111  108  114  116  111  115  117  120   117 #>  [5247,]  102  111  108  114  116  111  115  117  120   117 #>  [5248,]  102  111  108  114  116  111  115  117  120   117 #>  [5249,]  101  110  107  113  115  111  116  118  121   118 #>  [5250,]  102  111  108  114  116  111  116  118  121   118 #>  [5251,]  102  111  108  114  116  111  115  117  120   117 #>  [5252,]  102  111  108  114  116  111  116  118  121   118 #>  [5253,]  102  111  108  114  116  111  116  118  121   118 #>  [5254,]  102  111  108  114  116  111  116  118  121   118 #>  [5255,]  102  111  108  114  116  111  116  118  121   118 #>  [5256,]  102  111  108  114  116  111  115  117  120   117 #>  [5257,]  102  111  108  114  116  111  116  118  121   118 #>  [5258,]  102  111  108  114  116  111  116  118  121   118 #>  [5259,]  102  111  108  114  116  111  116  118  121   118 #>  [5260,]  102  111  108  114  116  111  115  117  120   117 #>  [5261,]  102  111  108  114  116  111  115  117  120   117 #>  [5262,]  101  110  107  113  115  111  115  117  120   117 #>  [5263,]  102  111  108  114  116  111  115  117  120   117 #>  [5264,]  102  111  108  114  116  111  115  117  120   117 #>  [5265,]  102  111  108  114  116  111  115  117  120   117 #>  [5266,]  102  111  108  114  116  111  115  117  120   117 #>  [5267,]  102  111  108  114  116  111  116  118  121   118 #>  [5268,]  102  111  108  114  116  111  115  117  120   117 #>  [5269,]  102  111  108  114  116  111  115  117  120   117 #>  [5270,]  101  110  107  113  115  111  115  117  120   117 #>  [5271,]  102  111  108  114  116  111  116  118  121   118 #>  [5272,]  102  111  108  114  116  111  116  118  121   118 #>  [5273,]  102  111  108  114  116  111  116  118  121   118 #>  [5274,]  102  111  108  114  116  111  116  118  121   118 #>  [5275,]  102  111  108  114  116  111  115  117  120   117 #>  [5276,]  102  111  108  114  116  111  116  118  121   118 #>  [5277,]  102  111  108  114  116  111  116  118  121   118 #>  [5278,]  102  111  108  114  116  111  115  117  120   117 #>  [5279,]  102  111  108  114  116  111  115  117  120   117 #>  [5280,]  101  110  107  113  115  111  116  118  121   118 #>  [5281,]  102  111  108  114  116  111  115  117  120   117 #>  [5282,]  102  111  108  114  116  111  115  117  120   117 #>  [5283,]  102  111  108  114  116  111  116  118  121   118 #>  [5284,]  102  111  108  114  116  111  116  118  121   118 #>  [5285,]  102  111  108  114  116  111  116  118  121   118 #>  [5286,]  102  111  108  114  116  111  116  118  121   118 #>  [5287,]  102  111  108  114  116  111  116  118  121   118 #>  [5288,]  102  111  108  114  116  111  116  118  121   118 #>  [5289,]  102  111  108  114  116  111  115  117  120   117 #>  [5290,]  102  111  108  114  116  111  116  118  121   118 #>  [5291,]  102  111  108  114  116  111  116  118  121   118 #>  [5292,]  102  111  108  114  116  111  115  117  120   117 #>  [5293,]  102  111  108  114  116  111  115  117  120   117 #>  [5294,]  102  111  108  114  116  111  115  117  120   117 #>  [5295,]  101  110  107  113  115  111  115  117  120   117 #>  [5296,]  102  111  108  114  116  111  115  117  120   117 #>  [5297,]  102  111  108  114  116  111  115  117  120   117 #>  [5298,]  102  111  108  114  116  111  116  118  121   118 #>  [5299,]  102  111  108  114  116  111  116  118  121   118 #>  [5300,]  102  111  108  114  116  111  115  117  120   117 #>  [5301,]  103  112  109  115  117  112  117  119  122   119 #>  [5302,]  103  112  109  115  117  112  117  119  122   119 #>  [5303,]  103  112  109  115  117  112  117  119  122   119 #>  [5304,]  104  113  110  116  118  113  118  120  123   120 #>  [5305,]  103  112  109  115  117  112  117  119  122   119 #>  [5306,]  103  112  109  115  117  112  117  119  122   119 #>  [5307,]  103  112  109  115  117  112  117  119  122   119 #>  [5308,]  103  112  109  115  117  112  117  119  122   119 #>  [5309,]  103  112  109  115  117  112  117  119  122   119 #>  [5310,]  103  112  109  115  117  112  117  119  122   119 #>  [5311,]  103  112  109  115  117  112  117  119  122   119 #>  [5312,]  104  113  110  116  118  113  118  120  123   120 #>  [5313,]  103  112  109  115  117  112  117  119  122   119 #>  [5314,]  104  113  110  116  118  113  118  120  123   120 #>  [5315,]  104  113  110  116  118  113  118  120  123   120 #>  [5316,]  103  112  109  115  117  112  117  119  122   119 #>  [5317,]  103  112  109  115  117  112  117  119  122   119 #>  [5318,]  103  112  109  115  117  112  117  119  122   119 #>  [5319,]  104  113  110  116  118  113  118  120  123   120 #>  [5320,]  103  112  109  115  117  112  117  119  122   119 #>  [5321,]  104  113  110  116  118  113  118  120  123   120 #>  [5322,]  103  112  109  115  117  112  117  119  122   119 #>  [5323,]  103  112  109  115  117  112  117  119  122   119 #>  [5324,]  103  112  109  115  117  112  117  119  122   119 #>  [5325,]  103  112  109  115  117  112  117  119  122   119 #>  [5326,]  103  112  109  115  117  112  117  119  122   119 #>  [5327,]  104  113  110  116  118  113  118  120  123   120 #>  [5328,]  103  112  109  115  117  112  117  119  122   119 #>  [5329,]  103  112  109  115  117  112  117  119  122   119 #>  [5330,]  103  112  109  115  117  112  117  119  122   119 #>  [5331,]  103  112  109  115  117  112  117  119  122   119 #>  [5332,]  103  112  109  115  117  112  117  119  122   119 #>  [5333,]  103  112  109  115  117  112  117  119  122   119 #>  [5334,]  103  112  109  115  117  112  117  119  122   119 #>  [5335,]  103  112  109  115  117  112  117  119  122   119 #>  [5336,]  103  112  109  115  117  112  117  119  122   119 #>  [5337,]  103  112  109  115  117  112  117  119  122   119 #>  [5338,]  104  113  110  116  118  113  118  120  123   120 #>  [5339,]  103  112  109  115  117  112  117  119  122   119 #>  [5340,]  103  112  109  115  117  112  117  119  122   119 #>  [5341,]  104  113  110  116  118  113  118  120  123   120 #>  [5342,]  104  113  110  116  118  113  118  120  123   120 #>  [5343,]  103  112  109  115  117  112  117  119  122   119 #>  [5344,]  103  112  109  115  117  112  117  119  122   119 #>  [5345,]  103  112  109  115  117  112  117  119  122   119 #>  [5346,]  103  112  109  115  117  112  117  119  122   119 #>  [5347,]  103  112  109  115  117  112  117  119  122   119 #>  [5348,]  104  113  110  116  118  113  118  120  123   120 #>  [5349,]  103  112  109  115  117  112  117  119  122   119 #>  [5350,]  103  112  109  115  117  112  117  119  122   119 #>  [5351,]  103  112  109  115  117  112  117  119  122   119 #>  [5352,]  103  112  109  115  117  112  117  119  122   119 #>  [5353,]  103  112  109  115  117  112  117  119  122   119 #>  [5354,]  103  112  109  115  117  112  117  119  122   119 #>  [5355,]  103  112  109  115  117  112  117  119  122   119 #>  [5356,]  103  112  109  115  117  112  117  119  122   119 #>  [5357,]  103  112  109  115  117  112  117  119  122   119 #>  [5358,]  103  112  109  115  117  112  117  119  122   119 #>  [5359,]  103  112  109  115  117  112  117  119  122   119 #>  [5360,]  103  112  109  115  117  112  117  119  122   119 #>  [5361,]  104  113  110  116  118  113  118  120  123   120 #>  [5362,]  103  112  109  115  117  112  117  119  122   119 #>  [5363,]  103  112  109  115  117  112  117  119  122   119 #>  [5364,]  103  112  109  115  117  112  117  119  122   119 #>  [5365,]  103  112  109  115  117  112  117  119  122   119 #>  [5366,]  103  112  109  115  117  112  117  119  122   119 #>  [5367,]  103  112  109  115  117  112  117  119  122   119 #>  [5368,]  103  112  109  115  117  112  117  119  122   119 #>  [5369,]  104  113  110  116  118  113  118  120  123   120 #>  [5370,]  103  112  109  115  117  112  117  119  122   119 #>  [5371,]  103  112  109  115  117  112  117  119  122   119 #>  [5372,]  103  112  109  115  117  112  117  119  122   119 #>  [5373,]  103  112  109  115  117  112  117  119  122   119 #>  [5374,]  104  113  110  116  118  113  118  120  123   120 #>  [5375,]  104  113  110  116  118  113  118  120  123   120 #>  [5376,]  103  112  109  115  117  112  117  119  122   119 #>  [5377,]  103  112  109  115  117  112  117  119  122   119 #>  [5378,]  103  112  109  115  117  112  117  119  122   119 #>  [5379,]  103  112  109  115  117  112  117  119  122   119 #>  [5380,]  103  112  109  115  117  112  117  119  122   119 #>  [5381,]  103  112  109  115  117  112  117  119  122   119 #>  [5382,]  104  113  110  116  118  113  118  120  123   120 #>  [5383,]  103  112  109  115  117  112  117  119  122   119 #>  [5384,]  103  112  109  115  117  112  117  119  122   119 #>  [5385,]  103  112  109  115  117  112  117  119  122   119 #>  [5386,]  103  112  109  115  117  112  117  119  122   119 #>  [5387,]  103  112  109  115  117  112  117  119  122   119 #>  [5388,]  103  112  109  115  117  112  117  119  122   119 #>  [5389,]  103  112  109  115  117  112  117  119  122   119 #>  [5390,]  103  112  109  115  117  112  117  119  122   119 #>  [5391,]  103  112  109  115  117  112  117  119  122   119 #>  [5392,]  104  113  110  116  118  113  118  120  123   120 #>  [5393,]  104  113  110  116  118  113  118  120  123   120 #>  [5394,]  103  112  109  115  117  112  117  119  122   119 #>  [5395,]  103  112  109  115  117  112  117  119  122   119 #>  [5396,]  104  113  110  116  118  113  118  120  123   120 #>  [5397,]  104  113  110  116  118  113  118  120  123   120 #>  [5398,]  103  112  109  115  117  112  117  119  122   119 #>  [5399,]  103  112  109  115  117  112  117  119  122   119 #>  [5400,]  103  112  109  115  117  112  117  119  122   119 #>  [5401,]  106  115  112  118  120  115  120  122  125   122 #>  [5402,]  106  115  112  118  120  115  120  122  125   122 #>  [5403,]  105  114  111  117  119  114  119  121  124   121 #>  [5404,]  106  115  113  118  120  115  120  122  125   122 #>  [5405,]  106  115  112  118  120  115  120  122  125   122 #>  [5406,]  106  115  112  118  120  115  120  122  125   122 #>  [5407,]  106  115  112  118  120  115  120  122  125   122 #>  [5408,]  106  115  112  118  120  115  120  122  125   122 #>  [5409,]  106  115  113  118  120  115  120  122  125   122 #>  [5410,]  105  114  111  117  119  114  119  121  124   121 #>  [5411,]  105  114  111  117  119  114  119  121  124   121 #>  [5412,]  106  115  113  118  120  115  120  122  125   122 #>  [5413,]  106  115  112  118  120  115  120  122  125   122 #>  [5414,]  105  114  111  117  119  114  119  121  124   121 #>  [5415,]  106  115  113  118  120  115  120  122  125   122 #>  [5416,]  106  115  112  118  120  115  120  122  125   122 #>  [5417,]  106  115  112  118  120  115  120  122  125   122 #>  [5418,]  106  115  112  118  120  115  120  122  125   122 #>  [5419,]  106  115  113  118  120  115  120  122  125   122 #>  [5420,]  106  115  112  118  120  115  120  122  125   122 #>  [5421,]  105  114  111  117  119  114  119  121  124   121 #>  [5422,]  106  115  112  118  120  115  120  122  125   122 #>  [5423,]  106  115  112  118  120  115  120  122  125   122 #>  [5424,]  106  115  112  118  120  115  120  122  125   122 #>  [5425,]  106  115  112  118  120  115  120  122  125   122 #>  [5426,]  106  115  112  118  120  115  120  122  125   122 #>  [5427,]  106  115  113  118  120  115  120  122  125   122 #>  [5428,]  105  114  111  117  119  114  119  121  124   121 #>  [5429,]  106  115  112  118  120  115  120  122  125   122 #>  [5430,]  106  115  112  118  120  115  120  122  125   122 #>  [5431,]  105  114  111  117  119  114  119  121  124   121 #>  [5432,]  105  114  111  117  119  114  119  121  124   121 #>  [5433,]  106  115  113  118  120  115  120  122  125   122 #>  [5434,]  105  114  111  117  119  114  119  121  124   121 #>  [5435,]  105  114  111  117  119  114  119  121  124   121 #>  [5436,]  106  115  113  118  120  115  120  122  125   122 #>  [5437,]  106  115  112  118  120  115  120  122  125   122 #>  [5438,]  106  115  113  118  120  115  120  122  125   122 #>  [5439,]  106  115  112  118  120  115  120  122  125   122 #>  [5440,]  105  114  111  117  119  114  119  121  124   121 #>  [5441,]  106  115  113  118  120  115  120  122  125   122 #>  [5442,]  106  115  113  118  120  115  120  122  125   122 #>  [5443,]  106  115  112  118  120  115  120  122  125   122 #>  [5444,]  106  115  112  118  120  115  120  122  125   122 #>  [5445,]  106  115  112  118  120  115  120  122  125   122 #>  [5446,]  106  115  112  118  120  115  120  122  125   122 #>  [5447,]  106  115  112  118  120  115  120  122  125   122 #>  [5448,]  105  114  111  117  119  114  119  121  124   121 #>  [5449,]  106  115  112  118  120  115  120  122  125   122 #>  [5450,]  106  115  112  118  120  115  120  122  125   122 #>  [5451,]  106  115  112  118  120  115  120  122  125   122 #>  [5452,]  106  115  112  118  120  115  120  122  125   122 #>  [5453,]  106  115  112  118  120  115  120  122  125   122 #>  [5454,]  106  115  112  118  120  115  120  122  125   122 #>  [5455,]  106  115  112  118  120  115  120  122  125   122 #>  [5456,]  106  115  112  118  120  115  120  122  125   122 #>  [5457,]  106  115  112  118  120  115  120  122  125   122 #>  [5458,]  106  115  113  118  120  115  120  122  125   122 #>  [5459,]  106  115  112  118  120  115  120  122  125   122 #>  [5460,]  106  115  112  118  120  115  120  122  125   122 #>  [5461,]  106  115  113  118  120  115  120  122  125   122 #>  [5462,]  106  115  112  118  120  115  120  122  125   122 #>  [5463,]  106  115  112  118  120  115  120  122  125   122 #>  [5464,]  106  115  112  118  120  115  120  122  125   122 #>  [5465,]  106  115  112  118  120  115  120  122  125   122 #>  [5466,]  106  115  112  118  120  115  120  122  125   122 #>  [5467,]  106  115  112  118  120  115  120  122  125   122 #>  [5468,]  106  115  113  118  120  115  120  122  125   122 #>  [5469,]  106  115  113  118  120  115  120  122  125   122 #>  [5470,]  105  114  111  117  119  114  119  121  124   121 #>  [5471,]  106  115  112  118  120  115  120  122  125   122 #>  [5472,]  106  115  112  118  120  115  120  122  125   122 #>  [5473,]  106  115  112  118  120  115  120  122  125   122 #>  [5474,]  105  114  111  117  119  114  119  121  124   121 #>  [5475,]  106  115  113  118  120  115  120  122  125   122 #>  [5476,]  106  115  112  118  120  115  120  122  125   122 #>  [5477,]  106  115  112  118  120  115  120  122  125   122 #>  [5478,]  106  115  112  118  120  115  120  122  125   122 #>  [5479,]  106  115  112  118  120  115  120  122  125   122 #>  [5480,]  106  115  112  118  120  115  120  122  125   122 #>  [5481,]  106  115  112  118  120  115  120  122  125   122 #>  [5482,]  105  114  111  117  119  114  119  121  124   121 #>  [5483,]  106  115  112  118  120  115  120  122  125   122 #>  [5484,]  106  115  112  118  120  115  120  122  125   122 #>  [5485,]  106  115  113  118  120  115  120  122  125   122 #>  [5486,]  106  115  112  118  120  115  120  122  125   122 #>  [5487,]  106  115  112  118  120  115  120  122  125   122 #>  [5488,]  106  115  112  118  120  115  120  122  125   122 #>  [5489,]  106  115  112  118  120  115  120  122  125   122 #>  [5490,]  106  115  112  118  120  115  120  122  125   122 #>  [5491,]  106  115  112  118  120  115  120  122  125   122 #>  [5492,]  106  115  113  118  120  115  120  122  125   122 #>  [5493,]  106  115  113  118  120  115  120  122  125   122 #>  [5494,]  106  115  112  118  120  115  120  122  125   122 #>  [5495,]  106  115  112  118  120  115  120  122  125   122 #>  [5496,]  106  115  113  118  120  115  120  122  125   122 #>  [5497,]  106  115  113  118  120  115  120  122  125   122 #>  [5498,]  105  114  111  117  119  114  119  121  124   121 #>  [5499,]  106  115  112  118  120  115  120  122  125   122 #>  [5500,]  106  115  112  118  120  115  120  122  125   122 #>  [5501,]  107  116  114  120  122  117  122  124  127   124 #>  [5502,]  107  116  114  120  122  117  122  124  127   124 #>  [5503,]  107  116  114  120  122  117  122  124  127   124 #>  [5504,]  107  116  114  119  121  116  121  123  126   123 #>  [5505,]  108  117  114  120  122  117  122  124  127   124 #>  [5506,]  107  116  114  120  122  117  122  124  127   124 #>  [5507,]  107  116  114  120  122  117  122  124  127   124 #>  [5508,]  107  116  114  119  121  116  121  123  126   123 #>  [5509,]  107  116  114  119  121  116  121  123  126   123 #>  [5510,]  107  116  114  119  121  116  121  123  126   123 #>  [5511,]  107  116  114  120  122  117  122  124  127   124 #>  [5512,]  107  116  114  120  122  117  122  124  127   124 #>  [5513,]  107  116  114  120  122  117  122  124  127   124 #>  [5514,]  107  116  114  120  122  117  122  124  127   124 #>  [5515,]  107  116  114  120  122  117  122  124  127   124 #>  [5516,]  107  116  114  120  122  117  122  124  127   124 #>  [5517,]  107  116  114  120  122  117  122  124  127   124 #>  [5518,]  108  117  114  120  122  117  122  124  127   124 #>  [5519,]  107  116  114  120  122  117  122  124  127   124 #>  [5520,]  107  116  114  119  121  116  121  123  126   123 #>  [5521,]  107  116  114  120  122  117  122  124  127   124 #>  [5522,]  107  116  114  120  122  117  122  124  127   124 #>  [5523,]  107  116  114  120  122  117  122  124  127   124 #>  [5524,]  107  116  114  120  122  117  122  124  127   124 #>  [5525,]  107  116  114  120  122  117  122  124  127   124 #>  [5526,]  107  116  114  120  122  117  122  124  127   124 #>  [5527,]  107  116  114  120  122  117  122  124  127   124 #>  [5528,]  107  116  114  120  122  117  122  124  127   124 #>  [5529,]  107  116  114  120  122  117  122  124  127   124 #>  [5530,]  107  116  114  119  121  116  121  123  126   123 #>  [5531,]  107  116  114  120  122  117  122  124  127   124 #>  [5532,]  107  116  114  120  122  117  122  124  127   124 #>  [5533,]  107  116  114  120  122  117  122  124  127   124 #>  [5534,]  107  116  114  120  122  117  122  124  127   124 #>  [5535,]  107  116  114  120  122  117  122  124  127   124 #>  [5536,]  107  116  114  120  122  117  122  124  127   124 #>  [5537,]  107  116  114  120  122  117  122  124  127   124 #>  [5538,]  107  116  114  120  122  117  122  124  127   124 #>  [5539,]  107  116  114  120  122  117  122  124  127   124 #>  [5540,]  107  116  114  120  122  117  122  124  127   124 #>  [5541,]  107  116  114  120  122  117  122  124  127   124 #>  [5542,]  107  116  114  120  122  117  122  124  127   124 #>  [5543,]  107  116  114  119  121  116  121  123  126   123 #>  [5544,]  107  116  114  120  122  117  122  124  127   124 #>  [5545,]  107  116  114  120  122  117  122  124  127   124 #>  [5546,]  107  116  114  120  122  117  122  124  127   124 #>  [5547,]  107  116  114  120  122  117  122  124  127   124 #>  [5548,]  107  116  114  120  122  117  122  124  127   124 #>  [5549,]  107  116  114  120  122  117  122  124  127   124 #>  [5550,]  107  116  114  120  122  117  122  124  127   124 #>  [5551,]  107  116  114  119  121  116  121  123  126   123 #>  [5552,]  107  116  114  120  122  117  122  124  127   124 #>  [5553,]  107  116  114  120  122  117  122  124  127   124 #>  [5554,]  107  116  114  120  122  117  122  124  127   124 #>  [5555,]  107  116  114  120  122  117  122  124  127   124 #>  [5556,]  107  116  114  119  121  116  121  123  126   123 #>  [5557,]  107  116  114  120  122  117  122  124  127   124 #>  [5558,]  107  116  114  120  122  117  122  124  127   124 #>  [5559,]  107  116  114  120  122  117  122  124  127   124 #>  [5560,]  107  116  114  119  121  116  121  123  126   123 #>  [5561,]  107  116  114  120  122  117  122  124  127   124 #>  [5562,]  107  116  114  120  122  117  122  124  127   124 #>  [5563,]  107  116  114  120  122  117  122  124  127   124 #>  [5564,]  107  116  114  119  121  116  121  123  126   123 #>  [5565,]  107  116  114  120  122  117  122  124  127   124 #>  [5566,]  107  116  114  120  122  117  122  124  127   124 #>  [5567,]  107  116  114  119  121  116  121  123  126   123 #>  [5568,]  107  116  114  120  122  117  122  124  127   124 #>  [5569,]  107  116  114  120  122  117  122  124  127   124 #>  [5570,]  107  116  114  120  122  117  122  124  127   124 #>  [5571,]  108  117  114  120  122  117  122  124  127   124 #>  [5572,]  107  116  114  120  122  117  122  124  127   124 #>  [5573,]  107  116  114  120  122  117  122  124  127   124 #>  [5574,]  107  116  114  120  122  117  122  124  127   124 #>  [5575,]  108  117  114  120  122  117  122  124  127   124 #>  [5576,]  107  116  114  120  122  117  122  124  127   124 #>  [5577,]  107  116  114  120  122  117  122  124  127   124 #>  [5578,]  107  116  114  119  121  116  121  123  126   123 #>  [5579,]  107  116  114  120  122  117  122  124  127   124 #>  [5580,]  107  116  114  120  122  117  122  124  127   124 #>  [5581,]  107  116  114  120  122  117  122  124  127   124 #>  [5582,]  107  116  114  120  122  117  122  124  127   124 #>  [5583,]  107  116  114  120  122  117  122  124  127   124 #>  [5584,]  107  116  114  120  122  117  122  124  127   124 #>  [5585,]  107  116  114  119  121  116  121  123  126   123 #>  [5586,]  107  116  114  120  122  117  122  124  127   124 #>  [5587,]  107  116  114  120  122  117  122  124  127   124 #>  [5588,]  107  116  114  120  122  117  122  124  127   124 #>  [5589,]  107  116  114  119  121  116  121  123  126   123 #>  [5590,]  107  116  114  120  122  117  122  124  127   124 #>  [5591,]  107  116  114  119  121  116  121  123  126   123 #>  [5592,]  107  116  114  120  122  117  122  124  127   124 #>  [5593,]  107  116  114  120  122  117  122  124  127   124 #>  [5594,]  107  116  114  120  122  117  122  124  127   124 #>  [5595,]  107  116  114  119  121  116  121  123  126   123 #>  [5596,]  107  116  114  120  122  117  122  124  127   124 #>  [5597,]  107  116  114  120  122  117  122  124  127   124 #>  [5598,]  107  116  114  120  122  117  122  124  127   124 #>  [5599,]  107  116  114  120  122  117  122  124  127   124 #>  [5600,]  108  117  114  120  122  117  122  124  127   124 #>  [5601,]  109  118  115  121  123  118  123  125  128   125 #>  [5602,]  110  119  116  122  124  120  124  125  129   126 #>  [5603,]  109  118  115  121  123  118  123  125  129   126 #>  [5604,]  110  119  116  122  124  119  124  125  128   125 #>  [5605,]  110  119  116  122  124  120  124  125  129   126 #>  [5606,]  109  118  115  121  123  118  123  125  129   126 #>  [5607,]  110  119  116  122  124  120  124  125  129   126 #>  [5608,]  110  119  116  122  124  119  124  125  128   125 #>  [5609,]  110  119  116  122  124  119  124  125  128   125 #>  [5610,]  110  119  116  122  124  120  124  125  129   126 #>  [5611,]  109  118  115  121  123  118  123  125  128   125 #>  [5612,]  110  119  116  122  124  120  124  125  129   126 #>  [5613,]  110  119  116  122  124  119  124  125  128   125 #>  [5614,]  109  118  115  121  123  118  123  125  128   125 #>  [5615,]  110  119  116  122  124  119  124  125  128   125 #>  [5616,]  109  118  115  121  123  118  123  125  128   125 #>  [5617,]  110  119  116  122  124  119  124  125  128   125 #>  [5618,]  110  119  116  122  124  120  124  125  129   126 #>  [5619,]  109  118  115  121  123  118  123  125  129   126 #>  [5620,]  110  119  116  122  124  120  124  125  129   126 #>  [5621,]  110  119  116  122  124  119  124  125  128   125 #>  [5622,]  110  119  116  122  124  119  124  125  128   125 #>  [5623,]  110  119  116  122  124  120  124  125  129   126 #>  [5624,]  110  119  116  122  124  119  124  125  129   126 #>  [5625,]  110  119  116  122  124  120  124  125  129   126 #>  [5626,]  109  118  115  121  123  118  123  125  129   126 #>  [5627,]  110  119  116  122  124  119  124  125  128   125 #>  [5628,]  109  118  115  121  123  118  123  125  129   126 #>  [5629,]  110  119  116  122  124  120  124  125  129   126 #>  [5630,]  110  119  116  122  124  119  124  125  128   125 #>  [5631,]  110  119  116  122  124  120  124  125  129   126 #>  [5632,]  110  119  116  122  124  120  124  125  129   126 #>  [5633,]  110  119  116  122  124  120  124  125  129   126 #>  [5634,]  109  118  115  121  123  118  123  125  129   126 #>  [5635,]  109  118  115  121  123  118  123  125  128   125 #>  [5636,]  110  119  116  122  124  120  124  125  129   126 #>  [5637,]  109  118  115  121  123  118  123  125  128   125 #>  [5638,]  109  118  115  121  123  118  123  125  129   126 #>  [5639,]  110  119  116  122  124  120  124  125  129   126 #>  [5640,]  110  119  116  122  124  120  124  125  129   126 #>  [5641,]  110  119  116  122  124  119  124  125  128   125 #>  [5642,]  109  118  115  121  123  118  123  125  129   126 #>  [5643,]  110  119  116  122  124  119  124  125  128   125 #>  [5644,]  110  119  116  122  124  119  124  125  128   125 #>  [5645,]  109  118  115  121  123  118  123  125  128   125 #>  [5646,]  110  119  116  122  124  119  124  125  128   125 #>  [5647,]  110  119  116  122  124  120  124  125  129   126 #>  [5648,]  110  119  116  122  124  120  124  125  129   126 #>  [5649,]  109  118  115  121  123  118  123  125  128   125 #>  [5650,]  110  119  116  122  124  120  124  125  129   126 #>  [5651,]  110  119  116  122  124  120  124  125  129   126 #>  [5652,]  109  118  115  121  123  118  123  125  128   125 #>  [5653,]  110  119  116  122  124  120  124  125  129   126 #>  [5654,]  110  119  116  122  124  119  124  125  128   125 #>  [5655,]  110  119  116  122  124  119  124  125  128   125 #>  [5656,]  110  119  116  122  124  120  124  125  129   126 #>  [5657,]  110  119  116  122  124  120  124  125  129   126 #>  [5658,]  110  119  116  122  124  119  124  125  128   125 #>  [5659,]  109  118  115  121  123  118  123  125  129   126 #>  [5660,]  110  119  116  122  124  120  124  125  129   126 #>  [5661,]  110  119  116  122  124  120  124  125  129   126 #>  [5662,]  110  119  116  122  124  119  124  125  128   125 #>  [5663,]  110  119  116  122  124  120  124  125  129   126 #>  [5664,]  109  118  115  121  123  118  123  125  129   126 #>  [5665,]  110  119  116  122  124  120  124  125  129   126 #>  [5666,]  110  119  116  122  124  119  124  125  128   125 #>  [5667,]  110  119  116  122  124  119  124  125  128   125 #>  [5668,]  109  118  115  121  123  118  123  125  128   125 #>  [5669,]  110  119  116  122  124  119  124  125  128   125 #>  [5670,]  110  119  116  122  124  120  124  125  129   126 #>  [5671,]  110  119  116  122  124  120  124  125  129   126 #>  [5672,]  109  118  115  121  123  118  123  125  129   126 #>  [5673,]  109  118  115  121  123  118  123  125  129   126 #>  [5674,]  110  119  116  122  124  119  124  125  128   125 #>  [5675,]  110  119  116  122  124  120  124  125  129   126 #>  [5676,]  110  119  116  122  124  120  124  125  129   126 #>  [5677,]  109  118  115  121  123  118  123  125  129   126 #>  [5678,]  110  119  116  122  124  120  124  125  129   126 #>  [5679,]  109  118  115  121  123  118  123  125  128   125 #>  [5680,]  110  119  116  122  124  119  124  125  128   125 #>  [5681,]  110  119  116  122  124  119  124  125  128   125 #>  [5682,]  110  119  116  122  124  119  124  125  128   125 #>  [5683,]  110  119  116  122  124  119  124  125  128   125 #>  [5684,]  110  119  116  122  124  120  124  125  129   126 #>  [5685,]  110  119  116  122  124  119  124  125  128   125 #>  [5686,]  110  119  116  122  124  120  124  125  129   126 #>  [5687,]  110  119  116  122  124  119  124  125  128   125 #>  [5688,]  110  119  116  122  124  119  124  125  128   125 #>  [5689,]  109  118  115  121  123  118  123  125  128   125 #>  [5690,]  110  119  116  122  124  119  124  125  128   125 #>  [5691,]  110  119  116  122  124  119  124  125  128   125 #>  [5692,]  110  119  116  122  124  119  124  125  128   125 #>  [5693,]  110  119  116  122  124  120  124  125  129   126 #>  [5694,]  109  118  115  121  123  118  123  125  129   126 #>  [5695,]  110  119  116  122  124  119  124  125  128   125 #>  [5696,]  109  118  115  121  123  118  123  125  128   125 #>  [5697,]  109  118  115  121  123  118  123  125  129   126 #>  [5698,]  110  119  116  122  124  120  124  125  129   126 #>  [5699,]  110  119  116  122  124  119  124  125  128   125 #>  [5700,]  109  118  115  121  123  118  123  125  129   126 #>  [5701,]  111  120  117  123  125  121  125  126  130   127 #>  [5702,]  112  121  118  124  126  122  126  127  131   128 #>  [5703,]  111  120  117  123  125  121  125  126  130   127 #>  [5704,]  111  120  117  123  125  121  125  126  130   127 #>  [5705,]  111  120  117  123  125  121  125  126  130   127 #>  [5706,]  111  120  117  123  125  121  125  126  130   127 #>  [5707,]  111  120  117  123  125  121  125  126  130   127 #>  [5708,]  111  120  117  123  125  121  125  126  130   127 #>  [5709,]  112  121  118  125  127  122  126  127  131   128 #>  [5710,]  112  121  118  125  127  122  126  127  131   128 #>  [5711,]  111  120  117  123  125  121  125  126  130   127 #>  [5712,]  112  121  118  124  126  122  126  127  131   128 #>  [5713,]  112  121  118  125  127  122  126  127  131   128 #>  [5714,]  111  120  117  123  125  121  125  126  130   127 #>  [5715,]  111  120  117  123  125  121  125  126  130   127 #>  [5716,]  111  120  117  123  125  121  125  126  130   127 #>  [5717,]  112  121  118  125  127  122  126  127  131   128 #>  [5718,]  111  120  117  123  125  121  125  126  130   127 #>  [5719,]  111  120  117  123  125  121  125  126  130   127 #>  [5720,]  111  120  117  123  125  121  125  126  130   127 #>  [5721,]  112  121  118  125  127  122  126  127  131   128 #>  [5722,]  111  120  117  123  125  121  125  126  130   127 #>  [5723,]  111  120  117  123  125  121  125  126  130   127 #>  [5724,]  111  120  117  123  125  121  125  126  130   127 #>  [5725,]  111  120  117  123  125  121  125  126  130   127 #>  [5726,]  111  120  117  123  125  121  125  126  130   127 #>  [5727,]  111  120  117  123  125  121  125  126  130   127 #>  [5728,]  111  120  117  123  125  121  125  126  130   127 #>  [5729,]  112  121  118  124  126  122  126  127  131   128 #>  [5730,]  111  120  117  123  125  121  125  126  130   127 #>  [5731,]  111  120  117  123  125  121  125  126  130   127 #>  [5732,]  112  121  118  124  126  122  126  127  131   128 #>  [5733,]  112  121  118  124  126  122  126  127  131   128 #>  [5734,]  111  120  117  123  125  121  125  126  130   127 #>  [5735,]  111  120  117  123  125  121  125  126  130   127 #>  [5736,]  111  120  117  123  125  121  125  126  130   127 #>  [5737,]  111  120  117  123  125  121  125  126  130   127 #>  [5738,]  111  120  117  123  125  121  125  126  130   127 #>  [5739,]  111  120  117  123  125  121  125  126  130   127 #>  [5740,]  111  120  117  123  125  121  125  126  130   127 #>  [5741,]  111  120  117  123  125  121  125  126  130   127 #>  [5742,]  111  120  117  123  125  121  125  126  130   127 #>  [5743,]  111  120  117  123  125  121  125  126  130   127 #>  [5744,]  111  120  117  123  125  121  125  126  130   127 #>  [5745,]  111  120  117  123  125  121  125  126  130   127 #>  [5746,]  111  120  117  123  125  121  125  126  130   127 #>  [5747,]  111  120  117  123  125  121  125  126  130   127 #>  [5748,]  111  120  117  123  125  121  125  126  130   127 #>  [5749,]  111  120  117  123  125  121  125  126  130   127 #>  [5750,]  111  120  117  123  125  121  125  126  130   127 #>  [5751,]  111  120  117  123  125  121  125  126  130   127 #>  [5752,]  111  120  117  123  125  121  125  126  130   127 #>  [5753,]  112  121  118  125  127  122  126  127  131   128 #>  [5754,]  111  120  117  123  125  121  125  126  130   127 #>  [5755,]  111  120  117  123  125  121  125  126  130   127 #>  [5756,]  111  120  117  123  125  121  125  126  130   127 #>  [5757,]  111  120  117  123  125  121  125  126  130   127 #>  [5758,]  111  120  117  123  125  121  125  126  130   127 #>  [5759,]  111  120  117  123  125  121  125  126  130   127 #>  [5760,]  112  121  118  124  126  122  126  127  131   128 #>  [5761,]  111  120  117  123  125  121  125  126  130   127 #>  [5762,]  111  120  117  123  125  121  125  126  130   127 #>  [5763,]  112  121  118  124  126  122  126  127  131   128 #>  [5764,]  111  120  117  123  125  121  125  126  130   127 #>  [5765,]  111  120  117  123  125  121  125  126  130   127 #>  [5766,]  111  120  117  123  125  121  125  126  130   127 #>  [5767,]  111  120  117  123  125  121  125  126  130   127 #>  [5768,]  111  120  117  123  125  121  125  126  130   127 #>  [5769,]  111  120  117  123  125  121  125  126  130   127 #>  [5770,]  112  121  118  125  127  122  126  127  131   128 #>  [5771,]  111  120  117  123  125  121  125  126  130   127 #>  [5772,]  111  120  117  123  125  121  125  126  130   127 #>  [5773,]  111  120  117  123  125  121  125  126  130   127 #>  [5774,]  111  120  117  123  125  121  125  126  130   127 #>  [5775,]  112  121  118  125  127  122  126  127  131   128 #>  [5776,]  111  120  117  123  125  121  125  126  130   127 #>  [5777,]  111  120  117  123  125  121  125  126  130   127 #>  [5778,]  111  120  117  123  125  121  125  126  130   127 #>  [5779,]  111  120  117  123  125  121  125  126  130   127 #>  [5780,]  112  121  118  124  126  122  126  127  131   128 #>  [5781,]  112  121  118  124  126  122  126  127  131   128 #>  [5782,]  111  120  117  123  125  121  125  126  130   127 #>  [5783,]  111  120  117  123  125  121  125  126  130   127 #>  [5784,]  111  120  117  123  125  121  125  126  130   127 #>  [5785,]  111  120  117  123  125  121  125  126  130   127 #>  [5786,]  112  121  118  125  127  122  126  127  131   128 #>  [5787,]  111  120  117  123  125  121  125  126  130   127 #>  [5788,]  111  120  117  123  125  121  125  126  130   127 #>  [5789,]  111  120  117  123  125  121  125  126  130   127 #>  [5790,]  111  120  117  123  125  121  125  126  130   127 #>  [5791,]  111  120  117  123  125  121  125  126  130   127 #>  [5792,]  111  120  117  123  125  121  125  126  130   127 #>  [5793,]  111  120  117  123  125  121  125  126  130   127 #>  [5794,]  111  120  117  123  125  121  125  126  130   127 #>  [5795,]  111  120  117  123  125  121  125  126  130   127 #>  [5796,]  111  120  117  123  125  121  125  126  130   127 #>  [5797,]  111  120  117  123  125  121  125  126  130   127 #>  [5798,]  111  120  117  123  125  121  125  126  130   127 #>  [5799,]  111  120  117  123  125  121  125  126  130   127 #>  [5800,]  111  120  117  123  125  121  125  126  130   127 #>  [5801,]  114  123  120  127  129  124  128  129  133   130 #>  [5802,]  114  123  120  127  129  124  128  130  134   130 #>  [5803,]  113  122  119  126  128  123  127  128  132   129 #>  [5804,]  113  122  119  126  128  123  127  128  132   129 #>  [5805,]  113  122  119  126  128  123  127  128  132   129 #>  [5806,]  113  122  119  126  128  123  127  128  132   129 #>  [5807,]  114  123  120  127  129  124  128  129  133   130 #>  [5808,]  114  123  120  127  129  124  128  129  133   130 #>  [5809,]  113  122  119  126  128  123  127  128  132   129 #>  [5810,]  113  122  119  126  128  123  127  128  132   129 #>  [5811,]  113  122  119  126  128  123  127  128  132   129 #>  [5812,]  114  123  120  127  129  124  128  130  134   130 #>  [5813,]  114  123  120  127  129  124  128  129  133   130 #>  [5814,]  113  122  119  126  128  123  127  128  132   129 #>  [5815,]  114  123  120  127  129  124  128  129  133   130 #>  [5816,]  114  123  120  127  129  124  128  129  133   130 #>  [5817,]  114  123  120  127  129  124  128  130  134   130 #>  [5818,]  114  123  120  127  129  124  128  129  133   130 #>  [5819,]  114  123  120  127  129  124  128  129  133   130 #>  [5820,]  114  123  120  127  129  124  128  129  133   130 #>  [5821,]  113  122  119  126  128  123  127  128  132   129 #>  [5822,]  114  123  120  127  129  124  128  129  133   130 #>  [5823,]  114  123  120  127  129  124  128  129  133   130 #>  [5824,]  113  122  119  126  128  123  127  128  132   129 #>  [5825,]  113  122  119  126  128  123  127  128  132   129 #>  [5826,]  114  123  120  127  129  124  128  129  133   130 #>  [5827,]  114  123  120  127  129  124  128  129  133   130 #>  [5828,]  113  122  119  126  128  123  127  128  132   129 #>  [5829,]  114  123  120  127  129  124  128  130  134   130 #>  [5830,]  114  123  120  127  129  124  128  129  133   130 #>  [5831,]  113  122  119  126  128  123  127  128  132   129 #>  [5832,]  113  122  119  126  128  123  127  128  132   129 #>  [5833,]  114  123  120  127  129  124  128  130  134   130 #>  [5834,]  113  122  119  126  128  123  127  128  132   129 #>  [5835,]  113  122  119  126  128  123  127  128  132   129 #>  [5836,]  114  123  120  127  129  124  128  129  133   130 #>  [5837,]  114  123  120  127  129  124  128  129  133   130 #>  [5838,]  114  123  120  127  129  124  128  129  133   130 #>  [5839,]  113  122  119  126  128  123  127  128  132   129 #>  [5840,]  113  122  119  126  128  123  127  128  132   129 #>  [5841,]  114  123  120  127  129  124  128  129  133   130 #>  [5842,]  113  122  119  126  128  123  127  128  132   129 #>  [5843,]  114  123  120  127  129  124  128  129  133   130 #>  [5844,]  114  123  120  127  129  124  128  129  133   130 #>  [5845,]  114  123  120  127  129  124  128  129  133   130 #>  [5846,]  114  123  120  127  129  124  128  129  133   130 #>  [5847,]  113  122  119  126  128  123  127  128  132   129 #>  [5848,]  113  122  119  126  128  123  127  128  132   129 #>  [5849,]  114  123  120  127  129  124  128  129  133   130 #>  [5850,]  114  123  120  127  129  124  128  129  133   130 #>  [5851,]  114  123  120  127  129  124  128  129  133   130 #>  [5852,]  113  122  119  126  128  123  127  128  132   129 #>  [5853,]  114  123  120  127  129  124  128  130  134   130 #>  [5854,]  113  122  119  126  128  123  127  128  132   129 #>  [5855,]  114  123  120  127  129  124  128  129  133   130 #>  [5856,]  114  123  120  127  129  124  128  129  133   130 #>  [5857,]  113  122  119  126  128  123  127  128  132   129 #>  [5858,]  114  123  120  127  129  124  128  129  133   130 #>  [5859,]  114  123  120  127  129  124  128  129  133   130 #>  [5860,]  114  123  120  127  129  124  128  130  134   130 #>  [5861,]  114  123  120  127  129  124  128  129  133   130 #>  [5862,]  113  122  119  126  128  123  127  128  132   129 #>  [5863,]  114  123  120  127  129  124  128  130  134   130 #>  [5864,]  114  123  120  127  129  124  128  129  133   130 #>  [5865,]  113  122  119  126  128  123  127  128  132   129 #>  [5866,]  114  123  120  127  129  124  128  129  133   130 #>  [5867,]  114  123  120  127  129  124  128  129  133   130 #>  [5868,]  114  123  120  127  129  124  128  129  133   130 #>  [5869,]  114  123  120  127  129  124  128  129  133   130 #>  [5870,]  113  122  119  126  128  123  127  128  132   129 #>  [5871,]  114  123  120  127  129  124  128  129  133   130 #>  [5872,]  113  122  119  126  128  123  127  128  132   129 #>  [5873,]  113  122  119  126  128  123  127  128  132   129 #>  [5874,]  113  122  119  126  128  123  127  128  132   129 #>  [5875,]  114  123  120  127  129  124  128  129  133   130 #>  [5876,]  113  122  119  126  128  123  127  128  132   129 #>  [5877,]  114  123  120  127  129  124  128  129  133   130 #>  [5878,]  114  123  120  127  129  124  128  129  133   130 #>  [5879,]  113  122  119  126  128  123  127  128  132   129 #>  [5880,]  114  123  120  127  129  124  128  130  134   130 #>  [5881,]  114  123  120  127  129  124  128  130  134   130 #>  [5882,]  113  122  119  126  128  123  127  128  132   129 #>  [5883,]  114  123  120  127  129  124  128  129  133   130 #>  [5884,]  114  123  120  127  129  124  128  129  133   130 #>  [5885,]  114  123  120  127  129  124  128  129  133   130 #>  [5886,]  114  123  120  127  129  124  128  130  134   130 #>  [5887,]  114  123  120  127  129  124  128  129  133   130 #>  [5888,]  114  123  120  127  129  124  128  129  133   130 #>  [5889,]  114  123  120  127  129  124  128  129  133   130 #>  [5890,]  114  123  120  127  129  124  128  129  133   130 #>  [5891,]  113  122  119  126  128  123  127  128  132   129 #>  [5892,]  114  123  120  127  129  124  128  129  133   130 #>  [5893,]  114  123  120  127  129  124  128  129  133   130 #>  [5894,]  114  123  120  127  129  124  128  129  133   130 #>  [5895,]  114  123  120  127  129  124  128  129  133   130 #>  [5896,]  114  123  120  127  129  124  128  129  133   130 #>  [5897,]  114  123  120  127  129  124  128  129  133   130 #>  [5898,]  113  122  119  126  128  123  127  128  132   129 #>  [5899,]  114  123  120  127  129  124  128  129  133   130 #>  [5900,]  114  123  120  127  129  124  128  129  133   130 #>  [5901,]  116  125  122  128  130  125  129  131  135   131 #>  [5902,]  116  125  122  128  130  125  129  131  135   131 #>  [5903,]  116  125  122  128  130  125  129  131  135   131 #>  [5904,]  115  124  121  129  131  126  130  132  136   132 #>  [5905,]  116  125  122  128  130  125  129  131  135   131 #>  [5906,]  116  125  122  128  130  125  129  131  135   131 #>  [5907,]  116  125  122  128  130  125  129  131  135   131 #>  [5908,]  115  124  121  130  131  126  130  132  136   132 #>  [5909,]  115  124  121  129  131  126  130  132  136   132 #>  [5910,]  115  124  121  129  131  126  130  132  136   132 #>  [5911,]  116  125  122  128  130  125  129  131  135   131 #>  [5912,]  116  125  122  128  130  125  129  131  135   131 #>  [5913,]  116  125  122  128  130  125  129  131  135   131 #>  [5914,]  116  125  122  128  130  125  129  131  135   131 #>  [5915,]  116  125  122  128  130  125  129  131  135   131 #>  [5916,]  116  125  122  128  130  125  129  131  135   131 #>  [5917,]  116  125  122  128  130  125  129  131  135   131 #>  [5918,]  115  124  121  130  131  126  130  132  136   132 #>  [5919,]  116  125  122  128  130  125  129  131  135   131 #>  [5920,]  115  124  121  130  131  126  130  132  136   132 #>  [5921,]  116  125  122  128  130  125  129  131  135   131 #>  [5922,]  116  125  122  128  130  125  129  131  135   131 #>  [5923,]  116  125  122  128  130  125  129  131  135   131 #>  [5924,]  116  125  122  128  130  125  129  131  135   131 #>  [5925,]  116  125  122  128  130  125  129  131  135   131 #>  [5926,]  116  125  122  128  130  125  129  131  135   131 #>  [5927,]  116  125  122  128  130  125  129  131  135   131 #>  [5928,]  116  125  122  128  130  125  129  131  135   131 #>  [5929,]  116  125  122  128  130  125  129  131  135   131 #>  [5930,]  115  124  121  130  131  126  130  132  136   132 #>  [5931,]  116  125  122  128  130  125  129  131  135   131 #>  [5932,]  116  125  122  128  130  125  129  131  135   131 #>  [5933,]  116  125  122  128  130  125  129  131  135   131 #>  [5934,]  116  125  122  128  130  125  129  131  135   131 #>  [5935,]  116  125  122  128  130  125  129  131  135   131 #>  [5936,]  116  125  122  128  130  125  129  131  135   131 #>  [5937,]  116  125  122  128  130  125  129  131  135   131 #>  [5938,]  116  125  122  128  130  125  129  131  135   131 #>  [5939,]  115  124  121  129  131  126  130  132  136   132 #>  [5940,]  116  125  122  128  130  125  129  131  135   131 #>  [5941,]  116  125  122  128  130  125  129  131  135   131 #>  [5942,]  116  125  122  128  130  125  129  131  135   131 #>  [5943,]  115  124  121  130  131  126  130  132  136   132 #>  [5944,]  116  125  122  128  130  125  129  131  135   131 #>  [5945,]  115  124  121  130  131  126  130  132  136   132 #>  [5946,]  116  125  122  128  130  125  129  131  135   131 #>  [5947,]  116  125  122  128  130  125  129  131  135   131 #>  [5948,]  116  125  122  128  130  125  129  131  135   131 #>  [5949,]  115  124  121  130  131  126  130  132  136   132 #>  [5950,]  116  125  122  128  130  125  129  131  135   131 #>  [5951,]  115  124  121  130  131  126  130  132  136   132 #>  [5952,]  116  125  122  128  130  125  129  131  135   131 #>  [5953,]  115  124  121  130  131  126  130  132  136   132 #>  [5954,]  116  125  122  128  130  125  129  131  135   131 #>  [5955,]  116  125  122  128  130  125  129  131  135   131 #>  [5956,]  115  124  121  130  131  126  130  132  136   132 #>  [5957,]  116  125  122  128  130  125  129  131  135   131 #>  [5958,]  116  125  122  128  130  125  129  131  135   131 #>  [5959,]  116  125  122  128  130  125  129  131  135   131 #>  [5960,]  115  124  121  130  131  126  130  132  136   132 #>  [5961,]  116  125  122  128  130  125  129  131  135   131 #>  [5962,]  116  125  122  128  130  125  129  131  135   131 #>  [5963,]  116  125  122  128  130  125  129  131  135   131 #>  [5964,]  115  124  121  130  131  126  130  132  136   132 #>  [5965,]  115  124  121  129  131  126  130  132  136   132 #>  [5966,]  115  124  121  130  131  126  130  132  136   132 #>  [5967,]  115  124  121  130  131  126  130  132  136   132 #>  [5968,]  116  125  122  128  130  125  129  131  135   131 #>  [5969,]  116  125  122  128  130  125  129  131  135   131 #>  [5970,]  116  125  122  128  130  125  129  131  135   131 #>  [5971,]  116  125  122  128  130  125  129  131  135   131 #>  [5972,]  116  125  122  128  130  125  129  131  135   131 #>  [5973,]  116  125  122  128  130  125  129  131  135   131 #>  [5974,]  116  125  122  128  130  125  129  131  135   131 #>  [5975,]  116  125  122  128  130  125  129  131  135   131 #>  [5976,]  116  125  122  128  130  125  129  131  135   131 #>  [5977,]  116  125  122  128  130  125  129  131  135   131 #>  [5978,]  115  124  121  130  131  126  130  132  136   132 #>  [5979,]  116  125  122  128  130  125  129  131  135   131 #>  [5980,]  116  125  122  128  130  125  129  131  135   131 #>  [5981,]  116  125  122  128  130  125  129  131  135   131 #>  [5982,]  116  125  122  128  130  125  129  131  135   131 #>  [5983,]  116  125  122  128  130  125  129  131  135   131 #>  [5984,]  116  125  122  128  130  125  129  131  135   131 #>  [5985,]  115  124  121  130  131  126  130  132  136   132 #>  [5986,]  116  125  122  128  130  125  129  131  135   131 #>  [5987,]  116  125  122  128  130  125  129  131  135   131 #>  [5988,]  116  125  122  128  130  125  129  131  135   131 #>  [5989,]  115  124  121  129  131  126  130  132  136   132 #>  [5990,]  116  125  122  128  130  125  129  131  135   131 #>  [5991,]  115  124  121  129  131  126  130  132  136   132 #>  [5992,]  116  125  122  128  130  125  129  131  135   131 #>  [5993,]  116  125  122  128  130  125  129  131  135   131 #>  [5994,]  116  125  122  128  130  125  129  131  135   131 #>  [5995,]  115  124  121  130  131  126  130  132  136   132 #>  [5996,]  116  125  122  128  130  125  129  131  135   131 #>  [5997,]  116  125  122  128  130  125  129  131  135   131 #>  [5998,]  116  125  122  128  130  125  129  131  135   131 #>  [5999,]  116  125  122  128  130  125  129  131  135   131 #>  [6000,]  116  125  122  128  130  125  129  131  135   131 #>  [6001,]  118  127  124  132  133  127  131  133  137   133 #>  [6002,]  118  127  124  132  133  127  131  133  137   133 #>  [6003,]  118  127  124  132  133  127  131  133  137   133 #>  [6004,]  117  126  123  131  132  127  131  133  137   133 #>  [6005,]  118  127  124  132  133  127  131  133  137   133 #>  [6006,]  118  127  124  132  133  127  131  133  137   133 #>  [6007,]  118  127  124  132  133  127  131  133  137   133 #>  [6008,]  117  126  123  131  132  127  131  133  137   133 #>  [6009,]  117  126  123  131  132  127  131  133  137   133 #>  [6010,]  118  127  124  132  133  127  131  133  137   133 #>  [6011,]  118  127  124  132  133  127  131  133  137   133 #>  [6012,]  118  127  124  132  133  127  131  133  137   133 #>  [6013,]  118  127  124  132  133  127  131  133  137   133 #>  [6014,]  118  127  124  132  133  127  131  133  137   133 #>  [6015,]  118  127  124  132  133  127  131  133  137   133 #>  [6016,]  118  127  124  132  133  127  131  133  137   133 #>  [6017,]  117  126  123  131  132  127  131  133  137   133 #>  [6018,]  118  127  124  132  133  127  131  133  137   133 #>  [6019,]  118  127  124  132  133  127  131  133  137   133 #>  [6020,]  118  127  124  132  133  127  132  134  138   134 #>  [6021,]  118  127  124  132  133  127  131  133  137   133 #>  [6022,]  118  127  124  132  133  127  132  134  138   134 #>  [6023,]  118  127  124  132  133  127  131  133  137   133 #>  [6024,]  118  127  124  132  133  127  131  133  137   133 #>  [6025,]  118  127  124  132  133  127  131  133  137   133 #>  [6026,]  118  127  124  132  133  127  131  133  137   133 #>  [6027,]  117  126  123  131  132  127  132  134  138   134 #>  [6028,]  118  127  124  132  133  127  131  133  137   133 #>  [6029,]  118  127  124  132  133  127  132  134  138   134 #>  [6030,]  118  127  124  132  133  127  131  133  137   133 #>  [6031,]  118  127  124  132  133  127  131  133  137   133 #>  [6032,]  118  127  124  132  133  127  131  133  137   133 #>  [6033,]  118  127  124  132  133  127  131  133  137   133 #>  [6034,]  118  127  124  132  133  127  131  133  137   133 #>  [6035,]  118  127  124  132  133  127  131  133  137   133 #>  [6036,]  118  127  124  132  133  127  131  133  137   133 #>  [6037,]  118  127  124  132  133  127  131  133  137   133 #>  [6038,]  118  127  124  132  133  127  131  133  137   133 #>  [6039,]  118  127  124  132  133  127  131  133  137   133 #>  [6040,]  118  127  124  132  133  127  131  133  137   133 #>  [6041,]  118  127  124  132  133  127  131  133  137   133 #>  [6042,]  118  127  124  132  133  127  131  133  137   133 #>  [6043,]  118  127  124  132  133  127  131  133  137   133 #>  [6044,]  117  126  123  131  132  127  131  133  137   133 #>  [6045,]  118  127  124  132  133  127  131  133  137   133 #>  [6046,]  118  127  124  132  133  127  131  133  137   133 #>  [6047,]  118  127  124  132  133  127  131  133  137   133 #>  [6048,]  118  127  124  132  133  127  131  133  137   133 #>  [6049,]  118  127  124  132  133  127  131  133  137   133 #>  [6050,]  118  127  124  132  133  127  131  133  137   133 #>  [6051,]  118  127  124  132  133  127  131  133  137   133 #>  [6052,]  117  126  123  131  132  127  131  133  137   133 #>  [6053,]  118  127  124  132  133  127  131  133  137   133 #>  [6054,]  118  127  124  132  133  127  131  133  137   133 #>  [6055,]  118  127  124  132  133  127  131  133  137   133 #>  [6056,]  118  127  124  132  133  127  131  133  137   133 #>  [6057,]  118  127  124  132  133  127  131  133  137   133 #>  [6058,]  117  126  123  131  132  127  132  134  138   134 #>  [6059,]  118  127  124  132  133  127  131  133  137   133 #>  [6060,]  118  127  124  132  133  127  131  133  137   133 #>  [6061,]  118  127  124  132  133  127  131  133  137   133 #>  [6062,]  118  127  124  132  133  127  131  133  137   133 #>  [6063,]  118  127  124  132  133  127  131  133  137   133 #>  [6064,]  118  127  124  132  133  127  132  134  138   134 #>  [6065,]  118  127  124  132  133  127  131  133  137   133 #>  [6066,]  117  126  123  131  132  127  131  133  137   133 #>  [6067,]  118  127  124  132  133  127  131  133  137   133 #>  [6068,]  118  127  124  132  133  127  131  133  137   133 #>  [6069,]  118  127  124  132  133  127  131  133  137   133 #>  [6070,]  118  127  124  132  133  127  131  133  137   133 #>  [6071,]  118  127  124  132  133  127  131  133  137   133 #>  [6072,]  118  127  124  132  133  127  131  133  137   133 #>  [6073,]  118  127  124  132  133  127  131  133  137   133 #>  [6074,]  118  127  124  132  133  127  131  133  137   133 #>  [6075,]  118  127  124  132  133  127  131  133  137   133 #>  [6076,]  118  127  124  132  133  127  131  133  137   133 #>  [6077,]  118  127  124  132  133  127  132  134  138   134 #>  [6078,]  118  127  124  132  133  127  131  133  137   133 #>  [6079,]  118  127  124  132  133  127  131  133  137   133 #>  [6080,]  118  127  124  132  133  127  131  133  137   133 #>  [6081,]  117  126  123  131  132  127  132  134  138   134 #>  [6082,]  117  126  123  131  132  127  131  133  137   133 #>  [6083,]  118  127  124  132  133  127  131  133  137   133 #>  [6084,]  118  127  124  132  133  127  131  133  137   133 #>  [6085,]  118  127  124  132  133  127  131  133  137   133 #>  [6086,]  118  127  124  132  133  127  131  133  137   133 #>  [6087,]  117  126  123  131  132  127  132  134  138   134 #>  [6088,]  118  127  124  132  133  127  131  133  137   133 #>  [6089,]  118  127  124  132  133  127  131  133  137   133 #>  [6090,]  117  126  123  131  132  127  131  133  137   133 #>  [6091,]  118  127  124  132  133  127  131  133  137   133 #>  [6092,]  117  126  123  131  132  127  131  133  137   133 #>  [6093,]  118  127  124  132  133  127  131  133  137   133 #>  [6094,]  118  127  124  132  133  127  131  133  137   133 #>  [6095,]  117  126  123  131  132  127  131  133  137   133 #>  [6096,]  118  127  124  132  133  127  131  133  137   133 #>  [6097,]  118  127  124  132  133  127  131  133  137   133 #>  [6098,]  118  127  124  132  133  127  131  133  137   133 #>  [6099,]  117  126  123  131  132  127  131  133  137   133 #>  [6100,]  118  127  124  132  133  127  132  134  138   134 #>  [6101,]  120  129  126  134  134  129  133  135  139   135 #>  [6102,]  120  129  126  134  134  129  133  135  139   135 #>  [6103,]  119  128  125  133  134  128  133  135  139   135 #>  [6104,]  120  129  126  134  134  128  133  135  139   135 #>  [6105,]  120  129  126  134  134  128  133  135  139   135 #>  [6106,]  120  129  126  134  134  128  133  135  139   135 #>  [6107,]  120  129  126  134  134  129  133  135  139   135 #>  [6108,]  120  129  126  134  134  129  133  135  139   135 #>  [6109,]  120  129  126  134  134  128  133  135  139   135 #>  [6110,]  119  128  125  133  134  128  133  135  139   135 #>  [6111,]  119  128  125  133  134  128  133  135  139   135 #>  [6112,]  120  129  126  134  134  129  133  135  139   135 #>  [6113,]  120  129  126  134  134  129  133  135  139   135 #>  [6114,]  119  128  125  133  134  128  133  135  139   135 #>  [6115,]  120  129  126  134  134  129  133  135  139   135 #>  [6116,]  120  129  126  134  134  129  133  135  139   135 #>  [6117,]  120  129  126  134  134  129  133  135  139   135 #>  [6118,]  120  129  126  134  134  129  133  135  139   135 #>  [6119,]  120  129  126  134  134  129  133  135  139   135 #>  [6120,]  120  129  126  134  134  129  133  136  140   136 #>  [6121,]  119  128  125  133  134  128  133  135  139   135 #>  [6122,]  120  129  126  134  134  129  133  135  139   135 #>  [6123,]  120  129  126  134  134  129  133  135  139   135 #>  [6124,]  120  129  126  134  134  128  133  136  140   136 #>  [6125,]  120  129  126  134  134  128  133  135  139   135 #>  [6126,]  120  129  126  134  134  129  133  135  139   135 #>  [6127,]  120  129  126  134  134  129  133  135  139   135 #>  [6128,]  120  129  126  134  134  128  133  136  140   136 #>  [6129,]  120  129  126  134  134  129  133  135  139   135 #>  [6130,]  120  129  126  134  134  129  133  135  139   135 #>  [6131,]  119  128  125  133  134  128  133  135  139   135 #>  [6132,]  119  128  125  133  134  128  133  135  139   135 #>  [6133,]  120  129  126  134  134  129  133  135  139   135 #>  [6134,]  120  129  126  134  134  128  133  135  139   135 #>  [6135,]  120  129  126  134  134  128  133  135  139   135 #>  [6136,]  120  129  126  134  134  129  133  135  139   135 #>  [6137,]  120  129  126  134  134  129  133  135  139   135 #>  [6138,]  120  129  126  134  134  129  133  135  139   135 #>  [6139,]  120  129  126  134  134  128  133  135  139   135 #>  [6140,]  119  128  125  133  134  128  133  135  139   135 #>  [6141,]  120  129  126  134  134  129  133  135  139   135 #>  [6142,]  120  129  126  134  134  128  133  135  139   135 #>  [6143,]  120  129  126  134  134  129  133  135  139   135 #>  [6144,]  120  129  126  134  134  129  133  135  139   135 #>  [6145,]  120  129  126  134  134  129  133  135  139   135 #>  [6146,]  120  129  126  134  134  129  133  135  139   135 #>  [6147,]  120  129  126  134  134  128  133  135  139   135 #>  [6148,]  119  128  125  133  134  128  133  135  139   135 #>  [6149,]  120  129  126  134  134  129  133  135  139   135 #>  [6150,]  120  129  126  134  134  129  133  135  139   135 #>  [6151,]  120  129  126  134  134  129  133  135  139   135 #>  [6152,]  120  129  126  134  134  128  133  136  140   136 #>  [6153,]  120  129  126  134  134  129  133  135  139   135 #>  [6154,]  120  129  126  134  134  128  133  135  139   135 #>  [6155,]  120  129  126  134  134  129  133  135  139   135 #>  [6156,]  120  129  126  134  134  129  133  135  139   135 #>  [6157,]  120  129  126  134  134  128  133  135  139   135 #>  [6158,]  120  129  126  134  134  129  133  135  139   135 #>  [6159,]  120  129  126  134  134  129  133  135  139   135 #>  [6160,]  120  129  126  134  134  129  133  135  139   135 #>  [6161,]  120  129  126  134  134  129  133  135  139   135 #>  [6162,]  120  129  126  134  134  128  133  135  139   135 #>  [6163,]  120  129  126  134  134  129  133  135  139   135 #>  [6164,]  120  129  126  134  134  129  133  135  139   135 #>  [6165,]  120  129  126  134  134  128  133  135  139   135 #>  [6166,]  120  129  126  134  134  129  133  135  139   135 #>  [6167,]  120  129  126  134  134  128  133  135  139   135 #>  [6168,]  120  129  126  134  134  129  133  135  139   135 #>  [6169,]  120  129  126  134  134  129  133  135  139   135 #>  [6170,]  119  128  125  133  134  128  133  135  139   135 #>  [6171,]  120  129  126  134  134  129  133  135  139   135 #>  [6172,]  120  129  126  134  134  128  133  135  139   135 #>  [6173,]  120  129  126  134  134  128  133  135  139   135 #>  [6174,]  119  128  125  133  134  128  133  135  139   135 #>  [6175,]  120  129  126  134  134  129  133  135  139   135 #>  [6176,]  120  129  126  134  134  128  133  136  140   136 #>  [6177,]  120  129  126  134  134  129  133  135  139   135 #>  [6178,]  120  129  126  134  134  129  133  135  139   135 #>  [6179,]  120  129  126  134  134  128  133  135  139   135 #>  [6180,]  120  129  126  134  134  129  133  135  139   135 #>  [6181,]  120  129  126  134  134  129  133  135  139   135 #>  [6182,]  119  128  125  133  134  128  133  135  139   135 #>  [6183,]  120  129  126  134  134  129  133  135  139   135 #>  [6184,]  120  129  126  134  134  129  133  135  139   135 #>  [6185,]  120  129  126  134  134  129  133  135  139   135 #>  [6186,]  120  129  126  134  134  128  133  136  140   136 #>  [6187,]  120  129  126  134  134  129  133  135  139   135 #>  [6188,]  120  129  126  134  134  128  133  135  139   135 #>  [6189,]  120  129  126  134  134  128  133  135  139   135 #>  [6190,]  120  129  126  134  134  129  133  135  139   135 #>  [6191,]  120  129  126  134  134  128  133  135  139   135 #>  [6192,]  120  129  126  134  134  128  133  135  139   135 #>  [6193,]  120  129  126  134  134  129  133  135  139   135 #>  [6194,]  120  129  126  134  134  128  133  135  139   135 #>  [6195,]  120  129  126  134  134  129  133  135  139   135 #>  [6196,]  120  129  126  134  134  129  133  135  139   135 #>  [6197,]  120  129  126  134  134  129  133  135  139   135 #>  [6198,]  119  128  125  133  134  128  133  135  139   135 #>  [6199,]  120  129  126  134  134  128  133  135  139   135 #>  [6200,]  120  129  126  134  134  129  133  135  139   135 #>  [6201,]  121  131  128  137  136  131  135  138  142   138 #>  [6202,]  121  130  127  135  135  130  134  137  141   137 #>  [6203,]  121  130  127  135  135  130  134  137  141   137 #>  [6204,]  121  131  128  136  136  131  135  138  142   138 #>  [6205,]  121  130  127  135  135  130  134  137  141   137 #>  [6206,]  121  130  127  135  135  130  134  137  141   137 #>  [6207,]  121  131  128  136  136  131  135  138  142   138 #>  [6208,]  121  130  127  135  135  130  134  137  141   137 #>  [6209,]  121  131  128  136  136  131  135  138  142   138 #>  [6210,]  121  131  128  136  136  131  135  138  142   138 #>  [6211,]  121  130  127  135  135  130  134  137  141   137 #>  [6212,]  121  130  127  135  135  130  134  137  141   137 #>  [6213,]  121  131  128  137  136  131  135  138  142   138 #>  [6214,]  121  131  128  137  136  131  135  138  142   138 #>  [6215,]  121  130  127  135  135  130  134  137  141   137 #>  [6216,]  121  131  128  137  136  131  135  138  142   138 #>  [6217,]  121  130  127  135  135  130  134  137  141   137 #>  [6218,]  121  130  127  135  135  130  134  137  141   137 #>  [6219,]  121  130  127  135  135  130  134  137  141   137 #>  [6220,]  121  131  128  136  136  131  135  138  142   138 #>  [6221,]  121  130  127  135  135  130  134  137  141   137 #>  [6222,]  121  131  128  136  136  131  135  138  142   138 #>  [6223,]  121  130  127  135  135  130  134  137  141   137 #>  [6224,]  121  131  128  136  136  131  135  138  142   138 #>  [6225,]  121  131  128  136  136  131  135  138  142   138 #>  [6226,]  121  130  127  135  135  130  134  137  141   137 #>  [6227,]  121  130  127  135  135  130  134  137  141   137 #>  [6228,]  121  131  128  136  136  131  135  138  142   138 #>  [6229,]  121  130  127  135  135  130  134  137  141   137 #>  [6230,]  121  130  127  135  135  130  134  137  141   137 #>  [6231,]  121  130  127  135  135  130  134  137  141   137 #>  [6232,]  121  130  127  135  135  130  134  137  141   137 #>  [6233,]  121  130  127  135  135  130  134  137  141   137 #>  [6234,]  121  130  127  135  135  130  134  137  141   137 #>  [6235,]  121  130  127  135  135  130  134  137  141   137 #>  [6236,]  121  131  128  136  136  131  135  138  142   138 #>  [6237,]  121  130  127  135  135  130  134  137  141   137 #>  [6238,]  121  130  127  135  135  130  134  137  141   137 #>  [6239,]  121  131  128  136  136  131  135  138  142   138 #>  [6240,]  121  130  127  135  135  130  134  137  141   137 #>  [6241,]  121  130  127  135  135  130  134  137  141   137 #>  [6242,]  121  130  127  135  135  130  134  137  141   137 #>  [6243,]  121  130  127  135  135  130  134  137  141   137 #>  [6244,]  121  130  127  135  135  130  134  137  141   137 #>  [6245,]  121  131  128  136  136  131  135  138  142   138 #>  [6246,]  121  130  127  135  135  130  134  137  141   137 #>  [6247,]  121  130  127  135  135  130  134  137  141   137 #>  [6248,]  121  130  127  135  135  130  134  137  141   137 #>  [6249,]  121  131  128  136  136  131  135  138  142   138 #>  [6250,]  121  131  128  137  136  131  135  138  142   138 #>  [6251,]  121  130  127  135  135  130  134  137  141   137 #>  [6252,]  121  131  128  136  136  131  135  138  142   138 #>  [6253,]  121  131  128  136  136  131  135  138  142   138 #>  [6254,]  121  131  128  136  136  131  135  138  142   138 #>  [6255,]  121  131  128  136  136  131  135  138  142   138 #>  [6256,]  121  130  127  135  135  130  134  137  141   137 #>  [6257,]  121  131  128  136  136  131  135  138  142   138 #>  [6258,]  121  131  128  136  136  131  135  138  142   138 #>  [6259,]  121  131  128  137  136  131  135  138  142   138 #>  [6260,]  121  130  127  135  135  130  134  137  141   137 #>  [6261,]  121  130  127  135  135  130  134  137  141   137 #>  [6262,]  121  130  127  135  135  130  134  137  141   137 #>  [6263,]  121  130  127  135  135  130  134  137  141   137 #>  [6264,]  121  130  127  135  135  130  134  137  141   137 #>  [6265,]  121  130  127  135  135  130  134  137  141   137 #>  [6266,]  121  130  127  135  135  130  134  137  141   137 #>  [6267,]  121  131  128  136  136  131  135  138  142   138 #>  [6268,]  121  130  127  135  135  130  134  137  141   137 #>  [6269,]  121  130  127  135  135  130  134  137  141   137 #>  [6270,]  121  130  127  135  135  130  134  137  141   137 #>  [6271,]  121  130  127  135  135  130  134  137  141   137 #>  [6272,]  121  131  128  136  136  131  135  138  142   138 #>  [6273,]  121  131  128  137  136  131  135  138  142   138 #>  [6274,]  121  130  127  135  135  130  134  137  141   137 #>  [6275,]  121  130  127  135  135  130  134  137  141   137 #>  [6276,]  121  131  128  136  136  131  135  138  142   138 #>  [6277,]  121  130  127  135  135  130  134  137  141   137 #>  [6278,]  121  130  127  135  135  130  134  137  141   137 #>  [6279,]  121  130  127  135  135  130  134  137  141   137 #>  [6280,]  121  130  127  135  135  130  134  137  141   137 #>  [6281,]  121  130  127  135  135  130  134  137  141   137 #>  [6282,]  121  130  127  135  135  130  134  137  141   137 #>  [6283,]  121  130  127  135  135  130  134  137  141   137 #>  [6284,]  121  130  127  135  135  130  134  137  141   137 #>  [6285,]  121  131  128  136  136  131  135  138  142   138 #>  [6286,]  121  131  128  136  136  131  135  138  142   138 #>  [6287,]  121  131  128  136  136  131  135  138  142   138 #>  [6288,]  121  130  127  135  135  130  134  137  141   137 #>  [6289,]  121  130  127  135  135  130  134  137  141   137 #>  [6290,]  121  131  128  136  136  131  135  138  142   138 #>  [6291,]  121  131  128  136  136  131  135  138  142   138 #>  [6292,]  121  130  127  135  135  130  134  137  141   137 #>  [6293,]  121  130  127  135  135  130  134  137  141   137 #>  [6294,]  121  130  127  135  135  130  134  137  141   137 #>  [6295,]  121  130  127  135  135  130  134  137  141   137 #>  [6296,]  121  130  127  135  135  130  134  137  141   137 #>  [6297,]  121  130  127  135  135  130  134  137  141   137 #>  [6298,]  121  130  127  135  135  130  134  137  141   137 #>  [6299,]  121  130  127  135  135  130  134  137  141   137 #>  [6300,]  121  130  127  135  135  130  134  137  141   137 #>  [6301,]  122  132  129  138  137  132  136  139  143   139 #>  [6302,]  123  133  130  139  138  134  138  140  145   140 #>  [6303,]  122  132  129  138  137  132  136  139  143   139 #>  [6304,]  122  132  129  138  137  132  136  139  143   139 #>  [6305,]  123  133  130  139  138  135  138  140  144   142 #>  [6306,]  122  132  129  138  137  132  136  139  143   139 #>  [6307,]  123  133  130  139  138  134  138  140  145   140 #>  [6308,]  122  132  129  138  137  132  136  139  143   139 #>  [6309,]  123  133  130  140  139  133  137  140  144   142 #>  [6310,]  123  133  130  139  138  134  138  140  144   142 #>  [6311,]  122  132  129  138  137  132  136  139  143   139 #>  [6312,]  123  133  130  139  138  135  138  140  145   140 #>  [6313,]  123  133  130  140  139  133  137  140  144   142 #>  [6314,]  122  132  129  138  137  132  136  139  143   139 #>  [6315,]  122  132  129  138  137  132  136  139  143   139 #>  [6316,]  122  132  129  138  137  132  136  139  143   139 #>  [6317,]  123  133  130  140  139  133  137  140  144   142 #>  [6318,]  123  133  130  140  139  133  137  140  145   140 #>  [6319,]  122  132  129  138  137  132  136  139  143   139 #>  [6320,]  123  133  130  140  139  133  137  140  145   140 #>  [6321,]  123  133  130  139  138  134  138  140  144   141 #>  [6322,]  123  133  130  139  138  134  138  140  144   142 #>  [6323,]  123  133  130  139  138  134  138  140  145   140 #>  [6324,]  123  133  130  139  138  134  138  140  144   142 #>  [6325,]  122  132  129  138  137  132  136  139  143   139 #>  [6326,]  122  132  129  138  137  132  136  139  143   139 #>  [6327,]  123  133  130  140  139  133  137  140  144   142 #>  [6328,]  122  132  129  138  137  132  136  139  143   139 #>  [6329,]  123  133  130  139  138  134  138  140  144   142 #>  [6330,]  123  133  130  139  138  134  138  140  144   141 #>  [6331,]  123  133  130  139  138  134  138  140  145   140 #>  [6332,]  123  133  130  139  138  134  138  140  145   140 #>  [6333,]  123  133  130  140  139  133  137  140  145   140 #>  [6334,]  122  132  129  138  137  132  136  139  143   139 #>  [6335,]  122  132  129  138  137  132  136  139  143   139 #>  [6336,]  123  133  130  140  139  133  137  140  144   142 #>  [6337,]  122  132  129  138  137  132  136  139  143   139 #>  [6338,]  122  132  129  138  137  132  136  139  143   139 #>  [6339,]  123  133  130  139  138  134  138  140  144   141 #>  [6340,]  123  133  130  139  138  134  138  140  145   140 #>  [6341,]  123  133  130  139  138  134  138  140  144   142 #>  [6342,]  122  132  129  138  137  132  136  139  143   139 #>  [6343,]  122  132  129  138  137  132  136  139  143   139 #>  [6344,]  123  133  130  139  138  134  138  140  144   142 #>  [6345,]  122  132  129  138  137  132  136  139  143   139 #>  [6346,]  122  132  129  138  137  132  136  139  143   139 #>  [6347,]  123  133  130  139  138  134  138  140  144   142 #>  [6348,]  123  133  130  139  138  134  138  140  145   140 #>  [6349,]  122  132  129  138  137  132  136  139  143   139 #>  [6350,]  123  133  130  139  138  135  138  140  144   142 #>  [6351,]  123  133  130  140  139  133  137  140  144   142 #>  [6352,]  122  132  129  138  137  132  136  139  143   139 #>  [6353,]  123  133  130  140  139  133  137  140  144   142 #>  [6354,]  123  133  130  140  139  133  137  140  144   142 #>  [6355,]  122  132  129  138  137  132  136  139  143   139 #>  [6356,]  122  132  129  138  137  132  136  139  143   139 #>  [6357,]  122  132  129  138  137  132  136  139  143   139 #>  [6358,]  123  133  130  139  138  135  138  140  144   142 #>  [6359,]  122  132  129  138  137  132  136  139  143   139 #>  [6360,]  123  133  130  139  138  135  138  140  145   140 #>  [6361,]  123  133  130  139  138  135  138  140  145   140 #>  [6362,]  122  132  129  138  137  132  136  139  143   139 #>  [6363,]  123  133  130  139  138  134  138  140  144   142 #>  [6364,]  122  132  129  138  137  132  136  139  143   139 #>  [6365,]  122  132  129  138  137  132  136  139  143   139 #>  [6366,]  122  132  129  138  137  132  136  139  143   139 #>  [6367,]  122  132  129  138  137  132  136  139  143   139 #>  [6368,]  122  132  129  138  137  132  136  139  143   139 #>  [6369,]  122  132  129  138  137  132  136  139  143   139 #>  [6370,]  123  133  130  139  138  134  138  140  145   140 #>  [6371,]  123  133  130  139  138  135  138  140  145   140 #>  [6372,]  122  132  129  138  137  132  136  139  143   139 #>  [6373,]  122  132  129  138  137  132  136  139  143   139 #>  [6374,]  123  133  130  139  138  135  138  140  144   142 #>  [6375,]  123  133  130  139  138  135  138  140  144   142 #>  [6376,]  123  133  130  139  138  135  138  140  144   142 #>  [6377,]  122  132  129  138  137  132  136  139  143   139 #>  [6378,]  123  133  130  139  138  135  138  140  145   140 #>  [6379,]  122  132  129  138  137  132  136  139  143   139 #>  [6380,]  123  133  130  139  138  134  138  140  144   141 #>  [6381,]  123  133  130  139  138  135  138  140  144   142 #>  [6382,]  122  132  129  138  137  132  136  139  143   139 #>  [6383,]  123  133  130  140  139  133  137  140  144   142 #>  [6384,]  123  133  130  140  139  133  137  140  145   140 #>  [6385,]  122  132  129  138  137  132  136  139  143   139 #>  [6386,]  123  133  130  139  138  134  138  140  144   142 #>  [6387,]  123  133  130  140  139  133  137  140  144   142 #>  [6388,]  123  133  130  139  138  134  138  140  144   142 #>  [6389,]  122  132  129  138  137  132  136  139  143   139 #>  [6390,]  123  133  130  139  138  134  138  140  144   142 #>  [6391,]  122  132  129  138  137  132  136  139  143   139 #>  [6392,]  123  133  130  139  138  135  138  140  144   142 #>  [6393,]  123  133  130  140  139  133  137  140  145   140 #>  [6394,]  122  132  129  138  137  132  136  139  143   139 #>  [6395,]  123  133  130  139  138  134  138  140  144   141 #>  [6396,]  122  132  129  138  137  132  136  139  143   139 #>  [6397,]  122  132  129  138  137  132  136  139  143   139 #>  [6398,]  122  132  129  138  137  132  136  139  143   139 #>  [6399,]  122  132  129  138  137  132  136  139  143   139 #>  [6400,]  122  132  129  138  137  132  136  139  143   139 #>  [6401,]  124  134  131  141  140  136  139  141  146   143 #>  [6402,]  124  134  131  141  140  136  139  141  146   143 #>  [6403,]  124  134  131  141  140  136  139  141  146   143 #>  [6404,]  125  135  132  142  141  137  140  142  147   144 #>  [6405,]  124  134  131  141  140  136  139  141  146   143 #>  [6406,]  124  134  131  141  140  136  139  141  146   143 #>  [6407,]  125  135  132  142  141  137  140  142  147   144 #>  [6408,]  124  134  131  141  140  136  139  141  146   143 #>  [6409,]  124  134  131  141  140  136  139  141  146   143 #>  [6410,]  125  135  132  142  141  137  140  142  147   144 #>  [6411,]  124  134  131  141  140  136  139  141  146   143 #>  [6412,]  124  134  131  141  140  136  139  141  146   143 #>  [6413,]  124  134  131  141  140  136  139  141  146   143 #>  [6414,]  124  134  131  141  140  136  139  141  146   143 #>  [6415,]  124  134  131  141  140  136  139  141  146   143 #>  [6416,]  125  135  132  142  141  137  140  142  147   144 #>  [6417,]  124  134  131  141  140  136  139  141  146   143 #>  [6418,]  124  134  131  141  140  136  139  141  146   143 #>  [6419,]  124  134  131  141  140  136  139  141  146   143 #>  [6420,]  125  135  132  142  141  137  140  142  147   144 #>  [6421,]  124  134  131  141  140  136  139  141  146   143 #>  [6422,]  124  134  131  141  140  136  139  141  146   143 #>  [6423,]  124  134  131  141  140  136  139  141  146   143 #>  [6424,]  125  135  132  142  141  137  140  142  147   144 #>  [6425,]  125  135  132  142  141  137  140  142  147   144 #>  [6426,]  124  134  131  141  140  136  139  141  146   143 #>  [6427,]  124  134  131  141  140  136  139  141  146   143 #>  [6428,]  125  135  132  142  141  137  140  142  147   144 #>  [6429,]  124  134  131  141  140  136  139  141  146   143 #>  [6430,]  124  134  131  141  140  136  139  141  146   143 #>  [6431,]  124  134  131  141  140  136  139  141  146   143 #>  [6432,]  124  134  131  141  140  136  139  141  146   143 #>  [6433,]  124  134  131  141  140  136  139  141  146   143 #>  [6434,]  124  134  131  141  140  136  139  141  146   143 #>  [6435,]  124  134  131  141  140  136  139  141  146   143 #>  [6436,]  124  134  131  141  140  136  139  141  146   143 #>  [6437,]  124  134  131  141  140  136  139  141  146   143 #>  [6438,]  124  134  131  141  140  136  139  141  146   143 #>  [6439,]  125  135  132  142  141  137  140  142  147   144 #>  [6440,]  124  134  131  141  140  136  139  141  146   143 #>  [6441,]  124  134  131  141  140  136  139  141  146   143 #>  [6442,]  124  134  131  141  140  136  139  141  146   143 #>  [6443,]  124  134  131  141  140  136  139  141  146   143 #>  [6444,]  124  134  131  141  140  136  139  141  146   143 #>  [6445,]  124  134  131  141  140  136  139  141  146   143 #>  [6446,]  124  134  131  141  140  136  139  141  146   143 #>  [6447,]  124  134  131  141  140  136  139  141  146   143 #>  [6448,]  124  134  131  141  140  136  139  141  146   143 #>  [6449,]  124  134  131  141  140  136  139  141  146   143 #>  [6450,]  125  135  132  142  141  137  140  142  147   144 #>  [6451,]  124  134  131  141  140  136  139  141  146   143 #>  [6452,]  125  135  132  142  141  137  140  142  147   144 #>  [6453,]  124  134  131  141  140  136  139  141  146   143 #>  [6454,]  125  135  132  142  141  137  140  142  147   144 #>  [6455,]  124  134  131  141  140  136  139  141  146   143 #>  [6456,]  124  134  131  141  140  136  139  141  146   143 #>  [6457,]  125  135  132  142  141  137  140  142  147   144 #>  [6458,]  124  134  131  141  140  136  139  141  146   143 #>  [6459,]  124  134  131  141  140  136  139  141  146   143 #>  [6460,]  124  134  131  141  140  136  139  141  146   143 #>  [6461,]  124  134  131  141  140  136  139  141  146   143 #>  [6462,]  124  134  131  141  140  136  139  141  146   143 #>  [6463,]  124  134  131  141  140  136  139  141  146   143 #>  [6464,]  124  134  131  141  140  136  139  141  146   143 #>  [6465,]  124  134  131  141  140  136  139  141  146   143 #>  [6466,]  124  134  131  141  140  136  139  141  146   143 #>  [6467,]  124  134  131  141  140  136  139  141  146   143 #>  [6468,]  124  134  131  141  140  136  139  141  146   143 #>  [6469,]  124  134  131  141  140  136  139  141  146   143 #>  [6470,]  124  134  131  141  140  136  139  141  146   143 #>  [6471,]  124  134  131  141  140  136  139  141  146   143 #>  [6472,]  124  134  131  141  140  136  139  141  146   143 #>  [6473,]  125  135  132  142  141  137  140  142  147   144 #>  [6474,]  124  134  131  141  140  136  139  141  146   143 #>  [6475,]  124  134  131  141  140  136  139  141  146   143 #>  [6476,]  125  135  132  142  141  137  140  142  147   144 #>  [6477,]  124  134  131  141  140  136  139  141  146   143 #>  [6478,]  124  134  131  141  140  136  139  141  146   143 #>  [6479,]  124  134  131  141  140  136  139  141  146   143 #>  [6480,]  124  134  131  141  140  136  139  141  146   143 #>  [6481,]  124  134  131  141  140  136  139  141  146   143 #>  [6482,]  124  134  131  141  140  136  139  141  146   143 #>  [6483,]  124  134  131  141  140  136  139  141  146   143 #>  [6484,]  124  134  131  141  140  136  139  141  146   143 #>  [6485,]  124  134  131  141  140  136  139  141  146   143 #>  [6486,]  125  135  132  142  141  137  140  142  147   144 #>  [6487,]  124  134  131  141  140  136  139  141  146   143 #>  [6488,]  124  134  131  141  140  136  139  141  146   143 #>  [6489,]  124  134  131  141  140  136  139  141  146   143 #>  [6490,]  124  134  131  141  140  136  139  141  146   143 #>  [6491,]  125  135  132  142  141  137  140  142  147   144 #>  [6492,]  124  134  131  141  140  136  139  141  146   143 #>  [6493,]  124  134  131  141  140  136  139  141  146   143 #>  [6494,]  124  134  131  141  140  136  139  141  146   143 #>  [6495,]  124  134  131  141  140  136  139  141  146   143 #>  [6496,]  124  134  131  141  140  136  139  141  146   143 #>  [6497,]  124  134  131  141  140  136  139  141  146   143 #>  [6498,]  124  134  131  141  140  136  139  141  146   143 #>  [6499,]  124  134  131  141  140  136  139  141  146   143 #>  [6500,]  124  134  131  141  140  136  139  141  146   143 #>  [6501,]  127  137  134  144  143  139  142  144  149   146 #>  [6502,]  127  137  134  144  143  139  142  144  149   146 #>  [6503,]  127  137  134  144  143  139  142  144  149   146 #>  [6504,]  126  136  133  143  142  138  141  143  148   145 #>  [6505,]  127  137  134  144  143  139  142  144  149   146 #>  [6506,]  127  137  134  144  143  139  142  144  149   146 #>  [6507,]  127  137  134  144  143  139  142  144  149   146 #>  [6508,]  126  136  133  143  142  138  141  143  148   145 #>  [6509,]  126  136  133  143  142  138  141  143  148   145 #>  [6510,]  126  136  133  143  142  138  141  143  148   145 #>  [6511,]  127  137  134  144  143  139  142  144  149   146 #>  [6512,]  127  137  134  144  143  139  142  144  149   146 #>  [6513,]  127  137  134  144  143  139  142  144  149   146 #>  [6514,]  127  137  134  144  143  139  142  144  149   146 #>  [6515,]  127  137  134  144  143  139  142  144  149   146 #>  [6516,]  127  137  134  144  143  139  142  144  149   146 #>  [6517,]  127  137  134  144  143  139  142  144  149   146 #>  [6518,]  127  137  134  144  143  139  142  144  149   146 #>  [6519,]  127  137  134  144  143  139  142  144  149   146 #>  [6520,]  127  137  134  144  143  139  142  144  149   146 #>  [6521,]  127  137  134  144  143  139  142  144  149   146 #>  [6522,]  127  137  134  144  143  139  142  144  149   146 #>  [6523,]  127  137  134  144  143  139  142  144  149   146 #>  [6524,]  127  137  134  144  143  139  142  144  149   146 #>  [6525,]  127  137  134  144  143  139  142  144  149   146 #>  [6526,]  127  137  134  144  143  139  142  144  149   146 #>  [6527,]  127  137  134  144  143  139  142  144  149   146 #>  [6528,]  127  137  134  144  143  139  142  144  149   146 #>  [6529,]  127  137  134  144  143  139  142  144  149   146 #>  [6530,]  127  137  134  144  143  139  142  144  149   146 #>  [6531,]  127  137  134  144  143  139  142  144  149   146 #>  [6532,]  127  137  134  144  143  139  142  144  149   146 #>  [6533,]  127  137  134  144  143  139  142  144  149   146 #>  [6534,]  127  137  134  144  143  139  142  144  149   146 #>  [6535,]  127  137  134  144  143  139  142  144  149   146 #>  [6536,]  127  137  134  144  143  139  142  144  149   146 #>  [6537,]  127  137  134  144  143  139  142  144  149   146 #>  [6538,]  127  137  134  144  143  139  142  144  149   146 #>  [6539,]  127  137  134  144  143  139  142  144  149   146 #>  [6540,]  127  137  134  144  143  139  142  144  149   146 #>  [6541,]  127  137  134  144  143  139  142  144  149   146 #>  [6542,]  127  137  134  144  143  139  142  144  149   146 #>  [6543,]  127  137  134  144  143  139  142  144  149   146 #>  [6544,]  127  137  134  144  143  139  142  144  149   146 #>  [6545,]  127  137  134  144  143  139  142  144  149   146 #>  [6546,]  127  137  134  144  143  139  142  144  149   146 #>  [6547,]  127  137  134  144  143  139  142  144  149   146 #>  [6548,]  127  137  134  144  143  139  142  144  149   146 #>  [6549,]  127  137  134  144  143  139  142  144  149   146 #>  [6550,]  127  137  134  144  143  139  142  144  149   146 #>  [6551,]  126  136  133  143  142  138  141  143  148   145 #>  [6552,]  127  137  134  144  143  139  142  144  149   146 #>  [6553,]  127  137  134  144  143  139  142  144  149   146 #>  [6554,]  127  137  134  144  143  139  142  144  149   146 #>  [6555,]  127  137  134  144  143  139  142  144  149   146 #>  [6556,]  127  137  134  144  143  139  142  144  149   146 #>  [6557,]  127  137  134  144  143  139  142  144  149   146 #>  [6558,]  127  137  134  144  143  139  142  144  149   146 #>  [6559,]  127  137  134  144  143  139  142  144  149   146 #>  [6560,]  127  137  134  144  143  139  142  144  149   146 #>  [6561,]  127  137  134  144  143  139  142  144  149   146 #>  [6562,]  127  137  134  144  143  139  142  144  149   146 #>  [6563,]  127  137  134  144  143  139  142  144  149   146 #>  [6564,]  127  137  134  144  143  139  142  144  149   146 #>  [6565,]  127  137  134  144  143  139  142  144  149   146 #>  [6566,]  127  137  134  144  143  139  142  144  149   146 #>  [6567,]  127  137  134  144  143  139  142  144  149   146 #>  [6568,]  127  137  134  144  143  139  142  144  149   146 #>  [6569,]  127  137  134  144  143  139  142  144  149   146 #>  [6570,]  127  137  134  144  143  139  142  144  149   146 #>  [6571,]  127  137  134  144  143  139  142  144  149   146 #>  [6572,]  127  137  134  144  143  139  142  144  149   146 #>  [6573,]  127  137  134  144  143  139  142  144  149   146 #>  [6574,]  127  137  134  144  143  139  142  144  149   146 #>  [6575,]  127  137  134  144  143  139  142  144  149   146 #>  [6576,]  127  137  134  144  143  139  142  144  149   146 #>  [6577,]  127  137  134  144  143  139  142  144  149   146 #>  [6578,]  127  137  134  144  143  139  142  144  149   146 #>  [6579,]  127  137  134  144  143  139  142  144  149   146 #>  [6580,]  127  137  134  144  143  139  142  144  149   146 #>  [6581,]  127  137  134  144  143  139  142  144  149   146 #>  [6582,]  127  137  134  144  143  139  142  144  149   146 #>  [6583,]  127  137  134  144  143  139  142  144  149   146 #>  [6584,]  127  137  134  144  143  139  142  144  149   146 #>  [6585,]  126  136  133  143  142  138  141  143  148   145 #>  [6586,]  127  137  134  144  143  139  142  144  149   146 #>  [6587,]  127  137  134  144  143  139  142  144  149   146 #>  [6588,]  127  137  134  144  143  139  142  144  149   146 #>  [6589,]  127  137  134  144  143  139  142  144  149   146 #>  [6590,]  127  137  134  144  143  139  142  144  149   146 #>  [6591,]  126  136  133  143  142  138  141  143  148   145 #>  [6592,]  127  137  134  144  143  139  142  144  149   146 #>  [6593,]  127  137  134  144  143  139  142  144  149   146 #>  [6594,]  127  137  134  144  143  139  142  144  149   146 #>  [6595,]  126  136  133  143  142  138  141  143  148   145 #>  [6596,]  127  137  134  144  143  139  142  144  149   146 #>  [6597,]  127  137  134  144  143  139  142  144  149   146 #>  [6598,]  127  137  134  144  143  139  142  144  149   146 #>  [6599,]  127  137  134  144  143  139  142  144  149   146 #>  [6600,]  127  137  134  144  143  139  142  144  149   146 #>  [6601,]  129  139  135  146  145  141  144  145  153   148 #>  [6602,]  129  139  135  145  144  140  143  146  150   149 #>  [6603,]  129  139  135  146  145  141  144  145  152   147 #>  [6604,]  128  138  135  146  145  141  144  145  152   147 #>  [6605,]  129  139  135  146  145  141  144  145  153   148 #>  [6606,]  129  139  135  145  144  140  143  147  151   149 #>  [6607,]  129  139  135  146  145  141  144  145  152   147 #>  [6608,]  128  138  135  146  145  141  144  145  152   147 #>  [6609,]  128  138  135  146  145  141  144  145  152   147 #>  [6610,]  128  138  135  146  145  141  144  145  153   148 #>  [6611,]  129  139  135  145  144  140  143  146  150   149 #>  [6612,]  129  139  135  145  144  140  143  147  151   149 #>  [6613,]  129  139  135  146  145  141  144  145  152   147 #>  [6614,]  129  139  135  146  145  141  144  145  153   148 #>  [6615,]  129  139  135  145  144  140  143  146  150   149 #>  [6616,]  129  139  135  146  145  141  144  145  152   147 #>  [6617,]  129  139  135  145  144  140  143  146  150   149 #>  [6618,]  129  139  135  146  145  141  144  145  153   148 #>  [6619,]  129  139  135  145  144  140  143  147  151   149 #>  [6620,]  129  139  135  146  145  141  144  145  152   147 #>  [6621,]  129  139  135  146  145  141  144  145  152   147 #>  [6622,]  129  139  135  146  145  141  144  145  153   148 #>  [6623,]  129  139  135  145  144  140  143  146  150   149 #>  [6624,]  129  139  135  146  145  141  144  145  152   147 #>  [6625,]  129  139  135  146  145  141  144  145  152   147 #>  [6626,]  129  139  135  145  144  140  143  146  150   149 #>  [6627,]  129  139  135  146  145  141  144  145  153   148 #>  [6628,]  129  139  135  146  145  141  144  145  152   147 #>  [6629,]  129  139  135  145  144  140  143  146  150   149 #>  [6630,]  129  139  135  145  144  140  143  146  150   149 #>  [6631,]  129  139  135  145  144  140  143  146  150   149 #>  [6632,]  129  139  135  146  145  141  144  145  153   148 #>  [6633,]  129  139  135  146  145  141  144  145  152   147 #>  [6634,]  129  139  135  145  144  140  143  147  151   149 #>  [6635,]  129  139  135  145  144  140  143  146  150   149 #>  [6636,]  129  139  135  146  145  141  144  145  152   147 #>  [6637,]  129  139  135  145  144  140  143  146  150   149 #>  [6638,]  129  139  135  146  145  141  144  145  153   148 #>  [6639,]  129  139  135  146  145  141  144  145  152   147 #>  [6640,]  129  139  135  146  145  141  144  145  152   147 #>  [6641,]  129  139  135  146  145  141  144  145  152   147 #>  [6642,]  129  139  135  145  144  140  143  146  150   149 #>  [6643,]  128  138  135  145  144  140  143  146  150   149 #>  [6644,]  129  139  135  145  144  140  143  146  150   149 #>  [6645,]  129  139  135  146  145  141  144  145  152   147 #>  [6646,]  129  139  135  145  144  140  143  146  150   149 #>  [6647,]  129  139  135  145  144  140  143  146  150   149 #>  [6648,]  129  139  135  145  144  140  143  146  150   149 #>  [6649,]  129  139  135  146  145  141  144  145  152   147 #>  [6650,]  129  139  135  146  145  141  144  145  152   147 #>  [6651,]  128  138  135  146  145  141  144  145  152   147 #>  [6652,]  129  139  135  146  145  141  144  145  153   148 #>  [6653,]  129  139  135  146  145  141  144  145  152   147 #>  [6654,]  129  139  135  146  145  141  144  145  152   147 #>  [6655,]  129  139  135  146  145  141  144  145  152   147 #>  [6656,]  129  139  135  145  144  140  143  146  150   149 #>  [6657,]  129  139  135  146  145  141  144  145  152   147 #>  [6658,]  129  139  135  146  145  141  144  145  153   148 #>  [6659,]  129  139  135  146  145  141  144  145  153   148 #>  [6660,]  128  138  135  145  144  140  143  147  151   149 #>  [6661,]  129  139  135  145  144  140  143  146  150   149 #>  [6662,]  129  139  135  146  145  141  144  145  152   147 #>  [6663,]  129  139  135  145  144  140  143  146  150   149 #>  [6664,]  128  138  135  145  144  140  143  146  150   149 #>  [6665,]  129  139  135  145  144  140  143  147  151   149 #>  [6666,]  129  139  135  145  144  140  143  146  150   149 #>  [6667,]  128  138  135  146  145  141  144  145  152   147 #>  [6668,]  129  139  135  145  144  140  143  146  150   149 #>  [6669,]  129  139  135  146  145  141  144  145  152   147 #>  [6670,]  129  139  135  145  144  140  143  147  151   149 #>  [6671,]  129  139  135  146  145  141  144  145  153   148 #>  [6672,]  129  139  135  146  145  141  144  145  152   147 #>  [6673,]  129  139  135  146  145  141  144  145  152   147 #>  [6674,]  129  139  135  146  145  141  144  145  152   147 #>  [6675,]  129  139  135  145  144  140  143  146  150   149 #>  [6676,]  129  139  135  146  145  141  144  145  152   147 #>  [6677,]  129  139  135  146  145  141  144  145  153   148 #>  [6678,]  129  139  135  145  144  140  143  146  150   149 #>  [6679,]  129  139  135  145  144  140  143  146  150   149 #>  [6680,]  129  139  135  146  145  141  144  145  152   147 #>  [6681,]  129  139  135  145  144  140  143  146  150   149 #>  [6682,]  129  139  135  146  145  141  144  145  152   147 #>  [6683,]  129  139  135  146  145  141  144  145  152   147 #>  [6684,]  129  139  135  146  145  141  144  145  152   147 #>  [6685,]  128  138  135  146  145  141  144  145  152   147 #>  [6686,]  129  139  135  146  145  141  144  145  152   147 #>  [6687,]  129  139  135  146  145  141  144  145  153   148 #>  [6688,]  129  139  135  146  145  141  144  145  152   147 #>  [6689,]  129  139  135  146  145  141  144  145  152   147 #>  [6690,]  129  139  135  146  145  141  144  145  153   148 #>  [6691,]  128  138  135  146  145  141  144  145  153   148 #>  [6692,]  129  139  135  145  144  140  143  146  150   149 #>  [6693,]  129  139  135  146  145  141  144  145  152   147 #>  [6694,]  129  139  135  145  144  140  143  146  150   149 #>  [6695,]  128  138  135  145  144  140  143  146  150   149 #>  [6696,]  129  139  135  145  144  140  143  146  150   149 #>  [6697,]  129  139  135  146  145  141  144  145  152   147 #>  [6698,]  129  139  135  146  145  141  144  145  152   147 #>  [6699,]  129  139  135  146  145  141  144  145  152   147 #>  [6700,]  129  139  135  145  144  140  143  146  150   149 #>  [6701,]  130  140  136  147  146  144  146  149  155   151 #>  [6702,]  131  141  137  148  147  142  145  148  154   150 #>  [6703,]  130  140  136  147  146  143  146  149  155   151 #>  [6704,]  131  141  137  148  147  142  145  148  154   150 #>  [6705,]  131  141  137  148  147  142  145  148  154   150 #>  [6706,]  130  140  136  147  146  143  146  149  155   151 #>  [6707,]  131  141  137  148  147  142  145  148  154   150 #>  [6708,]  131  141  137  148  147  142  145  148  154   150 #>  [6709,]  131  141  137  148  147  142  145  148  154   150 #>  [6710,]  131  141  137  148  147  142  145  148  154   150 #>  [6711,]  130  140  136  147  146  144  146  149  155   151 #>  [6712,]  131  141  137  148  147  142  145  148  154   150 #>  [6713,]  131  141  137  148  147  142  145  148  154   150 #>  [6714,]  130  140  136  147  146  144  146  149  155   151 #>  [6715,]  131  141  137  148  147  142  145  148  154   150 #>  [6716,]  130  140  136  147  146  143  146  149  155   151 #>  [6717,]  131  141  137  148  147  142  145  148  154   150 #>  [6718,]  131  141  137  148  147  142  145  148  154   150 #>  [6719,]  130  140  136  147  146  143  146  149  155   151 #>  [6720,]  131  141  137  148  147  142  145  148  154   150 #>  [6721,]  131  141  137  148  147  142  145  148  154   150 #>  [6722,]  131  141  137  148  147  142  145  148  154   150 #>  [6723,]  131  141  137  148  147  142  145  148  154   150 #>  [6724,]  131  141  137  148  147  142  145  148  154   150 #>  [6725,]  131  141  137  148  147  142  145  148  154   150 #>  [6726,]  130  140  136  147  146  144  146  149  155   151 #>  [6727,]  131  141  137  148  147  142  145  148  154   150 #>  [6728,]  130  140  136  147  146  143  146  149  155   151 #>  [6729,]  131  141  137  148  147  142  145  148  154   150 #>  [6730,]  131  141  137  148  147  142  145  148  154   150 #>  [6731,]  131  141  137  148  147  142  145  148  154   150 #>  [6732,]  131  141  137  148  147  142  145  148  154   150 #>  [6733,]  131  141  137  148  147  142  145  148  154   150 #>  [6734,]  130  140  136  147  146  143  146  149  155   151 #>  [6735,]  130  140  136  147  146  143  146  149  155   151 #>  [6736,]  131  141  137  148  147  142  145  148  154   150 #>  [6737,]  130  140  136  147  146  143  146  149  155   151 #>  [6738,]  130  140  136  147  146  144  146  149  155   151 #>  [6739,]  131  141  137  148  147  142  145  148  154   150 #>  [6740,]  131  141  137  148  147  142  145  148  154   150 #>  [6741,]  131  141  137  148  147  142  145  148  154   150 #>  [6742,]  130  140  136  147  146  143  146  149  155   151 #>  [6743,]  131  141  137  148  147  142  145  148  154   150 #>  [6744,]  131  141  137  148  147  142  145  148  154   150 #>  [6745,]  130  140  136  147  146  143  146  149  155   151 #>  [6746,]  131  141  137  148  147  142  145  148  154   150 #>  [6747,]  131  141  137  148  147  142  145  148  154   150 #>  [6748,]  131  141  137  148  147  142  145  148  154   150 #>  [6749,]  130  140  136  147  146  143  146  149  155   151 #>  [6750,]  131  141  137  148  147  142  145  148  154   150 #>  [6751,]  131  141  137  148  147  142  145  148  154   150 #>  [6752,]  130  140  136  147  146  144  146  149  155   151 #>  [6753,]  131  141  137  148  147  142  145  148  154   150 #>  [6754,]  131  141  137  148  147  142  145  148  154   150 #>  [6755,]  131  141  137  148  147  142  145  148  154   150 #>  [6756,]  131  141  137  148  147  142  145  148  154   150 #>  [6757,]  131  141  137  148  147  142  145  148  154   150 #>  [6758,]  131  141  137  148  147  142  145  148  154   150 #>  [6759,]  131  141  137  148  147  142  145  148  154   150 #>  [6760,]  131  141  137  148  147  142  145  148  154   150 #>  [6761,]  131  141  137  148  147  142  145  148  154   150 #>  [6762,]  131  141  137  148  147  142  145  148  154   150 #>  [6763,]  131  141  137  148  147  142  145  148  154   150 #>  [6764,]  130  140  136  147  146  143  146  149  155   151 #>  [6765,]  131  141  137  148  147  142  145  148  154   150 #>  [6766,]  131  141  137  148  147  142  145  148  154   150 #>  [6767,]  131  141  137  148  147  142  145  148  154   150 #>  [6768,]  130  140  136  147  146  144  146  149  155   151 #>  [6769,]  131  141  137  148  147  142  145  148  154   150 #>  [6770,]  131  141  137  148  147  142  145  148  154   150 #>  [6771,]  131  141  137  148  147  142  145  148  154   150 #>  [6772,]  130  140  136  147  146  143  146  149  155   151 #>  [6773,]  130  140  136  147  146  143  146  149  155   151 #>  [6774,]  131  141  137  148  147  142  145  148  154   150 #>  [6775,]  131  141  137  148  147  142  145  148  154   150 #>  [6776,]  131  141  137  148  147  142  145  148  154   150 #>  [6777,]  130  140  136  147  146  144  146  149  155   151 #>  [6778,]  131  141  137  148  147  142  145  148  154   150 #>  [6779,]  131  141  137  148  147  142  145  148  154   150 #>  [6780,]  131  141  137  148  147  142  145  148  154   150 #>  [6781,]  131  141  137  148  147  142  145  148  154   150 #>  [6782,]  131  141  137  148  147  142  145  148  154   150 #>  [6783,]  131  141  137  148  147  142  145  148  154   150 #>  [6784,]  131  141  137  148  147  142  145  148  154   150 #>  [6785,]  131  141  137  148  147  142  145  148  154   150 #>  [6786,]  131  141  137  148  147  142  145  148  154   150 #>  [6787,]  131  141  137  148  147  142  145  148  154   150 #>  [6788,]  131  141  137  148  147  142  145  148  154   150 #>  [6789,]  130  140  136  147  146  143  146  149  155   151 #>  [6790,]  131  141  137  148  147  142  145  148  154   150 #>  [6791,]  131  141  137  148  147  142  145  148  154   150 #>  [6792,]  131  141  137  148  147  142  145  148  154   150 #>  [6793,]  131  141  137  148  147  142  145  148  154   150 #>  [6794,]  130  140  136  147  146  143  146  149  155   151 #>  [6795,]  131  141  137  148  147  142  145  148  154   150 #>  [6796,]  130  140  136  147  146  144  146  149  155   151 #>  [6797,]  130  140  136  147  146  143  146  149  155   151 #>  [6798,]  131  141  137  148  147  142  145  148  154   150 #>  [6799,]  131  141  137  148  147  142  145  148  154   150 #>  [6800,]  130  140  136  147  146  144  146  149  155   151 #>  [6801,]  133  143  139  150  149  146  148  151  157   153 #>  [6802,]  133  143  139  150  149  146  148  151  157   153 #>  [6803,]  133  143  139  150  149  146  148  151  157   153 #>  [6804,]  133  143  139  150  149  146  148  151  157   153 #>  [6805,]  133  143  140  150  149  146  148  151  157   153 #>  [6806,]  133  143  139  150  149  146  148  151  157   153 #>  [6807,]  133  143  139  150  149  146  148  151  157   153 #>  [6808,]  133  143  139  150  149  146  148  151  157   153 #>  [6809,]  133  143  139  150  149  146  148  151  157   153 #>  [6810,]  133  143  139  150  149  146  148  151  157   153 #>  [6811,]  133  143  139  150  149  146  148  151  157   153 #>  [6812,]  133  143  139  150  149  146  148  151  157   153 #>  [6813,]  133  143  139  150  149  146  148  151  157   153 #>  [6814,]  133  143  139  150  149  146  148  151  157   153 #>  [6815,]  133  143  140  150  149  146  148  151  157   153 #>  [6816,]  133  143  139  150  149  146  148  151  157   153 #>  [6817,]  133  143  139  150  149  146  148  151  157   153 #>  [6818,]  133  143  140  150  149  146  148  151  157   153 #>  [6819,]  133  143  139  150  149  146  148  151  157   153 #>  [6820,]  132  142  138  149  148  145  147  150  156   152 #>  [6821,]  132  142  138  149  148  145  147  150  156   152 #>  [6822,]  133  143  139  150  149  146  148  151  157   153 #>  [6823,]  133  143  139  150  149  146  148  151  157   153 #>  [6824,]  133  143  139  150  149  146  148  151  157   153 #>  [6825,]  132  142  138  149  148  145  147  150  156   152 #>  [6826,]  133  143  139  150  149  146  148  151  157   153 #>  [6827,]  133  143  140  150  149  146  148  151  157   153 #>  [6828,]  133  143  139  150  149  146  148  151  157   153 #>  [6829,]  133  143  139  150  149  146  148  151  157   153 #>  [6830,]  133  143  139  150  149  146  148  151  157   153 #>  [6831,]  133  143  139  150  149  146  148  151  157   153 #>  [6832,]  133  143  140  150  149  146  148  151  157   153 #>  [6833,]  133  143  139  150  149  146  148  151  157   153 #>  [6834,]  133  143  139  150  149  146  148  151  157   153 #>  [6835,]  133  143  139  150  149  146  148  151  157   153 #>  [6836,]  133  143  139  150  149  146  148  151  157   153 #>  [6837,]  133  143  139  150  149  146  148  151  157   153 #>  [6838,]  133  143  139  150  149  146  148  151  157   153 #>  [6839,]  133  143  139  150  149  146  148  151  157   153 #>  [6840,]  133  143  139  150  149  146  148  151  157   153 #>  [6841,]  133  143  139  150  149  146  148  151  157   153 #>  [6842,]  133  143  139  150  149  146  148  151  157   153 #>  [6843,]  133  143  139  150  149  146  148  151  157   153 #>  [6844,]  133  143  139  150  149  146  148  151  157   153 #>  [6845,]  133  143  139  150  149  146  148  151  157   153 #>  [6846,]  133  143  139  150  149  146  148  151  157   153 #>  [6847,]  133  143  139  150  149  146  148  151  157   153 #>  [6848,]  133  143  139  150  149  146  148  151  157   153 #>  [6849,]  133  143  139  150  149  146  148  151  157   153 #>  [6850,]  133  143  139  150  149  146  148  151  157   153 #>  [6851,]  133  143  139  150  149  146  148  151  157   153 #>  [6852,]  133  143  139  150  149  146  148  151  157   153 #>  [6853,]  133  143  139  150  149  146  148  151  157   153 #>  [6854,]  133  143  139  150  149  146  148  151  157   153 #>  [6855,]  133  143  139  150  149  146  148  151  157   153 #>  [6856,]  132  142  138  149  148  145  147  150  156   152 #>  [6857,]  133  143  139  150  149  146  148  151  157   153 #>  [6858,]  133  143  139  150  149  146  148  151  157   153 #>  [6859,]  133  143  139  150  149  146  148  151  157   153 #>  [6860,]  133  143  139  150  149  146  148  151  157   153 #>  [6861,]  133  143  139  150  149  146  148  151  157   153 #>  [6862,]  133  143  139  150  149  146  148  151  157   153 #>  [6863,]  133  143  139  150  149  146  148  151  157   153 #>  [6864,]  133  143  139  150  149  146  148  151  157   153 #>  [6865,]  132  142  138  149  148  145  147  150  156   152 #>  [6866,]  133  143  139  150  149  146  148  151  157   153 #>  [6867,]  133  143  139  150  149  146  148  151  157   153 #>  [6868,]  133  143  139  150  149  146  148  151  157   153 #>  [6869,]  133  143  139  150  149  146  148  151  157   153 #>  [6870,]  133  143  139  150  149  146  148  151  157   153 #>  [6871,]  133  143  140  150  149  146  148  151  157   153 #>  [6872,]  133  143  139  150  149  146  148  151  157   153 #>  [6873,]  133  143  139  150  149  146  148  151  157   153 #>  [6874,]  132  142  138  149  148  145  147  150  156   152 #>  [6875,]  133  143  140  150  149  146  148  151  157   153 #>  [6876,]  133  143  139  150  149  146  148  151  157   153 #>  [6877,]  133  143  139  150  149  146  148  151  157   153 #>  [6878,]  133  143  139  150  149  146  148  151  157   153 #>  [6879,]  133  143  139  150  149  146  148  151  157   153 #>  [6880,]  132  142  138  149  148  145  147  150  156   152 #>  [6881,]  133  143  139  150  149  146  148  151  157   153 #>  [6882,]  133  143  139  150  149  146  148  151  157   153 #>  [6883,]  133  143  139  150  149  146  148  151  157   153 #>  [6884,]  133  143  139  150  149  146  148  151  157   153 #>  [6885,]  132  142  138  149  148  145  147  150  156   152 #>  [6886,]  132  142  138  149  148  145  147  150  156   152 #>  [6887,]  133  143  139  150  149  146  148  151  157   153 #>  [6888,]  133  143  139  150  149  146  148  151  157   153 #>  [6889,]  132  142  138  149  148  145  147  150  156   152 #>  [6890,]  133  143  139  150  149  146  148  151  157   153 #>  [6891,]  133  143  140  150  149  146  148  151  157   153 #>  [6892,]  133  143  139  150  149  146  148  151  157   153 #>  [6893,]  133  143  139  150  149  146  148  151  157   153 #>  [6894,]  133  143  139  150  149  146  148  151  157   153 #>  [6895,]  133  143  140  150  149  146  148  151  157   153 #>  [6896,]  133  143  139  150  149  146  148  151  157   153 #>  [6897,]  133  143  139  150  149  146  148  151  157   153 #>  [6898,]  133  143  139  150  149  146  148  151  157   153 #>  [6899,]  133  143  139  150  149  146  148  151  157   153 #>  [6900,]  133  143  140  150  149  146  148  151  157   153 #>  [6901,]  135  145  142  152  151  148  150  153  159   154 #>  [6902,]  134  144  141  151  150  147  149  152  158   154 #>  [6903,]  135  145  142  152  151  148  150  153  159   154 #>  [6904,]  135  145  142  152  151  148  150  153  159   154 #>  [6905,]  135  145  142  152  151  148  150  153  159   154 #>  [6906,]  134  144  141  151  150  147  149  152  158   154 #>  [6907,]  135  145  142  152  151  148  150  153  159   154 #>  [6908,]  135  145  142  152  151  148  150  153  159   154 #>  [6909,]  135  145  142  152  151  148  150  153  159   154 #>  [6910,]  135  145  142  152  151  148  150  153  159   154 #>  [6911,]  134  144  141  151  150  147  149  152  158   154 #>  [6912,]  134  144  141  151  150  147  149  152  158   154 #>  [6913,]  135  145  142  152  151  148  150  153  159   154 #>  [6914,]  135  145  142  152  151  148  150  153  159   154 #>  [6915,]  134  144  141  151  150  147  149  152  158   154 #>  [6916,]  135  145  142  152  151  148  150  153  159   154 #>  [6917,]  134  144  141  151  150  147  149  152  158   154 #>  [6918,]  134  144  141  151  150  147  149  152  158   154 #>  [6919,]  134  144  141  151  150  147  149  152  158   154 #>  [6920,]  135  145  142  152  151  148  150  153  159   154 #>  [6921,]  134  144  141  151  150  147  149  152  158   154 #>  [6922,]  135  145  142  152  151  148  150  153  159   154 #>  [6923,]  134  144  141  151  150  147  149  152  158   154 #>  [6924,]  135  146  143  153  151  148  150  153  159   154 #>  [6925,]  135  145  142  152  151  148  150  153  159   154 #>  [6926,]  134  144  141  151  150  147  149  152  158   154 #>  [6927,]  135  145  142  152  151  148  150  153  159   154 #>  [6928,]  135  146  143  153  151  148  150  153  159   154 #>  [6929,]  134  144  141  151  150  147  149  152  158   154 #>  [6930,]  134  144  141  151  150  147  149  152  158   154 #>  [6931,]  134  144  141  151  150  147  149  152  158   154 #>  [6932,]  134  144  141  151  150  147  149  152  158   154 #>  [6933,]  135  145  142  152  151  148  150  153  159   154 #>  [6934,]  134  144  141  151  150  147  149  152  158   154 #>  [6935,]  134  144  141  151  150  147  149  152  158   154 #>  [6936,]  135  145  142  152  151  148  150  153  159   154 #>  [6937,]  134  144  141  151  150  147  149  152  158   154 #>  [6938,]  134  144  141  151  150  147  149  152  158   154 #>  [6939,]  135  145  142  152  151  148  150  153  159   154 #>  [6940,]  135  145  142  152  151  148  150  153  159   154 #>  [6941,]  135  145  142  152  151  148  150  153  159   154 #>  [6942,]  134  144  141  151  150  147  149  152  158   154 #>  [6943,]  134  144  141  151  150  147  149  152  158   154 #>  [6944,]  134  144  141  151  150  147  149  152  158   154 #>  [6945,]  135  145  142  152  151  148  150  153  159   154 #>  [6946,]  134  144  141  151  150  147  149  152  158   154 #>  [6947,]  134  144  141  151  150  147  149  152  158   154 #>  [6948,]  134  144  141  151  150  147  149  152  158   154 #>  [6949,]  135  145  142  152  151  148  150  153  159   154 #>  [6950,]  135  145  142  152  151  148  150  153  159   154 #>  [6951,]  134  144  141  151  150  147  149  152  158   154 #>  [6952,]  135  146  143  153  151  148  150  153  159   154 #>  [6953,]  135  145  142  152  151  148  150  153  159   154 #>  [6954,]  135  145  142  152  151  148  150  153  159   154 #>  [6955,]  135  145  142  152  151  148  150  153  159   154 #>  [6956,]  134  144  141  151  150  147  149  152  158   154 #>  [6957,]  135  145  142  152  151  148  150  153  159   154 #>  [6958,]  135  145  142  152  151  148  150  153  159   154 #>  [6959,]  135  145  142  152  151  148  150  153  159   154 #>  [6960,]  134  144  141  151  150  147  149  152  158   154 #>  [6961,]  134  144  141  151  150  147  149  152  158   154 #>  [6962,]  134  144  141  151  150  147  149  152  158   154 #>  [6963,]  134  144  141  151  150  147  149  152  158   154 #>  [6964,]  134  144  141  151  150  147  149  152  158   154 #>  [6965,]  134  144  141  151  150  147  149  152  158   154 #>  [6966,]  134  144  141  151  150  147  149  152  158   154 #>  [6967,]  135  145  142  152  151  148  150  153  159   154 #>  [6968,]  134  144  141  151  150  147  149  152  158   154 #>  [6969,]  134  144  141  151  150  147  149  152  158   154 #>  [6970,]  134  144  141  151  150  147  149  152  158   154 #>  [6971,]  135  145  142  152  151  148  150  153  159   154 #>  [6972,]  135  145  142  152  151  148  150  153  159   154 #>  [6973,]  135  145  142  152  151  148  150  153  159   154 #>  [6974,]  135  145  142  152  151  148  150  153  159   154 #>  [6975,]  134  144  141  151  150  147  149  152  158   154 #>  [6976,]  135  146  143  153  151  148  150  153  159   154 #>  [6977,]  135  145  142  152  151  148  150  153  159   154 #>  [6978,]  134  144  141  151  150  147  149  152  158   154 #>  [6979,]  134  144  141  151  150  147  149  152  158   154 #>  [6980,]  135  145  142  152  151  148  150  153  159   154 #>  [6981,]  134  144  141  151  150  147  149  152  158   154 #>  [6982,]  134  144  141  151  150  147  149  152  158   154 #>  [6983,]  135  145  142  152  151  148  150  153  159   154 #>  [6984,]  135  145  142  152  151  148  150  153  159   154 #>  [6985,]  135  145  142  152  151  148  150  153  159   154 #>  [6986,]  135  146  143  153  151  148  150  153  159   154 #>  [6987,]  135  145  142  152  151  148  150  153  159   154 #>  [6988,]  135  145  142  152  151  148  150  153  159   154 #>  [6989,]  134  144  141  151  150  147  149  152  158   154 #>  [6990,]  135  145  142  152  151  148  150  153  159   154 #>  [6991,]  135  145  142  152  151  148  150  153  159   154 #>  [6992,]  134  144  141  151  150  147  149  152  158   154 #>  [6993,]  134  144  141  151  150  147  149  152  158   154 #>  [6994,]  134  144  141  151  150  147  149  152  158   154 #>  [6995,]  134  144  141  151  150  147  149  152  158   154 #>  [6996,]  134  144  141  151  150  147  149  152  158   154 #>  [6997,]  134  144  141  151  150  147  149  152  158   154 #>  [6998,]  134  144  141  151  150  147  149  152  158   154 #>  [6999,]  135  145  142  152  151  148  150  153  159   154 #>  [7000,]  134  144  141  151  150  147  149  152  158   154 #>  [7001,]  137  148  145  155  153  150  152  155  161   156 #>  [7002,]  137  148  145  155  153  150  152  155  161   156 #>  [7003,]  137  148  145  155  153  150  152  155  161   156 #>  [7004,]  136  147  144  154  152  149  151  154  160   155 #>  [7005,]  137  148  145  155  153  150  152  155  161   156 #>  [7006,]  137  148  145  155  153  150  152  155  161   156 #>  [7007,]  137  148  145  155  153  150  152  155  161   156 #>  [7008,]  136  147  144  154  152  149  151  154  160   155 #>  [7009,]  136  147  144  154  152  149  151  154  160   155 #>  [7010,]  136  147  144  154  152  149  151  154  160   155 #>  [7011,]  137  148  145  155  153  150  152  155  161   156 #>  [7012,]  137  148  145  155  153  150  152  155  161   156 #>  [7013,]  137  148  145  155  153  150  152  155  161   156 #>  [7014,]  137  148  145  155  153  150  152  155  161   156 #>  [7015,]  137  148  145  155  153  150  152  155  161   156 #>  [7016,]  137  148  145  155  153  150  152  155  161   156 #>  [7017,]  137  148  145  155  153  150  152  155  161   156 #>  [7018,]  136  147  144  154  152  149  151  154  160   155 #>  [7019,]  137  148  145  155  153  150  152  155  161   156 #>  [7020,]  136  147  144  154  152  149  151  154  160   155 #>  [7021,]  137  148  145  155  153  150  152  155  161   156 #>  [7022,]  137  148  145  155  153  150  152  155  161   156 #>  [7023,]  137  148  145  155  153  150  152  155  161   156 #>  [7024,]  136  147  144  154  152  149  151  154  160   155 #>  [7025,]  137  148  145  155  153  150  152  155  161   156 #>  [7026,]  137  148  145  155  153  150  152  155  161   156 #>  [7027,]  137  148  145  155  153  150  152  155  161   156 #>  [7028,]  137  148  145  155  153  150  152  155  161   156 #>  [7029,]  137  148  145  155  153  150  152  155  161   156 #>  [7030,]  136  147  144  154  152  149  151  154  160   155 #>  [7031,]  137  148  145  155  153  150  152  155  161   156 #>  [7032,]  137  148  145  155  153  150  152  155  161   156 #>  [7033,]  137  148  145  155  153  150  152  155  161   156 #>  [7034,]  137  148  145  155  153  150  152  155  161   156 #>  [7035,]  137  148  145  155  153  150  152  155  161   156 #>  [7036,]  137  148  145  155  153  150  152  155  161   156 #>  [7037,]  137  148  145  155  153  150  152  155  161   156 #>  [7038,]  137  148  145  155  153  150  152  155  161   156 #>  [7039,]  136  147  144  154  152  149  151  154  160   155 #>  [7040,]  137  148  145  155  153  150  152  155  161   156 #>  [7041,]  137  148  145  155  153  150  152  155  161   156 #>  [7042,]  137  148  145  155  153  150  152  155  161   156 #>  [7043,]  136  147  144  154  152  149  151  154  160   155 #>  [7044,]  137  148  145  155  153  150  152  155  161   156 #>  [7045,]  136  147  144  154  152  149  151  154  160   155 #>  [7046,]  137  148  145  155  153  150  152  155  161   156 #>  [7047,]  137  148  145  155  153  150  152  155  161   156 #>  [7048,]  137  148  145  155  153  150  152  155  161   156 #>  [7049,]  136  147  144  154  152  149  151  154  160   155 #>  [7050,]  137  148  145  155  153  150  152  155  161   156 #>  [7051,]  136  147  144  154  152  149  151  154  160   155 #>  [7052,]  137  148  145  155  153  150  152  155  161   156 #>  [7053,]  136  147  144  154  152  149  151  154  160   155 #>  [7054,]  137  148  145  155  153  150  152  155  161   156 #>  [7055,]  137  148  145  155  153  150  152  155  161   156 #>  [7056,]  136  147  144  154  152  149  151  154  160   155 #>  [7057,]  137  148  145  155  153  150  152  155  161   156 #>  [7058,]  137  148  145  155  153  150  152  155  161   156 #>  [7059,]  137  148  145  155  153  150  152  155  161   156 #>  [7060,]  136  147  144  154  152  149  151  154  160   155 #>  [7061,]  137  148  145  155  153  150  152  155  161   156 #>  [7062,]  137  148  145  155  153  150  152  155  161   156 #>  [7063,]  137  148  145  155  153  150  152  155  161   156 #>  [7064,]  136  147  144  154  152  149  151  154  160   155 #>  [7065,]  136  147  144  154  152  149  151  154  160   155 #>  [7066,]  136  147  144  154  152  149  151  154  160   155 #>  [7067,]  136  147  144  154  152  149  151  154  160   155 #>  [7068,]  137  148  145  155  153  150  152  155  161   156 #>  [7069,]  137  148  145  155  153  150  152  155  161   156 #>  [7070,]  137  148  145  155  153  150  152  155  161   156 #>  [7071,]  137  148  145  155  153  150  152  155  161   156 #>  [7072,]  137  148  145  155  153  150  152  155  161   156 #>  [7073,]  137  148  145  155  153  150  152  155  161   156 #>  [7074,]  137  148  145  155  153  150  152  155  161   156 #>  [7075,]  137  148  145  155  153  150  152  155  161   156 #>  [7076,]  137  148  145  155  153  150  152  155  161   156 #>  [7077,]  137  148  145  155  153  150  152  155  161   156 #>  [7078,]  136  147  144  154  152  149  151  154  160   155 #>  [7079,]  137  148  145  155  153  150  152  155  161   156 #>  [7080,]  137  148  145  155  153  150  152  155  161   156 #>  [7081,]  137  148  145  155  153  150  152  155  161   156 #>  [7082,]  137  148  145  155  153  150  152  155  161   156 #>  [7083,]  137  148  145  155  153  150  152  155  161   156 #>  [7084,]  137  148  145  155  153  150  152  155  161   156 #>  [7085,]  136  147  144  154  152  149  151  154  160   155 #>  [7086,]  137  148  145  155  153  150  152  155  161   156 #>  [7087,]  137  148  145  155  153  150  152  155  161   156 #>  [7088,]  137  148  145  155  153  150  152  155  161   156 #>  [7089,]  136  147  144  154  152  149  151  154  160   155 #>  [7090,]  137  148  145  155  153  150  152  155  161   156 #>  [7091,]  136  147  144  154  152  149  151  154  160   155 #>  [7092,]  137  148  145  155  153  150  152  155  161   156 #>  [7093,]  137  148  145  155  153  150  152  155  161   156 #>  [7094,]  137  148  145  155  153  150  152  155  161   156 #>  [7095,]  136  147  144  154  152  149  151  154  160   155 #>  [7096,]  137  148  145  155  153  150  152  155  161   156 #>  [7097,]  137  148  145  155  153  150  152  155  161   156 #>  [7098,]  137  148  145  155  153  150  152  155  161   156 #>  [7099,]  137  148  145  155  153  150  152  155  161   156 #>  [7100,]  137  148  145  155  153  150  152  155  161   156 #>  [7101,]  139  151  148  157  155  152  153  157  163   158 #>  [7102,]  138  149  146  156  154  151  153  156  162   157 #>  [7103,]  138  149  146  156  154  151  153  156  162   157 #>  [7104,]  138  149  146  156  154  151  153  157  163   158 #>  [7105,]  139  150  147  157  155  152  153  157  163   158 #>  [7106,]  138  149  146  156  154  151  153  157  163   158 #>  [7107,]  138  149  146  156  154  151  153  156  162   157 #>  [7108,]  138  149  146  156  154  151  153  157  163   158 #>  [7109,]  138  149  146  156  154  151  153  157  163   158 #>  [7110,]  139  151  148  157  155  152  153  156  162   157 #>  [7111,]  139  150  147  157  155  152  153  157  163   158 #>  [7112,]  139  150  147  157  155  152  153  157  163   158 #>  [7113,]  138  149  146  156  154  151  153  156  162   157 #>  [7114,]  139  150  147  157  155  152  153  157  163   158 #>  [7115,]  139  151  148  157  155  152  153  157  163   158 #>  [7116,]  138  149  146  156  154  151  153  156  162   157 #>  [7117,]  139  151  148  157  155  152  153  157  163   158 #>  [7118,]  139  151  148  157  155  152  153  156  162   157 #>  [7119,]  138  149  146  156  154  151  153  156  162   157 #>  [7120,]  138  149  146  156  154  151  153  157  163   158 #>  [7121,]  138  149  146  156  154  151  153  156  162   157 #>  [7122,]  139  150  147  157  155  152  153  156  162   157 #>  [7123,]  138  149  146  156  154  151  153  156  162   157 #>  [7124,]  138  149  146  156  154  151  153  156  162   157 #>  [7125,]  138  149  146  156  154  151  153  157  163   158 #>  [7126,]  139  150  147  157  155  152  153  157  163   158 #>  [7127,]  139  151  148  157  155  152  153  157  163   158 #>  [7128,]  138  149  146  156  154  151  153  157  163   158 #>  [7129,]  138  149  146  156  154  151  153  156  162   157 #>  [7130,]  138  149  146  156  154  151  153  156  162   157 #>  [7131,]  139  150  147  157  155  152  153  156  162   157 #>  [7132,]  139  150  147  157  155  152  153  156  162   157 #>  [7133,]  138  149  146  156  154  151  153  157  163   158 #>  [7134,]  138  149  146  156  154  151  153  156  162   157 #>  [7135,]  138  149  146  156  154  151  153  156  162   157 #>  [7136,]  138  149  146  156  154  151  153  156  162   157 #>  [7137,]  138  149  146  156  154  151  153  156  162   157 #>  [7138,]  139  150  147  157  155  152  153  157  163   158 #>  [7139,]  139  151  148  157  155  152  153  156  162   157 #>  [7140,]  138  149  146  156  154  151  153  156  162   157 #>  [7141,]  138  149  146  156  154  151  153  157  163   158 #>  [7142,]  138  149  146  156  154  151  153  157  163   158 #>  [7143,]  139  151  148  157  155  152  153  157  163   158 #>  [7144,]  138  149  146  156  154  151  153  156  162   157 #>  [7145,]  138  149  146  156  154  151  153  157  163   158 #>  [7146,]  138  149  146  156  154  151  153  157  163   158 #>  [7147,]  139  151  148  157  155  152  153  156  162   157 #>  [7148,]  138  149  146  156  154  151  153  156  162   157 #>  [7149,]  138  149  146  156  154  151  153  156  162   157 #>  [7150,]  138  149  146  156  154  151  153  157  163   158 #>  [7151,]  138  149  146  156  154  151  153  157  163   158 #>  [7152,]  139  150  147  157  155  152  153  157  163   158 #>  [7153,]  138  149  146  156  154  151  153  157  163   158 #>  [7154,]  138  149  146  156  154  151  153  156  162   157 #>  [7155,]  138  149  146  156  154  151  153  157  163   158 #>  [7156,]  138  149  146  156  154  151  153  157  163   158 #>  [7157,]  138  149  146  156  154  151  153  157  163   158 #>  [7158,]  139  150  147  157  155  152  153  157  163   158 #>  [7159,]  139  150  147  157  155  152  153  156  162   157 #>  [7160,]  138  149  146  156  154  151  153  157  163   158 #>  [7161,]  139  151  148  157  155  152  153  157  163   158 #>  [7162,]  138  149  146  156  154  151  153  156  162   157 #>  [7163,]  138  149  146  156  154  151  153  157  163   158 #>  [7164,]  138  149  146  156  154  151  153  157  163   158 #>  [7165,]  138  149  146  156  154  151  153  157  163   158 #>  [7166,]  139  150  147  157  155  152  153  157  163   158 #>  [7167,]  138  149  146  156  154  151  153  157  163   158 #>  [7168,]  139  150  147  157  155  152  153  157  163   158 #>  [7169,]  138  149  146  156  154  151  153  157  163   158 #>  [7170,]  139  151  148  157  155  152  153  156  162   157 #>  [7171,]  139  151  148  157  155  152  153  157  163   158 #>  [7172,]  138  149  146  156  154  151  153  157  163   158 #>  [7173,]  138  149  146  156  154  151  153  157  163   158 #>  [7174,]  138  149  146  156  154  151  153  157  163   158 #>  [7175,]  139  151  148  157  155  152  153  157  163   158 #>  [7176,]  138  149  146  156  154  151  153  157  163   158 #>  [7177,]  139  151  148  157  155  152  153  156  162   157 #>  [7178,]  138  149  146  156  154  151  153  157  163   158 #>  [7179,]  139  151  148  157  155  152  153  156  162   157 #>  [7180,]  138  149  146  156  154  151  153  156  162   157 #>  [7181,]  138  149  146  156  154  151  153  157  163   158 #>  [7182,]  138  149  146  156  154  151  153  157  163   158 #>  [7183,]  139  150  147  157  155  152  153  156  162   157 #>  [7184,]  138  149  146  156  154  151  153  157  163   158 #>  [7185,]  138  149  146  156  154  151  153  156  162   157 #>  [7186,]  138  149  146  156  154  151  153  156  162   157 #>  [7187,]  139  151  148  157  155  152  153  157  163   158 #>  [7188,]  138  149  146  156  154  151  153  157  163   158 #>  [7189,]  138  149  146  156  154  151  153  157  163   158 #>  [7190,]  139  151  148  157  155  152  153  157  163   158 #>  [7191,]  139  150  147  157  155  152  153  157  163   158 #>  [7192,]  139  150  147  157  155  152  153  157  163   158 #>  [7193,]  138  149  146  156  154  151  153  156  162   157 #>  [7194,]  138  149  146  156  154  151  153  157  163   158 #>  [7195,]  139  151  148  157  155  152  153  156  162   157 #>  [7196,]  139  151  148  157  155  152  153  157  163   158 #>  [7197,]  138  149  146  156  154  151  153  157  163   158 #>  [7198,]  138  149  146  156  154  151  153  156  162   157 #>  [7199,]  138  149  146  156  154  151  153  157  163   158 #>  [7200,]  139  151  148  157  155  152  153  156  162   157 #>  [7201,]  141  153  150  159  157  154  155  159  165   160 #>  [7202,]  140  152  149  158  156  153  154  158  164   159 #>  [7203,]  140  152  149  158  156  153  154  158  164   159 #>  [7204,]  140  152  149  158  156  153  154  158  164   159 #>  [7205,]  141  153  150  159  157  154  155  159  165   160 #>  [7206,]  140  152  149  158  156  153  154  158  164   159 #>  [7207,]  140  152  149  158  156  153  154  158  164   159 #>  [7208,]  140  152  149  158  156  153  154  158  164   159 #>  [7209,]  141  153  150  159  157  154  155  159  165   160 #>  [7210,]  140  152  149  158  156  153  154  158  164   159 #>  [7211,]  141  153  150  159  157  154  155  159  165   160 #>  [7212,]  140  152  149  158  156  153  154  158  164   159 #>  [7213,]  141  153  150  159  157  154  155  159  165   160 #>  [7214,]  140  152  149  158  156  153  154  158  164   159 #>  [7215,]  140  152  149  158  156  153  154  158  164   159 #>  [7216,]  140  152  149  158  156  153  154  158  164   159 #>  [7217,]  141  153  150  159  157  154  155  159  165   160 #>  [7218,]  141  153  150  159  157  154  155  159  165   160 #>  [7219,]  141  153  150  159  157  154  155  159  165   160 #>  [7220,]  141  153  150  159  157  154  155  159  165   160 #>  [7221,]  141  153  150  159  157  154  155  159  165   160 #>  [7222,]  141  153  150  159  157  154  155  159  165   160 #>  [7223,]  140  152  149  158  156  153  154  158  164   159 #>  [7224,]  141  153  150  159  157  154  155  159  165   160 #>  [7225,]  140  152  149  158  156  153  154  158  164   159 #>  [7226,]  140  152  149  158  156  153  154  158  164   159 #>  [7227,]  141  153  150  159  157  154  155  159  165   160 #>  [7228,]  141  153  150  159  157  154  155  159  165   160 #>  [7229,]  141  153  150  159  157  154  155  159  165   160 #>  [7230,]  140  152  149  158  156  153  154  158  164   159 #>  [7231,]  140  152  149  158  156  153  154  158  164   159 #>  [7232,]  140  152  149  158  156  153  154  158  164   159 #>  [7233,]  141  153  150  159  157  154  155  159  165   160 #>  [7234,]  140  152  149  158  156  153  154  158  164   159 #>  [7235,]  140  152  149  158  156  153  154  158  164   159 #>  [7236,]  141  153  150  159  157  154  155  159  165   160 #>  [7237,]  140  152  149  158  156  153  154  158  164   159 #>  [7238,]  141  153  150  159  157  154  155  159  165   160 #>  [7239,]  141  153  150  159  157  154  155  159  165   160 #>  [7240,]  140  152  149  158  156  153  154  158  164   159 #>  [7241,]  141  153  150  159  157  154  155  159  165   160 #>  [7242,]  141  153  150  159  157  154  155  159  165   160 #>  [7243,]  140  152  149  158  156  153  154  158  164   159 #>  [7244,]  140  152  149  158  156  153  154  158  164   159 #>  [7245,]  140  152  149  158  156  153  154  158  164   159 #>  [7246,]  140  152  149  158  156  153  154  158  164   159 #>  [7247,]  140  152  149  158  156  153  154  158  164   159 #>  [7248,]  140  152  149  158  156  153  154  158  164   159 #>  [7249,]  140  152  149  158  156  153  154  158  164   159 #>  [7250,]  140  152  149  158  156  153  154  158  164   159 #>  [7251,]  141  153  150  159  157  154  155  159  165   160 #>  [7252,]  140  152  149  158  156  153  154  158  164   159 #>  [7253,]  141  153  150  159  157  154  155  159  165   160 #>  [7254,]  141  153  150  159  157  154  155  159  165   160 #>  [7255,]  140  152  149  158  156  153  154  158  164   159 #>  [7256,]  141  153  150  159  157  154  155  159  165   160 #>  [7257,]  140  152  149  158  156  153  154  158  164   159 #>  [7258,]  141  153  150  159  157  154  155  159  165   160 #>  [7259,]  140  152  149  158  156  153  154  158  164   159 #>  [7260,]  140  152  149  158  156  153  154  158  164   159 #>  [7261,]  141  153  150  159  157  154  155  159  165   160 #>  [7262,]  141  153  150  159  157  154  155  159  165   160 #>  [7263,]  140  152  149  158  156  153  154  158  164   159 #>  [7264,]  141  153  150  159  157  154  155  159  165   160 #>  [7265,]  141  153  150  159  157  154  155  159  165   160 #>  [7266,]  141  153  150  159  157  154  155  159  165   160 #>  [7267,]  140  152  149  158  156  153  154  158  164   159 #>  [7268,]  140  152  149  158  156  153  154  158  164   159 #>  [7269,]  140  152  149  158  156  153  154  158  164   159 #>  [7270,]  141  153  150  159  157  154  155  159  165   160 #>  [7271,]  140  152  149  158  156  153  154  158  164   159 #>  [7272,]  140  152  149  158  156  153  154  158  164   159 #>  [7273,]  141  153  150  159  157  154  155  159  165   160 #>  [7274,]  140  152  149  158  156  153  154  158  164   159 #>  [7275,]  140  152  149  158  156  153  154  158  164   159 #>  [7276,]  140  152  149  158  156  153  154  158  164   159 #>  [7277,]  141  153  150  159  157  154  155  159  165   160 #>  [7278,]  140  152  149  158  156  153  154  158  164   159 #>  [7279,]  141  153  150  159  157  154  155  159  165   160 #>  [7280,]  140  152  149  158  156  153  154  158  164   159 #>  [7281,]  141  153  150  159  157  154  155  159  165   160 #>  [7282,]  141  153  150  159  157  154  155  159  165   160 #>  [7283,]  141  153  150  159  157  154  155  159  165   160 #>  [7284,]  141  153  150  159  157  154  155  159  165   160 #>  [7285,]  141  153  150  159  157  154  155  159  165   160 #>  [7286,]  140  152  149  158  156  153  154  158  164   159 #>  [7287,]  141  153  150  159  157  154  155  159  165   160 #>  [7288,]  140  152  149  158  156  153  154  158  164   159 #>  [7289,]  141  153  150  159  157  154  155  159  165   160 #>  [7290,]  141  153  150  159  157  154  155  159  165   160 #>  [7291,]  141  153  150  159  157  154  155  159  165   160 #>  [7292,]  140  152  149  158  156  153  154  158  164   159 #>  [7293,]  141  153  150  159  157  154  155  159  165   160 #>  [7294,]  141  153  150  159  157  154  155  159  165   160 #>  [7295,]  140  152  149  158  156  153  154  158  164   159 #>  [7296,]  140  152  149  158  156  153  154  158  164   159 #>  [7297,]  140  152  149  158  156  153  154  158  164   159 #>  [7298,]  140  152  149  158  156  153  154  158  164   159 #>  [7299,]  141  153  150  159  157  154  155  159  165   160 #>  [7300,]  141  153  150  159  157  154  155  159  165   160 #>  [7301,]  143  154  152  162  160  156  157  161  166   162 #>  [7302,]  142  154  152  162  160  156  157  161  166   162 #>  [7303,]  143  154  152  161  159  156  157  161  166   161 #>  [7304,]  143  154  152  162  160  156  157  161  166   162 #>  [7305,]  143  154  152  162  160  156  157  161  166   162 #>  [7306,]  142  154  152  162  160  156  157  161  166   162 #>  [7307,]  143  154  152  161  159  156  157  161  166   161 #>  [7308,]  143  154  152  161  159  156  157  161  166   161 #>  [7309,]  143  154  152  162  160  156  157  161  166   162 #>  [7310,]  143  154  152  162  160  156  157  161  166   162 #>  [7311,]  142  154  152  162  160  156  157  161  166   162 #>  [7312,]  142  154  152  162  160  156  157  161  166   162 #>  [7313,]  143  154  152  161  159  156  157  161  166   161 #>  [7314,]  143  154  152  162  160  156  157  161  166   162 #>  [7315,]  142  154  151  160  158  155  156  160  166   162 #>  [7316,]  143  154  152  161  159  156  157  161  166   161 #>  [7317,]  142  154  151  160  158  155  156  160  166   161 #>  [7318,]  143  154  152  162  160  156  157  161  166   162 #>  [7319,]  142  154  152  162  160  156  157  161  166   162 #>  [7320,]  143  154  152  161  159  156  157  161  166   161 #>  [7321,]  143  154  152  162  160  156  157  161  166   162 #>  [7322,]  143  154  152  161  159  156  157  161  166   161 #>  [7323,]  142  154  152  162  160  156  157  161  166   162 #>  [7324,]  143  154  152  161  159  156  157  161  166   161 #>  [7325,]  143  154  152  161  159  156  157  161  166   161 #>  [7326,]  142  154  152  162  160  156  157  161  166   162 #>  [7327,]  143  154  152  162  160  156  157  161  166   162 #>  [7328,]  143  154  152  162  160  156  157  161  166   162 #>  [7329,]  142  154  152  162  160  156  157  161  166   162 #>  [7330,]  142  154  152  162  160  156  157  161  166   162 #>  [7331,]  142  154  151  160  158  155  156  160  166   162 #>  [7332,]  143  154  152  162  160  156  157  161  166   162 #>  [7333,]  143  154  152  162  160  156  157  161  166   162 #>  [7334,]  142  154  151  160  158  155  156  160  166   162 #>  [7335,]  142  154  152  162  160  156  157  161  166   162 #>  [7336,]  143  154  152  162  160  156  157  161  166   162 #>  [7337,]  142  154  151  160  158  155  156  160  166   162 #>  [7338,]  143  154  152  162  160  156  157  161  166   162 #>  [7339,]  143  154  152  161  159  156  157  161  166   161 #>  [7340,]  143  154  152  161  159  156  157  161  166   161 #>  [7341,]  143  154  152  162  160  156  157  161  166   162 #>  [7342,]  142  154  151  160  158  155  156  160  166   162 #>  [7343,]  142  154  151  160  158  155  156  160  166   161 #>  [7344,]  142  154  151  160  158  155  156  160  166   161 #>  [7345,]  143  154  152  161  159  156  157  161  166   161 #>  [7346,]  142  154  152  161  159  156  157  161  166   161 #>  [7347,]  142  154  152  161  159  156  157  161  166   161 #>  [7348,]  142  154  151  160  158  155  156  160  166   162 #>  [7349,]  143  154  152  161  159  156  157  161  166   161 #>  [7350,]  143  154  152  161  159  156  157  161  166   161 #>  [7351,]  142  154  152  161  159  156  157  161  166   161 #>  [7352,]  143  154  152  162  160  156  157  161  166   162 #>  [7353,]  143  154  152  161  159  156  157  161  166   161 #>  [7354,]  143  154  152  161  159  156  157  161  166   161 #>  [7355,]  143  154  152  161  159  156  157  161  166   161 #>  [7356,]  142  154  152  161  159  156  157  161  166   161 #>  [7357,]  143  154  152  162  160  156  157  161  166   162 #>  [7358,]  143  154  152  162  160  156  157  161  166   162 #>  [7359,]  143  154  152  161  159  156  157  161  166   161 #>  [7360,]  142  154  152  162  160  156  157  161  166   162 #>  [7361,]  142  154  152  162  160  156  157  161  166   162 #>  [7362,]  142  154  152  162  160  156  157  161  166   162 #>  [7363,]  142  154  151  160  158  155  156  160  166   161 #>  [7364,]  142  154  152  162  160  156  157  161  166   162 #>  [7365,]  142  154  152  161  159  156  157  161  166   161 #>  [7366,]  142  154  152  161  159  156  157  161  166   161 #>  [7367,]  143  154  152  162  160  156  157  161  166   162 #>  [7368,]  142  154  152  162  160  156  157  161  166   162 #>  [7369,]  142  154  152  162  160  156  157  161  166   162 #>  [7370,]  142  154  151  160  158  155  156  160  166   161 #>  [7371,]  143  154  152  162  160  156  157  161  166   162 #>  [7372,]  143  154  152  161  159  156  157  161  166   161 #>  [7373,]  143  154  152  162  160  156  157  161  166   162 #>  [7374,]  143  154  152  162  160  156  157  161  166   162 #>  [7375,]  142  154  151  160  158  155  156  160  166   162 #>  [7376,]  143  154  152  161  159  156  157  161  166   161 #>  [7377,]  143  154  152  161  159  156  157  161  166   161 #>  [7378,]  142  154  151  160  158  155  156  160  166   161 #>  [7379,]  142  154  151  160  158  155  156  160  166   161 #>  [7380,]  143  154  152  162  160  156  157  161  166   162 #>  [7381,]  142  154  152  162  160  156  157  161  166   162 #>  [7382,]  143  154  152  162  160  156  157  161  166   162 #>  [7383,]  143  154  152  161  159  156  157  161  166   161 #>  [7384,]  143  154  152  161  159  156  157  161  166   161 #>  [7385,]  143  154  152  162  160  156  157  161  166   162 #>  [7386,]  143  154  152  161  159  156  157  161  166   161 #>  [7387,]  143  154  152  162  160  156  157  161  166   162 #>  [7388,]  143  154  152  162  160  156  157  161  166   162 #>  [7389,]  143  154  152  161  159  156  157  161  166   161 #>  [7390,]  143  154  152  161  159  156  157  161  166   161 #>  [7391,]  143  154  152  162  160  156  157  161  166   162 #>  [7392,]  142  154  152  162  160  156  157  161  166   162 #>  [7393,]  142  154  152  162  160  156  157  161  166   162 #>  [7394,]  142  154  152  161  159  156  157  161  166   161 #>  [7395,]  142  154  151  160  158  155  156  160  166   162 #>  [7396,]  142  154  152  162  160  156  157  161  166   162 #>  [7397,]  143  154  152  162  160  156  157  161  166   162 #>  [7398,]  143  154  152  161  159  156  157  161  166   161 #>  [7399,]  143  154  152  162  160  156  157  161  166   162 #>  [7400,]  142  154  151  160  158  155  156  160  166   161 #>  [7401,]  144  155  153  163  161  157  158  162  167   163 #>  [7402,]  145  155  153  163  161  157  158  162  167   163 #>  [7403,]  145  155  153  163  161  157  158  162  167   163 #>  [7404,]  144  155  154  164  162  158  159  163  168   164 #>  [7405,]  144  155  153  163  161  157  158  162  167   163 #>  [7406,]  145  155  153  163  161  157  158  162  167   163 #>  [7407,]  144  155  153  163  161  157  158  162  167   163 #>  [7408,]  144  155  153  163  161  157  158  162  167   163 #>  [7409,]  144  155  153  163  161  157  158  162  167   163 #>  [7410,]  144  155  154  164  162  158  159  163  168   164 #>  [7411,]  144  155  153  163  161  157  158  162  167   163 #>  [7412,]  145  155  153  163  161  157  158  162  167   163 #>  [7413,]  144  155  153  163  161  157  158  162  167   163 #>  [7414,]  144  155  153  163  161  157  158  162  167   163 #>  [7415,]  144  155  154  164  162  158  159  163  168   164 #>  [7416,]  144  155  153  163  161  157  158  162  167   163 #>  [7417,]  144  155  153  163  161  157  158  162  167   163 #>  [7418,]  145  155  154  164  162  158  159  163  168   164 #>  [7419,]  145  155  153  163  161  157  158  162  167   163 #>  [7420,]  145  155  153  163  161  157  158  162  167   163 #>  [7421,]  144  155  154  164  162  158  159  163  168   164 #>  [7422,]  144  155  153  163  161  157  158  162  167   163 #>  [7423,]  144  155  154  164  162  158  159  163  168   164 #>  [7424,]  144  155  153  163  161  157  158  162  167   163 #>  [7425,]  145  155  154  164  162  158  159  163  168   164 #>  [7426,]  144  155  153  163  161  157  158  162  167   163 #>  [7427,]  144  155  153  163  161  157  158  162  167   163 #>  [7428,]  145  155  153  163  161  157  158  162  167   163 #>  [7429,]  144  155  153  163  161  157  158  162  167   163 #>  [7430,]  144  155  153  163  161  157  158  162  167   163 #>  [7431,]  144  155  153  163  161  157  158  162  167   163 #>  [7432,]  144  155  153  163  161  157  158  162  167   163 #>  [7433,]  145  155  153  163  161  157  158  162  167   163 #>  [7434,]  145  155  153  163  161  157  158  162  167   163 #>  [7435,]  144  155  153  163  161  157  158  162  167   163 #>  [7436,]  144  155  153  163  161  157  158  162  167   163 #>  [7437,]  144  155  153  163  161  157  158  162  167   163 #>  [7438,]  144  155  153  163  161  157  158  162  167   163 #>  [7439,]  144  155  154  164  162  158  159  163  168   164 #>  [7440,]  144  155  153  163  161  157  158  162  167   163 #>  [7441,]  144  155  153  163  161  157  158  162  167   163 #>  [7442,]  144  155  153  163  161  157  158  162  167   163 #>  [7443,]  144  155  154  164  162  158  159  163  168   164 #>  [7444,]  144  155  153  163  161  157  158  162  167   163 #>  [7445,]  144  155  154  164  162  158  159  163  168   164 #>  [7446,]  144  155  153  163  161  157  158  162  167   163 #>  [7447,]  144  155  153  163  161  157  158  162  167   163 #>  [7448,]  144  155  153  163  161  157  158  162  167   163 #>  [7449,]  144  155  153  163  161  157  158  162  167   163 #>  [7450,]  144  155  153  163  161  157  158  162  167   163 #>  [7451,]  144  155  153  163  161  157  158  162  167   163 #>  [7452,]  144  155  153  163  161  157  158  162  167   163 #>  [7453,]  144  155  154  164  162  158  159  163  168   164 #>  [7454,]  144  155  153  163  161  157  158  162  167   163 #>  [7455,]  144  155  153  163  161  157  158  162  167   163 #>  [7456,]  144  155  153  163  161  157  158  162  167   163 #>  [7457,]  144  155  153  163  161  157  158  162  167   163 #>  [7458,]  144  155  153  163  161  157  158  162  167   163 #>  [7459,]  144  155  153  163  161  157  158  162  167   163 #>  [7460,]  145  155  153  163  161  157  158  162  167   163 #>  [7461,]  144  155  154  164  162  158  159  163  168   164 #>  [7462,]  144  155  153  163  161  157  158  162  167   163 #>  [7463,]  144  155  153  163  161  157  158  162  167   163 #>  [7464,]  144  155  153  163  161  157  158  162  167   163 #>  [7465,]  145  155  153  163  161  157  158  162  167   163 #>  [7466,]  144  155  153  163  161  157  158  162  167   163 #>  [7467,]  144  155  153  163  161  157  158  162  167   163 #>  [7468,]  144  155  153  163  161  157  158  162  167   163 #>  [7469,]  144  155  153  163  161  157  158  162  167   163 #>  [7470,]  145  155  153  163  161  157  158  162  167   163 #>  [7471,]  145  155  153  163  161  157  158  162  167   163 #>  [7472,]  144  155  154  164  162  158  159  163  168   164 #>  [7473,]  145  155  154  164  162  158  159  163  168   164 #>  [7474,]  144  155  154  164  162  158  159  163  168   164 #>  [7475,]  144  155  154  164  162  158  159  163  168   164 #>  [7476,]  144  155  154  164  162  158  159  163  168   164 #>  [7477,]  144  155  154  164  162  158  159  163  168   164 #>  [7478,]  144  155  153  163  161  157  158  162  167   163 #>  [7479,]  144  155  153  163  161  157  158  162  167   163 #>  [7480,]  144  155  153  163  161  157  158  162  167   163 #>  [7481,]  144  155  153  163  161  157  158  162  167   163 #>  [7482,]  144  155  153  163  161  157  158  162  167   163 #>  [7483,]  144  155  153  163  161  157  158  162  167   163 #>  [7484,]  145  155  154  164  162  158  159  163  168   164 #>  [7485,]  144  155  153  163  161  157  158  162  167   163 #>  [7486,]  144  155  153  163  161  157  158  162  167   163 #>  [7487,]  144  155  153  163  161  157  158  162  167   163 #>  [7488,]  144  155  153  163  161  157  158  162  167   163 #>  [7489,]  144  155  153  163  161  157  158  162  167   163 #>  [7490,]  144  155  153  163  161  157  158  162  167   163 #>  [7491,]  144  155  153  163  161  157  158  162  167   163 #>  [7492,]  144  155  153  163  161  157  158  162  167   163 #>  [7493,]  145  155  153  163  161  157  158  162  167   163 #>  [7494,]  144  155  154  164  162  158  159  163  168   164 #>  [7495,]  144  155  154  164  162  158  159  163  168   164 #>  [7496,]  144  155  153  163  161  157  158  162  167   163 #>  [7497,]  145  155  153  163  161  157  158  162  167   163 #>  [7498,]  145  155  153  163  161  157  158  162  167   163 #>  [7499,]  144  155  153  163  161  157  158  162  167   163 #>  [7500,]  144  155  154  164  162  158  159  163  168   164 #>  [7501,]  146  156  155  165  163  159  160  164  169   165 #>  [7502,]  147  156  155  166  164  160  161  165  170   166 #>  [7503,]  146  156  155  165  163  159  160  164  169   165 #>  [7504,]  146  156  155  165  163  159  160  164  169   165 #>  [7505,]  147  156  155  165  163  159  160  164  169   165 #>  [7506,]  146  156  155  165  163  159  160  164  169   165 #>  [7507,]  147  156  155  165  163  159  160  164  169   165 #>  [7508,]  146  156  155  165  163  159  160  164  169   165 #>  [7509,]  147  156  155  166  165  160  162  165  170   166 #>  [7510,]  147  156  155  166  165  160  161  165  170   166 #>  [7511,]  146  156  155  165  163  159  160  164  169   165 #>  [7512,]  147  156  155  166  164  160  161  165  170   166 #>  [7513,]  147  156  155  165  163  159  160  164  169   165 #>  [7514,]  146  156  155  165  163  159  160  164  169   165 #>  [7515,]  147  156  155  165  163  159  160  164  169   165 #>  [7516,]  146  156  155  165  163  159  160  164  169   165 #>  [7517,]  147  156  155  166  164  160  162  165  170   166 #>  [7518,]  147  156  155  165  163  159  160  164  169   165 #>  [7519,]  146  156  155  165  163  159  160  164  169   165 #>  [7520,]  147  156  155  165  163  159  160  164  169   165 #>  [7521,]  147  156  155  166  165  160  162  165  170   166 #>  [7522,]  147  156  155  165  163  159  160  164  169   165 #>  [7523,]  147  156  155  165  163  159  160  164  169   165 #>  [7524,]  147  156  155  165  163  159  160  164  169   165 #>  [7525,]  147  156  155  165  163  159  160  164  169   165 #>  [7526,]  146  156  155  165  163  159  160  164  169   165 #>  [7527,]  147  156  155  165  163  159  160  164  169   165 #>  [7528,]  146  156  155  165  163  159  160  164  169   165 #>  [7529,]  147  156  155  166  164  160  162  165  170   166 #>  [7530,]  147  156  155  165  163  159  160  164  169   165 #>  [7531,]  147  156  155  165  163  159  160  164  169   165 #>  [7532,]  147  156  155  165  163  159  160  164  169   165 #>  [7533,]  147  156  155  166  165  160  162  165  170   166 #>  [7534,]  146  156  155  165  163  159  160  164  169   165 #>  [7535,]  146  156  155  165  163  159  160  164  169   165 #>  [7536,]  147  156  155  165  163  159  160  164  169   165 #>  [7537,]  146  156  155  165  163  159  160  164  169   165 #>  [7538,]  146  156  155  165  163  159  160  164  169   165 #>  [7539,]  147  156  155  165  163  159  160  164  169   165 #>  [7540,]  147  156  155  165  163  159  160  164  169   165 #>  [7541,]  147  156  155  165  163  159  160  164  169   165 #>  [7542,]  146  156  155  165  163  159  160  164  169   165 #>  [7543,]  147  156  155  165  163  159  160  164  169   165 #>  [7544,]  147  156  155  165  163  159  160  164  169   165 #>  [7545,]  146  156  155  165  163  159  160  164  169   165 #>  [7546,]  147  156  155  165  163  159  160  164  169   165 #>  [7547,]  147  156  155  165  163  159  160  164  169   165 #>  [7548,]  147  156  155  165  163  159  160  164  169   165 #>  [7549,]  146  156  155  165  163  159  160  164  169   165 #>  [7550,]  147  156  155  165  163  159  160  164  169   165 #>  [7551,]  147  156  155  165  163  159  160  164  169   165 #>  [7552,]  146  156  155  165  163  159  160  164  169   165 #>  [7553,]  147  156  155  165  163  159  160  164  169   165 #>  [7554,]  147  156  155  165  163  159  160  164  169   165 #>  [7555,]  146  156  155  165  163  159  160  164  169   165 #>  [7556,]  146  156  155  165  163  159  160  164  169   165 #>  [7557,]  147  156  155  165  163  159  160  164  169   165 #>  [7558,]  147  156  155  165  163  159  160  164  169   165 #>  [7559,]  146  156  155  165  163  159  160  164  169   165 #>  [7560,]  147  156  155  166  164  160  161  165  170   166 #>  [7561,]  147  156  155  165  163  159  160  164  169   165 #>  [7562,]  146  156  155  165  163  159  160  164  169   165 #>  [7563,]  147  156  155  166  164  160  161  165  170   166 #>  [7564,]  146  156  155  165  163  159  160  164  169   165 #>  [7565,]  146  156  155  165  163  159  160  164  169   165 #>  [7566,]  147  156  155  165  163  159  160  164  169   165 #>  [7567,]  147  156  155  165  163  159  160  164  169   165 #>  [7568,]  146  156  155  165  163  159  160  164  169   165 #>  [7569,]  146  156  155  165  163  159  160  164  169   165 #>  [7570,]  147  156  155  166  164  160  162  165  170   166 #>  [7571,]  147  156  155  165  163  159  160  164  169   165 #>  [7572,]  146  156  155  165  163  159  160  164  169   165 #>  [7573,]  146  156  155  165  163  159  160  164  169   165 #>  [7574,]  147  156  155  165  163  159  160  164  169   165 #>  [7575,]  147  156  155  165  163  159  160  164  169   165 #>  [7576,]  147  156  155  165  163  159  160  164  169   165 #>  [7577,]  146  156  155  165  163  159  160  164  169   165 #>  [7578,]  147  156  155  165  163  159  160  164  169   165 #>  [7579,]  146  156  155  165  163  159  160  164  169   165 #>  [7580,]  147  156  155  166  165  160  161  165  170   166 #>  [7581,]  147  156  155  166  164  160  162  165  170   166 #>  [7582,]  147  156  155  165  163  159  160  164  169   165 #>  [7583,]  147  156  155  165  163  159  160  164  169   165 #>  [7584,]  147  156  155  165  163  159  160  164  169   165 #>  [7585,]  147  156  155  165  163  159  160  164  169   165 #>  [7586,]  147  156  155  166  165  160  161  165  170   166 #>  [7587,]  147  156  155  165  163  159  160  164  169   165 #>  [7588,]  147  156  155  165  163  159  160  164  169   165 #>  [7589,]  146  156  155  165  163  159  160  164  169   165 #>  [7590,]  147  156  155  165  163  159  160  164  169   165 #>  [7591,]  146  156  155  165  163  159  160  164  169   165 #>  [7592,]  147  156  155  165  163  159  160  164  169   165 #>  [7593,]  147  156  155  165  163  159  160  164  169   165 #>  [7594,]  146  156  155  165  163  159  160  164  169   165 #>  [7595,]  147  156  155  165  163  159  160  164  169   165 #>  [7596,]  146  156  155  165  163  159  160  164  169   165 #>  [7597,]  146  156  155  165  163  159  160  164  169   165 #>  [7598,]  147  156  155  165  163  159  160  164  169   165 #>  [7599,]  147  156  155  165  163  159  160  164  169   165 #>  [7600,]  146  156  155  165  163  159  160  164  169   165 #>  [7601,]  148  157  156  167  166  161  163  166  171   167 #>  [7602,]  149  158  157  168  167  162  163  166  171   167 #>  [7603,]  148  157  156  167  166  161  163  166  171   167 #>  [7604,]  148  157  156  167  166  161  163  166  171   167 #>  [7605,]  148  157  156  167  166  161  163  166  171   167 #>  [7606,]  148  157  156  167  166  161  163  166  172   168 #>  [7607,]  148  157  156  167  166  161  163  166  171   167 #>  [7608,]  148  157  156  167  166  161  163  166  172   168 #>  [7609,]  149  158  157  168  167  162  163  166  172   168 #>  [7610,]  149  158  157  168  167  162  163  166  171   167 #>  [7611,]  148  157  156  167  166  161  163  166  171   167 #>  [7612,]  149  158  157  168  167  162  163  166  172   168 #>  [7613,]  149  158  157  168  167  162  163  166  171   167 #>  [7614,]  148  157  156  167  166  161  163  166  171   167 #>  [7615,]  148  157  156  167  166  161  163  166  172   168 #>  [7616,]  148  157  156  167  166  161  163  166  171   167 #>  [7617,]  149  158  157  168  167  162  163  166  171   167 #>  [7618,]  148  157  156  167  166  161  163  166  171   167 #>  [7619,]  148  157  156  167  166  161  163  166  171   167 #>  [7620,]  148  157  156  167  166  161  163  166  171   167 #>  [7621,]  149  158  157  168  167  162  163  166  171   167 #>  [7622,]  148  157  156  167  166  161  163  166  171   167 #>  [7623,]  148  157  156  167  166  161  163  166  171   167 #>  [7624,]  149  158  157  168  167  162  163  166  171   167 #>  [7625,]  148  157  156  167  166  161  163  166  171   167 #>  [7626,]  148  157  156  167  166  161  163  166  172   168 #>  [7627,]  148  157  156  167  166  161  163  166  171   167 #>  [7628,]  148  157  156  167  166  161  163  166  171   167 #>  [7629,]  149  158  157  168  167  162  163  166  171   167 #>  [7630,]  148  157  156  167  166  161  163  166  171   167 #>  [7631,]  148  157  156  167  166  161  163  166  171   167 #>  [7632,]  149  158  157  168  167  162  163  166  171   167 #>  [7633,]  149  158  157  168  167  162  163  166  172   168 #>  [7634,]  148  157  156  167  166  161  163  166  171   167 #>  [7635,]  148  157  156  167  166  161  163  166  171   167 #>  [7636,]  148  157  156  167  166  161  163  166  171   167 #>  [7637,]  148  157  156  167  166  161  163  166  171   167 #>  [7638,]  148  157  156  167  166  161  163  166  171   167 #>  [7639,]  148  157  156  167  166  161  163  166  171   167 #>  [7640,]  149  158  157  168  167  162  163  166  171   167 #>  [7641,]  148  157  156  167  166  161  163  166  171   167 #>  [7642,]  148  157  156  167  166  161  163  166  171   167 #>  [7643,]  148  157  156  167  166  161  163  166  172   168 #>  [7644,]  148  157  156  167  166  161  163  166  171   167 #>  [7645,]  148  157  156  167  166  161  163  166  172   168 #>  [7646,]  148  157  156  167  166  161  163  166  172   168 #>  [7647,]  148  157  156  167  166  161  163  166  171   167 #>  [7648,]  148  157  156  167  166  161  163  166  171   167 #>  [7649,]  148  157  156  167  166  161  163  166  171   167 #>  [7650,]  148  157  156  167  166  161  163  166  171   167 #>  [7651,]  148  157  156  167  166  161  163  166  172   168 #>  [7652,]  148  157  156  167  166  161  163  166  171   167 #>  [7653,]  149  158  157  168  167  162  163  166  171   167 #>  [7654,]  148  157  156  167  166  161  163  166  171   167 #>  [7655,]  148  157  156  167  166  161  163  166  171   167 #>  [7656,]  148  157  156  167  166  161  163  166  172   168 #>  [7657,]  148  157  156  167  166  161  163  166  172   168 #>  [7658,]  148  157  156  167  166  161  163  166  171   167 #>  [7659,]  148  157  156  167  166  161  163  166  171   167 #>  [7660,]  149  158  157  168  167  162  163  166  171   167 #>  [7661,]  149  158  157  168  167  162  163  166  172   168 #>  [7662,]  148  157  156  167  166  161  163  166  171   167 #>  [7663,]  149  158  157  168  167  162  163  166  171   167 #>  [7664,]  148  157  156  167  166  161  163  166  172   168 #>  [7665,]  148  157  156  167  166  161  163  166  171   167 #>  [7666,]  148  157  156  167  166  161  163  166  172   168 #>  [7667,]  148  157  156  167  166  161  163  166  171   167 #>  [7668,]  148  157  156  167  166  161  163  166  172   168 #>  [7669,]  148  157  156  167  166  161  163  166  171   167 #>  [7670,]  149  158  157  168  167  162  163  166  171   167 #>  [7671,]  148  157  156  167  166  161  163  166  171   167 #>  [7672,]  148  157  156  167  166  161  163  166  171   167 #>  [7673,]  148  157  156  167  166  161  163  166  171   167 #>  [7674,]  148  157  156  167  166  161  163  166  171   167 #>  [7675,]  149  158  157  168  167  162  163  166  171   167 #>  [7676,]  148  157  156  167  166  161  163  166  172   168 #>  [7677,]  148  157  156  167  166  161  163  166  171   167 #>  [7678,]  148  157  156  167  166  161  163  166  171   167 #>  [7679,]  148  157  156  167  166  161  163  166  171   167 #>  [7680,]  149  158  157  168  167  162  163  166  171   167 #>  [7681,]  149  158  157  168  167  162  163  166  171   167 #>  [7682,]  148  157  156  167  166  161  163  166  171   167 #>  [7683,]  149  158  157  168  167  162  163  166  171   167 #>  [7684,]  148  157  156  167  166  161  163  166  171   167 #>  [7685,]  148  157  156  167  166  161  163  166  171   167 #>  [7686,]  149  158  157  168  167  162  163  166  171   167 #>  [7687,]  148  157  156  167  166  161  163  166  171   167 #>  [7688,]  148  157  156  167  166  161  163  166  171   167 #>  [7689,]  148  157  156  167  166  161  163  166  171   167 #>  [7690,]  148  157  156  167  166  161  163  166  171   167 #>  [7691,]  148  157  156  167  166  161  163  166  171   167 #>  [7692,]  148  157  156  167  166  161  163  166  171   167 #>  [7693,]  148  157  156  167  166  161  163  166  171   167 #>  [7694,]  148  157  156  167  166  161  163  166  172   168 #>  [7695,]  148  157  156  167  166  161  163  166  171   167 #>  [7696,]  148  157  156  167  166  161  163  166  172   168 #>  [7697,]  148  157  156  167  166  161  163  166  171   167 #>  [7698,]  148  157  156  167  166  161  163  166  171   167 #>  [7699,]  148  157  156  167  166  161  163  166  171   167 #>  [7700,]  148  157  156  167  166  161  163  166  171   167 #>  [7701,]  151  160  159  170  169  164  165  168  174   171 #>  [7702,]  151  160  159  170  169  164  165  168  174   171 #>  [7703,]  151  160  159  170  169  164  165  168  174   170 #>  [7704,]  150  159  158  169  168  163  164  167  173   169 #>  [7705,]  151  160  159  170  169  164  165  168  174   171 #>  [7706,]  151  160  159  170  169  164  165  168  174   170 #>  [7707,]  151  160  159  170  169  164  165  168  174   170 #>  [7708,]  150  159  158  169  168  163  164  167  173   169 #>  [7709,]  150  159  158  169  168  163  164  167  173   169 #>  [7710,]  150  159  158  169  168  163  164  167  173   169 #>  [7711,]  151  160  159  170  169  164  165  168  174   171 #>  [7712,]  151  160  159  170  169  164  165  168  174   171 #>  [7713,]  151  160  159  170  169  164  165  168  174   171 #>  [7714,]  151  160  159  170  169  164  165  168  174   171 #>  [7715,]  151  160  159  170  169  164  165  168  174   171 #>  [7716,]  151  160  159  170  169  164  165  168  174   171 #>  [7717,]  151  160  159  170  169  164  165  168  174   171 #>  [7718,]  151  160  159  170  169  164  165  168  174   171 #>  [7719,]  151  160  159  170  169  164  165  168  174   171 #>  [7720,]  151  160  159  170  169  164  165  168  174   170 #>  [7721,]  151  160  159  170  169  164  165  168  174   170 #>  [7722,]  151  160  159  170  169  164  165  168  174   171 #>  [7723,]  151  160  159  170  169  164  165  168  174   170 #>  [7724,]  151  160  159  170  169  164  165  168  174   171 #>  [7725,]  151  160  159  170  169  164  165  168  174   170 #>  [7726,]  151  160  159  170  169  164  165  168  174   171 #>  [7727,]  151  160  159  170  169  164  165  168  174   171 #>  [7728,]  151  160  159  170  169  164  165  168  174   171 #>  [7729,]  151  160  159  170  169  164  165  168  174   171 #>  [7730,]  151  160  159  170  169  164  165  168  174   171 #>  [7731,]  151  160  159  170  169  164  165  168  174   171 #>  [7732,]  151  160  159  170  169  164  165  168  174   171 #>  [7733,]  151  160  159  170  169  164  165  168  174   171 #>  [7734,]  151  160  159  170  169  164  165  168  174   170 #>  [7735,]  151  160  159  170  169  164  165  168  174   170 #>  [7736,]  151  160  159  170  169  164  165  168  174   171 #>  [7737,]  151  160  159  170  169  164  165  168  174   170 #>  [7738,]  151  160  159  170  169  164  165  168  174   171 #>  [7739,]  151  160  159  170  169  164  165  168  174   171 #>  [7740,]  151  160  159  170  169  164  165  168  174   171 #>  [7741,]  151  160  159  170  169  164  165  168  174   171 #>  [7742,]  151  160  159  170  169  164  165  168  174   170 #>  [7743,]  150  159  158  169  168  163  164  167  173   169 #>  [7744,]  151  160  159  170  169  164  165  168  174   170 #>  [7745,]  151  160  159  170  169  164  165  168  174   171 #>  [7746,]  151  160  159  170  169  164  165  168  174   171 #>  [7747,]  151  160  159  170  169  164  165  168  174   171 #>  [7748,]  151  160  159  170  169  164  165  168  174   171 #>  [7749,]  151  160  159  170  169  164  165  168  174   171 #>  [7750,]  151  160  159  170  169  164  165  168  174   171 #>  [7751,]  150  159  158  169  168  163  164  167  173   169 #>  [7752,]  151  160  159  170  169  164  165  168  174   171 #>  [7753,]  151  160  159  170  169  164  165  168  174   170 #>  [7754,]  151  160  159  170  169  164  165  168  174   171 #>  [7755,]  151  160  159  170  169  164  165  168  174   171 #>  [7756,]  151  160  159  170  169  164  165  168  174   170 #>  [7757,]  151  160  159  170  169  164  165  168  174   170 #>  [7758,]  151  160  159  170  169  164  165  168  174   171 #>  [7759,]  151  160  159  170  169  164  165  168  174   171 #>  [7760,]  150  159  158  169  168  163  164  167  173   169 #>  [7761,]  151  160  159  170  169  164  165  168  174   171 #>  [7762,]  151  160  159  170  169  164  165  168  174   171 #>  [7763,]  151  160  159  170  169  164  165  168  174   171 #>  [7764,]  150  159  158  169  168  163  164  167  173   169 #>  [7765,]  151  160  159  170  169  164  165  168  174   170 #>  [7766,]  151  160  159  170  169  164  165  168  174   171 #>  [7767,]  150  159  158  169  168  163  164  167  173   169 #>  [7768,]  151  160  159  170  169  164  165  168  174   171 #>  [7769,]  151  160  159  170  169  164  165  168  174   171 #>  [7770,]  151  160  159  170  169  164  165  168  174   171 #>  [7771,]  151  160  159  170  169  164  165  168  174   171 #>  [7772,]  151  160  159  170  169  164  165  168  174   171 #>  [7773,]  151  160  159  170  169  164  165  168  174   170 #>  [7774,]  151  160  159  170  169  164  165  168  174   170 #>  [7775,]  151  160  159  170  169  164  165  168  174   171 #>  [7776,]  151  160  159  170  169  164  165  168  174   171 #>  [7777,]  151  160  159  170  169  164  165  168  174   171 #>  [7778,]  151  160  159  170  169  164  165  168  174   171 #>  [7779,]  151  160  159  170  169  164  165  168  174   171 #>  [7780,]  151  160  159  170  169  164  165  168  174   170 #>  [7781,]  151  160  159  170  169  164  165  168  174   171 #>  [7782,]  151  160  159  170  169  164  165  168  174   170 #>  [7783,]  151  160  159  170  169  164  165  168  174   171 #>  [7784,]  151  160  159  170  169  164  165  168  174   170 #>  [7785,]  150  159  158  169  168  163  164  167  173   169 #>  [7786,]  151  160  159  170  169  164  165  168  174   170 #>  [7787,]  151  160  159  170  169  164  165  168  174   171 #>  [7788,]  151  160  159  170  169  164  165  168  174   170 #>  [7789,]  151  160  159  170  169  164  165  168  174   170 #>  [7790,]  151  160  159  170  169  164  165  168  174   171 #>  [7791,]  150  159  158  169  168  163  164  167  173   169 #>  [7792,]  151  160  159  170  169  164  165  168  174   171 #>  [7793,]  151  160  159  170  169  164  165  168  174   171 #>  [7794,]  151  160  159  170  169  164  165  168  174   170 #>  [7795,]  150  159  158  169  168  163  164  167  173   169 #>  [7796,]  151  160  159  170  169  164  165  168  174   171 #>  [7797,]  151  160  159  170  169  164  165  168  174   171 #>  [7798,]  151  160  159  170  169  164  165  168  174   170 #>  [7799,]  151  160  159  170  169  164  165  168  174   170 #>  [7800,]  151  160  159  170  169  164  165  168  174   171 #>  [7801,]  153  162  161  172  171  166  167  170  176   173 #>  [7802,]  153  162  161  172  171  166  167  170  176   173 #>  [7803,]  152  161  160  171  170  165  166  169  175   172 #>  [7804,]  153  162  161  172  171  166  167  170  176   173 #>  [7805,]  153  162  161  172  171  166  167  170  176   173 #>  [7806,]  152  161  160  171  170  165  166  169  175   172 #>  [7807,]  153  162  161  172  171  166  167  170  176   173 #>  [7808,]  153  162  161  172  171  166  167  170  176   173 #>  [7809,]  153  162  161  172  171  166  167  170  176   173 #>  [7810,]  153  162  161  172  171  166  167  170  176   173 #>  [7811,]  153  162  161  172  171  166  167  170  176   173 #>  [7812,]  153  162  161  172  171  166  167  170  176   173 #>  [7813,]  153  162  161  172  171  166  167  170  176   173 #>  [7814,]  153  162  161  172  171  166  167  170  176   173 #>  [7815,]  153  162  161  172  171  166  167  170  176   173 #>  [7816,]  153  162  161  172  171  166  167  170  176   173 #>  [7817,]  153  162  161  172  171  166  167  170  176   173 #>  [7818,]  153  162  161  172  171  166  167  170  176   173 #>  [7819,]  152  161  160  171  170  165  166  169  175   172 #>  [7820,]  153  162  161  172  171  166  167  170  176   173 #>  [7821,]  153  162  161  172  171  166  167  170  176   173 #>  [7822,]  153  162  161  172  171  166  167  170  176   173 #>  [7823,]  153  162  161  172  171  166  167  170  176   173 #>  [7824,]  153  162  161  172  171  166  167  170  176   173 #>  [7825,]  153  162  161  172  171  166  167  170  176   173 #>  [7826,]  153  162  161  172  171  166  167  170  176   173 #>  [7827,]  153  162  161  172  171  166  167  170  176   173 #>  [7828,]  153  162  161  172  171  166  167  170  176   173 #>  [7829,]  153  162  161  172  171  166  167  170  176   173 #>  [7830,]  153  162  161  172  171  166  167  170  176   173 #>  [7831,]  153  162  161  172  171  166  167  170  176   173 #>  [7832,]  153  162  161  172  171  166  167  170  176   173 #>  [7833,]  153  162  161  172  171  166  167  170  176   173 #>  [7834,]  152  161  160  171  170  165  166  169  175   172 #>  [7835,]  153  162  161  172  171  166  167  170  176   173 #>  [7836,]  153  162  161  172  171  166  167  170  176   173 #>  [7837,]  152  161  160  171  170  165  166  169  175   172 #>  [7838,]  152  161  160  171  170  165  166  169  175   172 #>  [7839,]  153  162  161  172  171  166  167  170  176   173 #>  [7840,]  153  162  161  172  171  166  167  170  176   173 #>  [7841,]  153  162  161  172  171  166  167  170  176   173 #>  [7842,]  153  162  161  172  171  166  167  170  176   173 #>  [7843,]  153  162  161  172  171  166  167  170  176   173 #>  [7844,]  153  162  161  172  171  166  167  170  176   173 #>  [7845,]  152  161  160  171  170  165  166  169  175   172 #>  [7846,]  153  162  161  172  171  166  167  170  176   173 #>  [7847,]  153  162  161  172  171  166  167  170  176   173 #>  [7848,]  153  162  161  172  171  166  167  170  176   173 #>  [7849,]  152  161  160  171  170  165  166  169  175   172 #>  [7850,]  153  162  161  172  171  166  167  170  176   173 #>  [7851,]  153  162  161  172  171  166  167  170  176   173 #>  [7852,]  152  161  160  171  170  165  166  169  175   172 #>  [7853,]  153  162  161  172  171  166  167  170  176   173 #>  [7854,]  153  162  161  172  171  166  167  170  176   173 #>  [7855,]  153  162  161  172  171  166  167  170  176   173 #>  [7856,]  153  162  161  172  171  166  167  170  176   173 #>  [7857,]  153  162  161  172  171  166  167  170  176   173 #>  [7858,]  153  162  161  172  171  166  167  170  176   173 #>  [7859,]  153  162  161  172  171  166  167  170  176   173 #>  [7860,]  153  162  161  172  171  166  167  170  176   173 #>  [7861,]  153  162  161  172  171  166  167  170  176   173 #>  [7862,]  153  162  161  172  171  166  167  170  176   173 #>  [7863,]  153  162  161  172  171  166  167  170  176   173 #>  [7864,]  153  162  161  172  171  166  167  170  176   173 #>  [7865,]  153  162  161  172  171  166  167  170  176   173 #>  [7866,]  153  162  161  172  171  166  167  170  176   173 #>  [7867,]  153  162  161  172  171  166  167  170  176   173 #>  [7868,]  152  161  160  171  170  165  166  169  175   172 #>  [7869,]  153  162  161  172  171  166  167  170  176   173 #>  [7870,]  153  162  161  172  171  166  167  170  176   173 #>  [7871,]  153  162  161  172  171  166  167  170  176   173 #>  [7872,]  152  161  160  171  170  165  166  169  175   172 #>  [7873,]  153  162  161  172  171  166  167  170  176   173 #>  [7874,]  153  162  161  172  171  166  167  170  176   173 #>  [7875,]  153  162  161  172  171  166  167  170  176   173 #>  [7876,]  153  162  161  172  171  166  167  170  176   173 #>  [7877,]  153  162  161  172  171  166  167  170  176   173 #>  [7878,]  153  162  161  172  171  166  167  170  176   173 #>  [7879,]  153  162  161  172  171  166  167  170  176   173 #>  [7880,]  153  162  161  172  171  166  167  170  176   173 #>  [7881,]  153  162  161  172  171  166  167  170  176   173 #>  [7882,]  153  162  161  172  171  166  167  170  176   173 #>  [7883,]  153  162  161  172  171  166  167  170  176   173 #>  [7884,]  153  162  161  172  171  166  167  170  176   173 #>  [7885,]  153  162  161  172  171  166  167  170  176   173 #>  [7886,]  153  162  161  172  171  166  167  170  176   173 #>  [7887,]  153  162  161  172  171  166  167  170  176   173 #>  [7888,]  153  162  161  172  171  166  167  170  176   173 #>  [7889,]  153  162  161  172  171  166  167  170  176   173 #>  [7890,]  153  162  161  172  171  166  167  170  176   173 #>  [7891,]  153  162  161  172  171  166  167  170  176   173 #>  [7892,]  153  162  161  172  171  166  167  170  176   173 #>  [7893,]  153  162  161  172  171  166  167  170  176   173 #>  [7894,]  153  162  161  172  171  166  167  170  176   173 #>  [7895,]  153  162  161  172  171  166  167  170  176   173 #>  [7896,]  152  161  160  171  170  165  166  169  175   172 #>  [7897,]  153  162  161  172  171  166  167  170  176   173 #>  [7898,]  153  162  161  172  171  166  167  170  176   173 #>  [7899,]  153  162  161  172  171  166  167  170  176   173 #>  [7900,]  153  162  161  172  171  166  167  170  176   173 #>  [7901,]  154  163  162  175  174  169  169  172  178   175 #>  [7902,]  154  163  162  175  174  169  169  172  178   175 #>  [7903,]  154  163  162  174  173  168  168  171  178   175 #>  [7904,]  155  164  163  173  172  167  171  173  177   174 #>  [7905,]  154  163  162  174  173  168  168  171  178   175 #>  [7906,]  154  163  162  175  174  169  169  172  178   175 #>  [7907,]  155  164  163  173  172  167  170  173  177   174 #>  [7908,]  154  163  162  174  173  168  168  171  178   175 #>  [7909,]  154  163  162  174  173  168  168  171  178   175 #>  [7910,]  155  164  163  173  172  167  170  173  177   174 #>  [7911,]  154  163  162  175  174  169  169  172  178   175 #>  [7912,]  154  163  162  175  174  169  169  172  178   175 #>  [7913,]  155  164  163  173  172  167  170  173  177   174 #>  [7914,]  154  163  162  175  174  169  169  172  178   175 #>  [7915,]  155  164  163  173  172  167  171  173  177   174 #>  [7916,]  155  164  163  173  172  167  170  173  177   174 #>  [7917,]  155  164  163  173  172  167  170  173  177   174 #>  [7918,]  155  164  163  173  172  167  171  173  177   174 #>  [7919,]  154  163  162  175  174  169  169  172  178   175 #>  [7920,]  154  163  162  174  173  168  168  171  178   175 #>  [7921,]  155  164  163  173  172  167  171  173  177   174 #>  [7922,]  154  163  162  175  174  169  169  172  178   175 #>  [7923,]  155  164  163  173  172  167  170  173  177   174 #>  [7924,]  154  163  162  174  173  168  168  171  178   175 #>  [7925,]  155  164  163  173  172  167  170  173  177   174 #>  [7926,]  154  163  162  175  174  169  169  172  178   175 #>  [7927,]  155  164  163  173  172  167  171  173  177   174 #>  [7928,]  155  164  163  173  172  167  170  173  177   174 #>  [7929,]  154  163  162  175  174  169  169  172  178   175 #>  [7930,]  154  163  162  174  173  168  168  171  178   175 #>  [7931,]  154  163  162  175  174  169  169  172  178   175 #>  [7932,]  154  163  162  175  174  169  169  172  178   175 #>  [7933,]  154  163  162  175  174  169  169  172  178   175 #>  [7934,]  154  163  162  175  174  169  169  172  178   175 #>  [7935,]  154  163  162  175  174  169  169  172  178   175 #>  [7936,]  154  163  162  175  174  169  169  172  178   175 #>  [7937,]  154  163  162  175  174  169  169  172  178   175 #>  [7938,]  154  163  162  175  174  169  169  172  178   175 #>  [7939,]  155  164  163  173  172  167  170  173  177   174 #>  [7940,]  154  163  162  175  174  169  169  172  178   175 #>  [7941,]  154  163  162  175  174  169  169  172  178   175 #>  [7942,]  154  163  162  175  174  169  169  172  178   175 #>  [7943,]  155  164  163  173  172  167  170  173  177   174 #>  [7944,]  154  163  162  175  174  169  169  172  178   175 #>  [7945,]  155  164  163  173  172  167  170  173  177   174 #>  [7946,]  155  164  163  173  172  167  170  173  177   174 #>  [7947,]  155  164  163  173  172  167  170  173  177   174 #>  [7948,]  154  163  162  175  174  169  169  172  178   175 #>  [7949,]  154  163  162  174  173  168  168  171  178   175 #>  [7950,]  154  163  162  175  174  169  169  172  178   175 #>  [7951,]  154  163  162  174  173  168  168  171  178   175 #>  [7952,]  154  163  162  175  174  169  169  172  178   175 #>  [7953,]  155  164  163  173  172  167  170  173  177   174 #>  [7954,]  154  163  162  175  174  169  169  172  178   175 #>  [7955,]  154  163  162  175  174  169  169  172  178   175 #>  [7956,]  155  164  163  173  172  167  170  173  177   174 #>  [7957,]  154  163  162  175  174  169  169  172  178   175 #>  [7958,]  154  163  162  175  174  169  169  172  178   175 #>  [7959,]  154  163  162  175  174  169  169  172  178   175 #>  [7960,]  154  163  162  174  173  168  168  171  178   175 #>  [7961,]  155  164  163  173  172  167  171  173  177   174 #>  [7962,]  154  163  162  175  174  169  169  172  178   175 #>  [7963,]  154  163  162  175  174  169  169  172  178   175 #>  [7964,]  155  164  163  173  172  167  170  173  177   174 #>  [7965,]  154  163  162  174  173  168  168  171  178   175 #>  [7966,]  154  163  162  174  173  168  168  171  178   175 #>  [7967,]  154  163  162  174  173  168  168  171  178   175 #>  [7968,]  154  163  162  175  174  169  169  172  178   175 #>  [7969,]  154  163  162  175  174  169  169  172  178   175 #>  [7970,]  154  163  162  175  174  169  169  172  178   175 #>  [7971,]  155  164  163  173  172  167  170  173  177   174 #>  [7972,]  155  164  163  173  172  167  170  173  177   174 #>  [7973,]  155  164  163  173  172  167  170  173  177   174 #>  [7974,]  155  164  163  173  172  167  171  173  177   174 #>  [7975,]  155  164  163  173  172  167  171  173  177   174 #>  [7976,]  155  164  163  173  172  167  170  173  177   174 #>  [7977,]  155  164  163  173  172  167  170  173  177   174 #>  [7978,]  154  163  162  174  173  168  168  171  178   175 #>  [7979,]  154  163  162  175  174  169  169  172  178   175 #>  [7980,]  154  163  162  175  174  169  169  172  178   175 #>  [7981,]  154  163  162  175  174  169  169  172  178   175 #>  [7982,]  155  164  163  173  172  167  171  173  177   174 #>  [7983,]  154  163  162  175  174  169  169  172  178   175 #>  [7984,]  155  164  163  173  172  167  170  173  177   174 #>  [7985,]  154  163  162  174  173  168  168  171  178   175 #>  [7986,]  154  163  162  175  174  169  169  172  178   175 #>  [7987,]  154  163  162  175  174  169  169  172  178   175 #>  [7988,]  155  164  163  173  172  167  170  173  177   174 #>  [7989,]  154  163  162  174  173  168  168  171  178   175 #>  [7990,]  154  163  162  175  174  169  169  172  178   175 #>  [7991,]  154  163  162  174  173  168  168  171  178   175 #>  [7992,]  154  163  162  175  174  169  169  172  178   175 #>  [7993,]  154  163  162  175  174  169  169  172  178   175 #>  [7994,]  155  164  163  173  172  167  170  173  177   174 #>  [7995,]  155  164  163  173  172  167  170  173  177   174 #>  [7996,]  154  163  162  175  174  169  169  172  178   175 #>  [7997,]  154  163  162  175  174  169  169  172  178   175 #>  [7998,]  154  163  162  175  174  169  169  172  178   175 #>  [7999,]  154  163  162  175  174  169  169  172  178   175 #>  [8000,]  155  164  163  173  172  167  170  173  177   174 #>  [8001,]  157  166  164  177  176  171  173  174  179   176 #>  [8002,]  157  166  164  177  176  171  173  174  179   176 #>  [8003,]  157  166  164  176  175  170  172  175  180   177 #>  [8004,]  157  166  164  176  175  170  172  175  180   177 #>  [8005,]  157  166  164  176  175  170  172  175  180   177 #>  [8006,]  157  166  164  177  176  171  173  174  179   176 #>  [8007,]  157  166  164  176  175  170  172  175  180   177 #>  [8008,]  157  166  164  176  175  170  172  176  180   177 #>  [8009,]  157  166  164  176  175  170  172  175  180   177 #>  [8010,]  156  165  164  176  175  170  172  175  180   177 #>  [8011,]  156  165  164  176  175  170  172  175  180   177 #>  [8012,]  157  166  164  176  175  170  172  175  180   177 #>  [8013,]  157  166  164  177  176  171  173  174  179   176 #>  [8014,]  156  165  164  177  176  171  173  174  179   176 #>  [8015,]  157  166  164  177  176  171  173  174  179   176 #>  [8016,]  157  166  164  177  176  171  173  174  179   176 #>  [8017,]  157  166  164  177  176  171  173  174  179   176 #>  [8018,]  157  166  164  176  175  170  172  175  180   177 #>  [8019,]  157  166  164  176  175  170  172  176  180   177 #>  [8020,]  157  166  164  176  175  170  172  176  180   177 #>  [8021,]  157  166  164  177  176  171  173  174  179   176 #>  [8022,]  157  166  164  176  175  170  172  176  180   177 #>  [8023,]  157  166  164  176  175  170  172  175  180   177 #>  [8024,]  157  166  164  176  175  170  172  175  180   177 #>  [8025,]  157  166  164  176  175  170  172  175  180   177 #>  [8026,]  157  166  164  176  175  170  172  176  180   177 #>  [8027,]  157  166  164  176  175  170  172  176  180   177 #>  [8028,]  157  166  164  176  175  170  172  175  180   177 #>  [8029,]  157  166  164  177  176  171  173  174  179   176 #>  [8030,]  157  166  164  176  175  170  172  176  180   177 #>  [8031,]  157  166  164  176  175  170  172  175  180   177 #>  [8032,]  157  166  164  176  175  170  172  175  180   177 #>  [8033,]  157  166  164  177  176  171  173  174  179   176 #>  [8034,]  157  166  164  176  175  170  172  175  180   177 #>  [8035,]  157  166  164  176  175  170  172  175  180   177 #>  [8036,]  157  166  164  176  175  170  172  176  180   177 #>  [8037,]  157  166  164  176  175  170  172  176  180   177 #>  [8038,]  157  166  164  176  175  170  172  176  180   177 #>  [8039,]  157  166  164  176  175  170  172  175  180   177 #>  [8040,]  156  165  164  176  175  170  172  175  180   177 #>  [8041,]  157  166  164  177  176  171  173  174  179   176 #>  [8042,]  157  166  164  176  175  170  172  175  180   177 #>  [8043,]  157  166  164  176  175  170  172  176  180   177 #>  [8044,]  157  166  164  177  176  171  173  174  179   176 #>  [8045,]  157  166  164  176  175  170  172  175  180   177 #>  [8046,]  157  166  164  176  175  170  172  176  180   177 #>  [8047,]  157  166  164  176  175  170  172  175  180   177 #>  [8048,]  156  165  164  176  175  170  172  175  180   177 #>  [8049,]  157  166  164  176  175  170  172  175  180   177 #>  [8050,]  157  166  164  177  176  171  173  174  179   176 #>  [8051,]  157  166  164  176  175  170  172  176  180   177 #>  [8052,]  157  166  164  176  175  170  172  175  180   177 #>  [8053,]  157  166  164  176  175  170  172  176  180   177 #>  [8054,]  157  166  164  176  175  170  172  175  180   177 #>  [8055,]  157  166  164  176  175  170  172  176  180   177 #>  [8056,]  157  166  164  176  175  170  172  176  180   177 #>  [8057,]  157  166  164  176  175  170  172  175  180   177 #>  [8058,]  157  166  164  176  175  170  172  176  180   177 #>  [8059,]  157  166  164  177  176  171  173  174  179   176 #>  [8060,]  157  166  164  176  175  170  172  176  180   177 #>  [8061,]  157  166  164  177  176  171  173  174  179   176 #>  [8062,]  157  166  164  176  175  170  172  175  180   177 #>  [8063,]  157  166  164  176  175  170  172  175  180   177 #>  [8064,]  157  166  164  176  175  170  172  176  180   177 #>  [8065,]  157  166  164  176  175  170  172  175  180   177 #>  [8066,]  157  166  164  176  175  170  172  176  180   177 #>  [8067,]  157  166  164  176  175  170  172  175  180   177 #>  [8068,]  157  166  164  177  176  171  173  174  179   176 #>  [8069,]  157  166  164  176  175  170  172  176  180   177 #>  [8070,]  156  165  164  177  176  171  173  174  179   176 #>  [8071,]  157  166  164  176  175  170  172  176  180   177 #>  [8072,]  157  166  164  176  175  170  172  175  180   177 #>  [8073,]  157  166  164  177  176  171  173  174  179   176 #>  [8074,]  157  166  164  176  175  170  172  175  180   177 #>  [8075,]  157  166  164  176  175  170  172  175  180   177 #>  [8076,]  157  166  164  177  176  171  173  174  179   176 #>  [8077,]  157  166  164  176  175  170  172  176  180   177 #>  [8078,]  157  166  164  176  175  170  172  175  180   177 #>  [8079,]  157  166  164  176  175  170  172  175  180   177 #>  [8080,]  157  166  164  176  175  170  172  176  180   177 #>  [8081,]  157  166  164  177  176  171  173  174  179   176 #>  [8082,]  157  166  164  176  175  170  172  175  180   177 #>  [8083,]  157  166  164  177  176  171  173  174  179   176 #>  [8084,]  157  166  164  176  175  170  172  176  180   177 #>  [8085,]  157  166  164  176  175  170  172  176  180   177 #>  [8086,]  157  166  164  177  176  171  173  174  179   176 #>  [8087,]  157  166  164  176  175  170  172  176  180   177 #>  [8088,]  157  166  164  176  175  170  172  175  180   177 #>  [8089,]  157  166  164  176  175  170  172  175  180   177 #>  [8090,]  157  166  164  176  175  170  172  176  180   177 #>  [8091,]  157  166  164  176  175  170  172  175  180   177 #>  [8092,]  157  166  164  176  175  170  172  175  180   177 #>  [8093,]  157  166  164  177  176  171  173  174  179   176 #>  [8094,]  157  166  164  176  175  170  172  175  180   177 #>  [8095,]  157  166  164  176  175  170  172  176  180   177 #>  [8096,]  157  166  164  177  176  171  173  174  179   176 #>  [8097,]  157  166  164  176  175  170  172  176  180   177 #>  [8098,]  157  166  164  176  175  170  172  175  180   177 #>  [8099,]  157  166  164  177  176  171  173  174  179   176 #>  [8100,]  157  166  164  176  175  170  172  176  180   177 #>  [8101,]  159  168  166  179  178  172  174  177  181   178 #>  [8102,]  159  168  166  179  178  172  174  177  181   178 #>  [8103,]  158  167  165  178  177  174  175  178  182   179 #>  [8104,]  158  167  165  178  177  173  175  178  182   179 #>  [8105,]  158  167  165  178  177  173  175  178  182   179 #>  [8106,]  159  168  166  179  178  172  174  177  181   178 #>  [8107,]  158  167  165  178  177  173  175  178  182   179 #>  [8108,]  158  167  165  178  177  173  175  178  182   179 #>  [8109,]  158  167  165  178  177  173  175  178  182   179 #>  [8110,]  158  167  165  178  177  173  175  178  182   179 #>  [8111,]  159  168  166  179  178  172  174  177  181   178 #>  [8112,]  158  167  165  178  177  173  175  178  182   179 #>  [8113,]  159  168  166  179  178  172  174  177  181   178 #>  [8114,]  159  168  166  179  178  172  174  177  181   178 #>  [8115,]  159  168  166  179  178  172  174  177  181   178 #>  [8116,]  159  168  166  179  178  172  174  177  181   178 #>  [8117,]  159  168  166  179  178  172  174  177  181   178 #>  [8118,]  158  167  165  178  177  173  175  178  182   179 #>  [8119,]  159  168  166  179  178  172  174  177  181   178 #>  [8120,]  158  167  165  178  177  173  175  178  182   179 #>  [8121,]  159  168  166  179  178  172  174  177  181   178 #>  [8122,]  159  168  166  179  178  172  174  177  181   178 #>  [8123,]  158  167  165  178  177  173  175  178  182   179 #>  [8124,]  158  167  165  178  177  173  175  178  182   179 #>  [8125,]  158  167  165  178  177  174  175  178  182   179 #>  [8126,]  159  168  166  179  178  172  174  177  181   178 #>  [8127,]  159  168  166  179  178  172  174  177  181   178 #>  [8128,]  158  167  165  178  177  173  175  178  182   179 #>  [8129,]  159  168  166  179  178  172  174  177  181   178 #>  [8130,]  158  167  165  178  177  173  175  178  182   179 #>  [8131,]  158  167  165  178  177  173  175  178  182   179 #>  [8132,]  158  167  165  178  177  173  175  178  182   179 #>  [8133,]  159  168  166  179  178  172  174  177  181   178 #>  [8134,]  158  167  165  178  177  174  175  178  182   179 #>  [8135,]  159  168  166  179  178  172  174  177  181   178 #>  [8136,]  158  167  165  178  177  173  175  178  182   179 #>  [8137,]  159  168  166  179  178  172  174  177  181   178 #>  [8138,]  158  167  165  178  177  173  175  178  182   179 #>  [8139,]  158  167  165  178  177  173  175  178  182   179 #>  [8140,]  158  167  165  178  177  173  175  178  182   179 #>  [8141,]  159  168  166  179  178  172  174  177  181   178 #>  [8142,]  158  167  165  178  177  173  175  178  182   179 #>  [8143,]  158  167  165  178  177  173  175  178  182   179 #>  [8144,]  159  168  166  179  178  172  174  177  181   178 #>  [8145,]  158  167  165  178  177  173  175  178  182   179 #>  [8146,]  158  167  165  178  177  173  175  178  182   179 #>  [8147,]  159  168  166  179  178  172  174  177  181   178 #>  [8148,]  158  167  165  178  177  173  175  178  182   179 #>  [8149,]  158  167  165  178  177  173  175  178  182   179 #>  [8150,]  159  168  166  179  178  172  174  177  181   178 #>  [8151,]  158  167  165  178  177  173  175  178  182   179 #>  [8152,]  159  168  166  179  178  172  174  177  181   178 #>  [8153,]  158  167  165  178  177  173  175  178  182   179 #>  [8154,]  158  167  165  178  177  173  175  178  182   179 #>  [8155,]  159  168  166  179  178  172  174  177  181   178 #>  [8156,]  158  167  165  178  177  173  175  178  182   179 #>  [8157,]  158  167  165  178  177  173  175  178  182   179 #>  [8158,]  159  168  166  179  178  172  174  177  181   178 #>  [8159,]  159  168  166  179  178  172  174  177  181   178 #>  [8160,]  158  167  165  178  177  174  175  178  182   179 #>  [8161,]  159  168  166  179  178  172  174  177  181   178 #>  [8162,]  158  167  165  178  177  173  175  178  182   179 #>  [8163,]  158  167  165  178  177  173  175  178  182   179 #>  [8164,]  158  167  165  178  177  173  175  178  182   179 #>  [8165,]  158  167  165  178  177  174  175  178  182   179 #>  [8166,]  158  167  165  178  177  173  175  178  182   179 #>  [8167,]  158  167  165  178  177  173  175  178  182   179 #>  [8168,]  159  168  166  179  178  172  174  177  181   178 #>  [8169,]  159  168  166  179  178  172  174  177  181   178 #>  [8170,]  159  168  166  179  178  172  174  177  181   178 #>  [8171,]  159  168  166  179  178  172  174  177  181   178 #>  [8172,]  158  167  165  178  177  173  175  178  182   179 #>  [8173,]  159  168  166  179  178  172  174  177  181   178 #>  [8174,]  159  168  166  179  178  172  174  177  181   178 #>  [8175,]  159  168  166  179  178  172  174  177  181   178 #>  [8176,]  159  168  166  179  178  172  174  177  181   178 #>  [8177,]  159  168  166  179  178  172  174  177  181   178 #>  [8178,]  158  167  165  178  177  173  175  178  182   179 #>  [8179,]  159  168  166  179  178  172  174  177  181   178 #>  [8180,]  158  167  165  178  177  173  175  178  182   179 #>  [8181,]  159  168  166  179  178  172  174  177  181   178 #>  [8182,]  158  167  165  178  177  173  175  178  182   179 #>  [8183,]  159  168  166  179  178  172  174  177  181   178 #>  [8184,]  159  168  166  179  178  172  174  177  181   178 #>  [8185,]  158  167  165  178  177  173  175  178  182   179 #>  [8186,]  159  168  166  179  178  172  174  177  181   178 #>  [8187,]  159  168  166  179  178  172  174  177  181   178 #>  [8188,]  158  167  165  178  177  173  175  178  182   179 #>  [8189,]  158  167  165  178  177  173  175  178  182   179 #>  [8190,]  159  168  166  179  178  172  174  177  181   178 #>  [8191,]  158  167  165  178  177  173  175  178  182   179 #>  [8192,]  159  168  166  179  178  172  174  177  181   178 #>  [8193,]  159  168  166  179  178  172  174  177  181   178 #>  [8194,]  159  168  166  179  178  172  174  177  181   178 #>  [8195,]  158  167  165  178  177  173  175  178  182   179 #>  [8196,]  159  168  166  179  178  172  174  177  181   178 #>  [8197,]  159  168  166  179  178  172  174  177  181   178 #>  [8198,]  159  168  166  179  178  172  174  177  181   178 #>  [8199,]  159  168  166  179  178  172  174  177  181   178 #>  [8200,]  159  168  166  179  178  172  174  177  181   178 #>  [8201,]  161  170  168  181  180  176  176  179  183   180 #>  [8202,]  161  170  168  181  180  176  176  179  183   180 #>  [8203,]  161  170  168  181  180  176  176  179  183   180 #>  [8204,]  160  169  167  180  179  175  176  179  183   180 #>  [8205,]  161  170  168  181  180  176  176  179  183   180 #>  [8206,]  161  170  168  181  180  176  176  179  183   180 #>  [8207,]  161  170  168  181  180  176  176  179  183   180 #>  [8208,]  160  169  167  180  179  175  176  179  183   180 #>  [8209,]  160  169  167  180  179  175  176  179  183   180 #>  [8210,]  160  169  167  180  179  175  176  179  183   180 #>  [8211,]  161  170  168  181  180  176  176  179  183   180 #>  [8212,]  161  170  168  181  180  176  176  179  183   180 #>  [8213,]  161  170  168  181  180  176  176  179  183   180 #>  [8214,]  161  170  168  181  180  176  176  179  183   180 #>  [8215,]  161  170  168  181  180  176  176  179  183   180 #>  [8216,]  161  170  168  181  180  176  176  179  183   180 #>  [8217,]  161  170  168  181  180  176  176  179  183   180 #>  [8218,]  161  170  168  181  180  176  176  179  183   180 #>  [8219,]  161  170  168  181  180  176  176  179  183   180 #>  [8220,]  161  170  168  181  180  176  176  180  184   181 #>  [8221,]  161  170  168  181  180  176  176  179  183   180 #>  [8222,]  161  170  168  181  180  176  176  180  184   181 #>  [8223,]  161  170  168  181  180  176  176  179  183   180 #>  [8224,]  161  170  168  181  180  176  176  179  183   180 #>  [8225,]  161  170  168  181  180  176  176  179  183   180 #>  [8226,]  161  170  168  181  180  176  176  179  183   180 #>  [8227,]  161  170  168  181  180  176  176  180  184   181 #>  [8228,]  161  170  168  181  180  176  176  179  183   180 #>  [8229,]  161  170  168  181  180  176  176  180  184   181 #>  [8230,]  161  170  168  181  180  176  176  179  183   180 #>  [8231,]  161  170  168  181  180  176  176  179  183   180 #>  [8232,]  161  170  168  181  180  176  176  179  183   180 #>  [8233,]  161  170  168  181  180  176  176  179  183   180 #>  [8234,]  161  170  168  181  180  176  176  179  183   180 #>  [8235,]  161  170  168  181  180  176  176  179  183   180 #>  [8236,]  161  170  168  181  180  176  176  179  183   180 #>  [8237,]  161  170  168  181  180  176  176  179  183   180 #>  [8238,]  161  170  168  181  180  176  176  179  183   180 #>  [8239,]  161  170  168  181  180  176  176  179  183   180 #>  [8240,]  161  170  168  181  180  176  176  179  183   180 #>  [8241,]  161  170  168  181  180  176  176  179  183   180 #>  [8242,]  161  170  168  181  180  176  176  179  183   180 #>  [8243,]  160  169  167  180  179  175  176  179  183   180 #>  [8244,]  161  170  168  181  180  176  176  179  183   180 #>  [8245,]  161  170  168  181  180  176  176  179  183   180 #>  [8246,]  161  170  168  181  180  176  176  179  183   180 #>  [8247,]  161  170  168  181  180  176  176  179  183   180 #>  [8248,]  161  170  168  181  180  176  176  179  183   180 #>  [8249,]  161  170  168  181  180  176  176  179  183   180 #>  [8250,]  161  170  168  181  180  176  176  179  183   180 #>  [8251,]  160  169  167  180  179  175  176  179  183   180 #>  [8252,]  161  170  168  181  180  176  176  179  183   180 #>  [8253,]  161  170  168  181  180  176  176  179  183   180 #>  [8254,]  161  170  168  181  180  176  176  179  183   180 #>  [8255,]  161  170  168  181  180  176  176  179  183   180 #>  [8256,]  161  170  168  181  180  176  176  179  183   180 #>  [8257,]  161  170  168  181  180  176  176  179  183   180 #>  [8258,]  161  170  168  181  180  176  176  180  184   181 #>  [8259,]  161  170  168  181  180  176  176  179  183   180 #>  [8260,]  160  169  167  180  179  175  176  179  183   180 #>  [8261,]  161  170  168  181  180  176  176  179  183   180 #>  [8262,]  161  170  168  181  180  176  176  179  183   180 #>  [8263,]  161  170  168  181  180  176  176  179  183   180 #>  [8264,]  161  170  168  181  180  176  176  180  184   181 #>  [8265,]  161  170  168  181  180  176  176  179  183   180 #>  [8266,]  161  170  168  181  180  176  176  179  183   180 #>  [8267,]  161  170  168  181  180  176  176  179  183   180 #>  [8268,]  161  170  168  181  180  176  176  179  183   180 #>  [8269,]  161  170  168  181  180  176  176  179  183   180 #>  [8270,]  161  170  168  181  180  176  176  179  183   180 #>  [8271,]  161  170  168  181  180  176  176  179  183   180 #>  [8272,]  161  170  168  181  180  176  176  179  183   180 #>  [8273,]  161  170  168  181  180  176  176  179  183   180 #>  [8274,]  161  170  168  181  180  176  176  179  183   180 #>  [8275,]  161  170  168  181  180  176  176  179  183   180 #>  [8276,]  161  170  168  181  180  176  176  179  183   180 #>  [8277,]  161  170  168  181  180  176  176  180  184   181 #>  [8278,]  161  170  168  181  180  176  176  179  183   180 #>  [8279,]  161  170  168  181  180  176  176  179  183   180 #>  [8280,]  161  170  168  181  180  176  176  179  183   180 #>  [8281,]  161  170  168  181  180  176  176  180  184   181 #>  [8282,]  161  170  168  181  180  176  176  179  183   180 #>  [8283,]  161  170  168  181  180  176  176  179  183   180 #>  [8284,]  161  170  168  181  180  176  176  179  183   180 #>  [8285,]  160  169  167  180  179  175  176  179  183   180 #>  [8286,]  161  170  168  181  180  176  176  179  183   180 #>  [8287,]  161  170  168  181  180  176  176  180  184   181 #>  [8288,]  161  170  168  181  180  176  176  179  183   180 #>  [8289,]  161  170  168  181  180  176  176  179  183   180 #>  [8290,]  161  170  168  181  180  176  176  179  183   180 #>  [8291,]  160  169  167  180  179  175  176  179  183   180 #>  [8292,]  161  170  168  181  180  176  176  179  183   180 #>  [8293,]  161  170  168  181  180  176  176  179  183   180 #>  [8294,]  161  170  168  181  180  176  176  179  183   180 #>  [8295,]  160  169  167  180  179  175  176  179  183   180 #>  [8296,]  161  170  168  181  180  176  176  179  183   180 #>  [8297,]  161  170  168  181  180  176  176  179  183   180 #>  [8298,]  161  170  168  181  180  176  176  179  183   180 #>  [8299,]  161  170  168  181  180  176  176  179  183   180 #>  [8300,]  161  170  168  181  180  176  176  180  184   181 #>  [8301,]  162  171  169  182  181  177  177  182  186   183 #>  [8302,]  163  172  170  182  181  177  177  182  186   183 #>  [8303,]  162  171  169  182  181  177  177  181  185   182 #>  [8304,]  162  171  169  182  181  177  177  182  186   183 #>  [8305,]  162  171  169  182  181  177  177  182  186   183 #>  [8306,]  162  171  169  182  181  177  177  182  186   183 #>  [8307,]  162  171  169  182  181  177  177  182  186   183 #>  [8308,]  162  171  169  182  181  177  177  182  186   183 #>  [8309,]  163  172  170  182  181  177  177  182  186   183 #>  [8310,]  163  172  170  182  181  177  177  181  185   182 #>  [8311,]  162  171  169  182  181  177  177  181  185   182 #>  [8312,]  163  172  170  182  181  177  177  182  186   183 #>  [8313,]  163  172  170  182  181  177  177  182  186   183 #>  [8314,]  162  171  169  182  181  177  177  181  185   182 #>  [8315,]  162  171  169  182  181  177  177  182  186   183 #>  [8316,]  162  171  169  182  181  177  177  182  186   183 #>  [8317,]  163  172  170  182  181  177  177  182  186   183 #>  [8318,]  162  171  169  182  182  177  177  182  186   183 #>  [8319,]  162  171  169  182  181  177  177  182  186   183 #>  [8320,]  162  171  169  182  181  177  177  182  186   183 #>  [8321,]  163  172  170  182  181  177  177  182  186   183 #>  [8322,]  162  171  169  182  181  177  177  182  186   183 #>  [8323,]  162  171  169  182  181  177  177  182  186   183 #>  [8324,]  162  171  169  182  181  177  177  182  186   183 #>  [8325,]  162  171  169  182  182  177  177  182  186   183 #>  [8326,]  162  171  169  182  181  177  177  182  186   183 #>  [8327,]  162  171  169  182  181  177  177  182  186   183 #>  [8328,]  162  171  169  182  181  177  177  182  186   183 #>  [8329,]  163  172  170  182  181  177  177  182  186   183 #>  [8330,]  162  171  169  182  181  177  177  182  186   183 #>  [8331,]  162  171  169  182  181  177  177  181  185   182 #>  [8332,]  163  172  170  182  181  177  177  181  185   182 #>  [8333,]  163  172  170  182  181  177  177  182  186   183 #>  [8334,]  162  171  169  182  181  177  177  182  186   183 #>  [8335,]  162  171  169  182  181  177  177  182  186   183 #>  [8336,]  162  171  169  182  181  177  177  182  186   183 #>  [8337,]  162  171  169  182  181  177  177  182  186   183 #>  [8338,]  162  171  169  182  181  177  177  182  186   183 #>  [8339,]  162  171  169  182  182  177  177  182  186   183 #>  [8340,]  163  172  170  182  181  177  177  181  185   182 #>  [8341,]  162  171  169  182  181  177  177  182  186   183 #>  [8342,]  162  171  169  182  181  177  177  182  186   183 #>  [8343,]  162  171  169  182  181  177  177  182  186   183 #>  [8344,]  162  171  169  182  181  177  177  182  186   183 #>  [8345,]  162  171  169  182  181  177  177  182  186   183 #>  [8346,]  162  171  169  182  181  177  177  182  186   183 #>  [8347,]  162  171  169  182  181  177  177  182  186   183 #>  [8348,]  162  171  169  182  181  177  177  181  185   182 #>  [8349,]  162  171  169  182  181  177  177  182  186   183 #>  [8350,]  162  171  169  182  181  177  177  182  186   183 #>  [8351,]  162  171  169  182  181  177  177  182  186   183 #>  [8352,]  162  171  169  182  181  177  177  182  186   183 #>  [8353,]  163  172  170  182  181  177  177  182  186   183 #>  [8354,]  162  171  169  182  181  177  177  182  186   183 #>  [8355,]  162  171  169  182  181  177  177  182  186   183 #>  [8356,]  162  171  169  182  181  177  177  182  186   183 #>  [8357,]  162  171  169  182  181  177  177  182  186   183 #>  [8358,]  162  171  169  182  181  177  177  182  186   183 #>  [8359,]  162  171  169  182  181  177  177  182  186   183 #>  [8360,]  163  172  170  182  181  177  177  182  186   183 #>  [8361,]  162  171  169  182  181  177  177  182  186   183 #>  [8362,]  162  171  169  182  181  177  177  182  186   183 #>  [8363,]  163  172  170  182  181  177  177  182  186   183 #>  [8364,]  162  171  169  182  181  177  177  182  186   183 #>  [8365,]  162  171  169  182  181  177  177  182  186   183 #>  [8366,]  162  171  169  182  181  177  177  182  186   183 #>  [8367,]  162  171  169  182  181  177  177  182  186   183 #>  [8368,]  162  171  169  182  181  177  177  182  186   183 #>  [8369,]  162  171  169  182  181  177  177  182  186   183 #>  [8370,]  163  172  170  182  181  177  177  181  185   182 #>  [8371,]  162  171  169  182  181  177  177  182  186   183 #>  [8372,]  162  171  169  182  181  177  177  182  186   183 #>  [8373,]  162  171  169  182  182  177  177  182  186   183 #>  [8374,]  162  171  169  182  181  177  177  181  185   182 #>  [8375,]  163  172  170  182  182  177  177  182  186   183 #>  [8376,]  162  171  169  182  181  177  177  182  186   183 #>  [8377,]  162  171  169  182  181  177  177  182  186   183 #>  [8378,]  162  171  169  182  181  177  177  182  186   183 #>  [8379,]  162  171  169  182  181  177  177  182  186   183 #>  [8380,]  163  172  170  182  181  177  177  182  186   183 #>  [8381,]  163  172  170  182  181  177  177  182  186   183 #>  [8382,]  162  171  169  182  181  177  177  182  186   183 #>  [8383,]  162  171  169  182  181  177  177  182  186   183 #>  [8384,]  162  171  169  182  181  177  177  182  186   183 #>  [8385,]  162  171  169  182  181  177  177  182  186   183 #>  [8386,]  163  172  170  182  181  177  177  182  186   183 #>  [8387,]  162  171  169  182  181  177  177  182  186   183 #>  [8388,]  162  171  169  182  181  177  177  182  186   183 #>  [8389,]  162  171  169  182  181  177  177  182  186   183 #>  [8390,]  162  171  169  182  181  177  177  182  186   183 #>  [8391,]  162  171  169  182  181  177  177  182  186   183 #>  [8392,]  162  171  169  182  181  177  177  182  186   183 #>  [8393,]  162  171  169  182  181  177  177  182  186   183 #>  [8394,]  162  171  169  182  181  177  177  182  186   183 #>  [8395,]  162  171  169  182  181  177  177  182  186   183 #>  [8396,]  162  171  169  182  181  177  177  182  186   183 #>  [8397,]  162  171  169  182  181  177  177  182  186   183 #>  [8398,]  162  171  169  182  181  177  177  181  185   182 #>  [8399,]  162  171  169  182  181  177  177  182  186   183 #>  [8400,]  162  171  169  182  181  177  177  182  186   183 #>  [8401,]  164  173  171  185  184  179  179  184  188   185 #>  [8402,]  164  173  171  185  184  179  179  184  188   185 #>  [8403,]  164  173  171  184  184  179  179  184  188   185 #>  [8404,]  164  173  171  184  184  179  179  184  188   185 #>  [8405,]  164  173  171  185  184  179  179  184  188   185 #>  [8406,]  164  173  171  185  184  179  179  184  188   185 #>  [8407,]  165  174  172  183  183  178  178  183  187   184 #>  [8408,]  164  173  171  184  184  179  179  184  188   185 #>  [8409,]  164  173  171  185  184  179  179  184  188   185 #>  [8410,]  164  173  171  185  184  179  179  184  188   185 #>  [8411,]  164  173  171  185  184  179  179  184  188   185 #>  [8412,]  164  173  171  184  184  179  179  184  188   185 #>  [8413,]  164  173  171  185  184  179  179  184  188   185 #>  [8414,]  164  173  171  185  184  179  179  184  188   185 #>  [8415,]  164  173  171  185  184  179  179  184  188   185 #>  [8416,]  164  173  171  185  184  179  179  184  188   185 #>  [8417,]  164  173  171  185  184  179  179  184  188   185 #>  [8418,]  164  173  171  185  184  179  179  184  188   185 #>  [8419,]  164  173  171  185  184  179  179  184  188   185 #>  [8420,]  165  174  172  183  183  178  178  183  187   184 #>  [8421,]  164  173  171  185  184  179  179  184  188   185 #>  [8422,]  164  173  171  185  184  179  179  184  188   185 #>  [8423,]  164  173  171  185  184  179  179  184  188   185 #>  [8424,]  165  174  172  183  183  178  178  183  187   184 #>  [8425,]  164  173  171  184  184  179  179  184  188   185 #>  [8426,]  164  173  171  185  184  179  179  184  188   185 #>  [8427,]  164  173  171  185  184  179  179  184  188   185 #>  [8428,]  165  174  172  183  183  178  178  183  187   184 #>  [8429,]  164  173  171  185  184  179  179  184  188   185 #>  [8430,]  164  173  171  185  184  179  179  184  188   185 #>  [8431,]  164  173  171  184  184  179  179  184  188   185 #>  [8432,]  164  173  171  185  184  179  179  184  188   185 #>  [8433,]  164  173  171  185  184  179  179  184  188   185 #>  [8434,]  164  173  171  185  184  179  179  184  188   185 #>  [8435,]  164  173  171  185  184  179  179  184  188   185 #>  [8436,]  164  173  171  185  184  179  179  184  188   185 #>  [8437,]  164  173  171  185  184  179  179  184  188   185 #>  [8438,]  164  173  171  185  184  179  179  184  188   185 #>  [8439,]  164  173  171  185  184  179  179  184  188   185 #>  [8440,]  164  173  171  185  184  179  179  184  188   185 #>  [8441,]  164  173  171  185  184  179  179  184  188   185 #>  [8442,]  164  173  171  185  184  179  179  184  188   185 #>  [8443,]  164  173  171  185  184  179  179  184  188   185 #>  [8444,]  164  173  171  185  184  179  179  184  188   185 #>  [8445,]  164  173  171  185  184  179  179  184  188   185 #>  [8446,]  164  173  171  185  184  179  179  184  188   185 #>  [8447,]  164  173  171  184  184  179  179  184  188   185 #>  [8448,]  164  173  171  185  184  179  179  184  188   185 #>  [8449,]  164  173  171  185  184  179  179  184  188   185 #>  [8450,]  165  174  172  183  183  178  178  183  187   184 #>  [8451,]  164  173  171  185  184  179  179  184  188   185 #>  [8452,]  165  174  172  183  183  178  178  183  187   184 #>  [8453,]  164  173  171  185  184  179  179  184  188   185 #>  [8454,]  164  173  171  185  184  179  179  184  188   185 #>  [8455,]  164  173  171  185  184  179  179  184  188   185 #>  [8456,]  164  173  171  185  184  179  179  184  188   185 #>  [8457,]  164  173  171  184  184  179  179  184  188   185 #>  [8458,]  164  173  171  185  184  179  179  184  188   185 #>  [8459,]  164  173  171  184  184  179  179  184  188   185 #>  [8460,]  164  173  171  184  184  179  179  184  188   185 #>  [8461,]  164  173  171  185  184  179  179  184  188   185 #>  [8462,]  164  173  171  185  184  179  179  184  188   185 #>  [8463,]  164  173  171  185  184  179  179  184  188   185 #>  [8464,]  164  173  171  185  184  179  179  184  188   185 #>  [8465,]  164  173  171  185  184  179  179  184  188   185 #>  [8466,]  164  173  171  185  184  179  179  184  188   185 #>  [8467,]  164  173  171  185  184  179  179  184  188   185 #>  [8468,]  164  173  171  184  184  179  179  184  188   185 #>  [8469,]  164  173  171  185  184  179  179  184  188   185 #>  [8470,]  164  173  171  185  184  179  179  184  188   185 #>  [8471,]  164  173  171  185  184  179  179  184  188   185 #>  [8472,]  164  173  171  185  184  179  179  184  188   185 #>  [8473,]  164  173  171  185  184  179  179  184  188   185 #>  [8474,]  164  173  171  185  184  179  179  184  188   185 #>  [8475,]  164  173  171  185  184  179  179  184  188   185 #>  [8476,]  165  174  172  183  183  178  178  183  187   184 #>  [8477,]  164  173  171  185  184  179  179  184  188   185 #>  [8478,]  164  173  171  185  184  179  179  184  188   185 #>  [8479,]  164  173  171  185  184  179  179  184  188   185 #>  [8480,]  164  173  171  184  184  179  179  184  188   185 #>  [8481,]  164  173  171  185  184  179  179  184  188   185 #>  [8482,]  164  173  171  185  184  179  179  184  188   185 #>  [8483,]  164  173  171  185  184  179  179  184  188   185 #>  [8484,]  164  173  171  185  184  179  179  184  188   185 #>  [8485,]  164  173  171  185  184  179  179  184  188   185 #>  [8486,]  165  174  172  183  183  178  178  183  187   184 #>  [8487,]  164  173  171  185  184  179  179  184  188   185 #>  [8488,]  164  173  171  185  184  179  179  184  188   185 #>  [8489,]  164  173  171  185  184  179  179  184  188   185 #>  [8490,]  164  173  171  185  184  179  179  184  188   185 #>  [8491,]  164  173  171  185  184  179  179  184  188   185 #>  [8492,]  164  173  171  185  184  179  179  184  188   185 #>  [8493,]  164  173  171  185  184  179  179  184  188   185 #>  [8494,]  164  173  171  185  184  179  179  184  188   185 #>  [8495,]  164  173  171  185  184  179  179  184  188   185 #>  [8496,]  164  173  171  184  184  179  179  184  188   185 #>  [8497,]  164  173  171  184  184  179  179  184  188   185 #>  [8498,]  164  173  171  184  184  179  179  184  188   185 #>  [8499,]  164  173  171  185  184  179  179  184  188   185 #>  [8500,]  164  173  171  185  184  179  179  184  188   185 #>  [8501,]  166  175  173  186  185  180  180  185  189   186 #>  [8502,]  166  175  173  186  185  180  180  185  189   186 #>  [8503,]  167  176  174  187  186  181  181  186  190   187 #>  [8504,]  166  175  173  186  185  180  180  185  189   186 #>  [8505,]  166  175  173  186  185  180  180  185  189   186 #>  [8506,]  167  176  174  187  186  181  181  186  190   187 #>  [8507,]  166  175  173  186  185  180  180  185  189   186 #>  [8508,]  166  175  173  186  185  180  180  185  189   186 #>  [8509,]  166  175  173  186  185  180  180  185  189   186 #>  [8510,]  166  175  173  186  185  180  180  185  189   186 #>  [8511,]  166  175  173  186  185  180  180  185  189   186 #>  [8512,]  166  175  173  186  185  180  180  185  189   186 #>  [8513,]  166  175  173  186  185  180  180  185  189   186 #>  [8514,]  166  175  173  186  185  180  180  185  189   186 #>  [8515,]  166  175  173  186  185  180  180  185  189   186 #>  [8516,]  166  175  173  186  185  180  180  185  189   186 #>  [8517,]  166  175  173  186  185  180  180  185  189   186 #>  [8518,]  166  175  173  186  185  180  180  185  189   186 #>  [8519,]  166  175  173  186  185  180  180  185  189   186 #>  [8520,]  166  175  173  186  185  180  180  185  189   186 #>  [8521,]  166  175  173  186  185  180  180  185  189   186 #>  [8522,]  166  175  173  186  185  180  180  185  189   186 #>  [8523,]  166  175  173  186  185  180  180  185  189   186 #>  [8524,]  166  175  173  186  185  180  180  185  189   186 #>  [8525,]  166  175  173  186  185  180  180  185  189   186 #>  [8526,]  166  175  173  186  185  180  180  185  189   186 #>  [8527,]  166  175  173  186  185  180  180  185  189   186 #>  [8528,]  166  175  173  186  185  180  180  185  189   186 #>  [8529,]  166  175  173  186  185  180  180  185  189   186 #>  [8530,]  166  175  173  186  185  180  180  185  189   186 #>  [8531,]  166  175  173  186  185  180  180  185  189   186 #>  [8532,]  166  175  173  186  185  180  180  185  189   186 #>  [8533,]  166  175  173  186  185  180  180  185  189   186 #>  [8534,]  167  176  174  187  186  181  181  186  190   187 #>  [8535,]  166  175  173  186  185  180  180  185  189   186 #>  [8536,]  166  175  173  186  185  180  180  185  189   186 #>  [8537,]  166  175  173  186  185  180  180  185  189   186 #>  [8538,]  166  175  173  186  185  180  180  185  189   186 #>  [8539,]  166  175  173  186  185  180  180  185  189   186 #>  [8540,]  166  175  173  186  185  180  180  185  189   186 #>  [8541,]  166  175  173  186  185  180  180  185  189   186 #>  [8542,]  166  175  173  186  185  180  180  185  189   186 #>  [8543,]  166  175  173  186  185  180  180  185  189   186 #>  [8544,]  166  175  173  186  185  180  180  185  189   186 #>  [8545,]  166  175  173  186  185  180  180  185  189   186 #>  [8546,]  166  175  173  186  185  180  180  185  189   186 #>  [8547,]  166  175  173  186  185  180  180  185  189   186 #>  [8548,]  166  175  173  186  185  180  180  185  189   186 #>  [8549,]  166  175  173  186  185  180  180  185  189   186 #>  [8550,]  166  175  173  186  185  180  180  185  189   186 #>  [8551,]  166  175  173  186  185  180  180  185  189   186 #>  [8552,]  166  175  173  186  185  180  180  185  189   186 #>  [8553,]  166  175  173  186  185  180  180  185  189   186 #>  [8554,]  166  175  173  186  185  180  180  185  189   186 #>  [8555,]  166  175  173  186  185  180  180  185  189   186 #>  [8556,]  166  175  173  186  185  180  180  185  189   186 #>  [8557,]  166  175  173  186  185  180  180  185  189   186 #>  [8558,]  166  175  173  186  185  180  180  185  189   186 #>  [8559,]  166  175  173  186  185  180  180  185  189   186 #>  [8560,]  167  176  174  187  186  181  181  186  190   187 #>  [8561,]  166  175  173  186  185  180  180  185  189   186 #>  [8562,]  166  175  173  186  185  180  180  185  189   186 #>  [8563,]  166  175  173  186  185  180  180  185  189   186 #>  [8564,]  166  175  173  186  185  180  180  185  189   186 #>  [8565,]  167  176  174  187  186  181  181  186  190   187 #>  [8566,]  166  175  173  186  185  180  180  185  189   186 #>  [8567,]  166  175  173  186  185  180  180  185  189   186 #>  [8568,]  166  175  173  186  185  180  180  185  189   186 #>  [8569,]  166  175  173  186  185  180  180  185  189   186 #>  [8570,]  167  176  174  187  186  181  181  186  190   187 #>  [8571,]  166  175  173  186  185  180  180  185  189   186 #>  [8572,]  166  175  173  186  185  180  180  185  189   186 #>  [8573,]  167  176  174  187  186  181  181  186  190   187 #>  [8574,]  166  175  173  186  185  180  180  185  189   186 #>  [8575,]  166  175  173  186  185  180  180  185  189   186 #>  [8576,]  166  175  173  186  185  180  180  185  189   186 #>  [8577,]  166  175  173  186  185  180  180  185  189   186 #>  [8578,]  166  175  173  186  185  180  180  185  189   186 #>  [8579,]  166  175  173  186  185  180  180  185  189   186 #>  [8580,]  166  175  173  186  185  180  180  185  189   186 #>  [8581,]  166  175  173  186  185  180  180  185  189   186 #>  [8582,]  166  175  173  186  185  180  180  185  189   186 #>  [8583,]  166  175  173  186  185  180  180  185  189   186 #>  [8584,]  166  175  173  186  185  180  180  185  189   186 #>  [8585,]  166  175  173  186  185  180  180  185  189   186 #>  [8586,]  166  175  173  186  185  180  180  185  189   186 #>  [8587,]  166  175  173  186  185  180  180  185  189   186 #>  [8588,]  166  175  173  186  185  180  180  185  189   186 #>  [8589,]  166  175  173  186  185  180  180  185  189   186 #>  [8590,]  166  175  173  186  185  180  180  185  189   186 #>  [8591,]  166  175  173  186  185  180  180  185  189   186 #>  [8592,]  166  175  173  186  185  180  180  185  189   186 #>  [8593,]  167  176  174  187  186  181  181  186  190   187 #>  [8594,]  166  175  173  186  185  180  180  185  189   186 #>  [8595,]  166  175  173  186  185  180  180  185  189   186 #>  [8596,]  166  175  173  186  185  180  180  185  189   186 #>  [8597,]  166  175  173  186  185  180  180  185  189   186 #>  [8598,]  166  175  173  186  185  180  180  185  189   186 #>  [8599,]  166  175  173  186  185  180  180  185  189   186 #>  [8600,]  166  175  173  186  185  180  180  185  189   186 #>  [8601,]  169  178  176  189  188  183  183  188  192   189 #>  [8602,]  169  178  176  189  188  183  183  188  192   189 #>  [8603,]  168  177  175  188  187  182  182  187  191   188 #>  [8604,]  169  178  176  189  188  183  183  188  192   189 #>  [8605,]  169  178  176  189  188  183  183  188  192   189 #>  [8606,]  169  178  176  189  188  183  183  188  192   189 #>  [8607,]  168  177  175  188  187  182  182  187  191   188 #>  [8608,]  168  177  175  188  187  182  182  187  191   188 #>  [8609,]  169  178  176  189  188  183  183  188  192   189 #>  [8610,]  169  178  176  189  188  183  183  188  192   189 #>  [8611,]  169  178  176  189  188  183  183  188  192   189 #>  [8612,]  169  178  176  189  188  183  183  188  192   189 #>  [8613,]  169  178  176  189  188  183  183  188  192   189 #>  [8614,]  169  178  176  189  188  183  183  188  192   189 #>  [8615,]  169  178  176  189  188  183  183  188  192   189 #>  [8616,]  169  178  176  189  188  183  183  188  192   189 #>  [8617,]  169  178  176  189  188  183  183  188  192   189 #>  [8618,]  169  178  176  189  188  183  183  188  192   189 #>  [8619,]  169  178  176  189  188  183  183  188  192   189 #>  [8620,]  168  177  175  188  187  182  182  187  191   188 #>  [8621,]  169  178  176  189  188  183  183  188  192   189 #>  [8622,]  169  178  176  189  188  183  183  188  192   189 #>  [8623,]  169  178  176  189  188  183  183  188  192   189 #>  [8624,]  169  178  176  189  188  183  183  188  192   189 #>  [8625,]  168  177  175  188  187  182  182  187  191   188 #>  [8626,]  169  178  176  189  188  183  183  188  192   189 #>  [8627,]  169  178  176  189  188  183  183  188  192   189 #>  [8628,]  169  178  176  189  188  183  183  188  192   189 #>  [8629,]  169  178  176  189  188  183  183  188  192   189 #>  [8630,]  169  178  176  189  188  183  183  188  192   189 #>  [8631,]  169  178  176  189  188  183  183  188  192   189 #>  [8632,]  169  178  176  189  188  183  183  188  192   189 #>  [8633,]  169  178  176  189  188  183  183  188  192   189 #>  [8634,]  169  178  176  189  188  183  183  188  192   189 #>  [8635,]  169  178  176  189  188  183  183  188  192   189 #>  [8636,]  169  178  176  189  188  183  183  188  192   189 #>  [8637,]  169  178  176  189  188  183  183  188  192   189 #>  [8638,]  169  178  176  189  188  183  183  188  192   189 #>  [8639,]  168  177  175  188  187  182  182  187  191   188 #>  [8640,]  169  178  176  189  188  183  183  188  192   189 #>  [8641,]  169  178  176  189  188  183  183  188  192   189 #>  [8642,]  169  178  176  189  188  183  183  188  192   189 #>  [8643,]  169  178  176  189  188  183  183  188  192   189 #>  [8644,]  168  177  175  188  187  182  182  187  191   188 #>  [8645,]  169  178  176  189  188  183  183  188  192   189 #>  [8646,]  168  177  175  188  187  182  182  187  191   188 #>  [8647,]  169  178  176  189  188  183  183  188  192   189 #>  [8648,]  169  178  176  189  188  183  183  188  192   189 #>  [8649,]  168  177  175  188  187  182  182  187  191   188 #>  [8650,]  168  177  175  188  187  182  182  187  191   188 #>  [8651,]  169  178  176  189  188  183  183  188  192   189 #>  [8652,]  169  178  176  189  188  183  183  188  192   189 #>  [8653,]  168  177  175  188  187  182  182  187  191   188 #>  [8654,]  169  178  176  189  188  183  183  188  192   189 #>  [8655,]  168  177  175  188  187  182  182  187  191   188 #>  [8656,]  168  177  175  188  187  182  182  187  191   188 #>  [8657,]  169  178  176  189  188  183  183  188  192   189 #>  [8658,]  169  178  176  189  188  183  183  188  192   189 #>  [8659,]  168  177  175  188  187  182  182  187  191   188 #>  [8660,]  169  178  176  189  188  183  183  188  192   189 #>  [8661,]  169  178  176  189  188  183  183  188  192   189 #>  [8662,]  169  178  176  189  188  183  183  188  192   189 #>  [8663,]  169  178  176  189  188  183  183  188  192   189 #>  [8664,]  169  178  176  189  188  183  183  188  192   189 #>  [8665,]  168  177  175  188  187  182  182  187  191   188 #>  [8666,]  168  177  175  188  187  182  182  187  191   188 #>  [8667,]  169  178  176  189  188  183  183  188  192   189 #>  [8668,]  169  178  176  189  188  183  183  188  192   189 #>  [8669,]  169  178  176  189  188  183  183  188  192   189 #>  [8670,]  168  177  175  188  187  182  182  187  191   188 #>  [8671,]  169  178  176  189  188  183  183  188  192   189 #>  [8672,]  169  178  176  189  188  183  183  188  192   189 #>  [8673,]  169  178  176  189  188  183  183  188  192   189 #>  [8674,]  169  178  176  189  188  183  183  188  192   189 #>  [8675,]  169  178  176  189  188  183  183  188  192   189 #>  [8676,]  169  178  176  189  188  183  183  188  192   189 #>  [8677,]  169  178  176  189  188  183  183  188  192   189 #>  [8678,]  169  178  176  189  188  183  183  188  192   189 #>  [8679,]  169  178  176  189  188  183  183  188  192   189 #>  [8680,]  169  178  176  189  188  183  183  188  192   189 #>  [8681,]  169  178  176  189  188  183  183  188  192   189 #>  [8682,]  169  178  176  189  188  183  183  188  192   189 #>  [8683,]  169  178  176  189  188  183  183  188  192   189 #>  [8684,]  168  177  175  188  187  182  182  187  191   188 #>  [8685,]  169  178  176  189  188  183  183  188  192   189 #>  [8686,]  168  177  175  188  187  182  182  187  191   188 #>  [8687,]  169  178  176  189  188  183  183  188  192   189 #>  [8688,]  169  178  176  189  188  183  183  188  192   189 #>  [8689,]  169  178  176  189  188  183  183  188  192   189 #>  [8690,]  168  177  175  188  187  182  182  187  191   188 #>  [8691,]  169  178  176  189  188  183  183  188  192   189 #>  [8692,]  169  178  176  189  188  183  183  188  192   189 #>  [8693,]  169  178  176  189  188  183  183  188  192   189 #>  [8694,]  169  178  176  189  188  183  183  188  192   189 #>  [8695,]  169  178  176  189  188  183  183  188  192   189 #>  [8696,]  169  178  176  189  188  183  183  188  192   189 #>  [8697,]  169  178  176  189  188  183  183  188  192   189 #>  [8698,]  168  177  175  188  187  182  182  187  191   188 #>  [8699,]  169  178  176  189  188  183  183  188  192   189 #>  [8700,]  168  177  175  188  187  182  182  187  191   188 #>  [8701,]  171  180  178  191  190  185  185  190  194   191 #>  [8702,]  171  180  178  191  190  185  185  190  194   191 #>  [8703,]  170  179  177  190  189  184  184  189  193   190 #>  [8704,]  170  179  177  190  189  184  184  189  193   190 #>  [8705,]  171  180  178  191  190  185  185  190  194   191 #>  [8706,]  171  180  178  191  190  185  185  190  194   191 #>  [8707,]  170  179  177  190  189  184  184  189  193   190 #>  [8708,]  170  179  177  190  189  184  184  189  193   190 #>  [8709,]  171  180  178  191  190  185  185  190  194   191 #>  [8710,]  171  180  178  191  190  185  185  190  194   191 #>  [8711,]  171  180  178  191  190  185  185  190  194   191 #>  [8712,]  170  179  177  190  189  184  184  189  193   190 #>  [8713,]  171  180  178  191  190  185  185  190  194   191 #>  [8714,]  171  180  178  191  190  185  185  190  194   191 #>  [8715,]  171  180  178  191  190  185  185  190  194   191 #>  [8716,]  171  180  178  191  190  185  185  190  194   191 #>  [8717,]  171  180  178  191  190  185  185  190  194   191 #>  [8718,]  171  180  178  191  190  185  185  190  194   191 #>  [8719,]  171  180  178  191  190  185  185  190  194   191 #>  [8720,]  171  180  178  191  190  185  185  190  194   191 #>  [8721,]  171  180  178  191  190  185  185  190  194   191 #>  [8722,]  171  180  178  191  190  185  185  190  194   191 #>  [8723,]  170  179  177  190  189  184  184  189  193   190 #>  [8724,]  171  180  178  191  190  185  185  190  194   191 #>  [8725,]  170  179  177  190  189  184  184  189  193   190 #>  [8726,]  171  180  178  191  190  185  185  190  194   191 #>  [8727,]  171  180  178  191  190  185  185  190  194   191 #>  [8728,]  171  180  178  191  190  185  185  190  194   191 #>  [8729,]  171  180  178  191  190  185  185  190  194   191 #>  [8730,]  171  180  178  191  190  185  185  190  194   191 #>  [8731,]  170  179  177  190  189  184  184  189  193   190 #>  [8732,]  171  180  178  191  190  185  185  190  194   191 #>  [8733,]  171  180  178  191  190  185  185  190  194   191 #>  [8734,]  171  180  178  191  190  185  185  190  194   191 #>  [8735,]  171  180  178  191  190  185  185  190  194   191 #>  [8736,]  171  180  178  191  190  185  185  190  194   191 #>  [8737,]  170  179  177  190  189  184  184  189  193   190 #>  [8738,]  171  180  178  191  190  185  185  190  194   191 #>  [8739,]  171  180  178  191  190  185  185  190  194   191 #>  [8740,]  170  179  177  190  189  184  184  189  193   190 #>  [8741,]  171  180  178  191  190  185  185  190  194   191 #>  [8742,]  171  180  178  191  190  185  185  190  194   191 #>  [8743,]  171  180  178  191  190  185  185  190  194   191 #>  [8744,]  171  180  178  191  190  185  185  190  194   191 #>  [8745,]  171  180  178  191  190  185  185  190  194   191 #>  [8746,]  170  179  177  190  189  184  184  189  193   190 #>  [8747,]  170  179  177  190  189  184  184  189  193   190 #>  [8748,]  171  180  178  191  190  185  185  190  194   191 #>  [8749,]  171  180  178  191  190  185  185  190  194   191 #>  [8750,]  171  180  178  191  190  185  185  190  194   191 #>  [8751,]  171  180  178  191  190  185  185  190  194   191 #>  [8752,]  170  179  177  190  189  184  184  189  193   190 #>  [8753,]  171  180  178  191  190  185  185  190  194   191 #>  [8754,]  171  180  178  191  190  185  185  190  194   191 #>  [8755,]  170  179  177  190  189  184  184  189  193   190 #>  [8756,]  171  180  178  191  190  185  185  190  194   191 #>  [8757,]  170  179  177  190  189  184  184  189  193   190 #>  [8758,]  171  180  178  191  190  185  185  190  194   191 #>  [8759,]  170  179  177  190  189  184  184  189  193   190 #>  [8760,]  170  179  177  190  189  184  184  189  193   190 #>  [8761,]  171  180  178  191  190  185  185  190  194   191 #>  [8762,]  171  180  178  191  190  185  185  190  194   191 #>  [8763,]  171  180  178  191  190  185  185  190  194   191 #>  [8764,]  171  180  178  191  190  185  185  190  194   191 #>  [8765,]  171  180  178  191  190  185  185  190  194   191 #>  [8766,]  171  180  178  191  190  185  185  190  194   191 #>  [8767,]  171  180  178  191  190  185  185  190  194   191 #>  [8768,]  170  179  177  190  189  184  184  189  193   190 #>  [8769,]  171  180  178  191  190  185  185  190  194   191 #>  [8770,]  171  180  178  191  190  185  185  190  194   191 #>  [8771,]  171  180  178  191  190  185  185  190  194   191 #>  [8772,]  171  180  178  191  190  185  185  190  194   191 #>  [8773,]  171  180  178  191  190  185  185  190  194   191 #>  [8774,]  170  179  177  190  189  184  184  189  193   190 #>  [8775,]  171  180  178  191  190  185  185  190  194   191 #>  [8776,]  171  180  178  191  190  185  185  190  194   191 #>  [8777,]  171  180  178  191  190  185  185  190  194   191 #>  [8778,]  171  180  178  191  190  185  185  190  194   191 #>  [8779,]  171  180  178  191  190  185  185  190  194   191 #>  [8780,]  170  179  177  190  189  184  184  189  193   190 #>  [8781,]  171  180  178  191  190  185  185  190  194   191 #>  [8782,]  171  180  178  191  190  185  185  190  194   191 #>  [8783,]  171  180  178  191  190  185  185  190  194   191 #>  [8784,]  171  180  178  191  190  185  185  190  194   191 #>  [8785,]  171  180  178  191  190  185  185  190  194   191 #>  [8786,]  170  179  177  190  189  184  184  189  193   190 #>  [8787,]  171  180  178  191  190  185  185  190  194   191 #>  [8788,]  171  180  178  191  190  185  185  190  194   191 #>  [8789,]  171  180  178  191  190  185  185  190  194   191 #>  [8790,]  171  180  178  191  190  185  185  190  194   191 #>  [8791,]  171  180  178  191  190  185  185  190  194   191 #>  [8792,]  170  179  177  190  189  184  184  189  193   190 #>  [8793,]  171  180  178  191  190  185  185  190  194   191 #>  [8794,]  171  180  178  191  190  185  185  190  194   191 #>  [8795,]  171  180  178  191  190  185  185  190  194   191 #>  [8796,]  170  179  177  190  189  184  184  189  193   190 #>  [8797,]  170  179  177  190  189  184  184  189  193   190 #>  [8798,]  170  179  177  190  189  184  184  189  193   190 #>  [8799,]  171  180  178  191  190  185  185  190  194   191 #>  [8800,]  171  180  178  191  190  185  185  190  194   191 #>  [8801,]  172  181  179  192  191  186  186  191  195   192 #>  [8802,]  172  181  179  192  191  186  186  191  195   192 #>  [8803,]  172  181  179  192  191  186  186  191  195   192 #>  [8804,]  172  181  179  192  191  186  186  191  195   192 #>  [8805,]  172  181  179  192  191  186  186  191  195   192 #>  [8806,]  173  182  180  193  192  187  187  192  196   193 #>  [8807,]  172  181  179  192  191  186  186  191  195   192 #>  [8808,]  173  182  180  193  192  187  187  192  196   193 #>  [8809,]  173  182  180  193  192  187  187  192  196   193 #>  [8810,]  172  181  179  192  191  186  186  191  195   192 #>  [8811,]  172  181  179  192  191  186  186  191  195   192 #>  [8812,]  173  182  180  193  192  187  187  192  196   193 #>  [8813,]  172  181  179  192  191  186  186  191  195   192 #>  [8814,]  172  181  179  192  191  186  186  191  195   192 #>  [8815,]  173  182  180  193  192  187  187  192  196   193 #>  [8816,]  172  181  179  192  191  186  186  191  195   192 #>  [8817,]  172  181  179  192  191  186  186  191  195   192 #>  [8818,]  172  181  179  192  191  186  186  191  195   192 #>  [8819,]  172  181  179  192  191  186  186  191  195   192 #>  [8820,]  172  181  179  192  191  186  186  191  195   192 #>  [8821,]  172  181  179  192  191  186  186  191  195   192 #>  [8822,]  172  181  179  192  191  186  186  191  195   192 #>  [8823,]  172  181  179  192  191  186  186  191  195   192 #>  [8824,]  172  181  179  192  191  186  186  191  195   192 #>  [8825,]  172  181  179  192  191  186  186  191  195   192 #>  [8826,]  173  182  180  193  192  187  187  192  196   193 #>  [8827,]  172  181  179  192  191  186  186  191  195   192 #>  [8828,]  172  181  179  192  191  186  186  191  195   192 #>  [8829,]  172  181  179  192  191  186  186  191  195   192 #>  [8830,]  172  181  179  192  191  186  186  191  195   192 #>  [8831,]  172  181  179  192  191  186  186  191  195   192 #>  [8832,]  172  181  179  192  191  186  186  191  195   192 #>  [8833,]  173  182  180  193  192  187  187  192  196   193 #>  [8834,]  172  181  179  192  191  186  186  191  195   192 #>  [8835,]  172  181  179  192  191  186  186  191  195   192 #>  [8836,]  172  181  179  192  191  186  186  191  195   192 #>  [8837,]  172  181  179  192  191  186  186  191  195   192 #>  [8838,]  172  181  179  192  191  186  186  191  195   192 #>  [8839,]  172  181  179  192  191  186  186  191  195   192 #>  [8840,]  172  181  179  192  191  186  186  191  195   192 #>  [8841,]  172  181  179  192  191  186  186  191  195   192 #>  [8842,]  172  181  179  192  191  186  186  191  195   192 #>  [8843,]  173  182  180  193  192  187  187  192  196   193 #>  [8844,]  172  181  179  192  191  186  186  191  195   192 #>  [8845,]  173  182  180  193  192  187  187  192  196   193 #>  [8846,]  173  182  180  193  192  187  187  192  196   193 #>  [8847,]  172  181  179  192  191  186  186  191  195   192 #>  [8848,]  172  181  179  192  191  186  186  191  195   192 #>  [8849,]  172  181  179  192  191  186  186  191  195   192 #>  [8850,]  172  181  179  192  191  186  186  191  195   192 #>  [8851,]  173  182  180  193  192  187  187  192  196   193 #>  [8852,]  172  181  179  192  191  186  186  191  195   192 #>  [8853,]  172  181  179  192  191  186  186  191  195   192 #>  [8854,]  172  181  179  192  191  186  186  191  195   192 #>  [8855,]  172  181  179  192  191  186  186  191  195   192 #>  [8856,]  173  182  180  193  192  187  187  192  196   193 #>  [8857,]  173  182  180  193  192  187  187  192  196   193 #>  [8858,]  172  181  179  192  191  186  186  191  195   192 #>  [8859,]  172  181  179  192  191  186  186  191  195   192 #>  [8860,]  172  181  179  192  191  186  186  191  195   192 #>  [8861,]  173  182  180  193  192  187  187  192  196   193 #>  [8862,]  172  181  179  192  191  186  186  191  195   192 #>  [8863,]  172  181  179  192  191  186  186  191  195   192 #>  [8864,]  173  182  180  193  192  187  187  192  196   193 #>  [8865,]  172  181  179  192  191  186  186  191  195   192 #>  [8866,]  173  182  180  193  192  187  187  192  196   193 #>  [8867,]  172  181  179  192  191  186  186  191  195   192 #>  [8868,]  173  182  180  193  192  187  187  192  196   193 #>  [8869,]  172  181  179  192  191  186  186  191  195   192 #>  [8870,]  172  181  179  192  191  186  186  191  195   192 #>  [8871,]  172  181  179  192  191  186  186  191  195   192 #>  [8872,]  172  181  179  192  191  186  186  191  195   192 #>  [8873,]  172  181  179  192  191  186  186  191  195   192 #>  [8874,]  172  181  179  192  191  186  186  191  195   192 #>  [8875,]  172  181  179  192  191  186  186  191  195   192 #>  [8876,]  173  182  180  193  192  187  187  192  196   193 #>  [8877,]  172  181  179  192  191  186  186  191  195   192 #>  [8878,]  172  181  179  192  191  186  186  191  195   192 #>  [8879,]  172  181  179  192  191  186  186  191  195   192 #>  [8880,]  172  181  179  192  191  186  186  191  195   192 #>  [8881,]  172  181  179  192  191  186  186  191  195   192 #>  [8882,]  172  181  179  192  191  186  186  191  195   192 #>  [8883,]  172  181  179  192  191  186  186  191  195   192 #>  [8884,]  172  181  179  192  191  186  186  191  195   192 #>  [8885,]  172  181  179  192  191  186  186  191  195   192 #>  [8886,]  172  181  179  192  191  186  186  191  195   192 #>  [8887,]  172  181  179  192  191  186  186  191  195   192 #>  [8888,]  172  181  179  192  191  186  186  191  195   192 #>  [8889,]  172  181  179  192  191  186  186  191  195   192 #>  [8890,]  172  181  179  192  191  186  186  191  195   192 #>  [8891,]  172  181  179  192  191  186  186  191  195   192 #>  [8892,]  172  181  179  192  191  186  186  191  195   192 #>  [8893,]  172  181  179  192  191  186  186  191  195   192 #>  [8894,]  173  182  180  193  192  187  187  192  196   193 #>  [8895,]  172  181  179  192  191  186  186  191  195   192 #>  [8896,]  173  182  180  193  192  187  187  192  196   193 #>  [8897,]  172  181  179  192  191  186  186  191  195   192 #>  [8898,]  172  181  179  192  191  186  186  191  195   192 #>  [8899,]  172  181  179  192  191  186  186  191  195   192 #>  [8900,]  172  181  179  192  191  186  186  191  195   192 #>  [8901,]  174  183  181  194  193  188  189  194  198   195 #>  [8902,]  175  184  182  195  194  188  189  194  198   195 #>  [8903,]  174  183  181  194  193  188  188  193  197   194 #>  [8904,]  174  183  181  194  193  188  189  194  198   195 #>  [8905,]  174  183  181  194  193  188  189  194  198   195 #>  [8906,]  174  183  181  194  193  188  189  194  198   195 #>  [8907,]  174  183  181  194  193  188  189  194  198   195 #>  [8908,]  174  183  181  194  193  188  189  194  198   195 #>  [8909,]  175  184  182  195  194  188  189  194  198   195 #>  [8910,]  175  184  182  195  194  188  188  193  197   194 #>  [8911,]  174  183  181  194  193  188  188  193  197   194 #>  [8912,]  175  184  182  195  194  188  189  194  198   195 #>  [8913,]  174  183  181  194  193  188  189  194  198   195 #>  [8914,]  174  183  181  194  193  188  188  193  197   194 #>  [8915,]  174  183  181  194  193  188  189  194  198   195 #>  [8916,]  174  183  181  194  193  188  189  194  198   195 #>  [8917,]  174  183  181  194  193  188  189  194  198   195 #>  [8918,]  174  183  181  194  193  188  189  194  198   195 #>  [8919,]  174  183  181  194  193  188  189  194  198   195 #>  [8920,]  174  183  181  194  193  188  189  194  198   195 #>  [8921,]  175  184  182  195  194  188  189  194  198   195 #>  [8922,]  174  183  181  194  193  188  189  194  198   195 #>  [8923,]  174  183  181  194  193  188  189  194  198   195 #>  [8924,]  174  183  181  194  193  188  189  194  198   195 #>  [8925,]  174  183  181  194  193  188  189  194  198   195 #>  [8926,]  174  183  181  194  193  188  189  194  198   195 #>  [8927,]  174  183  181  194  193  188  189  194  198   195 #>  [8928,]  174  183  181  194  193  188  189  194  198   195 #>  [8929,]  175  184  182  195  194  188  189  194  198   195 #>  [8930,]  174  183  181  194  193  188  189  194  198   195 #>  [8931,]  174  183  181  194  193  188  189  194  198   195 #>  [8932,]  174  183  181  194  193  188  188  193  197   194 #>  [8933,]  175  184  182  195  194  188  189  194  198   195 #>  [8934,]  174  183  181  194  193  188  189  194  198   195 #>  [8935,]  174  183  181  194  193  188  189  194  198   195 #>  [8936,]  174  183  181  194  193  188  189  194  198   195 #>  [8937,]  174  183  181  194  193  188  189  194  198   195 #>  [8938,]  174  183  181  194  193  188  189  194  198   195 #>  [8939,]  174  183  181  194  193  188  189  194  198   195 #>  [8940,]  174  183  181  194  193  188  188  193  197   194 #>  [8941,]  174  183  181  194  193  188  189  194  198   195 #>  [8942,]  174  183  181  194  193  188  189  194  198   195 #>  [8943,]  174  183  181  194  193  188  189  194  198   195 #>  [8944,]  174  183  181  194  193  188  189  194  198   195 #>  [8945,]  174  183  181  194  193  188  189  194  198   195 #>  [8946,]  174  183  181  194  193  188  189  194  198   195 #>  [8947,]  174  183  181  194  193  188  189  194  198   195 #>  [8948,]  174  183  181  194  193  188  188  193  197   194 #>  [8949,]  174  183  181  194  193  188  189  194  198   195 #>  [8950,]  174  183  181  194  193  188  189  194  198   195 #>  [8951,]  174  183  181  194  193  188  189  194  198   195 #>  [8952,]  174  183  181  194  193  188  189  194  198   195 #>  [8953,]  174  183  181  194  193  188  189  194  198   195 #>  [8954,]  174  183  181  194  193  188  189  194  198   195 #>  [8955,]  174  183  181  194  193  188  189  194  198   195 #>  [8956,]  174  183  181  194  193  188  189  194  198   195 #>  [8957,]  174  183  181  194  193  188  189  194  198   195 #>  [8958,]  174  183  181  194  193  188  189  194  198   195 #>  [8959,]  174  183  181  194  193  188  189  194  198   195 #>  [8960,]  174  183  181  194  193  188  189  194  198   195 #>  [8961,]  174  183  181  194  193  188  189  194  198   195 #>  [8962,]  174  183  181  194  193  188  189  194  198   195 #>  [8963,]  174  183  181  194  193  188  189  194  198   195 #>  [8964,]  174  183  181  194  193  188  189  194  198   195 #>  [8965,]  174  183  181  194  193  188  189  194  198   195 #>  [8966,]  174  183  181  194  193  188  189  194  198   195 #>  [8967,]  174  183  181  194  193  188  189  194  198   195 #>  [8968,]  174  183  181  194  193  188  189  194  198   195 #>  [8969,]  174  183  181  194  193  188  189  194  198   195 #>  [8970,]  175  184  182  195  194  188  188  193  197   194 #>  [8971,]  174  183  181  194  193  188  189  194  198   195 #>  [8972,]  174  183  181  194  193  188  189  194  198   195 #>  [8973,]  174  183  181  194  193  188  189  194  198   195 #>  [8974,]  174  183  181  194  193  188  189  194  198   195 #>  [8975,]  174  183  181  194  193  188  189  194  198   195 #>  [8976,]  174  183  181  194  193  188  189  194  198   195 #>  [8977,]  174  183  181  194  193  188  189  194  198   195 #>  [8978,]  174  183  181  194  193  188  189  194  198   195 #>  [8979,]  174  183  181  194  193  188  189  194  198   195 #>  [8980,]  174  183  181  194  193  188  189  194  198   195 #>  [8981,]  174  183  181  194  193  188  189  194  198   195 #>  [8982,]  174  183  181  194  193  188  189  194  198   195 #>  [8983,]  174  183  181  194  193  188  189  194  198   195 #>  [8984,]  174  183  181  194  193  188  189  194  198   195 #>  [8985,]  174  183  181  194  193  188  189  194  198   195 #>  [8986,]  175  184  182  195  194  188  189  194  198   195 #>  [8987,]  174  183  181  194  193  188  189  194  198   195 #>  [8988,]  174  183  181  194  193  188  189  194  198   195 #>  [8989,]  174  183  181  194  193  188  189  194  198   195 #>  [8990,]  174  183  181  194  193  188  189  194  198   195 #>  [8991,]  174  183  181  194  193  188  189  194  198   195 #>  [8992,]  174  183  181  194  193  188  189  194  198   195 #>  [8993,]  174  183  181  194  193  188  189  194  198   195 #>  [8994,]  174  183  181  194  193  188  189  194  198   195 #>  [8995,]  174  183  181  194  193  188  189  194  198   195 #>  [8996,]  174  183  181  194  193  188  189  194  198   195 #>  [8997,]  174  183  181  194  193  188  189  194  198   195 #>  [8998,]  174  183  181  194  193  188  189  194  198   195 #>  [8999,]  174  183  181  194  193  188  189  194  198   195 #>  [9000,]  174  183  181  194  193  188  189  194  198   195 #>  [9001,]  177  186  184  197  196  190  191  196  200   197 #>  [9002,]  176  185  183  196  195  189  190  195  199   196 #>  [9003,]  176  185  183  196  195  189  190  195  199   196 #>  [9004,]  177  186  184  197  196  190  191  196  200   197 #>  [9005,]  177  186  184  197  196  190  191  196  200   197 #>  [9006,]  176  185  183  196  195  189  190  195  199   196 #>  [9007,]  176  185  183  196  195  189  190  195  199   196 #>  [9008,]  176  185  183  196  195  189  190  195  199   196 #>  [9009,]  176  185  183  196  195  189  190  195  199   196 #>  [9010,]  177  186  184  197  196  190  191  196  200   197 #>  [9011,]  177  186  184  197  196  190  191  196  200   197 #>  [9012,]  177  186  184  197  196  190  191  196  200   197 #>  [9013,]  177  186  184  197  196  190  191  196  200   197 #>  [9014,]  177  186  184  197  196  190  191  196  200   197 #>  [9015,]  177  186  184  197  196  190  191  196  200   197 #>  [9016,]  177  186  184  197  196  190  191  196  200   197 #>  [9017,]  177  186  184  197  196  190  191  196  200   197 #>  [9018,]  177  186  184  197  196  190  191  196  200   197 #>  [9019,]  177  186  184  197  196  190  191  196  200   197 #>  [9020,]  176  185  183  196  195  189  190  195  199   196 #>  [9021,]  176  185  183  196  195  189  190  195  199   196 #>  [9022,]  177  186  184  197  196  190  191  196  200   197 #>  [9023,]  176  185  183  196  195  189  190  195  199   196 #>  [9024,]  177  186  184  197  196  190  191  196  200   197 #>  [9025,]  176  185  183  196  195  189  190  195  199   196 #>  [9026,]  177  186  184  197  196  190  191  196  200   197 #>  [9027,]  177  186  184  197  196  190  191  196  200   197 #>  [9028,]  177  186  184  197  196  190  191  196  200   197 #>  [9029,]  176  185  183  196  195  189  190  195  199   196 #>  [9030,]  177  186  184  197  196  190  191  196  200   197 #>  [9031,]  177  186  184  197  196  190  191  196  200   197 #>  [9032,]  177  186  184  197  196  190  191  196  200   197 #>  [9033,]  177  186  184  197  196  190  191  196  200   197 #>  [9034,]  176  185  183  196  195  189  190  195  199   196 #>  [9035,]  176  185  183  196  195  189  190  195  199   196 #>  [9036,]  176  185  183  196  195  189  190  195  199   196 #>  [9037,]  176  185  183  196  195  189  190  195  199   196 #>  [9038,]  177  186  184  197  196  190  191  196  200   197 #>  [9039,]  177  186  184  197  196  190  191  196  200   197 #>  [9040,]  176  185  183  196  195  189  190  195  199   196 #>  [9041,]  176  185  183  196  195  189  190  195  199   196 #>  [9042,]  176  185  183  196  195  189  190  195  199   196 #>  [9043,]  177  186  184  197  196  190  191  196  200   197 #>  [9044,]  176  185  183  196  195  189  190  195  199   196 #>  [9045,]  176  185  183  196  195  189  190  195  199   196 #>  [9046,]  177  186  184  197  196  190  191  196  200   197 #>  [9047,]  177  186  184  197  196  190  191  196  200   197 #>  [9048,]  177  186  184  197  196  190  191  196  200   197 #>  [9049,]  176  185  183  196  195  189  190  195  199   196 #>  [9050,]  176  185  183  196  195  189  190  195  199   196 #>  [9051,]  177  186  184  197  196  190  191  196  200   197 #>  [9052,]  177  186  184  197  196  190  191  196  200   197 #>  [9053,]  176  185  183  196  195  189  190  195  199   196 #>  [9054,]  176  185  183  196  195  189  190  195  199   196 #>  [9055,]  176  185  183  196  195  189  190  195  199   196 #>  [9056,]  176  185  183  196  195  189  190  195  199   196 #>  [9057,]  176  185  183  196  195  189  190  195  199   196 #>  [9058,]  177  186  184  197  196  190  191  196  200   197 #>  [9059,]  177  186  184  197  196  190  191  196  200   197 #>  [9060,]  176  185  183  196  195  189  190  195  199   196 #>  [9061,]  177  186  184  197  196  190  191  196  200   197 #>  [9062,]  176  185  183  196  195  189  190  195  199   196 #>  [9063,]  177  186  184  197  196  190  191  196  200   197 #>  [9064,]  176  185  183  196  195  189  190  195  199   196 #>  [9065,]  176  185  183  196  195  189  190  195  199   196 #>  [9066,]  177  186  184  197  196  190  191  196  200   197 #>  [9067,]  176  185  183  196  195  189  190  195  199   196 #>  [9068,]  177  186  184  197  196  190  191  196  200   197 #>  [9069,]  177  186  184  197  196  190  191  196  200   197 #>  [9070,]  177  186  184  197  196  190  191  196  200   197 #>  [9071,]  177  186  184  197  196  190  191  196  200   197 #>  [9072,]  176  185  183  196  195  189  190  195  199   196 #>  [9073,]  176  185  183  196  195  189  190  195  199   196 #>  [9074,]  176  185  183  196  195  189  190  195  199   196 #>  [9075,]  177  186  184  197  196  190  191  196  200   197 #>  [9076,]  176  185  183  196  195  189  190  195  199   196 #>  [9077,]  177  186  184  197  196  190  191  196  200   197 #>  [9078,]  177  186  184  197  196  190  191  196  200   197 #>  [9079,]  177  186  184  197  196  190  191  196  200   197 #>  [9080,]  176  185  183  196  195  189  190  195  199   196 #>  [9081,]  176  185  183  196  195  189  190  195  199   196 #>  [9082,]  176  185  183  196  195  189  190  195  199   196 #>  [9083,]  177  186  184  197  196  190  191  196  200   197 #>  [9084,]  176  185  183  196  195  189  190  195  199   196 #>  [9085,]  176  185  183  196  195  189  190  195  199   196 #>  [9086,]  176  185  183  196  195  189  190  195  199   196 #>  [9087,]  177  186  184  197  196  190  191  196  200   197 #>  [9088,]  176  185  183  196  195  189  190  195  199   196 #>  [9089,]  176  185  183  196  195  189  190  195  199   196 #>  [9090,]  177  186  184  197  196  190  191  196  200   197 #>  [9091,]  177  186  184  197  196  190  191  196  200   197 #>  [9092,]  177  186  184  197  196  190  191  196  200   197 #>  [9093,]  177  186  184  197  196  190  191  196  200   197 #>  [9094,]  176  185  183  196  195  189  190  195  199   196 #>  [9095,]  177  186  184  197  196  190  191  196  200   197 #>  [9096,]  177  186  184  197  196  190  191  196  200   197 #>  [9097,]  176  185  183  196  195  189  190  195  199   196 #>  [9098,]  176  185  183  196  195  189  190  195  199   196 #>  [9099,]  176  185  183  196  195  189  190  195  199   196 #>  [9100,]  177  186  184  197  196  190  191  196  200   197 #>  [9101,]  179  188  186  199  198  192  193  198  202   199 #>  [9102,]  179  188  186  199  198  192  193  198  202   199 #>  [9103,]  178  187  185  198  197  191  192  197  201   198 #>  [9104,]  178  187  185  198  197  191  192  197  201   198 #>  [9105,]  179  188  186  199  198  192  193  198  202   199 #>  [9106,]  179  188  186  199  198  192  193  198  202   199 #>  [9107,]  178  187  185  198  197  191  192  197  201   198 #>  [9108,]  178  187  185  198  197  191  192  197  201   198 #>  [9109,]  179  188  186  199  198  192  193  198  202   199 #>  [9110,]  179  188  186  199  198  192  193  198  202   199 #>  [9111,]  179  188  186  199  198  192  193  198  202   199 #>  [9112,]  178  187  185  198  197  191  192  197  201   198 #>  [9113,]  179  188  186  199  198  192  193  198  202   199 #>  [9114,]  179  188  186  199  198  192  193  198  202   199 #>  [9115,]  179  188  186  199  198  192  193  198  202   199 #>  [9116,]  179  188  186  199  198  192  193  198  202   199 #>  [9117,]  179  188  186  199  198  192  193  198  202   199 #>  [9118,]  179  188  186  199  198  192  193  198  202   199 #>  [9119,]  179  188  186  199  198  192  193  198  202   199 #>  [9120,]  179  188  186  199  198  192  193  198  202   199 #>  [9121,]  179  188  186  199  198  192  193  198  202   199 #>  [9122,]  179  188  186  199  198  192  193  198  202   199 #>  [9123,]  178  187  185  198  197  191  192  197  201   198 #>  [9124,]  179  188  186  199  198  192  193  198  202   199 #>  [9125,]  178  187  185  198  197  191  192  197  201   198 #>  [9126,]  179  188  186  199  198  192  193  198  202   199 #>  [9127,]  179  188  186  199  198  192  193  198  202   199 #>  [9128,]  179  188  186  199  198  192  193  198  202   199 #>  [9129,]  179  188  186  199  198  192  193  198  202   199 #>  [9130,]  179  188  186  199  198  192  193  198  202   199 #>  [9131,]  178  187  185  198  197  191  192  197  201   198 #>  [9132,]  179  188  186  199  198  192  193  198  202   199 #>  [9133,]  179  188  186  199  198  192  193  198  202   199 #>  [9134,]  179  188  186  199  198  192  193  198  202   199 #>  [9135,]  179  188  186  199  198  192  193  198  202   199 #>  [9136,]  179  188  186  199  198  192  193  198  202   199 #>  [9137,]  178  187  185  198  197  191  192  197  201   198 #>  [9138,]  179  188  186  199  198  192  193  198  202   199 #>  [9139,]  179  188  186  199  198  192  193  198  202   199 #>  [9140,]  178  187  185  198  197  191  192  197  201   198 #>  [9141,]  179  188  186  199  198  192  193  198  202   199 #>  [9142,]  179  188  186  199  198  192  193  198  202   199 #>  [9143,]  179  188  186  199  198  192  193  198  202   199 #>  [9144,]  179  188  186  199  198  192  193  198  202   199 #>  [9145,]  179  188  186  199  198  192  193  198  202   199 #>  [9146,]  178  187  185  198  197  191  192  197  201   198 #>  [9147,]  178  187  185  198  197  191  192  197  201   198 #>  [9148,]  179  188  186  199  198  192  193  198  202   199 #>  [9149,]  179  188  186  199  198  192  193  198  202   199 #>  [9150,]  179  188  186  199  198  192  193  198  202   199 #>  [9151,]  179  188  186  199  198  192  193  198  202   199 #>  [9152,]  178  187  185  198  197  191  192  197  201   198 #>  [9153,]  179  188  186  199  198  192  193  198  202   199 #>  [9154,]  179  188  186  199  198  192  193  198  202   199 #>  [9155,]  178  187  185  198  197  191  192  197  201   198 #>  [9156,]  179  188  186  199  198  192  193  198  202   199 #>  [9157,]  178  187  185  198  197  191  192  197  201   198 #>  [9158,]  179  188  186  199  198  192  193  198  202   199 #>  [9159,]  178  187  185  198  197  191  192  197  201   198 #>  [9160,]  178  187  185  198  197  191  192  197  201   198 #>  [9161,]  179  188  186  199  198  192  193  198  202   199 #>  [9162,]  179  188  186  199  198  192  193  198  202   199 #>  [9163,]  179  188  186  199  198  192  193  198  202   199 #>  [9164,]  179  188  186  199  198  192  193  198  202   199 #>  [9165,]  179  188  186  199  198  192  193  198  202   199 #>  [9166,]  179  188  186  199  198  192  193  198  202   199 #>  [9167,]  179  188  186  199  198  192  193  198  202   199 #>  [9168,]  178  187  185  198  197  191  192  197  201   198 #>  [9169,]  179  188  186  199  198  192  193  198  202   199 #>  [9170,]  179  188  186  199  198  192  193  198  202   199 #>  [9171,]  179  188  186  199  198  192  193  198  202   199 #>  [9172,]  179  188  186  199  198  192  193  198  202   199 #>  [9173,]  179  188  186  199  198  192  193  198  202   199 #>  [9174,]  178  187  185  198  197  191  192  197  201   198 #>  [9175,]  179  188  186  199  198  192  193  198  202   199 #>  [9176,]  179  188  186  199  198  192  193  198  202   199 #>  [9177,]  179  188  186  199  198  192  193  198  202   199 #>  [9178,]  179  188  186  199  198  192  193  198  202   199 #>  [9179,]  179  188  186  199  198  192  193  198  202   199 #>  [9180,]  178  187  185  198  197  191  192  197  201   198 #>  [9181,]  179  188  186  199  198  192  193  198  202   199 #>  [9182,]  179  188  186  199  198  192  193  198  202   199 #>  [9183,]  179  188  186  199  198  192  193  198  202   199 #>  [9184,]  179  188  186  199  198  192  193  198  202   199 #>  [9185,]  179  188  186  199  198  192  193  198  202   199 #>  [9186,]  178  187  185  198  197  191  192  197  201   198 #>  [9187,]  179  188  186  199  198  192  193  198  202   199 #>  [9188,]  179  188  186  199  198  192  193  198  202   199 #>  [9189,]  179  188  186  199  198  192  193  198  202   199 #>  [9190,]  179  188  186  199  198  192  193  198  202   199 #>  [9191,]  179  188  186  199  198  192  193  198  202   199 #>  [9192,]  179  188  186  199  198  192  193  198  202   199 #>  [9193,]  179  188  186  199  198  192  193  198  202   199 #>  [9194,]  179  188  186  199  198  192  193  198  202   199 #>  [9195,]  179  188  186  199  198  192  193  198  202   199 #>  [9196,]  178  187  185  198  197  191  192  197  201   198 #>  [9197,]  178  187  185  198  197  191  192  197  201   198 #>  [9198,]  178  187  185  198  197  191  192  197  201   198 #>  [9199,]  179  188  186  199  198  192  193  198  202   199 #>  [9200,]  179  188  186  199  198  192  193  198  202   199 #>  [9201,]  181  190  188  201  200  194  195  200  204   201 #>  [9202,]  180  189  187  200  199  193  194  199  203   200 #>  [9203,]  180  189  187  200  199  193  194  199  203   200 #>  [9204,]  180  189  187  200  199  193  194  199  203   200 #>  [9205,]  181  190  188  201  200  194  195  200  204   201 #>  [9206,]  180  189  187  200  199  193  194  199  203   200 #>  [9207,]  180  189  187  200  199  193  194  199  203   200 #>  [9208,]  180  189  187  200  199  193  194  199  203   200 #>  [9209,]  180  189  187  200  199  193  194  199  203   200 #>  [9210,]  180  189  187  200  199  193  194  199  203   200 #>  [9211,]  181  190  188  201  200  194  195  200  204   201 #>  [9212,]  180  189  187  200  199  193  194  199  203   200 #>  [9213,]  180  189  187  200  199  193  194  199  203   200 #>  [9214,]  181  190  188  201  200  194  195  200  204   201 #>  [9215,]  181  190  188  201  200  194  195  200  204   201 #>  [9216,]  180  189  187  200  199  193  194  199  203   200 #>  [9217,]  181  190  188  201  200  194  195  200  204   201 #>  [9218,]  181  190  188  201  200  194  195  200  204   201 #>  [9219,]  180  189  187  200  199  193  194  199  203   200 #>  [9220,]  180  189  187  200  199  193  194  199  203   200 #>  [9221,]  180  189  187  200  199  193  194  199  203   200 #>  [9222,]  181  190  188  201  200  194  195  200  204   201 #>  [9223,]  180  189  187  200  199  193  194  199  203   200 #>  [9224,]  180  189  187  200  199  193  194  199  203   200 #>  [9225,]  180  189  187  200  199  193  194  199  203   200 #>  [9226,]  181  190  188  201  200  194  195  200  204   201 #>  [9227,]  181  190  188  201  200  194  195  200  204   201 #>  [9228,]  180  189  187  200  199  193  194  199  203   200 #>  [9229,]  180  189  187  200  199  193  194  199  203   200 #>  [9230,]  180  189  187  200  199  193  194  199  203   200 #>  [9231,]  181  190  188  201  200  194  195  200  204   201 #>  [9232,]  181  190  188  201  200  194  195  200  204   201 #>  [9233,]  180  189  187  200  199  193  194  199  203   200 #>  [9234,]  180  189  187  200  199  193  194  199  203   200 #>  [9235,]  180  189  187  200  199  193  194  199  203   200 #>  [9236,]  180  189  187  200  199  193  194  199  203   200 #>  [9237,]  180  189  187  200  199  193  194  199  203   200 #>  [9238,]  180  189  187  200  199  193  194  199  203   200 #>  [9239,]  180  189  187  200  199  193  194  199  203   200 #>  [9240,]  180  189  187  200  199  193  194  199  203   200 #>  [9241,]  180  189  187  200  199  193  194  199  203   200 #>  [9242,]  180  189  187  200  199  193  194  199  203   200 #>  [9243,]  181  190  188  201  200  194  195  200  204   201 #>  [9244,]  180  189  187  200  199  193  194  199  203   200 #>  [9245,]  180  189  187  200  199  193  194  199  203   200 #>  [9246,]  180  189  187  200  199  193  194  199  203   200 #>  [9247,]  181  190  188  201  200  194  195  200  204   201 #>  [9248,]  180  189  187  200  199  193  194  199  203   200 #>  [9249,]  180  189  187  200  199  193  194  199  203   200 #>  [9250,]  180  189  187  200  199  193  194  199  203   200 #>  [9251,]  180  189  187  200  199  193  194  199  203   200 #>  [9252,]  180  189  187  200  199  193  194  199  203   200 #>  [9253,]  180  189  187  200  199  193  194  199  203   200 #>  [9254,]  180  189  187  200  199  193  194  199  203   200 #>  [9255,]  180  189  187  200  199  193  194  199  203   200 #>  [9256,]  180  189  187  200  199  193  194  199  203   200 #>  [9257,]  180  189  187  200  199  193  194  199  203   200 #>  [9258,]  181  190  188  201  200  194  195  200  204   201 #>  [9259,]  181  190  188  201  200  194  195  200  204   201 #>  [9260,]  180  189  187  200  199  193  194  199  203   200 #>  [9261,]  181  190  188  201  200  194  195  200  204   201 #>  [9262,]  180  189  187  200  199  193  194  199  203   200 #>  [9263,]  180  189  187  200  199  193  194  199  203   200 #>  [9264,]  180  189  187  200  199  193  194  199  203   200 #>  [9265,]  180  189  187  200  199  193  194  199  203   200 #>  [9266,]  181  190  188  201  200  194  195  200  204   201 #>  [9267,]  180  189  187  200  199  193  194  199  203   200 #>  [9268,]  180  189  187  200  199  193  194  199  203   200 #>  [9269,]  180  189  187  200  199  193  194  199  203   200 #>  [9270,]  181  190  188  201  200  194  195  200  204   201 #>  [9271,]  181  190  188  201  200  194  195  200  204   201 #>  [9272,]  180  189  187  200  199  193  194  199  203   200 #>  [9273,]  180  189  187  200  199  193  194  199  203   200 #>  [9274,]  180  189  187  200  199  193  194  199  203   200 #>  [9275,]  181  190  188  201  200  194  195  200  204   201 #>  [9276,]  180  189  187  200  199  193  194  199  203   200 #>  [9277,]  181  190  188  201  200  194  195  200  204   201 #>  [9278,]  180  189  187  200  199  193  194  199  203   200 #>  [9279,]  181  190  188  201  200  194  195  200  204   201 #>  [9280,]  180  189  187  200  199  193  194  199  203   200 #>  [9281,]  180  189  187  200  199  193  194  199  203   200 #>  [9282,]  180  189  187  200  199  193  194  199  203   200 #>  [9283,]  180  189  187  200  199  193  194  199  203   200 #>  [9284,]  180  189  187  200  199  193  194  199  203   200 #>  [9285,]  180  189  187  200  199  193  194  199  203   200 #>  [9286,]  180  189  187  200  199  193  194  199  203   200 #>  [9287,]  181  190  188  201  200  194  195  200  204   201 #>  [9288,]  180  189  187  200  199  193  194  199  203   200 #>  [9289,]  180  189  187  200  199  193  194  199  203   200 #>  [9290,]  180  189  187  200  199  193  194  199  203   200 #>  [9291,]  181  190  188  201  200  194  195  200  204   201 #>  [9292,]  180  189  187  200  199  193  194  199  203   200 #>  [9293,]  180  189  187  200  199  193  194  199  203   200 #>  [9294,]  180  189  187  200  199  193  194  199  203   200 #>  [9295,]  181  190  188  201  200  194  195  200  204   201 #>  [9296,]  180  189  187  200  199  193  194  199  203   200 #>  [9297,]  180  189  187  200  199  193  194  199  203   200 #>  [9298,]  180  189  187  200  199  193  194  199  203   200 #>  [9299,]  180  189  187  200  199  193  194  199  203   200 #>  [9300,]  181  190  188  201  200  194  195  200  204   201 #>  [9301,]  183  192  191  204  203  196  197  202  206   203 #>  [9302,]  183  192  191  205  203  196  197  202  206   203 #>  [9303,]  183  192  190  203  202  196  197  202  206   203 #>  [9304,]  182  191  189  202  201  195  196  201  205   202 #>  [9305,]  183  192  191  205  203  196  197  202  206   203 #>  [9306,]  183  192  191  204  203  196  197  202  206   204 #>  [9307,]  183  192  190  203  202  196  197  202  206   203 #>  [9308,]  182  191  189  202  201  195  196  201  205   202 #>  [9309,]  182  191  189  202  201  195  196  201  205   202 #>  [9310,]  182  191  189  202  201  195  196  201  205   202 #>  [9311,]  183  192  191  204  203  196  197  202  206   204 #>  [9312,]  183  192  191  205  203  196  197  202  206   204 #>  [9313,]  183  192  190  203  202  196  197  202  206   203 #>  [9314,]  183  192  191  204  203  196  197  202  206   204 #>  [9315,]  183  192  191  205  203  196  197  202  206   204 #>  [9316,]  183  192  190  203  202  196  197  202  206   203 #>  [9317,]  183  192  190  203  202  196  197  202  206   203 #>  [9318,]  182  191  189  202  201  195  196  201  205   202 #>  [9319,]  183  192  191  204  203  196  197  202  206   204 #>  [9320,]  182  191  189  202  201  195  196  201  205   202 #>  [9321,]  183  192  191  205  203  196  197  202  206   204 #>  [9322,]  183  192  190  203  202  196  197  202  206   203 #>  [9323,]  183  192  191  205  203  196  197  202  206   203 #>  [9324,]  183  192  190  203  202  196  197  202  206   203 #>  [9325,]  183  192  190  203  202  196  197  202  206   203 #>  [9326,]  183  192  191  204  203  196  197  202  206   204 #>  [9327,]  183  192  191  205  203  196  197  202  206   204 #>  [9328,]  183  192  191  204  203  196  197  202  206   203 #>  [9329,]  183  192  190  203  202  196  197  202  206   203 #>  [9330,]  182  191  189  202  201  195  196  201  205   202 #>  [9331,]  183  192  191  205  203  196  197  202  206   204 #>  [9332,]  183  192  191  205  203  196  197  202  206   204 #>  [9333,]  183  192  191  205  203  196  197  202  206   204 #>  [9334,]  183  192  191  204  203  196  197  202  206   203 #>  [9335,]  183  192  191  204  203  196  197  202  206   203 #>  [9336,]  183  192  191  205  203  196  197  202  206   204 #>  [9337,]  183  192  191  204  203  196  197  202  206   203 #>  [9338,]  183  192  191  204  203  196  197  202  206   204 #>  [9339,]  182  191  189  202  201  195  196  201  205   202 #>  [9340,]  183  192  190  203  202  196  197  202  206   203 #>  [9341,]  183  192  191  205  203  196  197  202  206   204 #>  [9342,]  183  192  191  204  203  196  197  202  206   204 #>  [9343,]  182  191  189  202  201  195  196  201  205   202 #>  [9344,]  183  192  190  203  202  196  197  202  206   203 #>  [9345,]  182  191  189  202  201  195  196  201  205   202 #>  [9346,]  183  192  190  203  202  196  197  202  206   203 #>  [9347,]  183  192  190  203  202  196  197  202  206   203 #>  [9348,]  183  192  191  205  203  196  197  202  206   204 #>  [9349,]  182  191  189  202  201  195  196  201  205   202 #>  [9350,]  183  192  190  203  202  196  197  202  206   203 #>  [9351,]  182  191  189  202  201  195  196  201  205   202 #>  [9352,]  183  192  191  204  203  196  197  202  206   203 #>  [9353,]  182  191  189  202  201  195  196  201  205   202 #>  [9354,]  183  192  190  203  202  196  197  202  206   203 #>  [9355,]  183  192  190  203  202  196  197  202  206   203 #>  [9356,]  182  191  189  202  201  195  196  201  205   202 #>  [9357,]  183  192  191  205  203  196  197  202  206   203 #>  [9358,]  183  192  191  205  203  196  197  202  206   204 #>  [9359,]  183  192  190  203  202  196  197  202  206   203 #>  [9360,]  182  191  189  202  201  195  196  201  205   202 #>  [9361,]  183  192  191  205  203  196  197  202  206   204 #>  [9362,]  183  192  191  205  203  196  197  202  206   204 #>  [9363,]  183  192  190  203  202  196  197  202  206   203 #>  [9364,]  182  191  189  202  201  195  196  201  205   202 #>  [9365,]  182  191  189  202  201  195  196  201  205   202 #>  [9366,]  182  191  189  202  201  195  196  201  205   202 #>  [9367,]  182  191  189  202  201  195  196  201  205   202 #>  [9368,]  183  192  191  204  203  196  197  202  206   204 #>  [9369,]  183  192  191  204  203  196  197  202  206   204 #>  [9370,]  183  192  190  203  202  196  197  202  206   203 #>  [9371,]  183  192  191  205  203  196  197  202  206   203 #>  [9372,]  183  192  190  203  202  196  197  202  206   203 #>  [9373,]  183  192  191  204  203  196  197  202  206   203 #>  [9374,]  183  192  191  205  203  196  197  202  206   204 #>  [9375,]  183  192  191  205  203  196  197  202  206   204 #>  [9376,]  183  192  190  203  202  196  197  202  206   203 #>  [9377,]  183  192  190  203  202  196  197  202  206   203 #>  [9378,]  182  191  189  202  201  195  196  201  205   202 #>  [9379,]  183  192  190  203  202  196  197  202  206   203 #>  [9380,]  183  192  191  205  203  196  197  202  206   203 #>  [9381,]  183  192  191  205  203  196  197  202  206   203 #>  [9382,]  183  192  191  205  203  196  197  202  206   204 #>  [9383,]  183  192  190  203  202  196  197  202  206   203 #>  [9384,]  183  192  190  203  202  196  197  202  206   203 #>  [9385,]  182  191  189  202  201  195  196  201  205   202 #>  [9386,]  183  192  190  203  202  196  197  202  206   203 #>  [9387,]  183  192  191  205  203  196  197  202  206   203 #>  [9388,]  183  192  191  205  203  196  197  202  206   203 #>  [9389,]  182  191  189  202  201  195  196  201  205   202 #>  [9390,]  183  192  190  203  202  196  197  202  206   203 #>  [9391,]  182  191  189  202  201  195  196  201  205   202 #>  [9392,]  183  192  191  205  203  196  197  202  206   204 #>  [9393,]  183  192  191  205  203  196  197  202  206   204 #>  [9394,]  183  192  190  203  202  196  197  202  206   203 #>  [9395,]  182  191  189  202  201  195  196  201  205   202 #>  [9396,]  183  192  191  204  203  196  197  202  206   204 #>  [9397,]  183  192  191  204  203  196  197  202  206   204 #>  [9398,]  183  192  190  203  202  196  197  202  206   203 #>  [9399,]  183  192  191  205  203  196  197  202  206   204 #>  [9400,]  183  192  190  203  202  196  197  202  206   203 #>  [9401,]  185  194  193  207  205  198  199  204  208   206 #>  [9402,]  184  193  192  206  204  197  198  203  207   205 #>  [9403,]  184  193  192  206  204  197  198  203  207   205 #>  [9404,]  184  193  192  206  204  197  198  203  207   205 #>  [9405,]  184  193  192  206  204  197  198  203  207   205 #>  [9406,]  184  193  192  206  204  197  198  203  207   205 #>  [9407,]  184  193  192  206  204  197  198  203  207   205 #>  [9408,]  184  193  192  206  204  197  198  203  207   205 #>  [9409,]  184  193  192  206  204  197  198  203  207   205 #>  [9410,]  184  193  192  206  204  197  198  203  207   205 #>  [9411,]  184  193  192  206  204  197  198  203  207   205 #>  [9412,]  184  193  192  206  204  197  198  203  207   205 #>  [9413,]  184  193  192  206  204  197  198  203  207   205 #>  [9414,]  185  194  193  207  205  198  199  204  208   206 #>  [9415,]  185  194  193  207  205  198  199  204  208   206 #>  [9416,]  185  194  193  207  205  198  199  204  208   206 #>  [9417,]  184  193  192  206  204  197  198  203  207   205 #>  [9418,]  184  193  192  206  204  197  198  203  207   205 #>  [9419,]  184  193  192  206  204  197  198  203  207   205 #>  [9420,]  184  193  192  206  204  197  198  203  207   205 #>  [9421,]  184  193  192  206  204  197  198  203  207   205 #>  [9422,]  184  193  192  206  204  197  198  203  207   205 #>  [9423,]  184  193  192  206  204  197  198  203  207   205 #>  [9424,]  184  193  192  206  204  197  198  203  207   205 #>  [9425,]  184  193  192  206  204  197  198  203  207   205 #>  [9426,]  184  193  192  206  204  197  198  203  207   205 #>  [9427,]  184  193  192  206  204  197  198  203  207   205 #>  [9428,]  184  193  192  206  204  197  198  203  207   205 #>  [9429,]  184  193  192  206  204  197  198  203  207   205 #>  [9430,]  184  193  192  206  204  197  198  203  207   205 #>  [9431,]  184  193  192  206  204  197  198  203  207   205 #>  [9432,]  184  193  192  206  204  197  198  203  207   205 #>  [9433,]  184  193  192  206  204  197  198  203  207   205 #>  [9434,]  184  193  192  206  204  197  198  203  207   205 #>  [9435,]  184  193  192  206  204  197  198  203  207   205 #>  [9436,]  184  193  192  206  204  197  198  203  207   205 #>  [9437,]  184  193  192  206  204  197  198  203  207   205 #>  [9438,]  184  193  192  206  204  197  198  203  207   205 #>  [9439,]  184  193  192  206  204  197  198  203  207   205 #>  [9440,]  184  193  192  206  204  197  198  203  207   205 #>  [9441,]  185  194  193  207  205  198  199  204  208   206 #>  [9442,]  184  193  192  206  204  197  198  203  207   205 #>  [9443,]  184  193  192  206  204  197  198  203  207   205 #>  [9444,]  185  194  193  207  205  198  199  204  208   206 #>  [9445,]  184  193  192  206  204  197  198  203  207   205 #>  [9446,]  184  193  192  206  204  197  198  203  207   205 #>  [9447,]  184  193  192  206  204  197  198  203  207   205 #>  [9448,]  184  193  192  206  204  197  198  203  207   205 #>  [9449,]  184  193  192  206  204  197  198  203  207   205 #>  [9450,]  185  194  193  207  205  198  199  204  208   206 #>  [9451,]  184  193  192  206  204  197  198  203  207   205 #>  [9452,]  184  193  192  206  204  197  198  203  207   205 #>  [9453,]  184  193  192  206  204  197  198  203  207   205 #>  [9454,]  184  193  192  206  204  197  198  203  207   205 #>  [9455,]  184  193  192  206  204  197  198  203  207   205 #>  [9456,]  184  193  192  206  204  197  198  203  207   205 #>  [9457,]  184  193  192  206  204  197  198  203  207   205 #>  [9458,]  184  193  192  206  204  197  198  203  207   205 #>  [9459,]  185  194  193  207  205  198  199  204  208   206 #>  [9460,]  184  193  192  206  204  197  198  203  207   205 #>  [9461,]  184  193  192  206  204  197  198  203  207   205 #>  [9462,]  184  193  192  206  204  197  198  203  207   205 #>  [9463,]  184  193  192  206  204  197  198  203  207   205 #>  [9464,]  184  193  192  206  204  197  198  203  207   205 #>  [9465,]  184  193  192  206  204  197  198  203  207   205 #>  [9466,]  184  193  192  206  204  197  198  203  207   205 #>  [9467,]  184  193  192  206  204  197  198  203  207   205 #>  [9468,]  184  193  192  206  204  197  198  203  207   205 #>  [9469,]  184  193  192  206  204  197  198  203  207   205 #>  [9470,]  185  194  193  207  205  198  199  204  208   206 #>  [9471,]  184  193  192  206  204  197  198  203  207   205 #>  [9472,]  184  193  192  206  204  197  198  203  207   205 #>  [9473,]  185  194  193  207  205  198  199  204  208   206 #>  [9474,]  184  193  192  206  204  197  198  203  207   205 #>  [9475,]  184  193  192  206  204  197  198  203  207   205 #>  [9476,]  184  193  192  206  204  197  198  203  207   205 #>  [9477,]  184  193  192  206  204  197  198  203  207   205 #>  [9478,]  184  193  192  206  204  197  198  203  207   205 #>  [9479,]  184  193  192  206  204  197  198  203  207   205 #>  [9480,]  184  193  192  206  204  197  198  203  207   205 #>  [9481,]  184  193  192  206  204  197  198  203  207   205 #>  [9482,]  184  193  192  206  204  197  198  203  207   205 #>  [9483,]  184  193  192  206  204  197  198  203  207   205 #>  [9484,]  184  193  192  206  204  197  198  203  207   205 #>  [9485,]  184  193  192  206  204  197  198  203  207   205 #>  [9486,]  184  193  192  206  204  197  198  203  207   205 #>  [9487,]  184  193  192  206  204  197  198  203  207   205 #>  [9488,]  184  193  192  206  204  197  198  203  207   205 #>  [9489,]  184  193  192  206  204  197  198  203  207   205 #>  [9490,]  184  193  192  206  204  197  198  203  207   205 #>  [9491,]  184  193  192  206  204  197  198  203  207   205 #>  [9492,]  184  193  192  206  204  197  198  203  207   205 #>  [9493,]  184  193  192  206  204  197  198  203  207   205 #>  [9494,]  184  193  192  206  204  197  198  203  207   205 #>  [9495,]  184  193  192  206  204  197  198  203  207   205 #>  [9496,]  185  194  193  207  205  198  199  204  208   206 #>  [9497,]  184  193  192  206  204  197  198  203  207   205 #>  [9498,]  184  193  192  206  204  197  198  203  207   205 #>  [9499,]  185  194  193  207  205  198  199  204  208   206 #>  [9500,]  184  193  192  206  204  197  198  203  207   205 #>  [9501,]  187  196  195  209  207  200  201  206  210   208 #>  [9502,]  187  196  195  209  207  200  201  206  210   208 #>  [9503,]  186  195  194  208  206  199  200  205  209   207 #>  [9504,]  187  196  195  209  207  200  201  206  210   208 #>  [9505,]  187  196  195  209  207  200  201  206  210   208 #>  [9506,]  187  196  195  209  207  200  201  206  210   208 #>  [9507,]  186  195  194  208  206  199  200  205  209   207 #>  [9508,]  187  196  195  209  207  200  201  206  210   208 #>  [9509,]  187  196  195  209  207  200  201  206  210   208 #>  [9510,]  187  196  195  209  207  200  201  206  210   208 #>  [9511,]  187  196  195  209  207  200  201  206  210   208 #>  [9512,]  187  196  195  209  207  200  201  206  210   208 #>  [9513,]  187  196  195  209  207  200  201  206  210   208 #>  [9514,]  187  196  195  209  207  200  201  206  210   208 #>  [9515,]  187  196  195  209  207  200  201  206  210   208 #>  [9516,]  187  196  195  209  207  200  201  206  210   208 #>  [9517,]  187  196  195  209  207  200  201  206  210   208 #>  [9518,]  187  196  195  209  207  200  201  206  210   208 #>  [9519,]  187  196  195  209  207  200  201  206  210   208 #>  [9520,]  186  195  194  208  206  199  200  205  209   207 #>  [9521,]  187  196  195  209  207  200  201  206  210   208 #>  [9522,]  187  196  195  209  207  200  201  206  210   208 #>  [9523,]  187  196  195  209  207  200  201  206  210   208 #>  [9524,]  187  196  195  209  207  200  201  206  210   208 #>  [9525,]  186  195  194  208  206  199  200  205  209   207 #>  [9526,]  187  196  195  209  207  200  201  206  210   208 #>  [9527,]  187  196  195  209  207  200  201  206  210   208 #>  [9528,]  187  196  195  209  207  200  201  206  210   208 #>  [9529,]  187  196  195  209  207  200  201  206  210   208 #>  [9530,]  187  196  195  209  207  200  201  206  210   208 #>  [9531,]  187  196  195  209  207  200  201  206  210   208 #>  [9532,]  187  196  195  209  207  200  201  206  210   208 #>  [9533,]  187  196  195  209  207  200  201  206  210   208 #>  [9534,]  187  196  195  209  207  200  201  206  210   208 #>  [9535,]  187  196  195  209  207  200  201  206  210   208 #>  [9536,]  187  196  195  209  207  200  201  206  210   208 #>  [9537,]  187  196  195  209  207  200  201  206  210   208 #>  [9538,]  187  196  195  209  207  200  201  206  210   208 #>  [9539,]  186  195  194  208  206  199  200  205  209   207 #>  [9540,]  187  196  195  209  207  200  201  206  210   208 #>  [9541,]  187  196  195  209  207  200  201  206  210   208 #>  [9542,]  187  196  195  209  207  200  201  206  210   208 #>  [9543,]  187  196  195  209  207  200  201  206  210   208 #>  [9544,]  187  196  195  209  207  200  201  206  210   208 #>  [9545,]  187  196  195  209  207  200  201  206  210   208 #>  [9546,]  187  196  195  209  207  200  201  206  210   208 #>  [9547,]  187  196  195  209  207  200  201  206  210   208 #>  [9548,]  187  196  195  209  207  200  201  206  210   208 #>  [9549,]  186  195  194  208  206  199  200  205  209   207 #>  [9550,]  187  196  195  209  207  200  201  206  210   208 #>  [9551,]  187  196  195  209  207  200  201  206  210   208 #>  [9552,]  187  196  195  209  207  200  201  206  210   208 #>  [9553,]  186  195  194  208  206  199  200  205  209   207 #>  [9554,]  187  196  195  209  207  200  201  206  210   208 #>  [9555,]  186  195  194  208  206  199  200  205  209   207 #>  [9556,]  186  195  194  208  206  199  200  205  209   207 #>  [9557,]  187  196  195  209  207  200  201  206  210   208 #>  [9558,]  187  196  195  209  207  200  201  206  210   208 #>  [9559,]  187  196  195  209  207  200  201  206  210   208 #>  [9560,]  187  196  195  209  207  200  201  206  210   208 #>  [9561,]  187  196  195  209  207  200  201  206  210   208 #>  [9562,]  187  196  195  209  207  200  201  206  210   208 #>  [9563,]  187  196  195  209  207  200  201  206  210   208 #>  [9564,]  187  196  195  209  207  200  201  206  210   208 #>  [9565,]  186  195  194  208  206  199  200  205  209   207 #>  [9566,]  186  195  194  208  206  199  200  205  209   207 #>  [9567,]  187  196  195  209  207  200  201  206  210   208 #>  [9568,]  187  196  195  209  207  200  201  206  210   208 #>  [9569,]  187  196  195  209  207  200  201  206  210   208 #>  [9570,]  187  196  195  209  207  200  201  206  210   208 #>  [9571,]  187  196  195  209  207  200  201  206  210   208 #>  [9572,]  187  196  195  209  207  200  201  206  210   208 #>  [9573,]  187  196  195  209  207  200  201  206  210   208 #>  [9574,]  187  196  195  209  207  200  201  206  210   208 #>  [9575,]  187  196  195  209  207  200  201  206  210   208 #>  [9576,]  187  196  195  209  207  200  201  206  210   208 #>  [9577,]  187  196  195  209  207  200  201  206  210   208 #>  [9578,]  187  196  195  209  207  200  201  206  210   208 #>  [9579,]  187  196  195  209  207  200  201  206  210   208 #>  [9580,]  187  196  195  209  207  200  201  206  210   208 #>  [9581,]  187  196  195  209  207  200  201  206  210   208 #>  [9582,]  187  196  195  209  207  200  201  206  210   208 #>  [9583,]  187  196  195  209  207  200  201  206  210   208 #>  [9584,]  187  196  195  209  207  200  201  206  210   208 #>  [9585,]  187  196  195  209  207  200  201  206  210   208 #>  [9586,]  187  196  195  209  207  200  201  206  210   208 #>  [9587,]  187  196  195  209  207  200  201  206  210   208 #>  [9588,]  187  196  195  209  207  200  201  206  210   208 #>  [9589,]  187  196  195  209  207  200  201  206  210   208 #>  [9590,]  186  195  194  208  206  199  200  205  209   207 #>  [9591,]  187  196  195  209  207  200  201  206  210   208 #>  [9592,]  187  196  195  209  207  200  201  206  210   208 #>  [9593,]  187  196  195  209  207  200  201  206  210   208 #>  [9594,]  187  196  195  209  207  200  201  206  210   208 #>  [9595,]  187  196  195  209  207  200  201  206  210   208 #>  [9596,]  187  196  195  209  207  200  201  206  210   208 #>  [9597,]  187  196  195  209  207  200  201  206  210   208 #>  [9598,]  187  196  195  209  207  200  201  206  210   208 #>  [9599,]  187  196  195  209  207  200  201  206  210   208 #>  [9600,]  186  195  194  208  206  199  200  205  209   207 #>  [9601,]  189  198  197  211  209  202  203  208  212   210 #>  [9602,]  189  198  197  211  209  202  203  208  212   210 #>  [9603,]  188  197  196  210  208  201  202  207  211   209 #>  [9604,]  188  197  196  210  208  201  202  207  211   209 #>  [9605,]  189  198  197  211  209  202  203  208  212   210 #>  [9606,]  189  198  197  211  209  202  203  208  212   210 #>  [9607,]  188  197  196  210  208  201  202  207  211   209 #>  [9608,]  188  197  196  210  208  201  202  207  211   209 #>  [9609,]  189  198  197  211  209  202  203  208  212   210 #>  [9610,]  189  198  197  211  209  202  203  208  212   210 #>  [9611,]  189  198  197  211  209  202  203  208  212   210 #>  [9612,]  188  197  196  210  208  201  202  207  211   209 #>  [9613,]  189  198  197  212  209  202  203  208  212   210 #>  [9614,]  189  198  197  211  209  202  203  208  212   210 #>  [9615,]  189  198  197  212  209  202  203  208  212   210 #>  [9616,]  189  198  197  211  209  202  203  208  212   210 #>  [9617,]  189  198  197  211  209  202  203  208  212   210 #>  [9618,]  189  198  197  211  209  202  203  208  212   210 #>  [9619,]  189  198  197  212  209  202  203  208  212   210 #>  [9620,]  189  198  197  212  209  202  203  208  212   210 #>  [9621,]  189  198  197  211  209  202  203  208  212   210 #>  [9622,]  189  198  197  212  209  202  203  208  212   210 #>  [9623,]  188  197  196  210  208  201  202  207  211   209 #>  [9624,]  189  198  197  211  209  202  203  208  212   210 #>  [9625,]  188  197  196  210  208  201  202  207  211   209 #>  [9626,]  189  198  197  211  209  202  203  208  212   210 #>  [9627,]  189  198  197  212  209  202  203  208  212   210 #>  [9628,]  189  198  197  211  209  202  203  208  212   210 #>  [9629,]  189  198  197  212  209  202  203  208  212   210 #>  [9630,]  189  198  197  211  209  202  203  208  212   210 #>  [9631,]  188  197  196  210  208  201  202  207  211   209 #>  [9632,]  189  198  197  211  209  202  203  208  212   210 #>  [9633,]  189  198  197  211  209  202  203  208  212   210 #>  [9634,]  189  198  197  211  209  202  203  208  212   210 #>  [9635,]  189  198  197  211  209  202  203  208  212   210 #>  [9636,]  189  198  197  212  209  202  203  208  212   210 #>  [9637,]  189  198  197  212  209  202  203  208  212   210 #>  [9638,]  189  198  197  212  209  202  203  208  212   210 #>  [9639,]  189  198  197  211  209  202  203  208  212   210 #>  [9640,]  188  197  196  210  208  201  202  207  211   209 #>  [9641,]  189  198  197  212  209  202  203  208  212   210 #>  [9642,]  189  198  197  211  209  202  203  208  212   210 #>  [9643,]  189  198  197  212  209  202  203  208  212   210 #>  [9644,]  189  198  197  211  209  202  203  208  212   210 #>  [9645,]  189  198  197  211  209  202  203  208  212   210 #>  [9646,]  189  198  197  212  209  202  203  208  212   210 #>  [9647,]  188  197  196  210  208  201  202  207  211   209 #>  [9648,]  189  198  197  211  209  202  203  208  212   210 #>  [9649,]  189  198  197  211  209  202  203  208  212   210 #>  [9650,]  189  198  197  212  209  202  203  208  212   210 #>  [9651,]  189  198  197  212  209  202  203  208  212   210 #>  [9652,]  188  197  196  210  208  201  202  207  211   209 #>  [9653,]  189  198  197  212  209  202  203  208  212   210 #>  [9654,]  189  198  197  211  209  202  203  208  212   210 #>  [9655,]  189  198  197  212  209  202  203  208  212   210 #>  [9656,]  189  198  197  211  209  202  203  208  212   210 #>  [9657,]  188  197  196  210  208  201  202  207  211   209 #>  [9658,]  189  198  197  212  209  202  203  208  212   210 #>  [9659,]  188  197  196  210  208  201  202  207  211   209 #>  [9660,]  188  197  196  210  208  201  202  207  211   209 #>  [9661,]  189  198  197  211  209  202  203  208  212   210 #>  [9662,]  189  198  197  211  209  202  203  208  212   210 #>  [9663,]  189  198  197  211  209  202  203  208  212   210 #>  [9664,]  189  198  197  212  209  202  203  208  212   210 #>  [9665,]  189  198  197  211  209  202  203  208  212   210 #>  [9666,]  189  198  197  212  209  202  203  208  212   210 #>  [9667,]  189  198  197  211  209  202  203  208  212   210 #>  [9668,]  188  197  196  210  208  201  202  207  211   209 #>  [9669,]  189  198  197  212  209  202  203  208  212   210 #>  [9670,]  189  198  197  211  209  202  203  208  212   210 #>  [9671,]  189  198  197  212  209  202  203  208  212   210 #>  [9672,]  189  198  197  211  209  202  203  208  212   210 #>  [9673,]  189  198  197  211  209  202  203  208  212   210 #>  [9674,]  189  198  197  211  209  202  203  208  212   210 #>  [9675,]  189  198  197  211  209  202  203  208  212   210 #>  [9676,]  189  198  197  211  209  202  203  208  212   210 #>  [9677,]  189  198  197  212  209  202  203  208  212   210 #>  [9678,]  189  198  197  211  209  202  203  208  212   210 #>  [9679,]  189  198  197  211  209  202  203  208  212   210 #>  [9680,]  188  197  196  210  208  201  202  207  211   209 #>  [9681,]  189  198  197  212  209  202  203  208  212   210 #>  [9682,]  189  198  197  211  209  202  203  208  212   210 #>  [9683,]  189  198  197  212  209  202  203  208  212   210 #>  [9684,]  189  198  197  212  209  202  203  208  212   210 #>  [9685,]  189  198  197  212  209  202  203  208  212   210 #>  [9686,]  188  197  196  210  208  201  202  207  211   209 #>  [9687,]  189  198  197  212  209  202  203  208  212   210 #>  [9688,]  189  198  197  211  209  202  203  208  212   210 #>  [9689,]  189  198  197  211  209  202  203  208  212   210 #>  [9690,]  189  198  197  212  209  202  203  208  212   210 #>  [9691,]  189  198  197  211  209  202  203  208  212   210 #>  [9692,]  189  198  197  211  209  202  203  208  212   210 #>  [9693,]  189  198  197  211  209  202  203  208  212   210 #>  [9694,]  189  198  197  211  209  202  203  208  212   210 #>  [9695,]  189  198  197  212  209  202  203  208  212   210 #>  [9696,]  188  197  196  210  208  201  202  207  211   209 #>  [9697,]  188  197  196  210  208  201  202  207  211   209 #>  [9698,]  188  197  196  210  208  201  202  207  211   209 #>  [9699,]  189  198  197  211  209  202  203  208  212   210 #>  [9700,]  189  198  197  212  209  202  203  208  212   210 #>  [9701,]  190  199  198  213  210  203  206  211  215   212 #>  [9702,]  190  199  198  213  210  203  206  211  215   212 #>  [9703,]  190  199  198  213  210  203  205  210  214   212 #>  [9704,]  190  199  198  213  210  203  206  211  215   212 #>  [9705,]  190  199  198  213  210  203  206  211  215   212 #>  [9706,]  190  199  198  213  210  203  206  211  215   212 #>  [9707,]  190  199  198  213  210  203  205  210  214   212 #>  [9708,]  190  199  198  213  210  203  205  210  214   212 #>  [9709,]  190  199  198  213  210  203  206  211  215   212 #>  [9710,]  190  199  198  213  210  203  206  211  215   212 #>  [9711,]  190  199  198  213  210  203  206  211  215   212 #>  [9712,]  190  199  198  213  210  203  206  211  215   212 #>  [9713,]  190  199  198  213  210  203  205  210  214   212 #>  [9714,]  190  199  198  213  210  203  206  211  215   212 #>  [9715,]  191  200  199  214  211  204  204  209  213   211 #>  [9716,]  190  199  198  213  210  203  205  210  214   212 #>  [9717,]  190  199  198  213  210  203  205  210  214   212 #>  [9718,]  190  199  198  213  210  203  206  211  215   212 #>  [9719,]  191  200  199  214  211  204  204  209  213   211 #>  [9720,]  191  200  199  214  211  204  204  209  213   211 #>  [9721,]  190  199  198  213  210  203  206  211  215   212 #>  [9722,]  191  200  199  214  211  204  204  209  213   211 #>  [9723,]  190  199  198  213  210  203  206  211  215   212 #>  [9724,]  190  199  198  213  210  203  205  210  214   212 #>  [9725,]  190  199  198  213  210  203  205  210  214   212 #>  [9726,]  190  199  198  213  210  203  206  211  215   212 #>  [9727,]  191  200  199  214  211  204  204  209  213   211 #>  [9728,]  190  199  198  213  210  203  206  211  215   212 #>  [9729,]  191  200  199  214  211  204  204  209  213   211 #>  [9730,]  190  199  198  213  210  203  206  211  215   212 #>  [9731,]  190  199  198  213  210  203  206  211  215   212 #>  [9732,]  190  199  198  213  210  203  206  211  215   212 #>  [9733,]  190  199  198  213  210  203  206  211  215   212 #>  [9734,]  190  199  198  213  210  203  206  211  215   212 #>  [9735,]  190  199  198  213  210  203  206  211  215   212 #>  [9736,]  191  200  199  214  211  204  204  209  213   211 #>  [9737,]  190  199  198  213  210  203  206  211  215   212 #>  [9738,]  190  199  198  213  210  203  206  211  215   212 #>  [9739,]  190  199  198  213  210  203  205  210  214   212 #>  [9740,]  190  199  198  213  210  203  205  210  214   212 #>  [9741,]  190  199  198  213  210  203  206  211  215   212 #>  [9742,]  190  199  198  213  210  203  206  211  215   212 #>  [9743,]  190  199  198  213  210  203  205  210  214   212 #>  [9744,]  190  199  198  213  210  203  205  210  214   212 #>  [9745,]  190  199  198  213  210  203  205  210  214   212 #>  [9746,]  190  199  198  213  210  203  205  210  214   212 #>  [9747,]  190  199  198  213  210  203  205  210  214   212 #>  [9748,]  190  199  198  213  210  203  206  211  215   212 #>  [9749,]  190  199  198  213  210  203  205  210  214   212 #>  [9750,]  190  199  198  213  210  203  205  210  214   212 #>  [9751,]  190  199  198  213  210  203  205  210  214   212 #>  [9752,]  190  199  198  213  210  203  206  211  215   212 #>  [9753,]  190  199  198  213  210  203  205  210  214   212 #>  [9754,]  190  199  198  213  210  203  205  210  214   212 #>  [9755,]  191  200  199  214  211  204  204  209  213   211 #>  [9756,]  190  199  198  213  210  203  205  210  214   212 #>  [9757,]  190  199  198  213  210  203  206  211  215   212 #>  [9758,]  191  200  199  214  211  204  204  209  213   211 #>  [9759,]  190  199  198  213  210  203  205  210  214   212 #>  [9760,]  190  199  198  213  210  203  206  211  215   212 #>  [9761,]  190  199  198  213  210  203  206  211  215   212 #>  [9762,]  190  199  198  213  210  203  206  211  215   212 #>  [9763,]  190  199  198  213  210  203  205  210  214   212 #>  [9764,]  191  200  199  214  211  204  204  209  213   211 #>  [9765,]  190  199  198  213  210  203  205  210  214   212 #>  [9766,]  191  200  199  214  211  204  204  209  213   211 #>  [9767,]  190  199  198  213  210  203  206  211  215   212 #>  [9768,]  190  199  198  213  210  203  206  211  215   212 #>  [9769,]  190  199  198  213  210  203  206  211  215   212 #>  [9770,]  190  199  198  213  210  203  205  210  214   212 #>  [9771,]  190  199  198  213  210  203  206  211  215   212 #>  [9772,]  190  199  198  213  210  203  205  210  214   212 #>  [9773,]  190  199  198  213  210  203  206  211  215   212 #>  [9774,]  190  199  198  213  210  203  206  211  215   212 #>  [9775,]  190  199  198  213  210  203  206  211  215   212 #>  [9776,]  190  199  198  213  210  203  205  210  214   212 #>  [9777,]  191  200  199  214  211  204  204  209  213   211 #>  [9778,]  190  199  198  213  210  203  205  210  214   212 #>  [9779,]  190  199  198  213  210  203  205  210  214   212 #>  [9780,]  190  199  198  213  210  203  206  211  215   212 #>  [9781,]  191  200  199  214  211  204  204  209  213   211 #>  [9782,]  190  199  198  213  210  203  206  211  215   212 #>  [9783,]  191  200  199  214  211  204  204  209  213   211 #>  [9784,]  190  199  198  213  210  203  205  210  214   212 #>  [9785,]  190  199  198  213  210  203  206  211  215   212 #>  [9786,]  190  199  198  213  210  203  205  210  214   212 #>  [9787,]  191  200  199  214  211  204  204  209  213   211 #>  [9788,]  190  199  198  213  210  203  206  211  215   212 #>  [9789,]  190  199  198  213  210  203  205  210  214   212 #>  [9790,]  190  199  198  213  210  203  205  210  214   212 #>  [9791,]  190  199  198  213  210  203  206  211  215   212 #>  [9792,]  190  199  198  213  210  203  206  211  215   212 #>  [9793,]  190  199  198  213  210  203  206  211  215   212 #>  [9794,]  190  199  198  213  210  203  205  210  214   212 #>  [9795,]  190  199  198  213  210  203  206  211  215   212 #>  [9796,]  190  199  198  213  210  203  206  211  215   212 #>  [9797,]  191  200  199  214  211  204  204  209  213   211 #>  [9798,]  190  199  198  213  210  203  205  210  214   212 #>  [9799,]  190  199  198  213  210  203  206  211  215   212 #>  [9800,]  191  200  199  214  211  204  204  209  213   211 #>  [9801,]  193  202  201  216  213  206  208  213  217   214 #>  [9802,]  192  201  200  215  212  205  207  212  216   213 #>  [9803,]  193  202  201  216  213  206  208  213  217   214 #>  [9804,]  193  202  201  216  213  206  208  213  217   214 #>  [9805,]  193  202  201  216  213  206  208  213  217   214 #>  [9806,]  192  201  200  215  212  205  207  212  216   213 #>  [9807,]  193  202  201  216  213  206  208  213  217   214 #>  [9808,]  193  202  201  216  213  206  208  213  217   214 #>  [9809,]  193  202  201  216  213  206  208  213  217   214 #>  [9810,]  193  202  201  216  214  207  208  213  217   214 #>  [9811,]  192  201  200  215  212  205  207  212  216   213 #>  [9812,]  192  201  200  215  212  205  207  212  216   213 #>  [9813,]  193  202  201  216  213  206  208  213  217   214 #>  [9814,]  193  202  201  216  213  206  208  213  217   214 #>  [9815,]  192  201  200  215  212  205  207  212  216   213 #>  [9816,]  193  202  201  216  213  206  208  213  217   214 #>  [9817,]  192  201  200  215  212  205  207  212  216   213 #>  [9818,]  193  202  201  216  214  207  208  213  217   214 #>  [9819,]  192  201  200  215  212  205  207  212  216   213 #>  [9820,]  193  202  201  216  213  206  208  213  217   214 #>  [9821,]  193  202  201  216  213  206  208  213  217   214 #>  [9822,]  193  202  201  216  213  206  208  213  217   214 #>  [9823,]  192  201  200  215  212  205  207  212  216   213 #>  [9824,]  193  202  201  216  213  206  208  213  217   214 #>  [9825,]  193  202  201  216  214  207  208  213  217   214 #>  [9826,]  192  201  200  215  212  205  207  212  216   213 #>  [9827,]  193  202  201  216  213  206  208  213  217   214 #>  [9828,]  193  202  201  216  213  206  208  213  217   214 #>  [9829,]  192  201  200  215  212  205  207  212  216   213 #>  [9830,]  192  201  200  215  212  205  207  212  216   213 #>  [9831,]  192  201  200  215  212  205  207  212  216   213 #>  [9832,]  193  202  201  216  213  206  208  213  217   214 #>  [9833,]  193  202  201  216  213  206  208  213  217   214 #>  [9834,]  192  201  200  215  212  205  207  212  216   213 #>  [9835,]  192  201  200  215  212  205  207  212  216   213 #>  [9836,]  193  202  201  216  213  206  208  213  217   214 #>  [9837,]  192  201  200  215  212  205  207  212  216   213 #>  [9838,]  193  202  201  216  213  206  208  213  217   214 #>  [9839,]  193  202  201  216  214  207  208  213  217   214 #>  [9840,]  193  202  201  216  213  206  208  213  217   214 #>  [9841,]  193  202  201  216  213  206  208  213  217   214 #>  [9842,]  192  201  200  215  212  205  207  212  216   213 #>  [9843,]  192  201  200  215  212  205  207  212  216   213 #>  [9844,]  192  201  200  215  212  205  207  212  216   213 #>  [9845,]  193  202  201  216  214  207  208  213  217   214 #>  [9846,]  192  201  200  215  212  205  207  212  216   213 #>  [9847,]  192  201  200  215  212  205  207  212  216   213 #>  [9848,]  192  201  200  215  212  205  207  212  216   213 #>  [9849,]  193  202  201  216  213  206  208  213  217   214 #>  [9850,]  193  202  201  216  213  206  208  213  217   214 #>  [9851,]  193  202  201  216  213  206  208  213  217   214 #>  [9852,]  193  202  201  216  213  206  208  213  217   214 #>  [9853,]  193  202  201  216  213  206  208  213  217   214 #>  [9854,]  193  202  201  216  213  206  208  213  217   214 #>  [9855,]  193  202  201  216  213  206  208  213  217   214 #>  [9856,]  192  201  200  215  212  205  207  212  216   213 #>  [9857,]  193  202  201  216  213  206  208  213  217   214 #>  [9858,]  193  202  201  216  213  206  208  213  217   214 #>  [9859,]  193  202  201  216  213  206  208  213  217   214 #>  [9860,]  192  201  200  215  212  205  207  212  216   213 #>  [9861,]  192  201  200  215  212  205  207  212  216   213 #>  [9862,]  193  202  201  216  213  206  208  213  217   214 #>  [9863,]  192  201  200  215  212  205  207  212  216   213 #>  [9864,]  192  201  200  215  212  205  207  212  216   213 #>  [9865,]  192  201  200  215  212  205  207  212  216   213 #>  [9866,]  192  201  200  215  212  205  207  212  216   213 #>  [9867,]  193  202  201  216  213  206  208  213  217   214 #>  [9868,]  192  201  200  215  212  205  207  212  216   213 #>  [9869,]  193  202  201  216  213  206  208  213  217   214 #>  [9870,]  192  201  200  215  212  205  207  212  216   213 #>  [9871,]  193  202  201  216  213  206  208  213  217   214 #>  [9872,]  193  202  201  216  213  206  208  213  217   214 #>  [9873,]  193  202  201  216  214  207  208  213  217   214 #>  [9874,]  193  202  201  216  213  206  208  213  217   214 #>  [9875,]  192  201  200  215  212  205  207  212  216   213 #>  [9876,]  193  202  201  216  213  206  208  213  217   214 #>  [9877,]  193  202  201  216  214  207  208  213  217   214 #>  [9878,]  192  201  200  215  212  205  207  212  216   213 #>  [9879,]  192  201  200  215  212  205  207  212  216   213 #>  [9880,]  193  202  201  216  213  206  208  213  217   214 #>  [9881,]  192  201  200  215  212  205  207  212  216   213 #>  [9882,]  193  202  201  216  213  206  208  213  217   214 #>  [9883,]  193  202  201  216  213  206  208  213  217   214 #>  [9884,]  193  202  201  216  213  206  208  213  217   214 #>  [9885,]  193  202  201  216  213  206  208  213  217   214 #>  [9886,]  193  202  201  216  213  206  208  213  217   214 #>  [9887,]  193  202  201  216  213  206  208  213  217   214 #>  [9888,]  193  202  201  216  213  206  208  213  217   214 #>  [9889,]  193  202  201  216  213  206  208  213  217   214 #>  [9890,]  193  202  201  216  213  206  208  213  217   214 #>  [9891,]  193  202  201  216  213  206  208  213  217   214 #>  [9892,]  192  201  200  215  212  205  207  212  216   213 #>  [9893,]  193  202  201  216  213  206  208  213  217   214 #>  [9894,]  192  201  200  215  212  205  207  212  216   213 #>  [9895,]  192  201  200  215  212  205  207  212  216   213 #>  [9896,]  192  201  200  215  212  205  207  212  216   213 #>  [9897,]  193  202  201  216  213  206  208  213  217   214 #>  [9898,]  193  202  201  216  213  206  208  213  217   214 #>  [9899,]  193  202  201  216  213  206  208  213  217   214 #>  [9900,]  192  201  200  215  212  205  207  212  216   213 #>  [9901,]  194  203  204  218  216  209  211  215  219   216 #>  [9902,]  194  203  204  218  216  209  211  215  219   216 #>  [9903,]  194  203  204  218  216  209  210  215  219   216 #>  [9904,]  195  204  202  217  215  208  209  214  218   215 #>  [9905,]  194  203  204  218  216  209  210  215  219   216 #>  [9906,]  195  204  202  217  215  208  209  214  218   215 #>  [9907,]  194  203  203  218  216  209  210  215  219   216 #>  [9908,]  194  203  204  218  216  209  210  215  219   216 #>  [9909,]  195  204  202  217  215  208  209  214  218   215 #>  [9910,]  195  204  202  217  215  208  209  214  218   215 #>  [9911,]  195  204  202  217  215  208  209  214  218   215 #>  [9912,]  195  204  202  217  215  208  209  214  218   215 #>  [9913,]  194  203  204  218  216  209  211  215  219   216 #>  [9914,]  195  204  202  217  215  208  209  214  218   215 #>  [9915,]  195  204  202  217  215  208  209  214  218   215 #>  [9916,]  194  203  204  218  216  209  211  215  219   216 #>  [9917,]  194  203  204  218  216  209  211  215  219   216 #>  [9918,]  195  204  202  217  215  208  209  214  218   215 #>  [9919,]  195  204  202  217  215  208  209  214  218   215 #>  [9920,]  194  203  204  218  216  209  210  215  219   216 #>  [9921,]  195  204  202  217  215  208  209  214  218   215 #>  [9922,]  194  203  204  218  216  209  211  215  219   216 #>  [9923,]  195  204  202  217  215  208  209  214  218   215 #>  [9924,]  194  203  204  218  216  209  210  215  219   216 #>  [9925,]  194  203  204  218  216  209  210  215  219   216 #>  [9926,]  195  204  202  217  215  208  209  214  218   215 #>  [9927,]  195  204  202  217  215  208  209  214  218   215 #>  [9928,]  194  203  204  218  216  209  210  215  219   216 #>  [9929,]  194  203  204  218  216  209  211  215  219   216 #>  [9930,]  195  204  202  217  215  208  209  214  218   215 #>  [9931,]  195  204  202  217  215  208  209  214  218   215 #>  [9932,]  195  204  202  217  215  208  209  214  218   215 #>  [9933,]  195  204  202  217  215  208  209  214  218   215 #>  [9934,]  195  204  202  217  215  208  209  214  218   215 #>  [9935,]  194  203  204  218  216  209  211  215  219   216 #>  [9936,]  195  204  202  217  215  208  209  214  218   215 #>  [9937,]  194  203  204  218  216  209  211  215  219   216 #>  [9938,]  195  204  202  217  215  208  209  214  218   215 #>  [9939,]  194  203  203  218  216  209  210  215  219   216 #>  [9940,]  194  203  204  218  216  209  210  215  219   216 #>  [9941,]  195  204  202  217  215  208  209  214  218   215 #>  [9942,]  195  204  202  217  215  208  209  214  218   215 #>  [9943,]  194  203  204  218  216  209  210  215  219   216 #>  [9944,]  194  203  204  218  216  209  211  215  219   216 #>  [9945,]  194  203  204  218  216  209  210  215  219   216 #>  [9946,]  194  203  204  218  216  209  210  215  219   216 #>  [9947,]  194  203  204  218  216  209  211  215  219   216 #>  [9948,]  195  204  202  217  215  208  209  214  218   215 #>  [9949,]  194  203  203  218  216  209  210  215  219   216 #>  [9950,]  194  203  204  218  216  209  211  215  219   216 #>  [9951,]  194  203  204  218  216  209  210  215  219   216 #>  [9952,]  195  204  202  217  215  208  209  214  218   215 #>  [9953,]  194  203  204  218  216  209  210  215  219   216 #>  [9954,]  194  203  204  218  216  209  210  215  219   216 #>  [9955,]  194  203  204  218  216  209  210  215  219   216 #>  [9956,]  194  203  204  218  216  209  210  215  219   216 #>  [9957,]  194  203  204  218  216  209  210  215  219   216 #>  [9958,]  195  204  202  217  215  208  209  214  218   215 #>  [9959,]  194  203  204  218  216  209  211  215  219   216 #>  [9960,]  195  204  202  217  215  208  209  214  218   215 #>  [9961,]  195  204  202  217  215  208  209  214  218   215 #>  [9962,]  195  204  202  217  215  208  209  214  218   215 #>  [9963,]  194  203  204  218  216  209  210  215  219   216 #>  [9964,]  195  204  202  217  215  208  209  214  218   215 #>  [9965,]  194  203  204  218  216  209  210  215  219   216 #>  [9966,]  194  203  204  218  216  209  210  215  219   216 #>  [9967,]  195  204  202  217  215  208  209  214  218   215 #>  [9968,]  195  204  202  217  215  208  209  214  218   215 #>  [9969,]  195  204  202  217  215  208  209  214  218   215 #>  [9970,]  194  203  203  218  216  209  211  215  219   216 #>  [9971,]  194  203  204  218  216  209  211  215  219   216 #>  [9972,]  194  203  204  218  216  209  210  215  219   216 #>  [9973,]  195  204  202  217  215  208  209  214  218   215 #>  [9974,]  195  204  202  217  215  208  209  214  218   215 #>  [9975,]  195  204  202  217  215  208  209  214  218   215 #>  [9976,]  194  203  204  218  216  209  211  215  219   216 #>  [9977,]  194  203  204  218  216  209  211  215  219   216 #>  [9978,]  194  203  204  218  216  209  210  215  219   216 #>  [9979,]  194  203  204  218  216  209  211  215  219   216 #>  [9980,]  195  204  202  217  215  208  209  214  218   215 #>  [9981,]  194  203  204  218  216  209  211  215  219   216 #>  [9982,]  195  204  202  217  215  208  209  214  218   215 #>  [9983,]  194  203  204  218  216  209  211  215  219   216 #>  [9984,]  194  203  204  218  216  209  211  215  219   216 #>  [9985,]  195  204  202  217  215  208  209  214  218   215 #>  [9986,]  194  203  204  218  216  209  211  215  219   216 #>  [9987,]  194  203  204  218  216  209  211  215  219   216 #>  [9988,]  194  203  204  218  216  209  210  215  219   216 #>  [9989,]  194  203  204  218  216  209  210  215  219   216 #>  [9990,]  194  203  204  218  216  209  211  215  219   216 #>  [9991,]  195  204  202  217  215  208  209  214  218   215 #>  [9992,]  195  204  202  217  215  208  209  214  218   215 #>  [9993,]  195  204  202  217  215  208  209  214  218   215 #>  [9994,]  194  203  204  218  216  209  211  215  219   216 #>  [9995,]  194  203  203  218  216  209  210  215  219   216 #>  [9996,]  195  204  202  217  215  208  209  214  218   215 #>  [9997,]  195  204  202  217  215  208  209  214  218   215 #>  [9998,]  194  203  204  218  216  209  210  215  219   216 #>  [9999,]  195  204  202  217  215  208  209  214  218   215 #>  [ reached getOption(\"max.print\") -- omitted 10001 rows ] computeForestLeafIndices(bart_model, X, \"mean\", 0) #>          [,1] #>     [1,]    0 #>     [2,]    0 #>     [3,]    0 #>     [4,]    0 #>     [5,]    0 #>     [6,]    0 #>     [7,]    0 #>     [8,]    0 #>     [9,]    1 #>    [10,]    0 #>    [11,]    0 #>    [12,]    0 #>    [13,]    1 #>    [14,]    0 #>    [15,]    0 #>    [16,]    0 #>    [17,]    0 #>    [18,]    1 #>    [19,]    0 #>    [20,]    0 #>    [21,]    0 #>    [22,]    0 #>    [23,]    0 #>    [24,]    0 #>    [25,]    0 #>    [26,]    0 #>    [27,]    0 #>    [28,]    0 #>    [29,]    0 #>    [30,]    0 #>    [31,]    0 #>    [32,]    0 #>    [33,]    0 #>    [34,]    0 #>    [35,]    0 #>    [36,]    0 #>    [37,]    0 #>    [38,]    0 #>    [39,]    0 #>    [40,]    0 #>    [41,]    0 #>    [42,]    1 #>    [43,]    0 #>    [44,]    0 #>    [45,]    0 #>    [46,]    0 #>    [47,]    0 #>    [48,]    0 #>    [49,]    0 #>    [50,]    0 #>    [51,]    1 #>    [52,]    0 #>    [53,]    1 #>    [54,]    0 #>    [55,]    0 #>    [56,]    0 #>    [57,]    0 #>    [58,]    0 #>    [59,]    0 #>    [60,]    0 #>    [61,]    0 #>    [62,]    0 #>    [63,]    0 #>    [64,]    0 #>    [65,]    1 #>    [66,]    0 #>    [67,]    0 #>    [68,]    0 #>    [69,]    0 #>    [70,]    0 #>    [71,]    0 #>    [72,]    0 #>    [73,]    0 #>    [74,]    0 #>    [75,]    0 #>    [76,]    0 #>    [77,]    0 #>    [78,]    0 #>    [79,]    1 #>    [80,]    0 #>    [81,]    0 #>    [82,]    1 #>    [83,]    0 #>    [84,]    1 #>    [85,]    0 #>    [86,]    0 #>    [87,]    0 #>    [88,]    0 #>    [89,]    0 #>    [90,]    0 #>    [91,]    1 #>    [92,]    0 #>    [93,]    1 #>    [94,]    1 #>    [95,]    0 #>    [96,]    0 #>    [97,]    0 #>    [98,]    0 #>    [99,]    0 #>   [100,]    0 #>   [101,]    2 #>   [102,]    3 #>   [103,]    2 #>   [104,]    3 #>   [105,]    3 #>   [106,]    2 #>   [107,]    3 #>   [108,]    3 #>   [109,]    3 #>   [110,]    3 #>   [111,]    2 #>   [112,]    3 #>   [113,]    3 #>   [114,]    3 #>   [115,]    3 #>   [116,]    2 #>   [117,]    3 #>   [118,]    3 #>   [119,]    2 #>   [120,]    3 #>   [121,]    3 #>   [122,]    3 #>   [123,]    3 #>   [124,]    3 #>   [125,]    3 #>   [126,]    3 #>   [127,]    3 #>   [128,]    2 #>   [129,]    3 #>   [130,]    3 #>   [131,]    3 #>   [132,]    3 #>   [133,]    3 #>   [134,]    2 #>   [135,]    2 #>   [136,]    3 #>   [137,]    2 #>   [138,]    2 #>   [139,]    3 #>   [140,]    3 #>   [141,]    3 #>   [142,]    3 #>   [143,]    3 #>   [144,]    3 #>   [145,]    2 #>   [146,]    3 #>   [147,]    3 #>   [148,]    3 #>   [149,]    2 #>   [150,]    3 #>   [151,]    3 #>   [152,]    2 #>   [153,]    3 #>   [154,]    3 #>   [155,]    3 #>   [156,]    3 #>   [157,]    3 #>   [158,]    3 #>   [159,]    3 #>   [160,]    3 #>   [161,]    3 #>   [162,]    3 #>   [163,]    3 #>   [164,]    2 #>   [165,]    3 #>   [166,]    3 #>   [167,]    3 #>   [168,]    2 #>   [169,]    3 #>   [170,]    3 #>   [171,]    3 #>   [172,]    2 #>   [173,]    2 #>   [174,]    3 #>   [175,]    3 #>   [176,]    3 #>   [177,]    2 #>   [178,]    3 #>   [179,]    3 #>   [180,]    3 #>   [181,]    3 #>   [182,]    3 #>   [183,]    3 #>   [184,]    3 #>   [185,]    3 #>   [186,]    3 #>   [187,]    3 #>   [188,]    3 #>   [189,]    3 #>   [190,]    3 #>   [191,]    3 #>   [192,]    3 #>   [193,]    3 #>   [194,]    2 #>   [195,]    3 #>   [196,]    2 #>   [197,]    2 #>   [198,]    3 #>   [199,]    3 #>   [200,]    2 #>   [201,]    4 #>   [202,]    4 #>   [203,]    4 #>   [204,]    5 #>   [205,]    4 #>   [206,]    4 #>   [207,]    4 #>   [208,]    4 #>   [209,]    4 #>   [210,]    5 #>   [211,]    4 #>   [212,]    4 #>   [213,]    4 #>   [214,]    4 #>   [215,]    4 #>   [216,]    4 #>   [217,]    4 #>   [218,]    5 #>   [219,]    4 #>   [220,]    4 #>   [221,]    5 #>   [222,]    4 #>   [223,]    4 #>   [224,]    4 #>   [225,]    5 #>   [226,]    4 #>   [227,]    4 #>   [228,]    4 #>   [229,]    4 #>   [230,]    4 #>   [231,]    4 #>   [232,]    4 #>   [233,]    4 #>   [234,]    4 #>   [235,]    4 #>   [236,]    4 #>   [237,]    4 #>   [238,]    4 #>   [239,]    5 #>   [240,]    4 #>   [241,]    4 #>   [242,]    4 #>   [243,]    5 #>   [244,]    4 #>   [245,]    5 #>   [246,]    4 #>   [247,]    4 #>   [248,]    4 #>   [249,]    4 #>   [250,]    4 #>   [251,]    4 #>   [252,]    4 #>   [253,]    5 #>   [254,]    4 #>   [255,]    4 #>   [256,]    4 #>   [257,]    4 #>   [258,]    4 #>   [259,]    4 #>   [260,]    4 #>   [261,]    4 #>   [262,]    4 #>   [263,]    4 #>   [264,]    4 #>   [265,]    4 #>   [266,]    4 #>   [267,]    4 #>   [268,]    4 #>   [269,]    4 #>   [270,]    4 #>   [271,]    4 #>   [272,]    5 #>   [273,]    5 #>   [274,]    5 #>   [275,]    5 #>   [276,]    5 #>   [277,]    5 #>   [278,]    4 #>   [279,]    4 #>   [280,]    4 #>   [281,]    4 #>   [282,]    4 #>   [283,]    4 #>   [284,]    5 #>   [285,]    4 #>   [286,]    4 #>   [287,]    4 #>   [288,]    4 #>   [289,]    4 #>   [290,]    4 #>   [291,]    4 #>   [292,]    4 #>   [293,]    4 #>   [294,]    5 #>   [295,]    5 #>   [296,]    4 #>   [297,]    4 #>   [298,]    4 #>   [299,]    4 #>   [300,]    4 #>   [301,]    7 #>   [302,]    6 #>   [303,]    6 #>   [304,]    6 #>   [305,]    7 #>   [306,]    6 #>   [307,]    6 #>   [308,]    6 #>   [309,]    6 #>   [310,]    7 #>   [311,]    7 #>   [312,]    7 #>   [313,]    6 #>   [314,]    7 #>   [315,]    7 #>   [316,]    6 #>   [317,]    7 #>   [318,]    7 #>   [319,]    6 #>   [320,]    6 #>   [321,]    6 #>   [322,]    7 #>   [323,]    6 #>   [324,]    6 #>   [325,]    6 #>   [326,]    7 #>   [327,]    7 #>   [328,]    6 #>   [329,]    6 #>   [330,]    6 #>   [331,]    7 #>   [332,]    7 #>   [333,]    6 #>   [334,]    6 #>   [335,]    6 #>   [336,]    6 #>   [337,]    6 #>   [338,]    7 #>   [339,]    6 #>   [340,]    6 #>   [341,]    6 #>   [342,]    6 #>   [343,]    7 #>   [344,]    6 #>   [345,]    6 #>   [346,]    6 #>   [347,]    7 #>   [348,]    6 #>   [349,]    6 #>   [350,]    6 #>   [351,]    6 #>   [352,]    7 #>   [353,]    6 #>   [354,]    6 #>   [355,]    6 #>   [356,]    6 #>   [357,]    6 #>   [358,]    7 #>   [359,]    7 #>   [360,]    6 #>   [361,]    7 #>   [362,]    6 #>   [363,]    6 #>   [364,]    6 #>   [365,]    6 #>   [366,]    7 #>   [367,]    6 #>   [368,]    6 #>   [369,]    6 #>   [370,]    7 #>   [371,]    7 #>   [372,]    6 #>   [373,]    6 #>   [374,]    6 #>   [375,]    7 #>   [376,]    6 #>   [377,]    7 #>   [378,]    6 #>   [379,]    7 #>   [380,]    6 #>   [381,]    6 #>   [382,]    6 #>   [383,]    6 #>   [384,]    6 #>   [385,]    6 #>   [386,]    6 #>   [387,]    7 #>   [388,]    6 #>   [389,]    6 #>   [390,]    7 #>   [391,]    7 #>   [392,]    7 #>   [393,]    6 #>   [394,]    6 #>   [395,]    7 #>   [396,]    6 #>   [397,]    6 #>   [398,]    6 #>   [399,]    6 #>   [400,]    7 #>   [401,]    9 #>   [402,]    9 #>   [403,]    8 #>   [404,]    9 #>   [405,]    9 #>   [406,]    8 #>   [407,]    8 #>   [408,]    9 #>   [409,]    9 #>   [410,]    9 #>   [411,]    9 #>   [412,]    9 #>   [413,]    9 #>   [414,]    9 #>   [415,]    9 #>   [416,]    9 #>   [417,]    9 #>   [418,]    9 #>   [419,]    9 #>   [420,]    8 #>   [421,]    8 #>   [422,]    9 #>   [423,]    9 #>   [424,]    9 #>   [425,]    8 #>   [426,]    9 #>   [427,]    9 #>   [428,]    9 #>   [429,]    9 #>   [430,]    9 #>   [431,]    9 #>   [432,]    9 #>   [433,]    9 #>   [434,]    9 #>   [435,]    8 #>   [436,]    9 #>   [437,]    8 #>   [438,]    9 #>   [439,]    9 #>   [440,]    9 #>   [441,]    9 #>   [442,]    8 #>   [443,]    9 #>   [444,]    8 #>   [445,]    9 #>   [446,]    9 #>   [447,]    9 #>   [448,]    9 #>   [449,]    9 #>   [450,]    9 #>   [451,]    9 #>   [452,]    9 #>   [453,]    8 #>   [454,]    9 #>   [455,]    9 #>   [456,]    8 #>   [457,]    8 #>   [458,]    9 #>   [459,]    9 #>   [460,]    9 #>   [461,]    9 #>   [462,]    9 #>   [463,]    9 #>   [464,]    9 #>   [465,]    8 #>   [466,]    9 #>   [467,]    9 #>   [468,]    9 #>   [469,]    9 #>   [470,]    9 #>   [471,]    9 #>   [472,]    9 #>   [473,]    8 #>   [474,]    8 #>   [475,]    9 #>   [476,]    9 #>   [477,]    9 #>   [478,]    9 #>   [479,]    9 #>   [480,]    8 #>   [481,]    9 #>   [482,]    8 #>   [483,]    9 #>   [484,]    8 #>   [485,]    8 #>   [486,]    8 #>   [487,]    9 #>   [488,]    9 #>   [489,]    8 #>   [490,]    9 #>   [491,]    9 #>   [492,]    9 #>   [493,]    9 #>   [494,]    8 #>   [495,]    9 #>   [496,]    9 #>   [497,]    9 #>   [498,]    9 #>   [499,]    8 #>   [500,]    9 #>   [501,]   10 #>   [502,]   11 #>   [503,]   10 #>   [504,]   11 #>   [505,]   11 #>   [506,]   10 #>   [507,]   11 #>   [508,]   11 #>   [509,]   11 #>   [510,]   11 #>   [511,]   10 #>   [512,]   11 #>   [513,]   11 #>   [514,]   11 #>   [515,]   11 #>   [516,]   10 #>   [517,]   11 #>   [518,]   11 #>   [519,]   10 #>   [520,]   11 #>   [521,]   11 #>   [522,]   11 #>   [523,]   11 #>   [524,]   11 #>   [525,]   11 #>   [526,]   11 #>   [527,]   11 #>   [528,]   10 #>   [529,]   11 #>   [530,]   11 #>   [531,]   11 #>   [532,]   11 #>   [533,]   11 #>   [534,]   10 #>   [535,]   10 #>   [536,]   11 #>   [537,]   10 #>   [538,]   10 #>   [539,]   11 #>   [540,]   11 #>   [541,]   11 #>   [542,]   11 #>   [543,]   11 #>   [544,]   11 #>   [545,]   10 #>   [546,]   11 #>   [547,]   11 #>   [548,]   11 #>   [549,]   10 #>   [550,]   11 #>   [551,]   11 #>   [552,]   10 #>   [553,]   11 #>   [554,]   11 #>   [555,]   11 #>   [556,]   11 #>   [557,]   11 #>   [558,]   11 #>   [559,]   11 #>   [560,]   11 #>   [561,]   11 #>   [562,]   11 #>   [563,]   11 #>   [564,]   10 #>   [565,]   11 #>   [566,]   11 #>   [567,]   11 #>   [568,]   10 #>   [569,]   11 #>   [570,]   11 #>   [571,]   11 #>   [572,]   10 #>   [573,]   10 #>   [574,]   11 #>   [575,]   11 #>   [576,]   11 #>   [577,]   10 #>   [578,]   11 #>   [579,]   11 #>   [580,]   11 #>   [581,]   11 #>   [582,]   11 #>   [583,]   11 #>   [584,]   11 #>   [585,]   11 #>   [586,]   11 #>   [587,]   11 #>   [588,]   11 #>   [589,]   11 #>   [590,]   11 #>   [591,]   11 #>   [592,]   11 #>   [593,]   11 #>   [594,]   10 #>   [595,]   11 #>   [596,]   10 #>   [597,]   10 #>   [598,]   11 #>   [599,]   11 #>   [600,]   10 #>   [601,]   13 #>   [602,]   13 #>   [603,]   12 #>   [604,]   13 #>   [605,]   13 #>   [606,]   13 #>   [607,]   13 #>   [608,]   13 #>   [609,]   13 #>   [610,]   12 #>   [611,]   12 #>   [612,]   13 #>   [613,]   13 #>   [614,]   12 #>   [615,]   13 #>   [616,]   13 #>   [617,]   13 #>   [618,]   13 #>   [619,]   13 #>   [620,]   13 #>   [621,]   13 #>   [622,]   13 #>   [623,]   13 #>   [624,]   13 #>   [625,]   13 #>   [626,]   13 #>   [627,]   13 #>   [628,]   13 #>   [629,]   13 #>   [630,]   13 #>   [631,]   13 #>   [632,]   12 #>   [633,]   13 #>   [634,]   13 #>   [635,]   13 #>   [636,]   13 #>   [637,]   13 #>   [638,]   13 #>   [639,]   13 #>   [640,]   12 #>   [641,]   13 #>   [642,]   13 #>   [643,]   13 #>   [644,]   13 #>   [645,]   13 #>   [646,]   13 #>   [647,]   13 #>   [648,]   12 #>   [649,]   13 #>   [650,]   13 #>   [651,]   13 #>   [652,]   13 #>   [653,]   13 #>   [654,]   13 #>   [655,]   13 #>   [656,]   13 #>   [657,]   13 #>   [658,]   13 #>   [659,]   13 #>   [660,]   13 #>   [661,]   13 #>   [662,]   13 #>   [663,]   13 #>   [664,]   13 #>   [665,]   13 #>   [666,]   13 #>   [667,]   13 #>   [668,]   13 #>   [669,]   13 #>   [670,]   12 #>   [671,]   13 #>   [672,]   13 #>   [673,]   13 #>   [674,]   13 #>   [675,]   13 #>   [676,]   13 #>   [677,]   13 #>   [678,]   13 #>   [679,]   13 #>   [680,]   13 #>   [681,]   13 #>   [682,]   13 #>   [683,]   13 #>   [684,]   13 #>   [685,]   13 #>   [686,]   13 #>   [687,]   13 #>   [688,]   13 #>   [689,]   13 #>   [690,]   13 #>   [691,]   13 #>   [692,]   13 #>   [693,]   13 #>   [694,]   13 #>   [695,]   13 #>   [696,]   13 #>   [697,]   13 #>   [698,]   13 #>   [699,]   13 #>   [700,]   13 #>   [701,]   15 #>   [702,]   14 #>   [703,]   14 #>   [704,]   14 #>   [705,]   14 #>   [706,]   14 #>   [707,]   14 #>   [708,]   14 #>   [709,]   15 #>   [710,]   14 #>   [711,]   14 #>   [712,]   14 #>   [713,]   15 #>   [714,]   14 #>   [715,]   14 #>   [716,]   14 #>   [717,]   15 #>   [718,]   15 #>   [719,]   14 #>   [720,]   14 #>   [721,]   14 #>   [722,]   14 #>   [723,]   14 #>   [724,]   14 #>   [725,]   14 #>   [726,]   14 #>   [727,]   15 #>   [728,]   14 #>   [729,]   14 #>   [730,]   14 #>   [731,]   14 #>   [732,]   14 #>   [733,]   14 #>   [734,]   14 #>   [735,]   14 #>   [736,]   15 #>   [737,]   14 #>   [738,]   14 #>   [739,]   14 #>   [740,]   14 #>   [741,]   14 #>   [742,]   15 #>   [743,]   14 #>   [744,]   14 #>   [745,]   14 #>   [746,]   14 #>   [747,]   14 #>   [748,]   14 #>   [749,]   14 #>   [750,]   14 #>   [751,]   15 #>   [752,]   14 #>   [753,]   15 #>   [754,]   14 #>   [755,]   14 #>   [756,]   15 #>   [757,]   14 #>   [758,]   14 #>   [759,]   14 #>   [760,]   14 #>   [761,]   14 #>   [762,]   14 #>   [763,]   14 #>   [764,]   14 #>   [765,]   15 #>   [766,]   15 #>   [767,]   14 #>   [768,]   14 #>   [769,]   14 #>   [770,]   14 #>   [771,]   14 #>   [772,]   14 #>   [773,]   14 #>   [774,]   14 #>   [775,]   14 #>   [776,]   14 #>   [777,]   14 #>   [778,]   14 #>   [779,]   15 #>   [780,]   14 #>   [781,]   14 #>   [782,]   15 #>   [783,]   15 #>   [784,]   15 #>   [785,]   14 #>   [786,]   14 #>   [787,]   15 #>   [788,]   14 #>   [789,]   14 #>   [790,]   14 #>   [791,]   15 #>   [792,]   14 #>   [793,]   15 #>   [794,]   15 #>   [795,]   14 #>   [796,]   14 #>   [797,]   14 #>   [798,]   14 #>   [799,]   14 #>   [800,]   14 #>   [801,]   16 #>   [802,]   16 #>   [803,]   16 #>   [804,]   17 #>   [805,]   16 #>   [806,]   16 #>   [807,]   17 #>   [808,]   16 #>   [809,]   16 #>   [810,]   17 #>   [811,]   16 #>   [812,]   16 #>   [813,]   16 #>   [814,]   16 #>   [815,]   17 #>   [816,]   17 #>   [817,]   16 #>   [818,]   17 #>   [819,]   16 #>   [820,]   16 #>   [821,]   17 #>   [822,]   16 #>   [823,]   17 #>   [824,]   16 #>   [825,]   17 #>   [826,]   16 #>   [827,]   17 #>   [828,]   17 #>   [829,]   16 #>   [830,]   16 #>   [831,]   16 #>   [832,]   16 #>   [833,]   16 #>   [834,]   16 #>   [835,]   16 #>   [836,]   16 #>   [837,]   16 #>   [838,]   16 #>   [839,]   17 #>   [840,]   16 #>   [841,]   16 #>   [842,]   16 #>   [843,]   17 #>   [844,]   16 #>   [845,]   17 #>   [846,]   16 #>   [847,]   17 #>   [848,]   16 #>   [849,]   16 #>   [850,]   16 #>   [851,]   16 #>   [852,]   16 #>   [853,]   17 #>   [854,]   16 #>   [855,]   16 #>   [856,]   16 #>   [857,]   16 #>   [858,]   16 #>   [859,]   16 #>   [860,]   16 #>   [861,]   17 #>   [862,]   16 #>   [863,]   16 #>   [864,]   17 #>   [865,]   16 #>   [866,]   16 #>   [867,]   16 #>   [868,]   16 #>   [869,]   16 #>   [870,]   16 #>   [871,]   17 #>   [872,]   17 #>   [873,]   17 #>   [874,]   17 #>   [875,]   17 #>   [876,]   17 #>   [877,]   17 #>   [878,]   16 #>   [879,]   16 #>   [880,]   16 #>   [881,]   16 #>   [882,]   16 #>   [883,]   16 #>   [884,]   17 #>   [885,]   16 #>   [886,]   16 #>   [887,]   16 #>   [888,]   17 #>   [889,]   16 #>   [890,]   16 #>   [891,]   16 #>   [892,]   16 #>   [893,]   16 #>   [894,]   17 #>   [895,]   17 #>   [896,]   16 #>   [897,]   16 #>   [898,]   16 #>   [899,]   16 #>   [900,]   17 #>   [901,]   19 #>   [902,]   19 #>   [903,]   18 #>   [904,]   18 #>   [905,]   18 #>   [906,]   18 #>   [907,]   18 #>   [908,]   19 #>   [909,]   18 #>   [910,]   18 #>   [911,]   18 #>   [912,]   18 #>   [913,]   19 #>   [914,]   18 #>   [915,]   19 #>   [916,]   19 #>   [917,]   18 #>   [918,]   18 #>   [919,]   19 #>   [920,]   19 #>   [921,]   18 #>   [922,]   19 #>   [923,]   19 #>   [924,]   18 #>   [925,]   18 #>   [926,]   19 #>   [927,]   19 #>   [928,]   18 #>   [929,]   19 #>   [930,]   19 #>   [931,]   18 #>   [932,]   18 #>   [933,]   19 #>   [934,]   18 #>   [935,]   18 #>   [936,]   19 #>   [937,]   19 #>   [938,]   19 #>   [939,]   18 #>   [940,]   18 #>   [941,]   19 #>   [942,]   18 #>   [943,]   19 #>   [944,]   19 #>   [945,]   18 #>   [946,]   19 #>   [947,]   18 #>   [948,]   18 #>   [949,]   18 #>   [950,]   19 #>   [951,]   19 #>   [952,]   18 #>   [953,]   19 #>   [954,]   18 #>   [955,]   19 #>   [956,]   19 #>   [957,]   18 #>   [958,]   19 #>   [959,]   19 #>   [960,]   19 #>   [961,]   19 #>   [962,]   18 #>   [963,]   19 #>   [964,]   19 #>   [965,]   18 #>   [966,]   19 #>   [967,]   18 #>   [968,]   19 #>   [969,]   19 #>   [970,]   18 #>   [971,]   19 #>   [972,]   18 #>   [973,]   18 #>   [974,]   18 #>   [975,]   19 #>   [976,]   18 #>   [977,]   19 #>   [978,]   19 #>   [979,]   18 #>   [980,]   19 #>   [981,]   19 #>   [982,]   18 #>   [983,]   19 #>   [984,]   19 #>   [985,]   19 #>   [986,]   18 #>   [987,]   19 #>   [988,]   18 #>   [989,]   18 #>   [990,]   19 #>   [991,]   18 #>   [992,]   18 #>   [993,]   19 #>   [994,]   18 #>   [995,]   19 #>   [996,]   19 #>   [997,]   19 #>   [998,]   18 #>   [999,]   18 #>  [1000,]   19 #>  [1001,]   21 #>  [1002,]   21 #>  [1003,]   20 #>  [1004,]   20 #>  [1005,]   20 #>  [1006,]   21 #>  [1007,]   20 #>  [1008,]   20 #>  [1009,]   20 #>  [1010,]   20 #>  [1011,]   20 #>  [1012,]   20 #>  [1013,]   21 #>  [1014,]   21 #>  [1015,]   21 #>  [1016,]   21 #>  [1017,]   21 #>  [1018,]   20 #>  [1019,]   20 #>  [1020,]   20 #>  [1021,]   21 #>  [1022,]   20 #>  [1023,]   20 #>  [1024,]   20 #>  [1025,]   20 #>  [1026,]   20 #>  [1027,]   20 #>  [1028,]   20 #>  [1029,]   21 #>  [1030,]   20 #>  [1031,]   20 #>  [1032,]   20 #>  [1033,]   21 #>  [1034,]   20 #>  [1035,]   21 #>  [1036,]   20 #>  [1037,]   20 #>  [1038,]   20 #>  [1039,]   20 #>  [1040,]   20 #>  [1041,]   21 #>  [1042,]   20 #>  [1043,]   20 #>  [1044,]   21 #>  [1045,]   20 #>  [1046,]   20 #>  [1047,]   20 #>  [1048,]   20 #>  [1049,]   20 #>  [1050,]   21 #>  [1051,]   20 #>  [1052,]   20 #>  [1053,]   20 #>  [1054,]   20 #>  [1055,]   20 #>  [1056,]   20 #>  [1057,]   20 #>  [1058,]   20 #>  [1059,]   21 #>  [1060,]   20 #>  [1061,]   21 #>  [1062,]   20 #>  [1063,]   20 #>  [1064,]   20 #>  [1065,]   20 #>  [1066,]   20 #>  [1067,]   20 #>  [1068,]   21 #>  [1069,]   20 #>  [1070,]   21 #>  [1071,]   20 #>  [1072,]   20 #>  [1073,]   21 #>  [1074,]   20 #>  [1075,]   20 #>  [1076,]   21 #>  [1077,]   21 #>  [1078,]   20 #>  [1079,]   21 #>  [1080,]   20 #>  [1081,]   21 #>  [1082,]   20 #>  [1083,]   21 #>  [1084,]   20 #>  [1085,]   20 #>  [1086,]   21 #>  [1087,]   20 #>  [1088,]   20 #>  [1089,]   20 #>  [1090,]   20 #>  [1091,]   20 #>  [1092,]   20 #>  [1093,]   21 #>  [1094,]   20 #>  [1095,]   20 #>  [1096,]   21 #>  [1097,]   20 #>  [1098,]   20 #>  [1099,]   21 #>  [1100,]   20 #>  [1101,]   23 #>  [1102,]   22 #>  [1103,]   23 #>  [1104,]   23 #>  [1105,]   23 #>  [1106,]   22 #>  [1107,]   23 #>  [1108,]   23 #>  [1109,]   23 #>  [1110,]   23 #>  [1111,]   22 #>  [1112,]   22 #>  [1113,]   23 #>  [1114,]   23 #>  [1115,]   22 #>  [1116,]   23 #>  [1117,]   22 #>  [1118,]   23 #>  [1119,]   22 #>  [1120,]   23 #>  [1121,]   23 #>  [1122,]   23 #>  [1123,]   22 #>  [1124,]   23 #>  [1125,]   23 #>  [1126,]   22 #>  [1127,]   23 #>  [1128,]   23 #>  [1129,]   22 #>  [1130,]   22 #>  [1131,]   22 #>  [1132,]   23 #>  [1133,]   23 #>  [1134,]   22 #>  [1135,]   22 #>  [1136,]   23 #>  [1137,]   22 #>  [1138,]   23 #>  [1139,]   23 #>  [1140,]   23 #>  [1141,]   23 #>  [1142,]   22 #>  [1143,]   22 #>  [1144,]   22 #>  [1145,]   23 #>  [1146,]   22 #>  [1147,]   22 #>  [1148,]   22 #>  [1149,]   23 #>  [1150,]   23 #>  [1151,]   23 #>  [1152,]   23 #>  [1153,]   23 #>  [1154,]   23 #>  [1155,]   23 #>  [1156,]   22 #>  [1157,]   23 #>  [1158,]   23 #>  [1159,]   23 #>  [1160,]   22 #>  [1161,]   22 #>  [1162,]   23 #>  [1163,]   22 #>  [1164,]   22 #>  [1165,]   22 #>  [1166,]   22 #>  [1167,]   23 #>  [1168,]   22 #>  [1169,]   23 #>  [1170,]   22 #>  [1171,]   23 #>  [1172,]   23 #>  [1173,]   23 #>  [1174,]   23 #>  [1175,]   22 #>  [1176,]   23 #>  [1177,]   23 #>  [1178,]   22 #>  [1179,]   22 #>  [1180,]   23 #>  [1181,]   22 #>  [1182,]   23 #>  [1183,]   23 #>  [1184,]   23 #>  [1185,]   23 #>  [1186,]   23 #>  [1187,]   23 #>  [1188,]   23 #>  [1189,]   23 #>  [1190,]   23 #>  [1191,]   23 #>  [1192,]   22 #>  [1193,]   22 #>  [1194,]   22 #>  [1195,]   22 #>  [1196,]   22 #>  [1197,]   23 #>  [1198,]   23 #>  [1199,]   23 #>  [1200,]   22 #>  [1201,]   24 #>  [1202,]   24 #>  [1203,]   24 #>  [1204,]   24 #>  [1205,]   25 #>  [1206,]   24 #>  [1207,]   24 #>  [1208,]   24 #>  [1209,]   24 #>  [1210,]   24 #>  [1211,]   24 #>  [1212,]   24 #>  [1213,]   24 #>  [1214,]   24 #>  [1215,]   24 #>  [1216,]   24 #>  [1217,]   24 #>  [1218,]   25 #>  [1219,]   24 #>  [1220,]   24 #>  [1221,]   24 #>  [1222,]   24 #>  [1223,]   24 #>  [1224,]   24 #>  [1225,]   24 #>  [1226,]   24 #>  [1227,]   24 #>  [1228,]   24 #>  [1229,]   24 #>  [1230,]   24 #>  [1231,]   24 #>  [1232,]   25 #>  [1233,]   24 #>  [1234,]   24 #>  [1235,]   24 #>  [1236,]   24 #>  [1237,]   24 #>  [1238,]   24 #>  [1239,]   24 #>  [1240,]   24 #>  [1241,]   24 #>  [1242,]   24 #>  [1243,]   24 #>  [1244,]   24 #>  [1245,]   24 #>  [1246,]   24 #>  [1247,]   24 #>  [1248,]   24 #>  [1249,]   24 #>  [1250,]   24 #>  [1251,]   24 #>  [1252,]   24 #>  [1253,]   24 #>  [1254,]   24 #>  [1255,]   24 #>  [1256,]   24 #>  [1257,]   24 #>  [1258,]   24 #>  [1259,]   24 #>  [1260,]   24 #>  [1261,]   24 #>  [1262,]   24 #>  [1263,]   24 #>  [1264,]   24 #>  [1265,]   24 #>  [1266,]   24 #>  [1267,]   24 #>  [1268,]   24 #>  [1269,]   24 #>  [1270,]   24 #>  [1271,]   25 #>  [1272,]   24 #>  [1273,]   24 #>  [1274,]   24 #>  [1275,]   25 #>  [1276,]   24 #>  [1277,]   24 #>  [1278,]   24 #>  [1279,]   24 #>  [1280,]   24 #>  [1281,]   24 #>  [1282,]   24 #>  [1283,]   24 #>  [1284,]   24 #>  [1285,]   24 #>  [1286,]   24 #>  [1287,]   24 #>  [1288,]   24 #>  [1289,]   24 #>  [1290,]   24 #>  [1291,]   24 #>  [1292,]   24 #>  [1293,]   24 #>  [1294,]   24 #>  [1295,]   25 #>  [1296,]   24 #>  [1297,]   24 #>  [1298,]   24 #>  [1299,]   24 #>  [1300,]   25 #>  [1301,]   27 #>  [1302,]   27 #>  [1303,]   26 #>  [1304,]   27 #>  [1305,]   27 #>  [1306,]   27 #>  [1307,]   26 #>  [1308,]   27 #>  [1309,]   27 #>  [1310,]   27 #>  [1311,]   27 #>  [1312,]   27 #>  [1313,]   27 #>  [1314,]   27 #>  [1315,]   27 #>  [1316,]   27 #>  [1317,]   27 #>  [1318,]   27 #>  [1319,]   27 #>  [1320,]   27 #>  [1321,]   27 #>  [1322,]   27 #>  [1323,]   27 #>  [1324,]   27 #>  [1325,]   27 #>  [1326,]   27 #>  [1327,]   27 #>  [1328,]   27 #>  [1329,]   27 #>  [1330,]   27 #>  [1331,]   27 #>  [1332,]   27 #>  [1333,]   27 #>  [1334,]   27 #>  [1335,]   27 #>  [1336,]   27 #>  [1337,]   27 #>  [1338,]   27 #>  [1339,]   27 #>  [1340,]   27 #>  [1341,]   27 #>  [1342,]   27 #>  [1343,]   27 #>  [1344,]   27 #>  [1345,]   27 #>  [1346,]   27 #>  [1347,]   27 #>  [1348,]   27 #>  [1349,]   26 #>  [1350,]   27 #>  [1351,]   27 #>  [1352,]   27 #>  [1353,]   26 #>  [1354,]   27 #>  [1355,]   26 #>  [1356,]   26 #>  [1357,]   27 #>  [1358,]   27 #>  [1359,]   27 #>  [1360,]   27 #>  [1361,]   27 #>  [1362,]   27 #>  [1363,]   27 #>  [1364,]   27 #>  [1365,]   27 #>  [1366,]   26 #>  [1367,]   27 #>  [1368,]   27 #>  [1369,]   27 #>  [1370,]   27 #>  [1371,]   27 #>  [1372,]   27 #>  [1373,]   27 #>  [1374,]   27 #>  [1375,]   27 #>  [1376,]   27 #>  [1377,]   27 #>  [1378,]   27 #>  [1379,]   27 #>  [1380,]   27 #>  [1381,]   27 #>  [1382,]   27 #>  [1383,]   27 #>  [1384,]   27 #>  [1385,]   27 #>  [1386,]   27 #>  [1387,]   27 #>  [1388,]   27 #>  [1389,]   27 #>  [1390,]   27 #>  [1391,]   27 #>  [1392,]   27 #>  [1393,]   27 #>  [1394,]   27 #>  [1395,]   27 #>  [1396,]   27 #>  [1397,]   27 #>  [1398,]   27 #>  [1399,]   27 #>  [1400,]   27 #>  [1401,]   29 #>  [1402,]   29 #>  [1403,]   29 #>  [1404,]   29 #>  [1405,]   29 #>  [1406,]   29 #>  [1407,]   29 #>  [1408,]   29 #>  [1409,]   29 #>  [1410,]   29 #>  [1411,]   29 #>  [1412,]   29 #>  [1413,]   29 #>  [1414,]   29 #>  [1415,]   29 #>  [1416,]   29 #>  [1417,]   29 #>  [1418,]   29 #>  [1419,]   29 #>  [1420,]   28 #>  [1421,]   28 #>  [1422,]   29 #>  [1423,]   29 #>  [1424,]   29 #>  [1425,]   28 #>  [1426,]   29 #>  [1427,]   29 #>  [1428,]   29 #>  [1429,]   29 #>  [1430,]   29 #>  [1431,]   29 #>  [1432,]   29 #>  [1433,]   29 #>  [1434,]   29 #>  [1435,]   28 #>  [1436,]   29 #>  [1437,]   29 #>  [1438,]   29 #>  [1439,]   29 #>  [1440,]   29 #>  [1441,]   29 #>  [1442,]   29 #>  [1443,]   29 #>  [1444,]   28 #>  [1445,]   29 #>  [1446,]   29 #>  [1447,]   29 #>  [1448,]   29 #>  [1449,]   29 #>  [1450,]   29 #>  [1451,]   29 #>  [1452,]   29 #>  [1453,]   28 #>  [1454,]   29 #>  [1455,]   29 #>  [1456,]   28 #>  [1457,]   29 #>  [1458,]   29 #>  [1459,]   29 #>  [1460,]   29 #>  [1461,]   29 #>  [1462,]   29 #>  [1463,]   29 #>  [1464,]   29 #>  [1465,]   28 #>  [1466,]   29 #>  [1467,]   29 #>  [1468,]   29 #>  [1469,]   29 #>  [1470,]   29 #>  [1471,]   29 #>  [1472,]   29 #>  [1473,]   29 #>  [1474,]   28 #>  [1475,]   29 #>  [1476,]   29 #>  [1477,]   29 #>  [1478,]   29 #>  [1479,]   29 #>  [1480,]   28 #>  [1481,]   29 #>  [1482,]   29 #>  [1483,]   29 #>  [1484,]   29 #>  [1485,]   28 #>  [1486,]   28 #>  [1487,]   29 #>  [1488,]   29 #>  [1489,]   28 #>  [1490,]   29 #>  [1491,]   29 #>  [1492,]   29 #>  [1493,]   29 #>  [1494,]   29 #>  [1495,]   29 #>  [1496,]   29 #>  [1497,]   29 #>  [1498,]   29 #>  [1499,]   29 #>  [1500,]   29 #>  [1501,]   30 #>  [1502,]   30 #>  [1503,]   30 #>  [1504,]   30 #>  [1505,]   30 #>  [1506,]   30 #>  [1507,]   30 #>  [1508,]   30 #>  [1509,]   30 #>  [1510,]   30 #>  [1511,]   30 #>  [1512,]   30 #>  [1513,]   30 #>  [1514,]   30 #>  [1515,]   30 #>  [1516,]   30 #>  [1517,]   30 #>  [1518,]   30 #>  [1519,]   30 #>  [1520,]   31 #>  [1521,]   30 #>  [1522,]   30 #>  [1523,]   30 #>  [1524,]   31 #>  [1525,]   30 #>  [1526,]   30 #>  [1527,]   30 #>  [1528,]   31 #>  [1529,]   30 #>  [1530,]   30 #>  [1531,]   30 #>  [1532,]   30 #>  [1533,]   30 #>  [1534,]   30 #>  [1535,]   30 #>  [1536,]   30 #>  [1537,]   30 #>  [1538,]   30 #>  [1539,]   30 #>  [1540,]   30 #>  [1541,]   30 #>  [1542,]   30 #>  [1543,]   30 #>  [1544,]   30 #>  [1545,]   30 #>  [1546,]   30 #>  [1547,]   30 #>  [1548,]   30 #>  [1549,]   30 #>  [1550,]   31 #>  [1551,]   30 #>  [1552,]   31 #>  [1553,]   30 #>  [1554,]   30 #>  [1555,]   30 #>  [1556,]   30 #>  [1557,]   30 #>  [1558,]   30 #>  [1559,]   30 #>  [1560,]   30 #>  [1561,]   30 #>  [1562,]   30 #>  [1563,]   30 #>  [1564,]   30 #>  [1565,]   30 #>  [1566,]   30 #>  [1567,]   30 #>  [1568,]   30 #>  [1569,]   30 #>  [1570,]   30 #>  [1571,]   30 #>  [1572,]   30 #>  [1573,]   30 #>  [1574,]   30 #>  [1575,]   30 #>  [1576,]   31 #>  [1577,]   30 #>  [1578,]   30 #>  [1579,]   30 #>  [1580,]   30 #>  [1581,]   30 #>  [1582,]   30 #>  [1583,]   30 #>  [1584,]   30 #>  [1585,]   30 #>  [1586,]   31 #>  [1587,]   30 #>  [1588,]   30 #>  [1589,]   30 #>  [1590,]   30 #>  [1591,]   30 #>  [1592,]   30 #>  [1593,]   30 #>  [1594,]   30 #>  [1595,]   30 #>  [1596,]   30 #>  [1597,]   30 #>  [1598,]   30 #>  [1599,]   30 #>  [1600,]   30 #>  [1601,]   33 #>  [1602,]   33 #>  [1603,]   33 #>  [1604,]   33 #>  [1605,]   33 #>  [1606,]   33 #>  [1607,]   33 #>  [1608,]   33 #>  [1609,]   33 #>  [1610,]   33 #>  [1611,]   33 #>  [1612,]   33 #>  [1613,]   33 #>  [1614,]   33 #>  [1615,]   33 #>  [1616,]   33 #>  [1617,]   33 #>  [1618,]   33 #>  [1619,]   33 #>  [1620,]   33 #>  [1621,]   33 #>  [1622,]   33 #>  [1623,]   33 #>  [1624,]   33 #>  [1625,]   32 #>  [1626,]   33 #>  [1627,]   33 #>  [1628,]   33 #>  [1629,]   33 #>  [1630,]   33 #>  [1631,]   33 #>  [1632,]   33 #>  [1633,]   33 #>  [1634,]   33 #>  [1635,]   33 #>  [1636,]   33 #>  [1637,]   33 #>  [1638,]   33 #>  [1639,]   33 #>  [1640,]   33 #>  [1641,]   33 #>  [1642,]   33 #>  [1643,]   33 #>  [1644,]   33 #>  [1645,]   33 #>  [1646,]   33 #>  [1647,]   33 #>  [1648,]   33 #>  [1649,]   33 #>  [1650,]   33 #>  [1651,]   33 #>  [1652,]   33 #>  [1653,]   33 #>  [1654,]   33 #>  [1655,]   33 #>  [1656,]   32 #>  [1657,]   33 #>  [1658,]   33 #>  [1659,]   33 #>  [1660,]   33 #>  [1661,]   33 #>  [1662,]   33 #>  [1663,]   33 #>  [1664,]   33 #>  [1665,]   32 #>  [1666,]   33 #>  [1667,]   33 #>  [1668,]   33 #>  [1669,]   33 #>  [1670,]   33 #>  [1671,]   33 #>  [1672,]   33 #>  [1673,]   33 #>  [1674,]   33 #>  [1675,]   33 #>  [1676,]   33 #>  [1677,]   33 #>  [1678,]   33 #>  [1679,]   33 #>  [1680,]   32 #>  [1681,]   33 #>  [1682,]   33 #>  [1683,]   33 #>  [1684,]   33 #>  [1685,]   32 #>  [1686,]   33 #>  [1687,]   33 #>  [1688,]   33 #>  [1689,]   32 #>  [1690,]   33 #>  [1691,]   33 #>  [1692,]   33 #>  [1693,]   33 #>  [1694,]   33 #>  [1695,]   33 #>  [1696,]   33 #>  [1697,]   33 #>  [1698,]   33 #>  [1699,]   33 #>  [1700,]   33 #>  [1701,]   35 #>  [1702,]   34 #>  [1703,]   34 #>  [1704,]   35 #>  [1705,]   34 #>  [1706,]   34 #>  [1707,]   35 #>  [1708,]   34 #>  [1709,]   35 #>  [1710,]   35 #>  [1711,]   34 #>  [1712,]   34 #>  [1713,]   35 #>  [1714,]   35 #>  [1715,]   34 #>  [1716,]   35 #>  [1717,]   34 #>  [1718,]   34 #>  [1719,]   34 #>  [1720,]   35 #>  [1721,]   34 #>  [1722,]   35 #>  [1723,]   34 #>  [1724,]   35 #>  [1725,]   35 #>  [1726,]   34 #>  [1727,]   34 #>  [1728,]   35 #>  [1729,]   34 #>  [1730,]   34 #>  [1731,]   34 #>  [1732,]   34 #>  [1733,]   34 #>  [1734,]   34 #>  [1735,]   34 #>  [1736,]   35 #>  [1737,]   34 #>  [1738,]   34 #>  [1739,]   35 #>  [1740,]   34 #>  [1741,]   34 #>  [1742,]   34 #>  [1743,]   34 #>  [1744,]   34 #>  [1745,]   34 #>  [1746,]   34 #>  [1747,]   34 #>  [1748,]   34 #>  [1749,]   34 #>  [1750,]   35 #>  [1751,]   34 #>  [1752,]   35 #>  [1753,]   35 #>  [1754,]   35 #>  [1755,]   35 #>  [1756,]   34 #>  [1757,]   35 #>  [1758,]   35 #>  [1759,]   35 #>  [1760,]   34 #>  [1761,]   34 #>  [1762,]   34 #>  [1763,]   34 #>  [1764,]   34 #>  [1765,]   34 #>  [1766,]   34 #>  [1767,]   35 #>  [1768,]   34 #>  [1769,]   34 #>  [1770,]   34 #>  [1771,]   34 #>  [1772,]   35 #>  [1773,]   35 #>  [1774,]   34 #>  [1775,]   34 #>  [1776,]   35 #>  [1777,]   34 #>  [1778,]   34 #>  [1779,]   34 #>  [1780,]   34 #>  [1781,]   34 #>  [1782,]   34 #>  [1783,]   34 #>  [1784,]   34 #>  [1785,]   35 #>  [1786,]   35 #>  [1787,]   34 #>  [1788,]   34 #>  [1789,]   34 #>  [1790,]   35 #>  [1791,]   35 #>  [1792,]   34 #>  [1793,]   34 #>  [1794,]   34 #>  [1795,]   34 #>  [1796,]   34 #>  [1797,]   34 #>  [1798,]   34 #>  [1799,]   34 #>  [1800,]   34 #>  [1801,]   37 #>  [1802,]   36 #>  [1803,]   36 #>  [1804,]   36 #>  [1805,]   37 #>  [1806,]   36 #>  [1807,]   36 #>  [1808,]   36 #>  [1809,]   36 #>  [1810,]   37 #>  [1811,]   37 #>  [1812,]   37 #>  [1813,]   36 #>  [1814,]   37 #>  [1815,]   37 #>  [1816,]   36 #>  [1817,]   37 #>  [1818,]   37 #>  [1819,]   36 #>  [1820,]   36 #>  [1821,]   36 #>  [1822,]   37 #>  [1823,]   36 #>  [1824,]   36 #>  [1825,]   36 #>  [1826,]   37 #>  [1827,]   37 #>  [1828,]   36 #>  [1829,]   36 #>  [1830,]   36 #>  [1831,]   37 #>  [1832,]   37 #>  [1833,]   36 #>  [1834,]   36 #>  [1835,]   36 #>  [1836,]   36 #>  [1837,]   36 #>  [1838,]   37 #>  [1839,]   37 #>  [1840,]   36 #>  [1841,]   36 #>  [1842,]   36 #>  [1843,]   37 #>  [1844,]   36 #>  [1845,]   36 #>  [1846,]   36 #>  [1847,]   37 #>  [1848,]   36 #>  [1849,]   36 #>  [1850,]   36 #>  [1851,]   36 #>  [1852,]   37 #>  [1853,]   36 #>  [1854,]   36 #>  [1855,]   36 #>  [1856,]   36 #>  [1857,]   36 #>  [1858,]   37 #>  [1859,]   37 #>  [1860,]   36 #>  [1861,]   37 #>  [1862,]   36 #>  [1863,]   36 #>  [1864,]   36 #>  [1865,]   36 #>  [1866,]   37 #>  [1867,]   36 #>  [1868,]   37 #>  [1869,]   36 #>  [1870,]   37 #>  [1871,]   37 #>  [1872,]   36 #>  [1873,]   36 #>  [1874,]   36 #>  [1875,]   37 #>  [1876,]   36 #>  [1877,]   37 #>  [1878,]   36 #>  [1879,]   37 #>  [1880,]   36 #>  [1881,]   36 #>  [1882,]   36 #>  [1883,]   37 #>  [1884,]   36 #>  [1885,]   36 #>  [1886,]   36 #>  [1887,]   37 #>  [1888,]   36 #>  [1889,]   36 #>  [1890,]   37 #>  [1891,]   37 #>  [1892,]   37 #>  [1893,]   36 #>  [1894,]   36 #>  [1895,]   37 #>  [1896,]   37 #>  [1897,]   36 #>  [1898,]   36 #>  [1899,]   36 #>  [1900,]   37 #>  [1901,]   38 #>  [1902,]   38 #>  [1903,]   38 #>  [1904,]   38 #>  [1905,]   38 #>  [1906,]   38 #>  [1907,]   38 #>  [1908,]   38 #>  [1909,]   38 #>  [1910,]   38 #>  [1911,]   38 #>  [1912,]   38 #>  [1913,]   38 #>  [1914,]   38 #>  [1915,]   38 #>  [1916,]   38 #>  [1917,]   38 #>  [1918,]   38 #>  [1919,]   38 #>  [1920,]   38 #>  [1921,]   38 #>  [1922,]   38 #>  [1923,]   38 #>  [1924,]   38 #>  [1925,]   38 #>  [1926,]   38 #>  [1927,]   38 #>  [1928,]   38 #>  [1929,]   38 #>  [1930,]   38 #>  [1931,]   38 #>  [1932,]   38 #>  [1933,]   38 #>  [1934,]   38 #>  [1935,]   38 #>  [1936,]   38 #>  [1937,]   38 #>  [1938,]   38 #>  [1939,]   38 #>  [1940,]   38 #>  [1941,]   38 #>  [1942,]   38 #>  [1943,]   38 #>  [1944,]   38 #>  [1945,]   38 #>  [1946,]   38 #>  [1947,]   38 #>  [1948,]   38 #>  [1949,]   38 #>  [1950,]   38 #>  [1951,]   38 #>  [1952,]   38 #>  [1953,]   38 #>  [1954,]   38 #>  [1955,]   38 #>  [1956,]   38 #>  [1957,]   38 #>  [1958,]   38 #>  [1959,]   38 #>  [1960,]   38 #>  [1961,]   38 #>  [1962,]   38 #>  [1963,]   38 #>  [1964,]   38 #>  [1965,]   38 #>  [1966,]   38 #>  [1967,]   38 #>  [1968,]   38 #>  [1969,]   38 #>  [1970,]   38 #>  [1971,]   38 #>  [1972,]   38 #>  [1973,]   38 #>  [1974,]   38 #>  [1975,]   38 #>  [1976,]   38 #>  [1977,]   38 #>  [1978,]   38 #>  [1979,]   38 #>  [1980,]   38 #>  [1981,]   38 #>  [1982,]   38 #>  [1983,]   38 #>  [1984,]   38 #>  [1985,]   38 #>  [1986,]   38 #>  [1987,]   38 #>  [1988,]   38 #>  [1989,]   38 #>  [1990,]   38 #>  [1991,]   38 #>  [1992,]   38 #>  [1993,]   38 #>  [1994,]   38 #>  [1995,]   38 #>  [1996,]   38 #>  [1997,]   38 #>  [1998,]   38 #>  [1999,]   38 #>  [2000,]   38 #>  [2001,]   40 #>  [2002,]   39 #>  [2003,]   39 #>  [2004,]   39 #>  [2005,]   40 #>  [2006,]   40 #>  [2007,]   39 #>  [2008,]   39 #>  [2009,]   40 #>  [2010,]   39 #>  [2011,]   40 #>  [2012,]   39 #>  [2013,]   40 #>  [2014,]   39 #>  [2015,]   39 #>  [2016,]   39 #>  [2017,]   40 #>  [2018,]   40 #>  [2019,]   40 #>  [2020,]   40 #>  [2021,]   40 #>  [2022,]   40 #>  [2023,]   39 #>  [2024,]   40 #>  [2025,]   39 #>  [2026,]   39 #>  [2027,]   40 #>  [2028,]   40 #>  [2029,]   40 #>  [2030,]   39 #>  [2031,]   39 #>  [2032,]   39 #>  [2033,]   40 #>  [2034,]   39 #>  [2035,]   39 #>  [2036,]   40 #>  [2037,]   39 #>  [2038,]   40 #>  [2039,]   40 #>  [2040,]   39 #>  [2041,]   40 #>  [2042,]   40 #>  [2043,]   40 #>  [2044,]   39 #>  [2045,]   39 #>  [2046,]   39 #>  [2047,]   39 #>  [2048,]   40 #>  [2049,]   39 #>  [2050,]   40 #>  [2051,]   40 #>  [2052,]   39 #>  [2053,]   40 #>  [2054,]   40 #>  [2055,]   39 #>  [2056,]   40 #>  [2057,]   39 #>  [2058,]   40 #>  [2059,]   39 #>  [2060,]   39 #>  [2061,]   40 #>  [2062,]   40 #>  [2063,]   40 #>  [2064,]   40 #>  [2065,]   40 #>  [2066,]   40 #>  [2067,]   39 #>  [2068,]   39 #>  [2069,]   39 #>  [2070,]   40 #>  [2071,]   39 #>  [2072,]   39 #>  [2073,]   40 #>  [2074,]   39 #>  [2075,]   39 #>  [2076,]   39 #>  [2077,]   40 #>  [2078,]   39 #>  [2079,]   40 #>  [2080,]   39 #>  [2081,]   40 #>  [2082,]   40 #>  [2083,]   40 #>  [2084,]   40 #>  [2085,]   40 #>  [2086,]   39 #>  [2087,]   40 #>  [2088,]   39 #>  [2089,]   40 #>  [2090,]   40 #>  [2091,]   40 #>  [2092,]   39 #>  [2093,]   40 #>  [2094,]   40 #>  [2095,]   39 #>  [2096,]   39 #>  [2097,]   39 #>  [2098,]   39 #>  [2099,]   40 #>  [2100,]   40 #>  [2101,]   42 #>  [2102,]   42 #>  [2103,]   41 #>  [2104,]   41 #>  [2105,]   41 #>  [2106,]   42 #>  [2107,]   41 #>  [2108,]   41 #>  [2109,]   41 #>  [2110,]   41 #>  [2111,]   41 #>  [2112,]   41 #>  [2113,]   42 #>  [2114,]   42 #>  [2115,]   42 #>  [2116,]   42 #>  [2117,]   42 #>  [2118,]   41 #>  [2119,]   41 #>  [2120,]   41 #>  [2121,]   42 #>  [2122,]   41 #>  [2123,]   41 #>  [2124,]   41 #>  [2125,]   41 #>  [2126,]   42 #>  [2127,]   41 #>  [2128,]   41 #>  [2129,]   42 #>  [2130,]   41 #>  [2131,]   41 #>  [2132,]   41 #>  [2133,]   42 #>  [2134,]   41 #>  [2135,]   42 #>  [2136,]   41 #>  [2137,]   41 #>  [2138,]   41 #>  [2139,]   41 #>  [2140,]   41 #>  [2141,]   42 #>  [2142,]   41 #>  [2143,]   41 #>  [2144,]   42 #>  [2145,]   41 #>  [2146,]   41 #>  [2147,]   41 #>  [2148,]   41 #>  [2149,]   41 #>  [2150,]   42 #>  [2151,]   41 #>  [2152,]   41 #>  [2153,]   41 #>  [2154,]   41 #>  [2155,]   41 #>  [2156,]   41 #>  [2157,]   41 #>  [2158,]   41 #>  [2159,]   42 #>  [2160,]   41 #>  [2161,]   42 #>  [2162,]   41 #>  [2163,]   41 #>  [2164,]   41 #>  [2165,]   41 #>  [2166,]   41 #>  [2167,]   41 #>  [2168,]   42 #>  [2169,]   41 #>  [2170,]   42 #>  [2171,]   41 #>  [2172,]   41 #>  [2173,]   42 #>  [2174,]   41 #>  [2175,]   41 #>  [2176,]   42 #>  [2177,]   42 #>  [2178,]   41 #>  [2179,]   42 #>  [2180,]   41 #>  [2181,]   42 #>  [2182,]   41 #>  [2183,]   42 #>  [2184,]   41 #>  [2185,]   41 #>  [2186,]   42 #>  [2187,]   41 #>  [2188,]   41 #>  [2189,]   41 #>  [2190,]   41 #>  [2191,]   41 #>  [2192,]   41 #>  [2193,]   42 #>  [2194,]   41 #>  [2195,]   41 #>  [2196,]   42 #>  [2197,]   41 #>  [2198,]   41 #>  [2199,]   42 #>  [2200,]   41 #>  [2201,]   43 #>  [2202,]   44 #>  [2203,]   44 #>  [2204,]   43 #>  [2205,]   43 #>  [2206,]   44 #>  [2207,]   43 #>  [2208,]   43 #>  [2209,]   43 #>  [2210,]   43 #>  [2211,]   43 #>  [2212,]   44 #>  [2213,]   43 #>  [2214,]   43 #>  [2215,]   43 #>  [2216,]   43 #>  [2217,]   43 #>  [2218,]   44 #>  [2219,]   44 #>  [2220,]   44 #>  [2221,]   43 #>  [2222,]   43 #>  [2223,]   43 #>  [2224,]   43 #>  [2225,]   44 #>  [2226,]   43 #>  [2227,]   43 #>  [2228,]   44 #>  [2229,]   43 #>  [2230,]   43 #>  [2231,]   43 #>  [2232,]   43 #>  [2233,]   44 #>  [2234,]   44 #>  [2235,]   43 #>  [2236,]   43 #>  [2237,]   43 #>  [2238,]   43 #>  [2239,]   43 #>  [2240,]   43 #>  [2241,]   43 #>  [2242,]   43 #>  [2243,]   43 #>  [2244,]   43 #>  [2245,]   43 #>  [2246,]   43 #>  [2247,]   43 #>  [2248,]   43 #>  [2249,]   43 #>  [2250,]   43 #>  [2251,]   43 #>  [2252,]   43 #>  [2253,]   43 #>  [2254,]   43 #>  [2255,]   43 #>  [2256,]   43 #>  [2257,]   43 #>  [2258,]   43 #>  [2259,]   43 #>  [2260,]   44 #>  [2261,]   43 #>  [2262,]   43 #>  [2263,]   43 #>  [2264,]   43 #>  [2265,]   44 #>  [2266,]   43 #>  [2267,]   43 #>  [2268,]   43 #>  [2269,]   43 #>  [2270,]   44 #>  [2271,]   43 #>  [2272,]   43 #>  [2273,]   44 #>  [2274,]   43 #>  [2275,]   43 #>  [2276,]   43 #>  [2277,]   43 #>  [2278,]   43 #>  [2279,]   43 #>  [2280,]   43 #>  [2281,]   43 #>  [2282,]   43 #>  [2283,]   43 #>  [2284,]   44 #>  [2285,]   43 #>  [2286,]   43 #>  [2287,]   43 #>  [2288,]   43 #>  [2289,]   43 #>  [2290,]   43 #>  [2291,]   43 #>  [2292,]   43 #>  [2293,]   44 #>  [2294,]   43 #>  [2295,]   43 #>  [2296,]   43 #>  [2297,]   44 #>  [2298,]   44 #>  [2299,]   43 #>  [2300,]   43 #>  [2301,]   45 #>  [2302,]   45 #>  [2303,]   46 #>  [2304,]   45 #>  [2305,]   45 #>  [2306,]   46 #>  [2307,]   45 #>  [2308,]   45 #>  [2309,]   45 #>  [2310,]   45 #>  [2311,]   45 #>  [2312,]   46 #>  [2313,]   45 #>  [2314,]   45 #>  [2315,]   45 #>  [2316,]   45 #>  [2317,]   45 #>  [2318,]   45 #>  [2319,]   46 #>  [2320,]   46 #>  [2321,]   45 #>  [2322,]   45 #>  [2323,]   45 #>  [2324,]   45 #>  [2325,]   46 #>  [2326,]   45 #>  [2327,]   45 #>  [2328,]   46 #>  [2329,]   45 #>  [2330,]   45 #>  [2331,]   45 #>  [2332,]   45 #>  [2333,]   46 #>  [2334,]   46 #>  [2335,]   45 #>  [2336,]   45 #>  [2337,]   45 #>  [2338,]   45 #>  [2339,]   45 #>  [2340,]   45 #>  [2341,]   45 #>  [2342,]   45 #>  [2343,]   45 #>  [2344,]   45 #>  [2345,]   45 #>  [2346,]   45 #>  [2347,]   45 #>  [2348,]   45 #>  [2349,]   45 #>  [2350,]   45 #>  [2351,]   45 #>  [2352,]   45 #>  [2353,]   45 #>  [2354,]   45 #>  [2355,]   45 #>  [2356,]   45 #>  [2357,]   45 #>  [2358,]   45 #>  [2359,]   45 #>  [2360,]   46 #>  [2361,]   45 #>  [2362,]   45 #>  [2363,]   45 #>  [2364,]   45 #>  [2365,]   46 #>  [2366,]   45 #>  [2367,]   45 #>  [2368,]   45 #>  [2369,]   45 #>  [2370,]   46 #>  [2371,]   45 #>  [2372,]   45 #>  [2373,]   46 #>  [2374,]   45 #>  [2375,]   45 #>  [2376,]   45 #>  [2377,]   45 #>  [2378,]   45 #>  [2379,]   45 #>  [2380,]   45 #>  [2381,]   45 #>  [2382,]   45 #>  [2383,]   45 #>  [2384,]   45 #>  [2385,]   45 #>  [2386,]   45 #>  [2387,]   45 #>  [2388,]   45 #>  [2389,]   45 #>  [2390,]   45 #>  [2391,]   45 #>  [2392,]   45 #>  [2393,]   46 #>  [2394,]   45 #>  [2395,]   45 #>  [2396,]   45 #>  [2397,]   46 #>  [2398,]   46 #>  [2399,]   45 #>  [2400,]   45 #>  [2401,]   48 #>  [2402,]   47 #>  [2403,]   47 #>  [2404,]   47 #>  [2405,]   48 #>  [2406,]   47 #>  [2407,]   47 #>  [2408,]   47 #>  [2409,]   47 #>  [2410,]   47 #>  [2411,]   47 #>  [2412,]   47 #>  [2413,]   47 #>  [2414,]   48 #>  [2415,]   48 #>  [2416,]   47 #>  [2417,]   47 #>  [2418,]   48 #>  [2419,]   47 #>  [2420,]   47 #>  [2421,]   47 #>  [2422,]   47 #>  [2423,]   47 #>  [2424,]   47 #>  [2425,]   47 #>  [2426,]   48 #>  [2427,]   48 #>  [2428,]   47 #>  [2429,]   47 #>  [2430,]   47 #>  [2431,]   47 #>  [2432,]   48 #>  [2433,]   47 #>  [2434,]   47 #>  [2435,]   47 #>  [2436,]   47 #>  [2437,]   47 #>  [2438,]   47 #>  [2439,]   47 #>  [2440,]   47 #>  [2441,]   47 #>  [2442,]   47 #>  [2443,]   48 #>  [2444,]   47 #>  [2445,]   47 #>  [2446,]   47 #>  [2447,]   47 #>  [2448,]   47 #>  [2449,]   47 #>  [2450,]   47 #>  [2451,]   47 #>  [2452,]   47 #>  [2453,]   47 #>  [2454,]   47 #>  [2455,]   47 #>  [2456,]   47 #>  [2457,]   47 #>  [2458,]   48 #>  [2459,]   48 #>  [2460,]   47 #>  [2461,]   48 #>  [2462,]   47 #>  [2463,]   47 #>  [2464,]   47 #>  [2465,]   47 #>  [2466,]   48 #>  [2467,]   47 #>  [2468,]   47 #>  [2469,]   47 #>  [2470,]   48 #>  [2471,]   48 #>  [2472,]   47 #>  [2473,]   47 #>  [2474,]   47 #>  [2475,]   48 #>  [2476,]   47 #>  [2477,]   47 #>  [2478,]   47 #>  [2479,]   48 #>  [2480,]   47 #>  [2481,]   47 #>  [2482,]   47 #>  [2483,]   47 #>  [2484,]   47 #>  [2485,]   47 #>  [2486,]   47 #>  [2487,]   48 #>  [2488,]   47 #>  [2489,]   47 #>  [2490,]   47 #>  [2491,]   48 #>  [2492,]   47 #>  [2493,]   47 #>  [2494,]   47 #>  [2495,]   48 #>  [2496,]   47 #>  [2497,]   47 #>  [2498,]   47 #>  [2499,]   47 #>  [2500,]   48 #>  [2501,]   50 #>  [2502,]   49 #>  [2503,]   49 #>  [2504,]   49 #>  [2505,]   50 #>  [2506,]   49 #>  [2507,]   49 #>  [2508,]   49 #>  [2509,]   50 #>  [2510,]   49 #>  [2511,]   50 #>  [2512,]   49 #>  [2513,]   50 #>  [2514,]   49 #>  [2515,]   49 #>  [2516,]   49 #>  [2517,]   50 #>  [2518,]   50 #>  [2519,]   50 #>  [2520,]   50 #>  [2521,]   50 #>  [2522,]   50 #>  [2523,]   49 #>  [2524,]   50 #>  [2525,]   49 #>  [2526,]   49 #>  [2527,]   50 #>  [2528,]   50 #>  [2529,]   50 #>  [2530,]   49 #>  [2531,]   49 #>  [2532,]   49 #>  [2533,]   50 #>  [2534,]   49 #>  [2535,]   49 #>  [2536,]   50 #>  [2537,]   49 #>  [2538,]   50 #>  [2539,]   50 #>  [2540,]   49 #>  [2541,]   50 #>  [2542,]   50 #>  [2543,]   49 #>  [2544,]   49 #>  [2545,]   49 #>  [2546,]   49 #>  [2547,]   49 #>  [2548,]   49 #>  [2549,]   49 #>  [2550,]   49 #>  [2551,]   50 #>  [2552,]   49 #>  [2553,]   50 #>  [2554,]   50 #>  [2555,]   49 #>  [2556,]   50 #>  [2557,]   49 #>  [2558,]   50 #>  [2559,]   49 #>  [2560,]   49 #>  [2561,]   50 #>  [2562,]   50 #>  [2563,]   49 #>  [2564,]   50 #>  [2565,]   50 #>  [2566,]   50 #>  [2567,]   49 #>  [2568,]   49 #>  [2569,]   49 #>  [2570,]   50 #>  [2571,]   49 #>  [2572,]   49 #>  [2573,]   50 #>  [2574,]   49 #>  [2575,]   49 #>  [2576,]   49 #>  [2577,]   50 #>  [2578,]   49 #>  [2579,]   50 #>  [2580,]   49 #>  [2581,]   50 #>  [2582,]   50 #>  [2583,]   50 #>  [2584,]   50 #>  [2585,]   50 #>  [2586,]   49 #>  [2587,]   50 #>  [2588,]   49 #>  [2589,]   50 #>  [2590,]   50 #>  [2591,]   50 #>  [2592,]   49 #>  [2593,]   50 #>  [2594,]   50 #>  [2595,]   49 #>  [2596,]   49 #>  [2597,]   49 #>  [2598,]   49 #>  [2599,]   50 #>  [2600,]   50 #>  [2601,]   52 #>  [2602,]   51 #>  [2603,]   51 #>  [2604,]   51 #>  [2605,]   52 #>  [2606,]   51 #>  [2607,]   51 #>  [2608,]   51 #>  [2609,]   51 #>  [2610,]   52 #>  [2611,]   52 #>  [2612,]   52 #>  [2613,]   51 #>  [2614,]   52 #>  [2615,]   52 #>  [2616,]   51 #>  [2617,]   52 #>  [2618,]   52 #>  [2619,]   51 #>  [2620,]   51 #>  [2621,]   51 #>  [2622,]   52 #>  [2623,]   51 #>  [2624,]   51 #>  [2625,]   51 #>  [2626,]   52 #>  [2627,]   52 #>  [2628,]   51 #>  [2629,]   51 #>  [2630,]   51 #>  [2631,]   52 #>  [2632,]   52 #>  [2633,]   51 #>  [2634,]   51 #>  [2635,]   51 #>  [2636,]   51 #>  [2637,]   51 #>  [2638,]   52 #>  [2639,]   52 #>  [2640,]   51 #>  [2641,]   51 #>  [2642,]   51 #>  [2643,]   52 #>  [2644,]   51 #>  [2645,]   51 #>  [2646,]   51 #>  [2647,]   52 #>  [2648,]   51 #>  [2649,]   51 #>  [2650,]   51 #>  [2651,]   51 #>  [2652,]   52 #>  [2653,]   51 #>  [2654,]   51 #>  [2655,]   51 #>  [2656,]   51 #>  [2657,]   51 #>  [2658,]   52 #>  [2659,]   52 #>  [2660,]   51 #>  [2661,]   52 #>  [2662,]   51 #>  [2663,]   51 #>  [2664,]   51 #>  [2665,]   51 #>  [2666,]   52 #>  [2667,]   51 #>  [2668,]   52 #>  [2669,]   51 #>  [2670,]   52 #>  [2671,]   52 #>  [2672,]   51 #>  [2673,]   51 #>  [2674,]   51 #>  [2675,]   52 #>  [2676,]   51 #>  [2677,]   52 #>  [2678,]   51 #>  [2679,]   52 #>  [2680,]   51 #>  [2681,]   51 #>  [2682,]   51 #>  [2683,]   52 #>  [2684,]   51 #>  [2685,]   51 #>  [2686,]   51 #>  [2687,]   52 #>  [2688,]   51 #>  [2689,]   51 #>  [2690,]   52 #>  [2691,]   52 #>  [2692,]   52 #>  [2693,]   51 #>  [2694,]   51 #>  [2695,]   52 #>  [2696,]   52 #>  [2697,]   51 #>  [2698,]   51 #>  [2699,]   51 #>  [2700,]   52 #>  [2701,]   53 #>  [2702,]   54 #>  [2703,]   53 #>  [2704,]   53 #>  [2705,]   54 #>  [2706,]   53 #>  [2707,]   53 #>  [2708,]   53 #>  [2709,]   54 #>  [2710,]   54 #>  [2711,]   53 #>  [2712,]   54 #>  [2713,]   54 #>  [2714,]   53 #>  [2715,]   53 #>  [2716,]   53 #>  [2717,]   54 #>  [2718,]   54 #>  [2719,]   53 #>  [2720,]   54 #>  [2721,]   54 #>  [2722,]   53 #>  [2723,]   54 #>  [2724,]   54 #>  [2725,]   53 #>  [2726,]   53 #>  [2727,]   54 #>  [2728,]   53 #>  [2729,]   54 #>  [2730,]   53 #>  [2731,]   54 #>  [2732,]   54 #>  [2733,]   54 #>  [2734,]   53 #>  [2735,]   53 #>  [2736,]   54 #>  [2737,]   53 #>  [2738,]   53 #>  [2739,]   53 #>  [2740,]   54 #>  [2741,]   53 #>  [2742,]   53 #>  [2743,]   53 #>  [2744,]   54 #>  [2745,]   53 #>  [2746,]   53 #>  [2747,]   53 #>  [2748,]   53 #>  [2749,]   53 #>  [2750,]   53 #>  [2751,]   53 #>  [2752,]   53 #>  [2753,]   54 #>  [2754,]   53 #>  [2755,]   53 #>  [2756,]   53 #>  [2757,]   53 #>  [2758,]   53 #>  [2759,]   53 #>  [2760,]   54 #>  [2761,]   54 #>  [2762,]   53 #>  [2763,]   54 #>  [2764,]   53 #>  [2765,]   53 #>  [2766,]   53 #>  [2767,]   53 #>  [2768,]   53 #>  [2769,]   53 #>  [2770,]   54 #>  [2771,]   53 #>  [2772,]   53 #>  [2773,]   53 #>  [2774,]   53 #>  [2775,]   54 #>  [2776,]   53 #>  [2777,]   53 #>  [2778,]   53 #>  [2779,]   53 #>  [2780,]   54 #>  [2781,]   54 #>  [2782,]   53 #>  [2783,]   54 #>  [2784,]   54 #>  [2785,]   53 #>  [2786,]   54 #>  [2787,]   53 #>  [2788,]   54 #>  [2789,]   53 #>  [2790,]   53 #>  [2791,]   53 #>  [2792,]   53 #>  [2793,]   53 #>  [2794,]   53 #>  [2795,]   53 #>  [2796,]   53 #>  [2797,]   53 #>  [2798,]   53 #>  [2799,]   53 #>  [2800,]   53 #>  [2801,]   55 #>  [2802,]   56 #>  [2803,]   55 #>  [2804,]   55 #>  [2805,]   55 #>  [2806,]   55 #>  [2807,]   55 #>  [2808,]   55 #>  [2809,]   56 #>  [2810,]   56 #>  [2811,]   55 #>  [2812,]   56 #>  [2813,]   55 #>  [2814,]   55 #>  [2815,]   55 #>  [2816,]   55 #>  [2817,]   56 #>  [2818,]   55 #>  [2819,]   55 #>  [2820,]   55 #>  [2821,]   56 #>  [2822,]   55 #>  [2823,]   55 #>  [2824,]   55 #>  [2825,]   55 #>  [2826,]   55 #>  [2827,]   55 #>  [2828,]   55 #>  [2829,]   56 #>  [2830,]   55 #>  [2831,]   55 #>  [2832,]   55 #>  [2833,]   56 #>  [2834,]   55 #>  [2835,]   55 #>  [2836,]   55 #>  [2837,]   55 #>  [2838,]   55 #>  [2839,]   55 #>  [2840,]   55 #>  [2841,]   55 #>  [2842,]   55 #>  [2843,]   55 #>  [2844,]   55 #>  [2845,]   55 #>  [2846,]   55 #>  [2847,]   55 #>  [2848,]   55 #>  [2849,]   55 #>  [2850,]   55 #>  [2851,]   55 #>  [2852,]   55 #>  [2853,]   55 #>  [2854,]   55 #>  [2855,]   55 #>  [2856,]   55 #>  [2857,]   55 #>  [2858,]   55 #>  [2859,]   55 #>  [2860,]   56 #>  [2861,]   55 #>  [2862,]   55 #>  [2863,]   56 #>  [2864,]   55 #>  [2865,]   55 #>  [2866,]   55 #>  [2867,]   55 #>  [2868,]   55 #>  [2869,]   55 #>  [2870,]   56 #>  [2871,]   55 #>  [2872,]   55 #>  [2873,]   55 #>  [2874,]   55 #>  [2875,]   55 #>  [2876,]   55 #>  [2877,]   55 #>  [2878,]   55 #>  [2879,]   55 #>  [2880,]   56 #>  [2881,]   56 #>  [2882,]   55 #>  [2883,]   55 #>  [2884,]   55 #>  [2885,]   55 #>  [2886,]   56 #>  [2887,]   55 #>  [2888,]   55 #>  [2889,]   55 #>  [2890,]   55 #>  [2891,]   55 #>  [2892,]   55 #>  [2893,]   55 #>  [2894,]   55 #>  [2895,]   55 #>  [2896,]   55 #>  [2897,]   55 #>  [2898,]   55 #>  [2899,]   55 #>  [2900,]   55 #>  [2901,]   57 #>  [2902,]   57 #>  [2903,]   57 #>  [2904,]   57 #>  [2905,]   58 #>  [2906,]   57 #>  [2907,]   57 #>  [2908,]   57 #>  [2909,]   57 #>  [2910,]   57 #>  [2911,]   57 #>  [2912,]   57 #>  [2913,]   57 #>  [2914,]   57 #>  [2915,]   57 #>  [2916,]   57 #>  [2917,]   57 #>  [2918,]   58 #>  [2919,]   57 #>  [2920,]   57 #>  [2921,]   57 #>  [2922,]   57 #>  [2923,]   57 #>  [2924,]   57 #>  [2925,]   57 #>  [2926,]   57 #>  [2927,]   57 #>  [2928,]   57 #>  [2929,]   57 #>  [2930,]   57 #>  [2931,]   57 #>  [2932,]   58 #>  [2933,]   57 #>  [2934,]   57 #>  [2935,]   57 #>  [2936,]   57 #>  [2937,]   57 #>  [2938,]   57 #>  [2939,]   57 #>  [2940,]   57 #>  [2941,]   57 #>  [2942,]   57 #>  [2943,]   57 #>  [2944,]   57 #>  [2945,]   57 #>  [2946,]   57 #>  [2947,]   57 #>  [2948,]   57 #>  [2949,]   57 #>  [2950,]   57 #>  [2951,]   57 #>  [2952,]   57 #>  [2953,]   57 #>  [2954,]   57 #>  [2955,]   57 #>  [2956,]   57 #>  [2957,]   57 #>  [2958,]   57 #>  [2959,]   57 #>  [2960,]   57 #>  [2961,]   57 #>  [2962,]   57 #>  [2963,]   57 #>  [2964,]   57 #>  [2965,]   57 #>  [2966,]   57 #>  [2967,]   57 #>  [2968,]   57 #>  [2969,]   57 #>  [2970,]   57 #>  [2971,]   58 #>  [2972,]   57 #>  [2973,]   57 #>  [2974,]   57 #>  [2975,]   58 #>  [2976,]   57 #>  [2977,]   57 #>  [2978,]   57 #>  [2979,]   57 #>  [2980,]   57 #>  [2981,]   57 #>  [2982,]   57 #>  [2983,]   57 #>  [2984,]   57 #>  [2985,]   57 #>  [2986,]   57 #>  [2987,]   57 #>  [2988,]   57 #>  [2989,]   57 #>  [2990,]   57 #>  [2991,]   58 #>  [2992,]   57 #>  [2993,]   57 #>  [2994,]   57 #>  [2995,]   58 #>  [2996,]   57 #>  [2997,]   57 #>  [2998,]   57 #>  [2999,]   57 #>  [3000,]   58 #>  [3001,]   60 #>  [3002,]   60 #>  [3003,]   59 #>  [3004,]   60 #>  [3005,]   60 #>  [3006,]   60 #>  [3007,]   59 #>  [3008,]   60 #>  [3009,]   60 #>  [3010,]   60 #>  [3011,]   60 #>  [3012,]   60 #>  [3013,]   59 #>  [3014,]   60 #>  [3015,]   60 #>  [3016,]   59 #>  [3017,]   60 #>  [3018,]   60 #>  [3019,]   59 #>  [3020,]   60 #>  [3021,]   59 #>  [3022,]   60 #>  [3023,]   59 #>  [3024,]   60 #>  [3025,]   60 #>  [3026,]   60 #>  [3027,]   60 #>  [3028,]   60 #>  [3029,]   60 #>  [3030,]   59 #>  [3031,]   59 #>  [3032,]   60 #>  [3033,]   60 #>  [3034,]   60 #>  [3035,]   59 #>  [3036,]   59 #>  [3037,]   59 #>  [3038,]   60 #>  [3039,]   59 #>  [3040,]   59 #>  [3041,]   60 #>  [3042,]   60 #>  [3043,]   60 #>  [3044,]   60 #>  [3045,]   60 #>  [3046,]   60 #>  [3047,]   59 #>  [3048,]   60 #>  [3049,]   59 #>  [3050,]   60 #>  [3051,]   60 #>  [3052,]   60 #>  [3053,]   60 #>  [3054,]   59 #>  [3055,]   60 #>  [3056,]   60 #>  [3057,]   60 #>  [3058,]   60 #>  [3059,]   60 #>  [3060,]   60 #>  [3061,]   60 #>  [3062,]   59 #>  [3063,]   60 #>  [3064,]   60 #>  [3065,]   60 #>  [3066,]   60 #>  [3067,]   60 #>  [3068,]   60 #>  [3069,]   60 #>  [3070,]   59 #>  [3071,]   60 #>  [3072,]   60 #>  [3073,]   60 #>  [3074,]   60 #>  [3075,]   60 #>  [3076,]   60 #>  [3077,]   59 #>  [3078,]   60 #>  [3079,]   59 #>  [3080,]   59 #>  [3081,]   60 #>  [3082,]   60 #>  [3083,]   59 #>  [3084,]   60 #>  [3085,]   60 #>  [3086,]   60 #>  [3087,]   60 #>  [3088,]   60 #>  [3089,]   60 #>  [3090,]   60 #>  [3091,]   60 #>  [3092,]   60 #>  [3093,]   59 #>  [3094,]   60 #>  [3095,]   59 #>  [3096,]   60 #>  [3097,]   60 #>  [3098,]   59 #>  [3099,]   60 #>  [3100,]   60 #>  [3101,]   61 #>  [3102,]   61 #>  [3103,]   61 #>  [3104,]   62 #>  [3105,]   61 #>  [3106,]   61 #>  [3107,]   62 #>  [3108,]   61 #>  [3109,]   61 #>  [3110,]   62 #>  [3111,]   61 #>  [3112,]   61 #>  [3113,]   61 #>  [3114,]   61 #>  [3115,]   61 #>  [3116,]   62 #>  [3117,]   61 #>  [3118,]   61 #>  [3119,]   61 #>  [3120,]   62 #>  [3121,]   61 #>  [3122,]   61 #>  [3123,]   61 #>  [3124,]   62 #>  [3125,]   62 #>  [3126,]   61 #>  [3127,]   61 #>  [3128,]   62 #>  [3129,]   61 #>  [3130,]   61 #>  [3131,]   61 #>  [3132,]   61 #>  [3133,]   61 #>  [3134,]   61 #>  [3135,]   61 #>  [3136,]   61 #>  [3137,]   61 #>  [3138,]   61 #>  [3139,]   62 #>  [3140,]   61 #>  [3141,]   61 #>  [3142,]   61 #>  [3143,]   61 #>  [3144,]   61 #>  [3145,]   61 #>  [3146,]   61 #>  [3147,]   61 #>  [3148,]   61 #>  [3149,]   61 #>  [3150,]   62 #>  [3151,]   61 #>  [3152,]   62 #>  [3153,]   61 #>  [3154,]   62 #>  [3155,]   61 #>  [3156,]   61 #>  [3157,]   62 #>  [3158,]   61 #>  [3159,]   61 #>  [3160,]   61 #>  [3161,]   61 #>  [3162,]   61 #>  [3163,]   61 #>  [3164,]   61 #>  [3165,]   61 #>  [3166,]   61 #>  [3167,]   61 #>  [3168,]   61 #>  [3169,]   61 #>  [3170,]   61 #>  [3171,]   61 #>  [3172,]   61 #>  [3173,]   62 #>  [3174,]   61 #>  [3175,]   61 #>  [3176,]   62 #>  [3177,]   61 #>  [3178,]   61 #>  [3179,]   61 #>  [3180,]   61 #>  [3181,]   61 #>  [3182,]   61 #>  [3183,]   61 #>  [3184,]   61 #>  [3185,]   61 #>  [3186,]   62 #>  [3187,]   61 #>  [3188,]   61 #>  [3189,]   61 #>  [3190,]   61 #>  [3191,]   62 #>  [3192,]   61 #>  [3193,]   61 #>  [3194,]   61 #>  [3195,]   61 #>  [3196,]   61 #>  [3197,]   61 #>  [3198,]   61 #>  [3199,]   61 #>  [3200,]   61 #>  [3201,]   63 #>  [3202,]   64 #>  [3203,]   64 #>  [3204,]   63 #>  [3205,]   63 #>  [3206,]   64 #>  [3207,]   64 #>  [3208,]   63 #>  [3209,]   63 #>  [3210,]   63 #>  [3211,]   63 #>  [3212,]   64 #>  [3213,]   63 #>  [3214,]   63 #>  [3215,]   63 #>  [3216,]   63 #>  [3217,]   63 #>  [3218,]   64 #>  [3219,]   64 #>  [3220,]   64 #>  [3221,]   63 #>  [3222,]   63 #>  [3223,]   64 #>  [3224,]   63 #>  [3225,]   64 #>  [3226,]   63 #>  [3227,]   63 #>  [3228,]   64 #>  [3229,]   63 #>  [3230,]   63 #>  [3231,]   64 #>  [3232,]   64 #>  [3233,]   64 #>  [3234,]   64 #>  [3235,]   63 #>  [3236,]   63 #>  [3237,]   63 #>  [3238,]   63 #>  [3239,]   63 #>  [3240,]   63 #>  [3241,]   63 #>  [3242,]   64 #>  [3243,]   63 #>  [3244,]   63 #>  [3245,]   63 #>  [3246,]   63 #>  [3247,]   63 #>  [3248,]   63 #>  [3249,]   63 #>  [3250,]   63 #>  [3251,]   63 #>  [3252,]   63 #>  [3253,]   63 #>  [3254,]   63 #>  [3255,]   63 #>  [3256,]   64 #>  [3257,]   63 #>  [3258,]   63 #>  [3259,]   63 #>  [3260,]   64 #>  [3261,]   63 #>  [3262,]   63 #>  [3263,]   63 #>  [3264,]   64 #>  [3265,]   64 #>  [3266,]   63 #>  [3267,]   63 #>  [3268,]   63 #>  [3269,]   63 #>  [3270,]   64 #>  [3271,]   64 #>  [3272,]   63 #>  [3273,]   64 #>  [3274,]   63 #>  [3275,]   63 #>  [3276,]   63 #>  [3277,]   63 #>  [3278,]   63 #>  [3279,]   63 #>  [3280,]   63 #>  [3281,]   63 #>  [3282,]   63 #>  [3283,]   63 #>  [3284,]   64 #>  [3285,]   63 #>  [3286,]   63 #>  [3287,]   63 #>  [3288,]   63 #>  [3289,]   63 #>  [3290,]   63 #>  [3291,]   63 #>  [3292,]   63 #>  [3293,]   64 #>  [3294,]   63 #>  [3295,]   63 #>  [3296,]   63 #>  [3297,]   64 #>  [3298,]   64 #>  [3299,]   63 #>  [3300,]   64 #>  [3301,]   65 #>  [3302,]   65 #>  [3303,]   65 #>  [3304,]   66 #>  [3305,]   65 #>  [3306,]   65 #>  [3307,]   65 #>  [3308,]   65 #>  [3309,]   65 #>  [3310,]   66 #>  [3311,]   65 #>  [3312,]   65 #>  [3313,]   65 #>  [3314,]   65 #>  [3315,]   65 #>  [3316,]   65 #>  [3317,]   65 #>  [3318,]   66 #>  [3319,]   65 #>  [3320,]   65 #>  [3321,]   66 #>  [3322,]   65 #>  [3323,]   66 #>  [3324,]   65 #>  [3325,]   66 #>  [3326,]   65 #>  [3327,]   65 #>  [3328,]   65 #>  [3329,]   65 #>  [3330,]   65 #>  [3331,]   65 #>  [3332,]   65 #>  [3333,]   65 #>  [3334,]   65 #>  [3335,]   65 #>  [3336,]   65 #>  [3337,]   65 #>  [3338,]   65 #>  [3339,]   66 #>  [3340,]   65 #>  [3341,]   65 #>  [3342,]   65 #>  [3343,]   66 #>  [3344,]   65 #>  [3345,]   66 #>  [3346,]   65 #>  [3347,]   65 #>  [3348,]   65 #>  [3349,]   65 #>  [3350,]   65 #>  [3351,]   65 #>  [3352,]   65 #>  [3353,]   66 #>  [3354,]   65 #>  [3355,]   65 #>  [3356,]   65 #>  [3357,]   65 #>  [3358,]   65 #>  [3359,]   65 #>  [3360,]   65 #>  [3361,]   66 #>  [3362,]   65 #>  [3363,]   65 #>  [3364,]   65 #>  [3365,]   65 #>  [3366,]   65 #>  [3367,]   65 #>  [3368,]   65 #>  [3369,]   65 #>  [3370,]   65 #>  [3371,]   65 #>  [3372,]   66 #>  [3373,]   66 #>  [3374,]   66 #>  [3375,]   66 #>  [3376,]   66 #>  [3377,]   66 #>  [3378,]   65 #>  [3379,]   65 #>  [3380,]   65 #>  [3381,]   65 #>  [3382,]   65 #>  [3383,]   65 #>  [3384,]   66 #>  [3385,]   65 #>  [3386,]   65 #>  [3387,]   65 #>  [3388,]   65 #>  [3389,]   65 #>  [3390,]   65 #>  [3391,]   65 #>  [3392,]   65 #>  [3393,]   65 #>  [3394,]   66 #>  [3395,]   66 #>  [3396,]   65 #>  [3397,]   65 #>  [3398,]   65 #>  [3399,]   65 #>  [3400,]   66 #>  [3401,]   68 #>  [3402,]   67 #>  [3403,]   67 #>  [3404,]   68 #>  [3405,]   68 #>  [3406,]   67 #>  [3407,]   67 #>  [3408,]   67 #>  [3409,]   67 #>  [3410,]   68 #>  [3411,]   68 #>  [3412,]   68 #>  [3413,]   68 #>  [3414,]   68 #>  [3415,]   68 #>  [3416,]   68 #>  [3417,]   68 #>  [3418,]   68 #>  [3419,]   68 #>  [3420,]   67 #>  [3421,]   67 #>  [3422,]   68 #>  [3423,]   67 #>  [3424,]   68 #>  [3425,]   67 #>  [3426,]   68 #>  [3427,]   68 #>  [3428,]   68 #>  [3429,]   67 #>  [3430,]   67 #>  [3431,]   68 #>  [3432,]   68 #>  [3433,]   68 #>  [3434,]   67 #>  [3435,]   67 #>  [3436,]   67 #>  [3437,]   67 #>  [3438,]   68 #>  [3439,]   68 #>  [3440,]   67 #>  [3441,]   67 #>  [3442,]   67 #>  [3443,]   68 #>  [3444,]   67 #>  [3445,]   67 #>  [3446,]   68 #>  [3447,]   68 #>  [3448,]   68 #>  [3449,]   67 #>  [3450,]   67 #>  [3451,]   68 #>  [3452,]   68 #>  [3453,]   67 #>  [3454,]   67 #>  [3455,]   67 #>  [3456,]   67 #>  [3457,]   67 #>  [3458,]   68 #>  [3459,]   68 #>  [3460,]   67 #>  [3461,]   68 #>  [3462,]   67 #>  [3463,]   68 #>  [3464,]   67 #>  [3465,]   67 #>  [3466,]   68 #>  [3467,]   67 #>  [3468,]   68 #>  [3469,]   68 #>  [3470,]   68 #>  [3471,]   68 #>  [3472,]   67 #>  [3473,]   67 #>  [3474,]   67 #>  [3475,]   68 #>  [3476,]   67 #>  [3477,]   68 #>  [3478,]   67 #>  [3479,]   68 #>  [3480,]   67 #>  [3481,]   67 #>  [3482,]   67 #>  [3483,]   68 #>  [3484,]   67 #>  [3485,]   67 #>  [3486,]   67 #>  [3487,]   68 #>  [3488,]   67 #>  [3489,]   67 #>  [3490,]   68 #>  [3491,]   68 #>  [3492,]   68 #>  [3493,]   67 #>  [3494,]   67 #>  [3495,]   68 #>  [3496,]   68 #>  [3497,]   67 #>  [3498,]   67 #>  [3499,]   67 #>  [3500,]   68 #>  [3501,]   70 #>  [3502,]   70 #>  [3503,]   69 #>  [3504,]   70 #>  [3505,]   70 #>  [3506,]   70 #>  [3507,]   69 #>  [3508,]   69 #>  [3509,]   70 #>  [3510,]   70 #>  [3511,]   70 #>  [3512,]   70 #>  [3513,]   70 #>  [3514,]   70 #>  [3515,]   70 #>  [3516,]   70 #>  [3517,]   70 #>  [3518,]   70 #>  [3519,]   70 #>  [3520,]   69 #>  [3521,]   70 #>  [3522,]   70 #>  [3523,]   70 #>  [3524,]   70 #>  [3525,]   69 #>  [3526,]   70 #>  [3527,]   70 #>  [3528,]   70 #>  [3529,]   70 #>  [3530,]   70 #>  [3531,]   70 #>  [3532,]   70 #>  [3533,]   70 #>  [3534,]   70 #>  [3535,]   70 #>  [3536,]   70 #>  [3537,]   70 #>  [3538,]   70 #>  [3539,]   69 #>  [3540,]   70 #>  [3541,]   70 #>  [3542,]   70 #>  [3543,]   70 #>  [3544,]   69 #>  [3545,]   70 #>  [3546,]   69 #>  [3547,]   70 #>  [3548,]   70 #>  [3549,]   69 #>  [3550,]   69 #>  [3551,]   70 #>  [3552,]   70 #>  [3553,]   69 #>  [3554,]   70 #>  [3555,]   69 #>  [3556,]   69 #>  [3557,]   70 #>  [3558,]   70 #>  [3559,]   69 #>  [3560,]   70 #>  [3561,]   70 #>  [3562,]   70 #>  [3563,]   70 #>  [3564,]   70 #>  [3565,]   69 #>  [3566,]   69 #>  [3567,]   70 #>  [3568,]   70 #>  [3569,]   70 #>  [3570,]   69 #>  [3571,]   70 #>  [3572,]   70 #>  [3573,]   70 #>  [3574,]   70 #>  [3575,]   70 #>  [3576,]   70 #>  [3577,]   70 #>  [3578,]   70 #>  [3579,]   70 #>  [3580,]   70 #>  [3581,]   70 #>  [3582,]   70 #>  [3583,]   70 #>  [3584,]   69 #>  [3585,]   70 #>  [3586,]   69 #>  [3587,]   70 #>  [3588,]   70 #>  [3589,]   70 #>  [3590,]   69 #>  [3591,]   70 #>  [3592,]   70 #>  [3593,]   70 #>  [3594,]   70 #>  [3595,]   70 #>  [3596,]   70 #>  [3597,]   70 #>  [3598,]   69 #>  [3599,]   70 #>  [3600,]   69 #>  [3601,]   71 #>  [3602,]   71 #>  [3603,]   71 #>  [3604,]   72 #>  [3605,]   71 #>  [3606,]   71 #>  [3607,]   71 #>  [3608,]   71 #>  [3609,]   71 #>  [3610,]   71 #>  [3611,]   72 #>  [3612,]   72 #>  [3613,]   71 #>  [3614,]   72 #>  [3615,]   72 #>  [3616,]   71 #>  [3617,]   71 #>  [3618,]   71 #>  [3619,]   72 #>  [3620,]   71 #>  [3621,]   72 #>  [3622,]   71 #>  [3623,]   71 #>  [3624,]   71 #>  [3625,]   71 #>  [3626,]   71 #>  [3627,]   72 #>  [3628,]   71 #>  [3629,]   71 #>  [3630,]   71 #>  [3631,]   72 #>  [3632,]   71 #>  [3633,]   72 #>  [3634,]   71 #>  [3635,]   71 #>  [3636,]   72 #>  [3637,]   71 #>  [3638,]   72 #>  [3639,]   71 #>  [3640,]   71 #>  [3641,]   72 #>  [3642,]   72 #>  [3643,]   71 #>  [3644,]   71 #>  [3645,]   71 #>  [3646,]   71 #>  [3647,]   71 #>  [3648,]   72 #>  [3649,]   71 #>  [3650,]   71 #>  [3651,]   71 #>  [3652,]   71 #>  [3653,]   71 #>  [3654,]   71 #>  [3655,]   71 #>  [3656,]   71 #>  [3657,]   71 #>  [3658,]   72 #>  [3659,]   71 #>  [3660,]   71 #>  [3661,]   72 #>  [3662,]   71 #>  [3663,]   71 #>  [3664,]   71 #>  [3665,]   71 #>  [3666,]   71 #>  [3667,]   71 #>  [3668,]   72 #>  [3669,]   72 #>  [3670,]   71 #>  [3671,]   71 #>  [3672,]   71 #>  [3673,]   71 #>  [3674,]   72 #>  [3675,]   72 #>  [3676,]   71 #>  [3677,]   71 #>  [3678,]   71 #>  [3679,]   71 #>  [3680,]   71 #>  [3681,]   71 #>  [3682,]   72 #>  [3683,]   71 #>  [3684,]   71 #>  [3685,]   71 #>  [3686,]   71 #>  [3687,]   71 #>  [3688,]   71 #>  [3689,]   71 #>  [3690,]   71 #>  [3691,]   71 #>  [3692,]   72 #>  [3693,]   72 #>  [3694,]   71 #>  [3695,]   71 #>  [3696,]   72 #>  [3697,]   72 #>  [3698,]   71 #>  [3699,]   71 #>  [3700,]   71 #>  [3701,]   74 #>  [3702,]   74 #>  [3703,]   73 #>  [3704,]   74 #>  [3705,]   74 #>  [3706,]   74 #>  [3707,]   74 #>  [3708,]   74 #>  [3709,]   74 #>  [3710,]   74 #>  [3711,]   74 #>  [3712,]   73 #>  [3713,]   74 #>  [3714,]   73 #>  [3715,]   74 #>  [3716,]   74 #>  [3717,]   74 #>  [3718,]   74 #>  [3719,]   74 #>  [3720,]   74 #>  [3721,]   74 #>  [3722,]   74 #>  [3723,]   74 #>  [3724,]   74 #>  [3725,]   74 #>  [3726,]   73 #>  [3727,]   74 #>  [3728,]   74 #>  [3729,]   74 #>  [3730,]   74 #>  [3731,]   74 #>  [3732,]   73 #>  [3733,]   74 #>  [3734,]   74 #>  [3735,]   74 #>  [3736,]   74 #>  [3737,]   74 #>  [3738,]   74 #>  [3739,]   74 #>  [3740,]   74 #>  [3741,]   74 #>  [3742,]   74 #>  [3743,]   74 #>  [3744,]   74 #>  [3745,]   74 #>  [3746,]   74 #>  [3747,]   74 #>  [3748,]   73 #>  [3749,]   74 #>  [3750,]   74 #>  [3751,]   73 #>  [3752,]   74 #>  [3753,]   74 #>  [3754,]   73 #>  [3755,]   74 #>  [3756,]   74 #>  [3757,]   74 #>  [3758,]   74 #>  [3759,]   74 #>  [3760,]   74 #>  [3761,]   74 #>  [3762,]   73 #>  [3763,]   74 #>  [3764,]   74 #>  [3765,]   74 #>  [3766,]   73 #>  [3767,]   74 #>  [3768,]   74 #>  [3769,]   73 #>  [3770,]   74 #>  [3771,]   74 #>  [3772,]   74 #>  [3773,]   74 #>  [3774,]   74 #>  [3775,]   74 #>  [3776,]   74 #>  [3777,]   74 #>  [3778,]   74 #>  [3779,]   74 #>  [3780,]   73 #>  [3781,]   73 #>  [3782,]   74 #>  [3783,]   74 #>  [3784,]   74 #>  [3785,]   74 #>  [3786,]   74 #>  [3787,]   74 #>  [3788,]   74 #>  [3789,]   73 #>  [3790,]   74 #>  [3791,]   74 #>  [3792,]   74 #>  [3793,]   74 #>  [3794,]   74 #>  [3795,]   74 #>  [3796,]   74 #>  [3797,]   74 #>  [3798,]   74 #>  [3799,]   74 #>  [3800,]   74 #>  [3801,]   75 #>  [3802,]   75 #>  [3803,]   75 #>  [3804,]   76 #>  [3805,]   75 #>  [3806,]   75 #>  [3807,]   76 #>  [3808,]   75 #>  [3809,]   76 #>  [3810,]   76 #>  [3811,]   75 #>  [3812,]   75 #>  [3813,]   75 #>  [3814,]   76 #>  [3815,]   75 #>  [3816,]   76 #>  [3817,]   75 #>  [3818,]   75 #>  [3819,]   75 #>  [3820,]   76 #>  [3821,]   75 #>  [3822,]   75 #>  [3823,]   75 #>  [3824,]   76 #>  [3825,]   76 #>  [3826,]   75 #>  [3827,]   75 #>  [3828,]   76 #>  [3829,]   75 #>  [3830,]   75 #>  [3831,]   75 #>  [3832,]   75 #>  [3833,]   75 #>  [3834,]   75 #>  [3835,]   75 #>  [3836,]   76 #>  [3837,]   75 #>  [3838,]   75 #>  [3839,]   76 #>  [3840,]   75 #>  [3841,]   75 #>  [3842,]   75 #>  [3843,]   75 #>  [3844,]   75 #>  [3845,]   75 #>  [3846,]   75 #>  [3847,]   75 #>  [3848,]   75 #>  [3849,]   75 #>  [3850,]   76 #>  [3851,]   75 #>  [3852,]   76 #>  [3853,]   75 #>  [3854,]   76 #>  [3855,]   75 #>  [3856,]   75 #>  [3857,]   76 #>  [3858,]   75 #>  [3859,]   76 #>  [3860,]   75 #>  [3861,]   75 #>  [3862,]   75 #>  [3863,]   75 #>  [3864,]   75 #>  [3865,]   75 #>  [3866,]   75 #>  [3867,]   76 #>  [3868,]   75 #>  [3869,]   75 #>  [3870,]   75 #>  [3871,]   75 #>  [3872,]   75 #>  [3873,]   76 #>  [3874,]   75 #>  [3875,]   75 #>  [3876,]   76 #>  [3877,]   75 #>  [3878,]   75 #>  [3879,]   75 #>  [3880,]   75 #>  [3881,]   75 #>  [3882,]   75 #>  [3883,]   75 #>  [3884,]   75 #>  [3885,]   75 #>  [3886,]   76 #>  [3887,]   75 #>  [3888,]   75 #>  [3889,]   75 #>  [3890,]   76 #>  [3891,]   76 #>  [3892,]   75 #>  [3893,]   75 #>  [3894,]   75 #>  [3895,]   75 #>  [3896,]   75 #>  [3897,]   75 #>  [3898,]   75 #>  [3899,]   75 #>  [3900,]   75 #>  [3901,]   77 #>  [3902,]   77 #>  [3903,]   77 #>  [3904,]   77 #>  [3905,]   77 #>  [3906,]   77 #>  [3907,]   77 #>  [3908,]   77 #>  [3909,]   77 #>  [3910,]   77 #>  [3911,]   77 #>  [3912,]   77 #>  [3913,]   77 #>  [3914,]   77 #>  [3915,]   77 #>  [3916,]   77 #>  [3917,]   77 #>  [3918,]   78 #>  [3919,]   77 #>  [3920,]   77 #>  [3921,]   77 #>  [3922,]   77 #>  [3923,]   77 #>  [3924,]   77 #>  [3925,]   77 #>  [3926,]   77 #>  [3927,]   77 #>  [3928,]   77 #>  [3929,]   77 #>  [3930,]   77 #>  [3931,]   77 #>  [3932,]   77 #>  [3933,]   77 #>  [3934,]   77 #>  [3935,]   77 #>  [3936,]   77 #>  [3937,]   77 #>  [3938,]   77 #>  [3939,]   77 #>  [3940,]   77 #>  [3941,]   77 #>  [3942,]   77 #>  [3943,]   77 #>  [3944,]   77 #>  [3945,]   77 #>  [3946,]   77 #>  [3947,]   77 #>  [3948,]   77 #>  [3949,]   77 #>  [3950,]   77 #>  [3951,]   78 #>  [3952,]   77 #>  [3953,]   78 #>  [3954,]   77 #>  [3955,]   77 #>  [3956,]   77 #>  [3957,]   77 #>  [3958,]   77 #>  [3959,]   77 #>  [3960,]   77 #>  [3961,]   77 #>  [3962,]   77 #>  [3963,]   77 #>  [3964,]   77 #>  [3965,]   77 #>  [3966,]   77 #>  [3967,]   77 #>  [3968,]   77 #>  [3969,]   77 #>  [3970,]   77 #>  [3971,]   77 #>  [3972,]   77 #>  [3973,]   77 #>  [3974,]   77 #>  [3975,]   77 #>  [3976,]   77 #>  [3977,]   77 #>  [3978,]   77 #>  [3979,]   77 #>  [3980,]   77 #>  [3981,]   77 #>  [3982,]   77 #>  [3983,]   77 #>  [3984,]   78 #>  [3985,]   77 #>  [3986,]   77 #>  [3987,]   77 #>  [3988,]   77 #>  [3989,]   77 #>  [3990,]   77 #>  [3991,]   77 #>  [3992,]   77 #>  [3993,]   77 #>  [3994,]   78 #>  [3995,]   77 #>  [3996,]   77 #>  [3997,]   77 #>  [3998,]   77 #>  [3999,]   77 #>  [4000,]   77 #>  [4001,]   79 #>  [4002,]   79 #>  [4003,]   79 #>  [4004,]   79 #>  [4005,]   79 #>  [4006,]   79 #>  [4007,]   79 #>  [4008,]   79 #>  [4009,]   79 #>  [4010,]   79 #>  [4011,]   79 #>  [4012,]   79 #>  [4013,]   79 #>  [4014,]   79 #>  [4015,]   79 #>  [4016,]   79 #>  [4017,]   79 #>  [4018,]   79 #>  [4019,]   79 #>  [4020,]   79 #>  [4021,]   79 #>  [4022,]   79 #>  [4023,]   79 #>  [4024,]   79 #>  [4025,]   79 #>  [4026,]   79 #>  [4027,]   79 #>  [4028,]   79 #>  [4029,]   79 #>  [4030,]   79 #>  [4031,]   79 #>  [4032,]   79 #>  [4033,]   79 #>  [4034,]   79 #>  [4035,]   79 #>  [4036,]   79 #>  [4037,]   79 #>  [4038,]   79 #>  [4039,]   79 #>  [4040,]   79 #>  [4041,]   79 #>  [4042,]   79 #>  [4043,]   79 #>  [4044,]   79 #>  [4045,]   79 #>  [4046,]   79 #>  [4047,]   79 #>  [4048,]   79 #>  [4049,]   79 #>  [4050,]   79 #>  [4051,]   79 #>  [4052,]   79 #>  [4053,]   79 #>  [4054,]   79 #>  [4055,]   79 #>  [4056,]   79 #>  [4057,]   79 #>  [4058,]   79 #>  [4059,]   79 #>  [4060,]   79 #>  [4061,]   79 #>  [4062,]   79 #>  [4063,]   79 #>  [4064,]   79 #>  [4065,]   79 #>  [4066,]   79 #>  [4067,]   79 #>  [4068,]   79 #>  [4069,]   79 #>  [4070,]   79 #>  [4071,]   79 #>  [4072,]   79 #>  [4073,]   79 #>  [4074,]   79 #>  [4075,]   79 #>  [4076,]   79 #>  [4077,]   79 #>  [4078,]   79 #>  [4079,]   79 #>  [4080,]   79 #>  [4081,]   79 #>  [4082,]   79 #>  [4083,]   79 #>  [4084,]   79 #>  [4085,]   79 #>  [4086,]   79 #>  [4087,]   79 #>  [4088,]   79 #>  [4089,]   79 #>  [4090,]   79 #>  [4091,]   79 #>  [4092,]   79 #>  [4093,]   79 #>  [4094,]   79 #>  [4095,]   79 #>  [4096,]   79 #>  [4097,]   79 #>  [4098,]   79 #>  [4099,]   79 #>  [4100,]   79 #>  [4101,]   80 #>  [4102,]   81 #>  [4103,]   80 #>  [4104,]   80 #>  [4105,]   81 #>  [4106,]   80 #>  [4107,]   81 #>  [4108,]   80 #>  [4109,]   81 #>  [4110,]   81 #>  [4111,]   80 #>  [4112,]   81 #>  [4113,]   81 #>  [4114,]   80 #>  [4115,]   80 #>  [4116,]   80 #>  [4117,]   81 #>  [4118,]   81 #>  [4119,]   80 #>  [4120,]   81 #>  [4121,]   81 #>  [4122,]   81 #>  [4123,]   81 #>  [4124,]   81 #>  [4125,]   81 #>  [4126,]   80 #>  [4127,]   81 #>  [4128,]   80 #>  [4129,]   81 #>  [4130,]   81 #>  [4131,]   81 #>  [4132,]   81 #>  [4133,]   81 #>  [4134,]   80 #>  [4135,]   80 #>  [4136,]   81 #>  [4137,]   80 #>  [4138,]   80 #>  [4139,]   81 #>  [4140,]   81 #>  [4141,]   81 #>  [4142,]   80 #>  [4143,]   81 #>  [4144,]   81 #>  [4145,]   80 #>  [4146,]   80 #>  [4147,]   81 #>  [4148,]   81 #>  [4149,]   80 #>  [4150,]   81 #>  [4151,]   81 #>  [4152,]   80 #>  [4153,]   81 #>  [4154,]   81 #>  [4155,]   80 #>  [4156,]   80 #>  [4157,]   80 #>  [4158,]   81 #>  [4159,]   80 #>  [4160,]   81 #>  [4161,]   81 #>  [4162,]   80 #>  [4163,]   81 #>  [4164,]   80 #>  [4165,]   80 #>  [4166,]   81 #>  [4167,]   80 #>  [4168,]   80 #>  [4169,]   80 #>  [4170,]   81 #>  [4171,]   81 #>  [4172,]   80 #>  [4173,]   80 #>  [4174,]   81 #>  [4175,]   81 #>  [4176,]   81 #>  [4177,]   80 #>  [4178,]   81 #>  [4179,]   80 #>  [4180,]   81 #>  [4181,]   81 #>  [4182,]   80 #>  [4183,]   81 #>  [4184,]   81 #>  [4185,]   80 #>  [4186,]   81 #>  [4187,]   81 #>  [4188,]   81 #>  [4189,]   80 #>  [4190,]   81 #>  [4191,]   80 #>  [4192,]   81 #>  [4193,]   81 #>  [4194,]   80 #>  [4195,]   81 #>  [4196,]   80 #>  [4197,]   80 #>  [4198,]   80 #>  [4199,]   81 #>  [4200,]   80 #>  [4201,]   82 #>  [4202,]   83 #>  [4203,]   82 #>  [4204,]   82 #>  [4205,]   83 #>  [4206,]   82 #>  [4207,]   83 #>  [4208,]   82 #>  [4209,]   83 #>  [4210,]   83 #>  [4211,]   82 #>  [4212,]   83 #>  [4213,]   83 #>  [4214,]   82 #>  [4215,]   83 #>  [4216,]   82 #>  [4217,]   83 #>  [4218,]   83 #>  [4219,]   82 #>  [4220,]   83 #>  [4221,]   83 #>  [4222,]   83 #>  [4223,]   83 #>  [4224,]   83 #>  [4225,]   83 #>  [4226,]   82 #>  [4227,]   83 #>  [4228,]   82 #>  [4229,]   83 #>  [4230,]   83 #>  [4231,]   83 #>  [4232,]   83 #>  [4233,]   83 #>  [4234,]   82 #>  [4235,]   82 #>  [4236,]   83 #>  [4237,]   82 #>  [4238,]   82 #>  [4239,]   83 #>  [4240,]   83 #>  [4241,]   83 #>  [4242,]   82 #>  [4243,]   83 #>  [4244,]   83 #>  [4245,]   82 #>  [4246,]   83 #>  [4247,]   83 #>  [4248,]   83 #>  [4249,]   82 #>  [4250,]   83 #>  [4251,]   83 #>  [4252,]   82 #>  [4253,]   83 #>  [4254,]   83 #>  [4255,]   82 #>  [4256,]   82 #>  [4257,]   82 #>  [4258,]   83 #>  [4259,]   82 #>  [4260,]   83 #>  [4261,]   83 #>  [4262,]   82 #>  [4263,]   83 #>  [4264,]   82 #>  [4265,]   82 #>  [4266,]   83 #>  [4267,]   83 #>  [4268,]   82 #>  [4269,]   82 #>  [4270,]   83 #>  [4271,]   83 #>  [4272,]   82 #>  [4273,]   82 #>  [4274,]   83 #>  [4275,]   83 #>  [4276,]   83 #>  [4277,]   82 #>  [4278,]   83 #>  [4279,]   82 #>  [4280,]   83 #>  [4281,]   83 #>  [4282,]   82 #>  [4283,]   83 #>  [4284,]   83 #>  [4285,]   83 #>  [4286,]   83 #>  [4287,]   83 #>  [4288,]   83 #>  [4289,]   82 #>  [4290,]   83 #>  [4291,]   82 #>  [4292,]   83 #>  [4293,]   83 #>  [4294,]   82 #>  [4295,]   83 #>  [4296,]   82 #>  [4297,]   82 #>  [4298,]   83 #>  [4299,]   83 #>  [4300,]   82 #>  [4301,]   85 #>  [4302,]   85 #>  [4303,]   84 #>  [4304,]   84 #>  [4305,]   85 #>  [4306,]   85 #>  [4307,]   84 #>  [4308,]   84 #>  [4309,]   85 #>  [4310,]   85 #>  [4311,]   85 #>  [4312,]   84 #>  [4313,]   85 #>  [4314,]   85 #>  [4315,]   85 #>  [4316,]   85 #>  [4317,]   85 #>  [4318,]   85 #>  [4319,]   85 #>  [4320,]   85 #>  [4321,]   85 #>  [4322,]   85 #>  [4323,]   84 #>  [4324,]   85 #>  [4325,]   84 #>  [4326,]   85 #>  [4327,]   85 #>  [4328,]   85 #>  [4329,]   85 #>  [4330,]   85 #>  [4331,]   84 #>  [4332,]   84 #>  [4333,]   85 #>  [4334,]   85 #>  [4335,]   85 #>  [4336,]   85 #>  [4337,]   84 #>  [4338,]   85 #>  [4339,]   85 #>  [4340,]   84 #>  [4341,]   85 #>  [4342,]   85 #>  [4343,]   85 #>  [4344,]   85 #>  [4345,]   85 #>  [4346,]   84 #>  [4347,]   84 #>  [4348,]   85 #>  [4349,]   85 #>  [4350,]   85 #>  [4351,]   85 #>  [4352,]   84 #>  [4353,]   85 #>  [4354,]   85 #>  [4355,]   84 #>  [4356,]   85 #>  [4357,]   84 #>  [4358,]   85 #>  [4359,]   84 #>  [4360,]   84 #>  [4361,]   85 #>  [4362,]   85 #>  [4363,]   85 #>  [4364,]   85 #>  [4365,]   85 #>  [4366,]   85 #>  [4367,]   85 #>  [4368,]   84 #>  [4369,]   85 #>  [4370,]   85 #>  [4371,]   85 #>  [4372,]   84 #>  [4373,]   85 #>  [4374,]   84 #>  [4375,]   85 #>  [4376,]   84 #>  [4377,]   85 #>  [4378,]   85 #>  [4379,]   85 #>  [4380,]   84 #>  [4381,]   85 #>  [4382,]   85 #>  [4383,]   85 #>  [4384,]   85 #>  [4385,]   85 #>  [4386,]   84 #>  [4387,]   85 #>  [4388,]   85 #>  [4389,]   85 #>  [4390,]   85 #>  [4391,]   85 #>  [4392,]   84 #>  [4393,]   85 #>  [4394,]   85 #>  [4395,]   85 #>  [4396,]   84 #>  [4397,]   84 #>  [4398,]   84 #>  [4399,]   85 #>  [4400,]   85 #>  [4401,]   86 #>  [4402,]   87 #>  [4403,]   87 #>  [4404,]   86 #>  [4405,]   86 #>  [4406,]   87 #>  [4407,]   87 #>  [4408,]   86 #>  [4409,]   86 #>  [4410,]   87 #>  [4411,]   86 #>  [4412,]   87 #>  [4413,]   86 #>  [4414,]   86 #>  [4415,]   86 #>  [4416,]   86 #>  [4417,]   86 #>  [4418,]   87 #>  [4419,]   87 #>  [4420,]   87 #>  [4421,]   86 #>  [4422,]   86 #>  [4423,]   87 #>  [4424,]   86 #>  [4425,]   87 #>  [4426,]   86 #>  [4427,]   86 #>  [4428,]   87 #>  [4429,]   87 #>  [4430,]   86 #>  [4431,]   87 #>  [4432,]   87 #>  [4433,]   87 #>  [4434,]   87 #>  [4435,]   86 #>  [4436,]   86 #>  [4437,]   86 #>  [4438,]   86 #>  [4439,]   87 #>  [4440,]   87 #>  [4441,]   86 #>  [4442,]   87 #>  [4443,]   86 #>  [4444,]   86 #>  [4445,]   86 #>  [4446,]   86 #>  [4447,]   87 #>  [4448,]   87 #>  [4449,]   86 #>  [4450,]   87 #>  [4451,]   86 #>  [4452,]   86 #>  [4453,]   87 #>  [4454,]   86 #>  [4455,]   86 #>  [4456,]   87 #>  [4457,]   87 #>  [4458,]   86 #>  [4459,]   86 #>  [4460,]   87 #>  [4461,]   87 #>  [4462,]   86 #>  [4463,]   87 #>  [4464,]   87 #>  [4465,]   87 #>  [4466,]   86 #>  [4467,]   86 #>  [4468,]   86 #>  [4469,]   86 #>  [4470,]   87 #>  [4471,]   87 #>  [4472,]   86 #>  [4473,]   87 #>  [4474,]   86 #>  [4475,]   87 #>  [4476,]   86 #>  [4477,]   87 #>  [4478,]   87 #>  [4479,]   86 #>  [4480,]   86 #>  [4481,]   86 #>  [4482,]   86 #>  [4483,]   86 #>  [4484,]   87 #>  [4485,]   86 #>  [4486,]   87 #>  [4487,]   86 #>  [4488,]   86 #>  [4489,]   86 #>  [4490,]   86 #>  [4491,]   86 #>  [4492,]   86 #>  [4493,]   87 #>  [4494,]   87 #>  [4495,]   86 #>  [4496,]   86 #>  [4497,]   87 #>  [4498,]   87 #>  [4499,]   86 #>  [4500,]   87 #>  [4501,]   89 #>  [4502,]   89 #>  [4503,]   88 #>  [4504,]   88 #>  [4505,]   89 #>  [4506,]   89 #>  [4507,]   88 #>  [4508,]   88 #>  [4509,]   89 #>  [4510,]   89 #>  [4511,]   89 #>  [4512,]   88 #>  [4513,]   89 #>  [4514,]   89 #>  [4515,]   89 #>  [4516,]   89 #>  [4517,]   89 #>  [4518,]   89 #>  [4519,]   89 #>  [4520,]   89 #>  [4521,]   89 #>  [4522,]   89 #>  [4523,]   89 #>  [4524,]   89 #>  [4525,]   88 #>  [4526,]   89 #>  [4527,]   89 #>  [4528,]   89 #>  [4529,]   89 #>  [4530,]   89 #>  [4531,]   88 #>  [4532,]   89 #>  [4533,]   89 #>  [4534,]   89 #>  [4535,]   89 #>  [4536,]   89 #>  [4537,]   89 #>  [4538,]   89 #>  [4539,]   89 #>  [4540,]   89 #>  [4541,]   89 #>  [4542,]   89 #>  [4543,]   89 #>  [4544,]   89 #>  [4545,]   89 #>  [4546,]   89 #>  [4547,]   89 #>  [4548,]   89 #>  [4549,]   89 #>  [4550,]   89 #>  [4551,]   89 #>  [4552,]   88 #>  [4553,]   89 #>  [4554,]   89 #>  [4555,]   89 #>  [4556,]   89 #>  [4557,]   88 #>  [4558,]   89 #>  [4559,]   88 #>  [4560,]   88 #>  [4561,]   89 #>  [4562,]   89 #>  [4563,]   89 #>  [4564,]   89 #>  [4565,]   89 #>  [4566,]   89 #>  [4567,]   89 #>  [4568,]   88 #>  [4569,]   89 #>  [4570,]   89 #>  [4571,]   89 #>  [4572,]   89 #>  [4573,]   89 #>  [4574,]   89 #>  [4575,]   89 #>  [4576,]   89 #>  [4577,]   89 #>  [4578,]   89 #>  [4579,]   89 #>  [4580,]   89 #>  [4581,]   89 #>  [4582,]   89 #>  [4583,]   89 #>  [4584,]   89 #>  [4585,]   89 #>  [4586,]   88 #>  [4587,]   89 #>  [4588,]   89 #>  [4589,]   89 #>  [4590,]   89 #>  [4591,]   89 #>  [4592,]   89 #>  [4593,]   89 #>  [4594,]   89 #>  [4595,]   89 #>  [4596,]   88 #>  [4597,]   88 #>  [4598,]   89 #>  [4599,]   89 #>  [4600,]   89 #>  [4601,]   90 #>  [4602,]   90 #>  [4603,]   90 #>  [4604,]   91 #>  [4605,]   90 #>  [4606,]   91 #>  [4607,]   90 #>  [4608,]   90 #>  [4609,]   91 #>  [4610,]   91 #>  [4611,]   91 #>  [4612,]   91 #>  [4613,]   90 #>  [4614,]   91 #>  [4615,]   91 #>  [4616,]   90 #>  [4617,]   90 #>  [4618,]   91 #>  [4619,]   91 #>  [4620,]   90 #>  [4621,]   91 #>  [4622,]   90 #>  [4623,]   91 #>  [4624,]   90 #>  [4625,]   90 #>  [4626,]   91 #>  [4627,]   91 #>  [4628,]   90 #>  [4629,]   90 #>  [4630,]   91 #>  [4631,]   91 #>  [4632,]   91 #>  [4633,]   91 #>  [4634,]   91 #>  [4635,]   90 #>  [4636,]   91 #>  [4637,]   90 #>  [4638,]   91 #>  [4639,]   90 #>  [4640,]   90 #>  [4641,]   91 #>  [4642,]   91 #>  [4643,]   90 #>  [4644,]   90 #>  [4645,]   90 #>  [4646,]   90 #>  [4647,]   90 #>  [4648,]   91 #>  [4649,]   90 #>  [4650,]   90 #>  [4651,]   90 #>  [4652,]   91 #>  [4653,]   90 #>  [4654,]   90 #>  [4655,]   90 #>  [4656,]   90 #>  [4657,]   90 #>  [4658,]   91 #>  [4659,]   90 #>  [4660,]   91 #>  [4661,]   91 #>  [4662,]   91 #>  [4663,]   90 #>  [4664,]   91 #>  [4665,]   90 #>  [4666,]   90 #>  [4667,]   91 #>  [4668,]   91 #>  [4669,]   91 #>  [4670,]   90 #>  [4671,]   90 #>  [4672,]   90 #>  [4673,]   91 #>  [4674,]   91 #>  [4675,]   91 #>  [4676,]   90 #>  [4677,]   90 #>  [4678,]   90 #>  [4679,]   90 #>  [4680,]   91 #>  [4681,]   90 #>  [4682,]   91 #>  [4683,]   90 #>  [4684,]   90 #>  [4685,]   91 #>  [4686,]   90 #>  [4687,]   90 #>  [4688,]   90 #>  [4689,]   90 #>  [4690,]   90 #>  [4691,]   90 #>  [4692,]   91 #>  [4693,]   91 #>  [4694,]   90 #>  [4695,]   90 #>  [4696,]   91 #>  [4697,]   91 #>  [4698,]   90 #>  [4699,]   91 #>  [4700,]   90 #>  [4701,]   92 #>  [4702,]   92 #>  [4703,]   92 #>  [4704,]   92 #>  [4705,]   93 #>  [4706,]   92 #>  [4707,]   92 #>  [4708,]   92 #>  [4709,]   92 #>  [4710,]   92 #>  [4711,]   92 #>  [4712,]   92 #>  [4713,]   92 #>  [4714,]   92 #>  [4715,]   92 #>  [4716,]   92 #>  [4717,]   92 #>  [4718,]   93 #>  [4719,]   92 #>  [4720,]   92 #>  [4721,]   92 #>  [4722,]   92 #>  [4723,]   92 #>  [4724,]   92 #>  [4725,]   92 #>  [4726,]   92 #>  [4727,]   92 #>  [4728,]   92 #>  [4729,]   92 #>  [4730,]   92 #>  [4731,]   92 #>  [4732,]   92 #>  [4733,]   92 #>  [4734,]   92 #>  [4735,]   92 #>  [4736,]   92 #>  [4737,]   92 #>  [4738,]   92 #>  [4739,]   92 #>  [4740,]   92 #>  [4741,]   92 #>  [4742,]   92 #>  [4743,]   92 #>  [4744,]   92 #>  [4745,]   92 #>  [4746,]   92 #>  [4747,]   92 #>  [4748,]   92 #>  [4749,]   92 #>  [4750,]   92 #>  [4751,]   92 #>  [4752,]   92 #>  [4753,]   92 #>  [4754,]   92 #>  [4755,]   92 #>  [4756,]   92 #>  [4757,]   92 #>  [4758,]   92 #>  [4759,]   92 #>  [4760,]   92 #>  [4761,]   92 #>  [4762,]   92 #>  [4763,]   92 #>  [4764,]   92 #>  [4765,]   92 #>  [4766,]   92 #>  [4767,]   92 #>  [4768,]   92 #>  [4769,]   92 #>  [4770,]   92 #>  [4771,]   93 #>  [4772,]   92 #>  [4773,]   92 #>  [4774,]   92 #>  [4775,]   93 #>  [4776,]   92 #>  [4777,]   92 #>  [4778,]   92 #>  [4779,]   92 #>  [4780,]   92 #>  [4781,]   92 #>  [4782,]   92 #>  [4783,]   92 #>  [4784,]   92 #>  [4785,]   92 #>  [4786,]   92 #>  [4787,]   92 #>  [4788,]   92 #>  [4789,]   92 #>  [4790,]   92 #>  [4791,]   92 #>  [4792,]   92 #>  [4793,]   92 #>  [4794,]   92 #>  [4795,]   93 #>  [4796,]   92 #>  [4797,]   92 #>  [4798,]   92 #>  [4799,]   92 #>  [4800,]   93 #>  [4801,]   94 #>  [4802,]   94 #>  [4803,]   94 #>  [4804,]   95 #>  [4805,]   94 #>  [4806,]   94 #>  [4807,]   95 #>  [4808,]   94 #>  [4809,]   94 #>  [4810,]   95 #>  [4811,]   94 #>  [4812,]   94 #>  [4813,]   94 #>  [4814,]   94 #>  [4815,]   95 #>  [4816,]   95 #>  [4817,]   94 #>  [4818,]   95 #>  [4819,]   94 #>  [4820,]   94 #>  [4821,]   95 #>  [4822,]   94 #>  [4823,]   95 #>  [4824,]   94 #>  [4825,]   95 #>  [4826,]   94 #>  [4827,]   95 #>  [4828,]   94 #>  [4829,]   94 #>  [4830,]   94 #>  [4831,]   94 #>  [4832,]   94 #>  [4833,]   94 #>  [4834,]   94 #>  [4835,]   94 #>  [4836,]   94 #>  [4837,]   94 #>  [4838,]   94 #>  [4839,]   95 #>  [4840,]   94 #>  [4841,]   94 #>  [4842,]   94 #>  [4843,]   95 #>  [4844,]   94 #>  [4845,]   95 #>  [4846,]   94 #>  [4847,]   94 #>  [4848,]   94 #>  [4849,]   94 #>  [4850,]   94 #>  [4851,]   94 #>  [4852,]   94 #>  [4853,]   95 #>  [4854,]   94 #>  [4855,]   94 #>  [4856,]   94 #>  [4857,]   94 #>  [4858,]   94 #>  [4859,]   94 #>  [4860,]   94 #>  [4861,]   95 #>  [4862,]   94 #>  [4863,]   94 #>  [4864,]   94 #>  [4865,]   94 #>  [4866,]   94 #>  [4867,]   94 #>  [4868,]   94 #>  [4869,]   94 #>  [4870,]   94 #>  [4871,]   94 #>  [4872,]   95 #>  [4873,]   95 #>  [4874,]   95 #>  [4875,]   95 #>  [4876,]   95 #>  [4877,]   95 #>  [4878,]   94 #>  [4879,]   94 #>  [4880,]   94 #>  [4881,]   94 #>  [4882,]   94 #>  [4883,]   94 #>  [4884,]   95 #>  [4885,]   94 #>  [4886,]   94 #>  [4887,]   94 #>  [4888,]   94 #>  [4889,]   94 #>  [4890,]   94 #>  [4891,]   94 #>  [4892,]   94 #>  [4893,]   94 #>  [4894,]   95 #>  [4895,]   95 #>  [4896,]   94 #>  [4897,]   94 #>  [4898,]   94 #>  [4899,]   94 #>  [4900,]   95 #>  [4901,]   97 #>  [4902,]   97 #>  [4903,]   96 #>  [4904,]   96 #>  [4905,]   96 #>  [4906,]   96 #>  [4907,]   96 #>  [4908,]   97 #>  [4909,]   96 #>  [4910,]   96 #>  [4911,]   96 #>  [4912,]   97 #>  [4913,]   97 #>  [4914,]   96 #>  [4915,]   97 #>  [4916,]   97 #>  [4917,]   96 #>  [4918,]   96 #>  [4919,]   97 #>  [4920,]   97 #>  [4921,]   96 #>  [4922,]   97 #>  [4923,]   97 #>  [4924,]   96 #>  [4925,]   96 #>  [4926,]   97 #>  [4927,]   97 #>  [4928,]   96 #>  [4929,]   97 #>  [4930,]   97 #>  [4931,]   96 #>  [4932,]   96 #>  [4933,]   97 #>  [4934,]   96 #>  [4935,]   96 #>  [4936,]   97 #>  [4937,]   97 #>  [4938,]   97 #>  [4939,]   96 #>  [4940,]   96 #>  [4941,]   97 #>  [4942,]   96 #>  [4943,]   97 #>  [4944,]   97 #>  [4945,]   97 #>  [4946,]   97 #>  [4947,]   96 #>  [4948,]   96 #>  [4949,]   96 #>  [4950,]   97 #>  [4951,]   97 #>  [4952,]   96 #>  [4953,]   97 #>  [4954,]   96 #>  [4955,]   97 #>  [4956,]   97 #>  [4957,]   96 #>  [4958,]   97 #>  [4959,]   97 #>  [4960,]   97 #>  [4961,]   97 #>  [4962,]   96 #>  [4963,]   97 #>  [4964,]   97 #>  [4965,]   96 #>  [4966,]   97 #>  [4967,]   96 #>  [4968,]   97 #>  [4969,]   97 #>  [4970,]   96 #>  [4971,]   97 #>  [4972,]   96 #>  [4973,]   96 #>  [4974,]   96 #>  [4975,]   97 #>  [4976,]   96 #>  [4977,]   97 #>  [4978,]   97 #>  [4979,]   96 #>  [4980,]   97 #>  [4981,]   97 #>  [4982,]   96 #>  [4983,]   97 #>  [4984,]   97 #>  [4985,]   97 #>  [4986,]   96 #>  [4987,]   97 #>  [4988,]   96 #>  [4989,]   96 #>  [4990,]   97 #>  [4991,]   96 #>  [4992,]   96 #>  [4993,]   97 #>  [4994,]   96 #>  [4995,]   97 #>  [4996,]   97 #>  [4997,]   97 #>  [4998,]   96 #>  [4999,]   96 #>  [5000,]   97 #>  [5001,]   98 #>  [5002,]   99 #>  [5003,]   98 #>  [5004,]   98 #>  [5005,]   98 #>  [5006,]   98 #>  [5007,]   98 #>  [5008,]   98 #>  [5009,]   98 #>  [5010,]   99 #>  [5011,]   98 #>  [5012,]   99 #>  [5013,]   98 #>  [5014,]   98 #>  [5015,]   98 #>  [5016,]   98 #>  [5017,]   98 #>  [5018,]   98 #>  [5019,]   98 #>  [5020,]   98 #>  [5021,]   99 #>  [5022,]   98 #>  [5023,]   98 #>  [5024,]   98 #>  [5025,]   98 #>  [5026,]   98 #>  [5027,]   98 #>  [5028,]   98 #>  [5029,]   98 #>  [5030,]   98 #>  [5031,]   98 #>  [5032,]   98 #>  [5033,]   98 #>  [5034,]   98 #>  [5035,]   98 #>  [5036,]   98 #>  [5037,]   98 #>  [5038,]   98 #>  [5039,]   98 #>  [5040,]   98 #>  [5041,]   98 #>  [5042,]   98 #>  [5043,]   98 #>  [5044,]   98 #>  [5045,]   98 #>  [5046,]   98 #>  [5047,]   98 #>  [5048,]   98 #>  [5049,]   98 #>  [5050,]   98 #>  [5051,]   98 #>  [5052,]   98 #>  [5053,]   98 #>  [5054,]   98 #>  [5055,]   98 #>  [5056,]   98 #>  [5057,]   98 #>  [5058,]   98 #>  [5059,]   98 #>  [5060,]   98 #>  [5061,]   98 #>  [5062,]   98 #>  [5063,]   98 #>  [5064,]   98 #>  [5065,]   98 #>  [5066,]   98 #>  [5067,]   98 #>  [5068,]   98 #>  [5069,]   98 #>  [5070,]   98 #>  [5071,]   98 #>  [5072,]   98 #>  [5073,]   98 #>  [5074,]   98 #>  [5075,]   98 #>  [5076,]   98 #>  [5077,]   98 #>  [5078,]   98 #>  [5079,]   98 #>  [5080,]   98 #>  [5081,]   98 #>  [5082,]   98 #>  [5083,]   98 #>  [5084,]   98 #>  [5085,]   98 #>  [5086,]   99 #>  [5087,]   98 #>  [5088,]   98 #>  [5089,]   98 #>  [5090,]   98 #>  [5091,]   98 #>  [5092,]   98 #>  [5093,]   98 #>  [5094,]   98 #>  [5095,]   98 #>  [5096,]   98 #>  [5097,]   98 #>  [5098,]   98 #>  [5099,]   98 #>  [5100,]   98 #>  [5101,]  100 #>  [5102,]  100 #>  [5103,]  100 #>  [5104,]  100 #>  [5105,]  100 #>  [5106,]  100 #>  [5107,]  100 #>  [5108,]  100 #>  [5109,]  100 #>  [5110,]  100 #>  [5111,]  100 #>  [5112,]  100 #>  [5113,]  100 #>  [5114,]  100 #>  [5115,]  100 #>  [5116,]  100 #>  [5117,]  100 #>  [5118,]  100 #>  [5119,]  100 #>  [5120,]  100 #>  [5121,]  100 #>  [5122,]  100 #>  [5123,]  100 #>  [5124,]  100 #>  [5125,]  100 #>  [5126,]  100 #>  [5127,]  100 #>  [5128,]  100 #>  [5129,]  100 #>  [5130,]  100 #>  [5131,]  100 #>  [5132,]  100 #>  [5133,]  100 #>  [5134,]  100 #>  [5135,]  100 #>  [5136,]  100 #>  [5137,]  100 #>  [5138,]  100 #>  [5139,]  100 #>  [5140,]  100 #>  [5141,]  100 #>  [5142,]  100 #>  [5143,]  100 #>  [5144,]  100 #>  [5145,]  100 #>  [5146,]  100 #>  [5147,]  100 #>  [5148,]  100 #>  [5149,]  100 #>  [5150,]  100 #>  [5151,]  100 #>  [5152,]  100 #>  [5153,]  100 #>  [5154,]  100 #>  [5155,]  100 #>  [5156,]  100 #>  [5157,]  100 #>  [5158,]  100 #>  [5159,]  100 #>  [5160,]  100 #>  [5161,]  100 #>  [5162,]  100 #>  [5163,]  100 #>  [5164,]  100 #>  [5165,]  100 #>  [5166,]  100 #>  [5167,]  100 #>  [5168,]  100 #>  [5169,]  100 #>  [5170,]  100 #>  [5171,]  100 #>  [5172,]  100 #>  [5173,]  100 #>  [5174,]  100 #>  [5175,]  100 #>  [5176,]  100 #>  [5177,]  100 #>  [5178,]  100 #>  [5179,]  100 #>  [5180,]  100 #>  [5181,]  100 #>  [5182,]  100 #>  [5183,]  100 #>  [5184,]  100 #>  [5185,]  100 #>  [5186,]  100 #>  [5187,]  100 #>  [5188,]  100 #>  [5189,]  100 #>  [5190,]  100 #>  [5191,]  100 #>  [5192,]  100 #>  [5193,]  100 #>  [5194,]  100 #>  [5195,]  100 #>  [5196,]  100 #>  [5197,]  100 #>  [5198,]  100 #>  [5199,]  100 #>  [5200,]  100 #>  [5201,]  102 #>  [5202,]  102 #>  [5203,]  102 #>  [5204,]  102 #>  [5205,]  102 #>  [5206,]  102 #>  [5207,]  101 #>  [5208,]  102 #>  [5209,]  102 #>  [5210,]  102 #>  [5211,]  102 #>  [5212,]  102 #>  [5213,]  102 #>  [5214,]  102 #>  [5215,]  102 #>  [5216,]  102 #>  [5217,]  102 #>  [5218,]  102 #>  [5219,]  102 #>  [5220,]  102 #>  [5221,]  101 #>  [5222,]  102 #>  [5223,]  102 #>  [5224,]  102 #>  [5225,]  102 #>  [5226,]  102 #>  [5227,]  102 #>  [5228,]  102 #>  [5229,]  102 #>  [5230,]  102 #>  [5231,]  102 #>  [5232,]  102 #>  [5233,]  102 #>  [5234,]  102 #>  [5235,]  102 #>  [5236,]  102 #>  [5237,]  102 #>  [5238,]  102 #>  [5239,]  101 #>  [5240,]  102 #>  [5241,]  102 #>  [5242,]  102 #>  [5243,]  102 #>  [5244,]  102 #>  [5245,]  102 #>  [5246,]  102 #>  [5247,]  102 #>  [5248,]  102 #>  [5249,]  101 #>  [5250,]  102 #>  [5251,]  102 #>  [5252,]  102 #>  [5253,]  102 #>  [5254,]  102 #>  [5255,]  102 #>  [5256,]  102 #>  [5257,]  102 #>  [5258,]  102 #>  [5259,]  102 #>  [5260,]  102 #>  [5261,]  102 #>  [5262,]  101 #>  [5263,]  102 #>  [5264,]  102 #>  [5265,]  102 #>  [5266,]  102 #>  [5267,]  102 #>  [5268,]  102 #>  [5269,]  102 #>  [5270,]  101 #>  [5271,]  102 #>  [5272,]  102 #>  [5273,]  102 #>  [5274,]  102 #>  [5275,]  102 #>  [5276,]  102 #>  [5277,]  102 #>  [5278,]  102 #>  [5279,]  102 #>  [5280,]  101 #>  [5281,]  102 #>  [5282,]  102 #>  [5283,]  102 #>  [5284,]  102 #>  [5285,]  102 #>  [5286,]  102 #>  [5287,]  102 #>  [5288,]  102 #>  [5289,]  102 #>  [5290,]  102 #>  [5291,]  102 #>  [5292,]  102 #>  [5293,]  102 #>  [5294,]  102 #>  [5295,]  101 #>  [5296,]  102 #>  [5297,]  102 #>  [5298,]  102 #>  [5299,]  102 #>  [5300,]  102 #>  [5301,]  103 #>  [5302,]  103 #>  [5303,]  103 #>  [5304,]  104 #>  [5305,]  103 #>  [5306,]  103 #>  [5307,]  103 #>  [5308,]  103 #>  [5309,]  103 #>  [5310,]  103 #>  [5311,]  103 #>  [5312,]  104 #>  [5313,]  103 #>  [5314,]  104 #>  [5315,]  104 #>  [5316,]  103 #>  [5317,]  103 #>  [5318,]  103 #>  [5319,]  104 #>  [5320,]  103 #>  [5321,]  104 #>  [5322,]  103 #>  [5323,]  103 #>  [5324,]  103 #>  [5325,]  103 #>  [5326,]  103 #>  [5327,]  104 #>  [5328,]  103 #>  [5329,]  103 #>  [5330,]  103 #>  [5331,]  103 #>  [5332,]  103 #>  [5333,]  103 #>  [5334,]  103 #>  [5335,]  103 #>  [5336,]  103 #>  [5337,]  103 #>  [5338,]  104 #>  [5339,]  103 #>  [5340,]  103 #>  [5341,]  104 #>  [5342,]  104 #>  [5343,]  103 #>  [5344,]  103 #>  [5345,]  103 #>  [5346,]  103 #>  [5347,]  103 #>  [5348,]  104 #>  [5349,]  103 #>  [5350,]  103 #>  [5351,]  103 #>  [5352,]  103 #>  [5353,]  103 #>  [5354,]  103 #>  [5355,]  103 #>  [5356,]  103 #>  [5357,]  103 #>  [5358,]  103 #>  [5359,]  103 #>  [5360,]  103 #>  [5361,]  104 #>  [5362,]  103 #>  [5363,]  103 #>  [5364,]  103 #>  [5365,]  103 #>  [5366,]  103 #>  [5367,]  103 #>  [5368,]  103 #>  [5369,]  104 #>  [5370,]  103 #>  [5371,]  103 #>  [5372,]  103 #>  [5373,]  103 #>  [5374,]  104 #>  [5375,]  104 #>  [5376,]  103 #>  [5377,]  103 #>  [5378,]  103 #>  [5379,]  103 #>  [5380,]  103 #>  [5381,]  103 #>  [5382,]  104 #>  [5383,]  103 #>  [5384,]  103 #>  [5385,]  103 #>  [5386,]  103 #>  [5387,]  103 #>  [5388,]  103 #>  [5389,]  103 #>  [5390,]  103 #>  [5391,]  103 #>  [5392,]  104 #>  [5393,]  104 #>  [5394,]  103 #>  [5395,]  103 #>  [5396,]  104 #>  [5397,]  104 #>  [5398,]  103 #>  [5399,]  103 #>  [5400,]  103 #>  [5401,]  106 #>  [5402,]  106 #>  [5403,]  105 #>  [5404,]  106 #>  [5405,]  106 #>  [5406,]  106 #>  [5407,]  106 #>  [5408,]  106 #>  [5409,]  106 #>  [5410,]  105 #>  [5411,]  105 #>  [5412,]  106 #>  [5413,]  106 #>  [5414,]  105 #>  [5415,]  106 #>  [5416,]  106 #>  [5417,]  106 #>  [5418,]  106 #>  [5419,]  106 #>  [5420,]  106 #>  [5421,]  105 #>  [5422,]  106 #>  [5423,]  106 #>  [5424,]  106 #>  [5425,]  106 #>  [5426,]  106 #>  [5427,]  106 #>  [5428,]  105 #>  [5429,]  106 #>  [5430,]  106 #>  [5431,]  105 #>  [5432,]  105 #>  [5433,]  106 #>  [5434,]  105 #>  [5435,]  105 #>  [5436,]  106 #>  [5437,]  106 #>  [5438,]  106 #>  [5439,]  106 #>  [5440,]  105 #>  [5441,]  106 #>  [5442,]  106 #>  [5443,]  106 #>  [5444,]  106 #>  [5445,]  106 #>  [5446,]  106 #>  [5447,]  106 #>  [5448,]  105 #>  [5449,]  106 #>  [5450,]  106 #>  [5451,]  106 #>  [5452,]  106 #>  [5453,]  106 #>  [5454,]  106 #>  [5455,]  106 #>  [5456,]  106 #>  [5457,]  106 #>  [5458,]  106 #>  [5459,]  106 #>  [5460,]  106 #>  [5461,]  106 #>  [5462,]  106 #>  [5463,]  106 #>  [5464,]  106 #>  [5465,]  106 #>  [5466,]  106 #>  [5467,]  106 #>  [5468,]  106 #>  [5469,]  106 #>  [5470,]  105 #>  [5471,]  106 #>  [5472,]  106 #>  [5473,]  106 #>  [5474,]  105 #>  [5475,]  106 #>  [5476,]  106 #>  [5477,]  106 #>  [5478,]  106 #>  [5479,]  106 #>  [5480,]  106 #>  [5481,]  106 #>  [5482,]  105 #>  [5483,]  106 #>  [5484,]  106 #>  [5485,]  106 #>  [5486,]  106 #>  [5487,]  106 #>  [5488,]  106 #>  [5489,]  106 #>  [5490,]  106 #>  [5491,]  106 #>  [5492,]  106 #>  [5493,]  106 #>  [5494,]  106 #>  [5495,]  106 #>  [5496,]  106 #>  [5497,]  106 #>  [5498,]  105 #>  [5499,]  106 #>  [5500,]  106 #>  [5501,]  107 #>  [5502,]  107 #>  [5503,]  107 #>  [5504,]  107 #>  [5505,]  108 #>  [5506,]  107 #>  [5507,]  107 #>  [5508,]  107 #>  [5509,]  107 #>  [5510,]  107 #>  [5511,]  107 #>  [5512,]  107 #>  [5513,]  107 #>  [5514,]  107 #>  [5515,]  107 #>  [5516,]  107 #>  [5517,]  107 #>  [5518,]  108 #>  [5519,]  107 #>  [5520,]  107 #>  [5521,]  107 #>  [5522,]  107 #>  [5523,]  107 #>  [5524,]  107 #>  [5525,]  107 #>  [5526,]  107 #>  [5527,]  107 #>  [5528,]  107 #>  [5529,]  107 #>  [5530,]  107 #>  [5531,]  107 #>  [5532,]  107 #>  [5533,]  107 #>  [5534,]  107 #>  [5535,]  107 #>  [5536,]  107 #>  [5537,]  107 #>  [5538,]  107 #>  [5539,]  107 #>  [5540,]  107 #>  [5541,]  107 #>  [5542,]  107 #>  [5543,]  107 #>  [5544,]  107 #>  [5545,]  107 #>  [5546,]  107 #>  [5547,]  107 #>  [5548,]  107 #>  [5549,]  107 #>  [5550,]  107 #>  [5551,]  107 #>  [5552,]  107 #>  [5553,]  107 #>  [5554,]  107 #>  [5555,]  107 #>  [5556,]  107 #>  [5557,]  107 #>  [5558,]  107 #>  [5559,]  107 #>  [5560,]  107 #>  [5561,]  107 #>  [5562,]  107 #>  [5563,]  107 #>  [5564,]  107 #>  [5565,]  107 #>  [5566,]  107 #>  [5567,]  107 #>  [5568,]  107 #>  [5569,]  107 #>  [5570,]  107 #>  [5571,]  108 #>  [5572,]  107 #>  [5573,]  107 #>  [5574,]  107 #>  [5575,]  108 #>  [5576,]  107 #>  [5577,]  107 #>  [5578,]  107 #>  [5579,]  107 #>  [5580,]  107 #>  [5581,]  107 #>  [5582,]  107 #>  [5583,]  107 #>  [5584,]  107 #>  [5585,]  107 #>  [5586,]  107 #>  [5587,]  107 #>  [5588,]  107 #>  [5589,]  107 #>  [5590,]  107 #>  [5591,]  107 #>  [5592,]  107 #>  [5593,]  107 #>  [5594,]  107 #>  [5595,]  107 #>  [5596,]  107 #>  [5597,]  107 #>  [5598,]  107 #>  [5599,]  107 #>  [5600,]  108 #>  [5601,]  109 #>  [5602,]  110 #>  [5603,]  109 #>  [5604,]  110 #>  [5605,]  110 #>  [5606,]  109 #>  [5607,]  110 #>  [5608,]  110 #>  [5609,]  110 #>  [5610,]  110 #>  [5611,]  109 #>  [5612,]  110 #>  [5613,]  110 #>  [5614,]  109 #>  [5615,]  110 #>  [5616,]  109 #>  [5617,]  110 #>  [5618,]  110 #>  [5619,]  109 #>  [5620,]  110 #>  [5621,]  110 #>  [5622,]  110 #>  [5623,]  110 #>  [5624,]  110 #>  [5625,]  110 #>  [5626,]  109 #>  [5627,]  110 #>  [5628,]  109 #>  [5629,]  110 #>  [5630,]  110 #>  [5631,]  110 #>  [5632,]  110 #>  [5633,]  110 #>  [5634,]  109 #>  [5635,]  109 #>  [5636,]  110 #>  [5637,]  109 #>  [5638,]  109 #>  [5639,]  110 #>  [5640,]  110 #>  [5641,]  110 #>  [5642,]  109 #>  [5643,]  110 #>  [5644,]  110 #>  [5645,]  109 #>  [5646,]  110 #>  [5647,]  110 #>  [5648,]  110 #>  [5649,]  109 #>  [5650,]  110 #>  [5651,]  110 #>  [5652,]  109 #>  [5653,]  110 #>  [5654,]  110 #>  [5655,]  110 #>  [5656,]  110 #>  [5657,]  110 #>  [5658,]  110 #>  [5659,]  109 #>  [5660,]  110 #>  [5661,]  110 #>  [5662,]  110 #>  [5663,]  110 #>  [5664,]  109 #>  [5665,]  110 #>  [5666,]  110 #>  [5667,]  110 #>  [5668,]  109 #>  [5669,]  110 #>  [5670,]  110 #>  [5671,]  110 #>  [5672,]  109 #>  [5673,]  109 #>  [5674,]  110 #>  [5675,]  110 #>  [5676,]  110 #>  [5677,]  109 #>  [5678,]  110 #>  [5679,]  109 #>  [5680,]  110 #>  [5681,]  110 #>  [5682,]  110 #>  [5683,]  110 #>  [5684,]  110 #>  [5685,]  110 #>  [5686,]  110 #>  [5687,]  110 #>  [5688,]  110 #>  [5689,]  109 #>  [5690,]  110 #>  [5691,]  110 #>  [5692,]  110 #>  [5693,]  110 #>  [5694,]  109 #>  [5695,]  110 #>  [5696,]  109 #>  [5697,]  109 #>  [5698,]  110 #>  [5699,]  110 #>  [5700,]  109 #>  [5701,]  111 #>  [5702,]  112 #>  [5703,]  111 #>  [5704,]  111 #>  [5705,]  111 #>  [5706,]  111 #>  [5707,]  111 #>  [5708,]  111 #>  [5709,]  112 #>  [5710,]  112 #>  [5711,]  111 #>  [5712,]  112 #>  [5713,]  112 #>  [5714,]  111 #>  [5715,]  111 #>  [5716,]  111 #>  [5717,]  112 #>  [5718,]  111 #>  [5719,]  111 #>  [5720,]  111 #>  [5721,]  112 #>  [5722,]  111 #>  [5723,]  111 #>  [5724,]  111 #>  [5725,]  111 #>  [5726,]  111 #>  [5727,]  111 #>  [5728,]  111 #>  [5729,]  112 #>  [5730,]  111 #>  [5731,]  111 #>  [5732,]  112 #>  [5733,]  112 #>  [5734,]  111 #>  [5735,]  111 #>  [5736,]  111 #>  [5737,]  111 #>  [5738,]  111 #>  [5739,]  111 #>  [5740,]  111 #>  [5741,]  111 #>  [5742,]  111 #>  [5743,]  111 #>  [5744,]  111 #>  [5745,]  111 #>  [5746,]  111 #>  [5747,]  111 #>  [5748,]  111 #>  [5749,]  111 #>  [5750,]  111 #>  [5751,]  111 #>  [5752,]  111 #>  [5753,]  112 #>  [5754,]  111 #>  [5755,]  111 #>  [5756,]  111 #>  [5757,]  111 #>  [5758,]  111 #>  [5759,]  111 #>  [5760,]  112 #>  [5761,]  111 #>  [5762,]  111 #>  [5763,]  112 #>  [5764,]  111 #>  [5765,]  111 #>  [5766,]  111 #>  [5767,]  111 #>  [5768,]  111 #>  [5769,]  111 #>  [5770,]  112 #>  [5771,]  111 #>  [5772,]  111 #>  [5773,]  111 #>  [5774,]  111 #>  [5775,]  112 #>  [5776,]  111 #>  [5777,]  111 #>  [5778,]  111 #>  [5779,]  111 #>  [5780,]  112 #>  [5781,]  112 #>  [5782,]  111 #>  [5783,]  111 #>  [5784,]  111 #>  [5785,]  111 #>  [5786,]  112 #>  [5787,]  111 #>  [5788,]  111 #>  [5789,]  111 #>  [5790,]  111 #>  [5791,]  111 #>  [5792,]  111 #>  [5793,]  111 #>  [5794,]  111 #>  [5795,]  111 #>  [5796,]  111 #>  [5797,]  111 #>  [5798,]  111 #>  [5799,]  111 #>  [5800,]  111 #>  [5801,]  114 #>  [5802,]  114 #>  [5803,]  113 #>  [5804,]  113 #>  [5805,]  113 #>  [5806,]  113 #>  [5807,]  114 #>  [5808,]  114 #>  [5809,]  113 #>  [5810,]  113 #>  [5811,]  113 #>  [5812,]  114 #>  [5813,]  114 #>  [5814,]  113 #>  [5815,]  114 #>  [5816,]  114 #>  [5817,]  114 #>  [5818,]  114 #>  [5819,]  114 #>  [5820,]  114 #>  [5821,]  113 #>  [5822,]  114 #>  [5823,]  114 #>  [5824,]  113 #>  [5825,]  113 #>  [5826,]  114 #>  [5827,]  114 #>  [5828,]  113 #>  [5829,]  114 #>  [5830,]  114 #>  [5831,]  113 #>  [5832,]  113 #>  [5833,]  114 #>  [5834,]  113 #>  [5835,]  113 #>  [5836,]  114 #>  [5837,]  114 #>  [5838,]  114 #>  [5839,]  113 #>  [5840,]  113 #>  [5841,]  114 #>  [5842,]  113 #>  [5843,]  114 #>  [5844,]  114 #>  [5845,]  114 #>  [5846,]  114 #>  [5847,]  113 #>  [5848,]  113 #>  [5849,]  114 #>  [5850,]  114 #>  [5851,]  114 #>  [5852,]  113 #>  [5853,]  114 #>  [5854,]  113 #>  [5855,]  114 #>  [5856,]  114 #>  [5857,]  113 #>  [5858,]  114 #>  [5859,]  114 #>  [5860,]  114 #>  [5861,]  114 #>  [5862,]  113 #>  [5863,]  114 #>  [5864,]  114 #>  [5865,]  113 #>  [5866,]  114 #>  [5867,]  114 #>  [5868,]  114 #>  [5869,]  114 #>  [5870,]  113 #>  [5871,]  114 #>  [5872,]  113 #>  [5873,]  113 #>  [5874,]  113 #>  [5875,]  114 #>  [5876,]  113 #>  [5877,]  114 #>  [5878,]  114 #>  [5879,]  113 #>  [5880,]  114 #>  [5881,]  114 #>  [5882,]  113 #>  [5883,]  114 #>  [5884,]  114 #>  [5885,]  114 #>  [5886,]  114 #>  [5887,]  114 #>  [5888,]  114 #>  [5889,]  114 #>  [5890,]  114 #>  [5891,]  113 #>  [5892,]  114 #>  [5893,]  114 #>  [5894,]  114 #>  [5895,]  114 #>  [5896,]  114 #>  [5897,]  114 #>  [5898,]  113 #>  [5899,]  114 #>  [5900,]  114 #>  [5901,]  116 #>  [5902,]  116 #>  [5903,]  116 #>  [5904,]  115 #>  [5905,]  116 #>  [5906,]  116 #>  [5907,]  116 #>  [5908,]  115 #>  [5909,]  115 #>  [5910,]  115 #>  [5911,]  116 #>  [5912,]  116 #>  [5913,]  116 #>  [5914,]  116 #>  [5915,]  116 #>  [5916,]  116 #>  [5917,]  116 #>  [5918,]  115 #>  [5919,]  116 #>  [5920,]  115 #>  [5921,]  116 #>  [5922,]  116 #>  [5923,]  116 #>  [5924,]  116 #>  [5925,]  116 #>  [5926,]  116 #>  [5927,]  116 #>  [5928,]  116 #>  [5929,]  116 #>  [5930,]  115 #>  [5931,]  116 #>  [5932,]  116 #>  [5933,]  116 #>  [5934,]  116 #>  [5935,]  116 #>  [5936,]  116 #>  [5937,]  116 #>  [5938,]  116 #>  [5939,]  115 #>  [5940,]  116 #>  [5941,]  116 #>  [5942,]  116 #>  [5943,]  115 #>  [5944,]  116 #>  [5945,]  115 #>  [5946,]  116 #>  [5947,]  116 #>  [5948,]  116 #>  [5949,]  115 #>  [5950,]  116 #>  [5951,]  115 #>  [5952,]  116 #>  [5953,]  115 #>  [5954,]  116 #>  [5955,]  116 #>  [5956,]  115 #>  [5957,]  116 #>  [5958,]  116 #>  [5959,]  116 #>  [5960,]  115 #>  [5961,]  116 #>  [5962,]  116 #>  [5963,]  116 #>  [5964,]  115 #>  [5965,]  115 #>  [5966,]  115 #>  [5967,]  115 #>  [5968,]  116 #>  [5969,]  116 #>  [5970,]  116 #>  [5971,]  116 #>  [5972,]  116 #>  [5973,]  116 #>  [5974,]  116 #>  [5975,]  116 #>  [5976,]  116 #>  [5977,]  116 #>  [5978,]  115 #>  [5979,]  116 #>  [5980,]  116 #>  [5981,]  116 #>  [5982,]  116 #>  [5983,]  116 #>  [5984,]  116 #>  [5985,]  115 #>  [5986,]  116 #>  [5987,]  116 #>  [5988,]  116 #>  [5989,]  115 #>  [5990,]  116 #>  [5991,]  115 #>  [5992,]  116 #>  [5993,]  116 #>  [5994,]  116 #>  [5995,]  115 #>  [5996,]  116 #>  [5997,]  116 #>  [5998,]  116 #>  [5999,]  116 #>  [6000,]  116 #>  [6001,]  118 #>  [6002,]  118 #>  [6003,]  118 #>  [6004,]  117 #>  [6005,]  118 #>  [6006,]  118 #>  [6007,]  118 #>  [6008,]  117 #>  [6009,]  117 #>  [6010,]  118 #>  [6011,]  118 #>  [6012,]  118 #>  [6013,]  118 #>  [6014,]  118 #>  [6015,]  118 #>  [6016,]  118 #>  [6017,]  117 #>  [6018,]  118 #>  [6019,]  118 #>  [6020,]  118 #>  [6021,]  118 #>  [6022,]  118 #>  [6023,]  118 #>  [6024,]  118 #>  [6025,]  118 #>  [6026,]  118 #>  [6027,]  117 #>  [6028,]  118 #>  [6029,]  118 #>  [6030,]  118 #>  [6031,]  118 #>  [6032,]  118 #>  [6033,]  118 #>  [6034,]  118 #>  [6035,]  118 #>  [6036,]  118 #>  [6037,]  118 #>  [6038,]  118 #>  [6039,]  118 #>  [6040,]  118 #>  [6041,]  118 #>  [6042,]  118 #>  [6043,]  118 #>  [6044,]  117 #>  [6045,]  118 #>  [6046,]  118 #>  [6047,]  118 #>  [6048,]  118 #>  [6049,]  118 #>  [6050,]  118 #>  [6051,]  118 #>  [6052,]  117 #>  [6053,]  118 #>  [6054,]  118 #>  [6055,]  118 #>  [6056,]  118 #>  [6057,]  118 #>  [6058,]  117 #>  [6059,]  118 #>  [6060,]  118 #>  [6061,]  118 #>  [6062,]  118 #>  [6063,]  118 #>  [6064,]  118 #>  [6065,]  118 #>  [6066,]  117 #>  [6067,]  118 #>  [6068,]  118 #>  [6069,]  118 #>  [6070,]  118 #>  [6071,]  118 #>  [6072,]  118 #>  [6073,]  118 #>  [6074,]  118 #>  [6075,]  118 #>  [6076,]  118 #>  [6077,]  118 #>  [6078,]  118 #>  [6079,]  118 #>  [6080,]  118 #>  [6081,]  117 #>  [6082,]  117 #>  [6083,]  118 #>  [6084,]  118 #>  [6085,]  118 #>  [6086,]  118 #>  [6087,]  117 #>  [6088,]  118 #>  [6089,]  118 #>  [6090,]  117 #>  [6091,]  118 #>  [6092,]  117 #>  [6093,]  118 #>  [6094,]  118 #>  [6095,]  117 #>  [6096,]  118 #>  [6097,]  118 #>  [6098,]  118 #>  [6099,]  117 #>  [6100,]  118 #>  [6101,]  120 #>  [6102,]  120 #>  [6103,]  119 #>  [6104,]  120 #>  [6105,]  120 #>  [6106,]  120 #>  [6107,]  120 #>  [6108,]  120 #>  [6109,]  120 #>  [6110,]  119 #>  [6111,]  119 #>  [6112,]  120 #>  [6113,]  120 #>  [6114,]  119 #>  [6115,]  120 #>  [6116,]  120 #>  [6117,]  120 #>  [6118,]  120 #>  [6119,]  120 #>  [6120,]  120 #>  [6121,]  119 #>  [6122,]  120 #>  [6123,]  120 #>  [6124,]  120 #>  [6125,]  120 #>  [6126,]  120 #>  [6127,]  120 #>  [6128,]  120 #>  [6129,]  120 #>  [6130,]  120 #>  [6131,]  119 #>  [6132,]  119 #>  [6133,]  120 #>  [6134,]  120 #>  [6135,]  120 #>  [6136,]  120 #>  [6137,]  120 #>  [6138,]  120 #>  [6139,]  120 #>  [6140,]  119 #>  [6141,]  120 #>  [6142,]  120 #>  [6143,]  120 #>  [6144,]  120 #>  [6145,]  120 #>  [6146,]  120 #>  [6147,]  120 #>  [6148,]  119 #>  [6149,]  120 #>  [6150,]  120 #>  [6151,]  120 #>  [6152,]  120 #>  [6153,]  120 #>  [6154,]  120 #>  [6155,]  120 #>  [6156,]  120 #>  [6157,]  120 #>  [6158,]  120 #>  [6159,]  120 #>  [6160,]  120 #>  [6161,]  120 #>  [6162,]  120 #>  [6163,]  120 #>  [6164,]  120 #>  [6165,]  120 #>  [6166,]  120 #>  [6167,]  120 #>  [6168,]  120 #>  [6169,]  120 #>  [6170,]  119 #>  [6171,]  120 #>  [6172,]  120 #>  [6173,]  120 #>  [6174,]  119 #>  [6175,]  120 #>  [6176,]  120 #>  [6177,]  120 #>  [6178,]  120 #>  [6179,]  120 #>  [6180,]  120 #>  [6181,]  120 #>  [6182,]  119 #>  [6183,]  120 #>  [6184,]  120 #>  [6185,]  120 #>  [6186,]  120 #>  [6187,]  120 #>  [6188,]  120 #>  [6189,]  120 #>  [6190,]  120 #>  [6191,]  120 #>  [6192,]  120 #>  [6193,]  120 #>  [6194,]  120 #>  [6195,]  120 #>  [6196,]  120 #>  [6197,]  120 #>  [6198,]  119 #>  [6199,]  120 #>  [6200,]  120 #>  [6201,]  121 #>  [6202,]  121 #>  [6203,]  121 #>  [6204,]  121 #>  [6205,]  121 #>  [6206,]  121 #>  [6207,]  121 #>  [6208,]  121 #>  [6209,]  121 #>  [6210,]  121 #>  [6211,]  121 #>  [6212,]  121 #>  [6213,]  121 #>  [6214,]  121 #>  [6215,]  121 #>  [6216,]  121 #>  [6217,]  121 #>  [6218,]  121 #>  [6219,]  121 #>  [6220,]  121 #>  [6221,]  121 #>  [6222,]  121 #>  [6223,]  121 #>  [6224,]  121 #>  [6225,]  121 #>  [6226,]  121 #>  [6227,]  121 #>  [6228,]  121 #>  [6229,]  121 #>  [6230,]  121 #>  [6231,]  121 #>  [6232,]  121 #>  [6233,]  121 #>  [6234,]  121 #>  [6235,]  121 #>  [6236,]  121 #>  [6237,]  121 #>  [6238,]  121 #>  [6239,]  121 #>  [6240,]  121 #>  [6241,]  121 #>  [6242,]  121 #>  [6243,]  121 #>  [6244,]  121 #>  [6245,]  121 #>  [6246,]  121 #>  [6247,]  121 #>  [6248,]  121 #>  [6249,]  121 #>  [6250,]  121 #>  [6251,]  121 #>  [6252,]  121 #>  [6253,]  121 #>  [6254,]  121 #>  [6255,]  121 #>  [6256,]  121 #>  [6257,]  121 #>  [6258,]  121 #>  [6259,]  121 #>  [6260,]  121 #>  [6261,]  121 #>  [6262,]  121 #>  [6263,]  121 #>  [6264,]  121 #>  [6265,]  121 #>  [6266,]  121 #>  [6267,]  121 #>  [6268,]  121 #>  [6269,]  121 #>  [6270,]  121 #>  [6271,]  121 #>  [6272,]  121 #>  [6273,]  121 #>  [6274,]  121 #>  [6275,]  121 #>  [6276,]  121 #>  [6277,]  121 #>  [6278,]  121 #>  [6279,]  121 #>  [6280,]  121 #>  [6281,]  121 #>  [6282,]  121 #>  [6283,]  121 #>  [6284,]  121 #>  [6285,]  121 #>  [6286,]  121 #>  [6287,]  121 #>  [6288,]  121 #>  [6289,]  121 #>  [6290,]  121 #>  [6291,]  121 #>  [6292,]  121 #>  [6293,]  121 #>  [6294,]  121 #>  [6295,]  121 #>  [6296,]  121 #>  [6297,]  121 #>  [6298,]  121 #>  [6299,]  121 #>  [6300,]  121 #>  [6301,]  122 #>  [6302,]  123 #>  [6303,]  122 #>  [6304,]  122 #>  [6305,]  123 #>  [6306,]  122 #>  [6307,]  123 #>  [6308,]  122 #>  [6309,]  123 #>  [6310,]  123 #>  [6311,]  122 #>  [6312,]  123 #>  [6313,]  123 #>  [6314,]  122 #>  [6315,]  122 #>  [6316,]  122 #>  [6317,]  123 #>  [6318,]  123 #>  [6319,]  122 #>  [6320,]  123 #>  [6321,]  123 #>  [6322,]  123 #>  [6323,]  123 #>  [6324,]  123 #>  [6325,]  122 #>  [6326,]  122 #>  [6327,]  123 #>  [6328,]  122 #>  [6329,]  123 #>  [6330,]  123 #>  [6331,]  123 #>  [6332,]  123 #>  [6333,]  123 #>  [6334,]  122 #>  [6335,]  122 #>  [6336,]  123 #>  [6337,]  122 #>  [6338,]  122 #>  [6339,]  123 #>  [6340,]  123 #>  [6341,]  123 #>  [6342,]  122 #>  [6343,]  122 #>  [6344,]  123 #>  [6345,]  122 #>  [6346,]  122 #>  [6347,]  123 #>  [6348,]  123 #>  [6349,]  122 #>  [6350,]  123 #>  [6351,]  123 #>  [6352,]  122 #>  [6353,]  123 #>  [6354,]  123 #>  [6355,]  122 #>  [6356,]  122 #>  [6357,]  122 #>  [6358,]  123 #>  [6359,]  122 #>  [6360,]  123 #>  [6361,]  123 #>  [6362,]  122 #>  [6363,]  123 #>  [6364,]  122 #>  [6365,]  122 #>  [6366,]  122 #>  [6367,]  122 #>  [6368,]  122 #>  [6369,]  122 #>  [6370,]  123 #>  [6371,]  123 #>  [6372,]  122 #>  [6373,]  122 #>  [6374,]  123 #>  [6375,]  123 #>  [6376,]  123 #>  [6377,]  122 #>  [6378,]  123 #>  [6379,]  122 #>  [6380,]  123 #>  [6381,]  123 #>  [6382,]  122 #>  [6383,]  123 #>  [6384,]  123 #>  [6385,]  122 #>  [6386,]  123 #>  [6387,]  123 #>  [6388,]  123 #>  [6389,]  122 #>  [6390,]  123 #>  [6391,]  122 #>  [6392,]  123 #>  [6393,]  123 #>  [6394,]  122 #>  [6395,]  123 #>  [6396,]  122 #>  [6397,]  122 #>  [6398,]  122 #>  [6399,]  122 #>  [6400,]  122 #>  [6401,]  124 #>  [6402,]  124 #>  [6403,]  124 #>  [6404,]  125 #>  [6405,]  124 #>  [6406,]  124 #>  [6407,]  125 #>  [6408,]  124 #>  [6409,]  124 #>  [6410,]  125 #>  [6411,]  124 #>  [6412,]  124 #>  [6413,]  124 #>  [6414,]  124 #>  [6415,]  124 #>  [6416,]  125 #>  [6417,]  124 #>  [6418,]  124 #>  [6419,]  124 #>  [6420,]  125 #>  [6421,]  124 #>  [6422,]  124 #>  [6423,]  124 #>  [6424,]  125 #>  [6425,]  125 #>  [6426,]  124 #>  [6427,]  124 #>  [6428,]  125 #>  [6429,]  124 #>  [6430,]  124 #>  [6431,]  124 #>  [6432,]  124 #>  [6433,]  124 #>  [6434,]  124 #>  [6435,]  124 #>  [6436,]  124 #>  [6437,]  124 #>  [6438,]  124 #>  [6439,]  125 #>  [6440,]  124 #>  [6441,]  124 #>  [6442,]  124 #>  [6443,]  124 #>  [6444,]  124 #>  [6445,]  124 #>  [6446,]  124 #>  [6447,]  124 #>  [6448,]  124 #>  [6449,]  124 #>  [6450,]  125 #>  [6451,]  124 #>  [6452,]  125 #>  [6453,]  124 #>  [6454,]  125 #>  [6455,]  124 #>  [6456,]  124 #>  [6457,]  125 #>  [6458,]  124 #>  [6459,]  124 #>  [6460,]  124 #>  [6461,]  124 #>  [6462,]  124 #>  [6463,]  124 #>  [6464,]  124 #>  [6465,]  124 #>  [6466,]  124 #>  [6467,]  124 #>  [6468,]  124 #>  [6469,]  124 #>  [6470,]  124 #>  [6471,]  124 #>  [6472,]  124 #>  [6473,]  125 #>  [6474,]  124 #>  [6475,]  124 #>  [6476,]  125 #>  [6477,]  124 #>  [6478,]  124 #>  [6479,]  124 #>  [6480,]  124 #>  [6481,]  124 #>  [6482,]  124 #>  [6483,]  124 #>  [6484,]  124 #>  [6485,]  124 #>  [6486,]  125 #>  [6487,]  124 #>  [6488,]  124 #>  [6489,]  124 #>  [6490,]  124 #>  [6491,]  125 #>  [6492,]  124 #>  [6493,]  124 #>  [6494,]  124 #>  [6495,]  124 #>  [6496,]  124 #>  [6497,]  124 #>  [6498,]  124 #>  [6499,]  124 #>  [6500,]  124 #>  [6501,]  127 #>  [6502,]  127 #>  [6503,]  127 #>  [6504,]  126 #>  [6505,]  127 #>  [6506,]  127 #>  [6507,]  127 #>  [6508,]  126 #>  [6509,]  126 #>  [6510,]  126 #>  [6511,]  127 #>  [6512,]  127 #>  [6513,]  127 #>  [6514,]  127 #>  [6515,]  127 #>  [6516,]  127 #>  [6517,]  127 #>  [6518,]  127 #>  [6519,]  127 #>  [6520,]  127 #>  [6521,]  127 #>  [6522,]  127 #>  [6523,]  127 #>  [6524,]  127 #>  [6525,]  127 #>  [6526,]  127 #>  [6527,]  127 #>  [6528,]  127 #>  [6529,]  127 #>  [6530,]  127 #>  [6531,]  127 #>  [6532,]  127 #>  [6533,]  127 #>  [6534,]  127 #>  [6535,]  127 #>  [6536,]  127 #>  [6537,]  127 #>  [6538,]  127 #>  [6539,]  127 #>  [6540,]  127 #>  [6541,]  127 #>  [6542,]  127 #>  [6543,]  127 #>  [6544,]  127 #>  [6545,]  127 #>  [6546,]  127 #>  [6547,]  127 #>  [6548,]  127 #>  [6549,]  127 #>  [6550,]  127 #>  [6551,]  126 #>  [6552,]  127 #>  [6553,]  127 #>  [6554,]  127 #>  [6555,]  127 #>  [6556,]  127 #>  [6557,]  127 #>  [6558,]  127 #>  [6559,]  127 #>  [6560,]  127 #>  [6561,]  127 #>  [6562,]  127 #>  [6563,]  127 #>  [6564,]  127 #>  [6565,]  127 #>  [6566,]  127 #>  [6567,]  127 #>  [6568,]  127 #>  [6569,]  127 #>  [6570,]  127 #>  [6571,]  127 #>  [6572,]  127 #>  [6573,]  127 #>  [6574,]  127 #>  [6575,]  127 #>  [6576,]  127 #>  [6577,]  127 #>  [6578,]  127 #>  [6579,]  127 #>  [6580,]  127 #>  [6581,]  127 #>  [6582,]  127 #>  [6583,]  127 #>  [6584,]  127 #>  [6585,]  126 #>  [6586,]  127 #>  [6587,]  127 #>  [6588,]  127 #>  [6589,]  127 #>  [6590,]  127 #>  [6591,]  126 #>  [6592,]  127 #>  [6593,]  127 #>  [6594,]  127 #>  [6595,]  126 #>  [6596,]  127 #>  [6597,]  127 #>  [6598,]  127 #>  [6599,]  127 #>  [6600,]  127 #>  [6601,]  129 #>  [6602,]  129 #>  [6603,]  129 #>  [6604,]  128 #>  [6605,]  129 #>  [6606,]  129 #>  [6607,]  129 #>  [6608,]  128 #>  [6609,]  128 #>  [6610,]  128 #>  [6611,]  129 #>  [6612,]  129 #>  [6613,]  129 #>  [6614,]  129 #>  [6615,]  129 #>  [6616,]  129 #>  [6617,]  129 #>  [6618,]  129 #>  [6619,]  129 #>  [6620,]  129 #>  [6621,]  129 #>  [6622,]  129 #>  [6623,]  129 #>  [6624,]  129 #>  [6625,]  129 #>  [6626,]  129 #>  [6627,]  129 #>  [6628,]  129 #>  [6629,]  129 #>  [6630,]  129 #>  [6631,]  129 #>  [6632,]  129 #>  [6633,]  129 #>  [6634,]  129 #>  [6635,]  129 #>  [6636,]  129 #>  [6637,]  129 #>  [6638,]  129 #>  [6639,]  129 #>  [6640,]  129 #>  [6641,]  129 #>  [6642,]  129 #>  [6643,]  128 #>  [6644,]  129 #>  [6645,]  129 #>  [6646,]  129 #>  [6647,]  129 #>  [6648,]  129 #>  [6649,]  129 #>  [6650,]  129 #>  [6651,]  128 #>  [6652,]  129 #>  [6653,]  129 #>  [6654,]  129 #>  [6655,]  129 #>  [6656,]  129 #>  [6657,]  129 #>  [6658,]  129 #>  [6659,]  129 #>  [6660,]  128 #>  [6661,]  129 #>  [6662,]  129 #>  [6663,]  129 #>  [6664,]  128 #>  [6665,]  129 #>  [6666,]  129 #>  [6667,]  128 #>  [6668,]  129 #>  [6669,]  129 #>  [6670,]  129 #>  [6671,]  129 #>  [6672,]  129 #>  [6673,]  129 #>  [6674,]  129 #>  [6675,]  129 #>  [6676,]  129 #>  [6677,]  129 #>  [6678,]  129 #>  [6679,]  129 #>  [6680,]  129 #>  [6681,]  129 #>  [6682,]  129 #>  [6683,]  129 #>  [6684,]  129 #>  [6685,]  128 #>  [6686,]  129 #>  [6687,]  129 #>  [6688,]  129 #>  [6689,]  129 #>  [6690,]  129 #>  [6691,]  128 #>  [6692,]  129 #>  [6693,]  129 #>  [6694,]  129 #>  [6695,]  128 #>  [6696,]  129 #>  [6697,]  129 #>  [6698,]  129 #>  [6699,]  129 #>  [6700,]  129 #>  [6701,]  130 #>  [6702,]  131 #>  [6703,]  130 #>  [6704,]  131 #>  [6705,]  131 #>  [6706,]  130 #>  [6707,]  131 #>  [6708,]  131 #>  [6709,]  131 #>  [6710,]  131 #>  [6711,]  130 #>  [6712,]  131 #>  [6713,]  131 #>  [6714,]  130 #>  [6715,]  131 #>  [6716,]  130 #>  [6717,]  131 #>  [6718,]  131 #>  [6719,]  130 #>  [6720,]  131 #>  [6721,]  131 #>  [6722,]  131 #>  [6723,]  131 #>  [6724,]  131 #>  [6725,]  131 #>  [6726,]  130 #>  [6727,]  131 #>  [6728,]  130 #>  [6729,]  131 #>  [6730,]  131 #>  [6731,]  131 #>  [6732,]  131 #>  [6733,]  131 #>  [6734,]  130 #>  [6735,]  130 #>  [6736,]  131 #>  [6737,]  130 #>  [6738,]  130 #>  [6739,]  131 #>  [6740,]  131 #>  [6741,]  131 #>  [6742,]  130 #>  [6743,]  131 #>  [6744,]  131 #>  [6745,]  130 #>  [6746,]  131 #>  [6747,]  131 #>  [6748,]  131 #>  [6749,]  130 #>  [6750,]  131 #>  [6751,]  131 #>  [6752,]  130 #>  [6753,]  131 #>  [6754,]  131 #>  [6755,]  131 #>  [6756,]  131 #>  [6757,]  131 #>  [6758,]  131 #>  [6759,]  131 #>  [6760,]  131 #>  [6761,]  131 #>  [6762,]  131 #>  [6763,]  131 #>  [6764,]  130 #>  [6765,]  131 #>  [6766,]  131 #>  [6767,]  131 #>  [6768,]  130 #>  [6769,]  131 #>  [6770,]  131 #>  [6771,]  131 #>  [6772,]  130 #>  [6773,]  130 #>  [6774,]  131 #>  [6775,]  131 #>  [6776,]  131 #>  [6777,]  130 #>  [6778,]  131 #>  [6779,]  131 #>  [6780,]  131 #>  [6781,]  131 #>  [6782,]  131 #>  [6783,]  131 #>  [6784,]  131 #>  [6785,]  131 #>  [6786,]  131 #>  [6787,]  131 #>  [6788,]  131 #>  [6789,]  130 #>  [6790,]  131 #>  [6791,]  131 #>  [6792,]  131 #>  [6793,]  131 #>  [6794,]  130 #>  [6795,]  131 #>  [6796,]  130 #>  [6797,]  130 #>  [6798,]  131 #>  [6799,]  131 #>  [6800,]  130 #>  [6801,]  133 #>  [6802,]  133 #>  [6803,]  133 #>  [6804,]  133 #>  [6805,]  133 #>  [6806,]  133 #>  [6807,]  133 #>  [6808,]  133 #>  [6809,]  133 #>  [6810,]  133 #>  [6811,]  133 #>  [6812,]  133 #>  [6813,]  133 #>  [6814,]  133 #>  [6815,]  133 #>  [6816,]  133 #>  [6817,]  133 #>  [6818,]  133 #>  [6819,]  133 #>  [6820,]  132 #>  [6821,]  132 #>  [6822,]  133 #>  [6823,]  133 #>  [6824,]  133 #>  [6825,]  132 #>  [6826,]  133 #>  [6827,]  133 #>  [6828,]  133 #>  [6829,]  133 #>  [6830,]  133 #>  [6831,]  133 #>  [6832,]  133 #>  [6833,]  133 #>  [6834,]  133 #>  [6835,]  133 #>  [6836,]  133 #>  [6837,]  133 #>  [6838,]  133 #>  [6839,]  133 #>  [6840,]  133 #>  [6841,]  133 #>  [6842,]  133 #>  [6843,]  133 #>  [6844,]  133 #>  [6845,]  133 #>  [6846,]  133 #>  [6847,]  133 #>  [6848,]  133 #>  [6849,]  133 #>  [6850,]  133 #>  [6851,]  133 #>  [6852,]  133 #>  [6853,]  133 #>  [6854,]  133 #>  [6855,]  133 #>  [6856,]  132 #>  [6857,]  133 #>  [6858,]  133 #>  [6859,]  133 #>  [6860,]  133 #>  [6861,]  133 #>  [6862,]  133 #>  [6863,]  133 #>  [6864,]  133 #>  [6865,]  132 #>  [6866,]  133 #>  [6867,]  133 #>  [6868,]  133 #>  [6869,]  133 #>  [6870,]  133 #>  [6871,]  133 #>  [6872,]  133 #>  [6873,]  133 #>  [6874,]  132 #>  [6875,]  133 #>  [6876,]  133 #>  [6877,]  133 #>  [6878,]  133 #>  [6879,]  133 #>  [6880,]  132 #>  [6881,]  133 #>  [6882,]  133 #>  [6883,]  133 #>  [6884,]  133 #>  [6885,]  132 #>  [6886,]  132 #>  [6887,]  133 #>  [6888,]  133 #>  [6889,]  132 #>  [6890,]  133 #>  [6891,]  133 #>  [6892,]  133 #>  [6893,]  133 #>  [6894,]  133 #>  [6895,]  133 #>  [6896,]  133 #>  [6897,]  133 #>  [6898,]  133 #>  [6899,]  133 #>  [6900,]  133 #>  [6901,]  135 #>  [6902,]  134 #>  [6903,]  135 #>  [6904,]  135 #>  [6905,]  135 #>  [6906,]  134 #>  [6907,]  135 #>  [6908,]  135 #>  [6909,]  135 #>  [6910,]  135 #>  [6911,]  134 #>  [6912,]  134 #>  [6913,]  135 #>  [6914,]  135 #>  [6915,]  134 #>  [6916,]  135 #>  [6917,]  134 #>  [6918,]  134 #>  [6919,]  134 #>  [6920,]  135 #>  [6921,]  134 #>  [6922,]  135 #>  [6923,]  134 #>  [6924,]  135 #>  [6925,]  135 #>  [6926,]  134 #>  [6927,]  135 #>  [6928,]  135 #>  [6929,]  134 #>  [6930,]  134 #>  [6931,]  134 #>  [6932,]  134 #>  [6933,]  135 #>  [6934,]  134 #>  [6935,]  134 #>  [6936,]  135 #>  [6937,]  134 #>  [6938,]  134 #>  [6939,]  135 #>  [6940,]  135 #>  [6941,]  135 #>  [6942,]  134 #>  [6943,]  134 #>  [6944,]  134 #>  [6945,]  135 #>  [6946,]  134 #>  [6947,]  134 #>  [6948,]  134 #>  [6949,]  135 #>  [6950,]  135 #>  [6951,]  134 #>  [6952,]  135 #>  [6953,]  135 #>  [6954,]  135 #>  [6955,]  135 #>  [6956,]  134 #>  [6957,]  135 #>  [6958,]  135 #>  [6959,]  135 #>  [6960,]  134 #>  [6961,]  134 #>  [6962,]  134 #>  [6963,]  134 #>  [6964,]  134 #>  [6965,]  134 #>  [6966,]  134 #>  [6967,]  135 #>  [6968,]  134 #>  [6969,]  134 #>  [6970,]  134 #>  [6971,]  135 #>  [6972,]  135 #>  [6973,]  135 #>  [6974,]  135 #>  [6975,]  134 #>  [6976,]  135 #>  [6977,]  135 #>  [6978,]  134 #>  [6979,]  134 #>  [6980,]  135 #>  [6981,]  134 #>  [6982,]  134 #>  [6983,]  135 #>  [6984,]  135 #>  [6985,]  135 #>  [6986,]  135 #>  [6987,]  135 #>  [6988,]  135 #>  [6989,]  134 #>  [6990,]  135 #>  [6991,]  135 #>  [6992,]  134 #>  [6993,]  134 #>  [6994,]  134 #>  [6995,]  134 #>  [6996,]  134 #>  [6997,]  134 #>  [6998,]  134 #>  [6999,]  135 #>  [7000,]  134 #>  [7001,]  137 #>  [7002,]  137 #>  [7003,]  137 #>  [7004,]  136 #>  [7005,]  137 #>  [7006,]  137 #>  [7007,]  137 #>  [7008,]  136 #>  [7009,]  136 #>  [7010,]  136 #>  [7011,]  137 #>  [7012,]  137 #>  [7013,]  137 #>  [7014,]  137 #>  [7015,]  137 #>  [7016,]  137 #>  [7017,]  137 #>  [7018,]  136 #>  [7019,]  137 #>  [7020,]  136 #>  [7021,]  137 #>  [7022,]  137 #>  [7023,]  137 #>  [7024,]  136 #>  [7025,]  137 #>  [7026,]  137 #>  [7027,]  137 #>  [7028,]  137 #>  [7029,]  137 #>  [7030,]  136 #>  [7031,]  137 #>  [7032,]  137 #>  [7033,]  137 #>  [7034,]  137 #>  [7035,]  137 #>  [7036,]  137 #>  [7037,]  137 #>  [7038,]  137 #>  [7039,]  136 #>  [7040,]  137 #>  [7041,]  137 #>  [7042,]  137 #>  [7043,]  136 #>  [7044,]  137 #>  [7045,]  136 #>  [7046,]  137 #>  [7047,]  137 #>  [7048,]  137 #>  [7049,]  136 #>  [7050,]  137 #>  [7051,]  136 #>  [7052,]  137 #>  [7053,]  136 #>  [7054,]  137 #>  [7055,]  137 #>  [7056,]  136 #>  [7057,]  137 #>  [7058,]  137 #>  [7059,]  137 #>  [7060,]  136 #>  [7061,]  137 #>  [7062,]  137 #>  [7063,]  137 #>  [7064,]  136 #>  [7065,]  136 #>  [7066,]  136 #>  [7067,]  136 #>  [7068,]  137 #>  [7069,]  137 #>  [7070,]  137 #>  [7071,]  137 #>  [7072,]  137 #>  [7073,]  137 #>  [7074,]  137 #>  [7075,]  137 #>  [7076,]  137 #>  [7077,]  137 #>  [7078,]  136 #>  [7079,]  137 #>  [7080,]  137 #>  [7081,]  137 #>  [7082,]  137 #>  [7083,]  137 #>  [7084,]  137 #>  [7085,]  136 #>  [7086,]  137 #>  [7087,]  137 #>  [7088,]  137 #>  [7089,]  136 #>  [7090,]  137 #>  [7091,]  136 #>  [7092,]  137 #>  [7093,]  137 #>  [7094,]  137 #>  [7095,]  136 #>  [7096,]  137 #>  [7097,]  137 #>  [7098,]  137 #>  [7099,]  137 #>  [7100,]  137 #>  [7101,]  139 #>  [7102,]  138 #>  [7103,]  138 #>  [7104,]  138 #>  [7105,]  139 #>  [7106,]  138 #>  [7107,]  138 #>  [7108,]  138 #>  [7109,]  138 #>  [7110,]  139 #>  [7111,]  139 #>  [7112,]  139 #>  [7113,]  138 #>  [7114,]  139 #>  [7115,]  139 #>  [7116,]  138 #>  [7117,]  139 #>  [7118,]  139 #>  [7119,]  138 #>  [7120,]  138 #>  [7121,]  138 #>  [7122,]  139 #>  [7123,]  138 #>  [7124,]  138 #>  [7125,]  138 #>  [7126,]  139 #>  [7127,]  139 #>  [7128,]  138 #>  [7129,]  138 #>  [7130,]  138 #>  [7131,]  139 #>  [7132,]  139 #>  [7133,]  138 #>  [7134,]  138 #>  [7135,]  138 #>  [7136,]  138 #>  [7137,]  138 #>  [7138,]  139 #>  [7139,]  139 #>  [7140,]  138 #>  [7141,]  138 #>  [7142,]  138 #>  [7143,]  139 #>  [7144,]  138 #>  [7145,]  138 #>  [7146,]  138 #>  [7147,]  139 #>  [7148,]  138 #>  [7149,]  138 #>  [7150,]  138 #>  [7151,]  138 #>  [7152,]  139 #>  [7153,]  138 #>  [7154,]  138 #>  [7155,]  138 #>  [7156,]  138 #>  [7157,]  138 #>  [7158,]  139 #>  [7159,]  139 #>  [7160,]  138 #>  [7161,]  139 #>  [7162,]  138 #>  [7163,]  138 #>  [7164,]  138 #>  [7165,]  138 #>  [7166,]  139 #>  [7167,]  138 #>  [7168,]  139 #>  [7169,]  138 #>  [7170,]  139 #>  [7171,]  139 #>  [7172,]  138 #>  [7173,]  138 #>  [7174,]  138 #>  [7175,]  139 #>  [7176,]  138 #>  [7177,]  139 #>  [7178,]  138 #>  [7179,]  139 #>  [7180,]  138 #>  [7181,]  138 #>  [7182,]  138 #>  [7183,]  139 #>  [7184,]  138 #>  [7185,]  138 #>  [7186,]  138 #>  [7187,]  139 #>  [7188,]  138 #>  [7189,]  138 #>  [7190,]  139 #>  [7191,]  139 #>  [7192,]  139 #>  [7193,]  138 #>  [7194,]  138 #>  [7195,]  139 #>  [7196,]  139 #>  [7197,]  138 #>  [7198,]  138 #>  [7199,]  138 #>  [7200,]  139 #>  [7201,]  141 #>  [7202,]  140 #>  [7203,]  140 #>  [7204,]  140 #>  [7205,]  141 #>  [7206,]  140 #>  [7207,]  140 #>  [7208,]  140 #>  [7209,]  141 #>  [7210,]  140 #>  [7211,]  141 #>  [7212,]  140 #>  [7213,]  141 #>  [7214,]  140 #>  [7215,]  140 #>  [7216,]  140 #>  [7217,]  141 #>  [7218,]  141 #>  [7219,]  141 #>  [7220,]  141 #>  [7221,]  141 #>  [7222,]  141 #>  [7223,]  140 #>  [7224,]  141 #>  [7225,]  140 #>  [7226,]  140 #>  [7227,]  141 #>  [7228,]  141 #>  [7229,]  141 #>  [7230,]  140 #>  [7231,]  140 #>  [7232,]  140 #>  [7233,]  141 #>  [7234,]  140 #>  [7235,]  140 #>  [7236,]  141 #>  [7237,]  140 #>  [7238,]  141 #>  [7239,]  141 #>  [7240,]  140 #>  [7241,]  141 #>  [7242,]  141 #>  [7243,]  140 #>  [7244,]  140 #>  [7245,]  140 #>  [7246,]  140 #>  [7247,]  140 #>  [7248,]  140 #>  [7249,]  140 #>  [7250,]  140 #>  [7251,]  141 #>  [7252,]  140 #>  [7253,]  141 #>  [7254,]  141 #>  [7255,]  140 #>  [7256,]  141 #>  [7257,]  140 #>  [7258,]  141 #>  [7259,]  140 #>  [7260,]  140 #>  [7261,]  141 #>  [7262,]  141 #>  [7263,]  140 #>  [7264,]  141 #>  [7265,]  141 #>  [7266,]  141 #>  [7267,]  140 #>  [7268,]  140 #>  [7269,]  140 #>  [7270,]  141 #>  [7271,]  140 #>  [7272,]  140 #>  [7273,]  141 #>  [7274,]  140 #>  [7275,]  140 #>  [7276,]  140 #>  [7277,]  141 #>  [7278,]  140 #>  [7279,]  141 #>  [7280,]  140 #>  [7281,]  141 #>  [7282,]  141 #>  [7283,]  141 #>  [7284,]  141 #>  [7285,]  141 #>  [7286,]  140 #>  [7287,]  141 #>  [7288,]  140 #>  [7289,]  141 #>  [7290,]  141 #>  [7291,]  141 #>  [7292,]  140 #>  [7293,]  141 #>  [7294,]  141 #>  [7295,]  140 #>  [7296,]  140 #>  [7297,]  140 #>  [7298,]  140 #>  [7299,]  141 #>  [7300,]  141 #>  [7301,]  143 #>  [7302,]  142 #>  [7303,]  143 #>  [7304,]  143 #>  [7305,]  143 #>  [7306,]  142 #>  [7307,]  143 #>  [7308,]  143 #>  [7309,]  143 #>  [7310,]  143 #>  [7311,]  142 #>  [7312,]  142 #>  [7313,]  143 #>  [7314,]  143 #>  [7315,]  142 #>  [7316,]  143 #>  [7317,]  142 #>  [7318,]  143 #>  [7319,]  142 #>  [7320,]  143 #>  [7321,]  143 #>  [7322,]  143 #>  [7323,]  142 #>  [7324,]  143 #>  [7325,]  143 #>  [7326,]  142 #>  [7327,]  143 #>  [7328,]  143 #>  [7329,]  142 #>  [7330,]  142 #>  [7331,]  142 #>  [7332,]  143 #>  [7333,]  143 #>  [7334,]  142 #>  [7335,]  142 #>  [7336,]  143 #>  [7337,]  142 #>  [7338,]  143 #>  [7339,]  143 #>  [7340,]  143 #>  [7341,]  143 #>  [7342,]  142 #>  [7343,]  142 #>  [7344,]  142 #>  [7345,]  143 #>  [7346,]  142 #>  [7347,]  142 #>  [7348,]  142 #>  [7349,]  143 #>  [7350,]  143 #>  [7351,]  142 #>  [7352,]  143 #>  [7353,]  143 #>  [7354,]  143 #>  [7355,]  143 #>  [7356,]  142 #>  [7357,]  143 #>  [7358,]  143 #>  [7359,]  143 #>  [7360,]  142 #>  [7361,]  142 #>  [7362,]  142 #>  [7363,]  142 #>  [7364,]  142 #>  [7365,]  142 #>  [7366,]  142 #>  [7367,]  143 #>  [7368,]  142 #>  [7369,]  142 #>  [7370,]  142 #>  [7371,]  143 #>  [7372,]  143 #>  [7373,]  143 #>  [7374,]  143 #>  [7375,]  142 #>  [7376,]  143 #>  [7377,]  143 #>  [7378,]  142 #>  [7379,]  142 #>  [7380,]  143 #>  [7381,]  142 #>  [7382,]  143 #>  [7383,]  143 #>  [7384,]  143 #>  [7385,]  143 #>  [7386,]  143 #>  [7387,]  143 #>  [7388,]  143 #>  [7389,]  143 #>  [7390,]  143 #>  [7391,]  143 #>  [7392,]  142 #>  [7393,]  142 #>  [7394,]  142 #>  [7395,]  142 #>  [7396,]  142 #>  [7397,]  143 #>  [7398,]  143 #>  [7399,]  143 #>  [7400,]  142 #>  [7401,]  144 #>  [7402,]  145 #>  [7403,]  145 #>  [7404,]  144 #>  [7405,]  144 #>  [7406,]  145 #>  [7407,]  144 #>  [7408,]  144 #>  [7409,]  144 #>  [7410,]  144 #>  [7411,]  144 #>  [7412,]  145 #>  [7413,]  144 #>  [7414,]  144 #>  [7415,]  144 #>  [7416,]  144 #>  [7417,]  144 #>  [7418,]  145 #>  [7419,]  145 #>  [7420,]  145 #>  [7421,]  144 #>  [7422,]  144 #>  [7423,]  144 #>  [7424,]  144 #>  [7425,]  145 #>  [7426,]  144 #>  [7427,]  144 #>  [7428,]  145 #>  [7429,]  144 #>  [7430,]  144 #>  [7431,]  144 #>  [7432,]  144 #>  [7433,]  145 #>  [7434,]  145 #>  [7435,]  144 #>  [7436,]  144 #>  [7437,]  144 #>  [7438,]  144 #>  [7439,]  144 #>  [7440,]  144 #>  [7441,]  144 #>  [7442,]  144 #>  [7443,]  144 #>  [7444,]  144 #>  [7445,]  144 #>  [7446,]  144 #>  [7447,]  144 #>  [7448,]  144 #>  [7449,]  144 #>  [7450,]  144 #>  [7451,]  144 #>  [7452,]  144 #>  [7453,]  144 #>  [7454,]  144 #>  [7455,]  144 #>  [7456,]  144 #>  [7457,]  144 #>  [7458,]  144 #>  [7459,]  144 #>  [7460,]  145 #>  [7461,]  144 #>  [7462,]  144 #>  [7463,]  144 #>  [7464,]  144 #>  [7465,]  145 #>  [7466,]  144 #>  [7467,]  144 #>  [7468,]  144 #>  [7469,]  144 #>  [7470,]  145 #>  [7471,]  145 #>  [7472,]  144 #>  [7473,]  145 #>  [7474,]  144 #>  [7475,]  144 #>  [7476,]  144 #>  [7477,]  144 #>  [7478,]  144 #>  [7479,]  144 #>  [7480,]  144 #>  [7481,]  144 #>  [7482,]  144 #>  [7483,]  144 #>  [7484,]  145 #>  [7485,]  144 #>  [7486,]  144 #>  [7487,]  144 #>  [7488,]  144 #>  [7489,]  144 #>  [7490,]  144 #>  [7491,]  144 #>  [7492,]  144 #>  [7493,]  145 #>  [7494,]  144 #>  [7495,]  144 #>  [7496,]  144 #>  [7497,]  145 #>  [7498,]  145 #>  [7499,]  144 #>  [7500,]  144 #>  [7501,]  146 #>  [7502,]  147 #>  [7503,]  146 #>  [7504,]  146 #>  [7505,]  147 #>  [7506,]  146 #>  [7507,]  147 #>  [7508,]  146 #>  [7509,]  147 #>  [7510,]  147 #>  [7511,]  146 #>  [7512,]  147 #>  [7513,]  147 #>  [7514,]  146 #>  [7515,]  147 #>  [7516,]  146 #>  [7517,]  147 #>  [7518,]  147 #>  [7519,]  146 #>  [7520,]  147 #>  [7521,]  147 #>  [7522,]  147 #>  [7523,]  147 #>  [7524,]  147 #>  [7525,]  147 #>  [7526,]  146 #>  [7527,]  147 #>  [7528,]  146 #>  [7529,]  147 #>  [7530,]  147 #>  [7531,]  147 #>  [7532,]  147 #>  [7533,]  147 #>  [7534,]  146 #>  [7535,]  146 #>  [7536,]  147 #>  [7537,]  146 #>  [7538,]  146 #>  [7539,]  147 #>  [7540,]  147 #>  [7541,]  147 #>  [7542,]  146 #>  [7543,]  147 #>  [7544,]  147 #>  [7545,]  146 #>  [7546,]  147 #>  [7547,]  147 #>  [7548,]  147 #>  [7549,]  146 #>  [7550,]  147 #>  [7551,]  147 #>  [7552,]  146 #>  [7553,]  147 #>  [7554,]  147 #>  [7555,]  146 #>  [7556,]  146 #>  [7557,]  147 #>  [7558,]  147 #>  [7559,]  146 #>  [7560,]  147 #>  [7561,]  147 #>  [7562,]  146 #>  [7563,]  147 #>  [7564,]  146 #>  [7565,]  146 #>  [7566,]  147 #>  [7567,]  147 #>  [7568,]  146 #>  [7569,]  146 #>  [7570,]  147 #>  [7571,]  147 #>  [7572,]  146 #>  [7573,]  146 #>  [7574,]  147 #>  [7575,]  147 #>  [7576,]  147 #>  [7577,]  146 #>  [7578,]  147 #>  [7579,]  146 #>  [7580,]  147 #>  [7581,]  147 #>  [7582,]  147 #>  [7583,]  147 #>  [7584,]  147 #>  [7585,]  147 #>  [7586,]  147 #>  [7587,]  147 #>  [7588,]  147 #>  [7589,]  146 #>  [7590,]  147 #>  [7591,]  146 #>  [7592,]  147 #>  [7593,]  147 #>  [7594,]  146 #>  [7595,]  147 #>  [7596,]  146 #>  [7597,]  146 #>  [7598,]  147 #>  [7599,]  147 #>  [7600,]  146 #>  [7601,]  148 #>  [7602,]  149 #>  [7603,]  148 #>  [7604,]  148 #>  [7605,]  148 #>  [7606,]  148 #>  [7607,]  148 #>  [7608,]  148 #>  [7609,]  149 #>  [7610,]  149 #>  [7611,]  148 #>  [7612,]  149 #>  [7613,]  149 #>  [7614,]  148 #>  [7615,]  148 #>  [7616,]  148 #>  [7617,]  149 #>  [7618,]  148 #>  [7619,]  148 #>  [7620,]  148 #>  [7621,]  149 #>  [7622,]  148 #>  [7623,]  148 #>  [7624,]  149 #>  [7625,]  148 #>  [7626,]  148 #>  [7627,]  148 #>  [7628,]  148 #>  [7629,]  149 #>  [7630,]  148 #>  [7631,]  148 #>  [7632,]  149 #>  [7633,]  149 #>  [7634,]  148 #>  [7635,]  148 #>  [7636,]  148 #>  [7637,]  148 #>  [7638,]  148 #>  [7639,]  148 #>  [7640,]  149 #>  [7641,]  148 #>  [7642,]  148 #>  [7643,]  148 #>  [7644,]  148 #>  [7645,]  148 #>  [7646,]  148 #>  [7647,]  148 #>  [7648,]  148 #>  [7649,]  148 #>  [7650,]  148 #>  [7651,]  148 #>  [7652,]  148 #>  [7653,]  149 #>  [7654,]  148 #>  [7655,]  148 #>  [7656,]  148 #>  [7657,]  148 #>  [7658,]  148 #>  [7659,]  148 #>  [7660,]  149 #>  [7661,]  149 #>  [7662,]  148 #>  [7663,]  149 #>  [7664,]  148 #>  [7665,]  148 #>  [7666,]  148 #>  [7667,]  148 #>  [7668,]  148 #>  [7669,]  148 #>  [7670,]  149 #>  [7671,]  148 #>  [7672,]  148 #>  [7673,]  148 #>  [7674,]  148 #>  [7675,]  149 #>  [7676,]  148 #>  [7677,]  148 #>  [7678,]  148 #>  [7679,]  148 #>  [7680,]  149 #>  [7681,]  149 #>  [7682,]  148 #>  [7683,]  149 #>  [7684,]  148 #>  [7685,]  148 #>  [7686,]  149 #>  [7687,]  148 #>  [7688,]  148 #>  [7689,]  148 #>  [7690,]  148 #>  [7691,]  148 #>  [7692,]  148 #>  [7693,]  148 #>  [7694,]  148 #>  [7695,]  148 #>  [7696,]  148 #>  [7697,]  148 #>  [7698,]  148 #>  [7699,]  148 #>  [7700,]  148 #>  [7701,]  151 #>  [7702,]  151 #>  [7703,]  151 #>  [7704,]  150 #>  [7705,]  151 #>  [7706,]  151 #>  [7707,]  151 #>  [7708,]  150 #>  [7709,]  150 #>  [7710,]  150 #>  [7711,]  151 #>  [7712,]  151 #>  [7713,]  151 #>  [7714,]  151 #>  [7715,]  151 #>  [7716,]  151 #>  [7717,]  151 #>  [7718,]  151 #>  [7719,]  151 #>  [7720,]  151 #>  [7721,]  151 #>  [7722,]  151 #>  [7723,]  151 #>  [7724,]  151 #>  [7725,]  151 #>  [7726,]  151 #>  [7727,]  151 #>  [7728,]  151 #>  [7729,]  151 #>  [7730,]  151 #>  [7731,]  151 #>  [7732,]  151 #>  [7733,]  151 #>  [7734,]  151 #>  [7735,]  151 #>  [7736,]  151 #>  [7737,]  151 #>  [7738,]  151 #>  [7739,]  151 #>  [7740,]  151 #>  [7741,]  151 #>  [7742,]  151 #>  [7743,]  150 #>  [7744,]  151 #>  [7745,]  151 #>  [7746,]  151 #>  [7747,]  151 #>  [7748,]  151 #>  [7749,]  151 #>  [7750,]  151 #>  [7751,]  150 #>  [7752,]  151 #>  [7753,]  151 #>  [7754,]  151 #>  [7755,]  151 #>  [7756,]  151 #>  [7757,]  151 #>  [7758,]  151 #>  [7759,]  151 #>  [7760,]  150 #>  [7761,]  151 #>  [7762,]  151 #>  [7763,]  151 #>  [7764,]  150 #>  [7765,]  151 #>  [7766,]  151 #>  [7767,]  150 #>  [7768,]  151 #>  [7769,]  151 #>  [7770,]  151 #>  [7771,]  151 #>  [7772,]  151 #>  [7773,]  151 #>  [7774,]  151 #>  [7775,]  151 #>  [7776,]  151 #>  [7777,]  151 #>  [7778,]  151 #>  [7779,]  151 #>  [7780,]  151 #>  [7781,]  151 #>  [7782,]  151 #>  [7783,]  151 #>  [7784,]  151 #>  [7785,]  150 #>  [7786,]  151 #>  [7787,]  151 #>  [7788,]  151 #>  [7789,]  151 #>  [7790,]  151 #>  [7791,]  150 #>  [7792,]  151 #>  [7793,]  151 #>  [7794,]  151 #>  [7795,]  150 #>  [7796,]  151 #>  [7797,]  151 #>  [7798,]  151 #>  [7799,]  151 #>  [7800,]  151 #>  [7801,]  153 #>  [7802,]  153 #>  [7803,]  152 #>  [7804,]  153 #>  [7805,]  153 #>  [7806,]  152 #>  [7807,]  153 #>  [7808,]  153 #>  [7809,]  153 #>  [7810,]  153 #>  [7811,]  153 #>  [7812,]  153 #>  [7813,]  153 #>  [7814,]  153 #>  [7815,]  153 #>  [7816,]  153 #>  [7817,]  153 #>  [7818,]  153 #>  [7819,]  152 #>  [7820,]  153 #>  [7821,]  153 #>  [7822,]  153 #>  [7823,]  153 #>  [7824,]  153 #>  [7825,]  153 #>  [7826,]  153 #>  [7827,]  153 #>  [7828,]  153 #>  [7829,]  153 #>  [7830,]  153 #>  [7831,]  153 #>  [7832,]  153 #>  [7833,]  153 #>  [7834,]  152 #>  [7835,]  153 #>  [7836,]  153 #>  [7837,]  152 #>  [7838,]  152 #>  [7839,]  153 #>  [7840,]  153 #>  [7841,]  153 #>  [7842,]  153 #>  [7843,]  153 #>  [7844,]  153 #>  [7845,]  152 #>  [7846,]  153 #>  [7847,]  153 #>  [7848,]  153 #>  [7849,]  152 #>  [7850,]  153 #>  [7851,]  153 #>  [7852,]  152 #>  [7853,]  153 #>  [7854,]  153 #>  [7855,]  153 #>  [7856,]  153 #>  [7857,]  153 #>  [7858,]  153 #>  [7859,]  153 #>  [7860,]  153 #>  [7861,]  153 #>  [7862,]  153 #>  [7863,]  153 #>  [7864,]  153 #>  [7865,]  153 #>  [7866,]  153 #>  [7867,]  153 #>  [7868,]  152 #>  [7869,]  153 #>  [7870,]  153 #>  [7871,]  153 #>  [7872,]  152 #>  [7873,]  153 #>  [7874,]  153 #>  [7875,]  153 #>  [7876,]  153 #>  [7877,]  153 #>  [7878,]  153 #>  [7879,]  153 #>  [7880,]  153 #>  [7881,]  153 #>  [7882,]  153 #>  [7883,]  153 #>  [7884,]  153 #>  [7885,]  153 #>  [7886,]  153 #>  [7887,]  153 #>  [7888,]  153 #>  [7889,]  153 #>  [7890,]  153 #>  [7891,]  153 #>  [7892,]  153 #>  [7893,]  153 #>  [7894,]  153 #>  [7895,]  153 #>  [7896,]  152 #>  [7897,]  153 #>  [7898,]  153 #>  [7899,]  153 #>  [7900,]  153 #>  [7901,]  154 #>  [7902,]  154 #>  [7903,]  154 #>  [7904,]  155 #>  [7905,]  154 #>  [7906,]  154 #>  [7907,]  155 #>  [7908,]  154 #>  [7909,]  154 #>  [7910,]  155 #>  [7911,]  154 #>  [7912,]  154 #>  [7913,]  155 #>  [7914,]  154 #>  [7915,]  155 #>  [7916,]  155 #>  [7917,]  155 #>  [7918,]  155 #>  [7919,]  154 #>  [7920,]  154 #>  [7921,]  155 #>  [7922,]  154 #>  [7923,]  155 #>  [7924,]  154 #>  [7925,]  155 #>  [7926,]  154 #>  [7927,]  155 #>  [7928,]  155 #>  [7929,]  154 #>  [7930,]  154 #>  [7931,]  154 #>  [7932,]  154 #>  [7933,]  154 #>  [7934,]  154 #>  [7935,]  154 #>  [7936,]  154 #>  [7937,]  154 #>  [7938,]  154 #>  [7939,]  155 #>  [7940,]  154 #>  [7941,]  154 #>  [7942,]  154 #>  [7943,]  155 #>  [7944,]  154 #>  [7945,]  155 #>  [7946,]  155 #>  [7947,]  155 #>  [7948,]  154 #>  [7949,]  154 #>  [7950,]  154 #>  [7951,]  154 #>  [7952,]  154 #>  [7953,]  155 #>  [7954,]  154 #>  [7955,]  154 #>  [7956,]  155 #>  [7957,]  154 #>  [7958,]  154 #>  [7959,]  154 #>  [7960,]  154 #>  [7961,]  155 #>  [7962,]  154 #>  [7963,]  154 #>  [7964,]  155 #>  [7965,]  154 #>  [7966,]  154 #>  [7967,]  154 #>  [7968,]  154 #>  [7969,]  154 #>  [7970,]  154 #>  [7971,]  155 #>  [7972,]  155 #>  [7973,]  155 #>  [7974,]  155 #>  [7975,]  155 #>  [7976,]  155 #>  [7977,]  155 #>  [7978,]  154 #>  [7979,]  154 #>  [7980,]  154 #>  [7981,]  154 #>  [7982,]  155 #>  [7983,]  154 #>  [7984,]  155 #>  [7985,]  154 #>  [7986,]  154 #>  [7987,]  154 #>  [7988,]  155 #>  [7989,]  154 #>  [7990,]  154 #>  [7991,]  154 #>  [7992,]  154 #>  [7993,]  154 #>  [7994,]  155 #>  [7995,]  155 #>  [7996,]  154 #>  [7997,]  154 #>  [7998,]  154 #>  [7999,]  154 #>  [8000,]  155 #>  [8001,]  157 #>  [8002,]  157 #>  [8003,]  157 #>  [8004,]  157 #>  [8005,]  157 #>  [8006,]  157 #>  [8007,]  157 #>  [8008,]  157 #>  [8009,]  157 #>  [8010,]  156 #>  [8011,]  156 #>  [8012,]  157 #>  [8013,]  157 #>  [8014,]  156 #>  [8015,]  157 #>  [8016,]  157 #>  [8017,]  157 #>  [8018,]  157 #>  [8019,]  157 #>  [8020,]  157 #>  [8021,]  157 #>  [8022,]  157 #>  [8023,]  157 #>  [8024,]  157 #>  [8025,]  157 #>  [8026,]  157 #>  [8027,]  157 #>  [8028,]  157 #>  [8029,]  157 #>  [8030,]  157 #>  [8031,]  157 #>  [8032,]  157 #>  [8033,]  157 #>  [8034,]  157 #>  [8035,]  157 #>  [8036,]  157 #>  [8037,]  157 #>  [8038,]  157 #>  [8039,]  157 #>  [8040,]  156 #>  [8041,]  157 #>  [8042,]  157 #>  [8043,]  157 #>  [8044,]  157 #>  [8045,]  157 #>  [8046,]  157 #>  [8047,]  157 #>  [8048,]  156 #>  [8049,]  157 #>  [8050,]  157 #>  [8051,]  157 #>  [8052,]  157 #>  [8053,]  157 #>  [8054,]  157 #>  [8055,]  157 #>  [8056,]  157 #>  [8057,]  157 #>  [8058,]  157 #>  [8059,]  157 #>  [8060,]  157 #>  [8061,]  157 #>  [8062,]  157 #>  [8063,]  157 #>  [8064,]  157 #>  [8065,]  157 #>  [8066,]  157 #>  [8067,]  157 #>  [8068,]  157 #>  [8069,]  157 #>  [8070,]  156 #>  [8071,]  157 #>  [8072,]  157 #>  [8073,]  157 #>  [8074,]  157 #>  [8075,]  157 #>  [8076,]  157 #>  [8077,]  157 #>  [8078,]  157 #>  [8079,]  157 #>  [8080,]  157 #>  [8081,]  157 #>  [8082,]  157 #>  [8083,]  157 #>  [8084,]  157 #>  [8085,]  157 #>  [8086,]  157 #>  [8087,]  157 #>  [8088,]  157 #>  [8089,]  157 #>  [8090,]  157 #>  [8091,]  157 #>  [8092,]  157 #>  [8093,]  157 #>  [8094,]  157 #>  [8095,]  157 #>  [8096,]  157 #>  [8097,]  157 #>  [8098,]  157 #>  [8099,]  157 #>  [8100,]  157 #>  [8101,]  159 #>  [8102,]  159 #>  [8103,]  158 #>  [8104,]  158 #>  [8105,]  158 #>  [8106,]  159 #>  [8107,]  158 #>  [8108,]  158 #>  [8109,]  158 #>  [8110,]  158 #>  [8111,]  159 #>  [8112,]  158 #>  [8113,]  159 #>  [8114,]  159 #>  [8115,]  159 #>  [8116,]  159 #>  [8117,]  159 #>  [8118,]  158 #>  [8119,]  159 #>  [8120,]  158 #>  [8121,]  159 #>  [8122,]  159 #>  [8123,]  158 #>  [8124,]  158 #>  [8125,]  158 #>  [8126,]  159 #>  [8127,]  159 #>  [8128,]  158 #>  [8129,]  159 #>  [8130,]  158 #>  [8131,]  158 #>  [8132,]  158 #>  [8133,]  159 #>  [8134,]  158 #>  [8135,]  159 #>  [8136,]  158 #>  [8137,]  159 #>  [8138,]  158 #>  [8139,]  158 #>  [8140,]  158 #>  [8141,]  159 #>  [8142,]  158 #>  [8143,]  158 #>  [8144,]  159 #>  [8145,]  158 #>  [8146,]  158 #>  [8147,]  159 #>  [8148,]  158 #>  [8149,]  158 #>  [8150,]  159 #>  [8151,]  158 #>  [8152,]  159 #>  [8153,]  158 #>  [8154,]  158 #>  [8155,]  159 #>  [8156,]  158 #>  [8157,]  158 #>  [8158,]  159 #>  [8159,]  159 #>  [8160,]  158 #>  [8161,]  159 #>  [8162,]  158 #>  [8163,]  158 #>  [8164,]  158 #>  [8165,]  158 #>  [8166,]  158 #>  [8167,]  158 #>  [8168,]  159 #>  [8169,]  159 #>  [8170,]  159 #>  [8171,]  159 #>  [8172,]  158 #>  [8173,]  159 #>  [8174,]  159 #>  [8175,]  159 #>  [8176,]  159 #>  [8177,]  159 #>  [8178,]  158 #>  [8179,]  159 #>  [8180,]  158 #>  [8181,]  159 #>  [8182,]  158 #>  [8183,]  159 #>  [8184,]  159 #>  [8185,]  158 #>  [8186,]  159 #>  [8187,]  159 #>  [8188,]  158 #>  [8189,]  158 #>  [8190,]  159 #>  [8191,]  158 #>  [8192,]  159 #>  [8193,]  159 #>  [8194,]  159 #>  [8195,]  158 #>  [8196,]  159 #>  [8197,]  159 #>  [8198,]  159 #>  [8199,]  159 #>  [8200,]  159 #>  [8201,]  161 #>  [8202,]  161 #>  [8203,]  161 #>  [8204,]  160 #>  [8205,]  161 #>  [8206,]  161 #>  [8207,]  161 #>  [8208,]  160 #>  [8209,]  160 #>  [8210,]  160 #>  [8211,]  161 #>  [8212,]  161 #>  [8213,]  161 #>  [8214,]  161 #>  [8215,]  161 #>  [8216,]  161 #>  [8217,]  161 #>  [8218,]  161 #>  [8219,]  161 #>  [8220,]  161 #>  [8221,]  161 #>  [8222,]  161 #>  [8223,]  161 #>  [8224,]  161 #>  [8225,]  161 #>  [8226,]  161 #>  [8227,]  161 #>  [8228,]  161 #>  [8229,]  161 #>  [8230,]  161 #>  [8231,]  161 #>  [8232,]  161 #>  [8233,]  161 #>  [8234,]  161 #>  [8235,]  161 #>  [8236,]  161 #>  [8237,]  161 #>  [8238,]  161 #>  [8239,]  161 #>  [8240,]  161 #>  [8241,]  161 #>  [8242,]  161 #>  [8243,]  160 #>  [8244,]  161 #>  [8245,]  161 #>  [8246,]  161 #>  [8247,]  161 #>  [8248,]  161 #>  [8249,]  161 #>  [8250,]  161 #>  [8251,]  160 #>  [8252,]  161 #>  [8253,]  161 #>  [8254,]  161 #>  [8255,]  161 #>  [8256,]  161 #>  [8257,]  161 #>  [8258,]  161 #>  [8259,]  161 #>  [8260,]  160 #>  [8261,]  161 #>  [8262,]  161 #>  [8263,]  161 #>  [8264,]  161 #>  [8265,]  161 #>  [8266,]  161 #>  [8267,]  161 #>  [8268,]  161 #>  [8269,]  161 #>  [8270,]  161 #>  [8271,]  161 #>  [8272,]  161 #>  [8273,]  161 #>  [8274,]  161 #>  [8275,]  161 #>  [8276,]  161 #>  [8277,]  161 #>  [8278,]  161 #>  [8279,]  161 #>  [8280,]  161 #>  [8281,]  161 #>  [8282,]  161 #>  [8283,]  161 #>  [8284,]  161 #>  [8285,]  160 #>  [8286,]  161 #>  [8287,]  161 #>  [8288,]  161 #>  [8289,]  161 #>  [8290,]  161 #>  [8291,]  160 #>  [8292,]  161 #>  [8293,]  161 #>  [8294,]  161 #>  [8295,]  160 #>  [8296,]  161 #>  [8297,]  161 #>  [8298,]  161 #>  [8299,]  161 #>  [8300,]  161 #>  [8301,]  162 #>  [8302,]  163 #>  [8303,]  162 #>  [8304,]  162 #>  [8305,]  162 #>  [8306,]  162 #>  [8307,]  162 #>  [8308,]  162 #>  [8309,]  163 #>  [8310,]  163 #>  [8311,]  162 #>  [8312,]  163 #>  [8313,]  163 #>  [8314,]  162 #>  [8315,]  162 #>  [8316,]  162 #>  [8317,]  163 #>  [8318,]  162 #>  [8319,]  162 #>  [8320,]  162 #>  [8321,]  163 #>  [8322,]  162 #>  [8323,]  162 #>  [8324,]  162 #>  [8325,]  162 #>  [8326,]  162 #>  [8327,]  162 #>  [8328,]  162 #>  [8329,]  163 #>  [8330,]  162 #>  [8331,]  162 #>  [8332,]  163 #>  [8333,]  163 #>  [8334,]  162 #>  [8335,]  162 #>  [8336,]  162 #>  [8337,]  162 #>  [8338,]  162 #>  [8339,]  162 #>  [8340,]  163 #>  [8341,]  162 #>  [8342,]  162 #>  [8343,]  162 #>  [8344,]  162 #>  [8345,]  162 #>  [8346,]  162 #>  [8347,]  162 #>  [8348,]  162 #>  [8349,]  162 #>  [8350,]  162 #>  [8351,]  162 #>  [8352,]  162 #>  [8353,]  163 #>  [8354,]  162 #>  [8355,]  162 #>  [8356,]  162 #>  [8357,]  162 #>  [8358,]  162 #>  [8359,]  162 #>  [8360,]  163 #>  [8361,]  162 #>  [8362,]  162 #>  [8363,]  163 #>  [8364,]  162 #>  [8365,]  162 #>  [8366,]  162 #>  [8367,]  162 #>  [8368,]  162 #>  [8369,]  162 #>  [8370,]  163 #>  [8371,]  162 #>  [8372,]  162 #>  [8373,]  162 #>  [8374,]  162 #>  [8375,]  163 #>  [8376,]  162 #>  [8377,]  162 #>  [8378,]  162 #>  [8379,]  162 #>  [8380,]  163 #>  [8381,]  163 #>  [8382,]  162 #>  [8383,]  162 #>  [8384,]  162 #>  [8385,]  162 #>  [8386,]  163 #>  [8387,]  162 #>  [8388,]  162 #>  [8389,]  162 #>  [8390,]  162 #>  [8391,]  162 #>  [8392,]  162 #>  [8393,]  162 #>  [8394,]  162 #>  [8395,]  162 #>  [8396,]  162 #>  [8397,]  162 #>  [8398,]  162 #>  [8399,]  162 #>  [8400,]  162 #>  [8401,]  164 #>  [8402,]  164 #>  [8403,]  164 #>  [8404,]  164 #>  [8405,]  164 #>  [8406,]  164 #>  [8407,]  165 #>  [8408,]  164 #>  [8409,]  164 #>  [8410,]  164 #>  [8411,]  164 #>  [8412,]  164 #>  [8413,]  164 #>  [8414,]  164 #>  [8415,]  164 #>  [8416,]  164 #>  [8417,]  164 #>  [8418,]  164 #>  [8419,]  164 #>  [8420,]  165 #>  [8421,]  164 #>  [8422,]  164 #>  [8423,]  164 #>  [8424,]  165 #>  [8425,]  164 #>  [8426,]  164 #>  [8427,]  164 #>  [8428,]  165 #>  [8429,]  164 #>  [8430,]  164 #>  [8431,]  164 #>  [8432,]  164 #>  [8433,]  164 #>  [8434,]  164 #>  [8435,]  164 #>  [8436,]  164 #>  [8437,]  164 #>  [8438,]  164 #>  [8439,]  164 #>  [8440,]  164 #>  [8441,]  164 #>  [8442,]  164 #>  [8443,]  164 #>  [8444,]  164 #>  [8445,]  164 #>  [8446,]  164 #>  [8447,]  164 #>  [8448,]  164 #>  [8449,]  164 #>  [8450,]  165 #>  [8451,]  164 #>  [8452,]  165 #>  [8453,]  164 #>  [8454,]  164 #>  [8455,]  164 #>  [8456,]  164 #>  [8457,]  164 #>  [8458,]  164 #>  [8459,]  164 #>  [8460,]  164 #>  [8461,]  164 #>  [8462,]  164 #>  [8463,]  164 #>  [8464,]  164 #>  [8465,]  164 #>  [8466,]  164 #>  [8467,]  164 #>  [8468,]  164 #>  [8469,]  164 #>  [8470,]  164 #>  [8471,]  164 #>  [8472,]  164 #>  [8473,]  164 #>  [8474,]  164 #>  [8475,]  164 #>  [8476,]  165 #>  [8477,]  164 #>  [8478,]  164 #>  [8479,]  164 #>  [8480,]  164 #>  [8481,]  164 #>  [8482,]  164 #>  [8483,]  164 #>  [8484,]  164 #>  [8485,]  164 #>  [8486,]  165 #>  [8487,]  164 #>  [8488,]  164 #>  [8489,]  164 #>  [8490,]  164 #>  [8491,]  164 #>  [8492,]  164 #>  [8493,]  164 #>  [8494,]  164 #>  [8495,]  164 #>  [8496,]  164 #>  [8497,]  164 #>  [8498,]  164 #>  [8499,]  164 #>  [8500,]  164 #>  [8501,]  166 #>  [8502,]  166 #>  [8503,]  167 #>  [8504,]  166 #>  [8505,]  166 #>  [8506,]  167 #>  [8507,]  166 #>  [8508,]  166 #>  [8509,]  166 #>  [8510,]  166 #>  [8511,]  166 #>  [8512,]  166 #>  [8513,]  166 #>  [8514,]  166 #>  [8515,]  166 #>  [8516,]  166 #>  [8517,]  166 #>  [8518,]  166 #>  [8519,]  166 #>  [8520,]  166 #>  [8521,]  166 #>  [8522,]  166 #>  [8523,]  166 #>  [8524,]  166 #>  [8525,]  166 #>  [8526,]  166 #>  [8527,]  166 #>  [8528,]  166 #>  [8529,]  166 #>  [8530,]  166 #>  [8531,]  166 #>  [8532,]  166 #>  [8533,]  166 #>  [8534,]  167 #>  [8535,]  166 #>  [8536,]  166 #>  [8537,]  166 #>  [8538,]  166 #>  [8539,]  166 #>  [8540,]  166 #>  [8541,]  166 #>  [8542,]  166 #>  [8543,]  166 #>  [8544,]  166 #>  [8545,]  166 #>  [8546,]  166 #>  [8547,]  166 #>  [8548,]  166 #>  [8549,]  166 #>  [8550,]  166 #>  [8551,]  166 #>  [8552,]  166 #>  [8553,]  166 #>  [8554,]  166 #>  [8555,]  166 #>  [8556,]  166 #>  [8557,]  166 #>  [8558,]  166 #>  [8559,]  166 #>  [8560,]  167 #>  [8561,]  166 #>  [8562,]  166 #>  [8563,]  166 #>  [8564,]  166 #>  [8565,]  167 #>  [8566,]  166 #>  [8567,]  166 #>  [8568,]  166 #>  [8569,]  166 #>  [8570,]  167 #>  [8571,]  166 #>  [8572,]  166 #>  [8573,]  167 #>  [8574,]  166 #>  [8575,]  166 #>  [8576,]  166 #>  [8577,]  166 #>  [8578,]  166 #>  [8579,]  166 #>  [8580,]  166 #>  [8581,]  166 #>  [8582,]  166 #>  [8583,]  166 #>  [8584,]  166 #>  [8585,]  166 #>  [8586,]  166 #>  [8587,]  166 #>  [8588,]  166 #>  [8589,]  166 #>  [8590,]  166 #>  [8591,]  166 #>  [8592,]  166 #>  [8593,]  167 #>  [8594,]  166 #>  [8595,]  166 #>  [8596,]  166 #>  [8597,]  166 #>  [8598,]  166 #>  [8599,]  166 #>  [8600,]  166 #>  [8601,]  169 #>  [8602,]  169 #>  [8603,]  168 #>  [8604,]  169 #>  [8605,]  169 #>  [8606,]  169 #>  [8607,]  168 #>  [8608,]  168 #>  [8609,]  169 #>  [8610,]  169 #>  [8611,]  169 #>  [8612,]  169 #>  [8613,]  169 #>  [8614,]  169 #>  [8615,]  169 #>  [8616,]  169 #>  [8617,]  169 #>  [8618,]  169 #>  [8619,]  169 #>  [8620,]  168 #>  [8621,]  169 #>  [8622,]  169 #>  [8623,]  169 #>  [8624,]  169 #>  [8625,]  168 #>  [8626,]  169 #>  [8627,]  169 #>  [8628,]  169 #>  [8629,]  169 #>  [8630,]  169 #>  [8631,]  169 #>  [8632,]  169 #>  [8633,]  169 #>  [8634,]  169 #>  [8635,]  169 #>  [8636,]  169 #>  [8637,]  169 #>  [8638,]  169 #>  [8639,]  168 #>  [8640,]  169 #>  [8641,]  169 #>  [8642,]  169 #>  [8643,]  169 #>  [8644,]  168 #>  [8645,]  169 #>  [8646,]  168 #>  [8647,]  169 #>  [8648,]  169 #>  [8649,]  168 #>  [8650,]  168 #>  [8651,]  169 #>  [8652,]  169 #>  [8653,]  168 #>  [8654,]  169 #>  [8655,]  168 #>  [8656,]  168 #>  [8657,]  169 #>  [8658,]  169 #>  [8659,]  168 #>  [8660,]  169 #>  [8661,]  169 #>  [8662,]  169 #>  [8663,]  169 #>  [8664,]  169 #>  [8665,]  168 #>  [8666,]  168 #>  [8667,]  169 #>  [8668,]  169 #>  [8669,]  169 #>  [8670,]  168 #>  [8671,]  169 #>  [8672,]  169 #>  [8673,]  169 #>  [8674,]  169 #>  [8675,]  169 #>  [8676,]  169 #>  [8677,]  169 #>  [8678,]  169 #>  [8679,]  169 #>  [8680,]  169 #>  [8681,]  169 #>  [8682,]  169 #>  [8683,]  169 #>  [8684,]  168 #>  [8685,]  169 #>  [8686,]  168 #>  [8687,]  169 #>  [8688,]  169 #>  [8689,]  169 #>  [8690,]  168 #>  [8691,]  169 #>  [8692,]  169 #>  [8693,]  169 #>  [8694,]  169 #>  [8695,]  169 #>  [8696,]  169 #>  [8697,]  169 #>  [8698,]  168 #>  [8699,]  169 #>  [8700,]  168 #>  [8701,]  171 #>  [8702,]  171 #>  [8703,]  170 #>  [8704,]  170 #>  [8705,]  171 #>  [8706,]  171 #>  [8707,]  170 #>  [8708,]  170 #>  [8709,]  171 #>  [8710,]  171 #>  [8711,]  171 #>  [8712,]  170 #>  [8713,]  171 #>  [8714,]  171 #>  [8715,]  171 #>  [8716,]  171 #>  [8717,]  171 #>  [8718,]  171 #>  [8719,]  171 #>  [8720,]  171 #>  [8721,]  171 #>  [8722,]  171 #>  [8723,]  170 #>  [8724,]  171 #>  [8725,]  170 #>  [8726,]  171 #>  [8727,]  171 #>  [8728,]  171 #>  [8729,]  171 #>  [8730,]  171 #>  [8731,]  170 #>  [8732,]  171 #>  [8733,]  171 #>  [8734,]  171 #>  [8735,]  171 #>  [8736,]  171 #>  [8737,]  170 #>  [8738,]  171 #>  [8739,]  171 #>  [8740,]  170 #>  [8741,]  171 #>  [8742,]  171 #>  [8743,]  171 #>  [8744,]  171 #>  [8745,]  171 #>  [8746,]  170 #>  [8747,]  170 #>  [8748,]  171 #>  [8749,]  171 #>  [8750,]  171 #>  [8751,]  171 #>  [8752,]  170 #>  [8753,]  171 #>  [8754,]  171 #>  [8755,]  170 #>  [8756,]  171 #>  [8757,]  170 #>  [8758,]  171 #>  [8759,]  170 #>  [8760,]  170 #>  [8761,]  171 #>  [8762,]  171 #>  [8763,]  171 #>  [8764,]  171 #>  [8765,]  171 #>  [8766,]  171 #>  [8767,]  171 #>  [8768,]  170 #>  [8769,]  171 #>  [8770,]  171 #>  [8771,]  171 #>  [8772,]  171 #>  [8773,]  171 #>  [8774,]  170 #>  [8775,]  171 #>  [8776,]  171 #>  [8777,]  171 #>  [8778,]  171 #>  [8779,]  171 #>  [8780,]  170 #>  [8781,]  171 #>  [8782,]  171 #>  [8783,]  171 #>  [8784,]  171 #>  [8785,]  171 #>  [8786,]  170 #>  [8787,]  171 #>  [8788,]  171 #>  [8789,]  171 #>  [8790,]  171 #>  [8791,]  171 #>  [8792,]  170 #>  [8793,]  171 #>  [8794,]  171 #>  [8795,]  171 #>  [8796,]  170 #>  [8797,]  170 #>  [8798,]  170 #>  [8799,]  171 #>  [8800,]  171 #>  [8801,]  172 #>  [8802,]  172 #>  [8803,]  172 #>  [8804,]  172 #>  [8805,]  172 #>  [8806,]  173 #>  [8807,]  172 #>  [8808,]  173 #>  [8809,]  173 #>  [8810,]  172 #>  [8811,]  172 #>  [8812,]  173 #>  [8813,]  172 #>  [8814,]  172 #>  [8815,]  173 #>  [8816,]  172 #>  [8817,]  172 #>  [8818,]  172 #>  [8819,]  172 #>  [8820,]  172 #>  [8821,]  172 #>  [8822,]  172 #>  [8823,]  172 #>  [8824,]  172 #>  [8825,]  172 #>  [8826,]  173 #>  [8827,]  172 #>  [8828,]  172 #>  [8829,]  172 #>  [8830,]  172 #>  [8831,]  172 #>  [8832,]  172 #>  [8833,]  173 #>  [8834,]  172 #>  [8835,]  172 #>  [8836,]  172 #>  [8837,]  172 #>  [8838,]  172 #>  [8839,]  172 #>  [8840,]  172 #>  [8841,]  172 #>  [8842,]  172 #>  [8843,]  173 #>  [8844,]  172 #>  [8845,]  173 #>  [8846,]  173 #>  [8847,]  172 #>  [8848,]  172 #>  [8849,]  172 #>  [8850,]  172 #>  [8851,]  173 #>  [8852,]  172 #>  [8853,]  172 #>  [8854,]  172 #>  [8855,]  172 #>  [8856,]  173 #>  [8857,]  173 #>  [8858,]  172 #>  [8859,]  172 #>  [8860,]  172 #>  [8861,]  173 #>  [8862,]  172 #>  [8863,]  172 #>  [8864,]  173 #>  [8865,]  172 #>  [8866,]  173 #>  [8867,]  172 #>  [8868,]  173 #>  [8869,]  172 #>  [8870,]  172 #>  [8871,]  172 #>  [8872,]  172 #>  [8873,]  172 #>  [8874,]  172 #>  [8875,]  172 #>  [8876,]  173 #>  [8877,]  172 #>  [8878,]  172 #>  [8879,]  172 #>  [8880,]  172 #>  [8881,]  172 #>  [8882,]  172 #>  [8883,]  172 #>  [8884,]  172 #>  [8885,]  172 #>  [8886,]  172 #>  [8887,]  172 #>  [8888,]  172 #>  [8889,]  172 #>  [8890,]  172 #>  [8891,]  172 #>  [8892,]  172 #>  [8893,]  172 #>  [8894,]  173 #>  [8895,]  172 #>  [8896,]  173 #>  [8897,]  172 #>  [8898,]  172 #>  [8899,]  172 #>  [8900,]  172 #>  [8901,]  174 #>  [8902,]  175 #>  [8903,]  174 #>  [8904,]  174 #>  [8905,]  174 #>  [8906,]  174 #>  [8907,]  174 #>  [8908,]  174 #>  [8909,]  175 #>  [8910,]  175 #>  [8911,]  174 #>  [8912,]  175 #>  [8913,]  174 #>  [8914,]  174 #>  [8915,]  174 #>  [8916,]  174 #>  [8917,]  174 #>  [8918,]  174 #>  [8919,]  174 #>  [8920,]  174 #>  [8921,]  175 #>  [8922,]  174 #>  [8923,]  174 #>  [8924,]  174 #>  [8925,]  174 #>  [8926,]  174 #>  [8927,]  174 #>  [8928,]  174 #>  [8929,]  175 #>  [8930,]  174 #>  [8931,]  174 #>  [8932,]  174 #>  [8933,]  175 #>  [8934,]  174 #>  [8935,]  174 #>  [8936,]  174 #>  [8937,]  174 #>  [8938,]  174 #>  [8939,]  174 #>  [8940,]  174 #>  [8941,]  174 #>  [8942,]  174 #>  [8943,]  174 #>  [8944,]  174 #>  [8945,]  174 #>  [8946,]  174 #>  [8947,]  174 #>  [8948,]  174 #>  [8949,]  174 #>  [8950,]  174 #>  [8951,]  174 #>  [8952,]  174 #>  [8953,]  174 #>  [8954,]  174 #>  [8955,]  174 #>  [8956,]  174 #>  [8957,]  174 #>  [8958,]  174 #>  [8959,]  174 #>  [8960,]  174 #>  [8961,]  174 #>  [8962,]  174 #>  [8963,]  174 #>  [8964,]  174 #>  [8965,]  174 #>  [8966,]  174 #>  [8967,]  174 #>  [8968,]  174 #>  [8969,]  174 #>  [8970,]  175 #>  [8971,]  174 #>  [8972,]  174 #>  [8973,]  174 #>  [8974,]  174 #>  [8975,]  174 #>  [8976,]  174 #>  [8977,]  174 #>  [8978,]  174 #>  [8979,]  174 #>  [8980,]  174 #>  [8981,]  174 #>  [8982,]  174 #>  [8983,]  174 #>  [8984,]  174 #>  [8985,]  174 #>  [8986,]  175 #>  [8987,]  174 #>  [8988,]  174 #>  [8989,]  174 #>  [8990,]  174 #>  [8991,]  174 #>  [8992,]  174 #>  [8993,]  174 #>  [8994,]  174 #>  [8995,]  174 #>  [8996,]  174 #>  [8997,]  174 #>  [8998,]  174 #>  [8999,]  174 #>  [9000,]  174 #>  [9001,]  177 #>  [9002,]  176 #>  [9003,]  176 #>  [9004,]  177 #>  [9005,]  177 #>  [9006,]  176 #>  [9007,]  176 #>  [9008,]  176 #>  [9009,]  176 #>  [9010,]  177 #>  [9011,]  177 #>  [9012,]  177 #>  [9013,]  177 #>  [9014,]  177 #>  [9015,]  177 #>  [9016,]  177 #>  [9017,]  177 #>  [9018,]  177 #>  [9019,]  177 #>  [9020,]  176 #>  [9021,]  176 #>  [9022,]  177 #>  [9023,]  176 #>  [9024,]  177 #>  [9025,]  176 #>  [9026,]  177 #>  [9027,]  177 #>  [9028,]  177 #>  [9029,]  176 #>  [9030,]  177 #>  [9031,]  177 #>  [9032,]  177 #>  [9033,]  177 #>  [9034,]  176 #>  [9035,]  176 #>  [9036,]  176 #>  [9037,]  176 #>  [9038,]  177 #>  [9039,]  177 #>  [9040,]  176 #>  [9041,]  176 #>  [9042,]  176 #>  [9043,]  177 #>  [9044,]  176 #>  [9045,]  176 #>  [9046,]  177 #>  [9047,]  177 #>  [9048,]  177 #>  [9049,]  176 #>  [9050,]  176 #>  [9051,]  177 #>  [9052,]  177 #>  [9053,]  176 #>  [9054,]  176 #>  [9055,]  176 #>  [9056,]  176 #>  [9057,]  176 #>  [9058,]  177 #>  [9059,]  177 #>  [9060,]  176 #>  [9061,]  177 #>  [9062,]  176 #>  [9063,]  177 #>  [9064,]  176 #>  [9065,]  176 #>  [9066,]  177 #>  [9067,]  176 #>  [9068,]  177 #>  [9069,]  177 #>  [9070,]  177 #>  [9071,]  177 #>  [9072,]  176 #>  [9073,]  176 #>  [9074,]  176 #>  [9075,]  177 #>  [9076,]  176 #>  [9077,]  177 #>  [9078,]  177 #>  [9079,]  177 #>  [9080,]  176 #>  [9081,]  176 #>  [9082,]  176 #>  [9083,]  177 #>  [9084,]  176 #>  [9085,]  176 #>  [9086,]  176 #>  [9087,]  177 #>  [9088,]  176 #>  [9089,]  176 #>  [9090,]  177 #>  [9091,]  177 #>  [9092,]  177 #>  [9093,]  177 #>  [9094,]  176 #>  [9095,]  177 #>  [9096,]  177 #>  [9097,]  176 #>  [9098,]  176 #>  [9099,]  176 #>  [9100,]  177 #>  [9101,]  179 #>  [9102,]  179 #>  [9103,]  178 #>  [9104,]  178 #>  [9105,]  179 #>  [9106,]  179 #>  [9107,]  178 #>  [9108,]  178 #>  [9109,]  179 #>  [9110,]  179 #>  [9111,]  179 #>  [9112,]  178 #>  [9113,]  179 #>  [9114,]  179 #>  [9115,]  179 #>  [9116,]  179 #>  [9117,]  179 #>  [9118,]  179 #>  [9119,]  179 #>  [9120,]  179 #>  [9121,]  179 #>  [9122,]  179 #>  [9123,]  178 #>  [9124,]  179 #>  [9125,]  178 #>  [9126,]  179 #>  [9127,]  179 #>  [9128,]  179 #>  [9129,]  179 #>  [9130,]  179 #>  [9131,]  178 #>  [9132,]  179 #>  [9133,]  179 #>  [9134,]  179 #>  [9135,]  179 #>  [9136,]  179 #>  [9137,]  178 #>  [9138,]  179 #>  [9139,]  179 #>  [9140,]  178 #>  [9141,]  179 #>  [9142,]  179 #>  [9143,]  179 #>  [9144,]  179 #>  [9145,]  179 #>  [9146,]  178 #>  [9147,]  178 #>  [9148,]  179 #>  [9149,]  179 #>  [9150,]  179 #>  [9151,]  179 #>  [9152,]  178 #>  [9153,]  179 #>  [9154,]  179 #>  [9155,]  178 #>  [9156,]  179 #>  [9157,]  178 #>  [9158,]  179 #>  [9159,]  178 #>  [9160,]  178 #>  [9161,]  179 #>  [9162,]  179 #>  [9163,]  179 #>  [9164,]  179 #>  [9165,]  179 #>  [9166,]  179 #>  [9167,]  179 #>  [9168,]  178 #>  [9169,]  179 #>  [9170,]  179 #>  [9171,]  179 #>  [9172,]  179 #>  [9173,]  179 #>  [9174,]  178 #>  [9175,]  179 #>  [9176,]  179 #>  [9177,]  179 #>  [9178,]  179 #>  [9179,]  179 #>  [9180,]  178 #>  [9181,]  179 #>  [9182,]  179 #>  [9183,]  179 #>  [9184,]  179 #>  [9185,]  179 #>  [9186,]  178 #>  [9187,]  179 #>  [9188,]  179 #>  [9189,]  179 #>  [9190,]  179 #>  [9191,]  179 #>  [9192,]  179 #>  [9193,]  179 #>  [9194,]  179 #>  [9195,]  179 #>  [9196,]  178 #>  [9197,]  178 #>  [9198,]  178 #>  [9199,]  179 #>  [9200,]  179 #>  [9201,]  181 #>  [9202,]  180 #>  [9203,]  180 #>  [9204,]  180 #>  [9205,]  181 #>  [9206,]  180 #>  [9207,]  180 #>  [9208,]  180 #>  [9209,]  180 #>  [9210,]  180 #>  [9211,]  181 #>  [9212,]  180 #>  [9213,]  180 #>  [9214,]  181 #>  [9215,]  181 #>  [9216,]  180 #>  [9217,]  181 #>  [9218,]  181 #>  [9219,]  180 #>  [9220,]  180 #>  [9221,]  180 #>  [9222,]  181 #>  [9223,]  180 #>  [9224,]  180 #>  [9225,]  180 #>  [9226,]  181 #>  [9227,]  181 #>  [9228,]  180 #>  [9229,]  180 #>  [9230,]  180 #>  [9231,]  181 #>  [9232,]  181 #>  [9233,]  180 #>  [9234,]  180 #>  [9235,]  180 #>  [9236,]  180 #>  [9237,]  180 #>  [9238,]  180 #>  [9239,]  180 #>  [9240,]  180 #>  [9241,]  180 #>  [9242,]  180 #>  [9243,]  181 #>  [9244,]  180 #>  [9245,]  180 #>  [9246,]  180 #>  [9247,]  181 #>  [9248,]  180 #>  [9249,]  180 #>  [9250,]  180 #>  [9251,]  180 #>  [9252,]  180 #>  [9253,]  180 #>  [9254,]  180 #>  [9255,]  180 #>  [9256,]  180 #>  [9257,]  180 #>  [9258,]  181 #>  [9259,]  181 #>  [9260,]  180 #>  [9261,]  181 #>  [9262,]  180 #>  [9263,]  180 #>  [9264,]  180 #>  [9265,]  180 #>  [9266,]  181 #>  [9267,]  180 #>  [9268,]  180 #>  [9269,]  180 #>  [9270,]  181 #>  [9271,]  181 #>  [9272,]  180 #>  [9273,]  180 #>  [9274,]  180 #>  [9275,]  181 #>  [9276,]  180 #>  [9277,]  181 #>  [9278,]  180 #>  [9279,]  181 #>  [9280,]  180 #>  [9281,]  180 #>  [9282,]  180 #>  [9283,]  180 #>  [9284,]  180 #>  [9285,]  180 #>  [9286,]  180 #>  [9287,]  181 #>  [9288,]  180 #>  [9289,]  180 #>  [9290,]  180 #>  [9291,]  181 #>  [9292,]  180 #>  [9293,]  180 #>  [9294,]  180 #>  [9295,]  181 #>  [9296,]  180 #>  [9297,]  180 #>  [9298,]  180 #>  [9299,]  180 #>  [9300,]  181 #>  [9301,]  183 #>  [9302,]  183 #>  [9303,]  183 #>  [9304,]  182 #>  [9305,]  183 #>  [9306,]  183 #>  [9307,]  183 #>  [9308,]  182 #>  [9309,]  182 #>  [9310,]  182 #>  [9311,]  183 #>  [9312,]  183 #>  [9313,]  183 #>  [9314,]  183 #>  [9315,]  183 #>  [9316,]  183 #>  [9317,]  183 #>  [9318,]  182 #>  [9319,]  183 #>  [9320,]  182 #>  [9321,]  183 #>  [9322,]  183 #>  [9323,]  183 #>  [9324,]  183 #>  [9325,]  183 #>  [9326,]  183 #>  [9327,]  183 #>  [9328,]  183 #>  [9329,]  183 #>  [9330,]  182 #>  [9331,]  183 #>  [9332,]  183 #>  [9333,]  183 #>  [9334,]  183 #>  [9335,]  183 #>  [9336,]  183 #>  [9337,]  183 #>  [9338,]  183 #>  [9339,]  182 #>  [9340,]  183 #>  [9341,]  183 #>  [9342,]  183 #>  [9343,]  182 #>  [9344,]  183 #>  [9345,]  182 #>  [9346,]  183 #>  [9347,]  183 #>  [9348,]  183 #>  [9349,]  182 #>  [9350,]  183 #>  [9351,]  182 #>  [9352,]  183 #>  [9353,]  182 #>  [9354,]  183 #>  [9355,]  183 #>  [9356,]  182 #>  [9357,]  183 #>  [9358,]  183 #>  [9359,]  183 #>  [9360,]  182 #>  [9361,]  183 #>  [9362,]  183 #>  [9363,]  183 #>  [9364,]  182 #>  [9365,]  182 #>  [9366,]  182 #>  [9367,]  182 #>  [9368,]  183 #>  [9369,]  183 #>  [9370,]  183 #>  [9371,]  183 #>  [9372,]  183 #>  [9373,]  183 #>  [9374,]  183 #>  [9375,]  183 #>  [9376,]  183 #>  [9377,]  183 #>  [9378,]  182 #>  [9379,]  183 #>  [9380,]  183 #>  [9381,]  183 #>  [9382,]  183 #>  [9383,]  183 #>  [9384,]  183 #>  [9385,]  182 #>  [9386,]  183 #>  [9387,]  183 #>  [9388,]  183 #>  [9389,]  182 #>  [9390,]  183 #>  [9391,]  182 #>  [9392,]  183 #>  [9393,]  183 #>  [9394,]  183 #>  [9395,]  182 #>  [9396,]  183 #>  [9397,]  183 #>  [9398,]  183 #>  [9399,]  183 #>  [9400,]  183 #>  [9401,]  185 #>  [9402,]  184 #>  [9403,]  184 #>  [9404,]  184 #>  [9405,]  184 #>  [9406,]  184 #>  [9407,]  184 #>  [9408,]  184 #>  [9409,]  184 #>  [9410,]  184 #>  [9411,]  184 #>  [9412,]  184 #>  [9413,]  184 #>  [9414,]  185 #>  [9415,]  185 #>  [9416,]  185 #>  [9417,]  184 #>  [9418,]  184 #>  [9419,]  184 #>  [9420,]  184 #>  [9421,]  184 #>  [9422,]  184 #>  [9423,]  184 #>  [9424,]  184 #>  [9425,]  184 #>  [9426,]  184 #>  [9427,]  184 #>  [9428,]  184 #>  [9429,]  184 #>  [9430,]  184 #>  [9431,]  184 #>  [9432,]  184 #>  [9433,]  184 #>  [9434,]  184 #>  [9435,]  184 #>  [9436,]  184 #>  [9437,]  184 #>  [9438,]  184 #>  [9439,]  184 #>  [9440,]  184 #>  [9441,]  185 #>  [9442,]  184 #>  [9443,]  184 #>  [9444,]  185 #>  [9445,]  184 #>  [9446,]  184 #>  [9447,]  184 #>  [9448,]  184 #>  [9449,]  184 #>  [9450,]  185 #>  [9451,]  184 #>  [9452,]  184 #>  [9453,]  184 #>  [9454,]  184 #>  [9455,]  184 #>  [9456,]  184 #>  [9457,]  184 #>  [9458,]  184 #>  [9459,]  185 #>  [9460,]  184 #>  [9461,]  184 #>  [9462,]  184 #>  [9463,]  184 #>  [9464,]  184 #>  [9465,]  184 #>  [9466,]  184 #>  [9467,]  184 #>  [9468,]  184 #>  [9469,]  184 #>  [9470,]  185 #>  [9471,]  184 #>  [9472,]  184 #>  [9473,]  185 #>  [9474,]  184 #>  [9475,]  184 #>  [9476,]  184 #>  [9477,]  184 #>  [9478,]  184 #>  [9479,]  184 #>  [9480,]  184 #>  [9481,]  184 #>  [9482,]  184 #>  [9483,]  184 #>  [9484,]  184 #>  [9485,]  184 #>  [9486,]  184 #>  [9487,]  184 #>  [9488,]  184 #>  [9489,]  184 #>  [9490,]  184 #>  [9491,]  184 #>  [9492,]  184 #>  [9493,]  184 #>  [9494,]  184 #>  [9495,]  184 #>  [9496,]  185 #>  [9497,]  184 #>  [9498,]  184 #>  [9499,]  185 #>  [9500,]  184 #>  [9501,]  187 #>  [9502,]  187 #>  [9503,]  186 #>  [9504,]  187 #>  [9505,]  187 #>  [9506,]  187 #>  [9507,]  186 #>  [9508,]  187 #>  [9509,]  187 #>  [9510,]  187 #>  [9511,]  187 #>  [9512,]  187 #>  [9513,]  187 #>  [9514,]  187 #>  [9515,]  187 #>  [9516,]  187 #>  [9517,]  187 #>  [9518,]  187 #>  [9519,]  187 #>  [9520,]  186 #>  [9521,]  187 #>  [9522,]  187 #>  [9523,]  187 #>  [9524,]  187 #>  [9525,]  186 #>  [9526,]  187 #>  [9527,]  187 #>  [9528,]  187 #>  [9529,]  187 #>  [9530,]  187 #>  [9531,]  187 #>  [9532,]  187 #>  [9533,]  187 #>  [9534,]  187 #>  [9535,]  187 #>  [9536,]  187 #>  [9537,]  187 #>  [9538,]  187 #>  [9539,]  186 #>  [9540,]  187 #>  [9541,]  187 #>  [9542,]  187 #>  [9543,]  187 #>  [9544,]  187 #>  [9545,]  187 #>  [9546,]  187 #>  [9547,]  187 #>  [9548,]  187 #>  [9549,]  186 #>  [9550,]  187 #>  [9551,]  187 #>  [9552,]  187 #>  [9553,]  186 #>  [9554,]  187 #>  [9555,]  186 #>  [9556,]  186 #>  [9557,]  187 #>  [9558,]  187 #>  [9559,]  187 #>  [9560,]  187 #>  [9561,]  187 #>  [9562,]  187 #>  [9563,]  187 #>  [9564,]  187 #>  [9565,]  186 #>  [9566,]  186 #>  [9567,]  187 #>  [9568,]  187 #>  [9569,]  187 #>  [9570,]  187 #>  [9571,]  187 #>  [9572,]  187 #>  [9573,]  187 #>  [9574,]  187 #>  [9575,]  187 #>  [9576,]  187 #>  [9577,]  187 #>  [9578,]  187 #>  [9579,]  187 #>  [9580,]  187 #>  [9581,]  187 #>  [9582,]  187 #>  [9583,]  187 #>  [9584,]  187 #>  [9585,]  187 #>  [9586,]  187 #>  [9587,]  187 #>  [9588,]  187 #>  [9589,]  187 #>  [9590,]  186 #>  [9591,]  187 #>  [9592,]  187 #>  [9593,]  187 #>  [9594,]  187 #>  [9595,]  187 #>  [9596,]  187 #>  [9597,]  187 #>  [9598,]  187 #>  [9599,]  187 #>  [9600,]  186 #>  [9601,]  189 #>  [9602,]  189 #>  [9603,]  188 #>  [9604,]  188 #>  [9605,]  189 #>  [9606,]  189 #>  [9607,]  188 #>  [9608,]  188 #>  [9609,]  189 #>  [9610,]  189 #>  [9611,]  189 #>  [9612,]  188 #>  [9613,]  189 #>  [9614,]  189 #>  [9615,]  189 #>  [9616,]  189 #>  [9617,]  189 #>  [9618,]  189 #>  [9619,]  189 #>  [9620,]  189 #>  [9621,]  189 #>  [9622,]  189 #>  [9623,]  188 #>  [9624,]  189 #>  [9625,]  188 #>  [9626,]  189 #>  [9627,]  189 #>  [9628,]  189 #>  [9629,]  189 #>  [9630,]  189 #>  [9631,]  188 #>  [9632,]  189 #>  [9633,]  189 #>  [9634,]  189 #>  [9635,]  189 #>  [9636,]  189 #>  [9637,]  189 #>  [9638,]  189 #>  [9639,]  189 #>  [9640,]  188 #>  [9641,]  189 #>  [9642,]  189 #>  [9643,]  189 #>  [9644,]  189 #>  [9645,]  189 #>  [9646,]  189 #>  [9647,]  188 #>  [9648,]  189 #>  [9649,]  189 #>  [9650,]  189 #>  [9651,]  189 #>  [9652,]  188 #>  [9653,]  189 #>  [9654,]  189 #>  [9655,]  189 #>  [9656,]  189 #>  [9657,]  188 #>  [9658,]  189 #>  [9659,]  188 #>  [9660,]  188 #>  [9661,]  189 #>  [9662,]  189 #>  [9663,]  189 #>  [9664,]  189 #>  [9665,]  189 #>  [9666,]  189 #>  [9667,]  189 #>  [9668,]  188 #>  [9669,]  189 #>  [9670,]  189 #>  [9671,]  189 #>  [9672,]  189 #>  [9673,]  189 #>  [9674,]  189 #>  [9675,]  189 #>  [9676,]  189 #>  [9677,]  189 #>  [9678,]  189 #>  [9679,]  189 #>  [9680,]  188 #>  [9681,]  189 #>  [9682,]  189 #>  [9683,]  189 #>  [9684,]  189 #>  [9685,]  189 #>  [9686,]  188 #>  [9687,]  189 #>  [9688,]  189 #>  [9689,]  189 #>  [9690,]  189 #>  [9691,]  189 #>  [9692,]  189 #>  [9693,]  189 #>  [9694,]  189 #>  [9695,]  189 #>  [9696,]  188 #>  [9697,]  188 #>  [9698,]  188 #>  [9699,]  189 #>  [9700,]  189 #>  [9701,]  190 #>  [9702,]  190 #>  [9703,]  190 #>  [9704,]  190 #>  [9705,]  190 #>  [9706,]  190 #>  [9707,]  190 #>  [9708,]  190 #>  [9709,]  190 #>  [9710,]  190 #>  [9711,]  190 #>  [9712,]  190 #>  [9713,]  190 #>  [9714,]  190 #>  [9715,]  191 #>  [9716,]  190 #>  [9717,]  190 #>  [9718,]  190 #>  [9719,]  191 #>  [9720,]  191 #>  [9721,]  190 #>  [9722,]  191 #>  [9723,]  190 #>  [9724,]  190 #>  [9725,]  190 #>  [9726,]  190 #>  [9727,]  191 #>  [9728,]  190 #>  [9729,]  191 #>  [9730,]  190 #>  [9731,]  190 #>  [9732,]  190 #>  [9733,]  190 #>  [9734,]  190 #>  [9735,]  190 #>  [9736,]  191 #>  [9737,]  190 #>  [9738,]  190 #>  [9739,]  190 #>  [9740,]  190 #>  [9741,]  190 #>  [9742,]  190 #>  [9743,]  190 #>  [9744,]  190 #>  [9745,]  190 #>  [9746,]  190 #>  [9747,]  190 #>  [9748,]  190 #>  [9749,]  190 #>  [9750,]  190 #>  [9751,]  190 #>  [9752,]  190 #>  [9753,]  190 #>  [9754,]  190 #>  [9755,]  191 #>  [9756,]  190 #>  [9757,]  190 #>  [9758,]  191 #>  [9759,]  190 #>  [9760,]  190 #>  [9761,]  190 #>  [9762,]  190 #>  [9763,]  190 #>  [9764,]  191 #>  [9765,]  190 #>  [9766,]  191 #>  [9767,]  190 #>  [9768,]  190 #>  [9769,]  190 #>  [9770,]  190 #>  [9771,]  190 #>  [9772,]  190 #>  [9773,]  190 #>  [9774,]  190 #>  [9775,]  190 #>  [9776,]  190 #>  [9777,]  191 #>  [9778,]  190 #>  [9779,]  190 #>  [9780,]  190 #>  [9781,]  191 #>  [9782,]  190 #>  [9783,]  191 #>  [9784,]  190 #>  [9785,]  190 #>  [9786,]  190 #>  [9787,]  191 #>  [9788,]  190 #>  [9789,]  190 #>  [9790,]  190 #>  [9791,]  190 #>  [9792,]  190 #>  [9793,]  190 #>  [9794,]  190 #>  [9795,]  190 #>  [9796,]  190 #>  [9797,]  191 #>  [9798,]  190 #>  [9799,]  190 #>  [9800,]  191 #>  [9801,]  193 #>  [9802,]  192 #>  [9803,]  193 #>  [9804,]  193 #>  [9805,]  193 #>  [9806,]  192 #>  [9807,]  193 #>  [9808,]  193 #>  [9809,]  193 #>  [9810,]  193 #>  [9811,]  192 #>  [9812,]  192 #>  [9813,]  193 #>  [9814,]  193 #>  [9815,]  192 #>  [9816,]  193 #>  [9817,]  192 #>  [9818,]  193 #>  [9819,]  192 #>  [9820,]  193 #>  [9821,]  193 #>  [9822,]  193 #>  [9823,]  192 #>  [9824,]  193 #>  [9825,]  193 #>  [9826,]  192 #>  [9827,]  193 #>  [9828,]  193 #>  [9829,]  192 #>  [9830,]  192 #>  [9831,]  192 #>  [9832,]  193 #>  [9833,]  193 #>  [9834,]  192 #>  [9835,]  192 #>  [9836,]  193 #>  [9837,]  192 #>  [9838,]  193 #>  [9839,]  193 #>  [9840,]  193 #>  [9841,]  193 #>  [9842,]  192 #>  [9843,]  192 #>  [9844,]  192 #>  [9845,]  193 #>  [9846,]  192 #>  [9847,]  192 #>  [9848,]  192 #>  [9849,]  193 #>  [9850,]  193 #>  [9851,]  193 #>  [9852,]  193 #>  [9853,]  193 #>  [9854,]  193 #>  [9855,]  193 #>  [9856,]  192 #>  [9857,]  193 #>  [9858,]  193 #>  [9859,]  193 #>  [9860,]  192 #>  [9861,]  192 #>  [9862,]  193 #>  [9863,]  192 #>  [9864,]  192 #>  [9865,]  192 #>  [9866,]  192 #>  [9867,]  193 #>  [9868,]  192 #>  [9869,]  193 #>  [9870,]  192 #>  [9871,]  193 #>  [9872,]  193 #>  [9873,]  193 #>  [9874,]  193 #>  [9875,]  192 #>  [9876,]  193 #>  [9877,]  193 #>  [9878,]  192 #>  [9879,]  192 #>  [9880,]  193 #>  [9881,]  192 #>  [9882,]  193 #>  [9883,]  193 #>  [9884,]  193 #>  [9885,]  193 #>  [9886,]  193 #>  [9887,]  193 #>  [9888,]  193 #>  [9889,]  193 #>  [9890,]  193 #>  [9891,]  193 #>  [9892,]  192 #>  [9893,]  193 #>  [9894,]  192 #>  [9895,]  192 #>  [9896,]  192 #>  [9897,]  193 #>  [9898,]  193 #>  [9899,]  193 #>  [9900,]  192 #>  [9901,]  194 #>  [9902,]  194 #>  [9903,]  194 #>  [9904,]  195 #>  [9905,]  194 #>  [9906,]  195 #>  [9907,]  194 #>  [9908,]  194 #>  [9909,]  195 #>  [9910,]  195 #>  [9911,]  195 #>  [9912,]  195 #>  [9913,]  194 #>  [9914,]  195 #>  [9915,]  195 #>  [9916,]  194 #>  [9917,]  194 #>  [9918,]  195 #>  [9919,]  195 #>  [9920,]  194 #>  [9921,]  195 #>  [9922,]  194 #>  [9923,]  195 #>  [9924,]  194 #>  [9925,]  194 #>  [9926,]  195 #>  [9927,]  195 #>  [9928,]  194 #>  [9929,]  194 #>  [9930,]  195 #>  [9931,]  195 #>  [9932,]  195 #>  [9933,]  195 #>  [9934,]  195 #>  [9935,]  194 #>  [9936,]  195 #>  [9937,]  194 #>  [9938,]  195 #>  [9939,]  194 #>  [9940,]  194 #>  [9941,]  195 #>  [9942,]  195 #>  [9943,]  194 #>  [9944,]  194 #>  [9945,]  194 #>  [9946,]  194 #>  [9947,]  194 #>  [9948,]  195 #>  [9949,]  194 #>  [9950,]  194 #>  [9951,]  194 #>  [9952,]  195 #>  [9953,]  194 #>  [9954,]  194 #>  [9955,]  194 #>  [9956,]  194 #>  [9957,]  194 #>  [9958,]  195 #>  [9959,]  194 #>  [9960,]  195 #>  [9961,]  195 #>  [9962,]  195 #>  [9963,]  194 #>  [9964,]  195 #>  [9965,]  194 #>  [9966,]  194 #>  [9967,]  195 #>  [9968,]  195 #>  [9969,]  195 #>  [9970,]  194 #>  [9971,]  194 #>  [9972,]  194 #>  [9973,]  195 #>  [9974,]  195 #>  [9975,]  195 #>  [9976,]  194 #>  [9977,]  194 #>  [9978,]  194 #>  [9979,]  194 #>  [9980,]  195 #>  [9981,]  194 #>  [9982,]  195 #>  [9983,]  194 #>  [9984,]  194 #>  [9985,]  195 #>  [9986,]  194 #>  [9987,]  194 #>  [9988,]  194 #>  [9989,]  194 #>  [9990,]  194 #>  [9991,]  195 #>  [9992,]  195 #>  [9993,]  195 #>  [9994,]  194 #>  [9995,]  194 #>  [9996,]  195 #>  [9997,]  195 #>  [9998,]  194 #>  [9999,]  195 #> [10000,]  194 #> [10001,]  197 #> [10002,]  196 #> [10003,]  196 #> [10004,]  196 #> [10005,]  196 #> [10006,]  197 #> [10007,]  196 #> [10008,]  196 #> [10009,]  196 #> [10010,]  196 #> [10011,]  196 #> [10012,]  196 #> [10013,]  197 #> [10014,]  197 #> [10015,]  197 #> [10016,]  197 #> [10017,]  196 #> [10018,]  196 #> [10019,]  196 #> [10020,]  196 #> [10021,]  197 #> [10022,]  196 #> [10023,]  196 #> [10024,]  196 #> [10025,]  196 #> [10026,]  196 #> [10027,]  196 #> [10028,]  196 #> [10029,]  197 #> [10030,]  196 #> [10031,]  196 #> [10032,]  196 #> [10033,]  197 #> [10034,]  196 #> [10035,]  196 #> [10036,]  196 #> [10037,]  196 #> [10038,]  196 #> [10039,]  196 #> [10040,]  196 #> [10041,]  197 #> [10042,]  196 #> [10043,]  196 #> [10044,]  197 #> [10045,]  196 #> [10046,]  196 #> [10047,]  196 #> [10048,]  196 #> [10049,]  196 #> [10050,]  197 #> [10051,]  196 #> [10052,]  196 #> [10053,]  196 #> [10054,]  196 #> [10055,]  196 #> [10056,]  196 #> [10057,]  196 #> [10058,]  196 #> [10059,]  197 #> [10060,]  196 #> [10061,]  197 #> [10062,]  196 #> [10063,]  196 #> [10064,]  196 #> [10065,]  196 #> [10066,]  196 #> [10067,]  196 #> [10068,]  197 #> [10069,]  196 #> [10070,]  197 #> [10071,]  196 #> [10072,]  196 #> [10073,]  197 #> [10074,]  196 #> [10075,]  196 #> [10076,]  196 #> [10077,]  196 #> [10078,]  196 #> [10079,]  196 #> [10080,]  196 #> [10081,]  196 #> [10082,]  196 #> [10083,]  197 #> [10084,]  196 #> [10085,]  196 #> [10086,]  197 #> [10087,]  196 #> [10088,]  196 #> [10089,]  196 #> [10090,]  196 #> [10091,]  196 #> [10092,]  196 #> [10093,]  196 #> [10094,]  196 #> [10095,]  196 #> [10096,]  197 #> [10097,]  196 #> [10098,]  196 #> [10099,]  197 #> [10100,]  196 #> [10101,]  198 #> [10102,]  198 #> [10103,]  198 #> [10104,]  199 #> [10105,]  198 #> [10106,]  198 #> [10107,]  198 #> [10108,]  198 #> [10109,]  198 #> [10110,]  198 #> [10111,]  199 #> [10112,]  199 #> [10113,]  198 #> [10114,]  199 #> [10115,]  199 #> [10116,]  198 #> [10117,]  198 #> [10118,]  198 #> [10119,]  199 #> [10120,]  198 #> [10121,]  199 #> [10122,]  198 #> [10123,]  198 #> [10124,]  198 #> [10125,]  198 #> [10126,]  198 #> [10127,]  199 #> [10128,]  198 #> [10129,]  198 #> [10130,]  198 #> [10131,]  198 #> [10132,]  198 #> [10133,]  198 #> [10134,]  198 #> [10135,]  198 #> [10136,]  198 #> [10137,]  198 #> [10138,]  199 #> [10139,]  198 #> [10140,]  198 #> [10141,]  199 #> [10142,]  199 #> [10143,]  198 #> [10144,]  198 #> [10145,]  198 #> [10146,]  198 #> [10147,]  198 #> [10148,]  199 #> [10149,]  198 #> [10150,]  198 #> [10151,]  198 #> [10152,]  198 #> [10153,]  198 #> [10154,]  198 #> [10155,]  198 #> [10156,]  198 #> [10157,]  198 #> [10158,]  198 #> [10159,]  198 #> [10160,]  198 #> [10161,]  199 #> [10162,]  198 #> [10163,]  198 #> [10164,]  198 #> [10165,]  198 #> [10166,]  198 #> [10167,]  198 #> [10168,]  199 #> [10169,]  199 #> [10170,]  198 #> [10171,]  198 #> [10172,]  198 #> [10173,]  198 #> [10174,]  199 #> [10175,]  199 #> [10176,]  198 #> [10177,]  198 #> [10178,]  198 #> [10179,]  198 #> [10180,]  198 #> [10181,]  198 #> [10182,]  199 #> [10183,]  198 #> [10184,]  198 #> [10185,]  198 #> [10186,]  198 #> [10187,]  198 #> [10188,]  198 #> [10189,]  198 #> [10190,]  198 #> [10191,]  198 #> [10192,]  199 #> [10193,]  199 #> [10194,]  198 #> [10195,]  198 #> [10196,]  199 #> [10197,]  199 #> [10198,]  198 #> [10199,]  198 #> [10200,]  198 #> [10201,]  201 #> [10202,]  201 #> [10203,]  200 #> [10204,]  200 #> [10205,]  200 #> [10206,]  200 #> [10207,]  200 #> [10208,]  201 #> [10209,]  200 #> [10210,]  200 #> [10211,]  200 #> [10212,]  200 #> [10213,]  201 #> [10214,]  200 #> [10215,]  201 #> [10216,]  201 #> [10217,]  200 #> [10218,]  200 #> [10219,]  201 #> [10220,]  201 #> [10221,]  200 #> [10222,]  201 #> [10223,]  201 #> [10224,]  200 #> [10225,]  200 #> [10226,]  201 #> [10227,]  201 #> [10228,]  200 #> [10229,]  201 #> [10230,]  201 #> [10231,]  200 #> [10232,]  200 #> [10233,]  201 #> [10234,]  200 #> [10235,]  200 #> [10236,]  201 #> [10237,]  201 #> [10238,]  201 #> [10239,]  200 #> [10240,]  200 #> [10241,]  201 #> [10242,]  200 #> [10243,]  201 #> [10244,]  201 #> [10245,]  200 #> [10246,]  201 #> [10247,]  200 #> [10248,]  200 #> [10249,]  200 #> [10250,]  201 #> [10251,]  201 #> [10252,]  200 #> [10253,]  201 #> [10254,]  200 #> [10255,]  201 #> [10256,]  201 #> [10257,]  200 #> [10258,]  201 #> [10259,]  201 #> [10260,]  201 #> [10261,]  201 #> [10262,]  200 #> [10263,]  201 #> [10264,]  201 #> [10265,]  200 #> [10266,]  201 #> [10267,]  200 #> [10268,]  201 #> [10269,]  201 #> [10270,]  200 #> [10271,]  201 #> [10272,]  200 #> [10273,]  200 #> [10274,]  200 #> [10275,]  201 #> [10276,]  200 #> [10277,]  201 #> [10278,]  201 #> [10279,]  200 #> [10280,]  201 #> [10281,]  201 #> [10282,]  200 #> [10283,]  201 #> [10284,]  201 #> [10285,]  201 #> [10286,]  200 #> [10287,]  201 #> [10288,]  200 #> [10289,]  200 #> [10290,]  201 #> [10291,]  200 #> [10292,]  200 #> [10293,]  201 #> [10294,]  200 #> [10295,]  201 #> [10296,]  201 #> [10297,]  201 #> [10298,]  200 #> [10299,]  200 #> [10300,]  201 #> [10301,]  203 #> [10302,]  203 #> [10303,]  203 #> [10304,]  202 #> [10305,]  203 #> [10306,]  203 #> [10307,]  203 #> [10308,]  202 #> [10309,]  202 #> [10310,]  202 #> [10311,]  203 #> [10312,]  203 #> [10313,]  203 #> [10314,]  203 #> [10315,]  203 #> [10316,]  203 #> [10317,]  203 #> [10318,]  203 #> [10319,]  203 #> [10320,]  203 #> [10321,]  203 #> [10322,]  203 #> [10323,]  203 #> [10324,]  203 #> [10325,]  203 #> [10326,]  203 #> [10327,]  203 #> [10328,]  203 #> [10329,]  203 #> [10330,]  203 #> [10331,]  203 #> [10332,]  203 #> [10333,]  203 #> [10334,]  203 #> [10335,]  203 #> [10336,]  203 #> [10337,]  203 #> [10338,]  203 #> [10339,]  203 #> [10340,]  203 #> [10341,]  203 #> [10342,]  203 #> [10343,]  203 #> [10344,]  203 #> [10345,]  203 #> [10346,]  203 #> [10347,]  203 #> [10348,]  203 #> [10349,]  203 #> [10350,]  203 #> [10351,]  202 #> [10352,]  203 #> [10353,]  203 #> [10354,]  203 #> [10355,]  203 #> [10356,]  203 #> [10357,]  203 #> [10358,]  203 #> [10359,]  203 #> [10360,]  203 #> [10361,]  203 #> [10362,]  203 #> [10363,]  203 #> [10364,]  203 #> [10365,]  203 #> [10366,]  203 #> [10367,]  203 #> [10368,]  203 #> [10369,]  203 #> [10370,]  203 #> [10371,]  203 #> [10372,]  203 #> [10373,]  203 #> [10374,]  203 #> [10375,]  203 #> [10376,]  203 #> [10377,]  203 #> [10378,]  203 #> [10379,]  203 #> [10380,]  203 #> [10381,]  203 #> [10382,]  203 #> [10383,]  203 #> [10384,]  203 #> [10385,]  202 #> [10386,]  203 #> [10387,]  203 #> [10388,]  203 #> [10389,]  203 #> [10390,]  203 #> [10391,]  202 #> [10392,]  203 #> [10393,]  203 #> [10394,]  203 #> [10395,]  202 #> [10396,]  203 #> [10397,]  203 #> [10398,]  203 #> [10399,]  203 #> [10400,]  203 #> [10401,]  204 #> [10402,]  204 #> [10403,]  204 #> [10404,]  204 #> [10405,]  204 #> [10406,]  204 #> [10407,]  204 #> [10408,]  204 #> [10409,]  204 #> [10410,]  204 #> [10411,]  204 #> [10412,]  204 #> [10413,]  204 #> [10414,]  204 #> [10415,]  205 #> [10416,]  204 #> [10417,]  204 #> [10418,]  204 #> [10419,]  205 #> [10420,]  205 #> [10421,]  204 #> [10422,]  205 #> [10423,]  204 #> [10424,]  204 #> [10425,]  204 #> [10426,]  204 #> [10427,]  205 #> [10428,]  204 #> [10429,]  205 #> [10430,]  204 #> [10431,]  204 #> [10432,]  204 #> [10433,]  204 #> [10434,]  204 #> [10435,]  204 #> [10436,]  205 #> [10437,]  205 #> [10438,]  205 #> [10439,]  204 #> [10440,]  204 #> [10441,]  204 #> [10442,]  204 #> [10443,]  204 #> [10444,]  204 #> [10445,]  204 #> [10446,]  204 #> [10447,]  204 #> [10448,]  204 #> [10449,]  204 #> [10450,]  204 #> [10451,]  204 #> [10452,]  204 #> [10453,]  204 #> [10454,]  204 #> [10455,]  205 #> [10456,]  204 #> [10457,]  204 #> [10458,]  205 #> [10459,]  204 #> [10460,]  204 #> [10461,]  204 #> [10462,]  204 #> [10463,]  204 #> [10464,]  205 #> [10465,]  204 #> [10466,]  205 #> [10467,]  204 #> [10468,]  204 #> [10469,]  205 #> [10470,]  204 #> [10471,]  204 #> [10472,]  204 #> [10473,]  204 #> [10474,]  204 #> [10475,]  204 #> [10476,]  204 #> [10477,]  205 #> [10478,]  204 #> [10479,]  204 #> [10480,]  204 #> [10481,]  205 #> [10482,]  204 #> [10483,]  205 #> [10484,]  204 #> [10485,]  204 #> [10486,]  204 #> [10487,]  205 #> [10488,]  204 #> [10489,]  204 #> [10490,]  205 #> [10491,]  204 #> [10492,]  204 #> [10493,]  204 #> [10494,]  204 #> [10495,]  204 #> [10496,]  204 #> [10497,]  205 #> [10498,]  204 #> [10499,]  204 #> [10500,]  205 #> [10501,]  206 #> [10502,]  206 #> [10503,]  206 #> [10504,]  206 #> [10505,]  206 #> [10506,]  206 #> [10507,]  206 #> [10508,]  206 #> [10509,]  206 #> [10510,]  206 #> [10511,]  206 #> [10512,]  206 #> [10513,]  206 #> [10514,]  206 #> [10515,]  206 #> [10516,]  206 #> [10517,]  206 #> [10518,]  206 #> [10519,]  206 #> [10520,]  206 #> [10521,]  206 #> [10522,]  206 #> [10523,]  206 #> [10524,]  206 #> [10525,]  206 #> [10526,]  206 #> [10527,]  206 #> [10528,]  206 #> [10529,]  206 #> [10530,]  206 #> [10531,]  206 #> [10532,]  206 #> [10533,]  206 #> [10534,]  206 #> [10535,]  206 #> [10536,]  206 #> [10537,]  206 #> [10538,]  206 #> [10539,]  206 #> [10540,]  206 #> [10541,]  206 #> [10542,]  206 #> [10543,]  206 #> [10544,]  206 #> [10545,]  206 #> [10546,]  206 #> [10547,]  206 #> [10548,]  206 #> [10549,]  206 #> [10550,]  206 #> [10551,]  206 #> [10552,]  206 #> [10553,]  206 #> [10554,]  206 #> [10555,]  206 #> [10556,]  206 #> [10557,]  206 #> [10558,]  206 #> [10559,]  206 #> [10560,]  206 #> [10561,]  206 #> [10562,]  206 #> [10563,]  206 #> [10564,]  206 #> [10565,]  206 #> [10566,]  206 #> [10567,]  206 #> [10568,]  206 #> [10569,]  206 #> [10570,]  206 #> [10571,]  206 #> [10572,]  206 #> [10573,]  206 #> [10574,]  206 #> [10575,]  206 #> [10576,]  206 #> [10577,]  206 #> [10578,]  206 #> [10579,]  206 #> [10580,]  206 #> [10581,]  206 #> [10582,]  206 #> [10583,]  206 #> [10584,]  206 #> [10585,]  206 #> [10586,]  206 #> [10587,]  206 #> [10588,]  206 #> [10589,]  206 #> [10590,]  206 #> [10591,]  206 #> [10592,]  206 #> [10593,]  206 #> [10594,]  206 #> [10595,]  206 #> [10596,]  206 #> [10597,]  206 #> [10598,]  206 #> [10599,]  206 #> [10600,]  206 #> [10601,]  207 #> [10602,]  207 #> [10603,]  207 #> [10604,]  207 #> [10605,]  207 #> [10606,]  207 #> [10607,]  207 #> [10608,]  207 #> [10609,]  207 #> [10610,]  207 #> [10611,]  207 #> [10612,]  207 #> [10613,]  207 #> [10614,]  207 #> [10615,]  207 #> [10616,]  207 #> [10617,]  207 #> [10618,]  207 #> [10619,]  207 #> [10620,]  207 #> [10621,]  207 #> [10622,]  207 #> [10623,]  207 #> [10624,]  207 #> [10625,]  207 #> [10626,]  207 #> [10627,]  207 #> [10628,]  207 #> [10629,]  207 #> [10630,]  207 #> [10631,]  207 #> [10632,]  207 #> [10633,]  207 #> [10634,]  207 #> [10635,]  207 #> [10636,]  207 #> [10637,]  207 #> [10638,]  207 #> [10639,]  207 #> [10640,]  207 #> [10641,]  207 #> [10642,]  207 #> [10643,]  207 #> [10644,]  207 #> [10645,]  207 #> [10646,]  207 #> [10647,]  207 #> [10648,]  207 #> [10649,]  207 #> [10650,]  207 #> [10651,]  207 #> [10652,]  207 #> [10653,]  207 #> [10654,]  207 #> [10655,]  207 #> [10656,]  207 #> [10657,]  207 #> [10658,]  207 #> [10659,]  207 #> [10660,]  207 #> [10661,]  207 #> [10662,]  207 #> [10663,]  207 #> [10664,]  207 #> [10665,]  207 #> [10666,]  207 #> [10667,]  207 #> [10668,]  207 #> [10669,]  207 #> [10670,]  207 #> [10671,]  207 #> [10672,]  207 #> [10673,]  207 #> [10674,]  207 #> [10675,]  207 #> [10676,]  207 #> [10677,]  207 #> [10678,]  207 #> [10679,]  207 #> [10680,]  207 #> [10681,]  207 #> [10682,]  207 #> [10683,]  207 #> [10684,]  207 #> [10685,]  207 #> [10686,]  207 #> [10687,]  207 #> [10688,]  207 #> [10689,]  207 #> [10690,]  207 #> [10691,]  207 #> [10692,]  207 #> [10693,]  207 #> [10694,]  207 #> [10695,]  207 #> [10696,]  207 #> [10697,]  207 #> [10698,]  207 #> [10699,]  207 #> [10700,]  207 #> [10701,]  209 #> [10702,]  208 #> [10703,]  208 #> [10704,]  209 #> [10705,]  208 #> [10706,]  208 #> [10707,]  209 #> [10708,]  209 #> [10709,]  209 #> [10710,]  209 #> [10711,]  208 #> [10712,]  208 #> [10713,]  209 #> [10714,]  208 #> [10715,]  209 #> [10716,]  209 #> [10717,]  209 #> [10718,]  209 #> [10719,]  208 #> [10720,]  208 #> [10721,]  209 #> [10722,]  208 #> [10723,]  209 #> [10724,]  208 #> [10725,]  209 #> [10726,]  208 #> [10727,]  209 #> [10728,]  209 #> [10729,]  208 #> [10730,]  208 #> [10731,]  208 #> [10732,]  208 #> [10733,]  208 #> [10734,]  208 #> [10735,]  208 #> [10736,]  208 #> [10737,]  208 #> [10738,]  208 #> [10739,]  209 #> [10740,]  208 #> [10741,]  208 #> [10742,]  208 #> [10743,]  209 #> [10744,]  208 #> [10745,]  209 #> [10746,]  209 #> [10747,]  209 #> [10748,]  208 #> [10749,]  208 #> [10750,]  208 #> [10751,]  208 #> [10752,]  208 #> [10753,]  209 #> [10754,]  208 #> [10755,]  208 #> [10756,]  209 #> [10757,]  208 #> [10758,]  208 #> [10759,]  208 #> [10760,]  208 #> [10761,]  209 #> [10762,]  208 #> [10763,]  208 #> [10764,]  209 #> [10765,]  208 #> [10766,]  208 #> [10767,]  208 #> [10768,]  208 #> [10769,]  208 #> [10770,]  209 #> [10771,]  209 #> [10772,]  209 #> [10773,]  209 #> [10774,]  209 #> [10775,]  209 #> [10776,]  209 #> [10777,]  209 #> [10778,]  208 #> [10779,]  208 #> [10780,]  208 #> [10781,]  208 #> [10782,]  209 #> [10783,]  208 #> [10784,]  209 #> [10785,]  208 #> [10786,]  208 #> [10787,]  208 #> [10788,]  209 #> [10789,]  208 #> [10790,]  208 #> [10791,]  208 #> [10792,]  208 #> [10793,]  208 #> [10794,]  209 #> [10795,]  209 #> [10796,]  208 #> [10797,]  208 #> [10798,]  208 #> [10799,]  208 #> [10800,]  209 #> [10801,]  211 #> [10802,]  211 #> [10803,]  210 #> [10804,]  211 #> [10805,]  211 #> [10806,]  211 #> [10807,]  211 #> [10808,]  211 #> [10809,]  210 #> [10810,]  210 #> [10811,]  210 #> [10812,]  211 #> [10813,]  211 #> [10814,]  210 #> [10815,]  211 #> [10816,]  211 #> [10817,]  211 #> [10818,]  211 #> [10819,]  211 #> [10820,]  211 #> [10821,]  210 #> [10822,]  211 #> [10823,]  211 #> [10824,]  211 #> [10825,]  211 #> [10826,]  211 #> [10827,]  211 #> [10828,]  210 #> [10829,]  211 #> [10830,]  211 #> [10831,]  210 #> [10832,]  210 #> [10833,]  211 #> [10834,]  210 #> [10835,]  210 #> [10836,]  211 #> [10837,]  211 #> [10838,]  211 #> [10839,]  210 #> [10840,]  210 #> [10841,]  211 #> [10842,]  211 #> [10843,]  211 #> [10844,]  211 #> [10845,]  211 #> [10846,]  211 #> [10847,]  211 #> [10848,]  210 #> [10849,]  211 #> [10850,]  211 #> [10851,]  211 #> [10852,]  210 #> [10853,]  211 #> [10854,]  211 #> [10855,]  211 #> [10856,]  211 #> [10857,]  211 #> [10858,]  211 #> [10859,]  211 #> [10860,]  211 #> [10861,]  211 #> [10862,]  210 #> [10863,]  211 #> [10864,]  211 #> [10865,]  210 #> [10866,]  211 #> [10867,]  211 #> [10868,]  211 #> [10869,]  211 #> [10870,]  210 #> [10871,]  211 #> [10872,]  211 #> [10873,]  211 #> [10874,]  210 #> [10875,]  211 #> [10876,]  211 #> [10877,]  211 #> [10878,]  211 #> [10879,]  211 #> [10880,]  211 #> [10881,]  211 #> [10882,]  210 #> [10883,]  211 #> [10884,]  211 #> [10885,]  211 #> [10886,]  211 #> [10887,]  211 #> [10888,]  211 #> [10889,]  211 #> [10890,]  211 #> [10891,]  211 #> [10892,]  211 #> [10893,]  211 #> [10894,]  211 #> [10895,]  211 #> [10896,]  211 #> [10897,]  211 #> [10898,]  210 #> [10899,]  211 #> [10900,]  211 #> [10901,]  213 #> [10902,]  213 #> [10903,]  213 #> [10904,]  212 #> [10905,]  213 #> [10906,]  213 #> [10907,]  213 #> [10908,]  212 #> [10909,]  212 #> [10910,]  213 #> [10911,]  212 #> [10912,]  213 #> [10913,]  212 #> [10914,]  213 #> [10915,]  213 #> [10916,]  213 #> [10917,]  212 #> [10918,]  213 #> [10919,]  213 #> [10920,]  213 #> [10921,]  213 #> [10922,]  212 #> [10923,]  213 #> [10924,]  213 #> [10925,]  213 #> [10926,]  213 #> [10927,]  212 #> [10928,]  213 #> [10929,]  213 #> [10930,]  213 #> [10931,]  213 #> [10932,]  213 #> [10933,]  213 #> [10934,]  213 #> [10935,]  212 #> [10936,]  213 #> [10937,]  213 #> [10938,]  213 #> [10939,]  213 #> [10940,]  213 #> [10941,]  213 #> [10942,]  213 #> [10943,]  212 #> [10944,]  212 #> [10945,]  213 #> [10946,]  213 #> [10947,]  213 #> [10948,]  213 #> [10949,]  212 #> [10950,]  213 #> [10951,]  213 #> [10952,]  212 #> [10953,]  213 #> [10954,]  213 #> [10955,]  212 #> [10956,]  213 #> [10957,]  213 #> [10958,]  212 #> [10959,]  213 #> [10960,]  213 #> [10961,]  213 #> [10962,]  213 #> [10963,]  213 #> [10964,]  213 #> [10965,]  213 #> [10966,]  212 #> [10967,]  213 #> [10968,]  213 #> [10969,]  212 #> [10970,]  213 #> [10971,]  213 #> [10972,]  213 #> [10973,]  213 #> [10974,]  213 #> [10975,]  213 #> [10976,]  213 #> [10977,]  213 #> [10978,]  213 #> [10979,]  212 #> [10980,]  212 #> [10981,]  212 #> [10982,]  212 #> [10983,]  212 #> [10984,]  213 #> [10985,]  213 #> [10986,]  213 #> [10987,]  212 #> [10988,]  212 #> [10989,]  212 #> [10990,]  212 #> [10991,]  213 #> [10992,]  212 #> [10993,]  213 #> [10994,]  213 #> [10995,]  212 #> [10996,]  213 #> [10997,]  213 #> [10998,]  213 #> [10999,]  212 #> [11000,]  213 #> [11001,]  215 #> [11002,]  215 #> [11003,]  215 #> [11004,]  214 #> [11005,]  215 #> [11006,]  215 #> [11007,]  215 #> [11008,]  214 #> [11009,]  214 #> [11010,]  215 #> [11011,]  214 #> [11012,]  215 #> [11013,]  214 #> [11014,]  215 #> [11015,]  215 #> [11016,]  215 #> [11017,]  214 #> [11018,]  215 #> [11019,]  215 #> [11020,]  215 #> [11021,]  215 #> [11022,]  214 #> [11023,]  215 #> [11024,]  215 #> [11025,]  215 #> [11026,]  215 #> [11027,]  214 #> [11028,]  215 #> [11029,]  215 #> [11030,]  214 #> [11031,]  215 #> [11032,]  215 #> [11033,]  215 #> [11034,]  215 #> [11035,]  214 #> [11036,]  215 #> [11037,]  215 #> [11038,]  215 #> [11039,]  215 #> [11040,]  215 #> [11041,]  215 #> [11042,]  215 #> [11043,]  214 #> [11044,]  214 #> [11045,]  215 #> [11046,]  215 #> [11047,]  215 #> [11048,]  215 #> [11049,]  214 #> [11050,]  215 #> [11051,]  215 #> [11052,]  214 #> [11053,]  215 #> [11054,]  215 #> [11055,]  214 #> [11056,]  215 #> [11057,]  215 #> [11058,]  214 #> [11059,]  215 #> [11060,]  215 #> [11061,]  215 #> [11062,]  215 #> [11063,]  215 #> [11064,]  215 #> [11065,]  215 #> [11066,]  214 #> [11067,]  215 #> [11068,]  215 #> [11069,]  214 #> [11070,]  215 #> [11071,]  215 #> [11072,]  215 #> [11073,]  215 #> [11074,]  215 #> [11075,]  215 #> [11076,]  215 #> [11077,]  215 #> [11078,]  215 #> [11079,]  214 #> [11080,]  214 #> [11081,]  214 #> [11082,]  214 #> [11083,]  214 #> [11084,]  215 #> [11085,]  215 #> [11086,]  215 #> [11087,]  214 #> [11088,]  214 #> [11089,]  214 #> [11090,]  214 #> [11091,]  215 #> [11092,]  214 #> [11093,]  215 #> [11094,]  215 #> [11095,]  214 #> [11096,]  215 #> [11097,]  215 #> [11098,]  215 #> [11099,]  214 #> [11100,]  215 #> [11101,]  216 #> [11102,]  216 #> [11103,]  216 #> [11104,]  216 #> [11105,]  216 #> [11106,]  216 #> [11107,]  216 #> [11108,]  216 #> [11109,]  216 #> [11110,]  216 #> [11111,]  216 #> [11112,]  216 #> [11113,]  216 #> [11114,]  216 #> [11115,]  216 #> [11116,]  216 #> [11117,]  216 #> [11118,]  216 #> [11119,]  216 #> [11120,]  216 #> [11121,]  216 #> [11122,]  216 #> [11123,]  216 #> [11124,]  216 #> [11125,]  216 #> [11126,]  216 #> [11127,]  216 #> [11128,]  216 #> [11129,]  216 #> [11130,]  216 #> [11131,]  216 #> [11132,]  216 #> [11133,]  216 #> [11134,]  216 #> [11135,]  216 #> [11136,]  216 #> [11137,]  216 #> [11138,]  216 #> [11139,]  216 #> [11140,]  216 #> [11141,]  216 #> [11142,]  216 #> [11143,]  216 #> [11144,]  216 #> [11145,]  216 #> [11146,]  216 #> [11147,]  216 #> [11148,]  216 #> [11149,]  216 #> [11150,]  216 #> [11151,]  216 #> [11152,]  216 #> [11153,]  216 #> [11154,]  216 #> [11155,]  216 #> [11156,]  216 #> [11157,]  216 #> [11158,]  216 #> [11159,]  216 #> [11160,]  216 #> [11161,]  216 #> [11162,]  216 #> [11163,]  216 #> [11164,]  216 #> [11165,]  216 #> [11166,]  216 #> [11167,]  216 #> [11168,]  216 #> [11169,]  216 #> [11170,]  216 #> [11171,]  216 #> [11172,]  216 #> [11173,]  216 #> [11174,]  216 #> [11175,]  216 #> [11176,]  216 #> [11177,]  216 #> [11178,]  216 #> [11179,]  216 #> [11180,]  216 #> [11181,]  216 #> [11182,]  216 #> [11183,]  216 #> [11184,]  216 #> [11185,]  216 #> [11186,]  216 #> [11187,]  216 #> [11188,]  216 #> [11189,]  216 #> [11190,]  216 #> [11191,]  216 #> [11192,]  216 #> [11193,]  216 #> [11194,]  216 #> [11195,]  216 #> [11196,]  216 #> [11197,]  216 #> [11198,]  216 #> [11199,]  216 #> [11200,]  216 #> [11201,]  218 #> [11202,]  217 #> [11203,]  217 #> [11204,]  218 #> [11205,]  217 #> [11206,]  217 #> [11207,]  218 #> [11208,]  217 #> [11209,]  218 #> [11210,]  218 #> [11211,]  217 #> [11212,]  217 #> [11213,]  218 #> [11214,]  218 #> [11215,]  217 #> [11216,]  218 #> [11217,]  217 #> [11218,]  217 #> [11219,]  217 #> [11220,]  218 #> [11221,]  217 #> [11222,]  218 #> [11223,]  217 #> [11224,]  218 #> [11225,]  218 #> [11226,]  217 #> [11227,]  217 #> [11228,]  218 #> [11229,]  217 #> [11230,]  217 #> [11231,]  217 #> [11232,]  217 #> [11233,]  217 #> [11234,]  217 #> [11235,]  217 #> [11236,]  218 #> [11237,]  217 #> [11238,]  217 #> [11239,]  218 #> [11240,]  217 #> [11241,]  217 #> [11242,]  217 #> [11243,]  217 #> [11244,]  217 #> [11245,]  218 #> [11246,]  217 #> [11247,]  217 #> [11248,]  217 #> [11249,]  218 #> [11250,]  218 #> [11251,]  217 #> [11252,]  218 #> [11253,]  218 #> [11254,]  218 #> [11255,]  218 #> [11256,]  217 #> [11257,]  218 #> [11258,]  218 #> [11259,]  218 #> [11260,]  217 #> [11261,]  217 #> [11262,]  217 #> [11263,]  217 #> [11264,]  217 #> [11265,]  217 #> [11266,]  217 #> [11267,]  218 #> [11268,]  217 #> [11269,]  217 #> [11270,]  217 #> [11271,]  217 #> [11272,]  218 #> [11273,]  218 #> [11274,]  217 #> [11275,]  217 #> [11276,]  218 #> [11277,]  217 #> [11278,]  217 #> [11279,]  217 #> [11280,]  217 #> [11281,]  217 #> [11282,]  217 #> [11283,]  217 #> [11284,]  217 #> [11285,]  218 #> [11286,]  218 #> [11287,]  218 #> [11288,]  217 #> [11289,]  217 #> [11290,]  218 #> [11291,]  218 #> [11292,]  217 #> [11293,]  217 #> [11294,]  217 #> [11295,]  217 #> [11296,]  217 #> [11297,]  217 #> [11298,]  217 #> [11299,]  217 #> [11300,]  217 #> [11301,]  219 #> [11302,]  219 #> [11303,]  219 #> [11304,]  219 #> [11305,]  219 #> [11306,]  219 #> [11307,]  219 #> [11308,]  219 #> [11309,]  219 #> [11310,]  219 #> [11311,]  219 #> [11312,]  219 #> [11313,]  219 #> [11314,]  219 #> [11315,]  219 #> [11316,]  219 #> [11317,]  219 #> [11318,]  219 #> [11319,]  219 #> [11320,]  219 #> [11321,]  219 #> [11322,]  219 #> [11323,]  219 #> [11324,]  219 #> [11325,]  219 #> [11326,]  219 #> [11327,]  219 #> [11328,]  219 #> [11329,]  219 #> [11330,]  219 #> [11331,]  219 #> [11332,]  219 #> [11333,]  219 #> [11334,]  219 #> [11335,]  219 #> [11336,]  219 #> [11337,]  219 #> [11338,]  219 #> [11339,]  219 #> [11340,]  219 #> [11341,]  219 #> [11342,]  219 #> [11343,]  219 #> [11344,]  219 #> [11345,]  219 #> [11346,]  219 #> [11347,]  219 #> [11348,]  219 #> [11349,]  219 #> [11350,]  219 #> [11351,]  219 #> [11352,]  219 #> [11353,]  219 #> [11354,]  219 #> [11355,]  219 #> [11356,]  219 #> [11357,]  219 #> [11358,]  219 #> [11359,]  219 #> [11360,]  219 #> [11361,]  219 #> [11362,]  219 #> [11363,]  219 #> [11364,]  219 #> [11365,]  219 #> [11366,]  219 #> [11367,]  219 #> [11368,]  219 #> [11369,]  219 #> [11370,]  219 #> [11371,]  219 #> [11372,]  219 #> [11373,]  219 #> [11374,]  219 #> [11375,]  219 #> [11376,]  219 #> [11377,]  219 #> [11378,]  219 #> [11379,]  219 #> [11380,]  219 #> [11381,]  219 #> [11382,]  219 #> [11383,]  219 #> [11384,]  219 #> [11385,]  219 #> [11386,]  219 #> [11387,]  219 #> [11388,]  219 #> [11389,]  219 #> [11390,]  219 #> [11391,]  219 #> [11392,]  219 #> [11393,]  219 #> [11394,]  219 #> [11395,]  219 #> [11396,]  219 #> [11397,]  219 #> [11398,]  219 #> [11399,]  219 #> [11400,]  219 #> [11401,]  221 #> [11402,]  221 #> [11403,]  221 #> [11404,]  220 #> [11405,]  221 #> [11406,]  221 #> [11407,]  221 #> [11408,]  220 #> [11409,]  220 #> [11410,]  220 #> [11411,]  221 #> [11412,]  221 #> [11413,]  221 #> [11414,]  221 #> [11415,]  221 #> [11416,]  221 #> [11417,]  221 #> [11418,]  221 #> [11419,]  221 #> [11420,]  221 #> [11421,]  221 #> [11422,]  221 #> [11423,]  221 #> [11424,]  221 #> [11425,]  221 #> [11426,]  221 #> [11427,]  221 #> [11428,]  221 #> [11429,]  221 #> [11430,]  221 #> [11431,]  221 #> [11432,]  221 #> [11433,]  221 #> [11434,]  221 #> [11435,]  221 #> [11436,]  221 #> [11437,]  221 #> [11438,]  221 #> [11439,]  221 #> [11440,]  221 #> [11441,]  221 #> [11442,]  221 #> [11443,]  220 #> [11444,]  221 #> [11445,]  221 #> [11446,]  221 #> [11447,]  221 #> [11448,]  221 #> [11449,]  221 #> [11450,]  221 #> [11451,]  220 #> [11452,]  221 #> [11453,]  221 #> [11454,]  221 #> [11455,]  221 #> [11456,]  221 #> [11457,]  221 #> [11458,]  221 #> [11459,]  221 #> [11460,]  220 #> [11461,]  221 #> [11462,]  221 #> [11463,]  221 #> [11464,]  221 #> [11465,]  221 #> [11466,]  221 #> [11467,]  220 #> [11468,]  221 #> [11469,]  221 #> [11470,]  221 #> [11471,]  221 #> [11472,]  221 #> [11473,]  221 #> [11474,]  221 #> [11475,]  221 #> [11476,]  221 #> [11477,]  221 #> [11478,]  221 #> [11479,]  221 #> [11480,]  221 #> [11481,]  221 #> [11482,]  221 #> [11483,]  221 #> [11484,]  221 #> [11485,]  220 #> [11486,]  221 #> [11487,]  221 #> [11488,]  221 #> [11489,]  221 #> [11490,]  221 #> [11491,]  220 #> [11492,]  221 #> [11493,]  221 #> [11494,]  221 #> [11495,]  220 #> [11496,]  221 #> [11497,]  221 #> [11498,]  221 #> [11499,]  221 #> [11500,]  221 #> [11501,]  223 #> [11502,]  223 #> [11503,]  223 #> [11504,]  222 #> [11505,]  223 #> [11506,]  223 #> [11507,]  223 #> [11508,]  222 #> [11509,]  222 #> [11510,]  222 #> [11511,]  223 #> [11512,]  223 #> [11513,]  223 #> [11514,]  223 #> [11515,]  223 #> [11516,]  223 #> [11517,]  223 #> [11518,]  223 #> [11519,]  223 #> [11520,]  223 #> [11521,]  223 #> [11522,]  223 #> [11523,]  223 #> [11524,]  223 #> [11525,]  223 #> [11526,]  223 #> [11527,]  223 #> [11528,]  223 #> [11529,]  223 #> [11530,]  223 #> [11531,]  223 #> [11532,]  223 #> [11533,]  223 #> [11534,]  223 #> [11535,]  223 #> [11536,]  223 #> [11537,]  223 #> [11538,]  223 #> [11539,]  223 #> [11540,]  223 #> [11541,]  223 #> [11542,]  223 #> [11543,]  222 #> [11544,]  223 #> [11545,]  223 #> [11546,]  223 #> [11547,]  223 #> [11548,]  223 #> [11549,]  223 #> [11550,]  223 #> [11551,]  222 #> [11552,]  223 #> [11553,]  223 #> [11554,]  223 #> [11555,]  223 #> [11556,]  223 #> [11557,]  223 #> [11558,]  223 #> [11559,]  223 #> [11560,]  222 #> [11561,]  223 #> [11562,]  223 #> [11563,]  223 #> [11564,]  223 #> [11565,]  223 #> [11566,]  223 #> [11567,]  223 #> [11568,]  223 #> [11569,]  223 #> [11570,]  223 #> [11571,]  223 #> [11572,]  223 #> [11573,]  223 #> [11574,]  223 #> [11575,]  223 #> [11576,]  223 #> [11577,]  223 #> [11578,]  223 #> [11579,]  223 #> [11580,]  223 #> [11581,]  223 #> [11582,]  223 #> [11583,]  223 #> [11584,]  223 #> [11585,]  222 #> [11586,]  223 #> [11587,]  223 #> [11588,]  223 #> [11589,]  223 #> [11590,]  223 #> [11591,]  222 #> [11592,]  223 #> [11593,]  223 #> [11594,]  223 #> [11595,]  222 #> [11596,]  223 #> [11597,]  223 #> [11598,]  223 #> [11599,]  223 #> [11600,]  223 #> [11601,]  225 #> [11602,]  225 #> [11603,]  224 #> [11604,]  225 #> [11605,]  224 #> [11606,]  225 #> [11607,]  225 #> [11608,]  225 #> [11609,]  224 #> [11610,]  224 #> [11611,]  224 #> [11612,]  225 #> [11613,]  225 #> [11614,]  224 #> [11615,]  225 #> [11616,]  225 #> [11617,]  225 #> [11618,]  225 #> [11619,]  225 #> [11620,]  225 #> [11621,]  224 #> [11622,]  225 #> [11623,]  225 #> [11624,]  224 #> [11625,]  225 #> [11626,]  225 #> [11627,]  225 #> [11628,]  224 #> [11629,]  225 #> [11630,]  225 #> [11631,]  224 #> [11632,]  224 #> [11633,]  225 #> [11634,]  224 #> [11635,]  224 #> [11636,]  225 #> [11637,]  225 #> [11638,]  225 #> [11639,]  224 #> [11640,]  224 #> [11641,]  225 #> [11642,]  225 #> [11643,]  225 #> [11644,]  225 #> [11645,]  225 #> [11646,]  225 #> [11647,]  224 #> [11648,]  224 #> [11649,]  225 #> [11650,]  225 #> [11651,]  225 #> [11652,]  224 #> [11653,]  225 #> [11654,]  225 #> [11655,]  225 #> [11656,]  225 #> [11657,]  225 #> [11658,]  225 #> [11659,]  225 #> [11660,]  225 #> [11661,]  225 #> [11662,]  224 #> [11663,]  225 #> [11664,]  225 #> [11665,]  224 #> [11666,]  225 #> [11667,]  225 #> [11668,]  225 #> [11669,]  225 #> [11670,]  224 #> [11671,]  225 #> [11672,]  224 #> [11673,]  225 #> [11674,]  224 #> [11675,]  225 #> [11676,]  224 #> [11677,]  225 #> [11678,]  225 #> [11679,]  225 #> [11680,]  225 #> [11681,]  225 #> [11682,]  224 #> [11683,]  225 #> [11684,]  225 #> [11685,]  225 #> [11686,]  225 #> [11687,]  225 #> [11688,]  225 #> [11689,]  225 #> [11690,]  225 #> [11691,]  224 #> [11692,]  225 #> [11693,]  225 #> [11694,]  225 #> [11695,]  225 #> [11696,]  225 #> [11697,]  225 #> [11698,]  224 #> [11699,]  225 #> [11700,]  225 #> [11701,]  226 #> [11702,]  226 #> [11703,]  226 #> [11704,]  226 #> [11705,]  226 #> [11706,]  226 #> [11707,]  226 #> [11708,]  226 #> [11709,]  226 #> [11710,]  226 #> [11711,]  226 #> [11712,]  226 #> [11713,]  226 #> [11714,]  226 #> [11715,]  226 #> [11716,]  226 #> [11717,]  226 #> [11718,]  226 #> [11719,]  226 #> [11720,]  226 #> [11721,]  226 #> [11722,]  226 #> [11723,]  226 #> [11724,]  226 #> [11725,]  226 #> [11726,]  226 #> [11727,]  226 #> [11728,]  226 #> [11729,]  226 #> [11730,]  226 #> [11731,]  226 #> [11732,]  226 #> [11733,]  226 #> [11734,]  226 #> [11735,]  226 #> [11736,]  226 #> [11737,]  226 #> [11738,]  226 #> [11739,]  226 #> [11740,]  226 #> [11741,]  226 #> [11742,]  226 #> [11743,]  226 #> [11744,]  226 #> [11745,]  226 #> [11746,]  226 #> [11747,]  226 #> [11748,]  226 #> [11749,]  226 #> [11750,]  226 #> [11751,]  226 #> [11752,]  226 #> [11753,]  226 #> [11754,]  226 #> [11755,]  226 #> [11756,]  226 #> [11757,]  226 #> [11758,]  226 #> [11759,]  226 #> [11760,]  226 #> [11761,]  226 #> [11762,]  226 #> [11763,]  226 #> [11764,]  226 #> [11765,]  226 #> [11766,]  226 #> [11767,]  226 #> [11768,]  226 #> [11769,]  226 #> [11770,]  226 #> [11771,]  226 #> [11772,]  226 #> [11773,]  226 #> [11774,]  226 #> [11775,]  226 #> [11776,]  226 #> [11777,]  226 #> [11778,]  226 #> [11779,]  226 #> [11780,]  226 #> [11781,]  226 #> [11782,]  226 #> [11783,]  226 #> [11784,]  226 #> [11785,]  226 #> [11786,]  226 #> [11787,]  226 #> [11788,]  226 #> [11789,]  226 #> [11790,]  226 #> [11791,]  226 #> [11792,]  226 #> [11793,]  226 #> [11794,]  226 #> [11795,]  226 #> [11796,]  226 #> [11797,]  226 #> [11798,]  226 #> [11799,]  226 #> [11800,]  226 #> [11801,]  228 #> [11802,]  227 #> [11803,]  227 #> [11804,]  228 #> [11805,]  228 #> [11806,]  227 #> [11807,]  227 #> [11808,]  227 #> [11809,]  227 #> [11810,]  228 #> [11811,]  228 #> [11812,]  228 #> [11813,]  228 #> [11814,]  228 #> [11815,]  228 #> [11816,]  228 #> [11817,]  228 #> [11818,]  228 #> [11819,]  228 #> [11820,]  227 #> [11821,]  227 #> [11822,]  228 #> [11823,]  227 #> [11824,]  228 #> [11825,]  227 #> [11826,]  228 #> [11827,]  228 #> [11828,]  228 #> [11829,]  227 #> [11830,]  228 #> [11831,]  228 #> [11832,]  228 #> [11833,]  228 #> [11834,]  227 #> [11835,]  227 #> [11836,]  227 #> [11837,]  227 #> [11838,]  228 #> [11839,]  228 #> [11840,]  228 #> [11841,]  227 #> [11842,]  227 #> [11843,]  228 #> [11844,]  227 #> [11845,]  227 #> [11846,]  228 #> [11847,]  228 #> [11848,]  228 #> [11849,]  228 #> [11850,]  227 #> [11851,]  228 #> [11852,]  228 #> [11853,]  227 #> [11854,]  227 #> [11855,]  227 #> [11856,]  227 #> [11857,]  227 #> [11858,]  228 #> [11859,]  228 #> [11860,]  227 #> [11861,]  228 #> [11862,]  227 #> [11863,]  228 #> [11864,]  227 #> [11865,]  227 #> [11866,]  228 #> [11867,]  227 #> [11868,]  228 #> [11869,]  228 #> [11870,]  228 #> [11871,]  228 #> [11872,]  227 #> [11873,]  227 #> [11874,]  227 #> [11875,]  228 #> [11876,]  227 #> [11877,]  228 #> [11878,]  228 #> [11879,]  228 #> [11880,]  227 #> [11881,]  227 #> [11882,]  227 #> [11883,]  228 #> [11884,]  227 #> [11885,]  227 #> [11886,]  227 #> [11887,]  228 #> [11888,]  227 #> [11889,]  227 #> [11890,]  228 #> [11891,]  228 #> [11892,]  228 #> [11893,]  228 #> [11894,]  227 #> [11895,]  228 #> [11896,]  228 #> [11897,]  227 #> [11898,]  227 #> [11899,]  227 #> [11900,]  228 #> [11901,]  229 #> [11902,]  229 #> [11903,]  229 #> [11904,]  229 #> [11905,]  229 #> [11906,]  229 #> [11907,]  229 #> [11908,]  229 #> [11909,]  229 #> [11910,]  229 #> [11911,]  229 #> [11912,]  229 #> [11913,]  229 #> [11914,]  229 #> [11915,]  229 #> [11916,]  229 #> [11917,]  229 #> [11918,]  229 #> [11919,]  229 #> [11920,]  229 #> [11921,]  229 #> [11922,]  229 #> [11923,]  229 #> [11924,]  229 #> [11925,]  229 #> [11926,]  229 #> [11927,]  229 #> [11928,]  229 #> [11929,]  229 #> [11930,]  229 #> [11931,]  229 #> [11932,]  229 #> [11933,]  229 #> [11934,]  229 #> [11935,]  229 #> [11936,]  229 #> [11937,]  229 #> [11938,]  229 #> [11939,]  229 #> [11940,]  229 #> [11941,]  229 #> [11942,]  229 #> [11943,]  229 #> [11944,]  229 #> [11945,]  229 #> [11946,]  229 #> [11947,]  229 #> [11948,]  229 #> [11949,]  229 #> [11950,]  229 #> [11951,]  229 #> [11952,]  229 #> [11953,]  229 #> [11954,]  229 #> [11955,]  229 #> [11956,]  229 #> [11957,]  229 #> [11958,]  229 #> [11959,]  229 #> [11960,]  229 #> [11961,]  229 #> [11962,]  229 #> [11963,]  229 #> [11964,]  229 #> [11965,]  229 #> [11966,]  229 #> [11967,]  229 #> [11968,]  229 #> [11969,]  229 #> [11970,]  229 #> [11971,]  229 #> [11972,]  229 #> [11973,]  229 #> [11974,]  229 #> [11975,]  229 #> [11976,]  229 #> [11977,]  229 #> [11978,]  229 #> [11979,]  229 #> [11980,]  229 #> [11981,]  229 #> [11982,]  229 #> [11983,]  229 #> [11984,]  229 #> [11985,]  229 #> [11986,]  229 #> [11987,]  229 #> [11988,]  229 #> [11989,]  229 #> [11990,]  229 #> [11991,]  229 #> [11992,]  229 #> [11993,]  229 #> [11994,]  229 #> [11995,]  229 #> [11996,]  229 #> [11997,]  229 #> [11998,]  229 #> [11999,]  229 #> [12000,]  229 #> [12001,]  231 #> [12002,]  230 #> [12003,]  231 #> [12004,]  231 #> [12005,]  231 #> [12006,]  230 #> [12007,]  231 #> [12008,]  231 #> [12009,]  231 #> [12010,]  231 #> [12011,]  230 #> [12012,]  230 #> [12013,]  231 #> [12014,]  231 #> [12015,]  230 #> [12016,]  231 #> [12017,]  230 #> [12018,]  231 #> [12019,]  230 #> [12020,]  231 #> [12021,]  231 #> [12022,]  231 #> [12023,]  230 #> [12024,]  231 #> [12025,]  231 #> [12026,]  230 #> [12027,]  231 #> [12028,]  231 #> [12029,]  230 #> [12030,]  230 #> [12031,]  230 #> [12032,]  231 #> [12033,]  231 #> [12034,]  230 #> [12035,]  230 #> [12036,]  231 #> [12037,]  230 #> [12038,]  231 #> [12039,]  231 #> [12040,]  231 #> [12041,]  231 #> [12042,]  230 #> [12043,]  230 #> [12044,]  230 #> [12045,]  231 #> [12046,]  230 #> [12047,]  230 #> [12048,]  230 #> [12049,]  231 #> [12050,]  231 #> [12051,]  231 #> [12052,]  231 #> [12053,]  231 #> [12054,]  231 #> [12055,]  231 #> [12056,]  230 #> [12057,]  231 #> [12058,]  231 #> [12059,]  231 #> [12060,]  230 #> [12061,]  230 #> [12062,]  231 #> [12063,]  230 #> [12064,]  230 #> [12065,]  230 #> [12066,]  230 #> [12067,]  231 #> [12068,]  230 #> [12069,]  231 #> [12070,]  230 #> [12071,]  231 #> [12072,]  231 #> [12073,]  231 #> [12074,]  231 #> [12075,]  230 #> [12076,]  231 #> [12077,]  231 #> [12078,]  230 #> [12079,]  230 #> [12080,]  231 #> [12081,]  230 #> [12082,]  231 #> [12083,]  231 #> [12084,]  231 #> [12085,]  231 #> [12086,]  231 #> [12087,]  231 #> [12088,]  231 #> [12089,]  231 #> [12090,]  231 #> [12091,]  231 #> [12092,]  230 #> [12093,]  230 #> [12094,]  230 #> [12095,]  230 #> [12096,]  230 #> [12097,]  231 #> [12098,]  231 #> [12099,]  231 #> [12100,]  230 #> [12101,]  232 #> [12102,]  232 #> [12103,]  232 #> [12104,]  232 #> [12105,]  232 #> [12106,]  232 #> [12107,]  232 #> [12108,]  232 #> [12109,]  232 #> [12110,]  232 #> [12111,]  232 #> [12112,]  232 #> [12113,]  232 #> [12114,]  232 #> [12115,]  232 #> [12116,]  232 #> [12117,]  232 #> [12118,]  232 #> [12119,]  232 #> [12120,]  232 #> [12121,]  232 #> [12122,]  232 #> [12123,]  232 #> [12124,]  232 #> [12125,]  232 #> [12126,]  232 #> [12127,]  232 #> [12128,]  232 #> [12129,]  232 #> [12130,]  232 #> [12131,]  232 #> [12132,]  232 #> [12133,]  232 #> [12134,]  232 #> [12135,]  232 #> [12136,]  232 #> [12137,]  232 #> [12138,]  232 #> [12139,]  232 #> [12140,]  232 #> [12141,]  232 #> [12142,]  232 #> [12143,]  232 #> [12144,]  232 #> [12145,]  232 #> [12146,]  232 #> [12147,]  232 #> [12148,]  232 #> [12149,]  232 #> [12150,]  232 #> [12151,]  232 #> [12152,]  232 #> [12153,]  232 #> [12154,]  232 #> [12155,]  232 #> [12156,]  232 #> [12157,]  232 #> [12158,]  232 #> [12159,]  232 #> [12160,]  232 #> [12161,]  232 #> [12162,]  232 #> [12163,]  232 #> [12164,]  232 #> [12165,]  232 #> [12166,]  232 #> [12167,]  232 #> [12168,]  232 #> [12169,]  232 #> [12170,]  232 #> [12171,]  232 #> [12172,]  232 #> [12173,]  232 #> [12174,]  232 #> [12175,]  232 #> [12176,]  232 #> [12177,]  232 #> [12178,]  232 #> [12179,]  232 #> [12180,]  232 #> [12181,]  232 #> [12182,]  232 #> [12183,]  232 #> [12184,]  232 #> [12185,]  232 #> [12186,]  232 #> [12187,]  232 #> [12188,]  232 #> [12189,]  232 #> [12190,]  232 #> [12191,]  232 #> [12192,]  232 #> [12193,]  232 #> [12194,]  232 #> [12195,]  232 #> [12196,]  232 #> [12197,]  232 #> [12198,]  232 #> [12199,]  232 #> [12200,]  232 #> [12201,]  233 #> [12202,]  233 #> [12203,]  233 #> [12204,]  233 #> [12205,]  233 #> [12206,]  233 #> [12207,]  233 #> [12208,]  233 #> [12209,]  233 #> [12210,]  233 #> [12211,]  233 #> [12212,]  233 #> [12213,]  233 #> [12214,]  233 #> [12215,]  233 #> [12216,]  233 #> [12217,]  233 #> [12218,]  233 #> [12219,]  233 #> [12220,]  233 #> [12221,]  233 #> [12222,]  233 #> [12223,]  233 #> [12224,]  233 #> [12225,]  233 #> [12226,]  233 #> [12227,]  233 #> [12228,]  233 #> [12229,]  233 #> [12230,]  233 #> [12231,]  233 #> [12232,]  233 #> [12233,]  233 #> [12234,]  233 #> [12235,]  233 #> [12236,]  233 #> [12237,]  233 #> [12238,]  233 #> [12239,]  233 #> [12240,]  233 #> [12241,]  233 #> [12242,]  233 #> [12243,]  233 #> [12244,]  233 #> [12245,]  233 #> [12246,]  233 #> [12247,]  233 #> [12248,]  233 #> [12249,]  233 #> [12250,]  233 #> [12251,]  233 #> [12252,]  233 #> [12253,]  233 #> [12254,]  233 #> [12255,]  233 #> [12256,]  233 #> [12257,]  233 #> [12258,]  233 #> [12259,]  233 #> [12260,]  233 #> [12261,]  233 #> [12262,]  233 #> [12263,]  233 #> [12264,]  233 #> [12265,]  233 #> [12266,]  233 #> [12267,]  233 #> [12268,]  233 #> [12269,]  233 #> [12270,]  233 #> [12271,]  233 #> [12272,]  233 #> [12273,]  233 #> [12274,]  233 #> [12275,]  233 #> [12276,]  233 #> [12277,]  233 #> [12278,]  233 #> [12279,]  233 #> [12280,]  233 #> [12281,]  233 #> [12282,]  233 #> [12283,]  233 #> [12284,]  233 #> [12285,]  233 #> [12286,]  233 #> [12287,]  233 #> [12288,]  233 #> [12289,]  233 #> [12290,]  233 #> [12291,]  233 #> [12292,]  233 #> [12293,]  233 #> [12294,]  233 #> [12295,]  233 #> [12296,]  233 #> [12297,]  233 #> [12298,]  233 #> [12299,]  233 #> [12300,]  233 #> [12301,]  235 #> [12302,]  235 #> [12303,]  235 #> [12304,]  234 #> [12305,]  235 #> [12306,]  235 #> [12307,]  235 #> [12308,]  234 #> [12309,]  234 #> [12310,]  234 #> [12311,]  235 #> [12312,]  235 #> [12313,]  235 #> [12314,]  235 #> [12315,]  235 #> [12316,]  235 #> [12317,]  235 #> [12318,]  235 #> [12319,]  235 #> [12320,]  235 #> [12321,]  235 #> [12322,]  235 #> [12323,]  235 #> [12324,]  235 #> [12325,]  235 #> [12326,]  235 #> [12327,]  235 #> [12328,]  235 #> [12329,]  235 #> [12330,]  235 #> [12331,]  235 #> [12332,]  235 #> [12333,]  235 #> [12334,]  235 #> [12335,]  235 #> [12336,]  235 #> [12337,]  235 #> [12338,]  235 #> [12339,]  235 #> [12340,]  235 #> [12341,]  235 #> [12342,]  235 #> [12343,]  234 #> [12344,]  235 #> [12345,]  235 #> [12346,]  235 #> [12347,]  235 #> [12348,]  235 #> [12349,]  235 #> [12350,]  235 #> [12351,]  234 #> [12352,]  235 #> [12353,]  235 #> [12354,]  235 #> [12355,]  235 #> [12356,]  235 #> [12357,]  235 #> [12358,]  235 #> [12359,]  235 #> [12360,]  234 #> [12361,]  235 #> [12362,]  235 #> [12363,]  235 #> [12364,]  235 #> [12365,]  235 #> [12366,]  235 #> [12367,]  234 #> [12368,]  235 #> [12369,]  235 #> [12370,]  235 #> [12371,]  235 #> [12372,]  235 #> [12373,]  235 #> [12374,]  235 #> [12375,]  235 #> [12376,]  235 #> [12377,]  235 #> [12378,]  235 #> [12379,]  235 #> [12380,]  235 #> [12381,]  235 #> [12382,]  235 #> [12383,]  235 #> [12384,]  235 #> [12385,]  234 #> [12386,]  235 #> [12387,]  235 #> [12388,]  235 #> [12389,]  235 #> [12390,]  235 #> [12391,]  234 #> [12392,]  235 #> [12393,]  235 #> [12394,]  235 #> [12395,]  234 #> [12396,]  235 #> [12397,]  235 #> [12398,]  235 #> [12399,]  235 #> [12400,]  235 #> [12401,]  237 #> [12402,]  237 #> [12403,]  237 #> [12404,]  237 #> [12405,]  237 #> [12406,]  236 #> [12407,]  237 #> [12408,]  237 #> [12409,]  237 #> [12410,]  237 #> [12411,]  237 #> [12412,]  237 #> [12413,]  237 #> [12414,]  237 #> [12415,]  237 #> [12416,]  237 #> [12417,]  237 #> [12418,]  237 #> [12419,]  237 #> [12420,]  236 #> [12421,]  236 #> [12422,]  237 #> [12423,]  237 #> [12424,]  237 #> [12425,]  236 #> [12426,]  237 #> [12427,]  237 #> [12428,]  237 #> [12429,]  237 #> [12430,]  237 #> [12431,]  237 #> [12432,]  237 #> [12433,]  237 #> [12434,]  237 #> [12435,]  236 #> [12436,]  237 #> [12437,]  237 #> [12438,]  237 #> [12439,]  237 #> [12440,]  237 #> [12441,]  237 #> [12442,]  236 #> [12443,]  237 #> [12444,]  236 #> [12445,]  237 #> [12446,]  237 #> [12447,]  237 #> [12448,]  237 #> [12449,]  237 #> [12450,]  237 #> [12451,]  237 #> [12452,]  237 #> [12453,]  236 #> [12454,]  237 #> [12455,]  237 #> [12456,]  236 #> [12457,]  237 #> [12458,]  237 #> [12459,]  237 #> [12460,]  237 #> [12461,]  237 #> [12462,]  237 #> [12463,]  237 #> [12464,]  237 #> [12465,]  236 #> [12466,]  237 #> [12467,]  237 #> [12468,]  237 #> [12469,]  237 #> [12470,]  237 #> [12471,]  237 #> [12472,]  237 #> [12473,]  236 #> [12474,]  236 #> [12475,]  237 #> [12476,]  237 #> [12477,]  237 #> [12478,]  237 #> [12479,]  237 #> [12480,]  236 #> [12481,]  237 #> [12482,]  236 #> [12483,]  237 #> [12484,]  236 #> [12485,]  236 #> [12486,]  236 #> [12487,]  237 #> [12488,]  237 #> [12489,]  236 #> [12490,]  237 #> [12491,]  237 #> [12492,]  237 #> [12493,]  237 #> [12494,]  236 #> [12495,]  237 #> [12496,]  237 #> [12497,]  237 #> [12498,]  237 #> [12499,]  236 #> [12500,]  237 #> [12501,]  239 #> [12502,]  239 #> [12503,]  238 #> [12504,]  239 #> [12505,]  239 #> [12506,]  238 #> [12507,]  238 #> [12508,]  239 #> [12509,]  239 #> [12510,]  239 #> [12511,]  239 #> [12512,]  239 #> [12513,]  239 #> [12514,]  239 #> [12515,]  239 #> [12516,]  239 #> [12517,]  239 #> [12518,]  239 #> [12519,]  239 #> [12520,]  238 #> [12521,]  238 #> [12522,]  239 #> [12523,]  238 #> [12524,]  239 #> [12525,]  238 #> [12526,]  239 #> [12527,]  239 #> [12528,]  239 #> [12529,]  239 #> [12530,]  239 #> [12531,]  239 #> [12532,]  239 #> [12533,]  239 #> [12534,]  238 #> [12535,]  238 #> [12536,]  239 #> [12537,]  238 #> [12538,]  239 #> [12539,]  239 #> [12540,]  239 #> [12541,]  239 #> [12542,]  238 #> [12543,]  239 #> [12544,]  238 #> [12545,]  239 #> [12546,]  239 #> [12547,]  239 #> [12548,]  239 #> [12549,]  239 #> [12550,]  238 #> [12551,]  239 #> [12552,]  239 #> [12553,]  238 #> [12554,]  238 #> [12555,]  238 #> [12556,]  238 #> [12557,]  238 #> [12558,]  239 #> [12559,]  239 #> [12560,]  238 #> [12561,]  239 #> [12562,]  239 #> [12563,]  239 #> [12564,]  238 #> [12565,]  238 #> [12566,]  239 #> [12567,]  239 #> [12568,]  239 #> [12569,]  239 #> [12570,]  239 #> [12571,]  239 #> [12572,]  239 #> [12573,]  238 #> [12574,]  238 #> [12575,]  239 #> [12576,]  239 #> [12577,]  239 #> [12578,]  239 #> [12579,]  239 #> [12580,]  238 #> [12581,]  238 #> [12582,]  238 #> [12583,]  239 #> [12584,]  238 #> [12585,]  238 #> [12586,]  238 #> [12587,]  239 #> [12588,]  238 #> [12589,]  238 #> [12590,]  239 #> [12591,]  239 #> [12592,]  239 #> [12593,]  239 #> [12594,]  238 #> [12595,]  239 #> [12596,]  239 #> [12597,]  238 #> [12598,]  238 #> [12599,]  238 #> [12600,]  239 #> [12601,]  241 #> [12602,]  241 #> [12603,]  241 #> [12604,]  241 #> [12605,]  241 #> [12606,]  241 #> [12607,]  240 #> [12608,]  241 #> [12609,]  241 #> [12610,]  241 #> [12611,]  241 #> [12612,]  241 #> [12613,]  241 #> [12614,]  241 #> [12615,]  241 #> [12616,]  241 #> [12617,]  241 #> [12618,]  241 #> [12619,]  241 #> [12620,]  241 #> [12621,]  240 #> [12622,]  241 #> [12623,]  241 #> [12624,]  241 #> [12625,]  241 #> [12626,]  241 #> [12627,]  241 #> [12628,]  241 #> [12629,]  241 #> [12630,]  241 #> [12631,]  241 #> [12632,]  241 #> [12633,]  241 #> [12634,]  241 #> [12635,]  241 #> [12636,]  241 #> [12637,]  241 #> [12638,]  241 #> [12639,]  240 #> [12640,]  241 #> [12641,]  241 #> [12642,]  241 #> [12643,]  241 #> [12644,]  241 #> [12645,]  241 #> [12646,]  241 #> [12647,]  241 #> [12648,]  241 #> [12649,]  240 #> [12650,]  241 #> [12651,]  241 #> [12652,]  241 #> [12653,]  241 #> [12654,]  241 #> [12655,]  241 #> [12656,]  241 #> [12657,]  241 #> [12658,]  241 #> [12659,]  241 #> [12660,]  241 #> [12661,]  241 #> [12662,]  240 #> [12663,]  241 #> [12664,]  241 #> [12665,]  241 #> [12666,]  241 #> [12667,]  241 #> [12668,]  241 #> [12669,]  241 #> [12670,]  240 #> [12671,]  241 #> [12672,]  241 #> [12673,]  241 #> [12674,]  241 #> [12675,]  241 #> [12676,]  241 #> [12677,]  241 #> [12678,]  241 #> [12679,]  241 #> [12680,]  240 #> [12681,]  241 #> [12682,]  241 #> [12683,]  241 #> [12684,]  241 #> [12685,]  241 #> [12686,]  241 #> [12687,]  241 #> [12688,]  241 #> [12689,]  241 #> [12690,]  241 #> [12691,]  241 #> [12692,]  241 #> [12693,]  241 #> [12694,]  241 #> [12695,]  240 #> [12696,]  241 #> [12697,]  241 #> [12698,]  241 #> [12699,]  241 #> [12700,]  241 #> [12701,]  242 #> [12702,]  243 #> [12703,]  243 #> [12704,]  242 #> [12705,]  243 #> [12706,]  243 #> [12707,]  243 #> [12708,]  242 #> [12709,]  242 #> [12710,]  243 #> [12711,]  242 #> [12712,]  243 #> [12713,]  242 #> [12714,]  242 #> [12715,]  242 #> [12716,]  242 #> [12717,]  242 #> [12718,]  243 #> [12719,]  243 #> [12720,]  243 #> [12721,]  242 #> [12722,]  242 #> [12723,]  243 #> [12724,]  242 #> [12725,]  243 #> [12726,]  243 #> [12727,]  242 #> [12728,]  243 #> [12729,]  243 #> [12730,]  242 #> [12731,]  243 #> [12732,]  243 #> [12733,]  243 #> [12734,]  243 #> [12735,]  242 #> [12736,]  243 #> [12737,]  242 #> [12738,]  242 #> [12739,]  243 #> [12740,]  243 #> [12741,]  242 #> [12742,]  243 #> [12743,]  242 #> [12744,]  242 #> [12745,]  242 #> [12746,]  242 #> [12747,]  243 #> [12748,]  243 #> [12749,]  242 #> [12750,]  243 #> [12751,]  242 #> [12752,]  242 #> [12753,]  243 #> [12754,]  242 #> [12755,]  242 #> [12756,]  243 #> [12757,]  243 #> [12758,]  242 #> [12759,]  242 #> [12760,]  243 #> [12761,]  243 #> [12762,]  242 #> [12763,]  243 #> [12764,]  243 #> [12765,]  243 #> [12766,]  242 #> [12767,]  242 #> [12768,]  242 #> [12769,]  242 #> [12770,]  243 #> [12771,]  243 #> [12772,]  243 #> [12773,]  243 #> [12774,]  242 #> [12775,]  243 #> [12776,]  243 #> [12777,]  243 #> [12778,]  243 #> [12779,]  242 #> [12780,]  242 #> [12781,]  242 #> [12782,]  242 #> [12783,]  242 #> [12784,]  243 #> [12785,]  242 #> [12786,]  243 #> [12787,]  242 #> [12788,]  242 #> [12789,]  242 #> [12790,]  242 #> [12791,]  242 #> [12792,]  242 #> [12793,]  243 #> [12794,]  243 #> [12795,]  242 #> [12796,]  242 #> [12797,]  243 #> [12798,]  243 #> [12799,]  242 #> [12800,]  243 #> [12801,]  245 #> [12802,]  244 #> [12803,]  245 #> [12804,]  245 #> [12805,]  245 #> [12806,]  244 #> [12807,]  245 #> [12808,]  245 #> [12809,]  245 #> [12810,]  245 #> [12811,]  244 #> [12812,]  244 #> [12813,]  245 #> [12814,]  245 #> [12815,]  244 #> [12816,]  245 #> [12817,]  244 #> [12818,]  244 #> [12819,]  244 #> [12820,]  245 #> [12821,]  244 #> [12822,]  245 #> [12823,]  244 #> [12824,]  245 #> [12825,]  245 #> [12826,]  244 #> [12827,]  245 #> [12828,]  245 #> [12829,]  244 #> [12830,]  244 #> [12831,]  244 #> [12832,]  244 #> [12833,]  245 #> [12834,]  244 #> [12835,]  244 #> [12836,]  245 #> [12837,]  244 #> [12838,]  244 #> [12839,]  245 #> [12840,]  244 #> [12841,]  245 #> [12842,]  244 #> [12843,]  244 #> [12844,]  244 #> [12845,]  245 #> [12846,]  244 #> [12847,]  244 #> [12848,]  244 #> [12849,]  245 #> [12850,]  245 #> [12851,]  244 #> [12852,]  245 #> [12853,]  245 #> [12854,]  245 #> [12855,]  245 #> [12856,]  244 #> [12857,]  245 #> [12858,]  245 #> [12859,]  245 #> [12860,]  244 #> [12861,]  244 #> [12862,]  244 #> [12863,]  244 #> [12864,]  244 #> [12865,]  244 #> [12866,]  244 #> [12867,]  245 #> [12868,]  244 #> [12869,]  244 #> [12870,]  244 #> [12871,]  245 #> [12872,]  245 #> [12873,]  245 #> [12874,]  245 #> [12875,]  244 #> [12876,]  245 #> [12877,]  245 #> [12878,]  244 #> [12879,]  244 #> [12880,]  245 #> [12881,]  244 #> [12882,]  244 #> [12883,]  244 #> [12884,]  245 #> [12885,]  245 #> [12886,]  245 #> [12887,]  245 #> [12888,]  245 #> [12889,]  244 #> [12890,]  245 #> [12891,]  245 #> [12892,]  244 #> [12893,]  244 #> [12894,]  244 #> [12895,]  244 #> [12896,]  244 #> [12897,]  244 #> [12898,]  244 #> [12899,]  244 #> [12900,]  244 #> [12901,]  246 #> [12902,]  246 #> [12903,]  246 #> [12904,]  247 #> [12905,]  246 #> [12906,]  247 #> [12907,]  246 #> [12908,]  246 #> [12909,]  247 #> [12910,]  247 #> [12911,]  247 #> [12912,]  247 #> [12913,]  246 #> [12914,]  247 #> [12915,]  247 #> [12916,]  246 #> [12917,]  246 #> [12918,]  247 #> [12919,]  247 #> [12920,]  246 #> [12921,]  247 #> [12922,]  246 #> [12923,]  247 #> [12924,]  246 #> [12925,]  246 #> [12926,]  247 #> [12927,]  247 #> [12928,]  246 #> [12929,]  246 #> [12930,]  247 #> [12931,]  247 #> [12932,]  247 #> [12933,]  247 #> [12934,]  247 #> [12935,]  246 #> [12936,]  247 #> [12937,]  246 #> [12938,]  247 #> [12939,]  246 #> [12940,]  246 #> [12941,]  247 #> [12942,]  247 #> [12943,]  246 #> [12944,]  246 #> [12945,]  246 #> [12946,]  246 #> [12947,]  246 #> [12948,]  247 #> [12949,]  246 #> [12950,]  246 #> [12951,]  246 #> [12952,]  247 #> [12953,]  246 #> [12954,]  246 #> [12955,]  246 #> [12956,]  246 #> [12957,]  246 #> [12958,]  247 #> [12959,]  246 #> [12960,]  247 #> [12961,]  247 #> [12962,]  247 #> [12963,]  246 #> [12964,]  247 #> [12965,]  246 #> [12966,]  246 #> [12967,]  247 #> [12968,]  247 #> [12969,]  247 #> [12970,]  246 #> [12971,]  246 #> [12972,]  246 #> [12973,]  247 #> [12974,]  247 #> [12975,]  247 #> [12976,]  246 #> [12977,]  246 #> [12978,]  246 #> [12979,]  246 #> [12980,]  247 #> [12981,]  246 #> [12982,]  247 #> [12983,]  246 #> [12984,]  246 #> [12985,]  247 #> [12986,]  246 #> [12987,]  246 #> [12988,]  246 #> [12989,]  246 #> [12990,]  246 #> [12991,]  246 #> [12992,]  247 #> [12993,]  247 #> [12994,]  246 #> [12995,]  246 #> [12996,]  247 #> [12997,]  247 #> [12998,]  246 #> [12999,]  247 #> [13000,]  246 #> [13001,]  248 #> [13002,]  248 #> [13003,]  248 #> [13004,]  248 #> [13005,]  248 #> [13006,]  248 #> [13007,]  249 #> [13008,]  248 #> [13009,]  248 #> [13010,]  249 #> [13011,]  248 #> [13012,]  248 #> [13013,]  248 #> [13014,]  248 #> [13015,]  248 #> [13016,]  249 #> [13017,]  248 #> [13018,]  248 #> [13019,]  248 #> [13020,]  249 #> [13021,]  248 #> [13022,]  248 #> [13023,]  248 #> [13024,]  249 #> [13025,]  248 #> [13026,]  248 #> [13027,]  248 #> [13028,]  249 #> [13029,]  248 #> [13030,]  248 #> [13031,]  248 #> [13032,]  248 #> [13033,]  248 #> [13034,]  248 #> [13035,]  248 #> [13036,]  248 #> [13037,]  248 #> [13038,]  248 #> [13039,]  248 #> [13040,]  248 #> [13041,]  248 #> [13042,]  248 #> [13043,]  248 #> [13044,]  248 #> [13045,]  248 #> [13046,]  248 #> [13047,]  248 #> [13048,]  248 #> [13049,]  248 #> [13050,]  249 #> [13051,]  248 #> [13052,]  249 #> [13053,]  248 #> [13054,]  249 #> [13055,]  248 #> [13056,]  248 #> [13057,]  248 #> [13058,]  248 #> [13059,]  248 #> [13060,]  248 #> [13061,]  248 #> [13062,]  248 #> [13063,]  248 #> [13064,]  248 #> [13065,]  248 #> [13066,]  248 #> [13067,]  248 #> [13068,]  248 #> [13069,]  248 #> [13070,]  248 #> [13071,]  248 #> [13072,]  248 #> [13073,]  248 #> [13074,]  248 #> [13075,]  248 #> [13076,]  249 #> [13077,]  248 #> [13078,]  248 #> [13079,]  248 #> [13080,]  248 #> [13081,]  248 #> [13082,]  248 #> [13083,]  248 #> [13084,]  248 #> [13085,]  248 #> [13086,]  249 #> [13087,]  248 #> [13088,]  248 #> [13089,]  248 #> [13090,]  248 #> [13091,]  249 #> [13092,]  248 #> [13093,]  248 #> [13094,]  248 #> [13095,]  248 #> [13096,]  248 #> [13097,]  248 #> [13098,]  248 #> [13099,]  248 #> [13100,]  248 #> [13101,]  250 #> [13102,]  250 #> [13103,]  250 #> [13104,]  250 #> [13105,]  251 #> [13106,]  250 #> [13107,]  250 #> [13108,]  250 #> [13109,]  250 #> [13110,]  250 #> [13111,]  250 #> [13112,]  250 #> [13113,]  250 #> [13114,]  250 #> [13115,]  250 #> [13116,]  250 #> [13117,]  250 #> [13118,]  251 #> [13119,]  250 #> [13120,]  250 #> [13121,]  250 #> [13122,]  250 #> [13123,]  250 #> [13124,]  250 #> [13125,]  250 #> [13126,]  250 #> [13127,]  250 #> [13128,]  250 #> [13129,]  250 #> [13130,]  250 #> [13131,]  250 #> [13132,]  250 #> [13133,]  250 #> [13134,]  250 #> [13135,]  250 #> [13136,]  250 #> [13137,]  250 #> [13138,]  250 #> [13139,]  250 #> [13140,]  250 #> [13141,]  250 #> [13142,]  250 #> [13143,]  250 #> [13144,]  250 #> [13145,]  250 #> [13146,]  250 #> [13147,]  250 #> [13148,]  250 #> [13149,]  250 #> [13150,]  250 #> [13151,]  250 #> [13152,]  250 #> [13153,]  250 #> [13154,]  250 #> [13155,]  250 #> [13156,]  250 #> [13157,]  250 #> [13158,]  250 #> [13159,]  250 #> [13160,]  250 #> [13161,]  250 #> [13162,]  250 #> [13163,]  250 #> [13164,]  250 #> [13165,]  250 #> [13166,]  250 #> [13167,]  250 #> [13168,]  250 #> [13169,]  250 #> [13170,]  250 #> [13171,]  251 #> [13172,]  250 #> [13173,]  250 #> [13174,]  250 #> [13175,]  251 #> [13176,]  250 #> [13177,]  250 #> [13178,]  250 #> [13179,]  250 #> [13180,]  250 #> [13181,]  250 #> [13182,]  250 #> [13183,]  250 #> [13184,]  250 #> [13185,]  250 #> [13186,]  250 #> [13187,]  250 #> [13188,]  250 #> [13189,]  250 #> [13190,]  250 #> [13191,]  250 #> [13192,]  250 #> [13193,]  250 #> [13194,]  250 #> [13195,]  251 #> [13196,]  250 #> [13197,]  250 #> [13198,]  250 #> [13199,]  250 #> [13200,]  251 #> [13201,]  253 #> [13202,]  253 #> [13203,]  252 #> [13204,]  253 #> [13205,]  252 #> [13206,]  252 #> [13207,]  253 #> [13208,]  253 #> [13209,]  253 #> [13210,]  253 #> [13211,]  252 #> [13212,]  252 #> [13213,]  253 #> [13214,]  252 #> [13215,]  253 #> [13216,]  253 #> [13217,]  253 #> [13218,]  253 #> [13219,]  252 #> [13220,]  252 #> [13221,]  253 #> [13222,]  252 #> [13223,]  253 #> [13224,]  252 #> [13225,]  253 #> [13226,]  252 #> [13227,]  253 #> [13228,]  253 #> [13229,]  252 #> [13230,]  252 #> [13231,]  253 #> [13232,]  252 #> [13233,]  253 #> [13234,]  252 #> [13235,]  252 #> [13236,]  252 #> [13237,]  253 #> [13238,]  253 #> [13239,]  253 #> [13240,]  252 #> [13241,]  252 #> [13242,]  252 #> [13243,]  253 #> [13244,]  253 #> [13245,]  253 #> [13246,]  253 #> [13247,]  253 #> [13248,]  252 #> [13249,]  253 #> [13250,]  253 #> [13251,]  252 #> [13252,]  252 #> [13253,]  253 #> [13254,]  252 #> [13255,]  252 #> [13256,]  253 #> [13257,]  252 #> [13258,]  252 #> [13259,]  253 #> [13260,]  252 #> [13261,]  253 #> [13262,]  252 #> [13263,]  252 #> [13264,]  253 #> [13265,]  253 #> [13266,]  252 #> [13267,]  252 #> [13268,]  252 #> [13269,]  252 #> [13270,]  253 #> [13271,]  253 #> [13272,]  253 #> [13273,]  253 #> [13274,]  253 #> [13275,]  253 #> [13276,]  253 #> [13277,]  253 #> [13278,]  252 #> [13279,]  253 #> [13280,]  252 #> [13281,]  252 #> [13282,]  253 #> [13283,]  252 #> [13284,]  253 #> [13285,]  253 #> [13286,]  253 #> [13287,]  253 #> [13288,]  253 #> [13289,]  252 #> [13290,]  253 #> [13291,]  252 #> [13292,]  253 #> [13293,]  252 #> [13294,]  253 #> [13295,]  253 #> [13296,]  253 #> [13297,]  253 #> [13298,]  252 #> [13299,]  252 #> [13300,]  253 #> [13301,]  255 #> [13302,]  255 #> [13303,]  254 #> [13304,]  255 #> [13305,]  255 #> [13306,]  255 #> [13307,]  254 #> [13308,]  255 #> [13309,]  255 #> [13310,]  255 #> [13311,]  255 #> [13312,]  255 #> [13313,]  254 #> [13314,]  255 #> [13315,]  255 #> [13316,]  254 #> [13317,]  255 #> [13318,]  254 #> [13319,]  254 #> [13320,]  255 #> [13321,]  254 #> [13322,]  255 #> [13323,]  254 #> [13324,]  254 #> [13325,]  255 #> [13326,]  255 #> [13327,]  255 #> [13328,]  255 #> [13329,]  255 #> [13330,]  254 #> [13331,]  254 #> [13332,]  255 #> [13333,]  255 #> [13334,]  254 #> [13335,]  254 #> [13336,]  254 #> [13337,]  254 #> [13338,]  255 #> [13339,]  254 #> [13340,]  254 #> [13341,]  255 #> [13342,]  255 #> [13343,]  255 #> [13344,]  254 #> [13345,]  255 #> [13346,]  255 #> [13347,]  254 #> [13348,]  255 #> [13349,]  254 #> [13350,]  255 #> [13351,]  255 #> [13352,]  255 #> [13353,]  255 #> [13354,]  254 #> [13355,]  255 #> [13356,]  255 #> [13357,]  255 #> [13358,]  255 #> [13359,]  255 #> [13360,]  255 #> [13361,]  255 #> [13362,]  254 #> [13363,]  255 #> [13364,]  255 #> [13365,]  255 #> [13366,]  255 #> [13367,]  255 #> [13368,]  255 #> [13369,]  255 #> [13370,]  254 #> [13371,]  255 #> [13372,]  255 #> [13373,]  255 #> [13374,]  255 #> [13375,]  255 #> [13376,]  255 #> [13377,]  254 #> [13378,]  255 #> [13379,]  254 #> [13380,]  254 #> [13381,]  255 #> [13382,]  255 #> [13383,]  254 #> [13384,]  255 #> [13385,]  255 #> [13386,]  255 #> [13387,]  255 #> [13388,]  255 #> [13389,]  255 #> [13390,]  255 #> [13391,]  255 #> [13392,]  255 #> [13393,]  254 #> [13394,]  255 #> [13395,]  254 #> [13396,]  255 #> [13397,]  255 #> [13398,]  254 #> [13399,]  255 #> [13400,]  254 #> [13401,]  257 #> [13402,]  257 #> [13403,]  256 #> [13404,]  257 #> [13405,]  256 #> [13406,]  256 #> [13407,]  257 #> [13408,]  257 #> [13409,]  257 #> [13410,]  257 #> [13411,]  256 #> [13412,]  256 #> [13413,]  257 #> [13414,]  256 #> [13415,]  257 #> [13416,]  257 #> [13417,]  257 #> [13418,]  257 #> [13419,]  256 #> [13420,]  256 #> [13421,]  257 #> [13422,]  256 #> [13423,]  257 #> [13424,]  256 #> [13425,]  257 #> [13426,]  256 #> [13427,]  257 #> [13428,]  257 #> [13429,]  256 #> [13430,]  256 #> [13431,]  257 #> [13432,]  256 #> [13433,]  256 #> [13434,]  256 #> [13435,]  256 #> [13436,]  256 #> [13437,]  257 #> [13438,]  257 #> [13439,]  257 #> [13440,]  256 #> [13441,]  256 #> [13442,]  256 #> [13443,]  257 #> [13444,]  257 #> [13445,]  257 #> [13446,]  257 #> [13447,]  257 #> [13448,]  256 #> [13449,]  256 #> [13450,]  256 #> [13451,]  256 #> [13452,]  256 #> [13453,]  257 #> [13454,]  256 #> [13455,]  256 #> [13456,]  257 #> [13457,]  256 #> [13458,]  256 #> [13459,]  256 #> [13460,]  256 #> [13461,]  257 #> [13462,]  256 #> [13463,]  256 #> [13464,]  257 #> [13465,]  256 #> [13466,]  256 #> [13467,]  256 #> [13468,]  256 #> [13469,]  256 #> [13470,]  257 #> [13471,]  257 #> [13472,]  257 #> [13473,]  257 #> [13474,]  257 #> [13475,]  257 #> [13476,]  257 #> [13477,]  257 #> [13478,]  256 #> [13479,]  257 #> [13480,]  256 #> [13481,]  256 #> [13482,]  257 #> [13483,]  256 #> [13484,]  257 #> [13485,]  256 #> [13486,]  257 #> [13487,]  257 #> [13488,]  257 #> [13489,]  256 #> [13490,]  257 #> [13491,]  256 #> [13492,]  256 #> [13493,]  256 #> [13494,]  257 #> [13495,]  257 #> [13496,]  257 #> [13497,]  256 #> [13498,]  256 #> [13499,]  256 #> [13500,]  257 #> [13501,]  258 #> [13502,]  258 #> [13503,]  258 #> [13504,]  258 #> [13505,]  258 #> [13506,]  258 #> [13507,]  258 #> [13508,]  258 #> [13509,]  258 #> [13510,]  258 #> [13511,]  258 #> [13512,]  258 #> [13513,]  258 #> [13514,]  258 #> [13515,]  258 #> [13516,]  258 #> [13517,]  258 #> [13518,]  258 #> [13519,]  258 #> [13520,]  258 #> [13521,]  258 #> [13522,]  258 #> [13523,]  258 #> [13524,]  258 #> [13525,]  258 #> [13526,]  258 #> [13527,]  258 #> [13528,]  258 #> [13529,]  258 #> [13530,]  258 #> [13531,]  258 #> [13532,]  258 #> [13533,]  258 #> [13534,]  258 #> [13535,]  258 #> [13536,]  258 #> [13537,]  258 #> [13538,]  258 #> [13539,]  258 #> [13540,]  258 #> [13541,]  258 #> [13542,]  258 #> [13543,]  258 #> [13544,]  258 #> [13545,]  258 #> [13546,]  258 #> [13547,]  258 #> [13548,]  258 #> [13549,]  258 #> [13550,]  258 #> [13551,]  258 #> [13552,]  258 #> [13553,]  258 #> [13554,]  258 #> [13555,]  258 #> [13556,]  258 #> [13557,]  258 #> [13558,]  258 #> [13559,]  258 #> [13560,]  258 #> [13561,]  258 #> [13562,]  258 #> [13563,]  258 #> [13564,]  258 #> [13565,]  258 #> [13566,]  258 #> [13567,]  258 #> [13568,]  258 #> [13569,]  258 #> [13570,]  258 #> [13571,]  258 #> [13572,]  258 #> [13573,]  258 #> [13574,]  258 #> [13575,]  258 #> [13576,]  258 #> [13577,]  258 #> [13578,]  258 #> [13579,]  258 #> [13580,]  258 #> [13581,]  258 #> [13582,]  258 #> [13583,]  258 #> [13584,]  258 #> [13585,]  258 #> [13586,]  258 #> [13587,]  258 #> [13588,]  258 #> [13589,]  258 #> [13590,]  258 #> [13591,]  258 #> [13592,]  258 #> [13593,]  258 #> [13594,]  258 #> [13595,]  258 #> [13596,]  258 #> [13597,]  258 #> [13598,]  258 #> [13599,]  258 #> [13600,]  258 #> [13601,]  259 #> [13602,]  259 #> [13603,]  259 #> [13604,]  259 #> [13605,]  259 #> [13606,]  259 #> [13607,]  259 #> [13608,]  259 #> [13609,]  259 #> [13610,]  259 #> [13611,]  259 #> [13612,]  259 #> [13613,]  260 #> [13614,]  259 #> [13615,]  259 #> [13616,]  259 #> [13617,]  259 #> [13618,]  260 #> [13619,]  259 #> [13620,]  259 #> [13621,]  259 #> [13622,]  259 #> [13623,]  259 #> [13624,]  259 #> [13625,]  259 #> [13626,]  259 #> [13627,]  259 #> [13628,]  259 #> [13629,]  259 #> [13630,]  259 #> [13631,]  259 #> [13632,]  259 #> [13633,]  259 #> [13634,]  259 #> [13635,]  259 #> [13636,]  259 #> [13637,]  259 #> [13638,]  259 #> [13639,]  259 #> [13640,]  259 #> [13641,]  259 #> [13642,]  260 #> [13643,]  259 #> [13644,]  259 #> [13645,]  259 #> [13646,]  259 #> [13647,]  259 #> [13648,]  259 #> [13649,]  259 #> [13650,]  259 #> [13651,]  260 #> [13652,]  259 #> [13653,]  260 #> [13654,]  259 #> [13655,]  259 #> [13656,]  259 #> [13657,]  259 #> [13658,]  259 #> [13659,]  259 #> [13660,]  259 #> [13661,]  259 #> [13662,]  259 #> [13663,]  259 #> [13664,]  259 #> [13665,]  259 #> [13666,]  259 #> [13667,]  259 #> [13668,]  259 #> [13669,]  259 #> [13670,]  259 #> [13671,]  259 #> [13672,]  259 #> [13673,]  259 #> [13674,]  259 #> [13675,]  259 #> [13676,]  259 #> [13677,]  259 #> [13678,]  259 #> [13679,]  260 #> [13680,]  259 #> [13681,]  259 #> [13682,]  259 #> [13683,]  259 #> [13684,]  260 #> [13685,]  259 #> [13686,]  259 #> [13687,]  259 #> [13688,]  259 #> [13689,]  259 #> [13690,]  259 #> [13691,]  260 #> [13692,]  259 #> [13693,]  260 #> [13694,]  260 #> [13695,]  259 #> [13696,]  259 #> [13697,]  259 #> [13698,]  259 #> [13699,]  259 #> [13700,]  259 #> [13701,]  262 #> [13702,]  261 #> [13703,]  262 #> [13704,]  262 #> [13705,]  261 #> [13706,]  261 #> [13707,]  262 #> [13708,]  261 #> [13709,]  262 #> [13710,]  262 #> [13711,]  261 #> [13712,]  261 #> [13713,]  262 #> [13714,]  262 #> [13715,]  261 #> [13716,]  262 #> [13717,]  261 #> [13718,]  261 #> [13719,]  261 #> [13720,]  262 #> [13721,]  261 #> [13722,]  262 #> [13723,]  261 #> [13724,]  262 #> [13725,]  262 #> [13726,]  261 #> [13727,]  262 #> [13728,]  262 #> [13729,]  261 #> [13730,]  261 #> [13731,]  261 #> [13732,]  261 #> [13733,]  261 #> [13734,]  261 #> [13735,]  261 #> [13736,]  262 #> [13737,]  261 #> [13738,]  261 #> [13739,]  262 #> [13740,]  261 #> [13741,]  262 #> [13742,]  261 #> [13743,]  261 #> [13744,]  261 #> [13745,]  262 #> [13746,]  261 #> [13747,]  261 #> [13748,]  261 #> [13749,]  262 #> [13750,]  262 #> [13751,]  261 #> [13752,]  262 #> [13753,]  262 #> [13754,]  262 #> [13755,]  262 #> [13756,]  261 #> [13757,]  262 #> [13758,]  262 #> [13759,]  262 #> [13760,]  261 #> [13761,]  261 #> [13762,]  261 #> [13763,]  261 #> [13764,]  261 #> [13765,]  261 #> [13766,]  261 #> [13767,]  262 #> [13768,]  261 #> [13769,]  261 #> [13770,]  261 #> [13771,]  262 #> [13772,]  262 #> [13773,]  262 #> [13774,]  262 #> [13775,]  261 #> [13776,]  262 #> [13777,]  261 #> [13778,]  261 #> [13779,]  261 #> [13780,]  261 #> [13781,]  261 #> [13782,]  261 #> [13783,]  261 #> [13784,]  261 #> [13785,]  262 #> [13786,]  262 #> [13787,]  262 #> [13788,]  262 #> [13789,]  261 #> [13790,]  262 #> [13791,]  262 #> [13792,]  261 #> [13793,]  261 #> [13794,]  261 #> [13795,]  261 #> [13796,]  261 #> [13797,]  261 #> [13798,]  261 #> [13799,]  261 #> [13800,]  261 #> [13801,]  264 #> [13802,]  264 #> [13803,]  263 #> [13804,]  263 #> [13805,]  263 #> [13806,]  264 #> [13807,]  263 #> [13808,]  263 #> [13809,]  263 #> [13810,]  263 #> [13811,]  263 #> [13812,]  263 #> [13813,]  264 #> [13814,]  264 #> [13815,]  264 #> [13816,]  264 #> [13817,]  264 #> [13818,]  263 #> [13819,]  263 #> [13820,]  263 #> [13821,]  264 #> [13822,]  264 #> [13823,]  263 #> [13824,]  263 #> [13825,]  263 #> [13826,]  264 #> [13827,]  264 #> [13828,]  263 #> [13829,]  264 #> [13830,]  263 #> [13831,]  263 #> [13832,]  263 #> [13833,]  264 #> [13834,]  263 #> [13835,]  264 #> [13836,]  263 #> [13837,]  264 #> [13838,]  263 #> [13839,]  263 #> [13840,]  263 #> [13841,]  264 #> [13842,]  263 #> [13843,]  263 #> [13844,]  264 #> [13845,]  263 #> [13846,]  263 #> [13847,]  263 #> [13848,]  263 #> [13849,]  263 #> [13850,]  264 #> [13851,]  263 #> [13852,]  264 #> [13853,]  263 #> [13854,]  263 #> [13855,]  263 #> [13856,]  263 #> [13857,]  263 #> [13858,]  264 #> [13859,]  264 #> [13860,]  263 #> [13861,]  264 #> [13862,]  263 #> [13863,]  263 #> [13864,]  263 #> [13865,]  263 #> [13866,]  263 #> [13867,]  263 #> [13868,]  264 #> [13869,]  263 #> [13870,]  264 #> [13871,]  264 #> [13872,]  263 #> [13873,]  264 #> [13874,]  263 #> [13875,]  263 #> [13876,]  264 #> [13877,]  264 #> [13878,]  263 #> [13879,]  264 #> [13880,]  263 #> [13881,]  264 #> [13882,]  263 #> [13883,]  264 #> [13884,]  263 #> [13885,]  263 #> [13886,]  264 #> [13887,]  263 #> [13888,]  263 #> [13889,]  263 #> [13890,]  264 #> [13891,]  263 #> [13892,]  263 #> [13893,]  264 #> [13894,]  264 #> [13895,]  263 #> [13896,]  264 #> [13897,]  263 #> [13898,]  263 #> [13899,]  264 #> [13900,]  264 #> [13901,]  265 #> [13902,]  265 #> [13903,]  265 #> [13904,]  265 #> [13905,]  265 #> [13906,]  265 #> [13907,]  265 #> [13908,]  265 #> [13909,]  265 #> [13910,]  265 #> [13911,]  265 #> [13912,]  265 #> [13913,]  265 #> [13914,]  265 #> [13915,]  265 #> [13916,]  265 #> [13917,]  265 #> [13918,]  265 #> [13919,]  265 #> [13920,]  265 #> [13921,]  265 #> [13922,]  265 #> [13923,]  265 #> [13924,]  265 #> [13925,]  265 #> [13926,]  265 #> [13927,]  265 #> [13928,]  265 #> [13929,]  265 #> [13930,]  265 #> [13931,]  265 #> [13932,]  265 #> [13933,]  265 #> [13934,]  265 #> [13935,]  265 #> [13936,]  265 #> [13937,]  265 #> [13938,]  265 #> [13939,]  265 #> [13940,]  265 #> [13941,]  265 #> [13942,]  265 #> [13943,]  265 #> [13944,]  265 #> [13945,]  265 #> [13946,]  265 #> [13947,]  265 #> [13948,]  265 #> [13949,]  265 #> [13950,]  265 #> [13951,]  265 #> [13952,]  265 #> [13953,]  265 #> [13954,]  265 #> [13955,]  265 #> [13956,]  265 #> [13957,]  265 #> [13958,]  265 #> [13959,]  265 #> [13960,]  265 #> [13961,]  265 #> [13962,]  265 #> [13963,]  265 #> [13964,]  265 #> [13965,]  265 #> [13966,]  265 #> [13967,]  265 #> [13968,]  265 #> [13969,]  265 #> [13970,]  265 #> [13971,]  265 #> [13972,]  265 #> [13973,]  265 #> [13974,]  265 #> [13975,]  265 #> [13976,]  265 #> [13977,]  265 #> [13978,]  265 #> [13979,]  265 #> [13980,]  265 #> [13981,]  265 #> [13982,]  265 #> [13983,]  265 #> [13984,]  265 #> [13985,]  265 #> [13986,]  265 #> [13987,]  265 #> [13988,]  265 #> [13989,]  265 #> [13990,]  265 #> [13991,]  265 #> [13992,]  265 #> [13993,]  265 #> [13994,]  265 #> [13995,]  265 #> [13996,]  265 #> [13997,]  265 #> [13998,]  265 #> [13999,]  265 #> [14000,]  265 #> [14001,]  266 #> [14002,]  267 #> [14003,]  266 #> [14004,]  266 #> [14005,]  267 #> [14006,]  266 #> [14007,]  267 #> [14008,]  267 #> [14009,]  267 #> [14010,]  267 #> [14011,]  266 #> [14012,]  267 #> [14013,]  267 #> [14014,]  266 #> [14015,]  267 #> [14016,]  266 #> [14017,]  267 #> [14018,]  267 #> [14019,]  266 #> [14020,]  267 #> [14021,]  267 #> [14022,]  267 #> [14023,]  267 #> [14024,]  267 #> [14025,]  267 #> [14026,]  266 #> [14027,]  267 #> [14028,]  266 #> [14029,]  267 #> [14030,]  267 #> [14031,]  267 #> [14032,]  267 #> [14033,]  267 #> [14034,]  266 #> [14035,]  266 #> [14036,]  267 #> [14037,]  266 #> [14038,]  266 #> [14039,]  267 #> [14040,]  267 #> [14041,]  267 #> [14042,]  266 #> [14043,]  267 #> [14044,]  267 #> [14045,]  266 #> [14046,]  267 #> [14047,]  267 #> [14048,]  267 #> [14049,]  266 #> [14050,]  267 #> [14051,]  267 #> [14052,]  266 #> [14053,]  267 #> [14054,]  267 #> [14055,]  267 #> [14056,]  266 #> [14057,]  267 #> [14058,]  267 #> [14059,]  266 #> [14060,]  267 #> [14061,]  267 #> [14062,]  267 #> [14063,]  267 #> [14064,]  266 #> [14065,]  266 #> [14066,]  267 #> [14067,]  267 #> [14068,]  266 #> [14069,]  266 #> [14070,]  267 #> [14071,]  267 #> [14072,]  266 #> [14073,]  266 #> [14074,]  267 #> [14075,]  267 #> [14076,]  267 #> [14077,]  266 #> [14078,]  267 #> [14079,]  266 #> [14080,]  267 #> [14081,]  267 #> [14082,]  267 #> [14083,]  267 #> [14084,]  267 #> [14085,]  267 #> [14086,]  267 #> [14087,]  267 #> [14088,]  267 #> [14089,]  266 #> [14090,]  267 #> [14091,]  267 #> [14092,]  267 #> [14093,]  267 #> [14094,]  266 #> [14095,]  267 #> [14096,]  266 #> [14097,]  266 #> [14098,]  267 #> [14099,]  267 #> [14100,]  266 #> [14101,]  269 #> [14102,]  269 #> [14103,]  268 #> [14104,]  269 #> [14105,]  269 #> [14106,]  269 #> [14107,]  268 #> [14108,]  269 #> [14109,]  269 #> [14110,]  269 #> [14111,]  269 #> [14112,]  269 #> [14113,]  268 #> [14114,]  269 #> [14115,]  269 #> [14116,]  269 #> [14117,]  269 #> [14118,]  269 #> [14119,]  269 #> [14120,]  269 #> [14121,]  268 #> [14122,]  269 #> [14123,]  268 #> [14124,]  269 #> [14125,]  269 #> [14126,]  269 #> [14127,]  269 #> [14128,]  269 #> [14129,]  269 #> [14130,]  268 #> [14131,]  268 #> [14132,]  269 #> [14133,]  269 #> [14134,]  269 #> [14135,]  269 #> [14136,]  269 #> [14137,]  269 #> [14138,]  269 #> [14139,]  268 #> [14140,]  268 #> [14141,]  269 #> [14142,]  269 #> [14143,]  269 #> [14144,]  269 #> [14145,]  269 #> [14146,]  269 #> [14147,]  268 #> [14148,]  269 #> [14149,]  268 #> [14150,]  269 #> [14151,]  269 #> [14152,]  269 #> [14153,]  269 #> [14154,]  268 #> [14155,]  269 #> [14156,]  269 #> [14157,]  269 #> [14158,]  269 #> [14159,]  269 #> [14160,]  269 #> [14161,]  269 #> [14162,]  268 #> [14163,]  269 #> [14164,]  269 #> [14165,]  269 #> [14166,]  269 #> [14167,]  269 #> [14168,]  269 #> [14169,]  269 #> [14170,]  268 #> [14171,]  269 #> [14172,]  269 #> [14173,]  269 #> [14174,]  269 #> [14175,]  269 #> [14176,]  269 #> [14177,]  268 #> [14178,]  269 #> [14179,]  268 #> [14180,]  268 #> [14181,]  269 #> [14182,]  269 #> [14183,]  268 #> [14184,]  269 #> [14185,]  269 #> [14186,]  269 #> [14187,]  269 #> [14188,]  269 #> [14189,]  269 #> [14190,]  269 #> [14191,]  269 #> [14192,]  269 #> [14193,]  269 #> [14194,]  269 #> [14195,]  268 #> [14196,]  269 #> [14197,]  269 #> [14198,]  268 #> [14199,]  269 #> [14200,]  269 #> [14201,]  270 #> [14202,]  271 #> [14203,]  271 #> [14204,]  270 #> [14205,]  271 #> [14206,]  271 #> [14207,]  271 #> [14208,]  270 #> [14209,]  270 #> [14210,]  271 #> [14211,]  270 #> [14212,]  271 #> [14213,]  270 #> [14214,]  270 #> [14215,]  270 #> [14216,]  270 #> [14217,]  270 #> [14218,]  271 #> [14219,]  271 #> [14220,]  271 #> [14221,]  270 #> [14222,]  270 #> [14223,]  271 #> [14224,]  271 #> [14225,]  271 #> [14226,]  271 #> [14227,]  270 #> [14228,]  271 #> [14229,]  271 #> [14230,]  270 #> [14231,]  271 #> [14232,]  271 #> [14233,]  271 #> [14234,]  271 #> [14235,]  270 #> [14236,]  271 #> [14237,]  270 #> [14238,]  271 #> [14239,]  271 #> [14240,]  271 #> [14241,]  270 #> [14242,]  271 #> [14243,]  270 #> [14244,]  270 #> [14245,]  270 #> [14246,]  270 #> [14247,]  271 #> [14248,]  271 #> [14249,]  270 #> [14250,]  271 #> [14251,]  271 #> [14252,]  270 #> [14253,]  271 #> [14254,]  270 #> [14255,]  270 #> [14256,]  271 #> [14257,]  271 #> [14258,]  270 #> [14259,]  271 #> [14260,]  271 #> [14261,]  271 #> [14262,]  270 #> [14263,]  271 #> [14264,]  271 #> [14265,]  271 #> [14266,]  270 #> [14267,]  270 #> [14268,]  270 #> [14269,]  270 #> [14270,]  271 #> [14271,]  271 #> [14272,]  271 #> [14273,]  271 #> [14274,]  270 #> [14275,]  271 #> [14276,]  271 #> [14277,]  271 #> [14278,]  271 #> [14279,]  270 #> [14280,]  270 #> [14281,]  270 #> [14282,]  270 #> [14283,]  270 #> [14284,]  271 #> [14285,]  270 #> [14286,]  271 #> [14287,]  270 #> [14288,]  270 #> [14289,]  270 #> [14290,]  270 #> [14291,]  270 #> [14292,]  270 #> [14293,]  271 #> [14294,]  271 #> [14295,]  270 #> [14296,]  270 #> [14297,]  271 #> [14298,]  271 #> [14299,]  270 #> [14300,]  271 #> [14301,]  273 #> [14302,]  273 #> [14303,]  272 #> [14304,]  272 #> [14305,]  272 #> [14306,]  273 #> [14307,]  273 #> [14308,]  272 #> [14309,]  272 #> [14310,]  272 #> [14311,]  273 #> [14312,]  273 #> [14313,]  273 #> [14314,]  273 #> [14315,]  273 #> [14316,]  273 #> [14317,]  273 #> [14318,]  272 #> [14319,]  273 #> [14320,]  272 #> [14321,]  273 #> [14322,]  273 #> [14323,]  273 #> [14324,]  272 #> [14325,]  273 #> [14326,]  273 #> [14327,]  273 #> [14328,]  273 #> [14329,]  273 #> [14330,]  272 #> [14331,]  272 #> [14332,]  272 #> [14333,]  273 #> [14334,]  272 #> [14335,]  273 #> [14336,]  273 #> [14337,]  273 #> [14338,]  273 #> [14339,]  272 #> [14340,]  273 #> [14341,]  273 #> [14342,]  272 #> [14343,]  272 #> [14344,]  273 #> [14345,]  272 #> [14346,]  273 #> [14347,]  273 #> [14348,]  272 #> [14349,]  272 #> [14350,]  273 #> [14351,]  272 #> [14352,]  273 #> [14353,]  272 #> [14354,]  273 #> [14355,]  273 #> [14356,]  272 #> [14357,]  273 #> [14358,]  273 #> [14359,]  273 #> [14360,]  272 #> [14361,]  273 #> [14362,]  272 #> [14363,]  273 #> [14364,]  272 #> [14365,]  272 #> [14366,]  272 #> [14367,]  272 #> [14368,]  273 #> [14369,]  273 #> [14370,]  273 #> [14371,]  273 #> [14372,]  272 #> [14373,]  273 #> [14374,]  273 #> [14375,]  273 #> [14376,]  273 #> [14377,]  273 #> [14378,]  272 #> [14379,]  273 #> [14380,]  273 #> [14381,]  273 #> [14382,]  273 #> [14383,]  273 #> [14384,]  273 #> [14385,]  272 #> [14386,]  273 #> [14387,]  273 #> [14388,]  272 #> [14389,]  272 #> [14390,]  273 #> [14391,]  272 #> [14392,]  273 #> [14393,]  273 #> [14394,]  273 #> [14395,]  272 #> [14396,]  273 #> [14397,]  273 #> [14398,]  273 #> [14399,]  273 #> [14400,]  273 #> [14401,]  275 #> [14402,]  275 #> [14403,]  275 #> [14404,]  275 #> [14405,]  275 #> [14406,]  274 #> [14407,]  275 #> [14408,]  275 #> [14409,]  275 #> [14410,]  275 #> [14411,]  275 #> [14412,]  275 #> [14413,]  275 #> [14414,]  275 #> [14415,]  275 #> [14416,]  275 #> [14417,]  275 #> [14418,]  275 #> [14419,]  275 #> [14420,]  274 #> [14421,]  274 #> [14422,]  275 #> [14423,]  275 #> [14424,]  275 #> [14425,]  274 #> [14426,]  275 #> [14427,]  275 #> [14428,]  275 #> [14429,]  275 #> [14430,]  275 #> [14431,]  275 #> [14432,]  275 #> [14433,]  275 #> [14434,]  275 #> [14435,]  274 #> [14436,]  275 #> [14437,]  275 #> [14438,]  275 #> [14439,]  275 #> [14440,]  275 #> [14441,]  275 #> [14442,]  274 #> [14443,]  275 #> [14444,]  274 #> [14445,]  275 #> [14446,]  275 #> [14447,]  275 #> [14448,]  275 #> [14449,]  275 #> [14450,]  275 #> [14451,]  275 #> [14452,]  275 #> [14453,]  274 #> [14454,]  275 #> [14455,]  275 #> [14456,]  274 #> [14457,]  275 #> [14458,]  275 #> [14459,]  275 #> [14460,]  275 #> [14461,]  275 #> [14462,]  275 #> [14463,]  275 #> [14464,]  275 #> [14465,]  274 #> [14466,]  275 #> [14467,]  275 #> [14468,]  275 #> [14469,]  275 #> [14470,]  275 #> [14471,]  275 #> [14472,]  275 #> [14473,]  274 #> [14474,]  274 #> [14475,]  275 #> [14476,]  275 #> [14477,]  275 #> [14478,]  275 #> [14479,]  275 #> [14480,]  274 #> [14481,]  275 #> [14482,]  274 #> [14483,]  275 #> [14484,]  274 #> [14485,]  274 #> [14486,]  274 #> [14487,]  275 #> [14488,]  275 #> [14489,]  274 #> [14490,]  275 #> [14491,]  275 #> [14492,]  275 #> [14493,]  275 #> [14494,]  274 #> [14495,]  275 #> [14496,]  275 #> [14497,]  275 #> [14498,]  275 #> [14499,]  274 #> [14500,]  275 #> [14501,]  277 #> [14502,]  276 #> [14503,]  277 #> [14504,]  277 #> [14505,]  277 #> [14506,]  276 #> [14507,]  277 #> [14508,]  277 #> [14509,]  277 #> [14510,]  277 #> [14511,]  276 #> [14512,]  276 #> [14513,]  277 #> [14514,]  277 #> [14515,]  276 #> [14516,]  277 #> [14517,]  276 #> [14518,]  277 #> [14519,]  276 #> [14520,]  277 #> [14521,]  277 #> [14522,]  277 #> [14523,]  276 #> [14524,]  277 #> [14525,]  277 #> [14526,]  276 #> [14527,]  277 #> [14528,]  277 #> [14529,]  276 #> [14530,]  276 #> [14531,]  276 #> [14532,]  277 #> [14533,]  277 #> [14534,]  276 #> [14535,]  276 #> [14536,]  277 #> [14537,]  276 #> [14538,]  277 #> [14539,]  277 #> [14540,]  277 #> [14541,]  277 #> [14542,]  276 #> [14543,]  276 #> [14544,]  276 #> [14545,]  277 #> [14546,]  277 #> [14547,]  276 #> [14548,]  276 #> [14549,]  277 #> [14550,]  277 #> [14551,]  277 #> [14552,]  277 #> [14553,]  277 #> [14554,]  277 #> [14555,]  277 #> [14556,]  276 #> [14557,]  277 #> [14558,]  277 #> [14559,]  277 #> [14560,]  276 #> [14561,]  276 #> [14562,]  277 #> [14563,]  276 #> [14564,]  276 #> [14565,]  276 #> [14566,]  276 #> [14567,]  277 #> [14568,]  276 #> [14569,]  277 #> [14570,]  276 #> [14571,]  277 #> [14572,]  277 #> [14573,]  277 #> [14574,]  277 #> [14575,]  276 #> [14576,]  277 #> [14577,]  277 #> [14578,]  276 #> [14579,]  276 #> [14580,]  277 #> [14581,]  276 #> [14582,]  277 #> [14583,]  277 #> [14584,]  277 #> [14585,]  277 #> [14586,]  277 #> [14587,]  277 #> [14588,]  277 #> [14589,]  277 #> [14590,]  277 #> [14591,]  277 #> [14592,]  276 #> [14593,]  277 #> [14594,]  276 #> [14595,]  276 #> [14596,]  276 #> [14597,]  277 #> [14598,]  277 #> [14599,]  277 #> [14600,]  276 #> [14601,]  279 #> [14602,]  279 #> [14603,]  278 #> [14604,]  278 #> [14605,]  278 #> [14606,]  278 #> [14607,]  279 #> [14608,]  279 #> [14609,]  278 #> [14610,]  278 #> [14611,]  278 #> [14612,]  279 #> [14613,]  279 #> [14614,]  278 #> [14615,]  279 #> [14616,]  279 #> [14617,]  278 #> [14618,]  279 #> [14619,]  279 #> [14620,]  279 #> [14621,]  278 #> [14622,]  279 #> [14623,]  279 #> [14624,]  278 #> [14625,]  278 #> [14626,]  279 #> [14627,]  279 #> [14628,]  278 #> [14629,]  279 #> [14630,]  279 #> [14631,]  278 #> [14632,]  278 #> [14633,]  279 #> [14634,]  278 #> [14635,]  278 #> [14636,]  279 #> [14637,]  279 #> [14638,]  279 #> [14639,]  278 #> [14640,]  278 #> [14641,]  279 #> [14642,]  278 #> [14643,]  279 #> [14644,]  279 #> [14645,]  279 #> [14646,]  279 #> [14647,]  278 #> [14648,]  278 #> [14649,]  279 #> [14650,]  279 #> [14651,]  279 #> [14652,]  278 #> [14653,]  279 #> [14654,]  278 #> [14655,]  279 #> [14656,]  279 #> [14657,]  278 #> [14658,]  279 #> [14659,]  279 #> [14660,]  279 #> [14661,]  279 #> [14662,]  278 #> [14663,]  279 #> [14664,]  279 #> [14665,]  278 #> [14666,]  279 #> [14667,]  278 #> [14668,]  279 #> [14669,]  279 #> [14670,]  278 #> [14671,]  279 #> [14672,]  278 #> [14673,]  278 #> [14674,]  278 #> [14675,]  279 #> [14676,]  278 #> [14677,]  279 #> [14678,]  279 #> [14679,]  278 #> [14680,]  279 #> [14681,]  279 #> [14682,]  278 #> [14683,]  279 #> [14684,]  279 #> [14685,]  279 #> [14686,]  278 #> [14687,]  279 #> [14688,]  278 #> [14689,]  278 #> [14690,]  279 #> [14691,]  278 #> [14692,]  278 #> [14693,]  279 #> [14694,]  278 #> [14695,]  279 #> [14696,]  279 #> [14697,]  279 #> [14698,]  278 #> [14699,]  278 #> [14700,]  279 #> [14701,]  281 #> [14702,]  281 #> [14703,]  280 #> [14704,]  281 #> [14705,]  281 #> [14706,]  281 #> [14707,]  281 #> [14708,]  281 #> [14709,]  281 #> [14710,]  281 #> [14711,]  281 #> [14712,]  280 #> [14713,]  281 #> [14714,]  280 #> [14715,]  281 #> [14716,]  281 #> [14717,]  281 #> [14718,]  281 #> [14719,]  281 #> [14720,]  281 #> [14721,]  281 #> [14722,]  281 #> [14723,]  281 #> [14724,]  281 #> [14725,]  281 #> [14726,]  280 #> [14727,]  281 #> [14728,]  281 #> [14729,]  281 #> [14730,]  281 #> [14731,]  281 #> [14732,]  280 #> [14733,]  281 #> [14734,]  281 #> [14735,]  281 #> [14736,]  281 #> [14737,]  281 #> [14738,]  281 #> [14739,]  281 #> [14740,]  281 #> [14741,]  281 #> [14742,]  280 #> [14743,]  281 #> [14744,]  281 #> [14745,]  281 #> [14746,]  281 #> [14747,]  281 #> [14748,]  280 #> [14749,]  281 #> [14750,]  281 #> [14751,]  280 #> [14752,]  281 #> [14753,]  281 #> [14754,]  280 #> [14755,]  281 #> [14756,]  281 #> [14757,]  281 #> [14758,]  281 #> [14759,]  281 #> [14760,]  281 #> [14761,]  281 #> [14762,]  280 #> [14763,]  281 #> [14764,]  281 #> [14765,]  281 #> [14766,]  280 #> [14767,]  281 #> [14768,]  281 #> [14769,]  280 #> [14770,]  281 #> [14771,]  281 #> [14772,]  281 #> [14773,]  281 #> [14774,]  281 #> [14775,]  281 #> [14776,]  281 #> [14777,]  281 #> [14778,]  281 #> [14779,]  281 #> [14780,]  280 #> [14781,]  280 #> [14782,]  281 #> [14783,]  281 #> [14784,]  281 #> [14785,]  281 #> [14786,]  281 #> [14787,]  281 #> [14788,]  281 #> [14789,]  280 #> [14790,]  281 #> [14791,]  281 #> [14792,]  281 #> [14793,]  281 #> [14794,]  281 #> [14795,]  281 #> [14796,]  281 #> [14797,]  281 #> [14798,]  281 #> [14799,]  281 #> [14800,]  281 #> [14801,]  282 #> [14802,]  283 #> [14803,]  282 #> [14804,]  282 #> [14805,]  283 #> [14806,]  282 #> [14807,]  282 #> [14808,]  282 #> [14809,]  283 #> [14810,]  283 #> [14811,]  282 #> [14812,]  283 #> [14813,]  283 #> [14814,]  282 #> [14815,]  282 #> [14816,]  282 #> [14817,]  283 #> [14818,]  283 #> [14819,]  282 #> [14820,]  283 #> [14821,]  283 #> [14822,]  282 #> [14823,]  283 #> [14824,]  283 #> [14825,]  282 #> [14826,]  282 #> [14827,]  283 #> [14828,]  282 #> [14829,]  283 #> [14830,]  282 #> [14831,]  283 #> [14832,]  283 #> [14833,]  283 #> [14834,]  282 #> [14835,]  282 #> [14836,]  283 #> [14837,]  282 #> [14838,]  282 #> [14839,]  282 #> [14840,]  283 #> [14841,]  282 #> [14842,]  282 #> [14843,]  282 #> [14844,]  283 #> [14845,]  282 #> [14846,]  282 #> [14847,]  282 #> [14848,]  282 #> [14849,]  282 #> [14850,]  282 #> [14851,]  282 #> [14852,]  282 #> [14853,]  283 #> [14854,]  282 #> [14855,]  282 #> [14856,]  282 #> [14857,]  282 #> [14858,]  282 #> [14859,]  282 #> [14860,]  283 #> [14861,]  283 #> [14862,]  282 #> [14863,]  283 #> [14864,]  282 #> [14865,]  282 #> [14866,]  282 #> [14867,]  282 #> [14868,]  282 #> [14869,]  282 #> [14870,]  283 #> [14871,]  282 #> [14872,]  282 #> [14873,]  282 #> [14874,]  282 #> [14875,]  283 #> [14876,]  282 #> [14877,]  282 #> [14878,]  282 #> [14879,]  282 #> [14880,]  283 #> [14881,]  283 #> [14882,]  282 #> [14883,]  283 #> [14884,]  283 #> [14885,]  282 #> [14886,]  283 #> [14887,]  282 #> [14888,]  283 #> [14889,]  282 #> [14890,]  282 #> [14891,]  282 #> [14892,]  282 #> [14893,]  282 #> [14894,]  282 #> [14895,]  282 #> [14896,]  282 #> [14897,]  282 #> [14898,]  282 #> [14899,]  282 #> [14900,]  282 #> [14901,]  285 #> [14902,]  285 #> [14903,]  285 #> [14904,]  284 #> [14905,]  285 #> [14906,]  285 #> [14907,]  285 #> [14908,]  284 #> [14909,]  284 #> [14910,]  285 #> [14911,]  284 #> [14912,]  285 #> [14913,]  284 #> [14914,]  285 #> [14915,]  285 #> [14916,]  285 #> [14917,]  284 #> [14918,]  285 #> [14919,]  285 #> [14920,]  285 #> [14921,]  285 #> [14922,]  284 #> [14923,]  285 #> [14924,]  285 #> [14925,]  285 #> [14926,]  285 #> [14927,]  284 #> [14928,]  285 #> [14929,]  285 #> [14930,]  285 #> [14931,]  285 #> [14932,]  285 #> [14933,]  285 #> [14934,]  285 #> [14935,]  284 #> [14936,]  285 #> [14937,]  285 #> [14938,]  285 #> [14939,]  285 #> [14940,]  285 #> [14941,]  285 #> [14942,]  285 #> [14943,]  285 #> [14944,]  284 #> [14945,]  285 #> [14946,]  285 #> [14947,]  285 #> [14948,]  285 #> [14949,]  284 #> [14950,]  285 #> [14951,]  285 #> [14952,]  284 #> [14953,]  285 #> [14954,]  285 #> [14955,]  284 #> [14956,]  285 #> [14957,]  285 #> [14958,]  284 #> [14959,]  285 #> [14960,]  285 #> [14961,]  285 #> [14962,]  285 #> [14963,]  285 #> [14964,]  285 #> [14965,]  285 #> [14966,]  284 #> [14967,]  285 #> [14968,]  285 #> [14969,]  285 #> [14970,]  285 #> [14971,]  285 #> [14972,]  285 #> [14973,]  285 #> [14974,]  285 #> [14975,]  285 #> [14976,]  285 #> [14977,]  285 #> [14978,]  285 #> [14979,]  284 #> [14980,]  284 #> [14981,]  284 #> [14982,]  284 #> [14983,]  284 #> [14984,]  285 #> [14985,]  285 #> [14986,]  285 #> [14987,]  284 #> [14988,]  284 #> [14989,]  284 #> [14990,]  284 #> [14991,]  285 #> [14992,]  284 #> [14993,]  285 #> [14994,]  285 #> [14995,]  284 #> [14996,]  285 #> [14997,]  285 #> [14998,]  285 #> [14999,]  284 #> [15000,]  285 #> [15001,]  287 #> [15002,]  287 #> [15003,]  286 #> [15004,]  287 #> [15005,]  287 #> [15006,]  287 #> [15007,]  286 #> [15008,]  287 #> [15009,]  287 #> [15010,]  287 #> [15011,]  287 #> [15012,]  287 #> [15013,]  286 #> [15014,]  287 #> [15015,]  287 #> [15016,]  286 #> [15017,]  287 #> [15018,]  287 #> [15019,]  286 #> [15020,]  287 #> [15021,]  286 #> [15022,]  287 #> [15023,]  286 #> [15024,]  287 #> [15025,]  287 #> [15026,]  287 #> [15027,]  287 #> [15028,]  287 #> [15029,]  287 #> [15030,]  286 #> [15031,]  286 #> [15032,]  287 #> [15033,]  287 #> [15034,]  286 #> [15035,]  286 #> [15036,]  286 #> [15037,]  286 #> [15038,]  287 #> [15039,]  286 #> [15040,]  286 #> [15041,]  287 #> [15042,]  287 #> [15043,]  287 #> [15044,]  287 #> [15045,]  287 #> [15046,]  287 #> [15047,]  286 #> [15048,]  287 #> [15049,]  286 #> [15050,]  287 #> [15051,]  287 #> [15052,]  287 #> [15053,]  287 #> [15054,]  286 #> [15055,]  287 #> [15056,]  287 #> [15057,]  287 #> [15058,]  287 #> [15059,]  287 #> [15060,]  287 #> [15061,]  287 #> [15062,]  286 #> [15063,]  287 #> [15064,]  287 #> [15065,]  287 #> [15066,]  287 #> [15067,]  287 #> [15068,]  287 #> [15069,]  287 #> [15070,]  286 #> [15071,]  287 #> [15072,]  287 #> [15073,]  287 #> [15074,]  287 #> [15075,]  287 #> [15076,]  287 #> [15077,]  286 #> [15078,]  287 #> [15079,]  286 #> [15080,]  286 #> [15081,]  287 #> [15082,]  287 #> [15083,]  286 #> [15084,]  287 #> [15085,]  287 #> [15086,]  287 #> [15087,]  287 #> [15088,]  287 #> [15089,]  287 #> [15090,]  287 #> [15091,]  287 #> [15092,]  287 #> [15093,]  286 #> [15094,]  287 #> [15095,]  286 #> [15096,]  287 #> [15097,]  287 #> [15098,]  286 #> [15099,]  287 #> [15100,]  286 #> [15101,]  289 #> [15102,]  289 #> [15103,]  288 #> [15104,]  288 #> [15105,]  288 #> [15106,]  289 #> [15107,]  288 #> [15108,]  288 #> [15109,]  288 #> [15110,]  288 #> [15111,]  288 #> [15112,]  288 #> [15113,]  289 #> [15114,]  289 #> [15115,]  289 #> [15116,]  289 #> [15117,]  289 #> [15118,]  288 #> [15119,]  288 #> [15120,]  288 #> [15121,]  289 #> [15122,]  289 #> [15123,]  288 #> [15124,]  288 #> [15125,]  288 #> [15126,]  289 #> [15127,]  289 #> [15128,]  288 #> [15129,]  289 #> [15130,]  288 #> [15131,]  288 #> [15132,]  288 #> [15133,]  289 #> [15134,]  288 #> [15135,]  289 #> [15136,]  288 #> [15137,]  289 #> [15138,]  288 #> [15139,]  288 #> [15140,]  288 #> [15141,]  289 #> [15142,]  288 #> [15143,]  288 #> [15144,]  289 #> [15145,]  288 #> [15146,]  288 #> [15147,]  289 #> [15148,]  288 #> [15149,]  288 #> [15150,]  289 #> [15151,]  288 #> [15152,]  289 #> [15153,]  288 #> [15154,]  288 #> [15155,]  288 #> [15156,]  288 #> [15157,]  288 #> [15158,]  289 #> [15159,]  289 #> [15160,]  288 #> [15161,]  289 #> [15162,]  288 #> [15163,]  288 #> [15164,]  288 #> [15165,]  288 #> [15166,]  288 #> [15167,]  288 #> [15168,]  289 #> [15169,]  288 #> [15170,]  289 #> [15171,]  289 #> [15172,]  288 #> [15173,]  289 #> [15174,]  288 #> [15175,]  288 #> [15176,]  289 #> [15177,]  289 #> [15178,]  288 #> [15179,]  289 #> [15180,]  288 #> [15181,]  289 #> [15182,]  288 #> [15183,]  289 #> [15184,]  289 #> [15185,]  288 #> [15186,]  289 #> [15187,]  288 #> [15188,]  288 #> [15189,]  288 #> [15190,]  289 #> [15191,]  288 #> [15192,]  288 #> [15193,]  289 #> [15194,]  289 #> [15195,]  288 #> [15196,]  289 #> [15197,]  288 #> [15198,]  288 #> [15199,]  289 #> [15200,]  289 #> [15201,]  291 #> [15202,]  291 #> [15203,]  290 #> [15204,]  291 #> [15205,]  291 #> [15206,]  291 #> [15207,]  291 #> [15208,]  291 #> [15209,]  291 #> [15210,]  291 #> [15211,]  291 #> [15212,]  290 #> [15213,]  291 #> [15214,]  290 #> [15215,]  291 #> [15216,]  291 #> [15217,]  291 #> [15218,]  291 #> [15219,]  291 #> [15220,]  291 #> [15221,]  291 #> [15222,]  291 #> [15223,]  291 #> [15224,]  291 #> [15225,]  291 #> [15226,]  290 #> [15227,]  291 #> [15228,]  291 #> [15229,]  291 #> [15230,]  291 #> [15231,]  291 #> [15232,]  290 #> [15233,]  291 #> [15234,]  291 #> [15235,]  291 #> [15236,]  291 #> [15237,]  291 #> [15238,]  291 #> [15239,]  291 #> [15240,]  291 #> [15241,]  291 #> [15242,]  291 #> [15243,]  291 #> [15244,]  291 #> [15245,]  291 #> [15246,]  291 #> [15247,]  291 #> [15248,]  291 #> [15249,]  291 #> [15250,]  291 #> [15251,]  291 #> [15252,]  291 #> [15253,]  291 #> [15254,]  291 #> [15255,]  291 #> [15256,]  291 #> [15257,]  291 #> [15258,]  291 #> [15259,]  291 #> [15260,]  291 #> [15261,]  291 #> [15262,]  291 #> [15263,]  291 #> [15264,]  291 #> [15265,]  291 #> [15266,]  291 #> [15267,]  291 #> [15268,]  291 #> [15269,]  290 #> [15270,]  291 #> [15271,]  291 #> [15272,]  291 #> [15273,]  291 #> [15274,]  291 #> [15275,]  291 #> [15276,]  291 #> [15277,]  291 #> [15278,]  291 #> [15279,]  291 #> [15280,]  290 #> [15281,]  291 #> [15282,]  291 #> [15283,]  291 #> [15284,]  291 #> [15285,]  291 #> [15286,]  291 #> [15287,]  291 #> [15288,]  291 #> [15289,]  291 #> [15290,]  291 #> [15291,]  291 #> [15292,]  291 #> [15293,]  291 #> [15294,]  291 #> [15295,]  291 #> [15296,]  291 #> [15297,]  291 #> [15298,]  291 #> [15299,]  291 #> [15300,]  291 #> [15301,]  293 #> [15302,]  293 #> [15303,]  292 #> [15304,]  292 #> [15305,]  292 #> [15306,]  293 #> [15307,]  292 #> [15308,]  292 #> [15309,]  292 #> [15310,]  292 #> [15311,]  292 #> [15312,]  292 #> [15313,]  293 #> [15314,]  293 #> [15315,]  293 #> [15316,]  293 #> [15317,]  293 #> [15318,]  292 #> [15319,]  292 #> [15320,]  292 #> [15321,]  293 #> [15322,]  292 #> [15323,]  292 #> [15324,]  292 #> [15325,]  292 #> [15326,]  293 #> [15327,]  292 #> [15328,]  292 #> [15329,]  293 #> [15330,]  292 #> [15331,]  292 #> [15332,]  292 #> [15333,]  293 #> [15334,]  292 #> [15335,]  293 #> [15336,]  292 #> [15337,]  292 #> [15338,]  292 #> [15339,]  292 #> [15340,]  292 #> [15341,]  293 #> [15342,]  292 #> [15343,]  292 #> [15344,]  293 #> [15345,]  292 #> [15346,]  292 #> [15347,]  292 #> [15348,]  292 #> [15349,]  292 #> [15350,]  293 #> [15351,]  292 #> [15352,]  292 #> [15353,]  292 #> [15354,]  292 #> [15355,]  292 #> [15356,]  292 #> [15357,]  292 #> [15358,]  292 #> [15359,]  293 #> [15360,]  292 #> [15361,]  293 #> [15362,]  292 #> [15363,]  292 #> [15364,]  292 #> [15365,]  292 #> [15366,]  292 #> [15367,]  292 #> [15368,]  293 #> [15369,]  292 #> [15370,]  293 #> [15371,]  293 #> [15372,]  292 #> [15373,]  293 #> [15374,]  292 #> [15375,]  292 #> [15376,]  293 #> [15377,]  293 #> [15378,]  292 #> [15379,]  293 #> [15380,]  292 #> [15381,]  293 #> [15382,]  292 #> [15383,]  293 #> [15384,]  292 #> [15385,]  292 #> [15386,]  293 #> [15387,]  292 #> [15388,]  292 #> [15389,]  292 #> [15390,]  292 #> [15391,]  292 #> [15392,]  292 #> [15393,]  293 #> [15394,]  292 #> [15395,]  292 #> [15396,]  293 #> [15397,]  292 #> [15398,]  292 #> [15399,]  293 #> [15400,]  292 #> [15401,]  294 #> [15402,]  294 #> [15403,]  294 #> [15404,]  294 #> [15405,]  294 #> [15406,]  294 #> [15407,]  294 #> [15408,]  295 #> [15409,]  294 #> [15410,]  294 #> [15411,]  294 #> [15412,]  294 #> [15413,]  295 #> [15414,]  294 #> [15415,]  295 #> [15416,]  295 #> [15417,]  294 #> [15418,]  294 #> [15419,]  295 #> [15420,]  295 #> [15421,]  294 #> [15422,]  295 #> [15423,]  294 #> [15424,]  294 #> [15425,]  294 #> [15426,]  295 #> [15427,]  295 #> [15428,]  294 #> [15429,]  295 #> [15430,]  295 #> [15431,]  294 #> [15432,]  294 #> [15433,]  294 #> [15434,]  294 #> [15435,]  294 #> [15436,]  295 #> [15437,]  295 #> [15438,]  295 #> [15439,]  294 #> [15440,]  294 #> [15441,]  295 #> [15442,]  294 #> [15443,]  295 #> [15444,]  295 #> [15445,]  294 #> [15446,]  295 #> [15447,]  294 #> [15448,]  294 #> [15449,]  294 #> [15450,]  295 #> [15451,]  295 #> [15452,]  294 #> [15453,]  295 #> [15454,]  294 #> [15455,]  295 #> [15456,]  295 #> [15457,]  294 #> [15458,]  295 #> [15459,]  295 #> [15460,]  295 #> [15461,]  294 #> [15462,]  294 #> [15463,]  294 #> [15464,]  295 #> [15465,]  294 #> [15466,]  295 #> [15467,]  294 #> [15468,]  294 #> [15469,]  295 #> [15470,]  294 #> [15471,]  295 #> [15472,]  294 #> [15473,]  294 #> [15474,]  294 #> [15475,]  294 #> [15476,]  294 #> [15477,]  295 #> [15478,]  294 #> [15479,]  294 #> [15480,]  295 #> [15481,]  295 #> [15482,]  294 #> [15483,]  295 #> [15484,]  295 #> [15485,]  295 #> [15486,]  294 #> [15487,]  295 #> [15488,]  294 #> [15489,]  294 #> [15490,]  295 #> [15491,]  294 #> [15492,]  294 #> [15493,]  294 #> [15494,]  294 #> [15495,]  295 #> [15496,]  295 #> [15497,]  295 #> [15498,]  294 #> [15499,]  294 #> [15500,]  295 #> [15501,]  297 #> [15502,]  296 #> [15503,]  297 #> [15504,]  297 #> [15505,]  297 #> [15506,]  296 #> [15507,]  297 #> [15508,]  297 #> [15509,]  297 #> [15510,]  297 #> [15511,]  296 #> [15512,]  296 #> [15513,]  297 #> [15514,]  297 #> [15515,]  296 #> [15516,]  297 #> [15517,]  296 #> [15518,]  297 #> [15519,]  296 #> [15520,]  297 #> [15521,]  297 #> [15522,]  297 #> [15523,]  296 #> [15524,]  297 #> [15525,]  297 #> [15526,]  296 #> [15527,]  297 #> [15528,]  297 #> [15529,]  296 #> [15530,]  296 #> [15531,]  296 #> [15532,]  297 #> [15533,]  297 #> [15534,]  296 #> [15535,]  296 #> [15536,]  297 #> [15537,]  296 #> [15538,]  297 #> [15539,]  297 #> [15540,]  297 #> [15541,]  297 #> [15542,]  296 #> [15543,]  296 #> [15544,]  296 #> [15545,]  297 #> [15546,]  297 #> [15547,]  296 #> [15548,]  296 #> [15549,]  297 #> [15550,]  297 #> [15551,]  297 #> [15552,]  297 #> [15553,]  297 #> [15554,]  297 #> [15555,]  297 #> [15556,]  296 #> [15557,]  297 #> [15558,]  297 #> [15559,]  297 #> [15560,]  296 #> [15561,]  296 #> [15562,]  297 #> [15563,]  296 #> [15564,]  296 #> [15565,]  296 #> [15566,]  296 #> [15567,]  297 #> [15568,]  296 #> [15569,]  297 #> [15570,]  296 #> [15571,]  297 #> [15572,]  297 #> [15573,]  297 #> [15574,]  297 #> [15575,]  296 #> [15576,]  297 #> [15577,]  297 #> [15578,]  296 #> [15579,]  296 #> [15580,]  297 #> [15581,]  296 #> [15582,]  297 #> [15583,]  297 #> [15584,]  297 #> [15585,]  297 #> [15586,]  297 #> [15587,]  297 #> [15588,]  297 #> [15589,]  297 #> [15590,]  297 #> [15591,]  297 #> [15592,]  296 #> [15593,]  297 #> [15594,]  296 #> [15595,]  296 #> [15596,]  296 #> [15597,]  297 #> [15598,]  297 #> [15599,]  297 #> [15600,]  296 #> [15601,]  298 #> [15602,]  299 #> [15603,]  299 #> [15604,]  298 #> [15605,]  298 #> [15606,]  299 #> [15607,]  299 #> [15608,]  298 #> [15609,]  298 #> [15610,]  298 #> [15611,]  298 #> [15612,]  299 #> [15613,]  298 #> [15614,]  298 #> [15615,]  298 #> [15616,]  298 #> [15617,]  298 #> [15618,]  299 #> [15619,]  299 #> [15620,]  299 #> [15621,]  298 #> [15622,]  298 #> [15623,]  299 #> [15624,]  298 #> [15625,]  299 #> [15626,]  298 #> [15627,]  298 #> [15628,]  299 #> [15629,]  298 #> [15630,]  298 #> [15631,]  299 #> [15632,]  299 #> [15633,]  299 #> [15634,]  299 #> [15635,]  298 #> [15636,]  298 #> [15637,]  298 #> [15638,]  298 #> [15639,]  298 #> [15640,]  299 #> [15641,]  298 #> [15642,]  299 #> [15643,]  298 #> [15644,]  298 #> [15645,]  298 #> [15646,]  298 #> [15647,]  298 #> [15648,]  299 #> [15649,]  298 #> [15650,]  298 #> [15651,]  298 #> [15652,]  298 #> [15653,]  298 #> [15654,]  298 #> [15655,]  298 #> [15656,]  299 #> [15657,]  298 #> [15658,]  298 #> [15659,]  298 #> [15660,]  299 #> [15661,]  298 #> [15662,]  298 #> [15663,]  298 #> [15664,]  299 #> [15665,]  299 #> [15666,]  298 #> [15667,]  298 #> [15668,]  298 #> [15669,]  298 #> [15670,]  299 #> [15671,]  299 #> [15672,]  298 #> [15673,]  299 #> [15674,]  298 #> [15675,]  298 #> [15676,]  298 #> [15677,]  298 #> [15678,]  299 #> [15679,]  298 #> [15680,]  298 #> [15681,]  298 #> [15682,]  298 #> [15683,]  298 #> [15684,]  299 #> [15685,]  298 #> [15686,]  298 #> [15687,]  298 #> [15688,]  298 #> [15689,]  298 #> [15690,]  298 #> [15691,]  298 #> [15692,]  298 #> [15693,]  299 #> [15694,]  298 #> [15695,]  298 #> [15696,]  298 #> [15697,]  299 #> [15698,]  299 #> [15699,]  298 #> [15700,]  299 #> [15701,]  301 #> [15702,]  301 #> [15703,]  301 #> [15704,]  301 #> [15705,]  301 #> [15706,]  300 #> [15707,]  301 #> [15708,]  301 #> [15709,]  301 #> [15710,]  301 #> [15711,]  301 #> [15712,]  301 #> [15713,]  301 #> [15714,]  301 #> [15715,]  301 #> [15716,]  301 #> [15717,]  301 #> [15718,]  301 #> [15719,]  300 #> [15720,]  301 #> [15721,]  301 #> [15722,]  301 #> [15723,]  301 #> [15724,]  301 #> [15725,]  301 #> [15726,]  301 #> [15727,]  301 #> [15728,]  301 #> [15729,]  301 #> [15730,]  301 #> [15731,]  301 #> [15732,]  301 #> [15733,]  301 #> [15734,]  300 #> [15735,]  301 #> [15736,]  301 #> [15737,]  301 #> [15738,]  300 #> [15739,]  301 #> [15740,]  301 #> [15741,]  301 #> [15742,]  301 #> [15743,]  301 #> [15744,]  301 #> [15745,]  301 #> [15746,]  301 #> [15747,]  301 #> [15748,]  301 #> [15749,]  300 #> [15750,]  301 #> [15751,]  301 #> [15752,]  301 #> [15753,]  301 #> [15754,]  301 #> [15755,]  301 #> [15756,]  301 #> [15757,]  301 #> [15758,]  301 #> [15759,]  301 #> [15760,]  301 #> [15761,]  301 #> [15762,]  301 #> [15763,]  301 #> [15764,]  301 #> [15765,]  301 #> [15766,]  301 #> [15767,]  301 #> [15768,]  301 #> [15769,]  301 #> [15770,]  301 #> [15771,]  301 #> [15772,]  300 #> [15773,]  301 #> [15774,]  301 #> [15775,]  301 #> [15776,]  301 #> [15777,]  301 #> [15778,]  301 #> [15779,]  301 #> [15780,]  301 #> [15781,]  301 #> [15782,]  301 #> [15783,]  301 #> [15784,]  301 #> [15785,]  301 #> [15786,]  301 #> [15787,]  301 #> [15788,]  301 #> [15789,]  301 #> [15790,]  301 #> [15791,]  301 #> [15792,]  301 #> [15793,]  301 #> [15794,]  301 #> [15795,]  301 #> [15796,]  301 #> [15797,]  301 #> [15798,]  301 #> [15799,]  301 #> [15800,]  301 #> [15801,]  303 #> [15802,]  303 #> [15803,]  302 #> [15804,]  303 #> [15805,]  303 #> [15806,]  303 #> [15807,]  303 #> [15808,]  303 #> [15809,]  303 #> [15810,]  302 #> [15811,]  302 #> [15812,]  303 #> [15813,]  303 #> [15814,]  302 #> [15815,]  303 #> [15816,]  303 #> [15817,]  303 #> [15818,]  303 #> [15819,]  303 #> [15820,]  303 #> [15821,]  303 #> [15822,]  303 #> [15823,]  303 #> [15824,]  303 #> [15825,]  303 #> [15826,]  303 #> [15827,]  303 #> [15828,]  303 #> [15829,]  303 #> [15830,]  303 #> [15831,]  303 #> [15832,]  302 #> [15833,]  303 #> [15834,]  303 #> [15835,]  303 #> [15836,]  303 #> [15837,]  303 #> [15838,]  303 #> [15839,]  303 #> [15840,]  302 #> [15841,]  303 #> [15842,]  303 #> [15843,]  303 #> [15844,]  303 #> [15845,]  303 #> [15846,]  303 #> [15847,]  303 #> [15848,]  302 #> [15849,]  303 #> [15850,]  303 #> [15851,]  303 #> [15852,]  303 #> [15853,]  303 #> [15854,]  303 #> [15855,]  303 #> [15856,]  303 #> [15857,]  303 #> [15858,]  303 #> [15859,]  303 #> [15860,]  303 #> [15861,]  303 #> [15862,]  303 #> [15863,]  303 #> [15864,]  303 #> [15865,]  303 #> [15866,]  303 #> [15867,]  303 #> [15868,]  303 #> [15869,]  303 #> [15870,]  302 #> [15871,]  303 #> [15872,]  303 #> [15873,]  303 #> [15874,]  303 #> [15875,]  303 #> [15876,]  303 #> [15877,]  303 #> [15878,]  303 #> [15879,]  303 #> [15880,]  303 #> [15881,]  303 #> [15882,]  303 #> [15883,]  303 #> [15884,]  303 #> [15885,]  303 #> [15886,]  303 #> [15887,]  303 #> [15888,]  303 #> [15889,]  303 #> [15890,]  303 #> [15891,]  303 #> [15892,]  303 #> [15893,]  303 #> [15894,]  303 #> [15895,]  303 #> [15896,]  303 #> [15897,]  303 #> [15898,]  303 #> [15899,]  303 #> [15900,]  303 #> [15901,]  304 #> [15902,]  304 #> [15903,]  304 #> [15904,]  304 #> [15905,]  304 #> [15906,]  304 #> [15907,]  304 #> [15908,]  304 #> [15909,]  304 #> [15910,]  304 #> [15911,]  304 #> [15912,]  304 #> [15913,]  304 #> [15914,]  304 #> [15915,]  304 #> [15916,]  304 #> [15917,]  304 #> [15918,]  304 #> [15919,]  304 #> [15920,]  305 #> [15921,]  304 #> [15922,]  305 #> [15923,]  304 #> [15924,]  304 #> [15925,]  304 #> [15926,]  304 #> [15927,]  304 #> [15928,]  304 #> [15929,]  305 #> [15930,]  304 #> [15931,]  304 #> [15932,]  304 #> [15933,]  304 #> [15934,]  304 #> [15935,]  304 #> [15936,]  304 #> [15937,]  304 #> [15938,]  304 #> [15939,]  304 #> [15940,]  304 #> [15941,]  304 #> [15942,]  304 #> [15943,]  304 #> [15944,]  304 #> [15945,]  304 #> [15946,]  304 #> [15947,]  304 #> [15948,]  304 #> [15949,]  304 #> [15950,]  304 #> [15951,]  304 #> [15952,]  304 #> [15953,]  304 #> [15954,]  304 #> [15955,]  304 #> [15956,]  304 #> [15957,]  304 #> [15958,]  305 #> [15959,]  304 #> [15960,]  304 #> [15961,]  304 #> [15962,]  304 #> [15963,]  304 #> [15964,]  305 #> [15965,]  304 #> [15966,]  304 #> [15967,]  304 #> [15968,]  304 #> [15969,]  304 #> [15970,]  304 #> [15971,]  304 #> [15972,]  304 #> [15973,]  304 #> [15974,]  304 #> [15975,]  304 #> [15976,]  304 #> [15977,]  305 #> [15978,]  304 #> [15979,]  304 #> [15980,]  304 #> [15981,]  304 #> [15982,]  304 #> [15983,]  304 #> [15984,]  304 #> [15985,]  304 #> [15986,]  304 #> [15987,]  305 #> [15988,]  304 #> [15989,]  304 #> [15990,]  304 #> [15991,]  304 #> [15992,]  304 #> [15993,]  304 #> [15994,]  304 #> [15995,]  304 #> [15996,]  304 #> [15997,]  304 #> [15998,]  304 #> [15999,]  304 #> [16000,]  304 #> [16001,]  307 #> [16002,]  306 #> [16003,]  307 #> [16004,]  307 #> [16005,]  307 #> [16006,]  306 #> [16007,]  307 #> [16008,]  307 #> [16009,]  307 #> [16010,]  307 #> [16011,]  306 #> [16012,]  306 #> [16013,]  307 #> [16014,]  307 #> [16015,]  306 #> [16016,]  307 #> [16017,]  306 #> [16018,]  307 #> [16019,]  307 #> [16020,]  307 #> [16021,]  307 #> [16022,]  307 #> [16023,]  306 #> [16024,]  307 #> [16025,]  307 #> [16026,]  307 #> [16027,]  307 #> [16028,]  307 #> [16029,]  306 #> [16030,]  306 #> [16031,]  306 #> [16032,]  307 #> [16033,]  307 #> [16034,]  306 #> [16035,]  306 #> [16036,]  307 #> [16037,]  306 #> [16038,]  307 #> [16039,]  307 #> [16040,]  307 #> [16041,]  307 #> [16042,]  306 #> [16043,]  306 #> [16044,]  306 #> [16045,]  307 #> [16046,]  307 #> [16047,]  306 #> [16048,]  306 #> [16049,]  307 #> [16050,]  307 #> [16051,]  307 #> [16052,]  307 #> [16053,]  307 #> [16054,]  307 #> [16055,]  307 #> [16056,]  306 #> [16057,]  307 #> [16058,]  307 #> [16059,]  307 #> [16060,]  306 #> [16061,]  306 #> [16062,]  307 #> [16063,]  306 #> [16064,]  306 #> [16065,]  306 #> [16066,]  306 #> [16067,]  307 #> [16068,]  307 #> [16069,]  307 #> [16070,]  306 #> [16071,]  307 #> [16072,]  307 #> [16073,]  307 #> [16074,]  307 #> [16075,]  306 #> [16076,]  307 #> [16077,]  307 #> [16078,]  306 #> [16079,]  306 #> [16080,]  307 #> [16081,]  306 #> [16082,]  307 #> [16083,]  307 #> [16084,]  307 #> [16085,]  307 #> [16086,]  307 #> [16087,]  307 #> [16088,]  307 #> [16089,]  307 #> [16090,]  307 #> [16091,]  307 #> [16092,]  306 #> [16093,]  307 #> [16094,]  306 #> [16095,]  306 #> [16096,]  307 #> [16097,]  307 #> [16098,]  307 #> [16099,]  307 #> [16100,]  306 #> [16101,]  309 #> [16102,]  309 #> [16103,]  309 #> [16104,]  308 #> [16105,]  309 #> [16106,]  309 #> [16107,]  309 #> [16108,]  308 #> [16109,]  308 #> [16110,]  309 #> [16111,]  309 #> [16112,]  309 #> [16113,]  309 #> [16114,]  309 #> [16115,]  309 #> [16116,]  309 #> [16117,]  308 #> [16118,]  309 #> [16119,]  309 #> [16120,]  309 #> [16121,]  309 #> [16122,]  308 #> [16123,]  309 #> [16124,]  309 #> [16125,]  309 #> [16126,]  309 #> [16127,]  308 #> [16128,]  309 #> [16129,]  309 #> [16130,]  309 #> [16131,]  309 #> [16132,]  309 #> [16133,]  309 #> [16134,]  309 #> [16135,]  308 #> [16136,]  309 #> [16137,]  309 #> [16138,]  309 #> [16139,]  309 #> [16140,]  309 #> [16141,]  309 #> [16142,]  309 #> [16143,]  309 #> [16144,]  308 #> [16145,]  309 #> [16146,]  309 #> [16147,]  309 #> [16148,]  309 #> [16149,]  309 #> [16150,]  309 #> [16151,]  309 #> [16152,]  308 #> [16153,]  309 #> [16154,]  309 #> [16155,]  309 #> [16156,]  309 #> [16157,]  309 #> [16158,]  308 #> [16159,]  309 #> [16160,]  309 #> [16161,]  309 #> [16162,]  309 #> [16163,]  309 #> [16164,]  309 #> [16165,]  309 #> [16166,]  308 #> [16167,]  309 #> [16168,]  309 #> [16169,]  309 #> [16170,]  309 #> [16171,]  309 #> [16172,]  309 #> [16173,]  309 #> [16174,]  309 #> [16175,]  309 #> [16176,]  309 #> [16177,]  309 #> [16178,]  309 #> [16179,]  309 #> [16180,]  309 #> [16181,]  308 #> [16182,]  308 #> [16183,]  309 #> [16184,]  309 #> [16185,]  309 #> [16186,]  309 #> [16187,]  308 #> [16188,]  309 #> [16189,]  309 #> [16190,]  308 #> [16191,]  309 #> [16192,]  308 #> [16193,]  309 #> [16194,]  309 #> [16195,]  308 #> [16196,]  309 #> [16197,]  309 #> [16198,]  309 #> [16199,]  308 #> [16200,]  309 #> [16201,]  311 #> [16202,]  311 #> [16203,]  310 #> [16204,]  311 #> [16205,]  311 #> [16206,]  311 #> [16207,]  311 #> [16208,]  311 #> [16209,]  311 #> [16210,]  311 #> [16211,]  310 #> [16212,]  310 #> [16213,]  311 #> [16214,]  310 #> [16215,]  311 #> [16216,]  311 #> [16217,]  311 #> [16218,]  311 #> [16219,]  310 #> [16220,]  310 #> [16221,]  311 #> [16222,]  310 #> [16223,]  311 #> [16224,]  311 #> [16225,]  311 #> [16226,]  310 #> [16227,]  311 #> [16228,]  311 #> [16229,]  310 #> [16230,]  311 #> [16231,]  311 #> [16232,]  310 #> [16233,]  311 #> [16234,]  311 #> [16235,]  311 #> [16236,]  310 #> [16237,]  311 #> [16238,]  311 #> [16239,]  311 #> [16240,]  310 #> [16241,]  310 #> [16242,]  310 #> [16243,]  311 #> [16244,]  311 #> [16245,]  311 #> [16246,]  311 #> [16247,]  311 #> [16248,]  310 #> [16249,]  311 #> [16250,]  311 #> [16251,]  310 #> [16252,]  311 #> [16253,]  311 #> [16254,]  310 #> [16255,]  311 #> [16256,]  311 #> [16257,]  311 #> [16258,]  311 #> [16259,]  311 #> [16260,]  310 #> [16261,]  311 #> [16262,]  310 #> [16263,]  310 #> [16264,]  311 #> [16265,]  311 #> [16266,]  310 #> [16267,]  311 #> [16268,]  310 #> [16269,]  310 #> [16270,]  311 #> [16271,]  311 #> [16272,]  311 #> [16273,]  311 #> [16274,]  311 #> [16275,]  311 #> [16276,]  311 #> [16277,]  311 #> [16278,]  311 #> [16279,]  311 #> [16280,]  310 #> [16281,]  310 #> [16282,]  311 #> [16283,]  310 #> [16284,]  311 #> [16285,]  311 #> [16286,]  311 #> [16287,]  311 #> [16288,]  311 #> [16289,]  310 #> [16290,]  311 #> [16291,]  310 #> [16292,]  311 #> [16293,]  311 #> [16294,]  311 #> [16295,]  311 #> [16296,]  311 #> [16297,]  311 #> [16298,]  311 #> [16299,]  311 #> [16300,]  311 #> [16301,]  312 #> [16302,]  312 #> [16303,]  312 #> [16304,]  313 #> [16305,]  312 #> [16306,]  312 #> [16307,]  312 #> [16308,]  312 #> [16309,]  312 #> [16310,]  313 #> [16311,]  312 #> [16312,]  312 #> [16313,]  312 #> [16314,]  312 #> [16315,]  313 #> [16316,]  313 #> [16317,]  312 #> [16318,]  313 #> [16319,]  312 #> [16320,]  312 #> [16321,]  313 #> [16322,]  312 #> [16323,]  313 #> [16324,]  312 #> [16325,]  313 #> [16326,]  312 #> [16327,]  313 #> [16328,]  312 #> [16329,]  312 #> [16330,]  312 #> [16331,]  312 #> [16332,]  312 #> [16333,]  312 #> [16334,]  312 #> [16335,]  312 #> [16336,]  312 #> [16337,]  312 #> [16338,]  312 #> [16339,]  313 #> [16340,]  312 #> [16341,]  312 #> [16342,]  312 #> [16343,]  313 #> [16344,]  312 #> [16345,]  313 #> [16346,]  312 #> [16347,]  312 #> [16348,]  312 #> [16349,]  312 #> [16350,]  312 #> [16351,]  312 #> [16352,]  312 #> [16353,]  313 #> [16354,]  312 #> [16355,]  312 #> [16356,]  312 #> [16357,]  312 #> [16358,]  312 #> [16359,]  312 #> [16360,]  312 #> [16361,]  313 #> [16362,]  312 #> [16363,]  312 #> [16364,]  312 #> [16365,]  312 #> [16366,]  312 #> [16367,]  312 #> [16368,]  312 #> [16369,]  312 #> [16370,]  312 #> [16371,]  312 #> [16372,]  313 #> [16373,]  313 #> [16374,]  313 #> [16375,]  313 #> [16376,]  313 #> [16377,]  313 #> [16378,]  312 #> [16379,]  312 #> [16380,]  312 #> [16381,]  312 #> [16382,]  312 #> [16383,]  312 #> [16384,]  313 #> [16385,]  312 #> [16386,]  312 #> [16387,]  312 #> [16388,]  312 #> [16389,]  312 #> [16390,]  312 #> [16391,]  312 #> [16392,]  312 #> [16393,]  312 #> [16394,]  313 #> [16395,]  313 #> [16396,]  312 #> [16397,]  312 #> [16398,]  312 #> [16399,]  312 #> [16400,]  313 #> [16401,]  315 #> [16402,]  315 #> [16403,]  314 #> [16404,]  315 #> [16405,]  315 #> [16406,]  315 #> [16407,]  314 #> [16408,]  314 #> [16409,]  315 #> [16410,]  315 #> [16411,]  315 #> [16412,]  315 #> [16413,]  314 #> [16414,]  315 #> [16415,]  315 #> [16416,]  314 #> [16417,]  314 #> [16418,]  315 #> [16419,]  315 #> [16420,]  314 #> [16421,]  315 #> [16422,]  314 #> [16423,]  315 #> [16424,]  314 #> [16425,]  314 #> [16426,]  315 #> [16427,]  315 #> [16428,]  315 #> [16429,]  315 #> [16430,]  315 #> [16431,]  315 #> [16432,]  315 #> [16433,]  315 #> [16434,]  315 #> [16435,]  315 #> [16436,]  315 #> [16437,]  315 #> [16438,]  315 #> [16439,]  314 #> [16440,]  314 #> [16441,]  315 #> [16442,]  315 #> [16443,]  314 #> [16444,]  314 #> [16445,]  314 #> [16446,]  314 #> [16447,]  314 #> [16448,]  315 #> [16449,]  314 #> [16450,]  314 #> [16451,]  314 #> [16452,]  315 #> [16453,]  314 #> [16454,]  314 #> [16455,]  314 #> [16456,]  314 #> [16457,]  315 #> [16458,]  315 #> [16459,]  314 #> [16460,]  315 #> [16461,]  315 #> [16462,]  315 #> [16463,]  314 #> [16464,]  315 #> [16465,]  314 #> [16466,]  314 #> [16467,]  315 #> [16468,]  315 #> [16469,]  315 #> [16470,]  314 #> [16471,]  315 #> [16472,]  314 #> [16473,]  315 #> [16474,]  315 #> [16475,]  315 #> [16476,]  314 #> [16477,]  314 #> [16478,]  314 #> [16479,]  314 #> [16480,]  315 #> [16481,]  315 #> [16482,]  315 #> [16483,]  314 #> [16484,]  314 #> [16485,]  315 #> [16486,]  314 #> [16487,]  315 #> [16488,]  315 #> [16489,]  314 #> [16490,]  314 #> [16491,]  315 #> [16492,]  315 #> [16493,]  315 #> [16494,]  314 #> [16495,]  315 #> [16496,]  315 #> [16497,]  315 #> [16498,]  314 #> [16499,]  315 #> [16500,]  314 #> [16501,]  317 #> [16502,]  317 #> [16503,]  316 #> [16504,]  316 #> [16505,]  317 #> [16506,]  317 #> [16507,]  316 #> [16508,]  316 #> [16509,]  317 #> [16510,]  317 #> [16511,]  317 #> [16512,]  316 #> [16513,]  317 #> [16514,]  317 #> [16515,]  317 #> [16516,]  317 #> [16517,]  317 #> [16518,]  317 #> [16519,]  317 #> [16520,]  317 #> [16521,]  317 #> [16522,]  317 #> [16523,]  317 #> [16524,]  317 #> [16525,]  316 #> [16526,]  317 #> [16527,]  317 #> [16528,]  317 #> [16529,]  317 #> [16530,]  317 #> [16531,]  316 #> [16532,]  317 #> [16533,]  317 #> [16534,]  317 #> [16535,]  317 #> [16536,]  317 #> [16537,]  317 #> [16538,]  317 #> [16539,]  317 #> [16540,]  317 #> [16541,]  317 #> [16542,]  317 #> [16543,]  317 #> [16544,]  317 #> [16545,]  317 #> [16546,]  317 #> [16547,]  317 #> [16548,]  317 #> [16549,]  317 #> [16550,]  317 #> [16551,]  317 #> [16552,]  316 #> [16553,]  317 #> [16554,]  317 #> [16555,]  317 #> [16556,]  317 #> [16557,]  316 #> [16558,]  317 #> [16559,]  316 #> [16560,]  316 #> [16561,]  317 #> [16562,]  317 #> [16563,]  317 #> [16564,]  317 #> [16565,]  317 #> [16566,]  317 #> [16567,]  317 #> [16568,]  316 #> [16569,]  317 #> [16570,]  317 #> [16571,]  317 #> [16572,]  317 #> [16573,]  317 #> [16574,]  317 #> [16575,]  317 #> [16576,]  317 #> [16577,]  317 #> [16578,]  317 #> [16579,]  317 #> [16580,]  317 #> [16581,]  317 #> [16582,]  317 #> [16583,]  317 #> [16584,]  317 #> [16585,]  317 #> [16586,]  316 #> [16587,]  317 #> [16588,]  317 #> [16589,]  317 #> [16590,]  317 #> [16591,]  317 #> [16592,]  317 #> [16593,]  317 #> [16594,]  317 #> [16595,]  317 #> [16596,]  316 #> [16597,]  316 #> [16598,]  317 #> [16599,]  317 #> [16600,]  317 #> [16601,]  319 #> [16602,]  318 #> [16603,]  318 #> [16604,]  318 #> [16605,]  319 #> [16606,]  318 #> [16607,]  318 #> [16608,]  318 #> [16609,]  319 #> [16610,]  318 #> [16611,]  319 #> [16612,]  318 #> [16613,]  319 #> [16614,]  318 #> [16615,]  318 #> [16616,]  318 #> [16617,]  319 #> [16618,]  319 #> [16619,]  318 #> [16620,]  319 #> [16621,]  319 #> [16622,]  318 #> [16623,]  318 #> [16624,]  319 #> [16625,]  318 #> [16626,]  318 #> [16627,]  319 #> [16628,]  319 #> [16629,]  319 #> [16630,]  318 #> [16631,]  318 #> [16632,]  318 #> [16633,]  319 #> [16634,]  318 #> [16635,]  318 #> [16636,]  319 #> [16637,]  318 #> [16638,]  319 #> [16639,]  319 #> [16640,]  318 #> [16641,]  319 #> [16642,]  319 #> [16643,]  318 #> [16644,]  318 #> [16645,]  318 #> [16646,]  318 #> [16647,]  318 #> [16648,]  318 #> [16649,]  318 #> [16650,]  318 #> [16651,]  319 #> [16652,]  318 #> [16653,]  319 #> [16654,]  319 #> [16655,]  318 #> [16656,]  319 #> [16657,]  318 #> [16658,]  319 #> [16659,]  318 #> [16660,]  318 #> [16661,]  319 #> [16662,]  319 #> [16663,]  318 #> [16664,]  319 #> [16665,]  319 #> [16666,]  319 #> [16667,]  318 #> [16668,]  318 #> [16669,]  318 #> [16670,]  319 #> [16671,]  318 #> [16672,]  318 #> [16673,]  318 #> [16674,]  318 #> [16675,]  318 #> [16676,]  318 #> [16677,]  319 #> [16678,]  318 #> [16679,]  319 #> [16680,]  318 #> [16681,]  318 #> [16682,]  319 #> [16683,]  319 #> [16684,]  319 #> [16685,]  319 #> [16686,]  318 #> [16687,]  319 #> [16688,]  318 #> [16689,]  319 #> [16690,]  319 #> [16691,]  319 #> [16692,]  318 #> [16693,]  319 #> [16694,]  319 #> [16695,]  318 #> [16696,]  318 #> [16697,]  318 #> [16698,]  318 #> [16699,]  319 #> [16700,]  319 #> [16701,]  320 #> [16702,]  321 #> [16703,]  321 #> [16704,]  320 #> [16705,]  320 #> [16706,]  321 #> [16707,]  320 #> [16708,]  320 #> [16709,]  320 #> [16710,]  320 #> [16711,]  320 #> [16712,]  321 #> [16713,]  320 #> [16714,]  320 #> [16715,]  320 #> [16716,]  320 #> [16717,]  320 #> [16718,]  321 #> [16719,]  321 #> [16720,]  321 #> [16721,]  320 #> [16722,]  320 #> [16723,]  320 #> [16724,]  320 #> [16725,]  321 #> [16726,]  320 #> [16727,]  320 #> [16728,]  321 #> [16729,]  320 #> [16730,]  320 #> [16731,]  321 #> [16732,]  321 #> [16733,]  321 #> [16734,]  321 #> [16735,]  320 #> [16736,]  320 #> [16737,]  320 #> [16738,]  320 #> [16739,]  320 #> [16740,]  320 #> [16741,]  320 #> [16742,]  320 #> [16743,]  320 #> [16744,]  320 #> [16745,]  320 #> [16746,]  320 #> [16747,]  320 #> [16748,]  320 #> [16749,]  320 #> [16750,]  320 #> [16751,]  320 #> [16752,]  320 #> [16753,]  320 #> [16754,]  320 #> [16755,]  320 #> [16756,]  320 #> [16757,]  320 #> [16758,]  320 #> [16759,]  320 #> [16760,]  321 #> [16761,]  320 #> [16762,]  320 #> [16763,]  320 #> [16764,]  320 #> [16765,]  321 #> [16766,]  320 #> [16767,]  320 #> [16768,]  320 #> [16769,]  320 #> [16770,]  321 #> [16771,]  321 #> [16772,]  320 #> [16773,]  321 #> [16774,]  320 #> [16775,]  320 #> [16776,]  320 #> [16777,]  320 #> [16778,]  320 #> [16779,]  320 #> [16780,]  320 #> [16781,]  320 #> [16782,]  320 #> [16783,]  320 #> [16784,]  321 #> [16785,]  320 #> [16786,]  320 #> [16787,]  320 #> [16788,]  320 #> [16789,]  320 #> [16790,]  320 #> [16791,]  320 #> [16792,]  320 #> [16793,]  321 #> [16794,]  320 #> [16795,]  320 #> [16796,]  320 #> [16797,]  321 #> [16798,]  321 #> [16799,]  320 #> [16800,]  321 #> [16801,]  322 #> [16802,]  322 #> [16803,]  322 #> [16804,]  322 #> [16805,]  322 #> [16806,]  323 #> [16807,]  322 #> [16808,]  323 #> [16809,]  323 #> [16810,]  322 #> [16811,]  322 #> [16812,]  323 #> [16813,]  322 #> [16814,]  322 #> [16815,]  323 #> [16816,]  322 #> [16817,]  322 #> [16818,]  322 #> [16819,]  322 #> [16820,]  322 #> [16821,]  322 #> [16822,]  322 #> [16823,]  322 #> [16824,]  322 #> [16825,]  322 #> [16826,]  323 #> [16827,]  322 #> [16828,]  322 #> [16829,]  322 #> [16830,]  322 #> [16831,]  322 #> [16832,]  322 #> [16833,]  323 #> [16834,]  322 #> [16835,]  322 #> [16836,]  322 #> [16837,]  322 #> [16838,]  322 #> [16839,]  322 #> [16840,]  322 #> [16841,]  322 #> [16842,]  322 #> [16843,]  323 #> [16844,]  322 #> [16845,]  323 #> [16846,]  323 #> [16847,]  322 #> [16848,]  322 #> [16849,]  322 #> [16850,]  322 #> [16851,]  323 #> [16852,]  322 #> [16853,]  322 #> [16854,]  322 #> [16855,]  322 #> [16856,]  323 #> [16857,]  323 #> [16858,]  322 #> [16859,]  322 #> [16860,]  322 #> [16861,]  323 #> [16862,]  322 #> [16863,]  322 #> [16864,]  323 #> [16865,]  322 #> [16866,]  323 #> [16867,]  322 #> [16868,]  323 #> [16869,]  322 #> [16870,]  322 #> [16871,]  322 #> [16872,]  322 #> [16873,]  322 #> [16874,]  322 #> [16875,]  322 #> [16876,]  323 #> [16877,]  322 #> [16878,]  322 #> [16879,]  322 #> [16880,]  322 #> [16881,]  322 #> [16882,]  322 #> [16883,]  322 #> [16884,]  322 #> [16885,]  322 #> [16886,]  322 #> [16887,]  322 #> [16888,]  322 #> [16889,]  322 #> [16890,]  322 #> [16891,]  322 #> [16892,]  322 #> [16893,]  322 #> [16894,]  323 #> [16895,]  322 #> [16896,]  322 #> [16897,]  322 #> [16898,]  322 #> [16899,]  322 #> [16900,]  322 #> [16901,]  324 #> [16902,]  325 #> [16903,]  325 #> [16904,]  324 #> [16905,]  324 #> [16906,]  325 #> [16907,]  325 #> [16908,]  324 #> [16909,]  324 #> [16910,]  325 #> [16911,]  324 #> [16912,]  325 #> [16913,]  324 #> [16914,]  324 #> [16915,]  324 #> [16916,]  324 #> [16917,]  324 #> [16918,]  325 #> [16919,]  325 #> [16920,]  325 #> [16921,]  324 #> [16922,]  324 #> [16923,]  325 #> [16924,]  324 #> [16925,]  325 #> [16926,]  324 #> [16927,]  324 #> [16928,]  325 #> [16929,]  325 #> [16930,]  324 #> [16931,]  325 #> [16932,]  325 #> [16933,]  325 #> [16934,]  325 #> [16935,]  324 #> [16936,]  325 #> [16937,]  324 #> [16938,]  324 #> [16939,]  325 #> [16940,]  325 #> [16941,]  324 #> [16942,]  325 #> [16943,]  324 #> [16944,]  324 #> [16945,]  324 #> [16946,]  324 #> [16947,]  325 #> [16948,]  325 #> [16949,]  324 #> [16950,]  325 #> [16951,]  324 #> [16952,]  324 #> [16953,]  325 #> [16954,]  324 #> [16955,]  324 #> [16956,]  325 #> [16957,]  325 #> [16958,]  324 #> [16959,]  324 #> [16960,]  325 #> [16961,]  325 #> [16962,]  324 #> [16963,]  325 #> [16964,]  325 #> [16965,]  325 #> [16966,]  324 #> [16967,]  324 #> [16968,]  324 #> [16969,]  324 #> [16970,]  325 #> [16971,]  325 #> [16972,]  325 #> [16973,]  325 #> [16974,]  324 #> [16975,]  325 #> [16976,]  325 #> [16977,]  325 #> [16978,]  325 #> [16979,]  324 #> [16980,]  324 #> [16981,]  324 #> [16982,]  324 #> [16983,]  324 #> [16984,]  325 #> [16985,]  324 #> [16986,]  325 #> [16987,]  324 #> [16988,]  324 #> [16989,]  324 #> [16990,]  324 #> [16991,]  324 #> [16992,]  324 #> [16993,]  325 #> [16994,]  325 #> [16995,]  324 #> [16996,]  324 #> [16997,]  325 #> [16998,]  325 #> [16999,]  324 #> [17000,]  325 #> [17001,]  327 #> [17002,]  327 #> [17003,]  327 #> [17004,]  326 #> [17005,]  327 #> [17006,]  327 #> [17007,]  327 #> [17008,]  326 #> [17009,]  326 #> [17010,]  326 #> [17011,]  327 #> [17012,]  327 #> [17013,]  327 #> [17014,]  327 #> [17015,]  327 #> [17016,]  327 #> [17017,]  327 #> [17018,]  327 #> [17019,]  327 #> [17020,]  326 #> [17021,]  327 #> [17022,]  327 #> [17023,]  327 #> [17024,]  327 #> [17025,]  327 #> [17026,]  327 #> [17027,]  327 #> [17028,]  327 #> [17029,]  327 #> [17030,]  326 #> [17031,]  327 #> [17032,]  327 #> [17033,]  327 #> [17034,]  327 #> [17035,]  327 #> [17036,]  327 #> [17037,]  327 #> [17038,]  327 #> [17039,]  327 #> [17040,]  327 #> [17041,]  327 #> [17042,]  327 #> [17043,]  326 #> [17044,]  327 #> [17045,]  327 #> [17046,]  327 #> [17047,]  327 #> [17048,]  327 #> [17049,]  327 #> [17050,]  327 #> [17051,]  326 #> [17052,]  327 #> [17053,]  327 #> [17054,]  327 #> [17055,]  327 #> [17056,]  326 #> [17057,]  327 #> [17058,]  327 #> [17059,]  327 #> [17060,]  326 #> [17061,]  327 #> [17062,]  327 #> [17063,]  327 #> [17064,]  326 #> [17065,]  327 #> [17066,]  327 #> [17067,]  326 #> [17068,]  327 #> [17069,]  327 #> [17070,]  327 #> [17071,]  327 #> [17072,]  327 #> [17073,]  327 #> [17074,]  327 #> [17075,]  327 #> [17076,]  327 #> [17077,]  327 #> [17078,]  326 #> [17079,]  327 #> [17080,]  327 #> [17081,]  327 #> [17082,]  327 #> [17083,]  327 #> [17084,]  327 #> [17085,]  326 #> [17086,]  327 #> [17087,]  327 #> [17088,]  327 #> [17089,]  326 #> [17090,]  327 #> [17091,]  326 #> [17092,]  327 #> [17093,]  327 #> [17094,]  327 #> [17095,]  326 #> [17096,]  327 #> [17097,]  327 #> [17098,]  327 #> [17099,]  327 #> [17100,]  327 #> [17101,]  329 #> [17102,]  328 #> [17103,]  328 #> [17104,]  328 #> [17105,]  329 #> [17106,]  328 #> [17107,]  328 #> [17108,]  328 #> [17109,]  329 #> [17110,]  328 #> [17111,]  329 #> [17112,]  328 #> [17113,]  329 #> [17114,]  328 #> [17115,]  328 #> [17116,]  328 #> [17117,]  329 #> [17118,]  329 #> [17119,]  329 #> [17120,]  329 #> [17121,]  329 #> [17122,]  329 #> [17123,]  328 #> [17124,]  329 #> [17125,]  328 #> [17126,]  328 #> [17127,]  329 #> [17128,]  329 #> [17129,]  329 #> [17130,]  328 #> [17131,]  328 #> [17132,]  328 #> [17133,]  329 #> [17134,]  328 #> [17135,]  328 #> [17136,]  329 #> [17137,]  328 #> [17138,]  329 #> [17139,]  329 #> [17140,]  328 #> [17141,]  329 #> [17142,]  329 #> [17143,]  328 #> [17144,]  328 #> [17145,]  328 #> [17146,]  328 #> [17147,]  328 #> [17148,]  328 #> [17149,]  328 #> [17150,]  329 #> [17151,]  329 #> [17152,]  328 #> [17153,]  329 #> [17154,]  329 #> [17155,]  328 #> [17156,]  329 #> [17157,]  328 #> [17158,]  329 #> [17159,]  328 #> [17160,]  328 #> [17161,]  329 #> [17162,]  329 #> [17163,]  328 #> [17164,]  329 #> [17165,]  329 #> [17166,]  329 #> [17167,]  328 #> [17168,]  328 #> [17169,]  328 #> [17170,]  329 #> [17171,]  328 #> [17172,]  328 #> [17173,]  329 #> [17174,]  328 #> [17175,]  328 #> [17176,]  328 #> [17177,]  329 #> [17178,]  328 #> [17179,]  329 #> [17180,]  328 #> [17181,]  329 #> [17182,]  329 #> [17183,]  329 #> [17184,]  329 #> [17185,]  329 #> [17186,]  328 #> [17187,]  329 #> [17188,]  328 #> [17189,]  329 #> [17190,]  329 #> [17191,]  329 #> [17192,]  328 #> [17193,]  329 #> [17194,]  329 #> [17195,]  328 #> [17196,]  328 #> [17197,]  328 #> [17198,]  328 #> [17199,]  329 #> [17200,]  329 #> [17201,]  330 #> [17202,]  330 #> [17203,]  330 #> [17204,]  330 #> [17205,]  330 #> [17206,]  330 #> [17207,]  330 #> [17208,]  330 #> [17209,]  330 #> [17210,]  330 #> [17211,]  330 #> [17212,]  330 #> [17213,]  330 #> [17214,]  330 #> [17215,]  330 #> [17216,]  330 #> [17217,]  330 #> [17218,]  330 #> [17219,]  330 #> [17220,]  330 #> [17221,]  330 #> [17222,]  330 #> [17223,]  330 #> [17224,]  330 #> [17225,]  330 #> [17226,]  330 #> [17227,]  330 #> [17228,]  330 #> [17229,]  330 #> [17230,]  330 #> [17231,]  330 #> [17232,]  330 #> [17233,]  330 #> [17234,]  330 #> [17235,]  330 #> [17236,]  330 #> [17237,]  330 #> [17238,]  330 #> [17239,]  330 #> [17240,]  330 #> [17241,]  330 #> [17242,]  330 #> [17243,]  330 #> [17244,]  330 #> [17245,]  330 #> [17246,]  330 #> [17247,]  330 #> [17248,]  330 #> [17249,]  330 #> [17250,]  330 #> [17251,]  330 #> [17252,]  330 #> [17253,]  330 #> [17254,]  330 #> [17255,]  330 #> [17256,]  330 #> [17257,]  330 #> [17258,]  330 #> [17259,]  330 #> [17260,]  330 #> [17261,]  330 #> [17262,]  330 #> [17263,]  330 #> [17264,]  330 #> [17265,]  330 #> [17266,]  330 #> [17267,]  330 #> [17268,]  330 #> [17269,]  330 #> [17270,]  330 #> [17271,]  330 #> [17272,]  330 #> [17273,]  330 #> [17274,]  330 #> [17275,]  330 #> [17276,]  330 #> [17277,]  330 #> [17278,]  330 #> [17279,]  330 #> [17280,]  330 #> [17281,]  330 #> [17282,]  330 #> [17283,]  330 #> [17284,]  330 #> [17285,]  330 #> [17286,]  330 #> [17287,]  330 #> [17288,]  330 #> [17289,]  330 #> [17290,]  330 #> [17291,]  330 #> [17292,]  330 #> [17293,]  330 #> [17294,]  330 #> [17295,]  330 #> [17296,]  330 #> [17297,]  330 #> [17298,]  330 #> [17299,]  330 #> [17300,]  330 #> [17301,]  331 #> [17302,]  332 #> [17303,]  332 #> [17304,]  331 #> [17305,]  331 #> [17306,]  332 #> [17307,]  332 #> [17308,]  331 #> [17309,]  331 #> [17310,]  332 #> [17311,]  331 #> [17312,]  332 #> [17313,]  331 #> [17314,]  331 #> [17315,]  331 #> [17316,]  331 #> [17317,]  331 #> [17318,]  332 #> [17319,]  332 #> [17320,]  332 #> [17321,]  331 #> [17322,]  331 #> [17323,]  332 #> [17324,]  331 #> [17325,]  332 #> [17326,]  331 #> [17327,]  331 #> [17328,]  332 #> [17329,]  332 #> [17330,]  331 #> [17331,]  332 #> [17332,]  332 #> [17333,]  332 #> [17334,]  332 #> [17335,]  331 #> [17336,]  331 #> [17337,]  331 #> [17338,]  331 #> [17339,]  332 #> [17340,]  332 #> [17341,]  331 #> [17342,]  332 #> [17343,]  331 #> [17344,]  331 #> [17345,]  331 #> [17346,]  331 #> [17347,]  332 #> [17348,]  332 #> [17349,]  331 #> [17350,]  332 #> [17351,]  331 #> [17352,]  331 #> [17353,]  332 #> [17354,]  331 #> [17355,]  331 #> [17356,]  332 #> [17357,]  332 #> [17358,]  331 #> [17359,]  331 #> [17360,]  332 #> [17361,]  332 #> [17362,]  331 #> [17363,]  332 #> [17364,]  332 #> [17365,]  332 #> [17366,]  331 #> [17367,]  331 #> [17368,]  331 #> [17369,]  331 #> [17370,]  332 #> [17371,]  332 #> [17372,]  332 #> [17373,]  332 #> [17374,]  331 #> [17375,]  332 #> [17376,]  331 #> [17377,]  332 #> [17378,]  332 #> [17379,]  331 #> [17380,]  331 #> [17381,]  331 #> [17382,]  331 #> [17383,]  331 #> [17384,]  332 #> [17385,]  331 #> [17386,]  332 #> [17387,]  331 #> [17388,]  331 #> [17389,]  331 #> [17390,]  331 #> [17391,]  331 #> [17392,]  331 #> [17393,]  332 #> [17394,]  332 #> [17395,]  331 #> [17396,]  331 #> [17397,]  332 #> [17398,]  332 #> [17399,]  331 #> [17400,]  332 #> [17401,]  334 #> [17402,]  334 #> [17403,]  333 #> [17404,]  334 #> [17405,]  333 #> [17406,]  333 #> [17407,]  334 #> [17408,]  334 #> [17409,]  334 #> [17410,]  334 #> [17411,]  333 #> [17412,]  333 #> [17413,]  334 #> [17414,]  333 #> [17415,]  334 #> [17416,]  334 #> [17417,]  334 #> [17418,]  334 #> [17419,]  333 #> [17420,]  333 #> [17421,]  334 #> [17422,]  333 #> [17423,]  334 #> [17424,]  333 #> [17425,]  334 #> [17426,]  333 #> [17427,]  334 #> [17428,]  334 #> [17429,]  333 #> [17430,]  333 #> [17431,]  334 #> [17432,]  333 #> [17433,]  333 #> [17434,]  333 #> [17435,]  333 #> [17436,]  333 #> [17437,]  334 #> [17438,]  334 #> [17439,]  334 #> [17440,]  333 #> [17441,]  333 #> [17442,]  333 #> [17443,]  334 #> [17444,]  334 #> [17445,]  334 #> [17446,]  334 #> [17447,]  334 #> [17448,]  333 #> [17449,]  334 #> [17450,]  334 #> [17451,]  333 #> [17452,]  333 #> [17453,]  334 #> [17454,]  333 #> [17455,]  333 #> [17456,]  334 #> [17457,]  333 #> [17458,]  333 #> [17459,]  334 #> [17460,]  333 #> [17461,]  334 #> [17462,]  333 #> [17463,]  333 #> [17464,]  334 #> [17465,]  333 #> [17466,]  333 #> [17467,]  333 #> [17468,]  333 #> [17469,]  333 #> [17470,]  334 #> [17471,]  334 #> [17472,]  334 #> [17473,]  334 #> [17474,]  334 #> [17475,]  334 #> [17476,]  334 #> [17477,]  334 #> [17478,]  333 #> [17479,]  334 #> [17480,]  333 #> [17481,]  333 #> [17482,]  334 #> [17483,]  333 #> [17484,]  334 #> [17485,]  333 #> [17486,]  334 #> [17487,]  334 #> [17488,]  334 #> [17489,]  333 #> [17490,]  334 #> [17491,]  333 #> [17492,]  334 #> [17493,]  333 #> [17494,]  334 #> [17495,]  334 #> [17496,]  334 #> [17497,]  333 #> [17498,]  333 #> [17499,]  333 #> [17500,]  334 #> [17501,]  336 #> [17502,]  335 #> [17503,]  335 #> [17504,]  336 #> [17505,]  335 #> [17506,]  335 #> [17507,]  336 #> [17508,]  336 #> [17509,]  336 #> [17510,]  336 #> [17511,]  335 #> [17512,]  335 #> [17513,]  336 #> [17514,]  335 #> [17515,]  336 #> [17516,]  336 #> [17517,]  336 #> [17518,]  336 #> [17519,]  335 #> [17520,]  335 #> [17521,]  336 #> [17522,]  335 #> [17523,]  336 #> [17524,]  335 #> [17525,]  336 #> [17526,]  335 #> [17527,]  336 #> [17528,]  336 #> [17529,]  335 #> [17530,]  335 #> [17531,]  335 #> [17532,]  335 #> [17533,]  335 #> [17534,]  335 #> [17535,]  335 #> [17536,]  335 #> [17537,]  335 #> [17538,]  335 #> [17539,]  336 #> [17540,]  335 #> [17541,]  335 #> [17542,]  335 #> [17543,]  336 #> [17544,]  335 #> [17545,]  336 #> [17546,]  336 #> [17547,]  336 #> [17548,]  335 #> [17549,]  335 #> [17550,]  335 #> [17551,]  335 #> [17552,]  335 #> [17553,]  336 #> [17554,]  335 #> [17555,]  335 #> [17556,]  336 #> [17557,]  335 #> [17558,]  335 #> [17559,]  335 #> [17560,]  335 #> [17561,]  336 #> [17562,]  335 #> [17563,]  335 #> [17564,]  336 #> [17565,]  335 #> [17566,]  335 #> [17567,]  335 #> [17568,]  335 #> [17569,]  335 #> [17570,]  336 #> [17571,]  336 #> [17572,]  336 #> [17573,]  336 #> [17574,]  336 #> [17575,]  336 #> [17576,]  336 #> [17577,]  336 #> [17578,]  335 #> [17579,]  335 #> [17580,]  335 #> [17581,]  335 #> [17582,]  336 #> [17583,]  335 #> [17584,]  336 #> [17585,]  335 #> [17586,]  335 #> [17587,]  335 #> [17588,]  336 #> [17589,]  335 #> [17590,]  335 #> [17591,]  335 #> [17592,]  335 #> [17593,]  335 #> [17594,]  336 #> [17595,]  336 #> [17596,]  335 #> [17597,]  335 #> [17598,]  335 #> [17599,]  335 #> [17600,]  336 #> [17601,]  338 #> [17602,]  338 #> [17603,]  337 #> [17604,]  337 #> [17605,]  338 #> [17606,]  338 #> [17607,]  337 #> [17608,]  337 #> [17609,]  338 #> [17610,]  338 #> [17611,]  338 #> [17612,]  337 #> [17613,]  338 #> [17614,]  338 #> [17615,]  338 #> [17616,]  338 #> [17617,]  338 #> [17618,]  338 #> [17619,]  338 #> [17620,]  338 #> [17621,]  338 #> [17622,]  338 #> [17623,]  338 #> [17624,]  338 #> [17625,]  337 #> [17626,]  338 #> [17627,]  338 #> [17628,]  338 #> [17629,]  338 #> [17630,]  338 #> [17631,]  337 #> [17632,]  338 #> [17633,]  338 #> [17634,]  338 #> [17635,]  338 #> [17636,]  338 #> [17637,]  338 #> [17638,]  338 #> [17639,]  338 #> [17640,]  338 #> [17641,]  338 #> [17642,]  338 #> [17643,]  338 #> [17644,]  338 #> [17645,]  338 #> [17646,]  338 #> [17647,]  338 #> [17648,]  338 #> [17649,]  338 #> [17650,]  338 #> [17651,]  338 #> [17652,]  337 #> [17653,]  338 #> [17654,]  338 #> [17655,]  338 #> [17656,]  338 #> [17657,]  337 #> [17658,]  338 #> [17659,]  337 #> [17660,]  337 #> [17661,]  338 #> [17662,]  338 #> [17663,]  338 #> [17664,]  338 #> [17665,]  338 #> [17666,]  338 #> [17667,]  338 #> [17668,]  338 #> [17669,]  338 #> [17670,]  338 #> [17671,]  338 #> [17672,]  338 #> [17673,]  338 #> [17674,]  338 #> [17675,]  338 #> [17676,]  338 #> [17677,]  338 #> [17678,]  338 #> [17679,]  338 #> [17680,]  338 #> [17681,]  338 #> [17682,]  338 #> [17683,]  338 #> [17684,]  338 #> [17685,]  338 #> [17686,]  338 #> [17687,]  338 #> [17688,]  338 #> [17689,]  338 #> [17690,]  338 #> [17691,]  338 #> [17692,]  338 #> [17693,]  338 #> [17694,]  338 #> [17695,]  338 #> [17696,]  337 #> [17697,]  337 #> [17698,]  338 #> [17699,]  338 #> [17700,]  338 #> [17701,]  340 #> [17702,]  340 #> [17703,]  339 #> [17704,]  340 #> [17705,]  340 #> [17706,]  339 #> [17707,]  339 #> [17708,]  340 #> [17709,]  340 #> [17710,]  340 #> [17711,]  340 #> [17712,]  340 #> [17713,]  340 #> [17714,]  340 #> [17715,]  340 #> [17716,]  340 #> [17717,]  340 #> [17718,]  340 #> [17719,]  340 #> [17720,]  339 #> [17721,]  339 #> [17722,]  340 #> [17723,]  339 #> [17724,]  340 #> [17725,]  339 #> [17726,]  340 #> [17727,]  340 #> [17728,]  340 #> [17729,]  339 #> [17730,]  340 #> [17731,]  340 #> [17732,]  340 #> [17733,]  340 #> [17734,]  339 #> [17735,]  339 #> [17736,]  339 #> [17737,]  339 #> [17738,]  340 #> [17739,]  340 #> [17740,]  340 #> [17741,]  339 #> [17742,]  339 #> [17743,]  340 #> [17744,]  339 #> [17745,]  339 #> [17746,]  340 #> [17747,]  340 #> [17748,]  340 #> [17749,]  340 #> [17750,]  339 #> [17751,]  340 #> [17752,]  340 #> [17753,]  339 #> [17754,]  339 #> [17755,]  339 #> [17756,]  339 #> [17757,]  339 #> [17758,]  340 #> [17759,]  340 #> [17760,]  339 #> [17761,]  340 #> [17762,]  340 #> [17763,]  340 #> [17764,]  339 #> [17765,]  339 #> [17766,]  340 #> [17767,]  340 #> [17768,]  340 #> [17769,]  340 #> [17770,]  340 #> [17771,]  340 #> [17772,]  340 #> [17773,]  339 #> [17774,]  339 #> [17775,]  340 #> [17776,]  339 #> [17777,]  340 #> [17778,]  340 #> [17779,]  340 #> [17780,]  339 #> [17781,]  339 #> [17782,]  339 #> [17783,]  340 #> [17784,]  339 #> [17785,]  339 #> [17786,]  339 #> [17787,]  340 #> [17788,]  339 #> [17789,]  339 #> [17790,]  340 #> [17791,]  340 #> [17792,]  340 #> [17793,]  340 #> [17794,]  339 #> [17795,]  340 #> [17796,]  340 #> [17797,]  339 #> [17798,]  339 #> [17799,]  339 #> [17800,]  340 #> [17801,]  342 #> [17802,]  342 #> [17803,]  341 #> [17804,]  341 #> [17805,]  341 #> [17806,]  342 #> [17807,]  342 #> [17808,]  341 #> [17809,]  341 #> [17810,]  341 #> [17811,]  342 #> [17812,]  342 #> [17813,]  342 #> [17814,]  342 #> [17815,]  342 #> [17816,]  342 #> [17817,]  342 #> [17818,]  341 #> [17819,]  342 #> [17820,]  341 #> [17821,]  342 #> [17822,]  342 #> [17823,]  341 #> [17824,]  341 #> [17825,]  342 #> [17826,]  342 #> [17827,]  342 #> [17828,]  342 #> [17829,]  342 #> [17830,]  341 #> [17831,]  341 #> [17832,]  341 #> [17833,]  342 #> [17834,]  341 #> [17835,]  342 #> [17836,]  342 #> [17837,]  342 #> [17838,]  342 #> [17839,]  341 #> [17840,]  342 #> [17841,]  342 #> [17842,]  341 #> [17843,]  341 #> [17844,]  342 #> [17845,]  341 #> [17846,]  342 #> [17847,]  342 #> [17848,]  341 #> [17849,]  341 #> [17850,]  342 #> [17851,]  341 #> [17852,]  342 #> [17853,]  341 #> [17854,]  342 #> [17855,]  342 #> [17856,]  341 #> [17857,]  342 #> [17858,]  342 #> [17859,]  342 #> [17860,]  341 #> [17861,]  342 #> [17862,]  341 #> [17863,]  342 #> [17864,]  341 #> [17865,]  341 #> [17866,]  341 #> [17867,]  341 #> [17868,]  342 #> [17869,]  342 #> [17870,]  342 #> [17871,]  342 #> [17872,]  341 #> [17873,]  342 #> [17874,]  342 #> [17875,]  342 #> [17876,]  342 #> [17877,]  342 #> [17878,]  341 #> [17879,]  342 #> [17880,]  342 #> [17881,]  342 #> [17882,]  342 #> [17883,]  342 #> [17884,]  342 #> [17885,]  341 #> [17886,]  342 #> [17887,]  342 #> [17888,]  341 #> [17889,]  341 #> [17890,]  342 #> [17891,]  341 #> [17892,]  342 #> [17893,]  342 #> [17894,]  342 #> [17895,]  341 #> [17896,]  342 #> [17897,]  342 #> [17898,]  342 #> [17899,]  342 #> [17900,]  342 #> [17901,]  343 #> [17902,]  344 #> [17903,]  344 #> [17904,]  343 #> [17905,]  343 #> [17906,]  344 #> [17907,]  344 #> [17908,]  343 #> [17909,]  343 #> [17910,]  343 #> [17911,]  343 #> [17912,]  344 #> [17913,]  343 #> [17914,]  343 #> [17915,]  343 #> [17916,]  343 #> [17917,]  343 #> [17918,]  344 #> [17919,]  344 #> [17920,]  344 #> [17921,]  343 #> [17922,]  343 #> [17923,]  344 #> [17924,]  343 #> [17925,]  344 #> [17926,]  343 #> [17927,]  343 #> [17928,]  344 #> [17929,]  343 #> [17930,]  343 #> [17931,]  344 #> [17932,]  344 #> [17933,]  344 #> [17934,]  344 #> [17935,]  343 #> [17936,]  343 #> [17937,]  343 #> [17938,]  343 #> [17939,]  343 #> [17940,]  344 #> [17941,]  343 #> [17942,]  344 #> [17943,]  343 #> [17944,]  343 #> [17945,]  343 #> [17946,]  343 #> [17947,]  343 #> [17948,]  344 #> [17949,]  343 #> [17950,]  343 #> [17951,]  343 #> [17952,]  343 #> [17953,]  343 #> [17954,]  343 #> [17955,]  343 #> [17956,]  344 #> [17957,]  343 #> [17958,]  343 #> [17959,]  343 #> [17960,]  344 #> [17961,]  343 #> [17962,]  343 #> [17963,]  343 #> [17964,]  344 #> [17965,]  344 #> [17966,]  343 #> [17967,]  343 #> [17968,]  343 #> [17969,]  343 #> [17970,]  344 #> [17971,]  344 #> [17972,]  343 #> [17973,]  344 #> [17974,]  343 #> [17975,]  343 #> [17976,]  343 #> [17977,]  343 #> [17978,]  343 #> [17979,]  343 #> [17980,]  343 #> [17981,]  343 #> [17982,]  343 #> [17983,]  343 #> [17984,]  344 #> [17985,]  343 #> [17986,]  343 #> [17987,]  343 #> [17988,]  343 #> [17989,]  343 #> [17990,]  343 #> [17991,]  343 #> [17992,]  343 #> [17993,]  344 #> [17994,]  343 #> [17995,]  343 #> [17996,]  343 #> [17997,]  344 #> [17998,]  344 #> [17999,]  343 #> [18000,]  344 #> [18001,]  346 #> [18002,]  346 #> [18003,]  346 #> [18004,]  345 #> [18005,]  346 #> [18006,]  346 #> [18007,]  346 #> [18008,]  345 #> [18009,]  345 #> [18010,]  345 #> [18011,]  346 #> [18012,]  346 #> [18013,]  346 #> [18014,]  346 #> [18015,]  346 #> [18016,]  346 #> [18017,]  346 #> [18018,]  346 #> [18019,]  346 #> [18020,]  346 #> [18021,]  346 #> [18022,]  346 #> [18023,]  346 #> [18024,]  346 #> [18025,]  346 #> [18026,]  346 #> [18027,]  346 #> [18028,]  346 #> [18029,]  346 #> [18030,]  346 #> [18031,]  346 #> [18032,]  346 #> [18033,]  346 #> [18034,]  346 #> [18035,]  346 #> [18036,]  346 #> [18037,]  346 #> [18038,]  346 #> [18039,]  346 #> [18040,]  346 #> [18041,]  346 #> [18042,]  346 #> [18043,]  345 #> [18044,]  346 #> [18045,]  346 #> [18046,]  346 #> [18047,]  346 #> [18048,]  346 #> [18049,]  346 #> [18050,]  346 #> [18051,]  345 #> [18052,]  346 #> [18053,]  346 #> [18054,]  346 #> [18055,]  346 #> [18056,]  346 #> [18057,]  346 #> [18058,]  346 #> [18059,]  346 #> [18060,]  345 #> [18061,]  346 #> [18062,]  346 #> [18063,]  346 #> [18064,]  345 #> [18065,]  346 #> [18066,]  346 #> [18067,]  345 #> [18068,]  346 #> [18069,]  346 #> [18070,]  346 #> [18071,]  346 #> [18072,]  346 #> [18073,]  346 #> [18074,]  346 #> [18075,]  346 #> [18076,]  346 #> [18077,]  346 #> [18078,]  345 #> [18079,]  346 #> [18080,]  346 #> [18081,]  346 #> [18082,]  346 #> [18083,]  346 #> [18084,]  346 #> [18085,]  345 #> [18086,]  346 #> [18087,]  346 #> [18088,]  346 #> [18089,]  345 #> [18090,]  346 #> [18091,]  345 #> [18092,]  346 #> [18093,]  346 #> [18094,]  346 #> [18095,]  345 #> [18096,]  346 #> [18097,]  346 #> [18098,]  346 #> [18099,]  346 #> [18100,]  346 #> [18101,]  348 #> [18102,]  348 #> [18103,]  347 #> [18104,]  347 #> [18105,]  347 #> [18106,]  348 #> [18107,]  347 #> [18108,]  347 #> [18109,]  347 #> [18110,]  347 #> [18111,]  348 #> [18112,]  347 #> [18113,]  348 #> [18114,]  348 #> [18115,]  348 #> [18116,]  348 #> [18117,]  348 #> [18118,]  347 #> [18119,]  348 #> [18120,]  347 #> [18121,]  348 #> [18122,]  348 #> [18123,]  347 #> [18124,]  347 #> [18125,]  347 #> [18126,]  348 #> [18127,]  348 #> [18128,]  347 #> [18129,]  348 #> [18130,]  347 #> [18131,]  347 #> [18132,]  347 #> [18133,]  348 #> [18134,]  347 #> [18135,]  348 #> [18136,]  347 #> [18137,]  348 #> [18138,]  347 #> [18139,]  347 #> [18140,]  347 #> [18141,]  348 #> [18142,]  347 #> [18143,]  347 #> [18144,]  348 #> [18145,]  347 #> [18146,]  347 #> [18147,]  348 #> [18148,]  347 #> [18149,]  347 #> [18150,]  348 #> [18151,]  347 #> [18152,]  348 #> [18153,]  347 #> [18154,]  347 #> [18155,]  348 #> [18156,]  347 #> [18157,]  347 #> [18158,]  348 #> [18159,]  348 #> [18160,]  347 #> [18161,]  348 #> [18162,]  347 #> [18163,]  347 #> [18164,]  347 #> [18165,]  347 #> [18166,]  347 #> [18167,]  347 #> [18168,]  348 #> [18169,]  348 #> [18170,]  348 #> [18171,]  348 #> [18172,]  347 #> [18173,]  348 #> [18174,]  347 #> [18175,]  348 #> [18176,]  348 #> [18177,]  348 #> [18178,]  347 #> [18179,]  348 #> [18180,]  347 #> [18181,]  348 #> [18182,]  347 #> [18183,]  348 #> [18184,]  348 #> [18185,]  347 #> [18186,]  348 #> [18187,]  348 #> [18188,]  347 #> [18189,]  347 #> [18190,]  348 #> [18191,]  347 #> [18192,]  348 #> [18193,]  348 #> [18194,]  348 #> [18195,]  347 #> [18196,]  348 #> [18197,]  348 #> [18198,]  348 #> [18199,]  348 #> [18200,]  348 #> [18201,]  350 #> [18202,]  350 #> [18203,]  350 #> [18204,]  349 #> [18205,]  350 #> [18206,]  350 #> [18207,]  350 #> [18208,]  349 #> [18209,]  349 #> [18210,]  350 #> [18211,]  349 #> [18212,]  350 #> [18213,]  349 #> [18214,]  350 #> [18215,]  350 #> [18216,]  350 #> [18217,]  349 #> [18218,]  350 #> [18219,]  350 #> [18220,]  350 #> [18221,]  350 #> [18222,]  349 #> [18223,]  350 #> [18224,]  350 #> [18225,]  350 #> [18226,]  350 #> [18227,]  349 #> [18228,]  350 #> [18229,]  350 #> [18230,]  349 #> [18231,]  350 #> [18232,]  350 #> [18233,]  350 #> [18234,]  350 #> [18235,]  349 #> [18236,]  350 #> [18237,]  350 #> [18238,]  350 #> [18239,]  350 #> [18240,]  350 #> [18241,]  350 #> [18242,]  350 #> [18243,]  349 #> [18244,]  349 #> [18245,]  350 #> [18246,]  350 #> [18247,]  350 #> [18248,]  350 #> [18249,]  349 #> [18250,]  350 #> [18251,]  350 #> [18252,]  349 #> [18253,]  350 #> [18254,]  349 #> [18255,]  349 #> [18256,]  350 #> [18257,]  350 #> [18258,]  349 #> [18259,]  350 #> [18260,]  350 #> [18261,]  350 #> [18262,]  350 #> [18263,]  350 #> [18264,]  350 #> [18265,]  350 #> [18266,]  349 #> [18267,]  350 #> [18268,]  350 #> [18269,]  349 #> [18270,]  350 #> [18271,]  350 #> [18272,]  350 #> [18273,]  350 #> [18274,]  350 #> [18275,]  350 #> [18276,]  350 #> [18277,]  350 #> [18278,]  350 #> [18279,]  349 #> [18280,]  349 #> [18281,]  349 #> [18282,]  349 #> [18283,]  349 #> [18284,]  350 #> [18285,]  350 #> [18286,]  350 #> [18287,]  349 #> [18288,]  349 #> [18289,]  349 #> [18290,]  349 #> [18291,]  350 #> [18292,]  349 #> [18293,]  350 #> [18294,]  350 #> [18295,]  349 #> [18296,]  350 #> [18297,]  350 #> [18298,]  350 #> [18299,]  349 #> [18300,]  350 #> [18301,]  352 #> [18302,]  352 #> [18303,]  351 #> [18304,]  351 #> [18305,]  352 #> [18306,]  352 #> [18307,]  351 #> [18308,]  351 #> [18309,]  352 #> [18310,]  351 #> [18311,]  352 #> [18312,]  351 #> [18313,]  352 #> [18314,]  351 #> [18315,]  352 #> [18316,]  351 #> [18317,]  352 #> [18318,]  352 #> [18319,]  352 #> [18320,]  352 #> [18321,]  352 #> [18322,]  352 #> [18323,]  351 #> [18324,]  352 #> [18325,]  351 #> [18326,]  351 #> [18327,]  352 #> [18328,]  352 #> [18329,]  352 #> [18330,]  352 #> [18331,]  351 #> [18332,]  351 #> [18333,]  352 #> [18334,]  352 #> [18335,]  351 #> [18336,]  352 #> [18337,]  351 #> [18338,]  352 #> [18339,]  352 #> [18340,]  351 #> [18341,]  352 #> [18342,]  352 #> [18343,]  352 #> [18344,]  351 #> [18345,]  351 #> [18346,]  351 #> [18347,]  351 #> [18348,]  352 #> [18349,]  352 #> [18350,]  352 #> [18351,]  352 #> [18352,]  351 #> [18353,]  352 #> [18354,]  352 #> [18355,]  351 #> [18356,]  352 #> [18357,]  351 #> [18358,]  352 #> [18359,]  351 #> [18360,]  351 #> [18361,]  352 #> [18362,]  352 #> [18363,]  352 #> [18364,]  352 #> [18365,]  352 #> [18366,]  352 #> [18367,]  351 #> [18368,]  351 #> [18369,]  352 #> [18370,]  352 #> [18371,]  352 #> [18372,]  351 #> [18373,]  352 #> [18374,]  351 #> [18375,]  351 #> [18376,]  351 #> [18377,]  352 #> [18378,]  351 #> [18379,]  352 #> [18380,]  351 #> [18381,]  352 #> [18382,]  352 #> [18383,]  352 #> [18384,]  352 #> [18385,]  352 #> [18386,]  351 #> [18387,]  352 #> [18388,]  351 #> [18389,]  352 #> [18390,]  352 #> [18391,]  352 #> [18392,]  351 #> [18393,]  352 #> [18394,]  352 #> [18395,]  351 #> [18396,]  351 #> [18397,]  351 #> [18398,]  351 #> [18399,]  352 #> [18400,]  352 #> [18401,]  353 #> [18402,]  354 #> [18403,]  353 #> [18404,]  353 #> [18405,]  354 #> [18406,]  353 #> [18407,]  353 #> [18408,]  353 #> [18409,]  354 #> [18410,]  354 #> [18411,]  353 #> [18412,]  354 #> [18413,]  354 #> [18414,]  353 #> [18415,]  353 #> [18416,]  353 #> [18417,]  354 #> [18418,]  354 #> [18419,]  353 #> [18420,]  354 #> [18421,]  354 #> [18422,]  354 #> [18423,]  354 #> [18424,]  354 #> [18425,]  353 #> [18426,]  353 #> [18427,]  354 #> [18428,]  353 #> [18429,]  354 #> [18430,]  354 #> [18431,]  354 #> [18432,]  354 #> [18433,]  354 #> [18434,]  353 #> [18435,]  353 #> [18436,]  354 #> [18437,]  353 #> [18438,]  353 #> [18439,]  353 #> [18440,]  354 #> [18441,]  354 #> [18442,]  353 #> [18443,]  353 #> [18444,]  354 #> [18445,]  353 #> [18446,]  353 #> [18447,]  353 #> [18448,]  354 #> [18449,]  353 #> [18450,]  354 #> [18451,]  353 #> [18452,]  353 #> [18453,]  354 #> [18454,]  354 #> [18455,]  353 #> [18456,]  353 #> [18457,]  353 #> [18458,]  353 #> [18459,]  353 #> [18460,]  354 #> [18461,]  354 #> [18462,]  353 #> [18463,]  354 #> [18464,]  353 #> [18465,]  353 #> [18466,]  353 #> [18467,]  353 #> [18468,]  353 #> [18469,]  353 #> [18470,]  354 #> [18471,]  353 #> [18472,]  353 #> [18473,]  353 #> [18474,]  353 #> [18475,]  354 #> [18476,]  353 #> [18477,]  353 #> [18478,]  354 #> [18479,]  353 #> [18480,]  354 #> [18481,]  354 #> [18482,]  353 #> [18483,]  354 #> [18484,]  354 #> [18485,]  353 #> [18486,]  354 #> [18487,]  354 #> [18488,]  354 #> [18489,]  353 #> [18490,]  353 #> [18491,]  353 #> [18492,]  354 #> [18493,]  354 #> [18494,]  353 #> [18495,]  354 #> [18496,]  353 #> [18497,]  353 #> [18498,]  353 #> [18499,]  353 #> [18500,]  353 #> [18501,]  356 #> [18502,]  356 #> [18503,]  356 #> [18504,]  356 #> [18505,]  356 #> [18506,]  355 #> [18507,]  355 #> [18508,]  356 #> [18509,]  356 #> [18510,]  356 #> [18511,]  356 #> [18512,]  356 #> [18513,]  356 #> [18514,]  356 #> [18515,]  356 #> [18516,]  356 #> [18517,]  356 #> [18518,]  356 #> [18519,]  356 #> [18520,]  355 #> [18521,]  355 #> [18522,]  356 #> [18523,]  356 #> [18524,]  356 #> [18525,]  355 #> [18526,]  356 #> [18527,]  356 #> [18528,]  356 #> [18529,]  356 #> [18530,]  356 #> [18531,]  356 #> [18532,]  356 #> [18533,]  356 #> [18534,]  356 #> [18535,]  355 #> [18536,]  356 #> [18537,]  356 #> [18538,]  356 #> [18539,]  356 #> [18540,]  356 #> [18541,]  356 #> [18542,]  355 #> [18543,]  356 #> [18544,]  355 #> [18545,]  356 #> [18546,]  356 #> [18547,]  356 #> [18548,]  356 #> [18549,]  356 #> [18550,]  356 #> [18551,]  356 #> [18552,]  356 #> [18553,]  355 #> [18554,]  356 #> [18555,]  356 #> [18556,]  355 #> [18557,]  356 #> [18558,]  356 #> [18559,]  356 #> [18560,]  356 #> [18561,]  356 #> [18562,]  356 #> [18563,]  356 #> [18564,]  356 #> [18565,]  355 #> [18566,]  356 #> [18567,]  356 #> [18568,]  356 #> [18569,]  356 #> [18570,]  356 #> [18571,]  356 #> [18572,]  356 #> [18573,]  355 #> [18574,]  355 #> [18575,]  356 #> [18576,]  356 #> [18577,]  356 #> [18578,]  356 #> [18579,]  356 #> [18580,]  355 #> [18581,]  356 #> [18582,]  355 #> [18583,]  356 #> [18584,]  355 #> [18585,]  355 #> [18586,]  355 #> [18587,]  356 #> [18588,]  356 #> [18589,]  355 #> [18590,]  356 #> [18591,]  356 #> [18592,]  356 #> [18593,]  356 #> [18594,]  355 #> [18595,]  356 #> [18596,]  356 #> [18597,]  356 #> [18598,]  356 #> [18599,]  355 #> [18600,]  356 #> [18601,]  358 #> [18602,]  358 #> [18603,]  357 #> [18604,]  357 #> [18605,]  357 #> [18606,]  357 #> [18607,]  358 #> [18608,]  358 #> [18609,]  357 #> [18610,]  357 #> [18611,]  357 #> [18612,]  358 #> [18613,]  358 #> [18614,]  357 #> [18615,]  358 #> [18616,]  358 #> [18617,]  358 #> [18618,]  358 #> [18619,]  358 #> [18620,]  358 #> [18621,]  357 #> [18622,]  358 #> [18623,]  358 #> [18624,]  357 #> [18625,]  357 #> [18626,]  358 #> [18627,]  358 #> [18628,]  357 #> [18629,]  358 #> [18630,]  358 #> [18631,]  357 #> [18632,]  357 #> [18633,]  358 #> [18634,]  357 #> [18635,]  357 #> [18636,]  358 #> [18637,]  358 #> [18638,]  358 #> [18639,]  357 #> [18640,]  357 #> [18641,]  358 #> [18642,]  357 #> [18643,]  358 #> [18644,]  358 #> [18645,]  358 #> [18646,]  358 #> [18647,]  357 #> [18648,]  357 #> [18649,]  358 #> [18650,]  358 #> [18651,]  358 #> [18652,]  357 #> [18653,]  358 #> [18654,]  357 #> [18655,]  358 #> [18656,]  358 #> [18657,]  357 #> [18658,]  358 #> [18659,]  358 #> [18660,]  358 #> [18661,]  358 #> [18662,]  357 #> [18663,]  358 #> [18664,]  358 #> [18665,]  357 #> [18666,]  358 #> [18667,]  357 #> [18668,]  358 #> [18669,]  358 #> [18670,]  357 #> [18671,]  358 #> [18672,]  357 #> [18673,]  357 #> [18674,]  357 #> [18675,]  358 #> [18676,]  357 #> [18677,]  358 #> [18678,]  358 #> [18679,]  357 #> [18680,]  358 #> [18681,]  358 #> [18682,]  357 #> [18683,]  358 #> [18684,]  358 #> [18685,]  358 #> [18686,]  357 #> [18687,]  358 #> [18688,]  357 #> [18689,]  357 #> [18690,]  358 #> [18691,]  357 #> [18692,]  357 #> [18693,]  358 #> [18694,]  357 #> [18695,]  358 #> [18696,]  358 #> [18697,]  358 #> [18698,]  357 #> [18699,]  357 #> [18700,]  358 #> [18701,]  359 #> [18702,]  360 #> [18703,]  360 #> [18704,]  359 #> [18705,]  359 #> [18706,]  360 #> [18707,]  359 #> [18708,]  359 #> [18709,]  359 #> [18710,]  359 #> [18711,]  359 #> [18712,]  360 #> [18713,]  359 #> [18714,]  359 #> [18715,]  359 #> [18716,]  359 #> [18717,]  359 #> [18718,]  360 #> [18719,]  360 #> [18720,]  360 #> [18721,]  359 #> [18722,]  359 #> [18723,]  359 #> [18724,]  359 #> [18725,]  360 #> [18726,]  359 #> [18727,]  359 #> [18728,]  360 #> [18729,]  359 #> [18730,]  359 #> [18731,]  360 #> [18732,]  360 #> [18733,]  360 #> [18734,]  360 #> [18735,]  359 #> [18736,]  359 #> [18737,]  359 #> [18738,]  359 #> [18739,]  359 #> [18740,]  359 #> [18741,]  359 #> [18742,]  360 #> [18743,]  359 #> [18744,]  359 #> [18745,]  359 #> [18746,]  359 #> [18747,]  359 #> [18748,]  359 #> [18749,]  359 #> [18750,]  359 #> [18751,]  359 #> [18752,]  359 #> [18753,]  359 #> [18754,]  359 #> [18755,]  359 #> [18756,]  359 #> [18757,]  359 #> [18758,]  359 #> [18759,]  359 #> [18760,]  360 #> [18761,]  359 #> [18762,]  359 #> [18763,]  359 #> [18764,]  360 #> [18765,]  360 #> [18766,]  359 #> [18767,]  359 #> [18768,]  359 #> [18769,]  359 #> [18770,]  360 #> [18771,]  360 #> [18772,]  359 #> [18773,]  360 #> [18774,]  359 #> [18775,]  359 #> [18776,]  359 #> [18777,]  359 #> [18778,]  359 #> [18779,]  359 #> [18780,]  359 #> [18781,]  359 #> [18782,]  359 #> [18783,]  359 #> [18784,]  360 #> [18785,]  359 #> [18786,]  359 #> [18787,]  359 #> [18788,]  359 #> [18789,]  359 #> [18790,]  359 #> [18791,]  359 #> [18792,]  359 #> [18793,]  360 #> [18794,]  359 #> [18795,]  359 #> [18796,]  359 #> [18797,]  360 #> [18798,]  360 #> [18799,]  359 #> [18800,]  360 #> [18801,]  361 #> [18802,]  361 #> [18803,]  361 #> [18804,]  362 #> [18805,]  361 #> [18806,]  361 #> [18807,]  361 #> [18808,]  361 #> [18809,]  361 #> [18810,]  361 #> [18811,]  361 #> [18812,]  361 #> [18813,]  361 #> [18814,]  362 #> [18815,]  361 #> [18816,]  361 #> [18817,]  361 #> [18818,]  361 #> [18819,]  361 #> [18820,]  361 #> [18821,]  361 #> [18822,]  361 #> [18823,]  361 #> [18824,]  361 #> [18825,]  361 #> [18826,]  361 #> [18827,]  362 #> [18828,]  361 #> [18829,]  361 #> [18830,]  361 #> [18831,]  361 #> [18832,]  361 #> [18833,]  361 #> [18834,]  361 #> [18835,]  361 #> [18836,]  361 #> [18837,]  361 #> [18838,]  361 #> [18839,]  361 #> [18840,]  361 #> [18841,]  361 #> [18842,]  361 #> [18843,]  361 #> [18844,]  361 #> [18845,]  361 #> [18846,]  361 #> [18847,]  361 #> [18848,]  361 #> [18849,]  361 #> [18850,]  361 #> [18851,]  361 #> [18852,]  361 #> [18853,]  361 #> [18854,]  361 #> [18855,]  361 #> [18856,]  361 #> [18857,]  361 #> [18858,]  361 #> [18859,]  361 #> [18860,]  361 #> [18861,]  362 #> [18862,]  361 #> [18863,]  361 #> [18864,]  361 #> [18865,]  361 #> [18866,]  361 #> [18867,]  361 #> [18868,]  361 #> [18869,]  362 #> [18870,]  361 #> [18871,]  361 #> [18872,]  361 #> [18873,]  361 #> [18874,]  361 #> [18875,]  361 #> [18876,]  361 #> [18877,]  361 #> [18878,]  361 #> [18879,]  361 #> [18880,]  361 #> [18881,]  361 #> [18882,]  362 #> [18883,]  361 #> [18884,]  361 #> [18885,]  361 #> [18886,]  361 #> [18887,]  361 #> [18888,]  361 #> [18889,]  361 #> [18890,]  361 #> [18891,]  361 #> [18892,]  362 #> [18893,]  362 #> [18894,]  361 #> [18895,]  361 #> [18896,]  362 #> [18897,]  362 #> [18898,]  361 #> [18899,]  361 #> [18900,]  361 #> [18901,]  363 #> [18902,]  364 #> [18903,]  363 #> [18904,]  363 #> [18905,]  363 #> [18906,]  363 #> [18907,]  363 #> [18908,]  363 #> [18909,]  364 #> [18910,]  364 #> [18911,]  363 #> [18912,]  364 #> [18913,]  363 #> [18914,]  363 #> [18915,]  363 #> [18916,]  363 #> [18917,]  363 #> [18918,]  363 #> [18919,]  363 #> [18920,]  363 #> [18921,]  364 #> [18922,]  363 #> [18923,]  363 #> [18924,]  363 #> [18925,]  363 #> [18926,]  363 #> [18927,]  363 #> [18928,]  363 #> [18929,]  364 #> [18930,]  363 #> [18931,]  363 #> [18932,]  363 #> [18933,]  364 #> [18934,]  363 #> [18935,]  363 #> [18936,]  363 #> [18937,]  363 #> [18938,]  363 #> [18939,]  363 #> [18940,]  363 #> [18941,]  363 #> [18942,]  363 #> [18943,]  363 #> [18944,]  363 #> [18945,]  363 #> [18946,]  363 #> [18947,]  363 #> [18948,]  363 #> [18949,]  363 #> [18950,]  363 #> [18951,]  363 #> [18952,]  363 #> [18953,]  363 #> [18954,]  363 #> [18955,]  363 #> [18956,]  363 #> [18957,]  363 #> [18958,]  363 #> [18959,]  363 #> [18960,]  364 #> [18961,]  363 #> [18962,]  363 #> [18963,]  363 #> [18964,]  363 #> [18965,]  363 #> [18966,]  363 #> [18967,]  363 #> [18968,]  363 #> [18969,]  363 #> [18970,]  364 #> [18971,]  363 #> [18972,]  363 #> [18973,]  363 #> [18974,]  363 #> [18975,]  363 #> [18976,]  363 #> [18977,]  363 #> [18978,]  363 #> [18979,]  363 #> [18980,]  363 #> [18981,]  364 #> [18982,]  363 #> [18983,]  363 #> [18984,]  363 #> [18985,]  363 #> [18986,]  364 #> [18987,]  363 #> [18988,]  363 #> [18989,]  363 #> [18990,]  363 #> [18991,]  363 #> [18992,]  363 #> [18993,]  363 #> [18994,]  363 #> [18995,]  363 #> [18996,]  363 #> [18997,]  363 #> [18998,]  363 #> [18999,]  363 #> [19000,]  363 #> [19001,]  366 #> [19002,]  365 #> [19003,]  365 #> [19004,]  366 #> [19005,]  365 #> [19006,]  365 #> [19007,]  366 #> [19008,]  366 #> [19009,]  366 #> [19010,]  366 #> [19011,]  365 #> [19012,]  365 #> [19013,]  366 #> [19014,]  365 #> [19015,]  366 #> [19016,]  366 #> [19017,]  366 #> [19018,]  366 #> [19019,]  365 #> [19020,]  365 #> [19021,]  366 #> [19022,]  365 #> [19023,]  366 #> [19024,]  365 #> [19025,]  366 #> [19026,]  365 #> [19027,]  366 #> [19028,]  366 #> [19029,]  365 #> [19030,]  365 #> [19031,]  365 #> [19032,]  365 #> [19033,]  365 #> [19034,]  365 #> [19035,]  365 #> [19036,]  365 #> [19037,]  366 #> [19038,]  366 #> [19039,]  366 #> [19040,]  365 #> [19041,]  365 #> [19042,]  365 #> [19043,]  366 #> [19044,]  366 #> [19045,]  366 #> [19046,]  366 #> [19047,]  366 #> [19048,]  365 #> [19049,]  365 #> [19050,]  365 #> [19051,]  365 #> [19052,]  365 #> [19053,]  366 #> [19054,]  365 #> [19055,]  365 #> [19056,]  366 #> [19057,]  365 #> [19058,]  365 #> [19059,]  365 #> [19060,]  365 #> [19061,]  366 #> [19062,]  365 #> [19063,]  365 #> [19064,]  366 #> [19065,]  365 #> [19066,]  365 #> [19067,]  365 #> [19068,]  365 #> [19069,]  365 #> [19070,]  366 #> [19071,]  366 #> [19072,]  366 #> [19073,]  366 #> [19074,]  366 #> [19075,]  366 #> [19076,]  366 #> [19077,]  366 #> [19078,]  365 #> [19079,]  366 #> [19080,]  365 #> [19081,]  365 #> [19082,]  366 #> [19083,]  365 #> [19084,]  366 #> [19085,]  365 #> [19086,]  366 #> [19087,]  366 #> [19088,]  366 #> [19089,]  365 #> [19090,]  366 #> [19091,]  365 #> [19092,]  365 #> [19093,]  365 #> [19094,]  366 #> [19095,]  366 #> [19096,]  366 #> [19097,]  365 #> [19098,]  365 #> [19099,]  365 #> [19100,]  366 #> [19101,]  367 #> [19102,]  367 #> [19103,]  367 #> [19104,]  367 #> [19105,]  367 #> [19106,]  367 #> [19107,]  367 #> [19108,]  367 #> [19109,]  367 #> [19110,]  367 #> [19111,]  367 #> [19112,]  367 #> [19113,]  367 #> [19114,]  367 #> [19115,]  367 #> [19116,]  367 #> [19117,]  367 #> [19118,]  367 #> [19119,]  367 #> [19120,]  367 #> [19121,]  367 #> [19122,]  367 #> [19123,]  367 #> [19124,]  367 #> [19125,]  367 #> [19126,]  367 #> [19127,]  367 #> [19128,]  367 #> [19129,]  367 #> [19130,]  367 #> [19131,]  367 #> [19132,]  367 #> [19133,]  367 #> [19134,]  367 #> [19135,]  367 #> [19136,]  367 #> [19137,]  367 #> [19138,]  367 #> [19139,]  367 #> [19140,]  367 #> [19141,]  367 #> [19142,]  367 #> [19143,]  367 #> [19144,]  367 #> [19145,]  367 #> [19146,]  367 #> [19147,]  367 #> [19148,]  367 #> [19149,]  367 #> [19150,]  367 #> [19151,]  367 #> [19152,]  367 #> [19153,]  367 #> [19154,]  367 #> [19155,]  367 #> [19156,]  367 #> [19157,]  367 #> [19158,]  367 #> [19159,]  367 #> [19160,]  367 #> [19161,]  367 #> [19162,]  367 #> [19163,]  367 #> [19164,]  367 #> [19165,]  367 #> [19166,]  367 #> [19167,]  367 #> [19168,]  367 #> [19169,]  367 #> [19170,]  367 #> [19171,]  367 #> [19172,]  367 #> [19173,]  367 #> [19174,]  367 #> [19175,]  367 #> [19176,]  367 #> [19177,]  367 #> [19178,]  367 #> [19179,]  367 #> [19180,]  367 #> [19181,]  367 #> [19182,]  367 #> [19183,]  367 #> [19184,]  367 #> [19185,]  367 #> [19186,]  367 #> [19187,]  367 #> [19188,]  367 #> [19189,]  367 #> [19190,]  367 #> [19191,]  367 #> [19192,]  367 #> [19193,]  367 #> [19194,]  367 #> [19195,]  367 #> [19196,]  367 #> [19197,]  367 #> [19198,]  367 #> [19199,]  367 #> [19200,]  367 #> [19201,]  368 #> [19202,]  368 #> [19203,]  368 #> [19204,]  369 #> [19205,]  368 #> [19206,]  368 #> [19207,]  369 #> [19208,]  368 #> [19209,]  368 #> [19210,]  369 #> [19211,]  368 #> [19212,]  368 #> [19213,]  368 #> [19214,]  368 #> [19215,]  369 #> [19216,]  369 #> [19217,]  369 #> [19218,]  369 #> [19219,]  368 #> [19220,]  368 #> [19221,]  369 #> [19222,]  368 #> [19223,]  369 #> [19224,]  368 #> [19225,]  369 #> [19226,]  368 #> [19227,]  369 #> [19228,]  369 #> [19229,]  368 #> [19230,]  368 #> [19231,]  368 #> [19232,]  368 #> [19233,]  368 #> [19234,]  368 #> [19235,]  368 #> [19236,]  368 #> [19237,]  368 #> [19238,]  368 #> [19239,]  369 #> [19240,]  368 #> [19241,]  368 #> [19242,]  368 #> [19243,]  369 #> [19244,]  368 #> [19245,]  369 #> [19246,]  368 #> [19247,]  369 #> [19248,]  368 #> [19249,]  368 #> [19250,]  368 #> [19251,]  368 #> [19252,]  368 #> [19253,]  369 #> [19254,]  368 #> [19255,]  368 #> [19256,]  368 #> [19257,]  368 #> [19258,]  368 #> [19259,]  368 #> [19260,]  368 #> [19261,]  369 #> [19262,]  368 #> [19263,]  368 #> [19264,]  369 #> [19265,]  368 #> [19266,]  368 #> [19267,]  368 #> [19268,]  368 #> [19269,]  368 #> [19270,]  368 #> [19271,]  369 #> [19272,]  369 #> [19273,]  369 #> [19274,]  369 #> [19275,]  369 #> [19276,]  369 #> [19277,]  369 #> [19278,]  368 #> [19279,]  368 #> [19280,]  368 #> [19281,]  368 #> [19282,]  368 #> [19283,]  368 #> [19284,]  369 #> [19285,]  368 #> [19286,]  368 #> [19287,]  368 #> [19288,]  369 #> [19289,]  368 #> [19290,]  368 #> [19291,]  368 #> [19292,]  368 #> [19293,]  368 #> [19294,]  369 #> [19295,]  369 #> [19296,]  368 #> [19297,]  368 #> [19298,]  368 #> [19299,]  368 #> [19300,]  369 #> [19301,]  371 #> [19302,]  371 #> [19303,]  371 #> [19304,]  370 #> [19305,]  371 #> [19306,]  371 #> [19307,]  371 #> [19308,]  370 #> [19309,]  370 #> [19310,]  371 #> [19311,]  370 #> [19312,]  371 #> [19313,]  370 #> [19314,]  371 #> [19315,]  371 #> [19316,]  371 #> [19317,]  370 #> [19318,]  371 #> [19319,]  371 #> [19320,]  371 #> [19321,]  371 #> [19322,]  370 #> [19323,]  371 #> [19324,]  371 #> [19325,]  371 #> [19326,]  371 #> [19327,]  370 #> [19328,]  371 #> [19329,]  371 #> [19330,]  371 #> [19331,]  371 #> [19332,]  371 #> [19333,]  371 #> [19334,]  371 #> [19335,]  370 #> [19336,]  371 #> [19337,]  371 #> [19338,]  371 #> [19339,]  371 #> [19340,]  371 #> [19341,]  371 #> [19342,]  371 #> [19343,]  370 #> [19344,]  370 #> [19345,]  371 #> [19346,]  371 #> [19347,]  371 #> [19348,]  371 #> [19349,]  370 #> [19350,]  371 #> [19351,]  371 #> [19352,]  370 #> [19353,]  371 #> [19354,]  371 #> [19355,]  370 #> [19356,]  371 #> [19357,]  371 #> [19358,]  370 #> [19359,]  371 #> [19360,]  371 #> [19361,]  371 #> [19362,]  371 #> [19363,]  371 #> [19364,]  371 #> [19365,]  371 #> [19366,]  370 #> [19367,]  371 #> [19368,]  371 #> [19369,]  370 #> [19370,]  371 #> [19371,]  371 #> [19372,]  371 #> [19373,]  371 #> [19374,]  371 #> [19375,]  371 #> [19376,]  371 #> [19377,]  371 #> [19378,]  371 #> [19379,]  370 #> [19380,]  370 #> [19381,]  370 #> [19382,]  370 #> [19383,]  370 #> [19384,]  371 #> [19385,]  371 #> [19386,]  371 #> [19387,]  370 #> [19388,]  370 #> [19389,]  370 #> [19390,]  370 #> [19391,]  371 #> [19392,]  370 #> [19393,]  371 #> [19394,]  371 #> [19395,]  370 #> [19396,]  371 #> [19397,]  371 #> [19398,]  371 #> [19399,]  370 #> [19400,]  371 #> [19401,]  373 #> [19402,]  373 #> [19403,]  372 #> [19404,]  373 #> [19405,]  373 #> [19406,]  373 #> [19407,]  372 #> [19408,]  373 #> [19409,]  373 #> [19410,]  373 #> [19411,]  373 #> [19412,]  373 #> [19413,]  372 #> [19414,]  373 #> [19415,]  373 #> [19416,]  372 #> [19417,]  373 #> [19418,]  373 #> [19419,]  372 #> [19420,]  373 #> [19421,]  372 #> [19422,]  373 #> [19423,]  372 #> [19424,]  373 #> [19425,]  373 #> [19426,]  373 #> [19427,]  373 #> [19428,]  373 #> [19429,]  373 #> [19430,]  372 #> [19431,]  372 #> [19432,]  373 #> [19433,]  373 #> [19434,]  373 #> [19435,]  372 #> [19436,]  372 #> [19437,]  372 #> [19438,]  373 #> [19439,]  372 #> [19440,]  372 #> [19441,]  373 #> [19442,]  373 #> [19443,]  373 #> [19444,]  373 #> [19445,]  373 #> [19446,]  373 #> [19447,]  372 #> [19448,]  373 #> [19449,]  372 #> [19450,]  373 #> [19451,]  373 #> [19452,]  373 #> [19453,]  373 #> [19454,]  372 #> [19455,]  373 #> [19456,]  373 #> [19457,]  373 #> [19458,]  373 #> [19459,]  373 #> [19460,]  373 #> [19461,]  373 #> [19462,]  372 #> [19463,]  373 #> [19464,]  373 #> [19465,]  373 #> [19466,]  373 #> [19467,]  373 #> [19468,]  373 #> [19469,]  373 #> [19470,]  372 #> [19471,]  373 #> [19472,]  373 #> [19473,]  373 #> [19474,]  373 #> [19475,]  373 #> [19476,]  373 #> [19477,]  372 #> [19478,]  373 #> [19479,]  372 #> [19480,]  372 #> [19481,]  373 #> [19482,]  373 #> [19483,]  372 #> [19484,]  373 #> [19485,]  373 #> [19486,]  373 #> [19487,]  373 #> [19488,]  373 #> [19489,]  373 #> [19490,]  373 #> [19491,]  373 #> [19492,]  373 #> [19493,]  372 #> [19494,]  373 #> [19495,]  372 #> [19496,]  373 #> [19497,]  373 #> [19498,]  372 #> [19499,]  373 #> [19500,]  373 #> [19501,]  374 #> [19502,]  374 #> [19503,]  374 #> [19504,]  374 #> [19505,]  374 #> [19506,]  374 #> [19507,]  374 #> [19508,]  375 #> [19509,]  375 #> [19510,]  374 #> [19511,]  374 #> [19512,]  374 #> [19513,]  374 #> [19514,]  374 #> [19515,]  374 #> [19516,]  374 #> [19517,]  374 #> [19518,]  374 #> [19519,]  374 #> [19520,]  374 #> [19521,]  374 #> [19522,]  374 #> [19523,]  374 #> [19524,]  374 #> [19525,]  374 #> [19526,]  375 #> [19527,]  374 #> [19528,]  374 #> [19529,]  374 #> [19530,]  374 #> [19531,]  374 #> [19532,]  374 #> [19533,]  374 #> [19534,]  374 #> [19535,]  374 #> [19536,]  374 #> [19537,]  374 #> [19538,]  374 #> [19539,]  374 #> [19540,]  374 #> [19541,]  374 #> [19542,]  374 #> [19543,]  375 #> [19544,]  374 #> [19545,]  374 #> [19546,]  375 #> [19547,]  374 #> [19548,]  374 #> [19549,]  374 #> [19550,]  374 #> [19551,]  374 #> [19552,]  374 #> [19553,]  374 #> [19554,]  374 #> [19555,]  374 #> [19556,]  375 #> [19557,]  374 #> [19558,]  374 #> [19559,]  374 #> [19560,]  374 #> [19561,]  375 #> [19562,]  374 #> [19563,]  374 #> [19564,]  375 #> [19565,]  374 #> [19566,]  374 #> [19567,]  374 #> [19568,]  374 #> [19569,]  374 #> [19570,]  374 #> [19571,]  374 #> [19572,]  374 #> [19573,]  374 #> [19574,]  374 #> [19575,]  374 #> [19576,]  375 #> [19577,]  374 #> [19578,]  374 #> [19579,]  374 #> [19580,]  374 #> [19581,]  374 #> [19582,]  374 #> [19583,]  374 #> [19584,]  374 #> [19585,]  374 #> [19586,]  374 #> [19587,]  374 #> [19588,]  374 #> [19589,]  374 #> [19590,]  374 #> [19591,]  374 #> [19592,]  374 #> [19593,]  374 #> [19594,]  375 #> [19595,]  374 #> [19596,]  374 #> [19597,]  374 #> [19598,]  374 #> [19599,]  374 #> [19600,]  374 #> [19601,]  376 #> [19602,]  376 #> [19603,]  376 #> [19604,]  376 #> [19605,]  376 #> [19606,]  376 #> [19607,]  376 #> [19608,]  376 #> [19609,]  377 #> [19610,]  376 #> [19611,]  376 #> [19612,]  376 #> [19613,]  377 #> [19614,]  376 #> [19615,]  376 #> [19616,]  376 #> [19617,]  377 #> [19618,]  377 #> [19619,]  376 #> [19620,]  376 #> [19621,]  376 #> [19622,]  376 #> [19623,]  376 #> [19624,]  376 #> [19625,]  376 #> [19626,]  376 #> [19627,]  376 #> [19628,]  376 #> [19629,]  376 #> [19630,]  376 #> [19631,]  376 #> [19632,]  376 #> [19633,]  376 #> [19634,]  376 #> [19635,]  376 #> [19636,]  376 #> [19637,]  376 #> [19638,]  376 #> [19639,]  376 #> [19640,]  376 #> [19641,]  376 #> [19642,]  377 #> [19643,]  376 #> [19644,]  376 #> [19645,]  376 #> [19646,]  376 #> [19647,]  376 #> [19648,]  376 #> [19649,]  376 #> [19650,]  376 #> [19651,]  377 #> [19652,]  376 #> [19653,]  377 #> [19654,]  376 #> [19655,]  376 #> [19656,]  376 #> [19657,]  376 #> [19658,]  376 #> [19659,]  376 #> [19660,]  376 #> [19661,]  376 #> [19662,]  376 #> [19663,]  376 #> [19664,]  376 #> [19665,]  377 #> [19666,]  376 #> [19667,]  376 #> [19668,]  376 #> [19669,]  376 #> [19670,]  376 #> [19671,]  376 #> [19672,]  376 #> [19673,]  376 #> [19674,]  376 #> [19675,]  376 #> [19676,]  376 #> [19677,]  376 #> [19678,]  376 #> [19679,]  377 #> [19680,]  376 #> [19681,]  376 #> [19682,]  377 #> [19683,]  376 #> [19684,]  377 #> [19685,]  376 #> [19686,]  376 #> [19687,]  376 #> [19688,]  376 #> [19689,]  376 #> [19690,]  376 #> [19691,]  377 #> [19692,]  376 #> [19693,]  377 #> [19694,]  377 #> [19695,]  376 #> [19696,]  376 #> [19697,]  376 #> [19698,]  376 #> [19699,]  376 #> [19700,]  376 #> [19701,]  378 #> [19702,]  378 #> [19703,]  378 #> [19704,]  378 #> [19705,]  378 #> [19706,]  379 #> [19707,]  378 #> [19708,]  379 #> [19709,]  379 #> [19710,]  378 #> [19711,]  378 #> [19712,]  379 #> [19713,]  378 #> [19714,]  378 #> [19715,]  379 #> [19716,]  378 #> [19717,]  378 #> [19718,]  378 #> [19719,]  378 #> [19720,]  378 #> [19721,]  378 #> [19722,]  378 #> [19723,]  378 #> [19724,]  378 #> [19725,]  378 #> [19726,]  379 #> [19727,]  378 #> [19728,]  378 #> [19729,]  378 #> [19730,]  378 #> [19731,]  378 #> [19732,]  378 #> [19733,]  379 #> [19734,]  378 #> [19735,]  378 #> [19736,]  378 #> [19737,]  378 #> [19738,]  378 #> [19739,]  378 #> [19740,]  378 #> [19741,]  378 #> [19742,]  378 #> [19743,]  379 #> [19744,]  378 #> [19745,]  378 #> [19746,]  379 #> [19747,]  378 #> [19748,]  378 #> [19749,]  378 #> [19750,]  378 #> [19751,]  379 #> [19752,]  378 #> [19753,]  378 #> [19754,]  378 #> [19755,]  378 #> [19756,]  379 #> [19757,]  378 #> [19758,]  378 #> [19759,]  378 #> [19760,]  378 #> [19761,]  379 #> [19762,]  378 #> [19763,]  378 #> [19764,]  379 #> [19765,]  378 #> [19766,]  379 #> [19767,]  378 #> [19768,]  379 #> [19769,]  378 #> [19770,]  378 #> [19771,]  378 #> [19772,]  378 #> [19773,]  378 #> [19774,]  378 #> [19775,]  378 #> [19776,]  379 #> [19777,]  378 #> [19778,]  378 #> [19779,]  378 #> [19780,]  378 #> [19781,]  378 #> [19782,]  378 #> [19783,]  378 #> [19784,]  378 #> [19785,]  378 #> [19786,]  378 #> [19787,]  378 #> [19788,]  378 #> [19789,]  378 #> [19790,]  378 #> [19791,]  378 #> [19792,]  378 #> [19793,]  378 #> [19794,]  379 #> [19795,]  378 #> [19796,]  378 #> [19797,]  378 #> [19798,]  378 #> [19799,]  378 #> [19800,]  378 #> [19801,]  381 #> [19802,]  381 #> [19803,]  380 #> [19804,]  381 #> [19805,]  381 #> [19806,]  381 #> [19807,]  381 #> [19808,]  381 #> [19809,]  381 #> [19810,]  381 #> [19811,]  381 #> [19812,]  380 #> [19813,]  381 #> [19814,]  380 #> [19815,]  381 #> [19816,]  381 #> [19817,]  381 #> [19818,]  381 #> [19819,]  381 #> [19820,]  381 #> [19821,]  381 #> [19822,]  381 #> [19823,]  381 #> [19824,]  381 #> [19825,]  381 #> [19826,]  380 #> [19827,]  381 #> [19828,]  381 #> [19829,]  381 #> [19830,]  381 #> [19831,]  381 #> [19832,]  380 #> [19833,]  381 #> [19834,]  381 #> [19835,]  381 #> [19836,]  381 #> [19837,]  381 #> [19838,]  381 #> [19839,]  381 #> [19840,]  381 #> [19841,]  381 #> [19842,]  381 #> [19843,]  381 #> [19844,]  381 #> [19845,]  381 #> [19846,]  381 #> [19847,]  381 #> [19848,]  381 #> [19849,]  381 #> [19850,]  381 #> [19851,]  380 #> [19852,]  381 #> [19853,]  381 #> [19854,]  380 #> [19855,]  381 #> [19856,]  381 #> [19857,]  381 #> [19858,]  381 #> [19859,]  381 #> [19860,]  381 #> [19861,]  381 #> [19862,]  381 #> [19863,]  381 #> [19864,]  381 #> [19865,]  381 #> [19866,]  380 #> [19867,]  381 #> [19868,]  381 #> [19869,]  380 #> [19870,]  381 #> [19871,]  381 #> [19872,]  381 #> [19873,]  381 #> [19874,]  381 #> [19875,]  381 #> [19876,]  381 #> [19877,]  381 #> [19878,]  381 #> [19879,]  381 #> [19880,]  380 #> [19881,]  381 #> [19882,]  381 #> [19883,]  381 #> [19884,]  381 #> [19885,]  381 #> [19886,]  381 #> [19887,]  381 #> [19888,]  381 #> [19889,]  381 #> [19890,]  381 #> [19891,]  381 #> [19892,]  381 #> [19893,]  381 #> [19894,]  381 #> [19895,]  381 #> [19896,]  381 #> [19897,]  381 #> [19898,]  381 #> [19899,]  381 #> [19900,]  381 #> [19901,]  382 #> [19902,]  383 #> [19903,]  382 #> [19904,]  382 #> [19905,]  383 #> [19906,]  382 #> [19907,]  383 #> [19908,]  382 #> [19909,]  383 #> [19910,]  383 #> [19911,]  382 #> [19912,]  383 #> [19913,]  383 #> [19914,]  382 #> [19915,]  383 #> [19916,]  382 #> [19917,]  383 #> [19918,]  383 #> [19919,]  382 #> [19920,]  383 #> [19921,]  383 #> [19922,]  383 #> [19923,]  383 #> [19924,]  383 #> [19925,]  383 #> [19926,]  382 #> [19927,]  383 #> [19928,]  382 #> [19929,]  383 #> [19930,]  383 #> [19931,]  383 #> [19932,]  383 #> [19933,]  383 #> [19934,]  382 #> [19935,]  382 #> [19936,]  383 #> [19937,]  382 #> [19938,]  382 #> [19939,]  383 #> [19940,]  383 #> [19941,]  383 #> [19942,]  382 #> [19943,]  383 #> [19944,]  383 #> [19945,]  382 #> [19946,]  383 #> [19947,]  383 #> [19948,]  383 #> [19949,]  382 #> [19950,]  383 #> [19951,]  383 #> [19952,]  382 #> [19953,]  383 #> [19954,]  383 #> [19955,]  382 #> [19956,]  382 #> [19957,]  383 #> [19958,]  383 #> [19959,]  382 #> [19960,]  383 #> [19961,]  383 #> [19962,]  382 #> [19963,]  383 #> [19964,]  382 #> [19965,]  382 #> [19966,]  383 #> [19967,]  383 #> [19968,]  382 #> [19969,]  382 #> [19970,]  383 #> [19971,]  383 #> [19972,]  382 #> [19973,]  382 #> [19974,]  383 #> [19975,]  383 #> [19976,]  383 #> [19977,]  382 #> [19978,]  383 #> [19979,]  382 #> [19980,]  383 #> [19981,]  383 #> [19982,]  383 #> [19983,]  383 #> [19984,]  383 #> [19985,]  383 #> [19986,]  383 #> [19987,]  383 #> [19988,]  383 #> [19989,]  382 #> [19990,]  383 #> [19991,]  382 #> [19992,]  383 #> [19993,]  383 #> [19994,]  382 #> [19995,]  383 #> [19996,]  382 #> [19997,]  382 #> [19998,]  383 #> [19999,]  383 #> [20000,]  382 computeForestLeafIndices(bart_model, X, \"mean\", c(1,3,9)) #>          [,1] [,2] [,3] #>     [1,]    0    0    0 #>     [2,]    0    0    0 #>     [3,]    0    0    0 #>     [4,]    0    0    0 #>     [5,]    0    0    0 #>     [6,]    0    0    0 #>     [7,]    0    0    0 #>     [8,]    0    0    0 #>     [9,]    1    1    1 #>    [10,]    0    0    0 #>    [11,]    0    0    0 #>    [12,]    0    0    0 #>    [13,]    1    2    1 #>    [14,]    0    0    0 #>    [15,]    0    0    0 #>    [16,]    0    0    0 #>    [17,]    0    0    0 #>    [18,]    1    2    1 #>    [19,]    0    0    0 #>    [20,]    0    0    0 #>    [21,]    0    0    0 #>    [22,]    0    0    0 #>    [23,]    0    0    0 #>    [24,]    0    0    0 #>    [25,]    0    0    0 #>    [26,]    0    0    0 #>    [27,]    0    0    0 #>    [28,]    0    0    0 #>    [29,]    0    0    0 #>    [30,]    0    0    0 #>    [31,]    0    0    0 #>    [32,]    0    0    0 #>    [33,]    0    0    0 #>    [34,]    0    0    0 #>    [35,]    0    0    0 #>    [36,]    0    0    0 #>    [37,]    0    0    0 #>    [38,]    0    0    0 #>    [39,]    0    0    0 #>    [40,]    0    0    0 #>    [41,]    0    0    0 #>    [42,]    1    1    1 #>    [43,]    0    0    0 #>    [44,]    0    0    0 #>    [45,]    0    0    0 #>    [46,]    0    0    0 #>    [47,]    0    0    0 #>    [48,]    0    0    0 #>    [49,]    0    0    0 #>    [50,]    0    0    0 #>    [51,]    1    2    1 #>    [52,]    0    0    0 #>    [53,]    1    1    1 #>    [54,]    0    0    0 #>    [55,]    0    0    0 #>    [56,]    0    0    0 #>    [57,]    0    0    0 #>    [58,]    0    0    0 #>    [59,]    0    0    0 #>    [60,]    0    0    0 #>    [61,]    0    0    0 #>    [62,]    0    0    0 #>    [63,]    0    0    0 #>    [64,]    0    0    0 #>    [65,]    1    1    1 #>    [66,]    0    0    0 #>    [67,]    0    0    0 #>    [68,]    0    0    0 #>    [69,]    0    0    0 #>    [70,]    0    0    0 #>    [71,]    0    0    0 #>    [72,]    0    0    0 #>    [73,]    0    0    0 #>    [74,]    0    0    0 #>    [75,]    0    0    0 #>    [76,]    0    0    0 #>    [77,]    0    0    0 #>    [78,]    0    0    0 #>    [79,]    1    2    1 #>    [80,]    0    0    0 #>    [81,]    0    0    0 #>    [82,]    1    1    1 #>    [83,]    0    0    0 #>    [84,]    1    1    1 #>    [85,]    0    0    0 #>    [86,]    0    0    0 #>    [87,]    0    0    0 #>    [88,]    0    0    0 #>    [89,]    0    0    0 #>    [90,]    0    0    0 #>    [91,]    1    2    1 #>    [92,]    0    0    0 #>    [93,]    1    1    1 #>    [94,]    1    1    1 #>    [95,]    0    0    0 #>    [96,]    0    0    0 #>    [97,]    0    0    0 #>    [98,]    0    0    0 #>    [99,]    0    0    0 #>   [100,]    0    0    0 #>   [101,]    2    3    2 #>   [102,]    3    4    3 #>   [103,]    2    3    2 #>   [104,]    3    4    3 #>   [105,]    3    4    3 #>   [106,]    2    3    2 #>   [107,]    3    4    3 #>   [108,]    3    4    3 #>   [109,]    3    4    3 #>   [110,]    3    4    3 #>   [111,]    2    3    2 #>   [112,]    3    4    3 #>   [113,]    3    4    3 #>   [114,]    3    4    3 #>   [115,]    3    4    3 #>   [116,]    2    3    2 #>   [117,]    3    4    3 #>   [118,]    3    4    3 #>   [119,]    2    3    2 #>   [120,]    3    4    3 #>   [121,]    3    4    3 #>   [122,]    3    4    3 #>   [123,]    3    4    3 #>   [124,]    3    4    3 #>   [125,]    3    4    3 #>   [126,]    3    4    3 #>   [127,]    3    4    3 #>   [128,]    2    3    2 #>   [129,]    3    4    3 #>   [130,]    3    4    3 #>   [131,]    3    4    3 #>   [132,]    3    4    3 #>   [133,]    3    4    3 #>   [134,]    2    3    2 #>   [135,]    2    3    2 #>   [136,]    3    4    3 #>   [137,]    2    3    2 #>   [138,]    2    3    2 #>   [139,]    3    4    3 #>   [140,]    3    4    3 #>   [141,]    3    4    3 #>   [142,]    3    4    3 #>   [143,]    3    4    3 #>   [144,]    3    4    3 #>   [145,]    2    3    2 #>   [146,]    3    4    3 #>   [147,]    3    4    3 #>   [148,]    3    4    3 #>   [149,]    2    3    2 #>   [150,]    3    4    3 #>   [151,]    3    4    3 #>   [152,]    2    3    2 #>   [153,]    3    4    3 #>   [154,]    3    4    3 #>   [155,]    3    4    3 #>   [156,]    3    4    3 #>   [157,]    3    4    3 #>   [158,]    3    4    3 #>   [159,]    3    4    3 #>   [160,]    3    4    3 #>   [161,]    3    4    3 #>   [162,]    3    4    3 #>   [163,]    3    4    3 #>   [164,]    2    3    2 #>   [165,]    3    4    3 #>   [166,]    3    4    3 #>   [167,]    3    4    3 #>   [168,]    2    3    2 #>   [169,]    3    4    3 #>   [170,]    3    4    3 #>   [171,]    3    4    3 #>   [172,]    2    3    2 #>   [173,]    2    3    2 #>   [174,]    3    4    3 #>   [175,]    3    4    3 #>   [176,]    3    4    3 #>   [177,]    2    3    2 #>   [178,]    3    4    3 #>   [179,]    3    4    3 #>   [180,]    3    4    3 #>   [181,]    3    4    3 #>   [182,]    3    4    3 #>   [183,]    3    4    3 #>   [184,]    3    4    3 #>   [185,]    3    4    3 #>   [186,]    3    4    3 #>   [187,]    3    4    3 #>   [188,]    3    4    3 #>   [189,]    3    4    3 #>   [190,]    3    4    3 #>   [191,]    3    4    3 #>   [192,]    3    4    3 #>   [193,]    3    4    3 #>   [194,]    2    3    2 #>   [195,]    3    4    3 #>   [196,]    2    3    2 #>   [197,]    2    3    2 #>   [198,]    3    4    3 #>   [199,]    3    4    3 #>   [200,]    2    3    2 #>   [201,]    4    5    4 #>   [202,]    4    5    4 #>   [203,]    4    5    4 #>   [204,]    5    6    5 #>   [205,]    4    5    4 #>   [206,]    4    5    4 #>   [207,]    4    5    4 #>   [208,]    4    5    4 #>   [209,]    4    5    4 #>   [210,]    5    6    5 #>   [211,]    4    5    4 #>   [212,]    4    5    4 #>   [213,]    4    5    4 #>   [214,]    4    5    4 #>   [215,]    4    5    4 #>   [216,]    4    5    4 #>   [217,]    4    5    4 #>   [218,]    5    6    5 #>   [219,]    4    5    4 #>   [220,]    4    5    4 #>   [221,]    5    6    5 #>   [222,]    4    5    4 #>   [223,]    4    5    4 #>   [224,]    4    5    4 #>   [225,]    5    6    5 #>   [226,]    4    5    4 #>   [227,]    4    5    4 #>   [228,]    4    5    4 #>   [229,]    4    5    4 #>   [230,]    4    5    4 #>   [231,]    4    5    4 #>   [232,]    4    5    4 #>   [233,]    4    5    4 #>   [234,]    4    5    4 #>   [235,]    4    5    4 #>   [236,]    4    5    4 #>   [237,]    4    5    4 #>   [238,]    4    5    4 #>   [239,]    5    6    5 #>   [240,]    4    5    4 #>   [241,]    4    5    4 #>   [242,]    4    5    4 #>   [243,]    5    6    5 #>   [244,]    4    5    4 #>   [245,]    5    6    5 #>   [246,]    4    5    4 #>   [247,]    4    5    4 #>   [248,]    4    5    4 #>   [249,]    4    5    4 #>   [250,]    4    5    4 #>   [251,]    4    5    4 #>   [252,]    4    5    4 #>   [253,]    5    6    5 #>   [254,]    4    5    4 #>   [255,]    4    5    4 #>   [256,]    4    5    4 #>   [257,]    4    5    4 #>   [258,]    4    5    4 #>   [259,]    4    5    4 #>   [260,]    4    5    4 #>   [261,]    4    5    4 #>   [262,]    4    5    4 #>   [263,]    4    5    4 #>   [264,]    4    5    4 #>   [265,]    4    5    4 #>   [266,]    4    5    4 #>   [267,]    4    5    4 #>   [268,]    4    5    4 #>   [269,]    4    5    4 #>   [270,]    4    5    4 #>   [271,]    4    5    4 #>   [272,]    5    6    5 #>   [273,]    5    6    5 #>   [274,]    5    6    5 #>   [275,]    5    6    5 #>   [276,]    5    6    5 #>   [277,]    5    6    5 #>   [278,]    4    5    4 #>   [279,]    4    5    4 #>   [280,]    4    5    4 #>   [281,]    4    5    4 #>   [282,]    4    5    4 #>   [283,]    4    5    4 #>   [284,]    5    6    5 #>   [285,]    4    5    4 #>   [286,]    4    5    4 #>   [287,]    4    5    4 #>   [288,]    4    5    4 #>   [289,]    4    5    4 #>   [290,]    4    5    4 #>   [291,]    4    5    4 #>   [292,]    4    5    4 #>   [293,]    4    5    4 #>   [294,]    5    6    5 #>   [295,]    5    6    5 #>   [296,]    4    5    4 #>   [297,]    4    5    4 #>   [298,]    4    5    4 #>   [299,]    4    5    4 #>   [300,]    4    5    4 #>   [301,]    7    8    7 #>   [302,]    6    7    6 #>   [303,]    6    7    6 #>   [304,]    6    7    6 #>   [305,]    7    8    7 #>   [306,]    6    7    6 #>   [307,]    6    7    6 #>   [308,]    6    7    6 #>   [309,]    6    7    6 #>   [310,]    7    8    7 #>   [311,]    7    8    7 #>   [312,]    7    8    7 #>   [313,]    6    7    6 #>   [314,]    7    8    7 #>   [315,]    7    8    7 #>   [316,]    6    7    6 #>   [317,]    7    8    7 #>   [318,]    7    8    7 #>   [319,]    6    7    6 #>   [320,]    6    7    6 #>   [321,]    6    7    6 #>   [322,]    7    8    7 #>   [323,]    6    7    6 #>   [324,]    6    7    6 #>   [325,]    6    7    6 #>   [326,]    7    8    7 #>   [327,]    7    8    7 #>   [328,]    6    7    6 #>   [329,]    6    7    6 #>   [330,]    6    7    6 #>   [331,]    7    8    7 #>   [332,]    7    8    7 #>   [333,]    6    7    6 #>   [334,]    6    7    6 #>   [335,]    6    7    6 #>   [336,]    6    7    6 #>   [337,]    6    7    6 #>   [338,]    7    8    7 #>   [339,]    6    7    6 #>   [340,]    6    7    6 #>   [341,]    6    7    6 #>   [342,]    6    7    6 #>   [343,]    7    8    7 #>   [344,]    6    7    6 #>   [345,]    6    7    6 #>   [346,]    6    7    6 #>   [347,]    7    8    7 #>   [348,]    6    7    6 #>   [349,]    6    7    6 #>   [350,]    6    7    6 #>   [351,]    6    7    6 #>   [352,]    7    8    7 #>   [353,]    6    7    6 #>   [354,]    6    7    6 #>   [355,]    6    7    6 #>   [356,]    6    7    6 #>   [357,]    6    7    6 #>   [358,]    7    8    7 #>   [359,]    7    8    7 #>   [360,]    6    7    6 #>   [361,]    7    8    7 #>   [362,]    6    7    6 #>   [363,]    6    7    6 #>   [364,]    6    7    6 #>   [365,]    6    7    6 #>   [366,]    7    8    7 #>   [367,]    6    7    6 #>   [368,]    6    7    6 #>   [369,]    6    7    6 #>   [370,]    7    8    7 #>   [371,]    7    8    7 #>   [372,]    6    7    6 #>   [373,]    6    7    6 #>   [374,]    6    7    6 #>   [375,]    7    8    7 #>   [376,]    6    7    6 #>   [377,]    7    8    7 #>   [378,]    6    7    6 #>   [379,]    7    8    7 #>   [380,]    6    7    6 #>   [381,]    6    7    6 #>   [382,]    6    7    6 #>   [383,]    6    7    6 #>   [384,]    6    7    6 #>   [385,]    6    7    6 #>   [386,]    6    7    6 #>   [387,]    7    8    7 #>   [388,]    6    7    6 #>   [389,]    6    7    6 #>   [390,]    7    8    7 #>   [391,]    7    8    7 #>   [392,]    7    8    7 #>   [393,]    6    7    6 #>   [394,]    6    7    6 #>   [395,]    7    8    7 #>   [396,]    6    7    6 #>   [397,]    6    7    6 #>   [398,]    6    7    6 #>   [399,]    6    7    6 #>   [400,]    7    8    7 #>   [401,]    9   10    9 #>   [402,]    9   10    9 #>   [403,]    8    9    8 #>   [404,]    9   10    9 #>   [405,]    9   10    9 #>   [406,]    8    9    8 #>   [407,]    8    9    8 #>   [408,]    9   10    9 #>   [409,]    9   10    9 #>   [410,]    9   10    9 #>   [411,]    9   10    9 #>   [412,]    9   10    9 #>   [413,]    9   10    9 #>   [414,]    9   10    9 #>   [415,]    9   10    9 #>   [416,]    9   10    9 #>   [417,]    9   10    9 #>   [418,]    9   10    9 #>   [419,]    9   10    9 #>   [420,]    8    9    8 #>   [421,]    8    9    8 #>   [422,]    9   10    9 #>   [423,]    9   10    9 #>   [424,]    9   10    9 #>   [425,]    8    9    8 #>   [426,]    9   10    9 #>   [427,]    9   10    9 #>   [428,]    9   10    9 #>   [429,]    9   10    9 #>   [430,]    9   10    9 #>   [431,]    9   10    9 #>   [432,]    9   10    9 #>   [433,]    9   10    9 #>   [434,]    9   10    9 #>   [435,]    8    9    8 #>   [436,]    9   10    9 #>   [437,]    8    9    8 #>   [438,]    9   10    9 #>   [439,]    9   10    9 #>   [440,]    9   10    9 #>   [441,]    9   10    9 #>   [442,]    8    9    8 #>   [443,]    9   10    9 #>   [444,]    8    9    8 #>   [445,]    9   10    9 #>   [446,]    9   10    9 #>   [447,]    9   10    9 #>   [448,]    9   10    9 #>   [449,]    9   10    9 #>   [450,]    9   10    9 #>   [451,]    9   10    9 #>   [452,]    9   10    9 #>   [453,]    8    9    8 #>   [454,]    9   10    9 #>   [455,]    9   10    9 #>   [456,]    8    9    8 #>   [457,]    8    9    8 #>   [458,]    9   10    9 #>   [459,]    9   10    9 #>   [460,]    9   10    9 #>   [461,]    9   10    9 #>   [462,]    9   10    9 #>   [463,]    9   10    9 #>   [464,]    9   10    9 #>   [465,]    8    9    8 #>   [466,]    9   10    9 #>   [467,]    9   10    9 #>   [468,]    9   10    9 #>   [469,]    9   10    9 #>   [470,]    9   10    9 #>   [471,]    9   10    9 #>   [472,]    9   10    9 #>   [473,]    8    9    8 #>   [474,]    8    9    8 #>   [475,]    9   10    9 #>   [476,]    9   10    9 #>   [477,]    9   10    9 #>   [478,]    9   10    9 #>   [479,]    9   10    9 #>   [480,]    8    9    8 #>   [481,]    9   10    9 #>   [482,]    8    9    8 #>   [483,]    9   10    9 #>   [484,]    8    9    8 #>   [485,]    8    9    8 #>   [486,]    8    9    8 #>   [487,]    9   10    9 #>   [488,]    9   10    9 #>   [489,]    8    9    8 #>   [490,]    9   10    9 #>   [491,]    9   10    9 #>   [492,]    9   10    9 #>   [493,]    9   10    9 #>   [494,]    8    9    8 #>   [495,]    9   10    9 #>   [496,]    9   10    9 #>   [497,]    9   10    9 #>   [498,]    9   10    9 #>   [499,]    8    9    8 #>   [500,]    9   10    9 #>   [501,]   12   12   10 #>   [502,]   10   11   10 #>   [503,]   11   12   10 #>   [504,]   10   11   10 #>   [505,]   10   11   10 #>   [506,]   12   12   10 #>   [507,]   10   11   10 #>   [508,]   10   11   10 #>   [509,]   10   11   10 #>   [510,]   10   11   10 #>   [511,]   12   12   10 #>   [512,]   10   11   10 #>   [513,]   10   11   10 #>   [514,]   10   11   10 #>   [515,]   10   11   10 #>   [516,]   11   12   10 #>   [517,]   10   11   10 #>   [518,]   10   11   10 #>   [519,]   12   12   10 #>   [520,]   10   11   10 #>   [521,]   10   11   10 #>   [522,]   10   11   10 #>   [523,]   10   11   10 #>   [524,]   10   11   10 #>   [525,]   10   11   10 #>   [526,]   10   11   10 #>   [527,]   10   11   10 #>   [528,]   12   12   10 #>   [529,]   10   11   10 #>   [530,]   10   11   10 #>   [531,]   10   11   10 #>   [532,]   10   11   10 #>   [533,]   10   11   10 #>   [534,]   12   12   10 #>   [535,]   12   12   10 #>   [536,]   10   11   10 #>   [537,]   12   12   10 #>   [538,]   12   12   10 #>   [539,]   10   11   10 #>   [540,]   10   11   10 #>   [541,]   10   11   10 #>   [542,]   10   11   10 #>   [543,]   10   11   10 #>   [544,]   10   11   10 #>   [545,]   11   12   10 #>   [546,]   10   11   10 #>   [547,]   10   11   10 #>   [548,]   10   11   10 #>   [549,]   11   12   10 #>   [550,]   10   11   10 #>   [551,]   10   11   10 #>   [552,]   12   12   10 #>   [553,]   10   11   10 #>   [554,]   10   11   10 #>   [555,]   10   11   10 #>   [556,]   10   11   10 #>   [557,]   10   11   10 #>   [558,]   10   11   10 #>   [559,]   10   11   10 #>   [560,]   10   11   10 #>   [561,]   10   11   10 #>   [562,]   10   11   10 #>   [563,]   10   11   10 #>   [564,]   12   12   10 #>   [565,]   10   11   10 #>   [566,]   10   11   10 #>   [567,]   10   11   10 #>   [568,]   12   12   10 #>   [569,]   10   11   10 #>   [570,]   10   11   10 #>   [571,]   10   11   10 #>   [572,]   11   12   10 #>   [573,]   12   12   10 #>   [574,]   10   11   10 #>   [575,]   10   11   10 #>   [576,]   10   11   10 #>   [577,]   11   12   10 #>   [578,]   10   11   10 #>   [579,]   10   11   10 #>   [580,]   10   11   10 #>   [581,]   10   11   10 #>   [582,]   10   11   10 #>   [583,]   10   11   10 #>   [584,]   10   11   10 #>   [585,]   10   11   10 #>   [586,]   10   11   10 #>   [587,]   10   11   10 #>   [588,]   10   11   10 #>   [589,]   10   11   10 #>   [590,]   10   11   10 #>   [591,]   10   11   10 #>   [592,]   10   11   10 #>   [593,]   10   11   10 #>   [594,]   11   12   10 #>   [595,]   10   11   10 #>   [596,]   12   12   10 #>   [597,]   12   12   10 #>   [598,]   10   11   10 #>   [599,]   10   11   10 #>   [600,]   11   12   10 #>   [601,]   14   14   11 #>   [602,]   14   14   12 #>   [603,]   13   13   11 #>   [604,]   14   14   11 #>   [605,]   14   14   11 #>   [606,]   14   14   11 #>   [607,]   14   14   11 #>   [608,]   14   14   11 #>   [609,]   14   14   12 #>   [610,]   13   13   12 #>   [611,]   13   13   11 #>   [612,]   14   14   12 #>   [613,]   14   14   12 #>   [614,]   13   13   11 #>   [615,]   14   14   11 #>   [616,]   14   14   11 #>   [617,]   14   14   12 #>   [618,]   14   14   12 #>   [619,]   14   14   11 #>   [620,]   14   14   11 #>   [621,]   14   14   12 #>   [622,]   14   14   11 #>   [623,]   14   14   11 #>   [624,]   14   14   12 #>   [625,]   14   14   11 #>   [626,]   14   14   11 #>   [627,]   14   14   11 #>   [628,]   14   14   11 #>   [629,]   14   14   12 #>   [630,]   14   14   11 #>   [631,]   14   14   12 #>   [632,]   13   13   12 #>   [633,]   14   14   12 #>   [634,]   14   14   11 #>   [635,]   14   14   11 #>   [636,]   14   14   11 #>   [637,]   14   14   11 #>   [638,]   14   14   11 #>   [639,]   14   14   11 #>   [640,]   13   13   12 #>   [641,]   14   14   11 #>   [642,]   14   14   11 #>   [643,]   14   14   11 #>   [644,]   14   14   11 #>   [645,]   14   14   11 #>   [646,]   14   14   11 #>   [647,]   14   14   11 #>   [648,]   13   13   11 #>   [649,]   14   14   11 #>   [650,]   14   14   11 #>   [651,]   14   14   11 #>   [652,]   14   14   11 #>   [653,]   14   14   12 #>   [654,]   14   14   11 #>   [655,]   14   14   11 #>   [656,]   14   14   11 #>   [657,]   14   14   11 #>   [658,]   14   14   11 #>   [659,]   14   14   11 #>   [660,]   14   14   12 #>   [661,]   14   14   12 #>   [662,]   14   14   11 #>   [663,]   14   14   12 #>   [664,]   14   14   11 #>   [665,]   14   14   11 #>   [666,]   14   14   11 #>   [667,]   14   14   11 #>   [668,]   14   14   11 #>   [669,]   14   14   11 #>   [670,]   13   13   12 #>   [671,]   14   14   11 #>   [672,]   14   14   11 #>   [673,]   14   14   11 #>   [674,]   14   14   11 #>   [675,]   14   14   12 #>   [676,]   14   14   11 #>   [677,]   14   14   11 #>   [678,]   14   14   11 #>   [679,]   14   14   11 #>   [680,]   14   14   12 #>   [681,]   14   14   12 #>   [682,]   14   14   11 #>   [683,]   14   14   12 #>   [684,]   14   14   11 #>   [685,]   14   14   11 #>   [686,]   14   14   12 #>   [687,]   14   14   11 #>   [688,]   14   14   11 #>   [689,]   14   14   11 #>   [690,]   14   14   11 #>   [691,]   14   14   11 #>   [692,]   14   14   11 #>   [693,]   14   14   11 #>   [694,]   14   14   11 #>   [695,]   14   14   11 #>   [696,]   14   14   11 #>   [697,]   14   14   11 #>   [698,]   14   14   11 #>   [699,]   14   14   11 #>   [700,]   14   14   11 #>   [701,]   16   16   13 #>   [702,]   15   15   13 #>   [703,]   15   15   13 #>   [704,]   15   15   13 #>   [705,]   15   15   13 #>   [706,]   15   15   14 #>   [707,]   15   15   13 #>   [708,]   15   15   14 #>   [709,]   16   16   14 #>   [710,]   15   15   13 #>   [711,]   15   15   13 #>   [712,]   15   15   14 #>   [713,]   16   16   13 #>   [714,]   15   15   13 #>   [715,]   15   15   14 #>   [716,]   15   15   13 #>   [717,]   16   16   13 #>   [718,]   16   16   13 #>   [719,]   15   15   13 #>   [720,]   15   15   13 #>   [721,]   15   15   13 #>   [722,]   15   15   13 #>   [723,]   15   15   13 #>   [724,]   15   15   13 #>   [725,]   15   15   13 #>   [726,]   15   15   14 #>   [727,]   16   16   13 #>   [728,]   15   15   13 #>   [729,]   15   15   13 #>   [730,]   15   15   13 #>   [731,]   15   15   13 #>   [732,]   15   15   13 #>   [733,]   15   15   13 #>   [734,]   15   15   13 #>   [735,]   15   15   13 #>   [736,]   16   16   13 #>   [737,]   15   15   13 #>   [738,]   15   15   13 #>   [739,]   15   15   13 #>   [740,]   15   15   13 #>   [741,]   15   15   13 #>   [742,]   16   16   13 #>   [743,]   15   15   14 #>   [744,]   15   15   13 #>   [745,]   15   15   13 #>   [746,]   15   15   14 #>   [747,]   15   15   13 #>   [748,]   15   15   13 #>   [749,]   15   15   13 #>   [750,]   15   15   13 #>   [751,]   16   16   14 #>   [752,]   15   15   13 #>   [753,]   16   16   13 #>   [754,]   15   15   13 #>   [755,]   15   15   13 #>   [756,]   16   16   14 #>   [757,]   15   15   13 #>   [758,]   15   15   13 #>   [759,]   15   15   13 #>   [760,]   15   15   13 #>   [761,]   15   15   14 #>   [762,]   15   15   13 #>   [763,]   15   15   13 #>   [764,]   15   15   14 #>   [765,]   16   16   13 #>   [766,]   16   16   14 #>   [767,]   15   15   13 #>   [768,]   15   15   13 #>   [769,]   15   15   13 #>   [770,]   15   15   13 #>   [771,]   15   15   13 #>   [772,]   15   15   13 #>   [773,]   15   15   13 #>   [774,]   15   15   13 #>   [775,]   15   15   13 #>   [776,]   15   15   14 #>   [777,]   15   15   13 #>   [778,]   15   15   13 #>   [779,]   16   16   13 #>   [780,]   15   15   13 #>   [781,]   15   15   13 #>   [782,]   16   16   13 #>   [783,]   16   16   13 #>   [784,]   16   16   13 #>   [785,]   15   15   13 #>   [786,]   15   15   13 #>   [787,]   16   16   13 #>   [788,]   15   15   13 #>   [789,]   15   15   13 #>   [790,]   15   15   13 #>   [791,]   16   16   13 #>   [792,]   15   15   13 #>   [793,]   16   16   13 #>   [794,]   16   16   14 #>   [795,]   15   15   13 #>   [796,]   15   15   13 #>   [797,]   15   15   13 #>   [798,]   15   15   13 #>   [799,]   15   15   13 #>   [800,]   15   15   13 #>   [801,]   17   17   15 #>   [802,]   17   17   15 #>   [803,]   17   17   15 #>   [804,]   18   17   16 #>   [805,]   17   17   15 #>   [806,]   17   17   15 #>   [807,]   18   17   16 #>   [808,]   17   17   15 #>   [809,]   17   17   16 #>   [810,]   18   17   16 #>   [811,]   17   17   15 #>   [812,]   17   17   15 #>   [813,]   17   17   16 #>   [814,]   17   17   16 #>   [815,]   18   17   15 #>   [816,]   18   17   16 #>   [817,]   17   17   15 #>   [818,]   18   17   15 #>   [819,]   17   17   15 #>   [820,]   17   17   16 #>   [821,]   18   17   15 #>   [822,]   17   17   16 #>   [823,]   18   17   15 #>   [824,]   17   17   16 #>   [825,]   18   17   16 #>   [826,]   17   17   15 #>   [827,]   18   17   15 #>   [828,]   18   17   16 #>   [829,]   17   17   15 #>   [830,]   17   17   15 #>   [831,]   17   17   15 #>   [832,]   17   17   15 #>   [833,]   17   17   15 #>   [834,]   17   17   15 #>   [835,]   17   17   15 #>   [836,]   17   17   16 #>   [837,]   17   17   15 #>   [838,]   17   17   15 #>   [839,]   18   17   16 #>   [840,]   17   17   15 #>   [841,]   17   17   15 #>   [842,]   17   17   15 #>   [843,]   18   17   15 #>   [844,]   17   17   15 #>   [845,]   18   17   15 #>   [846,]   17   17   15 #>   [847,]   18   17   15 #>   [848,]   17   17   15 #>   [849,]   17   17   15 #>   [850,]   17   17   16 #>   [851,]   17   17   15 #>   [852,]   17   17   16 #>   [853,]   18   17   15 #>   [854,]   17   17   16 #>   [855,]   17   17   16 #>   [856,]   17   17   15 #>   [857,]   17   17   16 #>   [858,]   17   17   15 #>   [859,]   17   17   16 #>   [860,]   17   17   15 #>   [861,]   18   17   15 #>   [862,]   17   17   15 #>   [863,]   17   17   15 #>   [864,]   18   17   15 #>   [865,]   17   17   15 #>   [866,]   17   17   15 #>   [867,]   17   17   16 #>   [868,]   17   17   15 #>   [869,]   17   17   15 #>   [870,]   17   17   15 #>   [871,]   18   17   15 #>   [872,]   18   17   15 #>   [873,]   18   17   16 #>   [874,]   18   17   15 #>   [875,]   18   17   15 #>   [876,]   18   17   16 #>   [877,]   18   17   15 #>   [878,]   17   17   15 #>   [879,]   17   17   15 #>   [880,]   17   17   15 #>   [881,]   17   17   15 #>   [882,]   17   17   15 #>   [883,]   17   17   15 #>   [884,]   18   17   15 #>   [885,]   17   17   15 #>   [886,]   17   17   16 #>   [887,]   17   17   15 #>   [888,]   18   17   15 #>   [889,]   17   17   15 #>   [890,]   17   17   16 #>   [891,]   17   17   16 #>   [892,]   17   17   15 #>   [893,]   17   17   15 #>   [894,]   18   17   15 #>   [895,]   18   17   15 #>   [896,]   17   17   15 #>   [897,]   17   17   15 #>   [898,]   17   17   15 #>   [899,]   17   17   15 #>   [900,]   18   17   15 #>   [901,]   20   19   18 #>   [902,]   20   19   18 #>   [903,]   19   18   17 #>   [904,]   19   18   17 #>   [905,]   19   18   17 #>   [906,]   19   18   17 #>   [907,]   19   18   17 #>   [908,]   20   19   18 #>   [909,]   19   18   17 #>   [910,]   19   18   17 #>   [911,]   19   18   17 #>   [912,]   19   18   17 #>   [913,]   20   19   18 #>   [914,]   19   18   17 #>   [915,]   20   19   18 #>   [916,]   20   19   18 #>   [917,]   19   18   17 #>   [918,]   19   18   17 #>   [919,]   20   19   18 #>   [920,]   20   19   18 #>   [921,]   19   18   17 #>   [922,]   20   19   18 #>   [923,]   20   19   18 #>   [924,]   19   18   17 #>   [925,]   19   18   17 #>   [926,]   20   19   18 #>   [927,]   20   19   18 #>   [928,]   19   18   17 #>   [929,]   20   19   18 #>   [930,]   20   19   18 #>   [931,]   19   18   17 #>   [932,]   19   18   17 #>   [933,]   20   19   18 #>   [934,]   19   18   17 #>   [935,]   19   18   17 #>   [936,]   20   19   18 #>   [937,]   20   19   18 #>   [938,]   20   19   18 #>   [939,]   19   18   17 #>   [940,]   19   18   17 #>   [941,]   20   19   18 #>   [942,]   19   18   17 #>   [943,]   20   19   18 #>   [944,]   20   19   18 #>   [945,]   19   18   17 #>   [946,]   20   19   18 #>   [947,]   19   18   17 #>   [948,]   19   18   17 #>   [949,]   19   18   17 #>   [950,]   20   19   18 #>   [951,]   20   19   18 #>   [952,]   19   18   17 #>   [953,]   20   19   18 #>   [954,]   19   18   17 #>   [955,]   20   19   18 #>   [956,]   20   19   18 #>   [957,]   19   18   17 #>   [958,]   20   19   18 #>   [959,]   20   19   18 #>   [960,]   20   19   18 #>   [961,]   20   19   18 #>   [962,]   19   18   17 #>   [963,]   20   19   18 #>   [964,]   20   19   18 #>   [965,]   19   18   17 #>   [966,]   20   19   18 #>   [967,]   19   18   17 #>   [968,]   20   19   18 #>   [969,]   20   19   18 #>   [970,]   19   18   17 #>   [971,]   20   19   18 #>   [972,]   19   18   17 #>   [973,]   19   18   17 #>   [974,]   19   18   17 #>   [975,]   20   19   18 #>   [976,]   19   18   17 #>   [977,]   20   19   18 #>   [978,]   20   19   18 #>   [979,]   19   18   17 #>   [980,]   20   19   18 #>   [981,]   20   19   18 #>   [982,]   19   18   17 #>   [983,]   20   19   18 #>   [984,]   20   19   18 #>   [985,]   20   19   18 #>   [986,]   19   18   17 #>   [987,]   20   19   18 #>   [988,]   19   18   17 #>   [989,]   19   18   17 #>   [990,]   20   19   18 #>   [991,]   19   18   17 #>   [992,]   19   18   17 #>   [993,]   20   19   18 #>   [994,]   19   18   17 #>   [995,]   20   19   18 #>   [996,]   20   19   18 #>   [997,]   20   19   18 #>   [998,]   19   18   17 #>   [999,]   19   18   17 #>  [1000,]   20   19   18 #>  [1001,]   22   21   19 #>  [1002,]   22   21   19 #>  [1003,]   21   20   20 #>  [1004,]   21   21   19 #>  [1005,]   21   21   19 #>  [1006,]   22   21   19 #>  [1007,]   21   20   20 #>  [1008,]   21   20   20 #>  [1009,]   21   21   19 #>  [1010,]   21   21   19 #>  [1011,]   21   21   19 #>  [1012,]   21   21   19 #>  [1013,]   22   20   21 #>  [1014,]   22   21   19 #>  [1015,]   22   21   19 #>  [1016,]   22   20   21 #>  [1017,]   22   20   21 #>  [1018,]   21   21   19 #>  [1019,]   21   21   19 #>  [1020,]   21   20   20 #>  [1021,]   22   21   19 #>  [1022,]   21   20   21 #>  [1023,]   21   21   19 #>  [1024,]   21   20   21 #>  [1025,]   21   20   20 #>  [1026,]   21   21   19 #>  [1027,]   21   21   19 #>  [1028,]   21   21   19 #>  [1029,]   22   20   21 #>  [1030,]   21   21   19 #>  [1031,]   21   21   19 #>  [1032,]   21   21   19 #>  [1033,]   22   21   19 #>  [1034,]   21   21   19 #>  [1035,]   22   21   19 #>  [1036,]   21   21   19 #>  [1037,]   21   21   19 #>  [1038,]   21   21   19 #>  [1039,]   21   20   20 #>  [1040,]   21   20   21 #>  [1041,]   22   21   19 #>  [1042,]   21   21   19 #>  [1043,]   21   20   21 #>  [1044,]   22   20   20 #>  [1045,]   21   20   21 #>  [1046,]   21   20   21 #>  [1047,]   21   20   21 #>  [1048,]   21   21   19 #>  [1049,]   21   20   20 #>  [1050,]   22   20   20 #>  [1051,]   21   20   21 #>  [1052,]   21   21   19 #>  [1053,]   21   20   20 #>  [1054,]   21   20   21 #>  [1055,]   21   20   20 #>  [1056,]   21   20   20 #>  [1057,]   21   21   19 #>  [1058,]   21   21   19 #>  [1059,]   22   20   20 #>  [1060,]   21   21   19 #>  [1061,]   22   21   19 #>  [1062,]   21   21   19 #>  [1063,]   21   20   21 #>  [1064,]   21   21   19 #>  [1065,]   21   20   20 #>  [1066,]   21   20   20 #>  [1067,]   21   21   19 #>  [1068,]   22   21   19 #>  [1069,]   21   21   19 #>  [1070,]   22   20   21 #>  [1071,]   21   21   19 #>  [1072,]   21   20   21 #>  [1073,]   22   21   19 #>  [1074,]   21   21   19 #>  [1075,]   21   21   19 #>  [1076,]   22   20   21 #>  [1077,]   22   20   21 #>  [1078,]   21   20   21 #>  [1079,]   22   20   21 #>  [1080,]   21   21   19 #>  [1081,]   22   21   19 #>  [1082,]   21   21   19 #>  [1083,]   22   20   21 #>  [1084,]   21   20   20 #>  [1085,]   21   21   19 #>  [1086,]   22   20   20 #>  [1087,]   21   21   19 #>  [1088,]   21   21   19 #>  [1089,]   21   20   21 #>  [1090,]   21   20   20 #>  [1091,]   21   21   19 #>  [1092,]   21   21   19 #>  [1093,]   22   21   19 #>  [1094,]   21   20   21 #>  [1095,]   21   21   19 #>  [1096,]   22   21   19 #>  [1097,]   21   21   19 #>  [1098,]   21   20   20 #>  [1099,]   22   21   19 #>  [1100,]   21   20   20 #>  [1101,]   24   23   23 #>  [1102,]   23   22   22 #>  [1103,]   24   23   23 #>  [1104,]   24   23   23 #>  [1105,]   24   23   23 #>  [1106,]   23   22   22 #>  [1107,]   24   23   23 #>  [1108,]   24   23   23 #>  [1109,]   24   23   23 #>  [1110,]   24   23   23 #>  [1111,]   23   22   22 #>  [1112,]   23   22   22 #>  [1113,]   24   23   23 #>  [1114,]   24   23   23 #>  [1115,]   23   22   22 #>  [1116,]   24   23   23 #>  [1117,]   23   22   22 #>  [1118,]   24   23   23 #>  [1119,]   23   22   22 #>  [1120,]   24   23   23 #>  [1121,]   24   23   23 #>  [1122,]   24   23   23 #>  [1123,]   23   22   22 #>  [1124,]   24   23   23 #>  [1125,]   24   23   23 #>  [1126,]   23   22   22 #>  [1127,]   24   23   23 #>  [1128,]   24   23   23 #>  [1129,]   23   22   22 #>  [1130,]   23   22   22 #>  [1131,]   23   22   22 #>  [1132,]   24   23   23 #>  [1133,]   24   23   23 #>  [1134,]   23   22   22 #>  [1135,]   23   22   22 #>  [1136,]   24   23   23 #>  [1137,]   23   22   22 #>  [1138,]   24   23   23 #>  [1139,]   24   23   23 #>  [1140,]   24   23   23 #>  [1141,]   24   23   23 #>  [1142,]   23   22   22 #>  [1143,]   23   22   22 #>  [1144,]   23   22   22 #>  [1145,]   24   23   23 #>  [1146,]   23   22   22 #>  [1147,]   23   22   22 #>  [1148,]   23   22   22 #>  [1149,]   24   23   23 #>  [1150,]   24   23   23 #>  [1151,]   24   23   23 #>  [1152,]   24   23   23 #>  [1153,]   24   23   23 #>  [1154,]   24   23   23 #>  [1155,]   24   23   23 #>  [1156,]   23   22   22 #>  [1157,]   24   23   23 #>  [1158,]   24   23   23 #>  [1159,]   24   23   23 #>  [1160,]   23   22   22 #>  [1161,]   23   22   22 #>  [1162,]   24   23   23 #>  [1163,]   23   22   22 #>  [1164,]   23   22   22 #>  [1165,]   23   22   22 #>  [1166,]   23   22   22 #>  [1167,]   24   23   23 #>  [1168,]   23   22   22 #>  [1169,]   24   23   23 #>  [1170,]   23   22   22 #>  [1171,]   24   23   23 #>  [1172,]   24   23   23 #>  [1173,]   24   23   23 #>  [1174,]   24   23   23 #>  [1175,]   23   22   22 #>  [1176,]   24   23   23 #>  [1177,]   24   23   23 #>  [1178,]   23   22   22 #>  [1179,]   23   22   22 #>  [1180,]   24   23   23 #>  [1181,]   23   22   22 #>  [1182,]   24   23   23 #>  [1183,]   24   23   23 #>  [1184,]   24   23   23 #>  [1185,]   24   23   23 #>  [1186,]   24   23   23 #>  [1187,]   24   23   23 #>  [1188,]   24   23   23 #>  [1189,]   24   23   23 #>  [1190,]   24   23   23 #>  [1191,]   24   23   23 #>  [1192,]   23   22   22 #>  [1193,]   23   22   22 #>  [1194,]   23   22   22 #>  [1195,]   23   22   22 #>  [1196,]   23   22   22 #>  [1197,]   24   23   23 #>  [1198,]   24   23   23 #>  [1199,]   24   23   23 #>  [1200,]   23   22   22 #>  [1201,]   25   24   24 #>  [1202,]   25   24   24 #>  [1203,]   25   24   24 #>  [1204,]   25   24   24 #>  [1205,]   26   25   25 #>  [1206,]   25   24   24 #>  [1207,]   25   24   24 #>  [1208,]   25   24   24 #>  [1209,]   25   24   24 #>  [1210,]   25   24   24 #>  [1211,]   25   24   24 #>  [1212,]   25   24   24 #>  [1213,]   25   24   24 #>  [1214,]   25   24   24 #>  [1215,]   25   24   24 #>  [1216,]   25   24   24 #>  [1217,]   25   24   24 #>  [1218,]   26   25   25 #>  [1219,]   25   24   24 #>  [1220,]   25   24   24 #>  [1221,]   25   24   24 #>  [1222,]   25   24   24 #>  [1223,]   25   24   24 #>  [1224,]   25   24   24 #>  [1225,]   25   24   24 #>  [1226,]   25   24   24 #>  [1227,]   25   24   24 #>  [1228,]   25   24   24 #>  [1229,]   25   24   24 #>  [1230,]   25   24   24 #>  [1231,]   25   24   24 #>  [1232,]   26   25   25 #>  [1233,]   25   24   24 #>  [1234,]   25   24   24 #>  [1235,]   25   24   24 #>  [1236,]   25   24   24 #>  [1237,]   25   24   24 #>  [1238,]   25   24   24 #>  [1239,]   25   24   24 #>  [1240,]   25   24   24 #>  [1241,]   25   24   24 #>  [1242,]   25   24   24 #>  [1243,]   25   24   24 #>  [1244,]   25   24   24 #>  [1245,]   25   24   24 #>  [1246,]   25   24   24 #>  [1247,]   25   24   24 #>  [1248,]   25   24   24 #>  [1249,]   25   24   24 #>  [1250,]   25   24   24 #>  [1251,]   25   24   24 #>  [1252,]   25   24   24 #>  [1253,]   25   24   24 #>  [1254,]   25   24   24 #>  [1255,]   25   24   24 #>  [1256,]   25   24   24 #>  [1257,]   25   24   24 #>  [1258,]   25   24   24 #>  [1259,]   25   24   24 #>  [1260,]   25   24   24 #>  [1261,]   25   24   24 #>  [1262,]   25   24   24 #>  [1263,]   25   24   24 #>  [1264,]   25   24   24 #>  [1265,]   25   24   24 #>  [1266,]   25   24   24 #>  [1267,]   25   24   24 #>  [1268,]   25   24   24 #>  [1269,]   25   24   24 #>  [1270,]   25   24   24 #>  [1271,]   26   25   25 #>  [1272,]   25   24   24 #>  [1273,]   25   24   24 #>  [1274,]   25   24   24 #>  [1275,]   26   25   25 #>  [1276,]   25   24   24 #>  [1277,]   25   24   24 #>  [1278,]   25   24   24 #>  [1279,]   25   24   24 #>  [1280,]   25   24   24 #>  [1281,]   25   24   24 #>  [1282,]   25   24   24 #>  [1283,]   25   24   24 #>  [1284,]   25   24   24 #>  [1285,]   25   24   24 #>  [1286,]   25   24   24 #>  [1287,]   25   24   24 #>  [1288,]   25   24   24 #>  [1289,]   25   24   24 #>  [1290,]   25   24   24 #>  [1291,]   25   24   24 #>  [1292,]   25   24   24 #>  [1293,]   25   24   24 #>  [1294,]   25   24   24 #>  [1295,]   26   25   25 #>  [1296,]   25   24   24 #>  [1297,]   25   24   24 #>  [1298,]   25   24   24 #>  [1299,]   25   24   24 #>  [1300,]   26   25   25 #>  [1301,]   28   27   27 #>  [1302,]   28   27   27 #>  [1303,]   27   26   26 #>  [1304,]   28   27   27 #>  [1305,]   28   27   27 #>  [1306,]   28   27   27 #>  [1307,]   27   26   26 #>  [1308,]   28   27   26 #>  [1309,]   28   27   27 #>  [1310,]   28   27   27 #>  [1311,]   28   27   27 #>  [1312,]   28   27   27 #>  [1313,]   28   27   26 #>  [1314,]   28   27   27 #>  [1315,]   28   27   27 #>  [1316,]   28   27   26 #>  [1317,]   28   27   26 #>  [1318,]   28   27   27 #>  [1319,]   28   27   27 #>  [1320,]   28   27   26 #>  [1321,]   28   27   27 #>  [1322,]   28   27   26 #>  [1323,]   28   27   27 #>  [1324,]   28   27   26 #>  [1325,]   28   27   26 #>  [1326,]   28   27   27 #>  [1327,]   28   27   27 #>  [1328,]   28   27   27 #>  [1329,]   28   27   27 #>  [1330,]   28   27   27 #>  [1331,]   28   27   27 #>  [1332,]   28   27   27 #>  [1333,]   28   27   27 #>  [1334,]   28   27   27 #>  [1335,]   28   27   27 #>  [1336,]   28   27   27 #>  [1337,]   28   27   27 #>  [1338,]   28   27   27 #>  [1339,]   28   27   26 #>  [1340,]   28   27   26 #>  [1341,]   28   27   27 #>  [1342,]   28   27   27 #>  [1343,]   28   27   26 #>  [1344,]   28   27   26 #>  [1345,]   28   27   26 #>  [1346,]   28   27   26 #>  [1347,]   28   27   26 #>  [1348,]   28   27   27 #>  [1349,]   27   26   26 #>  [1350,]   28   27   26 #>  [1351,]   28   27   26 #>  [1352,]   28   27   27 #>  [1353,]   27   26   26 #>  [1354,]   28   27   26 #>  [1355,]   27   26   26 #>  [1356,]   27   26   26 #>  [1357,]   28   27   27 #>  [1358,]   28   27   27 #>  [1359,]   28   27   26 #>  [1360,]   28   27   27 #>  [1361,]   28   27   27 #>  [1362,]   28   27   27 #>  [1363,]   28   27   26 #>  [1364,]   28   27   27 #>  [1365,]   28   27   26 #>  [1366,]   27   26   26 #>  [1367,]   28   27   27 #>  [1368,]   28   27   27 #>  [1369,]   28   27   27 #>  [1370,]   28   27   26 #>  [1371,]   28   27   27 #>  [1372,]   28   27   26 #>  [1373,]   28   27   27 #>  [1374,]   28   27   27 #>  [1375,]   28   27   27 #>  [1376,]   28   27   26 #>  [1377,]   28   27   26 #>  [1378,]   28   27   26 #>  [1379,]   28   27   26 #>  [1380,]   28   27   27 #>  [1381,]   28   27   27 #>  [1382,]   28   27   27 #>  [1383,]   28   27   26 #>  [1384,]   28   27   26 #>  [1385,]   28   27   27 #>  [1386,]   28   27   26 #>  [1387,]   28   27   27 #>  [1388,]   28   27   27 #>  [1389,]   28   27   26 #>  [1390,]   28   27   26 #>  [1391,]   28   27   27 #>  [1392,]   28   27   27 #>  [1393,]   28   27   27 #>  [1394,]   28   27   26 #>  [1395,]   28   27   27 #>  [1396,]   28   27   27 #>  [1397,]   28   27   27 #>  [1398,]   28   27   26 #>  [1399,]   28   27   27 #>  [1400,]   28   27   26 #>  [1401,]   30   28   28 #>  [1402,]   30   29   30 #>  [1403,]   30   29   29 #>  [1404,]   30   28   28 #>  [1405,]   30   29   29 #>  [1406,]   30   29   29 #>  [1407,]   30   29   30 #>  [1408,]   30   28   28 #>  [1409,]   30   28   28 #>  [1410,]   30   29   29 #>  [1411,]   30   28   28 #>  [1412,]   30   29   30 #>  [1413,]   30   28   28 #>  [1414,]   30   29   29 #>  [1415,]   30   29   30 #>  [1416,]   30   29   30 #>  [1417,]   30   28   28 #>  [1418,]   30   29   30 #>  [1419,]   30   29   30 #>  [1420,]   29   29   30 #>  [1421,]   29   29   29 #>  [1422,]   30   28   28 #>  [1423,]   30   29   30 #>  [1424,]   30   29   29 #>  [1425,]   29   29   29 #>  [1426,]   30   29   30 #>  [1427,]   30   28   28 #>  [1428,]   30   29   29 #>  [1429,]   30   29   30 #>  [1430,]   30   28   28 #>  [1431,]   30   29   29 #>  [1432,]   30   29   29 #>  [1433,]   30   29   30 #>  [1434,]   30   29   29 #>  [1435,]   29   28   28 #>  [1436,]   30   29   30 #>  [1437,]   30   29   30 #>  [1438,]   30   29   30 #>  [1439,]   30   29   29 #>  [1440,]   30   29   29 #>  [1441,]   30   29   30 #>  [1442,]   30   29   29 #>  [1443,]   30   28   28 #>  [1444,]   29   28   28 #>  [1445,]   30   29   30 #>  [1446,]   30   28   28 #>  [1447,]   30   29   29 #>  [1448,]   30   29   29 #>  [1449,]   30   28   28 #>  [1450,]   30   29   30 #>  [1451,]   30   29   30 #>  [1452,]   30   28   28 #>  [1453,]   29   29   30 #>  [1454,]   30   28   28 #>  [1455,]   30   28   28 #>  [1456,]   29   29   30 #>  [1457,]   30   29   29 #>  [1458,]   30   28   28 #>  [1459,]   30   29   30 #>  [1460,]   30   29   30 #>  [1461,]   30   29   30 #>  [1462,]   30   29   29 #>  [1463,]   30   29   30 #>  [1464,]   30   29   30 #>  [1465,]   29   29   29 #>  [1466,]   30   28   28 #>  [1467,]   30   29   29 #>  [1468,]   30   29   30 #>  [1469,]   30   28   28 #>  [1470,]   30   29   29 #>  [1471,]   30   29   30 #>  [1472,]   30   29   29 #>  [1473,]   30   29   29 #>  [1474,]   29   29   29 #>  [1475,]   30   29   30 #>  [1476,]   30   29   29 #>  [1477,]   30   29   30 #>  [1478,]   30   29   30 #>  [1479,]   30   28   28 #>  [1480,]   29   28   28 #>  [1481,]   30   28   28 #>  [1482,]   30   28   28 #>  [1483,]   30   28   28 #>  [1484,]   30   29   30 #>  [1485,]   29   29   30 #>  [1486,]   29   29   29 #>  [1487,]   30   28   28 #>  [1488,]   30   28   28 #>  [1489,]   29   28   28 #>  [1490,]   30   28   28 #>  [1491,]   30   29   29 #>  [1492,]   30   28   28 #>  [1493,]   30   29   30 #>  [1494,]   30   29   29 #>  [1495,]   30   28   28 #>  [1496,]   30   28   28 #>  [1497,]   30   29   30 #>  [1498,]   30   29   29 #>  [1499,]   30   28   28 #>  [1500,]   30   29   30 #>  [1501,]   31   31   32 #>  [1502,]   31   31   32 #>  [1503,]   31   31   32 #>  [1504,]   31   31   32 #>  [1505,]   31   31   32 #>  [1506,]   31   31   32 #>  [1507,]   31   31   32 #>  [1508,]   31   32   32 #>  [1509,]   31   31   32 #>  [1510,]   31   31   32 #>  [1511,]   31   31   32 #>  [1512,]   31   31   32 #>  [1513,]   31   32   32 #>  [1514,]   31   31   32 #>  [1515,]   31   32   32 #>  [1516,]   31   31   32 #>  [1517,]   31   31   32 #>  [1518,]   31   31   32 #>  [1519,]   31   32   32 #>  [1520,]   32   30   31 #>  [1521,]   31   31   32 #>  [1522,]   31   32   32 #>  [1523,]   31   31   32 #>  [1524,]   32   30   31 #>  [1525,]   31   31   32 #>  [1526,]   31   31   32 #>  [1527,]   31   32   32 #>  [1528,]   32   30   31 #>  [1529,]   31   32   32 #>  [1530,]   31   31   32 #>  [1531,]   31   31   32 #>  [1532,]   31   31   32 #>  [1533,]   31   31   32 #>  [1534,]   31   31   32 #>  [1535,]   31   31   32 #>  [1536,]   31   32   32 #>  [1537,]   31   32   32 #>  [1538,]   31   32   32 #>  [1539,]   31   31   32 #>  [1540,]   31   31   32 #>  [1541,]   31   32   32 #>  [1542,]   31   31   32 #>  [1543,]   31   31   32 #>  [1544,]   31   31   32 #>  [1545,]   31   31   32 #>  [1546,]   31   32   32 #>  [1547,]   31   31   32 #>  [1548,]   31   31   32 #>  [1549,]   31   31   32 #>  [1550,]   32   30   31 #>  [1551,]   31   32   32 #>  [1552,]   32   30   31 #>  [1553,]   31   32   32 #>  [1554,]   31   31   32 #>  [1555,]   31   32   32 #>  [1556,]   31   31   32 #>  [1557,]   31   31   32 #>  [1558,]   31   32   32 #>  [1559,]   31   31   32 #>  [1560,]   31   32   32 #>  [1561,]   31   31   32 #>  [1562,]   31   31   32 #>  [1563,]   31   31   32 #>  [1564,]   31   32   32 #>  [1565,]   31   31   32 #>  [1566,]   31   32   32 #>  [1567,]   31   31   32 #>  [1568,]   31   31   32 #>  [1569,]   31   32   32 #>  [1570,]   31   31   32 #>  [1571,]   31   32   32 #>  [1572,]   31   31   32 #>  [1573,]   31   31   32 #>  [1574,]   31   31   32 #>  [1575,]   31   31   32 #>  [1576,]   32   30   31 #>  [1577,]   31   32   32 #>  [1578,]   31   31   32 #>  [1579,]   31   31   32 #>  [1580,]   31   32   32 #>  [1581,]   31   32   32 #>  [1582,]   31   31   32 #>  [1583,]   31   32   32 #>  [1584,]   31   31   32 #>  [1585,]   31   31   32 #>  [1586,]   32   30   31 #>  [1587,]   31   32   32 #>  [1588,]   31   31   32 #>  [1589,]   31   31   32 #>  [1590,]   31   32   32 #>  [1591,]   31   31   32 #>  [1592,]   31   31   32 #>  [1593,]   31   31   32 #>  [1594,]   31   31   32 #>  [1595,]   31   31   32 #>  [1596,]   31   32   32 #>  [1597,]   31   32   32 #>  [1598,]   31   31   32 #>  [1599,]   31   31   32 #>  [1600,]   31   32   32 #>  [1601,]   34   34   34 #>  [1602,]   34   34   34 #>  [1603,]   34   34   34 #>  [1604,]   34   34   34 #>  [1605,]   34   34   34 #>  [1606,]   34   34   34 #>  [1607,]   34   34   34 #>  [1608,]   34   34   34 #>  [1609,]   34   34   34 #>  [1610,]   34   34   34 #>  [1611,]   34   34   34 #>  [1612,]   34   34   34 #>  [1613,]   34   34   34 #>  [1614,]   34   34   34 #>  [1615,]   34   34   34 #>  [1616,]   34   34   34 #>  [1617,]   34   34   34 #>  [1618,]   34   34   34 #>  [1619,]   34   34   34 #>  [1620,]   34   34   34 #>  [1621,]   34   34   34 #>  [1622,]   34   34   34 #>  [1623,]   34   34   34 #>  [1624,]   34   34   34 #>  [1625,]   33   33   33 #>  [1626,]   34   34   34 #>  [1627,]   34   34   34 #>  [1628,]   34   34   34 #>  [1629,]   34   34   34 #>  [1630,]   34   34   34 #>  [1631,]   34   34   34 #>  [1632,]   34   34   34 #>  [1633,]   34   34   34 #>  [1634,]   34   34   34 #>  [1635,]   34   34   34 #>  [1636,]   34   34   34 #>  [1637,]   34   34   34 #>  [1638,]   34   34   34 #>  [1639,]   34   34   34 #>  [1640,]   34   34   34 #>  [1641,]   34   34   34 #>  [1642,]   34   34   34 #>  [1643,]   34   34   34 #>  [1644,]   34   34   34 #>  [1645,]   34   34   34 #>  [1646,]   34   34   34 #>  [1647,]   34   34   34 #>  [1648,]   34   34   34 #>  [1649,]   34   34   34 #>  [1650,]   34   34   34 #>  [1651,]   34   34   34 #>  [1652,]   34   34   34 #>  [1653,]   34   34   34 #>  [1654,]   34   34   34 #>  [1655,]   34   34   34 #>  [1656,]   33   33   33 #>  [1657,]   34   34   34 #>  [1658,]   34   34   34 #>  [1659,]   34   34   34 #>  [1660,]   34   34   34 #>  [1661,]   34   34   34 #>  [1662,]   34   34   34 #>  [1663,]   34   34   34 #>  [1664,]   34   34   34 #>  [1665,]   33   33   33 #>  [1666,]   34   34   34 #>  [1667,]   34   34   34 #>  [1668,]   34   34   34 #>  [1669,]   34   34   34 #>  [1670,]   34   34   34 #>  [1671,]   34   34   34 #>  [1672,]   34   34   34 #>  [1673,]   34   34   34 #>  [1674,]   34   34   34 #>  [1675,]   34   34   34 #>  [1676,]   34   34   34 #>  [1677,]   34   34   34 #>  [1678,]   34   34   34 #>  [1679,]   34   34   34 #>  [1680,]   33   33   33 #>  [1681,]   34   34   34 #>  [1682,]   34   34   34 #>  [1683,]   34   34   34 #>  [1684,]   34   34   34 #>  [1685,]   33   33   33 #>  [1686,]   34   34   34 #>  [1687,]   34   34   34 #>  [1688,]   34   34   34 #>  [1689,]   33   33   33 #>  [1690,]   34   34   34 #>  [1691,]   34   34   34 #>  [1692,]   34   34   34 #>  [1693,]   34   34   34 #>  [1694,]   34   34   34 #>  [1695,]   34   34   34 #>  [1696,]   34   34   34 #>  [1697,]   34   34   34 #>  [1698,]   34   34   34 #>  [1699,]   34   34   34 #>  [1700,]   34   34   34 #>  [1701,]   36   36   36 #>  [1702,]   35   35   35 #>  [1703,]   35   35   35 #>  [1704,]   36   36   36 #>  [1705,]   35   35   35 #>  [1706,]   35   35   35 #>  [1707,]   36   36   36 #>  [1708,]   35   35   35 #>  [1709,]   36   36   36 #>  [1710,]   36   36   36 #>  [1711,]   35   35   35 #>  [1712,]   35   35   35 #>  [1713,]   36   36   36 #>  [1714,]   36   36   36 #>  [1715,]   35   35   35 #>  [1716,]   36   36   36 #>  [1717,]   35   35   35 #>  [1718,]   35   35   35 #>  [1719,]   35   35   35 #>  [1720,]   36   36   36 #>  [1721,]   35   35   35 #>  [1722,]   36   36   36 #>  [1723,]   35   35   35 #>  [1724,]   36   36   36 #>  [1725,]   36   36   36 #>  [1726,]   35   35   35 #>  [1727,]   35   35   35 #>  [1728,]   36   36   36 #>  [1729,]   35   35   35 #>  [1730,]   35   35   35 #>  [1731,]   35   35   35 #>  [1732,]   35   35   35 #>  [1733,]   35   35   35 #>  [1734,]   35   35   35 #>  [1735,]   35   35   35 #>  [1736,]   36   36   36 #>  [1737,]   35   35   35 #>  [1738,]   35   35   35 #>  [1739,]   36   36   36 #>  [1740,]   35   35   35 #>  [1741,]   35   35   35 #>  [1742,]   35   35   35 #>  [1743,]   35   35   35 #>  [1744,]   35   35   35 #>  [1745,]   35   35   35 #>  [1746,]   35   35   35 #>  [1747,]   35   35   35 #>  [1748,]   35   35   35 #>  [1749,]   35   35   35 #>  [1750,]   36   36   36 #>  [1751,]   35   35   35 #>  [1752,]   36   36   36 #>  [1753,]   36   36   36 #>  [1754,]   36   36   36 #>  [1755,]   36   36   36 #>  [1756,]   35   35   35 #>  [1757,]   36   36   36 #>  [1758,]   36   36   36 #>  [1759,]   36   36   36 #>  [1760,]   35   35   35 #>  [1761,]   35   35   35 #>  [1762,]   35   35   35 #>  [1763,]   35   35   35 #>  [1764,]   35   35   35 #>  [1765,]   35   35   35 #>  [1766,]   35   35   35 #>  [1767,]   36   36   36 #>  [1768,]   35   35   35 #>  [1769,]   35   35   35 #>  [1770,]   35   35   35 #>  [1771,]   35   35   35 #>  [1772,]   36   36   36 #>  [1773,]   36   36   36 #>  [1774,]   35   35   35 #>  [1775,]   35   35   35 #>  [1776,]   36   36   36 #>  [1777,]   35   35   35 #>  [1778,]   35   35   35 #>  [1779,]   35   35   35 #>  [1780,]   35   35   35 #>  [1781,]   35   35   35 #>  [1782,]   35   35   35 #>  [1783,]   35   35   35 #>  [1784,]   35   35   35 #>  [1785,]   36   36   36 #>  [1786,]   36   36   36 #>  [1787,]   35   35   35 #>  [1788,]   35   35   35 #>  [1789,]   35   35   35 #>  [1790,]   36   36   36 #>  [1791,]   36   36   36 #>  [1792,]   35   35   35 #>  [1793,]   35   35   35 #>  [1794,]   35   35   35 #>  [1795,]   35   35   35 #>  [1796,]   35   35   35 #>  [1797,]   35   35   35 #>  [1798,]   35   35   35 #>  [1799,]   35   35   35 #>  [1800,]   35   35   35 #>  [1801,]   38   38   37 #>  [1802,]   37   37   38 #>  [1803,]   37   37   38 #>  [1804,]   37   37   38 #>  [1805,]   38   38   37 #>  [1806,]   37   37   38 #>  [1807,]   37   37   38 #>  [1808,]   37   37   38 #>  [1809,]   37   37   39 #>  [1810,]   38   38   37 #>  [1811,]   38   38   37 #>  [1812,]   38   38   37 #>  [1813,]   37   37   39 #>  [1814,]   38   38   37 #>  [1815,]   38   38   37 #>  [1816,]   37   37   38 #>  [1817,]   38   38   37 #>  [1818,]   38   38   37 #>  [1819,]   37   37   38 #>  [1820,]   37   37   39 #>  [1821,]   37   37   38 #>  [1822,]   38   38   37 #>  [1823,]   37   37   38 #>  [1824,]   37   37   38 #>  [1825,]   37   37   38 #>  [1826,]   38   38   37 #>  [1827,]   38   38   37 #>  [1828,]   37   37   38 #>  [1829,]   37   37   38 #>  [1830,]   37   37   38 #>  [1831,]   38   38   37 #>  [1832,]   38   38   37 #>  [1833,]   37   37   39 #>  [1834,]   37   37   38 #>  [1835,]   37   37   38 #>  [1836,]   37   37   39 #>  [1837,]   37   37   38 #>  [1838,]   38   38   37 #>  [1839,]   38   38   37 #>  [1840,]   37   37   38 #>  [1841,]   37   37   38 #>  [1842,]   37   37   39 #>  [1843,]   38   38   37 #>  [1844,]   37   37   38 #>  [1845,]   37   37   38 #>  [1846,]   37   37   38 #>  [1847,]   38   38   37 #>  [1848,]   37   37   38 #>  [1849,]   37   37   38 #>  [1850,]   37   37   38 #>  [1851,]   37   37   39 #>  [1852,]   38   38   37 #>  [1853,]   37   37   39 #>  [1854,]   37   37   39 #>  [1855,]   37   37   38 #>  [1856,]   37   37   39 #>  [1857,]   37   37   38 #>  [1858,]   38   38   37 #>  [1859,]   38   38   37 #>  [1860,]   37   37   38 #>  [1861,]   38   38   37 #>  [1862,]   37   37   39 #>  [1863,]   37   37   38 #>  [1864,]   37   37   38 #>  [1865,]   37   37   39 #>  [1866,]   38   38   37 #>  [1867,]   37   37   38 #>  [1868,]   38   38   37 #>  [1869,]   37   37   38 #>  [1870,]   38   38   37 #>  [1871,]   38   38   37 #>  [1872,]   37   37   38 #>  [1873,]   37   37   38 #>  [1874,]   37   37   38 #>  [1875,]   38   38   37 #>  [1876,]   37   37   38 #>  [1877,]   38   38   37 #>  [1878,]   37   37   38 #>  [1879,]   38   38   37 #>  [1880,]   37   37   38 #>  [1881,]   37   37   38 #>  [1882,]   37   37   39 #>  [1883,]   38   38   37 #>  [1884,]   37   37   39 #>  [1885,]   37   37   39 #>  [1886,]   37   37   38 #>  [1887,]   38   38   37 #>  [1888,]   37   37   38 #>  [1889,]   37   37   39 #>  [1890,]   38   38   37 #>  [1891,]   38   38   37 #>  [1892,]   38   38   37 #>  [1893,]   37   37   39 #>  [1894,]   37   37   39 #>  [1895,]   38   38   37 #>  [1896,]   38   38   37 #>  [1897,]   37   37   38 #>  [1898,]   37   37   38 #>  [1899,]   37   37   38 #>  [1900,]   38   38   37 #>  [1901,]   39   41   40 #>  [1902,]   40   39   40 #>  [1903,]   39   40   40 #>  [1904,]   40   39   40 #>  [1905,]   40   39   40 #>  [1906,]   39   40   40 #>  [1907,]   40   39   40 #>  [1908,]   40   39   40 #>  [1909,]   40   39   41 #>  [1910,]   40   39   40 #>  [1911,]   39   41   40 #>  [1912,]   40   39   40 #>  [1913,]   40   39   41 #>  [1914,]   39   41   40 #>  [1915,]   40   39   40 #>  [1916,]   39   41   40 #>  [1917,]   40   39   41 #>  [1918,]   40   39   41 #>  [1919,]   39   41   40 #>  [1920,]   40   39   40 #>  [1921,]   40   39   40 #>  [1922,]   40   39   40 #>  [1923,]   40   39   40 #>  [1924,]   40   39   40 #>  [1925,]   40   39   40 #>  [1926,]   40   39   40 #>  [1927,]   40   39   41 #>  [1928,]   39   41   40 #>  [1929,]   40   39   40 #>  [1930,]   40   39   40 #>  [1931,]   40   39   40 #>  [1932,]   40   39   40 #>  [1933,]   40   39   40 #>  [1934,]   39   40   40 #>  [1935,]   39   40   40 #>  [1936,]   40   39   40 #>  [1937,]   39   40   40 #>  [1938,]   39   41   40 #>  [1939,]   40   39   40 #>  [1940,]   40   39   40 #>  [1941,]   40   39   40 #>  [1942,]   39   40   41 #>  [1943,]   40   39   40 #>  [1944,]   40   39   40 #>  [1945,]   39   41   40 #>  [1946,]   40   39   40 #>  [1947,]   40   39   40 #>  [1948,]   40   39   40 #>  [1949,]   39   41   40 #>  [1950,]   40   39   40 #>  [1951,]   40   39   41 #>  [1952,]   39   41   40 #>  [1953,]   40   39   41 #>  [1954,]   40   39   40 #>  [1955,]   40   39   40 #>  [1956,]   40   39   40 #>  [1957,]   40   39   40 #>  [1958,]   40   39   40 #>  [1959,]   40   39   40 #>  [1960,]   40   39   40 #>  [1961,]   40   39   40 #>  [1962,]   40   39   40 #>  [1963,]   40   39   40 #>  [1964,]   39   40   40 #>  [1965,]   40   39   41 #>  [1966,]   40   39   41 #>  [1967,]   40   39   40 #>  [1968,]   39   41   40 #>  [1969,]   40   39   40 #>  [1970,]   40   39   40 #>  [1971,]   40   39   40 #>  [1972,]   39   41   40 #>  [1973,]   39   40   40 #>  [1974,]   40   39   40 #>  [1975,]   40   39   40 #>  [1976,]   40   39   40 #>  [1977,]   39   41   40 #>  [1978,]   40   39   40 #>  [1979,]   40   39   41 #>  [1980,]   40   39   40 #>  [1981,]   40   39   40 #>  [1982,]   40   39   41 #>  [1983,]   40   39   40 #>  [1984,]   40   39   41 #>  [1985,]   40   39   40 #>  [1986,]   40   39   40 #>  [1987,]   40   39   40 #>  [1988,]   40   39   40 #>  [1989,]   39   40   40 #>  [1990,]   40   39   40 #>  [1991,]   40   39   41 #>  [1992,]   40   39   40 #>  [1993,]   40   39   41 #>  [1994,]   39   40   41 #>  [1995,]   40   39   40 #>  [1996,]   39   41   40 #>  [1997,]   39   41   40 #>  [1998,]   40   39   40 #>  [1999,]   40   39   40 #>  [2000,]   39   41   40 #>  [2001,]   42   43   42 #>  [2002,]   41   42   43 #>  [2003,]   41   42   43 #>  [2004,]   41   42   43 #>  [2005,]   42   43   42 #>  [2006,]   43   44   42 #>  [2007,]   41   42   43 #>  [2008,]   41   42   43 #>  [2009,]   43   44   42 #>  [2010,]   41   42   43 #>  [2011,]   43   44   42 #>  [2012,]   41   42   43 #>  [2013,]   42   43   42 #>  [2014,]   41   42   43 #>  [2015,]   41   42   43 #>  [2016,]   41   42   43 #>  [2017,]   42   43   42 #>  [2018,]   43   44   42 #>  [2019,]   43   44   42 #>  [2020,]   42   43   42 #>  [2021,]   43   44   42 #>  [2022,]   42   43   42 #>  [2023,]   41   42   43 #>  [2024,]   42   43   42 #>  [2025,]   41   42   43 #>  [2026,]   41   42   43 #>  [2027,]   43   44   42 #>  [2028,]   42   43   42 #>  [2029,]   42   43   42 #>  [2030,]   41   42   43 #>  [2031,]   41   42   43 #>  [2032,]   41   42   43 #>  [2033,]   43   44   42 #>  [2034,]   41   42   43 #>  [2035,]   41   42   43 #>  [2036,]   43   44   42 #>  [2037,]   41   42   43 #>  [2038,]   43   44   42 #>  [2039,]   42   43   42 #>  [2040,]   41   42   43 #>  [2041,]   43   44   42 #>  [2042,]   43   44   42 #>  [2043,]   42   43   42 #>  [2044,]   41   42   43 #>  [2045,]   41   42   43 #>  [2046,]   41   42   43 #>  [2047,]   41   42   43 #>  [2048,]   43   44   42 #>  [2049,]   41   42   43 #>  [2050,]   42   43   42 #>  [2051,]   42   43   42 #>  [2052,]   41   42   43 #>  [2053,]   42   43   42 #>  [2054,]   42   43   42 #>  [2055,]   41   42   43 #>  [2056,]   42   43   42 #>  [2057,]   41   42   43 #>  [2058,]   43   44   42 #>  [2059,]   41   42   43 #>  [2060,]   41   42   43 #>  [2061,]   43   44   42 #>  [2062,]   43   44   42 #>  [2063,]   42   43   42 #>  [2064,]   43   44   42 #>  [2065,]   42   43   42 #>  [2066,]   42   43   42 #>  [2067,]   41   42   43 #>  [2068,]   41   42   43 #>  [2069,]   41   42   43 #>  [2070,]   42   43   42 #>  [2071,]   41   42   43 #>  [2072,]   41   42   43 #>  [2073,]   43   44   42 #>  [2074,]   41   42   43 #>  [2075,]   41   42   43 #>  [2076,]   41   42   43 #>  [2077,]   42   43   42 #>  [2078,]   41   42   43 #>  [2079,]   42   43   42 #>  [2080,]   41   42   43 #>  [2081,]   42   43   42 #>  [2082,]   43   44   42 #>  [2083,]   42   43   42 #>  [2084,]   42   43   42 #>  [2085,]   43   44   42 #>  [2086,]   41   42   43 #>  [2087,]   42   43   42 #>  [2088,]   41   42   43 #>  [2089,]   42   43   42 #>  [2090,]   42   43   42 #>  [2091,]   42   43   42 #>  [2092,]   41   42   43 #>  [2093,]   43   44   42 #>  [2094,]   42   43   42 #>  [2095,]   41   42   43 #>  [2096,]   41   42   43 #>  [2097,]   41   42   43 #>  [2098,]   41   42   43 #>  [2099,]   43   44   42 #>  [2100,]   42   43   42 #>  [2101,]   45   45   44 #>  [2102,]   45   45   44 #>  [2103,]   44   46   46 #>  [2104,]   44   47   45 #>  [2105,]   44   46   47 #>  [2106,]   45   45   44 #>  [2107,]   44   46   46 #>  [2108,]   44   46   46 #>  [2109,]   44   46   46 #>  [2110,]   44   47   45 #>  [2111,]   44   46   47 #>  [2112,]   44   46   47 #>  [2113,]   45   45   44 #>  [2114,]   45   45   44 #>  [2115,]   45   45   44 #>  [2116,]   45   45   44 #>  [2117,]   45   45   44 #>  [2118,]   44   47   45 #>  [2119,]   44   46   47 #>  [2120,]   44   46   46 #>  [2121,]   45   45   44 #>  [2122,]   44   46   47 #>  [2123,]   44   46   46 #>  [2124,]   44   46   47 #>  [2125,]   44   47   45 #>  [2126,]   45   45   44 #>  [2127,]   44   46   47 #>  [2128,]   44   46   47 #>  [2129,]   45   45   44 #>  [2130,]   44   46   46 #>  [2131,]   44   46   47 #>  [2132,]   44   46   47 #>  [2133,]   45   45   44 #>  [2134,]   44   46   46 #>  [2135,]   45   45   44 #>  [2136,]   44   46   46 #>  [2137,]   44   46   46 #>  [2138,]   44   46   47 #>  [2139,]   44   47   45 #>  [2140,]   44   46   46 #>  [2141,]   45   45   44 #>  [2142,]   44   46   46 #>  [2143,]   44   47   45 #>  [2144,]   45   45   44 #>  [2145,]   44   47   45 #>  [2146,]   44   46   47 #>  [2147,]   44   46   47 #>  [2148,]   44   46   47 #>  [2149,]   44   46   46 #>  [2150,]   45   45   44 #>  [2151,]   44   46   47 #>  [2152,]   44   46   47 #>  [2153,]   44   47   45 #>  [2154,]   44   46   46 #>  [2155,]   44   46   46 #>  [2156,]   44   46   46 #>  [2157,]   44   46   46 #>  [2158,]   44   46   47 #>  [2159,]   45   45   44 #>  [2160,]   44   46   46 #>  [2161,]   45   45   44 #>  [2162,]   44   46   46 #>  [2163,]   44   46   47 #>  [2164,]   44   46   46 #>  [2165,]   44   46   46 #>  [2166,]   44   46   47 #>  [2167,]   44   46   46 #>  [2168,]   45   45   44 #>  [2169,]   44   46   47 #>  [2170,]   45   45   44 #>  [2171,]   44   46   47 #>  [2172,]   44   47   45 #>  [2173,]   45   45   44 #>  [2174,]   44   47   45 #>  [2175,]   44   47   45 #>  [2176,]   45   45   44 #>  [2177,]   45   45   44 #>  [2178,]   44   46   47 #>  [2179,]   45   45   44 #>  [2180,]   44   46   46 #>  [2181,]   45   45   44 #>  [2182,]   44   46   46 #>  [2183,]   45   45   44 #>  [2184,]   44   47   45 #>  [2185,]   44   46   46 #>  [2186,]   45   45   44 #>  [2187,]   44   46   47 #>  [2188,]   44   46   46 #>  [2189,]   44   46   46 #>  [2190,]   44   46   47 #>  [2191,]   44   46   47 #>  [2192,]   44   46   47 #>  [2193,]   45   45   44 #>  [2194,]   44   47   45 #>  [2195,]   44   47   45 #>  [2196,]   45   45   44 #>  [2197,]   44   46   46 #>  [2198,]   44   46   46 #>  [2199,]   45   45   44 #>  [2200,]   44   47   45 #>  [2201,]   46   48   50 #>  [2202,]   47   49   48 #>  [2203,]   47   49   48 #>  [2204,]   46   48   50 #>  [2205,]   46   48   50 #>  [2206,]   47   49   48 #>  [2207,]   46   48   49 #>  [2208,]   46   48   50 #>  [2209,]   46   48   50 #>  [2210,]   46   48   50 #>  [2211,]   46   48   50 #>  [2212,]   47   49   48 #>  [2213,]   46   48   50 #>  [2214,]   46   48   50 #>  [2215,]   46   48   50 #>  [2216,]   46   48   50 #>  [2217,]   46   48   50 #>  [2218,]   47   49   48 #>  [2219,]   47   49   48 #>  [2220,]   47   49   48 #>  [2221,]   46   48   49 #>  [2222,]   46   48   50 #>  [2223,]   46   48   49 #>  [2224,]   46   48   50 #>  [2225,]   47   49   48 #>  [2226,]   46   48   50 #>  [2227,]   46   48   50 #>  [2228,]   47   49   48 #>  [2229,]   46   48   50 #>  [2230,]   46   48   50 #>  [2231,]   46   48   50 #>  [2232,]   46   48   50 #>  [2233,]   47   49   48 #>  [2234,]   47   49   48 #>  [2235,]   46   48   49 #>  [2236,]   46   48   50 #>  [2237,]   46   48   49 #>  [2238,]   46   48   50 #>  [2239,]   46   48   50 #>  [2240,]   46   48   50 #>  [2241,]   46   48   50 #>  [2242,]   46   48   49 #>  [2243,]   46   48   50 #>  [2244,]   46   48   49 #>  [2245,]   46   48   50 #>  [2246,]   46   48   50 #>  [2247,]   46   48   50 #>  [2248,]   46   48   50 #>  [2249,]   46   48   50 #>  [2250,]   46   48   50 #>  [2251,]   46   48   50 #>  [2252,]   46   48   50 #>  [2253,]   46   48   49 #>  [2254,]   46   48   50 #>  [2255,]   46   48   50 #>  [2256,]   46   48   49 #>  [2257,]   46   48   49 #>  [2258,]   46   48   50 #>  [2259,]   46   48   50 #>  [2260,]   47   49   48 #>  [2261,]   46   48   50 #>  [2262,]   46   48   50 #>  [2263,]   46   48   50 #>  [2264,]   46   48   50 #>  [2265,]   47   49   48 #>  [2266,]   46   48   50 #>  [2267,]   46   48   50 #>  [2268,]   46   48   50 #>  [2269,]   46   48   50 #>  [2270,]   47   49   48 #>  [2271,]   46   48   50 #>  [2272,]   46   48   50 #>  [2273,]   47   49   48 #>  [2274,]   46   48   49 #>  [2275,]   46   48   50 #>  [2276,]   46   48   50 #>  [2277,]   46   48   50 #>  [2278,]   46   48   50 #>  [2279,]   46   48   50 #>  [2280,]   46   48   49 #>  [2281,]   46   48   50 #>  [2282,]   46   48   49 #>  [2283,]   46   48   50 #>  [2284,]   47   49   48 #>  [2285,]   46   48   49 #>  [2286,]   46   48   49 #>  [2287,]   46   48   50 #>  [2288,]   46   48   50 #>  [2289,]   46   48   49 #>  [2290,]   46   48   50 #>  [2291,]   46   48   50 #>  [2292,]   46   48   50 #>  [2293,]   47   49   48 #>  [2294,]   46   48   49 #>  [2295,]   46   48   50 #>  [2296,]   46   48   50 #>  [2297,]   47   49   48 #>  [2298,]   47   49   48 #>  [2299,]   46   48   49 #>  [2300,]   46   48   50 #>  [2301,]   48   50   51 #>  [2302,]   48   50   51 #>  [2303,]   49   51   52 #>  [2304,]   48   50   51 #>  [2305,]   48   50   51 #>  [2306,]   49   51   52 #>  [2307,]   48   50   51 #>  [2308,]   48   50   51 #>  [2309,]   48   50   51 #>  [2310,]   48   50   51 #>  [2311,]   48   50   51 #>  [2312,]   50   52   52 #>  [2313,]   48   50   51 #>  [2314,]   48   50   51 #>  [2315,]   48   50   51 #>  [2316,]   48   50   51 #>  [2317,]   48   50   51 #>  [2318,]   48   50   51 #>  [2319,]   49   51   52 #>  [2320,]   50   52   52 #>  [2321,]   48   50   51 #>  [2322,]   48   50   51 #>  [2323,]   48   50   51 #>  [2324,]   48   50   51 #>  [2325,]   50   52   52 #>  [2326,]   48   50   51 #>  [2327,]   48   50   51 #>  [2328,]   49   51   52 #>  [2329,]   48   50   51 #>  [2330,]   48   50   51 #>  [2331,]   48   50   51 #>  [2332,]   48   50   51 #>  [2333,]   50   52   52 #>  [2334,]   49   51   52 #>  [2335,]   48   50   51 #>  [2336,]   48   50   51 #>  [2337,]   48   50   51 #>  [2338,]   48   50   51 #>  [2339,]   48   50   51 #>  [2340,]   48   50   51 #>  [2341,]   48   50   51 #>  [2342,]   48   50   51 #>  [2343,]   48   50   51 #>  [2344,]   48   50   51 #>  [2345,]   48   50   51 #>  [2346,]   48   50   51 #>  [2347,]   48   50   51 #>  [2348,]   48   50   51 #>  [2349,]   48   50   51 #>  [2350,]   48   50   51 #>  [2351,]   48   50   51 #>  [2352,]   48   50   51 #>  [2353,]   48   50   51 #>  [2354,]   48   50   51 #>  [2355,]   48   50   51 #>  [2356,]   48   50   51 #>  [2357,]   48   50   51 #>  [2358,]   48   50   51 #>  [2359,]   48   50   51 #>  [2360,]   50   52   52 #>  [2361,]   48   50   51 #>  [2362,]   48   50   51 #>  [2363,]   48   50   51 #>  [2364,]   48   50   51 #>  [2365,]   49   51   52 #>  [2366,]   48   50   51 #>  [2367,]   48   50   51 #>  [2368,]   48   50   51 #>  [2369,]   48   50   51 #>  [2370,]   50   52   52 #>  [2371,]   48   50   51 #>  [2372,]   48   50   51 #>  [2373,]   49   51   52 #>  [2374,]   48   50   51 #>  [2375,]   48   50   51 #>  [2376,]   48   50   51 #>  [2377,]   48   50   51 #>  [2378,]   48   50   51 #>  [2379,]   48   50   51 #>  [2380,]   48   50   51 #>  [2381,]   48   50   51 #>  [2382,]   48   50   51 #>  [2383,]   48   50   51 #>  [2384,]   48   50   51 #>  [2385,]   48   50   51 #>  [2386,]   48   50   51 #>  [2387,]   48   50   51 #>  [2388,]   48   50   51 #>  [2389,]   48   50   51 #>  [2390,]   48   50   51 #>  [2391,]   48   50   51 #>  [2392,]   48   50   51 #>  [2393,]   50   52   52 #>  [2394,]   48   50   51 #>  [2395,]   48   50   51 #>  [2396,]   48   50   51 #>  [2397,]   49   51   52 #>  [2398,]   49   51   52 #>  [2399,]   48   50   51 #>  [2400,]   48   50   51 #>  [2401,]   52   54   54 #>  [2402,]   51   53   53 #>  [2403,]   51   53   53 #>  [2404,]   51   53   53 #>  [2405,]   52   54   54 #>  [2406,]   51   53   53 #>  [2407,]   51   53   53 #>  [2408,]   51   53   53 #>  [2409,]   51   53   53 #>  [2410,]   51   53   53 #>  [2411,]   51   53   53 #>  [2412,]   51   53   53 #>  [2413,]   51   53   53 #>  [2414,]   52   54   54 #>  [2415,]   52   54   54 #>  [2416,]   51   53   53 #>  [2417,]   51   53   53 #>  [2418,]   52   54   54 #>  [2419,]   51   53   53 #>  [2420,]   51   53   53 #>  [2421,]   51   53   53 #>  [2422,]   51   53   53 #>  [2423,]   51   53   53 #>  [2424,]   51   53   53 #>  [2425,]   51   53   53 #>  [2426,]   52   54   54 #>  [2427,]   52   54   54 #>  [2428,]   51   53   53 #>  [2429,]   51   53   53 #>  [2430,]   51   53   53 #>  [2431,]   51   53   53 #>  [2432,]   52   54   54 #>  [2433,]   51   53   53 #>  [2434,]   51   53   53 #>  [2435,]   51   53   53 #>  [2436,]   51   53   53 #>  [2437,]   51   53   53 #>  [2438,]   51   53   53 #>  [2439,]   51   53   53 #>  [2440,]   51   53   53 #>  [2441,]   51   53   53 #>  [2442,]   51   53   53 #>  [2443,]   52   54   54 #>  [2444,]   51   53   53 #>  [2445,]   51   53   53 #>  [2446,]   51   53   53 #>  [2447,]   51   53   53 #>  [2448,]   51   53   53 #>  [2449,]   51   53   53 #>  [2450,]   51   53   53 #>  [2451,]   51   53   53 #>  [2452,]   51   53   53 #>  [2453,]   51   53   53 #>  [2454,]   51   53   53 #>  [2455,]   51   53   53 #>  [2456,]   51   53   53 #>  [2457,]   51   53   53 #>  [2458,]   52   54   54 #>  [2459,]   52   54   54 #>  [2460,]   51   53   53 #>  [2461,]   52   54   54 #>  [2462,]   51   53   53 #>  [2463,]   51   53   53 #>  [2464,]   51   53   53 #>  [2465,]   51   53   53 #>  [2466,]   52   54   54 #>  [2467,]   51   53   53 #>  [2468,]   51   53   53 #>  [2469,]   51   53   53 #>  [2470,]   52   54   54 #>  [2471,]   52   54   54 #>  [2472,]   51   53   53 #>  [2473,]   51   53   53 #>  [2474,]   51   53   53 #>  [2475,]   52   54   54 #>  [2476,]   51   53   53 #>  [2477,]   51   53   53 #>  [2478,]   51   53   53 #>  [2479,]   52   54   54 #>  [2480,]   51   53   53 #>  [2481,]   51   53   53 #>  [2482,]   51   53   53 #>  [2483,]   51   53   53 #>  [2484,]   51   53   53 #>  [2485,]   51   53   53 #>  [2486,]   51   53   53 #>  [2487,]   52   54   54 #>  [2488,]   51   53   53 #>  [2489,]   51   53   53 #>  [2490,]   51   53   53 #>  [2491,]   52   54   54 #>  [2492,]   51   53   53 #>  [2493,]   51   53   53 #>  [2494,]   51   53   53 #>  [2495,]   52   54   54 #>  [2496,]   51   53   53 #>  [2497,]   51   53   53 #>  [2498,]   51   53   53 #>  [2499,]   51   53   53 #>  [2500,]   52   54   54 #>  [2501,]   54   56   56 #>  [2502,]   53   55   55 #>  [2503,]   53   55   55 #>  [2504,]   53   55   55 #>  [2505,]   54   56   56 #>  [2506,]   53   55   55 #>  [2507,]   53   55   55 #>  [2508,]   53   55   55 #>  [2509,]   54   56   56 #>  [2510,]   53   55   55 #>  [2511,]   54   56   56 #>  [2512,]   53   55   55 #>  [2513,]   54   56   56 #>  [2514,]   53   55   55 #>  [2515,]   53   55   55 #>  [2516,]   53   55   55 #>  [2517,]   54   56   56 #>  [2518,]   54   56   56 #>  [2519,]   54   56   56 #>  [2520,]   54   56   56 #>  [2521,]   54   56   56 #>  [2522,]   54   56   56 #>  [2523,]   53   55   55 #>  [2524,]   54   56   56 #>  [2525,]   53   55   55 #>  [2526,]   53   55   55 #>  [2527,]   54   56   56 #>  [2528,]   54   56   56 #>  [2529,]   54   56   56 #>  [2530,]   53   55   55 #>  [2531,]   53   55   55 #>  [2532,]   53   55   55 #>  [2533,]   54   56   56 #>  [2534,]   53   55   55 #>  [2535,]   53   55   55 #>  [2536,]   54   56   56 #>  [2537,]   53   55   55 #>  [2538,]   54   56   56 #>  [2539,]   54   56   56 #>  [2540,]   53   55   55 #>  [2541,]   54   56   56 #>  [2542,]   54   56   56 #>  [2543,]   53   55   55 #>  [2544,]   53   55   55 #>  [2545,]   53   55   55 #>  [2546,]   53   55   55 #>  [2547,]   53   55   55 #>  [2548,]   53   55   55 #>  [2549,]   53   55   55 #>  [2550,]   53   55   55 #>  [2551,]   54   56   56 #>  [2552,]   53   55   55 #>  [2553,]   54   56   56 #>  [2554,]   54   56   56 #>  [2555,]   53   55   55 #>  [2556,]   54   56   56 #>  [2557,]   53   55   55 #>  [2558,]   54   56   56 #>  [2559,]   53   55   55 #>  [2560,]   53   55   55 #>  [2561,]   54   56   56 #>  [2562,]   54   56   56 #>  [2563,]   53   55   55 #>  [2564,]   54   56   56 #>  [2565,]   54   56   56 #>  [2566,]   54   56   56 #>  [2567,]   53   55   55 #>  [2568,]   53   55   55 #>  [2569,]   53   55   55 #>  [2570,]   54   56   56 #>  [2571,]   53   55   55 #>  [2572,]   53   55   55 #>  [2573,]   54   56   56 #>  [2574,]   53   55   55 #>  [2575,]   53   55   55 #>  [2576,]   53   55   55 #>  [2577,]   54   56   56 #>  [2578,]   53   55   55 #>  [2579,]   54   56   56 #>  [2580,]   53   55   55 #>  [2581,]   54   56   56 #>  [2582,]   54   56   56 #>  [2583,]   54   56   56 #>  [2584,]   54   56   56 #>  [2585,]   54   56   56 #>  [2586,]   53   55   55 #>  [2587,]   54   56   56 #>  [2588,]   53   55   55 #>  [2589,]   54   56   56 #>  [2590,]   54   56   56 #>  [2591,]   54   56   56 #>  [2592,]   53   55   55 #>  [2593,]   54   56   56 #>  [2594,]   54   56   56 #>  [2595,]   53   55   55 #>  [2596,]   53   55   55 #>  [2597,]   53   55   55 #>  [2598,]   53   55   55 #>  [2599,]   54   56   56 #>  [2600,]   54   56   56 #>  [2601,]   56   58   59 #>  [2602,]   55   58   58 #>  [2603,]   55   57   57 #>  [2604,]   55   58   58 #>  [2605,]   56   58   58 #>  [2606,]   55   58   58 #>  [2607,]   55   57   57 #>  [2608,]   55   58   58 #>  [2609,]   55   58   58 #>  [2610,]   56   58   58 #>  [2611,]   56   58   58 #>  [2612,]   56   57   57 #>  [2613,]   55   58   58 #>  [2614,]   56   58   59 #>  [2615,]   56   58   59 #>  [2616,]   55   58   59 #>  [2617,]   56   58   58 #>  [2618,]   56   58   58 #>  [2619,]   55   58   58 #>  [2620,]   55   58   58 #>  [2621,]   55   58   58 #>  [2622,]   56   58   58 #>  [2623,]   55   58   58 #>  [2624,]   55   58   58 #>  [2625,]   55   58   58 #>  [2626,]   56   58   58 #>  [2627,]   56   58   58 #>  [2628,]   55   58   58 #>  [2629,]   55   58   58 #>  [2630,]   55   58   58 #>  [2631,]   56   57   57 #>  [2632,]   56   58   58 #>  [2633,]   55   58   58 #>  [2634,]   55   58   58 #>  [2635,]   55   58   58 #>  [2636,]   55   58   58 #>  [2637,]   55   58   58 #>  [2638,]   56   58   58 #>  [2639,]   56   58   58 #>  [2640,]   55   58   58 #>  [2641,]   55   58   59 #>  [2642,]   55   58   58 #>  [2643,]   56   58   58 #>  [2644,]   55   58   59 #>  [2645,]   55   58   58 #>  [2646,]   55   58   58 #>  [2647,]   56   58   58 #>  [2648,]   55   58   58 #>  [2649,]   55   58   58 #>  [2650,]   55   58   59 #>  [2651,]   55   58   58 #>  [2652,]   56   57   57 #>  [2653,]   55   58   58 #>  [2654,]   55   58   58 #>  [2655,]   55   58   58 #>  [2656,]   55   58   58 #>  [2657,]   55   58   58 #>  [2658,]   56   58   58 #>  [2659,]   56   57   57 #>  [2660,]   55   57   57 #>  [2661,]   56   58   58 #>  [2662,]   55   58   58 #>  [2663,]   55   58   58 #>  [2664,]   55   58   58 #>  [2665,]   55   58   58 #>  [2666,]   56   58   58 #>  [2667,]   55   58   58 #>  [2668,]   56   58   58 #>  [2669,]   55   58   58 #>  [2670,]   56   58   59 #>  [2671,]   56   58   58 #>  [2672,]   55   58   58 #>  [2673,]   55   58   59 #>  [2674,]   55   58   58 #>  [2675,]   56   58   58 #>  [2676,]   55   58   58 #>  [2677,]   56   58   58 #>  [2678,]   55   58   58 #>  [2679,]   56   58   58 #>  [2680,]   55   58   58 #>  [2681,]   55   58   58 #>  [2682,]   55   58   58 #>  [2683,]   56   58   58 #>  [2684,]   55   58   58 #>  [2685,]   55   58   58 #>  [2686,]   55   58   58 #>  [2687,]   56   58   58 #>  [2688,]   55   58   58 #>  [2689,]   55   58   58 #>  [2690,]   56   58   58 #>  [2691,]   56   58   58 #>  [2692,]   56   58   58 #>  [2693,]   55   58   58 #>  [2694,]   55   58   58 #>  [2695,]   56   58   58 #>  [2696,]   56   58   59 #>  [2697,]   55   57   57 #>  [2698,]   55   58   58 #>  [2699,]   55   58   59 #>  [2700,]   56   58   58 #>  [2701,]   57   59   61 #>  [2702,]   59   60   60 #>  [2703,]   57   59   61 #>  [2704,]   57   59   61 #>  [2705,]   59   60   60 #>  [2706,]   57   59   61 #>  [2707,]   57   59   61 #>  [2708,]   57   59   61 #>  [2709,]   59   60   60 #>  [2710,]   59   60   60 #>  [2711,]   57   59   61 #>  [2712,]   59   60   60 #>  [2713,]   58   60   60 #>  [2714,]   57   59   61 #>  [2715,]   57   59   61 #>  [2716,]   57   59   61 #>  [2717,]   58   60   60 #>  [2718,]   59   60   60 #>  [2719,]   57   59   61 #>  [2720,]   58   60   60 #>  [2721,]   59   60   60 #>  [2722,]   57   59   61 #>  [2723,]   59   60   60 #>  [2724,]   58   60   60 #>  [2725,]   57   59   61 #>  [2726,]   57   59   61 #>  [2727,]   59   60   60 #>  [2728,]   57   59   61 #>  [2729,]   59   60   60 #>  [2730,]   57   59   61 #>  [2731,]   59   60   60 #>  [2732,]   59   60   60 #>  [2733,]   59   60   60 #>  [2734,]   57   59   61 #>  [2735,]   57   59   61 #>  [2736,]   59   60   60 #>  [2737,]   57   59   61 #>  [2738,]   57   59   61 #>  [2739,]   57   59   61 #>  [2740,]   58   60   60 #>  [2741,]   57   59   61 #>  [2742,]   57   59   61 #>  [2743,]   57   59   61 #>  [2744,]   58   60   60 #>  [2745,]   57   59   61 #>  [2746,]   57   59   61 #>  [2747,]   57   59   61 #>  [2748,]   57   59   61 #>  [2749,]   57   59   61 #>  [2750,]   57   59   61 #>  [2751,]   57   59   61 #>  [2752,]   57   59   61 #>  [2753,]   58   60   60 #>  [2754,]   57   59   61 #>  [2755,]   57   59   61 #>  [2756,]   57   59   61 #>  [2757,]   57   59   61 #>  [2758,]   57   59   61 #>  [2759,]   57   59   61 #>  [2760,]   59   60   60 #>  [2761,]   59   60   60 #>  [2762,]   57   59   61 #>  [2763,]   58   60   60 #>  [2764,]   57   59   61 #>  [2765,]   57   59   61 #>  [2766,]   57   59   61 #>  [2767,]   57   59   61 #>  [2768,]   57   59   61 #>  [2769,]   57   59   61 #>  [2770,]   58   60   60 #>  [2771,]   57   59   61 #>  [2772,]   57   59   61 #>  [2773,]   57   59   61 #>  [2774,]   57   59   61 #>  [2775,]   59   60   60 #>  [2776,]   57   59   61 #>  [2777,]   57   59   61 #>  [2778,]   57   59   61 #>  [2779,]   57   59   61 #>  [2780,]   59   60   60 #>  [2781,]   59   60   60 #>  [2782,]   57   59   61 #>  [2783,]   58   60   60 #>  [2784,]   58   60   60 #>  [2785,]   57   59   61 #>  [2786,]   58   60   60 #>  [2787,]   57   59   61 #>  [2788,]   59   60   60 #>  [2789,]   57   59   61 #>  [2790,]   57   59   61 #>  [2791,]   57   59   61 #>  [2792,]   57   59   61 #>  [2793,]   57   59   61 #>  [2794,]   57   59   61 #>  [2795,]   57   59   61 #>  [2796,]   57   59   61 #>  [2797,]   57   59   61 #>  [2798,]   57   59   61 #>  [2799,]   57   59   61 #>  [2800,]   57   59   61 #>  [2801,]   60   61   62 #>  [2802,]   61   62   63 #>  [2803,]   60   61   62 #>  [2804,]   60   61   62 #>  [2805,]   60   61   62 #>  [2806,]   60   61   62 #>  [2807,]   60   61   62 #>  [2808,]   60   61   62 #>  [2809,]   61   62   63 #>  [2810,]   61   62   63 #>  [2811,]   60   61   62 #>  [2812,]   61   62   63 #>  [2813,]   60   61   62 #>  [2814,]   60   61   62 #>  [2815,]   60   61   62 #>  [2816,]   60   61   62 #>  [2817,]   61   62   63 #>  [2818,]   60   61   62 #>  [2819,]   60   61   62 #>  [2820,]   60   61   62 #>  [2821,]   61   62   63 #>  [2822,]   60   61   62 #>  [2823,]   60   61   62 #>  [2824,]   60   61   62 #>  [2825,]   60   61   62 #>  [2826,]   60   61   62 #>  [2827,]   60   61   62 #>  [2828,]   60   61   62 #>  [2829,]   61   62   63 #>  [2830,]   60   61   62 #>  [2831,]   60   61   62 #>  [2832,]   60   61   62 #>  [2833,]   61   62   63 #>  [2834,]   60   61   62 #>  [2835,]   60   61   62 #>  [2836,]   60   61   62 #>  [2837,]   60   61   62 #>  [2838,]   60   61   62 #>  [2839,]   60   61   62 #>  [2840,]   60   61   62 #>  [2841,]   60   61   62 #>  [2842,]   60   61   62 #>  [2843,]   60   61   62 #>  [2844,]   60   61   62 #>  [2845,]   60   61   62 #>  [2846,]   60   61   62 #>  [2847,]   60   61   62 #>  [2848,]   60   61   62 #>  [2849,]   60   61   62 #>  [2850,]   60   61   62 #>  [2851,]   60   61   62 #>  [2852,]   60   61   62 #>  [2853,]   60   61   62 #>  [2854,]   60   61   62 #>  [2855,]   60   61   62 #>  [2856,]   60   61   62 #>  [2857,]   60   61   62 #>  [2858,]   60   61   62 #>  [2859,]   60   61   62 #>  [2860,]   61   62   63 #>  [2861,]   60   61   62 #>  [2862,]   60   61   62 #>  [2863,]   61   62   63 #>  [2864,]   60   61   62 #>  [2865,]   60   61   62 #>  [2866,]   60   61   62 #>  [2867,]   60   61   62 #>  [2868,]   60   61   62 #>  [2869,]   60   61   62 #>  [2870,]   61   62   63 #>  [2871,]   60   61   62 #>  [2872,]   60   61   62 #>  [2873,]   60   61   62 #>  [2874,]   60   61   62 #>  [2875,]   60   61   62 #>  [2876,]   60   61   62 #>  [2877,]   60   61   62 #>  [2878,]   60   61   62 #>  [2879,]   60   61   62 #>  [2880,]   61   62   63 #>  [2881,]   61   62   63 #>  [2882,]   60   61   62 #>  [2883,]   60   61   62 #>  [2884,]   60   61   62 #>  [2885,]   60   61   62 #>  [2886,]   61   62   63 #>  [2887,]   60   61   62 #>  [2888,]   60   61   62 #>  [2889,]   60   61   62 #>  [2890,]   60   61   62 #>  [2891,]   60   61   62 #>  [2892,]   60   61   62 #>  [2893,]   60   61   62 #>  [2894,]   60   61   62 #>  [2895,]   60   61   62 #>  [2896,]   60   61   62 #>  [2897,]   60   61   62 #>  [2898,]   60   61   62 #>  [2899,]   60   61   62 #>  [2900,]   60   61   62 #>  [2901,]   62   63   65 #>  [2902,]   62   63   65 #>  [2903,]   62   63   65 #>  [2904,]   62   63   65 #>  [2905,]   63   64   64 #>  [2906,]   62   63   65 #>  [2907,]   62   63   65 #>  [2908,]   62   63   65 #>  [2909,]   62   63   65 #>  [2910,]   62   63   65 #>  [2911,]   62   63   65 #>  [2912,]   62   63   65 #>  [2913,]   62   63   65 #>  [2914,]   62   63   65 #>  [2915,]   62   63   65 #>  [2916,]   62   63   65 #>  [2917,]   62   63   65 #>  [2918,]   63   64   64 #>  [2919,]   62   63   66 #>  [2920,]   62   63   66 #>  [2921,]   62   63   65 #>  [2922,]   62   63   66 #>  [2923,]   62   63   65 #>  [2924,]   62   63   65 #>  [2925,]   62   63   65 #>  [2926,]   62   63   65 #>  [2927,]   62   63   66 #>  [2928,]   62   63   65 #>  [2929,]   62   63   66 #>  [2930,]   62   63   65 #>  [2931,]   62   63   65 #>  [2932,]   63   64   64 #>  [2933,]   62   63   65 #>  [2934,]   62   63   65 #>  [2935,]   62   63   65 #>  [2936,]   62   63   66 #>  [2937,]   62   63   65 #>  [2938,]   62   63   65 #>  [2939,]   62   63   65 #>  [2940,]   62   63   65 #>  [2941,]   62   63   65 #>  [2942,]   62   63   65 #>  [2943,]   62   63   65 #>  [2944,]   62   63   65 #>  [2945,]   62   63   65 #>  [2946,]   62   63   65 #>  [2947,]   62   63   65 #>  [2948,]   62   63   65 #>  [2949,]   62   63   65 #>  [2950,]   62   63   65 #>  [2951,]   62   63   65 #>  [2952,]   62   63   65 #>  [2953,]   62   63   65 #>  [2954,]   62   63   65 #>  [2955,]   62   63   65 #>  [2956,]   62   63   65 #>  [2957,]   62   63   65 #>  [2958,]   62   63   66 #>  [2959,]   62   63   65 #>  [2960,]   62   63   65 #>  [2961,]   62   63   65 #>  [2962,]   62   63   65 #>  [2963,]   62   63   65 #>  [2964,]   62   63   66 #>  [2965,]   62   63   65 #>  [2966,]   62   63   66 #>  [2967,]   62   63   65 #>  [2968,]   62   63   65 #>  [2969,]   62   63   65 #>  [2970,]   62   63   65 #>  [2971,]   63   64   64 #>  [2972,]   62   63   65 #>  [2973,]   62   63   65 #>  [2974,]   62   63   65 #>  [2975,]   63   64   64 #>  [2976,]   62   63   65 #>  [2977,]   62   63   66 #>  [2978,]   62   63   65 #>  [2979,]   62   63   65 #>  [2980,]   62   63   65 #>  [2981,]   62   63   66 #>  [2982,]   62   63   65 #>  [2983,]   62   63   65 #>  [2984,]   62   63   65 #>  [2985,]   62   63   65 #>  [2986,]   62   63   65 #>  [2987,]   62   63   66 #>  [2988,]   62   63   65 #>  [2989,]   62   63   65 #>  [2990,]   62   63   65 #>  [2991,]   63   64   64 #>  [2992,]   62   63   65 #>  [2993,]   62   63   65 #>  [2994,]   62   63   65 #>  [2995,]   63   64   64 #>  [2996,]   62   63   65 #>  [2997,]   62   63   66 #>  [2998,]   62   63   65 #>  [2999,]   62   63   65 #>  [3000,]   63   64   64 #>  [3001,]   65   66   68 #>  [3002,]   65   66   68 #>  [3003,]   64   65   67 #>  [3004,]   65   66   68 #>  [3005,]   65   66   68 #>  [3006,]   65   66   68 #>  [3007,]   64   65   67 #>  [3008,]   65   66   68 #>  [3009,]   65   66   68 #>  [3010,]   65   66   68 #>  [3011,]   65   66   68 #>  [3012,]   65   66   68 #>  [3013,]   64   65   67 #>  [3014,]   65   66   68 #>  [3015,]   65   66   68 #>  [3016,]   64   65   67 #>  [3017,]   65   66   68 #>  [3018,]   65   66   68 #>  [3019,]   64   65   67 #>  [3020,]   65   66   68 #>  [3021,]   64   65   67 #>  [3022,]   65   66   68 #>  [3023,]   64   65   67 #>  [3024,]   65   66   68 #>  [3025,]   65   66   68 #>  [3026,]   65   66   68 #>  [3027,]   65   66   68 #>  [3028,]   65   66   68 #>  [3029,]   65   66   68 #>  [3030,]   64   65   67 #>  [3031,]   64   65   67 #>  [3032,]   65   66   68 #>  [3033,]   65   66   68 #>  [3034,]   65   66   68 #>  [3035,]   64   65   67 #>  [3036,]   64   65   67 #>  [3037,]   64   65   67 #>  [3038,]   65   66   68 #>  [3039,]   64   65   67 #>  [3040,]   64   65   67 #>  [3041,]   65   66   68 #>  [3042,]   65   66   68 #>  [3043,]   65   66   68 #>  [3044,]   65   66   68 #>  [3045,]   65   66   68 #>  [3046,]   65   66   68 #>  [3047,]   64   65   67 #>  [3048,]   65   66   68 #>  [3049,]   64   65   67 #>  [3050,]   65   66   68 #>  [3051,]   65   66   68 #>  [3052,]   65   66   68 #>  [3053,]   65   66   68 #>  [3054,]   64   65   67 #>  [3055,]   65   66   68 #>  [3056,]   65   66   68 #>  [3057,]   65   66   68 #>  [3058,]   65   66   68 #>  [3059,]   65   66   68 #>  [3060,]   65   66   68 #>  [3061,]   65   66   68 #>  [3062,]   64   65   67 #>  [3063,]   65   66   68 #>  [3064,]   65   66   68 #>  [3065,]   65   66   68 #>  [3066,]   65   66   68 #>  [3067,]   65   66   68 #>  [3068,]   65   66   68 #>  [3069,]   65   66   68 #>  [3070,]   64   65   67 #>  [3071,]   65   66   68 #>  [3072,]   65   66   68 #>  [3073,]   65   66   68 #>  [3074,]   65   66   68 #>  [3075,]   65   66   68 #>  [3076,]   65   66   68 #>  [3077,]   64   65   67 #>  [3078,]   65   66   68 #>  [3079,]   64   65   67 #>  [3080,]   64   65   67 #>  [3081,]   65   66   68 #>  [3082,]   65   66   68 #>  [3083,]   64   65   67 #>  [3084,]   65   66   68 #>  [3085,]   65   66   68 #>  [3086,]   65   66   68 #>  [3087,]   65   66   68 #>  [3088,]   65   66   68 #>  [3089,]   65   66   68 #>  [3090,]   65   66   68 #>  [3091,]   65   66   68 #>  [3092,]   65   66   68 #>  [3093,]   64   65   67 #>  [3094,]   65   66   68 #>  [3095,]   64   65   67 #>  [3096,]   65   66   68 #>  [3097,]   65   66   68 #>  [3098,]   64   65   67 #>  [3099,]   65   66   68 #>  [3100,]   65   66   68 #>  [3101,]   66   67   70 #>  [3102,]   66   67   70 #>  [3103,]   66   67   70 #>  [3104,]   67   68   69 #>  [3105,]   66   67   70 #>  [3106,]   66   67   70 #>  [3107,]   67   68   69 #>  [3108,]   66   67   70 #>  [3109,]   66   67   70 #>  [3110,]   67   68   69 #>  [3111,]   66   67   70 #>  [3112,]   66   67   70 #>  [3113,]   66   67   70 #>  [3114,]   66   67   70 #>  [3115,]   66   67   70 #>  [3116,]   67   68   69 #>  [3117,]   66   67   70 #>  [3118,]   66   67   70 #>  [3119,]   66   67   70 #>  [3120,]   67   68   69 #>  [3121,]   66   67   70 #>  [3122,]   66   67   70 #>  [3123,]   66   67   70 #>  [3124,]   67   68   69 #>  [3125,]   67   68   69 #>  [3126,]   66   67   70 #>  [3127,]   66   67   70 #>  [3128,]   67   68   69 #>  [3129,]   66   67   70 #>  [3130,]   66   67   70 #>  [3131,]   66   67   70 #>  [3132,]   66   67   70 #>  [3133,]   66   67   70 #>  [3134,]   66   67   70 #>  [3135,]   66   67   70 #>  [3136,]   66   67   70 #>  [3137,]   66   67   70 #>  [3138,]   66   67   70 #>  [3139,]   67   68   69 #>  [3140,]   66   67   70 #>  [3141,]   66   67   70 #>  [3142,]   66   67   70 #>  [3143,]   66   67   70 #>  [3144,]   66   67   70 #>  [3145,]   66   67   70 #>  [3146,]   66   67   70 #>  [3147,]   66   67   70 #>  [3148,]   66   67   70 #>  [3149,]   66   67   70 #>  [3150,]   67   68   69 #>  [3151,]   66   67   70 #>  [3152,]   67   68   69 #>  [3153,]   66   67   70 #>  [3154,]   67   68   69 #>  [3155,]   66   67   70 #>  [3156,]   66   67   70 #>  [3157,]   67   68   69 #>  [3158,]   66   67   70 #>  [3159,]   66   67   70 #>  [3160,]   66   67   70 #>  [3161,]   66   67   70 #>  [3162,]   66   67   70 #>  [3163,]   66   67   70 #>  [3164,]   66   67   70 #>  [3165,]   66   67   70 #>  [3166,]   66   67   70 #>  [3167,]   66   67   70 #>  [3168,]   66   67   70 #>  [3169,]   66   67   70 #>  [3170,]   66   67   70 #>  [3171,]   66   67   70 #>  [3172,]   66   67   70 #>  [3173,]   67   68   69 #>  [3174,]   66   67   70 #>  [3175,]   66   67   70 #>  [3176,]   67   68   69 #>  [3177,]   66   67   70 #>  [3178,]   66   67   70 #>  [3179,]   66   67   70 #>  [3180,]   66   67   70 #>  [3181,]   66   67   70 #>  [3182,]   66   67   70 #>  [3183,]   66   67   70 #>  [3184,]   66   67   70 #>  [3185,]   66   67   70 #>  [3186,]   67   68   69 #>  [3187,]   66   67   70 #>  [3188,]   66   67   70 #>  [3189,]   66   67   70 #>  [3190,]   66   67   70 #>  [3191,]   67   68   69 #>  [3192,]   66   67   70 #>  [3193,]   66   67   70 #>  [3194,]   66   67   70 #>  [3195,]   66   67   70 #>  [3196,]   66   67   70 #>  [3197,]   66   67   70 #>  [3198,]   66   67   70 #>  [3199,]   66   67   70 #>  [3200,]   66   67   70 #>  [3201,]   68   69   71 #>  [3202,]   69   70   72 #>  [3203,]   69   70   72 #>  [3204,]   68   69   71 #>  [3205,]   68   69   71 #>  [3206,]   69   70   72 #>  [3207,]   69   70   72 #>  [3208,]   68   69   71 #>  [3209,]   68   69   71 #>  [3210,]   68   69   71 #>  [3211,]   68   69   71 #>  [3212,]   69   70   72 #>  [3213,]   68   69   71 #>  [3214,]   68   69   71 #>  [3215,]   68   69   71 #>  [3216,]   68   69   71 #>  [3217,]   68   69   71 #>  [3218,]   69   70   72 #>  [3219,]   69   70   72 #>  [3220,]   69   70   72 #>  [3221,]   68   69   71 #>  [3222,]   68   69   71 #>  [3223,]   69   70   72 #>  [3224,]   68   69   71 #>  [3225,]   69   70   72 #>  [3226,]   68   69   71 #>  [3227,]   68   69   71 #>  [3228,]   69   70   72 #>  [3229,]   68   69   71 #>  [3230,]   68   69   71 #>  [3231,]   69   70   72 #>  [3232,]   69   70   72 #>  [3233,]   69   70   72 #>  [3234,]   69   70   72 #>  [3235,]   68   69   71 #>  [3236,]   68   69   71 #>  [3237,]   68   69   71 #>  [3238,]   68   69   71 #>  [3239,]   68   69   71 #>  [3240,]   68   69   71 #>  [3241,]   68   69   71 #>  [3242,]   69   70   72 #>  [3243,]   68   69   71 #>  [3244,]   68   69   71 #>  [3245,]   68   69   71 #>  [3246,]   68   69   71 #>  [3247,]   68   69   71 #>  [3248,]   68   69   71 #>  [3249,]   68   69   71 #>  [3250,]   68   69   71 #>  [3251,]   68   69   71 #>  [3252,]   68   69   71 #>  [3253,]   68   69   71 #>  [3254,]   68   69   71 #>  [3255,]   68   69   71 #>  [3256,]   69   70   72 #>  [3257,]   68   69   71 #>  [3258,]   68   69   71 #>  [3259,]   68   69   71 #>  [3260,]   69   70   72 #>  [3261,]   68   69   71 #>  [3262,]   68   69   71 #>  [3263,]   68   69   71 #>  [3264,]   69   70   72 #>  [3265,]   69   70   72 #>  [3266,]   68   69   71 #>  [3267,]   68   69   71 #>  [3268,]   68   69   71 #>  [3269,]   68   69   71 #>  [3270,]   69   70   72 #>  [3271,]   69   70   72 #>  [3272,]   68   69   71 #>  [3273,]   69   70   72 #>  [3274,]   68   69   71 #>  [3275,]   68   69   71 #>  [3276,]   68   69   71 #>  [3277,]   68   69   71 #>  [3278,]   68   69   71 #>  [3279,]   68   69   71 #>  [3280,]   68   69   71 #>  [3281,]   68   69   71 #>  [3282,]   68   69   71 #>  [3283,]   68   69   71 #>  [3284,]   69   70   72 #>  [3285,]   68   69   71 #>  [3286,]   68   69   71 #>  [3287,]   68   69   71 #>  [3288,]   68   69   71 #>  [3289,]   68   69   71 #>  [3290,]   68   69   71 #>  [3291,]   68   69   71 #>  [3292,]   68   69   71 #>  [3293,]   69   70   72 #>  [3294,]   68   69   71 #>  [3295,]   68   69   71 #>  [3296,]   68   69   71 #>  [3297,]   69   70   72 #>  [3298,]   69   70   72 #>  [3299,]   68   69   71 #>  [3300,]   69   70   72 #>  [3301,]   70   71   74 #>  [3302,]   70   71   74 #>  [3303,]   70   71   73 #>  [3304,]   71   72   74 #>  [3305,]   70   71   74 #>  [3306,]   70   71   74 #>  [3307,]   70   71   73 #>  [3308,]   70   71   74 #>  [3309,]   70   71   74 #>  [3310,]   71   72   74 #>  [3311,]   70   71   74 #>  [3312,]   70   71   73 #>  [3313,]   70   71   74 #>  [3314,]   70   71   74 #>  [3315,]   70   71   74 #>  [3316,]   70   71   74 #>  [3317,]   70   71   74 #>  [3318,]   72   73   74 #>  [3319,]   70   71   74 #>  [3320,]   70   71   74 #>  [3321,]   72   73   74 #>  [3322,]   70   71   74 #>  [3323,]   71   72   74 #>  [3324,]   70   71   74 #>  [3325,]   71   72   74 #>  [3326,]   70   71   74 #>  [3327,]   70   71   74 #>  [3328,]   70   71   74 #>  [3329,]   70   71   74 #>  [3330,]   70   71   74 #>  [3331,]   70   71   73 #>  [3332,]   70   71   74 #>  [3333,]   70   71   74 #>  [3334,]   70   71   74 #>  [3335,]   70   71   74 #>  [3336,]   70   71   74 #>  [3337,]   70   71   74 #>  [3338,]   70   71   74 #>  [3339,]   72   73   74 #>  [3340,]   70   71   74 #>  [3341,]   70   71   74 #>  [3342,]   70   71   74 #>  [3343,]   72   73   74 #>  [3344,]   70   71   74 #>  [3345,]   71   72   74 #>  [3346,]   70   71   74 #>  [3347,]   70   71   74 #>  [3348,]   70   71   74 #>  [3349,]   70   71   74 #>  [3350,]   70   71   74 #>  [3351,]   70   71   74 #>  [3352,]   70   71   73 #>  [3353,]   72   73   74 #>  [3354,]   70   71   74 #>  [3355,]   70   71   74 #>  [3356,]   70   71   74 #>  [3357,]   70   71   74 #>  [3358,]   70   71   74 #>  [3359,]   70   71   73 #>  [3360,]   70   71   73 #>  [3361,]   72   73   74 #>  [3362,]   70   71   74 #>  [3363,]   70   71   74 #>  [3364,]   70   71   74 #>  [3365,]   70   71   74 #>  [3366,]   70   71   74 #>  [3367,]   70   71   74 #>  [3368,]   70   71   74 #>  [3369,]   70   71   74 #>  [3370,]   70   71   74 #>  [3371,]   70   71   74 #>  [3372,]   71   72   74 #>  [3373,]   72   73   74 #>  [3374,]   71   72   74 #>  [3375,]   71   72   74 #>  [3376,]   71   72   74 #>  [3377,]   72   73   74 #>  [3378,]   70   71   74 #>  [3379,]   70   71   74 #>  [3380,]   70   71   74 #>  [3381,]   70   71   74 #>  [3382,]   70   71   74 #>  [3383,]   70   71   74 #>  [3384,]   72   73   74 #>  [3385,]   70   71   74 #>  [3386,]   70   71   74 #>  [3387,]   70   71   74 #>  [3388,]   70   71   74 #>  [3389,]   70   71   74 #>  [3390,]   70   71   74 #>  [3391,]   70   71   74 #>  [3392,]   70   71   74 #>  [3393,]   70   71   74 #>  [3394,]   72   73   74 #>  [3395,]   71   72   74 #>  [3396,]   70   71   74 #>  [3397,]   70   71   73 #>  [3398,]   70   71   74 #>  [3399,]   70   71   74 #>  [3400,]   72   73   74 #>  [3401,]   74   75   76 #>  [3402,]   73   75   76 #>  [3403,]   73   74   75 #>  [3404,]   74   75   76 #>  [3405,]   74   75   76 #>  [3406,]   73   75   76 #>  [3407,]   73   74   75 #>  [3408,]   73   74   75 #>  [3409,]   73   75   76 #>  [3410,]   74   75   76 #>  [3411,]   74   75   76 #>  [3412,]   74   75   76 #>  [3413,]   74   74   75 #>  [3414,]   74   75   76 #>  [3415,]   74   75   76 #>  [3416,]   74   74   75 #>  [3417,]   74   75   76 #>  [3418,]   74   75   76 #>  [3419,]   74   75   76 #>  [3420,]   73   74   75 #>  [3421,]   73   75   76 #>  [3422,]   74   74   75 #>  [3423,]   73   75   76 #>  [3424,]   74   74   75 #>  [3425,]   73   74   75 #>  [3426,]   74   75   76 #>  [3427,]   74   75   76 #>  [3428,]   74   75   76 #>  [3429,]   73   75   76 #>  [3430,]   73   75   76 #>  [3431,]   74   75   76 #>  [3432,]   74   75   76 #>  [3433,]   74   75   76 #>  [3434,]   73   75   76 #>  [3435,]   73   75   76 #>  [3436,]   73   75   76 #>  [3437,]   73   75   76 #>  [3438,]   74   75   76 #>  [3439,]   74   74   75 #>  [3440,]   73   74   75 #>  [3441,]   73   75   76 #>  [3442,]   73   75   76 #>  [3443,]   74   75   76 #>  [3444,]   73   74   75 #>  [3445,]   73   75   76 #>  [3446,]   74   74   75 #>  [3447,]   74   75   76 #>  [3448,]   74   75   76 #>  [3449,]   73   74   75 #>  [3450,]   73   74   75 #>  [3451,]   74   75   76 #>  [3452,]   74   75   76 #>  [3453,]   73   74   75 #>  [3454,]   73   74   75 #>  [3455,]   73   74   75 #>  [3456,]   73   74   75 #>  [3457,]   73   75   76 #>  [3458,]   74   75   76 #>  [3459,]   74   74   75 #>  [3460,]   73   75   76 #>  [3461,]   74   75   76 #>  [3462,]   73   75   76 #>  [3463,]   74   74   75 #>  [3464,]   73   75   76 #>  [3465,]   73   74   75 #>  [3466,]   74   74   75 #>  [3467,]   73   75   76 #>  [3468,]   74   75   76 #>  [3469,]   74   75   76 #>  [3470,]   74   74   75 #>  [3471,]   74   75   76 #>  [3472,]   73   74   75 #>  [3473,]   73   75   76 #>  [3474,]   73   75   76 #>  [3475,]   74   75   76 #>  [3476,]   73   75   76 #>  [3477,]   74   75   76 #>  [3478,]   73   74   75 #>  [3479,]   74   75   76 #>  [3480,]   73   75   76 #>  [3481,]   73   75   76 #>  [3482,]   73   75   76 #>  [3483,]   74   75   76 #>  [3484,]   73   74   75 #>  [3485,]   73   75   76 #>  [3486,]   73   74   75 #>  [3487,]   74   75   76 #>  [3488,]   73   75   76 #>  [3489,]   73   74   75 #>  [3490,]   74   74   75 #>  [3491,]   74   75   76 #>  [3492,]   74   75   76 #>  [3493,]   73   75   76 #>  [3494,]   73   75   76 #>  [3495,]   74   75   76 #>  [3496,]   74   75   76 #>  [3497,]   73   75   76 #>  [3498,]   73   74   75 #>  [3499,]   73   75   76 #>  [3500,]   74   74   75 #>  [3501,]   76   76   77 #>  [3502,]   76   76   77 #>  [3503,]   75   77   78 #>  [3504,]   76   76   77 #>  [3505,]   76   76   77 #>  [3506,]   76   76   77 #>  [3507,]   75   77   78 #>  [3508,]   75   77   78 #>  [3509,]   76   76   77 #>  [3510,]   76   76   77 #>  [3511,]   76   76   77 #>  [3512,]   76   76   77 #>  [3513,]   76   76   77 #>  [3514,]   76   76   77 #>  [3515,]   76   76   77 #>  [3516,]   76   76   77 #>  [3517,]   76   76   77 #>  [3518,]   76   76   77 #>  [3519,]   76   76   77 #>  [3520,]   75   78   78 #>  [3521,]   76   76   77 #>  [3522,]   76   76   77 #>  [3523,]   76   76   77 #>  [3524,]   76   76   77 #>  [3525,]   75   77   78 #>  [3526,]   76   76   77 #>  [3527,]   76   76   77 #>  [3528,]   76   76   77 #>  [3529,]   76   76   77 #>  [3530,]   76   76   77 #>  [3531,]   76   76   77 #>  [3532,]   76   76   77 #>  [3533,]   76   76   77 #>  [3534,]   76   76   77 #>  [3535,]   76   76   77 #>  [3536,]   76   76   77 #>  [3537,]   76   76   77 #>  [3538,]   76   76   77 #>  [3539,]   75   77   78 #>  [3540,]   76   76   77 #>  [3541,]   76   76   77 #>  [3542,]   76   76   77 #>  [3543,]   76   76   77 #>  [3544,]   75   78   78 #>  [3545,]   76   76   77 #>  [3546,]   75   77   78 #>  [3547,]   76   76   77 #>  [3548,]   76   76   77 #>  [3549,]   75   77   78 #>  [3550,]   75   78   78 #>  [3551,]   76   76   77 #>  [3552,]   76   76   77 #>  [3553,]   75   78   78 #>  [3554,]   76   76   77 #>  [3555,]   75   77   78 #>  [3556,]   75   77   78 #>  [3557,]   76   76   77 #>  [3558,]   76   76   77 #>  [3559,]   75   77   78 #>  [3560,]   76   76   77 #>  [3561,]   76   76   77 #>  [3562,]   76   76   77 #>  [3563,]   76   76   77 #>  [3564,]   76   76   77 #>  [3565,]   75   77   78 #>  [3566,]   75   77   78 #>  [3567,]   76   76   77 #>  [3568,]   76   76   77 #>  [3569,]   76   76   77 #>  [3570,]   75   78   78 #>  [3571,]   76   76   77 #>  [3572,]   76   76   77 #>  [3573,]   76   76   77 #>  [3574,]   76   76   77 #>  [3575,]   76   76   77 #>  [3576,]   76   76   77 #>  [3577,]   76   76   77 #>  [3578,]   76   76   77 #>  [3579,]   76   76   77 #>  [3580,]   76   76   77 #>  [3581,]   76   76   77 #>  [3582,]   76   76   77 #>  [3583,]   76   76   77 #>  [3584,]   75   78   78 #>  [3585,]   76   76   77 #>  [3586,]   75   78   78 #>  [3587,]   76   76   77 #>  [3588,]   76   76   77 #>  [3589,]   76   76   77 #>  [3590,]   75   77   78 #>  [3591,]   76   76   77 #>  [3592,]   76   76   77 #>  [3593,]   76   76   77 #>  [3594,]   76   76   77 #>  [3595,]   76   76   77 #>  [3596,]   76   76   77 #>  [3597,]   76   76   77 #>  [3598,]   75   77   78 #>  [3599,]   76   76   77 #>  [3600,]   75   77   78 #>  [3601,]   77   79   79 #>  [3602,]   77   79   79 #>  [3603,]   77   79   79 #>  [3604,]   78   80   80 #>  [3605,]   77   79   79 #>  [3606,]   77   79   79 #>  [3607,]   77   79   79 #>  [3608,]   77   79   79 #>  [3609,]   77   79   79 #>  [3610,]   77   79   79 #>  [3611,]   78   80   80 #>  [3612,]   78   80   80 #>  [3613,]   77   79   79 #>  [3614,]   78   80   80 #>  [3615,]   78   80   80 #>  [3616,]   77   79   79 #>  [3617,]   77   79   79 #>  [3618,]   77   79   79 #>  [3619,]   78   80   80 #>  [3620,]   77   79   79 #>  [3621,]   78   80   80 #>  [3622,]   77   79   79 #>  [3623,]   77   79   79 #>  [3624,]   77   79   79 #>  [3625,]   77   79   79 #>  [3626,]   77   79   79 #>  [3627,]   78   80   80 #>  [3628,]   77   79   79 #>  [3629,]   77   79   79 #>  [3630,]   77   79   79 #>  [3631,]   78   80   80 #>  [3632,]   77   79   79 #>  [3633,]   78   80   80 #>  [3634,]   77   79   79 #>  [3635,]   77   79   79 #>  [3636,]   78   80   80 #>  [3637,]   77   79   79 #>  [3638,]   78   80   80 #>  [3639,]   77   79   79 #>  [3640,]   77   79   79 #>  [3641,]   78   80   80 #>  [3642,]   78   80   80 #>  [3643,]   77   79   79 #>  [3644,]   77   79   79 #>  [3645,]   77   79   79 #>  [3646,]   77   79   79 #>  [3647,]   77   79   79 #>  [3648,]   78   80   80 #>  [3649,]   77   79   79 #>  [3650,]   77   79   79 #>  [3651,]   77   79   79 #>  [3652,]   77   79   79 #>  [3653,]   77   79   79 #>  [3654,]   77   79   79 #>  [3655,]   77   79   79 #>  [3656,]   77   79   79 #>  [3657,]   77   79   79 #>  [3658,]   78   80   80 #>  [3659,]   77   79   79 #>  [3660,]   77   79   79 #>  [3661,]   78   80   80 #>  [3662,]   77   79   79 #>  [3663,]   77   79   79 #>  [3664,]   77   79   79 #>  [3665,]   77   79   79 #>  [3666,]   77   79   79 #>  [3667,]   77   79   79 #>  [3668,]   78   80   80 #>  [3669,]   78   80   80 #>  [3670,]   77   79   79 #>  [3671,]   77   79   79 #>  [3672,]   77   79   79 #>  [3673,]   77   79   79 #>  [3674,]   78   80   80 #>  [3675,]   78   80   80 #>  [3676,]   77   79   79 #>  [3677,]   77   79   79 #>  [3678,]   77   79   79 #>  [3679,]   77   79   79 #>  [3680,]   77   79   79 #>  [3681,]   77   79   79 #>  [3682,]   78   80   80 #>  [3683,]   77   79   79 #>  [3684,]   77   79   79 #>  [3685,]   77   79   79 #>  [3686,]   77   79   79 #>  [3687,]   77   79   79 #>  [3688,]   77   79   79 #>  [3689,]   77   79   79 #>  [3690,]   77   79   79 #>  [3691,]   77   79   79 #>  [3692,]   78   80   80 #>  [3693,]   78   80   80 #>  [3694,]   77   79   79 #>  [3695,]   77   79   79 #>  [3696,]   78   80   80 #>  [3697,]   78   80   80 #>  [3698,]   77   79   79 #>  [3699,]   77   79   79 #>  [3700,]   77   79   79 #>  [3701,]   80   82   82 #>  [3702,]   80   82   82 #>  [3703,]   79   81   81 #>  [3704,]   80   82   82 #>  [3705,]   80   82   82 #>  [3706,]   80   82   82 #>  [3707,]   80   82   82 #>  [3708,]   80   82   82 #>  [3709,]   80   82   82 #>  [3710,]   80   82   82 #>  [3711,]   80   82   82 #>  [3712,]   79   81   81 #>  [3713,]   80   82   82 #>  [3714,]   79   81   81 #>  [3715,]   80   82   82 #>  [3716,]   80   82   82 #>  [3717,]   80   82   82 #>  [3718,]   80   82   82 #>  [3719,]   80   82   82 #>  [3720,]   80   82   82 #>  [3721,]   80   82   82 #>  [3722,]   80   82   82 #>  [3723,]   80   82   82 #>  [3724,]   80   82   82 #>  [3725,]   80   82   82 #>  [3726,]   79   81   81 #>  [3727,]   80   82   82 #>  [3728,]   80   82   82 #>  [3729,]   80   82   82 #>  [3730,]   80   82   82 #>  [3731,]   80   82   82 #>  [3732,]   79   81   81 #>  [3733,]   80   82   82 #>  [3734,]   80   82   82 #>  [3735,]   80   82   82 #>  [3736,]   80   82   82 #>  [3737,]   80   82   82 #>  [3738,]   80   82   82 #>  [3739,]   80   82   82 #>  [3740,]   80   82   82 #>  [3741,]   80   82   82 #>  [3742,]   80   82   82 #>  [3743,]   80   82   82 #>  [3744,]   80   82   82 #>  [3745,]   80   82   82 #>  [3746,]   80   82   82 #>  [3747,]   80   82   82 #>  [3748,]   79   81   81 #>  [3749,]   80   82   82 #>  [3750,]   80   82   82 #>  [3751,]   79   81   81 #>  [3752,]   80   82   82 #>  [3753,]   80   82   82 #>  [3754,]   79   81   81 #>  [3755,]   80   82   82 #>  [3756,]   80   82   82 #>  [3757,]   80   82   82 #>  [3758,]   80   82   82 #>  [3759,]   80   82   82 #>  [3760,]   80   82   82 #>  [3761,]   80   82   82 #>  [3762,]   79   81   81 #>  [3763,]   80   82   82 #>  [3764,]   80   82   82 #>  [3765,]   80   82   82 #>  [3766,]   79   81   81 #>  [3767,]   80   82   82 #>  [3768,]   80   82   82 #>  [3769,]   79   81   81 #>  [3770,]   80   82   82 #>  [3771,]   80   82   82 #>  [3772,]   80   82   82 #>  [3773,]   80   82   82 #>  [3774,]   80   82   82 #>  [3775,]   80   82   82 #>  [3776,]   80   82   82 #>  [3777,]   80   82   82 #>  [3778,]   80   82   82 #>  [3779,]   80   82   82 #>  [3780,]   79   81   81 #>  [3781,]   79   81   81 #>  [3782,]   80   82   82 #>  [3783,]   80   82   82 #>  [3784,]   80   82   82 #>  [3785,]   80   82   82 #>  [3786,]   80   82   82 #>  [3787,]   80   82   82 #>  [3788,]   80   82   82 #>  [3789,]   79   81   81 #>  [3790,]   80   82   82 #>  [3791,]   80   82   82 #>  [3792,]   80   82   82 #>  [3793,]   80   82   82 #>  [3794,]   80   82   82 #>  [3795,]   80   82   82 #>  [3796,]   80   82   82 #>  [3797,]   80   82   82 #>  [3798,]   80   82   82 #>  [3799,]   80   82   82 #>  [3800,]   80   82   82 #>  [3801,]   81   85   84 #>  [3802,]   81   85   84 #>  [3803,]   81   84   83 #>  [3804,]   82   83   85 #>  [3805,]   81   85   84 #>  [3806,]   81   85   84 #>  [3807,]   82   83   85 #>  [3808,]   81   84   83 #>  [3809,]   82   83   85 #>  [3810,]   82   83   85 #>  [3811,]   81   85   84 #>  [3812,]   81   85   84 #>  [3813,]   81   85   84 #>  [3814,]   82   83   85 #>  [3815,]   81   85   84 #>  [3816,]   82   83   85 #>  [3817,]   81   85   84 #>  [3818,]   81   85   84 #>  [3819,]   81   85   84 #>  [3820,]   82   83   85 #>  [3821,]   81   85   84 #>  [3822,]   81   84   83 #>  [3823,]   81   85   84 #>  [3824,]   82   83   85 #>  [3825,]   82   83   85 #>  [3826,]   81   85   84 #>  [3827,]   81   85   84 #>  [3828,]   82   83   85 #>  [3829,]   81   85   84 #>  [3830,]   81   85   84 #>  [3831,]   81   85   84 #>  [3832,]   81   85   84 #>  [3833,]   81   85   84 #>  [3834,]   81   85   84 #>  [3835,]   81   85   84 #>  [3836,]   82   83   85 #>  [3837,]   81   85   84 #>  [3838,]   81   85   84 #>  [3839,]   82   83   85 #>  [3840,]   81   84   83 #>  [3841,]   81   85   84 #>  [3842,]   81   85   84 #>  [3843,]   81   85   84 #>  [3844,]   81   84   83 #>  [3845,]   81   85   84 #>  [3846,]   81   84   83 #>  [3847,]   81   85   84 #>  [3848,]   81   85   84 #>  [3849,]   81   84   83 #>  [3850,]   82   83   85 #>  [3851,]   81   85   84 #>  [3852,]   82   83   85 #>  [3853,]   81   84   83 #>  [3854,]   82   83   85 #>  [3855,]   81   84   83 #>  [3856,]   81   84   83 #>  [3857,]   82   83   85 #>  [3858,]   81   85   84 #>  [3859,]   82   83   85 #>  [3860,]   81   85   84 #>  [3861,]   81   85   84 #>  [3862,]   81   85   84 #>  [3863,]   81   85   84 #>  [3864,]   81   85   84 #>  [3865,]   81   84   83 #>  [3866,]   81   84   83 #>  [3867,]   82   83   85 #>  [3868,]   81   85   84 #>  [3869,]   81   85   84 #>  [3870,]   81   84   83 #>  [3871,]   81   85   84 #>  [3872,]   81   84   83 #>  [3873,]   82   83   85 #>  [3874,]   81   85   84 #>  [3875,]   81   85   84 #>  [3876,]   82   83   85 #>  [3877,]   81   85   84 #>  [3878,]   81   85   84 #>  [3879,]   81   85   84 #>  [3880,]   81   85   84 #>  [3881,]   81   85   84 #>  [3882,]   81   85   84 #>  [3883,]   81   85   84 #>  [3884,]   81   84   83 #>  [3885,]   81   85   84 #>  [3886,]   82   83   85 #>  [3887,]   81   85   84 #>  [3888,]   81   85   84 #>  [3889,]   81   85   84 #>  [3890,]   82   83   85 #>  [3891,]   82   83   85 #>  [3892,]   81   85   84 #>  [3893,]   81   85   84 #>  [3894,]   81   85   84 #>  [3895,]   81   85   84 #>  [3896,]   81   85   84 #>  [3897,]   81   85   84 #>  [3898,]   81   84   83 #>  [3899,]   81   85   84 #>  [3900,]   81   84   83 #>  [3901,]   83   86   87 #>  [3902,]   83   86   87 #>  [3903,]   83   86   87 #>  [3904,]   83   86   87 #>  [3905,]   83   86   87 #>  [3906,]   83   86   87 #>  [3907,]   83   86   87 #>  [3908,]   83   86   87 #>  [3909,]   83   86   87 #>  [3910,]   83   86   87 #>  [3911,]   83   86   87 #>  [3912,]   83   86   87 #>  [3913,]   83   86   87 #>  [3914,]   83   86   87 #>  [3915,]   83   86   87 #>  [3916,]   83   86   87 #>  [3917,]   83   86   87 #>  [3918,]   84   87   86 #>  [3919,]   83   86   87 #>  [3920,]   83   86   87 #>  [3921,]   83   86   87 #>  [3922,]   83   86   87 #>  [3923,]   83   86   87 #>  [3924,]   83   86   87 #>  [3925,]   83   86   87 #>  [3926,]   83   86   87 #>  [3927,]   83   86   87 #>  [3928,]   83   86   87 #>  [3929,]   83   86   87 #>  [3930,]   83   86   87 #>  [3931,]   83   86   87 #>  [3932,]   83   86   87 #>  [3933,]   83   86   87 #>  [3934,]   83   86   87 #>  [3935,]   83   86   87 #>  [3936,]   83   86   87 #>  [3937,]   83   86   87 #>  [3938,]   83   86   87 #>  [3939,]   83   86   87 #>  [3940,]   83   86   87 #>  [3941,]   83   86   87 #>  [3942,]   83   86   87 #>  [3943,]   83   86   87 #>  [3944,]   83   86   87 #>  [3945,]   83   86   87 #>  [3946,]   83   86   87 #>  [3947,]   83   86   87 #>  [3948,]   83   86   87 #>  [3949,]   83   86   87 #>  [3950,]   83   86   87 #>  [3951,]   84   87   86 #>  [3952,]   83   86   87 #>  [3953,]   84   87   86 #>  [3954,]   83   86   87 #>  [3955,]   83   86   87 #>  [3956,]   83   86   87 #>  [3957,]   83   86   87 #>  [3958,]   83   86   87 #>  [3959,]   83   86   87 #>  [3960,]   83   86   87 #>  [3961,]   83   86   87 #>  [3962,]   83   86   87 #>  [3963,]   83   86   87 #>  [3964,]   83   86   87 #>  [3965,]   83   86   87 #>  [3966,]   83   86   87 #>  [3967,]   83   86   87 #>  [3968,]   83   86   87 #>  [3969,]   83   86   87 #>  [3970,]   83   86   87 #>  [3971,]   83   86   87 #>  [3972,]   83   86   87 #>  [3973,]   83   86   87 #>  [3974,]   83   86   87 #>  [3975,]   83   86   87 #>  [3976,]   83   86   87 #>  [3977,]   83   86   87 #>  [3978,]   83   86   87 #>  [3979,]   83   86   87 #>  [3980,]   83   86   87 #>  [3981,]   83   86   87 #>  [3982,]   83   86   87 #>  [3983,]   83   86   87 #>  [3984,]   84   87   86 #>  [3985,]   83   86   87 #>  [3986,]   83   86   87 #>  [3987,]   83   86   87 #>  [3988,]   83   86   87 #>  [3989,]   83   86   87 #>  [3990,]   83   86   87 #>  [3991,]   83   86   87 #>  [3992,]   83   86   87 #>  [3993,]   83   86   87 #>  [3994,]   84   87   86 #>  [3995,]   83   86   87 #>  [3996,]   83   86   87 #>  [3997,]   83   86   87 #>  [3998,]   83   86   87 #>  [3999,]   83   86   87 #>  [4000,]   83   86   87 #>  [4001,]   85   88   88 #>  [4002,]   86   89   89 #>  [4003,]   86   89   89 #>  [4004,]   85   88   88 #>  [4005,]   86   89   89 #>  [4006,]   86   89   89 #>  [4007,]   86   89   89 #>  [4008,]   85   88   88 #>  [4009,]   85   88   88 #>  [4010,]   86   89   89 #>  [4011,]   85   88   88 #>  [4012,]   86   89   89 #>  [4013,]   85   88   88 #>  [4014,]   85   88   88 #>  [4015,]   86   89   89 #>  [4016,]   86   89   89 #>  [4017,]   85   88   88 #>  [4018,]   86   89   89 #>  [4019,]   86   89   89 #>  [4020,]   86   89   89 #>  [4021,]   85   88   88 #>  [4022,]   85   88   88 #>  [4023,]   86   89   89 #>  [4024,]   86   89   89 #>  [4025,]   86   89   89 #>  [4026,]   86   89   89 #>  [4027,]   85   88   88 #>  [4028,]   86   89   89 #>  [4029,]   86   89   89 #>  [4030,]   85   88   88 #>  [4031,]   86   89   89 #>  [4032,]   86   89   89 #>  [4033,]   86   89   89 #>  [4034,]   86   89   89 #>  [4035,]   85   88   88 #>  [4036,]   86   89   89 #>  [4037,]   86   89   89 #>  [4038,]   86   89   89 #>  [4039,]   86   89   89 #>  [4040,]   86   89   89 #>  [4041,]   86   89   89 #>  [4042,]   86   89   89 #>  [4043,]   85   88   88 #>  [4044,]   85   88   88 #>  [4045,]   85   88   88 #>  [4046,]   85   88   88 #>  [4047,]   86   89   89 #>  [4048,]   86   89   89 #>  [4049,]   85   88   88 #>  [4050,]   86   89   89 #>  [4051,]   86   89   89 #>  [4052,]   85   88   88 #>  [4053,]   86   89   89 #>  [4054,]   85   88   88 #>  [4055,]   85   88   88 #>  [4056,]   86   89   89 #>  [4057,]   86   89   89 #>  [4058,]   85   88   88 #>  [4059,]   86   89   89 #>  [4060,]   86   89   89 #>  [4061,]   86   89   89 #>  [4062,]   86   89   89 #>  [4063,]   86   89   89 #>  [4064,]   86   89   89 #>  [4065,]   86   89   89 #>  [4066,]   85   88   88 #>  [4067,]   86   89   89 #>  [4068,]   85   88   88 #>  [4069,]   85   88   88 #>  [4070,]   86   89   89 #>  [4071,]   86   89   89 #>  [4072,]   86   89   89 #>  [4073,]   86   89   89 #>  [4074,]   85   88   88 #>  [4075,]   86   89   89 #>  [4076,]   86   89   89 #>  [4077,]   86   89   89 #>  [4078,]   86   89   89 #>  [4079,]   85   88   88 #>  [4080,]   85   88   88 #>  [4081,]   85   88   88 #>  [4082,]   85   88   88 #>  [4083,]   85   88   88 #>  [4084,]   86   89   89 #>  [4085,]   85   88   88 #>  [4086,]   86   89   89 #>  [4087,]   85   88   88 #>  [4088,]   85   88   88 #>  [4089,]   85   88   88 #>  [4090,]   85   88   88 #>  [4091,]   85   88   88 #>  [4092,]   85   88   88 #>  [4093,]   86   89   89 #>  [4094,]   86   89   89 #>  [4095,]   85   88   88 #>  [4096,]   85   88   88 #>  [4097,]   86   89   89 #>  [4098,]   86   89   89 #>  [4099,]   85   88   88 #>  [4100,]   86   89   89 #>  [4101,]   87   91   91 #>  [4102,]   88   90   90 #>  [4103,]   87   90   90 #>  [4104,]   87   91   91 #>  [4105,]   88   91   91 #>  [4106,]   87   91   91 #>  [4107,]   88   90   90 #>  [4108,]   87   91   91 #>  [4109,]   88   91   91 #>  [4110,]   88   90   90 #>  [4111,]   87   91   91 #>  [4112,]   88   91   91 #>  [4113,]   88   90   90 #>  [4114,]   87   91   91 #>  [4115,]   87   91   91 #>  [4116,]   87   90   90 #>  [4117,]   88   90   90 #>  [4118,]   88   90   90 #>  [4119,]   87   90   90 #>  [4120,]   88   91   91 #>  [4121,]   88   90   90 #>  [4122,]   88   90   90 #>  [4123,]   88   90   90 #>  [4124,]   88   90   90 #>  [4125,]   88   90   90 #>  [4126,]   87   91   91 #>  [4127,]   88   90   90 #>  [4128,]   87   91   91 #>  [4129,]   88   90   90 #>  [4130,]   88   90   90 #>  [4131,]   88   90   90 #>  [4132,]   88   90   90 #>  [4133,]   88   91   91 #>  [4134,]   87   90   90 #>  [4135,]   87   90   90 #>  [4136,]   88   90   90 #>  [4137,]   87   90   90 #>  [4138,]   87   91   91 #>  [4139,]   88   90   90 #>  [4140,]   88   90   90 #>  [4141,]   88   91   91 #>  [4142,]   87   91   91 #>  [4143,]   88   91   91 #>  [4144,]   88   90   90 #>  [4145,]   87   91   91 #>  [4146,]   87   91   91 #>  [4147,]   88   90   90 #>  [4148,]   88   90   90 #>  [4149,]   87   90   90 #>  [4150,]   88   91   91 #>  [4151,]   88   91   91 #>  [4152,]   87   91   91 #>  [4153,]   88   91   91 #>  [4154,]   88   90   90 #>  [4155,]   87   91   91 #>  [4156,]   87   91   91 #>  [4157,]   87   91   91 #>  [4158,]   88   91   91 #>  [4159,]   87   90   90 #>  [4160,]   88   91   91 #>  [4161,]   88   91   91 #>  [4162,]   87   90   90 #>  [4163,]   88   91   91 #>  [4164,]   87   91   91 #>  [4165,]   87   91   91 #>  [4166,]   88   91   91 #>  [4167,]   87   91   91 #>  [4168,]   87   91   91 #>  [4169,]   87   90   90 #>  [4170,]   88   90   90 #>  [4171,]   88   91   91 #>  [4172,]   87   91   91 #>  [4173,]   87   91   91 #>  [4174,]   88   91   91 #>  [4175,]   88   91   91 #>  [4176,]   88   91   91 #>  [4177,]   87   90   90 #>  [4178,]   88   91   91 #>  [4179,]   87   90   90 #>  [4180,]   88   90   90 #>  [4181,]   88   91   91 #>  [4182,]   87   90   90 #>  [4183,]   88   90   90 #>  [4184,]   88   91   91 #>  [4185,]   87   90   90 #>  [4186,]   88   90   90 #>  [4187,]   88   91   91 #>  [4188,]   88   91   91 #>  [4189,]   87   91   91 #>  [4190,]   88   91   91 #>  [4191,]   87   91   91 #>  [4192,]   88   91   91 #>  [4193,]   88   90   90 #>  [4194,]   87   91   91 #>  [4195,]   88   90   90 #>  [4196,]   87   91   91 #>  [4197,]   87   91   91 #>  [4198,]   87   90   90 #>  [4199,]   88   90   90 #>  [4200,]   87   90   90 #>  [4201,]   89   92   93 #>  [4202,]   90   93   92 #>  [4203,]   89   92   93 #>  [4204,]   89   92   93 #>  [4205,]   90   93   92 #>  [4206,]   89   92   93 #>  [4207,]   90   93   92 #>  [4208,]   89   92   93 #>  [4209,]   90   93   92 #>  [4210,]   90   93   92 #>  [4211,]   89   92   93 #>  [4212,]   90   93   92 #>  [4213,]   90   93   92 #>  [4214,]   89   92   93 #>  [4215,]   90   93   92 #>  [4216,]   89   92   93 #>  [4217,]   90   93   92 #>  [4218,]   90   93   92 #>  [4219,]   89   92   93 #>  [4220,]   90   93   92 #>  [4221,]   90   93   92 #>  [4222,]   90   93   92 #>  [4223,]   90   93   92 #>  [4224,]   90   93   92 #>  [4225,]   90   93   92 #>  [4226,]   89   92   93 #>  [4227,]   90   93   92 #>  [4228,]   89   92   93 #>  [4229,]   90   93   92 #>  [4230,]   90   93   92 #>  [4231,]   90   93   92 #>  [4232,]   90   93   92 #>  [4233,]   90   93   92 #>  [4234,]   89   92   93 #>  [4235,]   89   92   93 #>  [4236,]   90   93   92 #>  [4237,]   89   92   93 #>  [4238,]   89   92   93 #>  [4239,]   90   93   92 #>  [4240,]   90   93   92 #>  [4241,]   90   93   92 #>  [4242,]   89   92   93 #>  [4243,]   90   93   92 #>  [4244,]   90   93   92 #>  [4245,]   89   92   93 #>  [4246,]   90   93   92 #>  [4247,]   90   93   92 #>  [4248,]   90   93   92 #>  [4249,]   89   92   93 #>  [4250,]   90   93   92 #>  [4251,]   90   93   92 #>  [4252,]   89   92   93 #>  [4253,]   90   93   92 #>  [4254,]   90   93   92 #>  [4255,]   89   92   93 #>  [4256,]   89   92   93 #>  [4257,]   89   92   93 #>  [4258,]   90   93   92 #>  [4259,]   89   92   93 #>  [4260,]   90   93   92 #>  [4261,]   90   93   92 #>  [4262,]   89   92   93 #>  [4263,]   90   93   92 #>  [4264,]   89   92   93 #>  [4265,]   89   92   93 #>  [4266,]   90   93   92 #>  [4267,]   90   93   92 #>  [4268,]   89   92   93 #>  [4269,]   89   92   93 #>  [4270,]   90   93   92 #>  [4271,]   90   93   92 #>  [4272,]   89   92   93 #>  [4273,]   89   92   93 #>  [4274,]   90   93   92 #>  [4275,]   90   93   92 #>  [4276,]   90   93   92 #>  [4277,]   89   92   93 #>  [4278,]   90   93   92 #>  [4279,]   89   92   93 #>  [4280,]   90   93   92 #>  [4281,]   90   93   92 #>  [4282,]   89   92   93 #>  [4283,]   90   93   92 #>  [4284,]   90   93   92 #>  [4285,]   90   93   92 #>  [4286,]   90   93   92 #>  [4287,]   90   93   92 #>  [4288,]   90   93   92 #>  [4289,]   89   92   93 #>  [4290,]   90   93   92 #>  [4291,]   89   92   93 #>  [4292,]   90   93   92 #>  [4293,]   90   93   92 #>  [4294,]   89   92   93 #>  [4295,]   90   93   92 #>  [4296,]   89   92   93 #>  [4297,]   89   92   93 #>  [4298,]   90   93   92 #>  [4299,]   90   93   92 #>  [4300,]   89   92   93 #>  [4301,]   92   96   95 #>  [4302,]   92   96   95 #>  [4303,]   91   94   94 #>  [4304,]   91   94   94 #>  [4305,]   92   96   95 #>  [4306,]   92   96   95 #>  [4307,]   91   94   94 #>  [4308,]   91   94   94 #>  [4309,]   92   96   95 #>  [4310,]   92   95   95 #>  [4311,]   92   95   95 #>  [4312,]   91   94   94 #>  [4313,]   92   96   95 #>  [4314,]   92   95   95 #>  [4315,]   92   96   95 #>  [4316,]   92   96   95 #>  [4317,]   92   96   95 #>  [4318,]   92   96   95 #>  [4319,]   92   96   95 #>  [4320,]   92   96   95 #>  [4321,]   92   96   95 #>  [4322,]   92   96   95 #>  [4323,]   91   94   94 #>  [4324,]   92   96   95 #>  [4325,]   91   94   94 #>  [4326,]   92   96   95 #>  [4327,]   92   96   95 #>  [4328,]   92   96   95 #>  [4329,]   92   96   95 #>  [4330,]   92   96   95 #>  [4331,]   91   94   94 #>  [4332,]   91   94   94 #>  [4333,]   92   96   95 #>  [4334,]   92   96   95 #>  [4335,]   92   96   95 #>  [4336,]   92   96   95 #>  [4337,]   91   94   94 #>  [4338,]   92   96   95 #>  [4339,]   92   96   95 #>  [4340,]   91   94   94 #>  [4341,]   92   96   95 #>  [4342,]   92   96   95 #>  [4343,]   92   96   95 #>  [4344,]   92   96   95 #>  [4345,]   92   96   95 #>  [4346,]   91   94   94 #>  [4347,]   91   94   94 #>  [4348,]   92   95   95 #>  [4349,]   92   96   95 #>  [4350,]   92   96   95 #>  [4351,]   92   96   95 #>  [4352,]   91   94   94 #>  [4353,]   92   96   95 #>  [4354,]   92   96   95 #>  [4355,]   91   94   94 #>  [4356,]   92   96   95 #>  [4357,]   91   94   94 #>  [4358,]   92   96   95 #>  [4359,]   91   94   94 #>  [4360,]   91   94   94 #>  [4361,]   92   96   95 #>  [4362,]   92   96   95 #>  [4363,]   92   96   95 #>  [4364,]   92   96   95 #>  [4365,]   92   96   95 #>  [4366,]   92   96   95 #>  [4367,]   92   96   95 #>  [4368,]   91   94   94 #>  [4369,]   92   96   95 #>  [4370,]   92   95   95 #>  [4371,]   92   96   95 #>  [4372,]   91   94   94 #>  [4373,]   92   96   95 #>  [4374,]   91   94   94 #>  [4375,]   92   96   95 #>  [4376,]   91   94   94 #>  [4377,]   92   96   95 #>  [4378,]   92   96   95 #>  [4379,]   92   96   95 #>  [4380,]   91   94   94 #>  [4381,]   92   96   95 #>  [4382,]   92   96   95 #>  [4383,]   92   96   95 #>  [4384,]   92   96   95 #>  [4385,]   92   96   95 #>  [4386,]   91   94   94 #>  [4387,]   92   96   95 #>  [4388,]   92   96   95 #>  [4389,]   92   96   95 #>  [4390,]   92   96   95 #>  [4391,]   92   96   95 #>  [4392,]   91   94   94 #>  [4393,]   92   96   95 #>  [4394,]   92   96   95 #>  [4395,]   92   96   95 #>  [4396,]   91   94   94 #>  [4397,]   91   94   94 #>  [4398,]   91   94   94 #>  [4399,]   92   96   95 #>  [4400,]   92   96   95 #>  [4401,]   93   97   97 #>  [4402,]   94   98   96 #>  [4403,]   94   98   96 #>  [4404,]   93   97   97 #>  [4405,]   93   97   97 #>  [4406,]   94   98   97 #>  [4407,]   94   98   96 #>  [4408,]   93   97   97 #>  [4409,]   93   97   97 #>  [4410,]   94   98   97 #>  [4411,]   93   97   97 #>  [4412,]   94   98   97 #>  [4413,]   93   97   96 #>  [4414,]   93   97   97 #>  [4415,]   93   97   97 #>  [4416,]   93   97   96 #>  [4417,]   93   97   97 #>  [4418,]   94   98   96 #>  [4419,]   94   98   96 #>  [4420,]   94   98   97 #>  [4421,]   93   97   96 #>  [4422,]   93   97   96 #>  [4423,]   94   98   96 #>  [4424,]   93   97   96 #>  [4425,]   94   98   97 #>  [4426,]   93   97   97 #>  [4427,]   93   97   97 #>  [4428,]   94   98   97 #>  [4429,]   94   98   97 #>  [4430,]   93   97   96 #>  [4431,]   94   98   96 #>  [4432,]   94   98   97 #>  [4433,]   94   98   97 #>  [4434,]   94   98   96 #>  [4435,]   93   97   96 #>  [4436,]   93   97   96 #>  [4437,]   93   97   96 #>  [4438,]   93   97   97 #>  [4439,]   94   98   96 #>  [4440,]   94   98   96 #>  [4441,]   93   97   97 #>  [4442,]   94   98   97 #>  [4443,]   93   97   97 #>  [4444,]   93   97   96 #>  [4445,]   93   97   97 #>  [4446,]   93   97   97 #>  [4447,]   94   98   96 #>  [4448,]   94   98   97 #>  [4449,]   93   97   96 #>  [4450,]   94   98   97 #>  [4451,]   93   97   97 #>  [4452,]   93   97   97 #>  [4453,]   94   98   97 #>  [4454,]   93   97   96 #>  [4455,]   93   97   97 #>  [4456,]   94   98   97 #>  [4457,]   94   98   97 #>  [4458,]   93   97   97 #>  [4459,]   93   97   96 #>  [4460,]   94   98   97 #>  [4461,]   94   98   97 #>  [4462,]   93   97   96 #>  [4463,]   94   98   97 #>  [4464,]   94   98   97 #>  [4465,]   94   98   97 #>  [4466,]   93   97   97 #>  [4467,]   93   97   97 #>  [4468,]   93   97   97 #>  [4469,]   93   97   97 #>  [4470,]   94   98   96 #>  [4471,]   94   98   97 #>  [4472,]   93   97   97 #>  [4473,]   94   98   97 #>  [4474,]   93   97   97 #>  [4475,]   94   98   97 #>  [4476,]   93   97   97 #>  [4477,]   94   98   96 #>  [4478,]   94   98   97 #>  [4479,]   93   97   96 #>  [4480,]   93   97   96 #>  [4481,]   93   97   97 #>  [4482,]   93   97   97 #>  [4483,]   93   97   96 #>  [4484,]   94   98   97 #>  [4485,]   93   97   97 #>  [4486,]   94   98   96 #>  [4487,]   93   97   97 #>  [4488,]   93   97   97 #>  [4489,]   93   97   97 #>  [4490,]   93   97   97 #>  [4491,]   93   97   97 #>  [4492,]   93   97   97 #>  [4493,]   94   98   96 #>  [4494,]   94   98   97 #>  [4495,]   93   97   96 #>  [4496,]   93   97   97 #>  [4497,]   94   98   97 #>  [4498,]   94   98   96 #>  [4499,]   93   97   97 #>  [4500,]   94   98   96 #>  [4501,]   96  101   99 #>  [4502,]   96  101   99 #>  [4503,]   95   99  100 #>  [4504,]   95   99  100 #>  [4505,]   96  100   98 #>  [4506,]   96  101   99 #>  [4507,]   95   99  100 #>  [4508,]   95   99  100 #>  [4509,]   96  101   99 #>  [4510,]   96  101   99 #>  [4511,]   96  101   99 #>  [4512,]   95   99  100 #>  [4513,]   96  100   98 #>  [4514,]   96  101   99 #>  [4515,]   96  101   99 #>  [4516,]   96  100   98 #>  [4517,]   96  100   98 #>  [4518,]   96  101   99 #>  [4519,]   96  101   99 #>  [4520,]   96  100   98 #>  [4521,]   96  101   99 #>  [4522,]   96  100   98 #>  [4523,]   96  101   99 #>  [4524,]   96  100   98 #>  [4525,]   95   99  100 #>  [4526,]   96  101   99 #>  [4527,]   96  101   99 #>  [4528,]   96  101   99 #>  [4529,]   96  100   98 #>  [4530,]   96  101   99 #>  [4531,]   95   99  100 #>  [4532,]   96  101   99 #>  [4533,]   96  101   99 #>  [4534,]   96  101   99 #>  [4535,]   96  101   99 #>  [4536,]   96  101   99 #>  [4537,]   96  101   99 #>  [4538,]   96  101   99 #>  [4539,]   96  100   98 #>  [4540,]   96  100   98 #>  [4541,]   96  101   99 #>  [4542,]   96  101   99 #>  [4543,]   96  100   98 #>  [4544,]   96  100   98 #>  [4545,]   96  100   98 #>  [4546,]   96  100   98 #>  [4547,]   96  100   98 #>  [4548,]   96  101   99 #>  [4549,]   96  100   98 #>  [4550,]   96  100   98 #>  [4551,]   96  100   98 #>  [4552,]   95   99  100 #>  [4553,]   96  100   98 #>  [4554,]   96  100   98 #>  [4555,]   96  100   98 #>  [4556,]   96  100   98 #>  [4557,]   95   99  100 #>  [4558,]   96  101   99 #>  [4559,]   95   99  100 #>  [4560,]   95   99  100 #>  [4561,]   96  101   99 #>  [4562,]   96  101   99 #>  [4563,]   96  100   98 #>  [4564,]   96  101   99 #>  [4565,]   96  100   98 #>  [4566,]   96  100   98 #>  [4567,]   96  101   99 #>  [4568,]   95   99  100 #>  [4569,]   96  101   99 #>  [4570,]   96  100   98 #>  [4571,]   96  100   98 #>  [4572,]   96  100   98 #>  [4573,]   96  101   99 #>  [4574,]   96  101   99 #>  [4575,]   96  101   99 #>  [4576,]   96  100   98 #>  [4577,]   96  100   98 #>  [4578,]   96  100   98 #>  [4579,]   96  100   98 #>  [4580,]   96  101   99 #>  [4581,]   96  100   98 #>  [4582,]   96  101   99 #>  [4583,]   96  100   98 #>  [4584,]   96  100   98 #>  [4585,]   96  101   99 #>  [4586,]   95   99  100 #>  [4587,]   96  101   99 #>  [4588,]   96  101   99 #>  [4589,]   96  100   98 #>  [4590,]   96  100   98 #>  [4591,]   96  101   99 #>  [4592,]   96  101   99 #>  [4593,]   96  101   99 #>  [4594,]   96  100   98 #>  [4595,]   96  101   99 #>  [4596,]   95   99  100 #>  [4597,]   95   99  100 #>  [4598,]   96  100   98 #>  [4599,]   96  101   99 #>  [4600,]   96  100   98 #>  [4601,]   97  102  101 #>  [4602,]   97  102  101 #>  [4603,]   97  102  101 #>  [4604,]   99  103  102 #>  [4605,]   97  102  101 #>  [4606,]   98  103  102 #>  [4607,]   97  102  101 #>  [4608,]   97  102  101 #>  [4609,]   98  103  102 #>  [4610,]   99  103  102 #>  [4611,]   98  103  102 #>  [4612,]   98  103  102 #>  [4613,]   97  102  101 #>  [4614,]   98  103  102 #>  [4615,]   98  103  102 #>  [4616,]   97  102  101 #>  [4617,]   97  102  101 #>  [4618,]   99  103  102 #>  [4619,]   98  103  102 #>  [4620,]   97  102  101 #>  [4621,]   98  103  102 #>  [4622,]   97  102  101 #>  [4623,]   98  103  102 #>  [4624,]   97  102  101 #>  [4625,]   97  102  101 #>  [4626,]   98  103  102 #>  [4627,]   98  103  102 #>  [4628,]   97  102  101 #>  [4629,]   97  102  101 #>  [4630,]   98  103  102 #>  [4631,]   98  103  102 #>  [4632,]   98  103  102 #>  [4633,]   98  103  102 #>  [4634,]   98  103  102 #>  [4635,]   97  102  101 #>  [4636,]   98  103  102 #>  [4637,]   97  102  101 #>  [4638,]   98  103  102 #>  [4639,]   97  102  101 #>  [4640,]   97  102  101 #>  [4641,]   98  103  102 #>  [4642,]   98  103  102 #>  [4643,]   97  102  101 #>  [4644,]   97  102  101 #>  [4645,]   97  102  101 #>  [4646,]   97  102  101 #>  [4647,]   97  102  101 #>  [4648,]   98  103  102 #>  [4649,]   97  102  101 #>  [4650,]   97  102  101 #>  [4651,]   97  102  101 #>  [4652,]   98  103  102 #>  [4653,]   97  102  101 #>  [4654,]   97  102  101 #>  [4655,]   97  102  101 #>  [4656,]   97  102  101 #>  [4657,]   97  102  101 #>  [4658,]   98  103  102 #>  [4659,]   97  102  101 #>  [4660,]   98  103  102 #>  [4661,]   98  103  102 #>  [4662,]   98  103  102 #>  [4663,]   97  102  101 #>  [4664,]   98  103  102 #>  [4665,]   97  102  101 #>  [4666,]   97  102  101 #>  [4667,]   98  103  102 #>  [4668,]   98  103  102 #>  [4669,]   98  103  102 #>  [4670,]   97  102  101 #>  [4671,]   97  102  101 #>  [4672,]   97  102  101 #>  [4673,]   99  103  102 #>  [4674,]   99  103  102 #>  [4675,]   99  103  102 #>  [4676,]   97  102  101 #>  [4677,]   97  102  101 #>  [4678,]   97  102  101 #>  [4679,]   97  102  101 #>  [4680,]   98  103  102 #>  [4681,]   97  102  101 #>  [4682,]   98  103  102 #>  [4683,]   97  102  101 #>  [4684,]   97  102  101 #>  [4685,]   98  103  102 #>  [4686,]   97  102  101 #>  [4687,]   97  102  101 #>  [4688,]   97  102  101 #>  [4689,]   97  102  101 #>  [4690,]   97  102  101 #>  [4691,]   97  102  101 #>  [4692,]   98  103  102 #>  [4693,]   98  103  102 #>  [4694,]   97  102  101 #>  [4695,]   97  102  101 #>  [4696,]   98  103  102 #>  [4697,]   98  103  102 #>  [4698,]   97  102  101 #>  [4699,]   98  103  102 #>  [4700,]   97  102  101 #>  [4701,]  100  104  104 #>  [4702,]  100  104  103 #>  [4703,]  100  104  103 #>  [4704,]  100  104  103 #>  [4705,]  101  104  104 #>  [4706,]  100  104  103 #>  [4707,]  100  104  103 #>  [4708,]  100  104  103 #>  [4709,]  100  104  103 #>  [4710,]  100  104  104 #>  [4711,]  100  104  104 #>  [4712,]  100  104  104 #>  [4713,]  100  104  103 #>  [4714,]  100  104  104 #>  [4715,]  100  104  104 #>  [4716,]  100  104  104 #>  [4717,]  100  104  104 #>  [4718,]  101  104  104 #>  [4719,]  100  104  104 #>  [4720,]  100  104  103 #>  [4721,]  100  104  103 #>  [4722,]  100  104  104 #>  [4723,]  100  104  103 #>  [4724,]  100  104  104 #>  [4725,]  100  104  103 #>  [4726,]  100  104  104 #>  [4727,]  100  104  104 #>  [4728,]  100  104  103 #>  [4729,]  100  104  103 #>  [4730,]  100  104  103 #>  [4731,]  100  104  104 #>  [4732,]  100  104  104 #>  [4733,]  100  104  103 #>  [4734,]  100  104  103 #>  [4735,]  100  104  103 #>  [4736,]  100  104  103 #>  [4737,]  100  104  103 #>  [4738,]  100  104  104 #>  [4739,]  100  104  104 #>  [4740,]  100  104  103 #>  [4741,]  100  104  103 #>  [4742,]  100  104  103 #>  [4743,]  100  104  104 #>  [4744,]  100  104  103 #>  [4745,]  100  104  103 #>  [4746,]  100  104  103 #>  [4747,]  100  104  104 #>  [4748,]  100  104  103 #>  [4749,]  100  104  103 #>  [4750,]  100  104  103 #>  [4751,]  100  104  104 #>  [4752,]  100  104  104 #>  [4753,]  100  104  103 #>  [4754,]  100  104  103 #>  [4755,]  100  104  103 #>  [4756,]  100  104  103 #>  [4757,]  100  104  103 #>  [4758,]  100  104  104 #>  [4759,]  100  104  104 #>  [4760,]  100  104  103 #>  [4761,]  100  104  104 #>  [4762,]  100  104  103 #>  [4763,]  100  104  103 #>  [4764,]  100  104  103 #>  [4765,]  100  104  103 #>  [4766,]  100  104  104 #>  [4767,]  100  104  103 #>  [4768,]  100  104  104 #>  [4769,]  100  104  103 #>  [4770,]  100  104  104 #>  [4771,]  101  104  104 #>  [4772,]  100  104  103 #>  [4773,]  100  104  103 #>  [4774,]  100  104  103 #>  [4775,]  101  104  104 #>  [4776,]  100  104  103 #>  [4777,]  100  104  104 #>  [4778,]  100  104  103 #>  [4779,]  100  104  104 #>  [4780,]  100  104  103 #>  [4781,]  100  104  103 #>  [4782,]  100  104  103 #>  [4783,]  100  104  104 #>  [4784,]  100  104  103 #>  [4785,]  100  104  103 #>  [4786,]  100  104  103 #>  [4787,]  100  104  104 #>  [4788,]  100  104  103 #>  [4789,]  100  104  103 #>  [4790,]  100  104  104 #>  [4791,]  100  104  104 #>  [4792,]  100  104  104 #>  [4793,]  100  104  103 #>  [4794,]  100  104  103 #>  [4795,]  101  104  104 #>  [4796,]  100  104  104 #>  [4797,]  100  104  103 #>  [4798,]  100  104  103 #>  [4799,]  100  104  103 #>  [4800,]  101  104  104 #>  [4801,]  102  105  105 #>  [4802,]  102  106  105 #>  [4803,]  102  106  105 #>  [4804,]  103  105  105 #>  [4805,]  102  105  105 #>  [4806,]  102  106  105 #>  [4807,]  103  106  105 #>  [4808,]  102  105  105 #>  [4809,]  102  105  105 #>  [4810,]  103  106  105 #>  [4811,]  102  105  105 #>  [4812,]  102  106  105 #>  [4813,]  102  105  105 #>  [4814,]  102  105  105 #>  [4815,]  103  105  107 #>  [4816,]  103  105  105 #>  [4817,]  102  105  105 #>  [4818,]  103  106  105 #>  [4819,]  102  106  107 #>  [4820,]  102  106  106 #>  [4821,]  103  105  105 #>  [4822,]  102  105  106 #>  [4823,]  103  106  105 #>  [4824,]  102  105  105 #>  [4825,]  103  106  105 #>  [4826,]  102  105  105 #>  [4827,]  103  105  107 #>  [4828,]  102  106  105 #>  [4829,]  102  106  106 #>  [4830,]  102  105  105 #>  [4831,]  102  106  105 #>  [4832,]  102  106  105 #>  [4833,]  102  106  105 #>  [4834,]  102  106  105 #>  [4835,]  102  105  105 #>  [4836,]  102  105  107 #>  [4837,]  102  105  105 #>  [4838,]  102  105  105 #>  [4839,]  103  106  105 #>  [4840,]  102  106  105 #>  [4841,]  102  105  105 #>  [4842,]  102  106  105 #>  [4843,]  103  105  105 #>  [4844,]  102  105  105 #>  [4845,]  103  105  105 #>  [4846,]  102  105  105 #>  [4847,]  102  106  105 #>  [4848,]  102  106  105 #>  [4849,]  102  105  105 #>  [4850,]  102  106  105 #>  [4851,]  102  105  105 #>  [4852,]  102  105  105 #>  [4853,]  103  106  105 #>  [4854,]  102  105  105 #>  [4855,]  102  105  106 #>  [4856,]  102  106  105 #>  [4857,]  102  106  105 #>  [4858,]  102  105  107 #>  [4859,]  102  105  105 #>  [4860,]  102  106  105 #>  [4861,]  103  106  105 #>  [4862,]  102  105  105 #>  [4863,]  102  106  105 #>  [4864,]  102  106  106 #>  [4865,]  102  106  105 #>  [4866,]  102  105  106 #>  [4867,]  102  105  105 #>  [4868,]  102  105  105 #>  [4869,]  102  105  105 #>  [4870,]  102  106  105 #>  [4871,]  102  106  105 #>  [4872,]  103  106  105 #>  [4873,]  103  106  105 #>  [4874,]  103  105  105 #>  [4875,]  103  106  105 #>  [4876,]  103  105  105 #>  [4877,]  103  106  106 #>  [4878,]  102  106  105 #>  [4879,]  102  105  105 #>  [4880,]  102  105  105 #>  [4881,]  102  105  106 #>  [4882,]  102  105  105 #>  [4883,]  102  105  106 #>  [4884,]  103  106  105 #>  [4885,]  102  105  105 #>  [4886,]  102  106  105 #>  [4887,]  102  105  106 #>  [4888,]  102  105  105 #>  [4889,]  102  105  105 #>  [4890,]  102  105  105 #>  [4891,]  102  105  105 #>  [4892,]  102  105  105 #>  [4893,]  102  106  105 #>  [4894,]  103  106  105 #>  [4895,]  103  105  105 #>  [4896,]  102  105  105 #>  [4897,]  102  106  107 #>  [4898,]  102  106  105 #>  [4899,]  102  105  105 #>  [4900,]  103  106  106 #>  [4901,]  105  108  108 #>  [4902,]  105  108  108 #>  [4903,]  104  107  109 #>  [4904,]  104  107  110 #>  [4905,]  104  107  110 #>  [4906,]  104  107  110 #>  [4907,]  104  107  109 #>  [4908,]  105  108  108 #>  [4909,]  104  107  110 #>  [4910,]  104  107  110 #>  [4911,]  104  107  110 #>  [4912,]  105  108  108 #>  [4913,]  105  108  108 #>  [4914,]  104  107  110 #>  [4915,]  105  108  108 #>  [4916,]  105  108  108 #>  [4917,]  104  107  110 #>  [4918,]  104  107  110 #>  [4919,]  105  108  108 #>  [4920,]  105  108  108 #>  [4921,]  104  107  110 #>  [4922,]  105  108  108 #>  [4923,]  105  108  108 #>  [4924,]  104  107  109 #>  [4925,]  104  107  109 #>  [4926,]  105  108  108 #>  [4927,]  105  108  108 #>  [4928,]  104  107  110 #>  [4929,]  105  108  108 #>  [4930,]  105  108  108 #>  [4931,]  104  107  110 #>  [4932,]  104  107  110 #>  [4933,]  105  108  108 #>  [4934,]  104  107  110 #>  [4935,]  104  107  110 #>  [4936,]  105  108  108 #>  [4937,]  105  108  108 #>  [4938,]  105  108  108 #>  [4939,]  104  107  109 #>  [4940,]  104  107  109 #>  [4941,]  105  108  108 #>  [4942,]  104  107  110 #>  [4943,]  105  108  108 #>  [4944,]  105  108  108 #>  [4945,]  105  108  108 #>  [4946,]  105  108  108 #>  [4947,]  104  107  110 #>  [4948,]  104  107  110 #>  [4949,]  104  107  109 #>  [4950,]  105  108  108 #>  [4951,]  105  108  108 #>  [4952,]  104  107  110 #>  [4953,]  105  108  108 #>  [4954,]  104  107  109 #>  [4955,]  105  108  108 #>  [4956,]  105  108  108 #>  [4957,]  104  107  110 #>  [4958,]  105  108  108 #>  [4959,]  105  108  108 #>  [4960,]  105  108  108 #>  [4961,]  105  108  108 #>  [4962,]  104  107  110 #>  [4963,]  105  108  108 #>  [4964,]  105  108  108 #>  [4965,]  104  107  109 #>  [4966,]  105  108  108 #>  [4967,]  104  107  110 #>  [4968,]  105  108  108 #>  [4969,]  105  108  108 #>  [4970,]  104  107  109 #>  [4971,]  105  108  108 #>  [4972,]  104  107  109 #>  [4973,]  104  107  110 #>  [4974,]  104  107  110 #>  [4975,]  105  108  108 #>  [4976,]  104  107  110 #>  [4977,]  105  108  108 #>  [4978,]  105  108  108 #>  [4979,]  104  107  110 #>  [4980,]  105  108  108 #>  [4981,]  105  108  108 #>  [4982,]  104  107  110 #>  [4983,]  105  108  108 #>  [4984,]  105  108  108 #>  [4985,]  105  108  108 #>  [4986,]  104  107  109 #>  [4987,]  105  108  108 #>  [4988,]  104  107  110 #>  [4989,]  104  107  109 #>  [4990,]  105  108  108 #>  [4991,]  104  107  110 #>  [4992,]  104  107  110 #>  [4993,]  105  108  108 #>  [4994,]  104  107  110 #>  [4995,]  105  108  108 #>  [4996,]  105  108  108 #>  [4997,]  105  108  108 #>  [4998,]  104  107  109 #>  [4999,]  104  107  110 #>  [5000,]  105  108  108 #>  [5001,]  106  109  111 #>  [5002,]  107  110  112 #>  [5003,]  106  109  111 #>  [5004,]  106  109  111 #>  [5005,]  106  109  111 #>  [5006,]  106  109  111 #>  [5007,]  106  109  111 #>  [5008,]  106  109  111 #>  [5009,]  106  109  111 #>  [5010,]  107  110  112 #>  [5011,]  106  109  111 #>  [5012,]  107  110  112 #>  [5013,]  106  109  111 #>  [5014,]  106  109  111 #>  [5015,]  106  109  111 #>  [5016,]  106  109  111 #>  [5017,]  106  109  111 #>  [5018,]  106  109  111 #>  [5019,]  106  109  111 #>  [5020,]  106  109  111 #>  [5021,]  107  110  112 #>  [5022,]  106  109  111 #>  [5023,]  106  109  111 #>  [5024,]  106  109  111 #>  [5025,]  106  109  111 #>  [5026,]  106  109  111 #>  [5027,]  106  109  111 #>  [5028,]  106  109  111 #>  [5029,]  106  109  111 #>  [5030,]  106  109  111 #>  [5031,]  106  109  111 #>  [5032,]  106  109  111 #>  [5033,]  106  109  111 #>  [5034,]  106  109  111 #>  [5035,]  106  109  111 #>  [5036,]  106  109  111 #>  [5037,]  106  109  111 #>  [5038,]  106  109  111 #>  [5039,]  106  109  111 #>  [5040,]  106  109  111 #>  [5041,]  106  109  111 #>  [5042,]  106  109  111 #>  [5043,]  106  109  111 #>  [5044,]  106  109  111 #>  [5045,]  106  109  111 #>  [5046,]  106  109  111 #>  [5047,]  106  109  111 #>  [5048,]  106  109  111 #>  [5049,]  106  109  111 #>  [5050,]  106  109  111 #>  [5051,]  106  109  111 #>  [5052,]  106  109  111 #>  [5053,]  106  109  111 #>  [5054,]  106  109  111 #>  [5055,]  106  109  111 #>  [5056,]  106  109  111 #>  [5057,]  106  109  111 #>  [5058,]  106  109  111 #>  [5059,]  106  109  111 #>  [5060,]  106  109  111 #>  [5061,]  106  109  111 #>  [5062,]  106  109  111 #>  [5063,]  106  109  111 #>  [5064,]  106  109  111 #>  [5065,]  106  109  111 #>  [5066,]  106  109  111 #>  [5067,]  106  109  111 #>  [5068,]  106  109  111 #>  [5069,]  106  109  111 #>  [5070,]  106  109  111 #>  [5071,]  106  109  111 #>  [5072,]  106  109  111 #>  [5073,]  106  109  111 #>  [5074,]  106  109  111 #>  [5075,]  106  109  111 #>  [5076,]  106  109  111 #>  [5077,]  106  109  111 #>  [5078,]  106  109  111 #>  [5079,]  106  109  111 #>  [5080,]  106  109  111 #>  [5081,]  106  109  111 #>  [5082,]  106  109  111 #>  [5083,]  106  109  111 #>  [5084,]  106  109  111 #>  [5085,]  106  109  111 #>  [5086,]  107  110  112 #>  [5087,]  106  109  111 #>  [5088,]  106  109  111 #>  [5089,]  106  109  111 #>  [5090,]  106  109  111 #>  [5091,]  106  109  111 #>  [5092,]  106  109  111 #>  [5093,]  106  109  111 #>  [5094,]  106  109  111 #>  [5095,]  106  109  111 #>  [5096,]  106  109  111 #>  [5097,]  106  109  111 #>  [5098,]  106  109  111 #>  [5099,]  106  109  111 #>  [5100,]  106  109  111 #>  [5101,]  109  112  113 #>  [5102,]  108  111  116 #>  [5103,]  108  111  115 #>  [5104,]  109  112  113 #>  [5105,]  109  112  113 #>  [5106,]  109  112  114 #>  [5107,]  108  111  116 #>  [5108,]  109  112  113 #>  [5109,]  109  112  113 #>  [5110,]  109  112  113 #>  [5111,]  109  112  113 #>  [5112,]  109  112  113 #>  [5113,]  108  111  116 #>  [5114,]  109  112  113 #>  [5115,]  109  112  113 #>  [5116,]  108  111  115 #>  [5117,]  109  112  113 #>  [5118,]  108  111  116 #>  [5119,]  108  111  115 #>  [5120,]  109  112  113 #>  [5121,]  108  111  116 #>  [5122,]  108  111  116 #>  [5123,]  108  111  116 #>  [5124,]  108  111  116 #>  [5125,]  109  112  114 #>  [5126,]  109  112  113 #>  [5127,]  109  112  113 #>  [5128,]  109  112  113 #>  [5129,]  109  112  113 #>  [5130,]  108  111  116 #>  [5131,]  108  111  116 #>  [5132,]  108  111  116 #>  [5133,]  109  112  113 #>  [5134,]  108  111  115 #>  [5135,]  108  111  115 #>  [5136,]  108  111  116 #>  [5137,]  108  111  115 #>  [5138,]  109  112  113 #>  [5139,]  108  111  115 #>  [5140,]  108  111  116 #>  [5141,]  109  112  113 #>  [5142,]  109  112  113 #>  [5143,]  109  112  113 #>  [5144,]  108  111  116 #>  [5145,]  109  112  113 #>  [5146,]  109  112  113 #>  [5147,]  108  111  116 #>  [5148,]  109  112  113 #>  [5149,]  108  111  115 #>  [5150,]  109  112  113 #>  [5151,]  109  112  113 #>  [5152,]  109  112  113 #>  [5153,]  109  112  113 #>  [5154,]  108  111  116 #>  [5155,]  109  112  113 #>  [5156,]  109  112  113 #>  [5157,]  109  112  113 #>  [5158,]  109  112  113 #>  [5159,]  108  111  115 #>  [5160,]  109  112  114 #>  [5161,]  109  112  113 #>  [5162,]  108  111  115 #>  [5163,]  109  112  113 #>  [5164,]  109  112  113 #>  [5165,]  109  112  114 #>  [5166,]  109  112  113 #>  [5167,]  109  112  113 #>  [5168,]  109  112  113 #>  [5169,]  109  112  113 #>  [5170,]  108  111  116 #>  [5171,]  109  112  113 #>  [5172,]  109  112  113 #>  [5173,]  109  112  114 #>  [5174,]  109  112  113 #>  [5175,]  109  112  113 #>  [5176,]  109  112  113 #>  [5177,]  108  111  115 #>  [5178,]  109  112  113 #>  [5179,]  108  111  115 #>  [5180,]  108  111  116 #>  [5181,]  109  112  113 #>  [5182,]  109  112  113 #>  [5183,]  108  111  116 #>  [5184,]  109  112  113 #>  [5185,]  109  112  113 #>  [5186,]  108  111  116 #>  [5187,]  109  112  113 #>  [5188,]  109  112  113 #>  [5189,]  109  112  113 #>  [5190,]  109  112  113 #>  [5191,]  109  112  113 #>  [5192,]  109  112  113 #>  [5193,]  108  111  116 #>  [5194,]  109  112  113 #>  [5195,]  108  111  116 #>  [5196,]  109  112  113 #>  [5197,]  109  112  113 #>  [5198,]  108  111  115 #>  [5199,]  109  112  113 #>  [5200,]  108  111  115 #>  [5201,]  111  114  118 #>  [5202,]  111  114  117 #>  [5203,]  111  114  118 #>  [5204,]  111  114  118 #>  [5205,]  111  114  118 #>  [5206,]  111  114  117 #>  [5207,]  110  113  118 #>  [5208,]  111  114  118 #>  [5209,]  111  114  118 #>  [5210,]  111  114  118 #>  [5211,]  111  114  117 #>  [5212,]  111  114  117 #>  [5213,]  111  114  118 #>  [5214,]  111  114  118 #>  [5215,]  111  114  117 #>  [5216,]  111  114  118 #>  [5217,]  111  114  117 #>  [5218,]  111  114  117 #>  [5219,]  111  114  117 #>  [5220,]  111  114  118 #>  [5221,]  110  113  117 #>  [5222,]  111  114  118 #>  [5223,]  111  114  117 #>  [5224,]  111  114  118 #>  [5225,]  111  114  118 #>  [5226,]  111  114  117 #>  [5227,]  111  114  118 #>  [5228,]  111  114  118 #>  [5229,]  111  114  117 #>  [5230,]  111  114  117 #>  [5231,]  111  114  117 #>  [5232,]  111  114  117 #>  [5233,]  111  114  118 #>  [5234,]  111  114  117 #>  [5235,]  111  114  117 #>  [5236,]  111  114  118 #>  [5237,]  111  114  117 #>  [5238,]  111  114  118 #>  [5239,]  110  113  118 #>  [5240,]  111  114  118 #>  [5241,]  111  114  118 #>  [5242,]  111  114  117 #>  [5243,]  111  114  117 #>  [5244,]  111  114  117 #>  [5245,]  111  114  118 #>  [5246,]  111  114  117 #>  [5247,]  111  114  117 #>  [5248,]  111  114  117 #>  [5249,]  110  113  118 #>  [5250,]  111  114  118 #>  [5251,]  111  114  117 #>  [5252,]  111  114  118 #>  [5253,]  111  114  118 #>  [5254,]  111  114  118 #>  [5255,]  111  114  118 #>  [5256,]  111  114  117 #>  [5257,]  111  114  118 #>  [5258,]  111  114  118 #>  [5259,]  111  114  118 #>  [5260,]  111  114  117 #>  [5261,]  111  114  117 #>  [5262,]  110  113  117 #>  [5263,]  111  114  117 #>  [5264,]  111  114  117 #>  [5265,]  111  114  117 #>  [5266,]  111  114  117 #>  [5267,]  111  114  118 #>  [5268,]  111  114  117 #>  [5269,]  111  114  117 #>  [5270,]  110  113  117 #>  [5271,]  111  114  118 #>  [5272,]  111  114  118 #>  [5273,]  111  114  118 #>  [5274,]  111  114  118 #>  [5275,]  111  114  117 #>  [5276,]  111  114  118 #>  [5277,]  111  114  118 #>  [5278,]  111  114  117 #>  [5279,]  111  114  117 #>  [5280,]  110  113  118 #>  [5281,]  111  114  117 #>  [5282,]  111  114  117 #>  [5283,]  111  114  118 #>  [5284,]  111  114  118 #>  [5285,]  111  114  118 #>  [5286,]  111  114  118 #>  [5287,]  111  114  118 #>  [5288,]  111  114  118 #>  [5289,]  111  114  117 #>  [5290,]  111  114  118 #>  [5291,]  111  114  118 #>  [5292,]  111  114  117 #>  [5293,]  111  114  117 #>  [5294,]  111  114  117 #>  [5295,]  110  113  117 #>  [5296,]  111  114  117 #>  [5297,]  111  114  117 #>  [5298,]  111  114  118 #>  [5299,]  111  114  118 #>  [5300,]  111  114  117 #>  [5301,]  112  115  119 #>  [5302,]  112  115  119 #>  [5303,]  112  115  119 #>  [5304,]  113  116  120 #>  [5305,]  112  115  119 #>  [5306,]  112  115  119 #>  [5307,]  112  115  119 #>  [5308,]  112  115  119 #>  [5309,]  112  115  119 #>  [5310,]  112  115  119 #>  [5311,]  112  115  119 #>  [5312,]  113  116  120 #>  [5313,]  112  115  119 #>  [5314,]  113  116  120 #>  [5315,]  113  116  120 #>  [5316,]  112  115  119 #>  [5317,]  112  115  119 #>  [5318,]  112  115  119 #>  [5319,]  113  116  120 #>  [5320,]  112  115  119 #>  [5321,]  113  116  120 #>  [5322,]  112  115  119 #>  [5323,]  112  115  119 #>  [5324,]  112  115  119 #>  [5325,]  112  115  119 #>  [5326,]  112  115  119 #>  [5327,]  113  116  120 #>  [5328,]  112  115  119 #>  [5329,]  112  115  119 #>  [5330,]  112  115  119 #>  [5331,]  112  115  119 #>  [5332,]  112  115  119 #>  [5333,]  112  115  119 #>  [5334,]  112  115  119 #>  [5335,]  112  115  119 #>  [5336,]  112  115  119 #>  [5337,]  112  115  119 #>  [5338,]  113  116  120 #>  [5339,]  112  115  119 #>  [5340,]  112  115  119 #>  [5341,]  113  116  120 #>  [5342,]  113  116  120 #>  [5343,]  112  115  119 #>  [5344,]  112  115  119 #>  [5345,]  112  115  119 #>  [5346,]  112  115  119 #>  [5347,]  112  115  119 #>  [5348,]  113  116  120 #>  [5349,]  112  115  119 #>  [5350,]  112  115  119 #>  [5351,]  112  115  119 #>  [5352,]  112  115  119 #>  [5353,]  112  115  119 #>  [5354,]  112  115  119 #>  [5355,]  112  115  119 #>  [5356,]  112  115  119 #>  [5357,]  112  115  119 #>  [5358,]  112  115  119 #>  [5359,]  112  115  119 #>  [5360,]  112  115  119 #>  [5361,]  113  116  120 #>  [5362,]  112  115  119 #>  [5363,]  112  115  119 #>  [5364,]  112  115  119 #>  [5365,]  112  115  119 #>  [5366,]  112  115  119 #>  [5367,]  112  115  119 #>  [5368,]  112  115  119 #>  [5369,]  113  116  120 #>  [5370,]  112  115  119 #>  [5371,]  112  115  119 #>  [5372,]  112  115  119 #>  [5373,]  112  115  119 #>  [5374,]  113  116  120 #>  [5375,]  113  116  120 #>  [5376,]  112  115  119 #>  [5377,]  112  115  119 #>  [5378,]  112  115  119 #>  [5379,]  112  115  119 #>  [5380,]  112  115  119 #>  [5381,]  112  115  119 #>  [5382,]  113  116  120 #>  [5383,]  112  115  119 #>  [5384,]  112  115  119 #>  [5385,]  112  115  119 #>  [5386,]  112  115  119 #>  [5387,]  112  115  119 #>  [5388,]  112  115  119 #>  [5389,]  112  115  119 #>  [5390,]  112  115  119 #>  [5391,]  112  115  119 #>  [5392,]  113  116  120 #>  [5393,]  113  116  120 #>  [5394,]  112  115  119 #>  [5395,]  112  115  119 #>  [5396,]  113  116  120 #>  [5397,]  113  116  120 #>  [5398,]  112  115  119 #>  [5399,]  112  115  119 #>  [5400,]  112  115  119 #>  [5401,]  115  118  122 #>  [5402,]  115  118  122 #>  [5403,]  114  117  121 #>  [5404,]  115  118  122 #>  [5405,]  115  118  122 #>  [5406,]  115  118  122 #>  [5407,]  115  118  122 #>  [5408,]  115  118  122 #>  [5409,]  115  118  122 #>  [5410,]  114  117  121 #>  [5411,]  114  117  121 #>  [5412,]  115  118  122 #>  [5413,]  115  118  122 #>  [5414,]  114  117  121 #>  [5415,]  115  118  122 #>  [5416,]  115  118  122 #>  [5417,]  115  118  122 #>  [5418,]  115  118  122 #>  [5419,]  115  118  122 #>  [5420,]  115  118  122 #>  [5421,]  114  117  121 #>  [5422,]  115  118  122 #>  [5423,]  115  118  122 #>  [5424,]  115  118  122 #>  [5425,]  115  118  122 #>  [5426,]  115  118  122 #>  [5427,]  115  118  122 #>  [5428,]  114  117  121 #>  [5429,]  115  118  122 #>  [5430,]  115  118  122 #>  [5431,]  114  117  121 #>  [5432,]  114  117  121 #>  [5433,]  115  118  122 #>  [5434,]  114  117  121 #>  [5435,]  114  117  121 #>  [5436,]  115  118  122 #>  [5437,]  115  118  122 #>  [5438,]  115  118  122 #>  [5439,]  115  118  122 #>  [5440,]  114  117  121 #>  [5441,]  115  118  122 #>  [5442,]  115  118  122 #>  [5443,]  115  118  122 #>  [5444,]  115  118  122 #>  [5445,]  115  118  122 #>  [5446,]  115  118  122 #>  [5447,]  115  118  122 #>  [5448,]  114  117  121 #>  [5449,]  115  118  122 #>  [5450,]  115  118  122 #>  [5451,]  115  118  122 #>  [5452,]  115  118  122 #>  [5453,]  115  118  122 #>  [5454,]  115  118  122 #>  [5455,]  115  118  122 #>  [5456,]  115  118  122 #>  [5457,]  115  118  122 #>  [5458,]  115  118  122 #>  [5459,]  115  118  122 #>  [5460,]  115  118  122 #>  [5461,]  115  118  122 #>  [5462,]  115  118  122 #>  [5463,]  115  118  122 #>  [5464,]  115  118  122 #>  [5465,]  115  118  122 #>  [5466,]  115  118  122 #>  [5467,]  115  118  122 #>  [5468,]  115  118  122 #>  [5469,]  115  118  122 #>  [5470,]  114  117  121 #>  [5471,]  115  118  122 #>  [5472,]  115  118  122 #>  [5473,]  115  118  122 #>  [5474,]  114  117  121 #>  [5475,]  115  118  122 #>  [5476,]  115  118  122 #>  [5477,]  115  118  122 #>  [5478,]  115  118  122 #>  [5479,]  115  118  122 #>  [5480,]  115  118  122 #>  [5481,]  115  118  122 #>  [5482,]  114  117  121 #>  [5483,]  115  118  122 #>  [5484,]  115  118  122 #>  [5485,]  115  118  122 #>  [5486,]  115  118  122 #>  [5487,]  115  118  122 #>  [5488,]  115  118  122 #>  [5489,]  115  118  122 #>  [5490,]  115  118  122 #>  [5491,]  115  118  122 #>  [5492,]  115  118  122 #>  [5493,]  115  118  122 #>  [5494,]  115  118  122 #>  [5495,]  115  118  122 #>  [5496,]  115  118  122 #>  [5497,]  115  118  122 #>  [5498,]  114  117  121 #>  [5499,]  115  118  122 #>  [5500,]  115  118  122 #>  [5501,]  116  120  124 #>  [5502,]  116  120  124 #>  [5503,]  116  120  124 #>  [5504,]  116  119  123 #>  [5505,]  117  120  124 #>  [5506,]  116  120  124 #>  [5507,]  116  120  124 #>  [5508,]  116  119  123 #>  [5509,]  116  119  123 #>  [5510,]  116  119  123 #>  [5511,]  116  120  124 #>  [5512,]  116  120  124 #>  [5513,]  116  120  124 #>  [5514,]  116  120  124 #>  [5515,]  116  120  124 #>  [5516,]  116  120  124 #>  [5517,]  116  120  124 #>  [5518,]  117  120  124 #>  [5519,]  116  120  124 #>  [5520,]  116  119  123 #>  [5521,]  116  120  124 #>  [5522,]  116  120  124 #>  [5523,]  116  120  124 #>  [5524,]  116  120  124 #>  [5525,]  116  120  124 #>  [5526,]  116  120  124 #>  [5527,]  116  120  124 #>  [5528,]  116  120  124 #>  [5529,]  116  120  124 #>  [5530,]  116  119  123 #>  [5531,]  116  120  124 #>  [5532,]  116  120  124 #>  [5533,]  116  120  124 #>  [5534,]  116  120  124 #>  [5535,]  116  120  124 #>  [5536,]  116  120  124 #>  [5537,]  116  120  124 #>  [5538,]  116  120  124 #>  [5539,]  116  120  124 #>  [5540,]  116  120  124 #>  [5541,]  116  120  124 #>  [5542,]  116  120  124 #>  [5543,]  116  119  123 #>  [5544,]  116  120  124 #>  [5545,]  116  120  124 #>  [5546,]  116  120  124 #>  [5547,]  116  120  124 #>  [5548,]  116  120  124 #>  [5549,]  116  120  124 #>  [5550,]  116  120  124 #>  [5551,]  116  119  123 #>  [5552,]  116  120  124 #>  [5553,]  116  120  124 #>  [5554,]  116  120  124 #>  [5555,]  116  120  124 #>  [5556,]  116  119  123 #>  [5557,]  116  120  124 #>  [5558,]  116  120  124 #>  [5559,]  116  120  124 #>  [5560,]  116  119  123 #>  [5561,]  116  120  124 #>  [5562,]  116  120  124 #>  [5563,]  116  120  124 #>  [5564,]  116  119  123 #>  [5565,]  116  120  124 #>  [5566,]  116  120  124 #>  [5567,]  116  119  123 #>  [5568,]  116  120  124 #>  [5569,]  116  120  124 #>  [5570,]  116  120  124 #>  [5571,]  117  120  124 #>  [5572,]  116  120  124 #>  [5573,]  116  120  124 #>  [5574,]  116  120  124 #>  [5575,]  117  120  124 #>  [5576,]  116  120  124 #>  [5577,]  116  120  124 #>  [5578,]  116  119  123 #>  [5579,]  116  120  124 #>  [5580,]  116  120  124 #>  [5581,]  116  120  124 #>  [5582,]  116  120  124 #>  [5583,]  116  120  124 #>  [5584,]  116  120  124 #>  [5585,]  116  119  123 #>  [5586,]  116  120  124 #>  [5587,]  116  120  124 #>  [5588,]  116  120  124 #>  [5589,]  116  119  123 #>  [5590,]  116  120  124 #>  [5591,]  116  119  123 #>  [5592,]  116  120  124 #>  [5593,]  116  120  124 #>  [5594,]  116  120  124 #>  [5595,]  116  119  123 #>  [5596,]  116  120  124 #>  [5597,]  116  120  124 #>  [5598,]  116  120  124 #>  [5599,]  116  120  124 #>  [5600,]  117  120  124 #>  [5601,]  118  121  125 #>  [5602,]  119  122  126 #>  [5603,]  118  121  126 #>  [5604,]  119  122  125 #>  [5605,]  119  122  126 #>  [5606,]  118  121  126 #>  [5607,]  119  122  126 #>  [5608,]  119  122  125 #>  [5609,]  119  122  125 #>  [5610,]  119  122  126 #>  [5611,]  118  121  125 #>  [5612,]  119  122  126 #>  [5613,]  119  122  125 #>  [5614,]  118  121  125 #>  [5615,]  119  122  125 #>  [5616,]  118  121  125 #>  [5617,]  119  122  125 #>  [5618,]  119  122  126 #>  [5619,]  118  121  126 #>  [5620,]  119  122  126 #>  [5621,]  119  122  125 #>  [5622,]  119  122  125 #>  [5623,]  119  122  126 #>  [5624,]  119  122  126 #>  [5625,]  119  122  126 #>  [5626,]  118  121  126 #>  [5627,]  119  122  125 #>  [5628,]  118  121  126 #>  [5629,]  119  122  126 #>  [5630,]  119  122  125 #>  [5631,]  119  122  126 #>  [5632,]  119  122  126 #>  [5633,]  119  122  126 #>  [5634,]  118  121  126 #>  [5635,]  118  121  125 #>  [5636,]  119  122  126 #>  [5637,]  118  121  125 #>  [5638,]  118  121  126 #>  [5639,]  119  122  126 #>  [5640,]  119  122  126 #>  [5641,]  119  122  125 #>  [5642,]  118  121  126 #>  [5643,]  119  122  125 #>  [5644,]  119  122  125 #>  [5645,]  118  121  125 #>  [5646,]  119  122  125 #>  [5647,]  119  122  126 #>  [5648,]  119  122  126 #>  [5649,]  118  121  125 #>  [5650,]  119  122  126 #>  [5651,]  119  122  126 #>  [5652,]  118  121  125 #>  [5653,]  119  122  126 #>  [5654,]  119  122  125 #>  [5655,]  119  122  125 #>  [5656,]  119  122  126 #>  [5657,]  119  122  126 #>  [5658,]  119  122  125 #>  [5659,]  118  121  126 #>  [5660,]  119  122  126 #>  [5661,]  119  122  126 #>  [5662,]  119  122  125 #>  [5663,]  119  122  126 #>  [5664,]  118  121  126 #>  [5665,]  119  122  126 #>  [5666,]  119  122  125 #>  [5667,]  119  122  125 #>  [5668,]  118  121  125 #>  [5669,]  119  122  125 #>  [5670,]  119  122  126 #>  [5671,]  119  122  126 #>  [5672,]  118  121  126 #>  [5673,]  118  121  126 #>  [5674,]  119  122  125 #>  [5675,]  119  122  126 #>  [5676,]  119  122  126 #>  [5677,]  118  121  126 #>  [5678,]  119  122  126 #>  [5679,]  118  121  125 #>  [5680,]  119  122  125 #>  [5681,]  119  122  125 #>  [5682,]  119  122  125 #>  [5683,]  119  122  125 #>  [5684,]  119  122  126 #>  [5685,]  119  122  125 #>  [5686,]  119  122  126 #>  [5687,]  119  122  125 #>  [5688,]  119  122  125 #>  [5689,]  118  121  125 #>  [5690,]  119  122  125 #>  [5691,]  119  122  125 #>  [5692,]  119  122  125 #>  [5693,]  119  122  126 #>  [5694,]  118  121  126 #>  [5695,]  119  122  125 #>  [5696,]  118  121  125 #>  [5697,]  118  121  126 #>  [5698,]  119  122  126 #>  [5699,]  119  122  125 #>  [5700,]  118  121  126 #>  [5701,]  120  123  127 #>  [5702,]  121  124  128 #>  [5703,]  120  123  127 #>  [5704,]  120  123  127 #>  [5705,]  120  123  127 #>  [5706,]  120  123  127 #>  [5707,]  120  123  127 #>  [5708,]  120  123  127 #>  [5709,]  121  125  128 #>  [5710,]  121  125  128 #>  [5711,]  120  123  127 #>  [5712,]  121  124  128 #>  [5713,]  121  125  128 #>  [5714,]  120  123  127 #>  [5715,]  120  123  127 #>  [5716,]  120  123  127 #>  [5717,]  121  125  128 #>  [5718,]  120  123  127 #>  [5719,]  120  123  127 #>  [5720,]  120  123  127 #>  [5721,]  121  125  128 #>  [5722,]  120  123  127 #>  [5723,]  120  123  127 #>  [5724,]  120  123  127 #>  [5725,]  120  123  127 #>  [5726,]  120  123  127 #>  [5727,]  120  123  127 #>  [5728,]  120  123  127 #>  [5729,]  121  124  128 #>  [5730,]  120  123  127 #>  [5731,]  120  123  127 #>  [5732,]  121  124  128 #>  [5733,]  121  124  128 #>  [5734,]  120  123  127 #>  [5735,]  120  123  127 #>  [5736,]  120  123  127 #>  [5737,]  120  123  127 #>  [5738,]  120  123  127 #>  [5739,]  120  123  127 #>  [5740,]  120  123  127 #>  [5741,]  120  123  127 #>  [5742,]  120  123  127 #>  [5743,]  120  123  127 #>  [5744,]  120  123  127 #>  [5745,]  120  123  127 #>  [5746,]  120  123  127 #>  [5747,]  120  123  127 #>  [5748,]  120  123  127 #>  [5749,]  120  123  127 #>  [5750,]  120  123  127 #>  [5751,]  120  123  127 #>  [5752,]  120  123  127 #>  [5753,]  121  125  128 #>  [5754,]  120  123  127 #>  [5755,]  120  123  127 #>  [5756,]  120  123  127 #>  [5757,]  120  123  127 #>  [5758,]  120  123  127 #>  [5759,]  120  123  127 #>  [5760,]  121  124  128 #>  [5761,]  120  123  127 #>  [5762,]  120  123  127 #>  [5763,]  121  124  128 #>  [5764,]  120  123  127 #>  [5765,]  120  123  127 #>  [5766,]  120  123  127 #>  [5767,]  120  123  127 #>  [5768,]  120  123  127 #>  [5769,]  120  123  127 #>  [5770,]  121  125  128 #>  [5771,]  120  123  127 #>  [5772,]  120  123  127 #>  [5773,]  120  123  127 #>  [5774,]  120  123  127 #>  [5775,]  121  125  128 #>  [5776,]  120  123  127 #>  [5777,]  120  123  127 #>  [5778,]  120  123  127 #>  [5779,]  120  123  127 #>  [5780,]  121  124  128 #>  [5781,]  121  124  128 #>  [5782,]  120  123  127 #>  [5783,]  120  123  127 #>  [5784,]  120  123  127 #>  [5785,]  120  123  127 #>  [5786,]  121  125  128 #>  [5787,]  120  123  127 #>  [5788,]  120  123  127 #>  [5789,]  120  123  127 #>  [5790,]  120  123  127 #>  [5791,]  120  123  127 #>  [5792,]  120  123  127 #>  [5793,]  120  123  127 #>  [5794,]  120  123  127 #>  [5795,]  120  123  127 #>  [5796,]  120  123  127 #>  [5797,]  120  123  127 #>  [5798,]  120  123  127 #>  [5799,]  120  123  127 #>  [5800,]  120  123  127 #>  [5801,]  123  127  130 #>  [5802,]  123  127  130 #>  [5803,]  122  126  129 #>  [5804,]  122  126  129 #>  [5805,]  122  126  129 #>  [5806,]  122  126  129 #>  [5807,]  123  127  130 #>  [5808,]  123  127  130 #>  [5809,]  122  126  129 #>  [5810,]  122  126  129 #>  [5811,]  122  126  129 #>  [5812,]  123  127  130 #>  [5813,]  123  127  130 #>  [5814,]  122  126  129 #>  [5815,]  123  127  130 #>  [5816,]  123  127  130 #>  [5817,]  123  127  130 #>  [5818,]  123  127  130 #>  [5819,]  123  127  130 #>  [5820,]  123  127  130 #>  [5821,]  122  126  129 #>  [5822,]  123  127  130 #>  [5823,]  123  127  130 #>  [5824,]  122  126  129 #>  [5825,]  122  126  129 #>  [5826,]  123  127  130 #>  [5827,]  123  127  130 #>  [5828,]  122  126  129 #>  [5829,]  123  127  130 #>  [5830,]  123  127  130 #>  [5831,]  122  126  129 #>  [5832,]  122  126  129 #>  [5833,]  123  127  130 #>  [5834,]  122  126  129 #>  [5835,]  122  126  129 #>  [5836,]  123  127  130 #>  [5837,]  123  127  130 #>  [5838,]  123  127  130 #>  [5839,]  122  126  129 #>  [5840,]  122  126  129 #>  [5841,]  123  127  130 #>  [5842,]  122  126  129 #>  [5843,]  123  127  130 #>  [5844,]  123  127  130 #>  [5845,]  123  127  130 #>  [5846,]  123  127  130 #>  [5847,]  122  126  129 #>  [5848,]  122  126  129 #>  [5849,]  123  127  130 #>  [5850,]  123  127  130 #>  [5851,]  123  127  130 #>  [5852,]  122  126  129 #>  [5853,]  123  127  130 #>  [5854,]  122  126  129 #>  [5855,]  123  127  130 #>  [5856,]  123  127  130 #>  [5857,]  122  126  129 #>  [5858,]  123  127  130 #>  [5859,]  123  127  130 #>  [5860,]  123  127  130 #>  [5861,]  123  127  130 #>  [5862,]  122  126  129 #>  [5863,]  123  127  130 #>  [5864,]  123  127  130 #>  [5865,]  122  126  129 #>  [5866,]  123  127  130 #>  [5867,]  123  127  130 #>  [5868,]  123  127  130 #>  [5869,]  123  127  130 #>  [5870,]  122  126  129 #>  [5871,]  123  127  130 #>  [5872,]  122  126  129 #>  [5873,]  122  126  129 #>  [5874,]  122  126  129 #>  [5875,]  123  127  130 #>  [5876,]  122  126  129 #>  [5877,]  123  127  130 #>  [5878,]  123  127  130 #>  [5879,]  122  126  129 #>  [5880,]  123  127  130 #>  [5881,]  123  127  130 #>  [5882,]  122  126  129 #>  [5883,]  123  127  130 #>  [5884,]  123  127  130 #>  [5885,]  123  127  130 #>  [5886,]  123  127  130 #>  [5887,]  123  127  130 #>  [5888,]  123  127  130 #>  [5889,]  123  127  130 #>  [5890,]  123  127  130 #>  [5891,]  122  126  129 #>  [5892,]  123  127  130 #>  [5893,]  123  127  130 #>  [5894,]  123  127  130 #>  [5895,]  123  127  130 #>  [5896,]  123  127  130 #>  [5897,]  123  127  130 #>  [5898,]  122  126  129 #>  [5899,]  123  127  130 #>  [5900,]  123  127  130 #>  [5901,]  125  128  131 #>  [5902,]  125  128  131 #>  [5903,]  125  128  131 #>  [5904,]  124  129  132 #>  [5905,]  125  128  131 #>  [5906,]  125  128  131 #>  [5907,]  125  128  131 #>  [5908,]  124  130  132 #>  [5909,]  124  129  132 #>  [5910,]  124  129  132 #>  [5911,]  125  128  131 #>  [5912,]  125  128  131 #>  [5913,]  125  128  131 #>  [5914,]  125  128  131 #>  [5915,]  125  128  131 #>  [5916,]  125  128  131 #>  [5917,]  125  128  131 #>  [5918,]  124  130  132 #>  [5919,]  125  128  131 #>  [5920,]  124  130  132 #>  [5921,]  125  128  131 #>  [5922,]  125  128  131 #>  [5923,]  125  128  131 #>  [5924,]  125  128  131 #>  [5925,]  125  128  131 #>  [5926,]  125  128  131 #>  [5927,]  125  128  131 #>  [5928,]  125  128  131 #>  [5929,]  125  128  131 #>  [5930,]  124  130  132 #>  [5931,]  125  128  131 #>  [5932,]  125  128  131 #>  [5933,]  125  128  131 #>  [5934,]  125  128  131 #>  [5935,]  125  128  131 #>  [5936,]  125  128  131 #>  [5937,]  125  128  131 #>  [5938,]  125  128  131 #>  [5939,]  124  129  132 #>  [5940,]  125  128  131 #>  [5941,]  125  128  131 #>  [5942,]  125  128  131 #>  [5943,]  124  130  132 #>  [5944,]  125  128  131 #>  [5945,]  124  130  132 #>  [5946,]  125  128  131 #>  [5947,]  125  128  131 #>  [5948,]  125  128  131 #>  [5949,]  124  130  132 #>  [5950,]  125  128  131 #>  [5951,]  124  130  132 #>  [5952,]  125  128  131 #>  [5953,]  124  130  132 #>  [5954,]  125  128  131 #>  [5955,]  125  128  131 #>  [5956,]  124  130  132 #>  [5957,]  125  128  131 #>  [5958,]  125  128  131 #>  [5959,]  125  128  131 #>  [5960,]  124  130  132 #>  [5961,]  125  128  131 #>  [5962,]  125  128  131 #>  [5963,]  125  128  131 #>  [5964,]  124  130  132 #>  [5965,]  124  129  132 #>  [5966,]  124  130  132 #>  [5967,]  124  130  132 #>  [5968,]  125  128  131 #>  [5969,]  125  128  131 #>  [5970,]  125  128  131 #>  [5971,]  125  128  131 #>  [5972,]  125  128  131 #>  [5973,]  125  128  131 #>  [5974,]  125  128  131 #>  [5975,]  125  128  131 #>  [5976,]  125  128  131 #>  [5977,]  125  128  131 #>  [5978,]  124  130  132 #>  [5979,]  125  128  131 #>  [5980,]  125  128  131 #>  [5981,]  125  128  131 #>  [5982,]  125  128  131 #>  [5983,]  125  128  131 #>  [5984,]  125  128  131 #>  [5985,]  124  130  132 #>  [5986,]  125  128  131 #>  [5987,]  125  128  131 #>  [5988,]  125  128  131 #>  [5989,]  124  129  132 #>  [5990,]  125  128  131 #>  [5991,]  124  129  132 #>  [5992,]  125  128  131 #>  [5993,]  125  128  131 #>  [5994,]  125  128  131 #>  [5995,]  124  130  132 #>  [5996,]  125  128  131 #>  [5997,]  125  128  131 #>  [5998,]  125  128  131 #>  [5999,]  125  128  131 #>  [6000,]  125  128  131 #>  [6001,]  127  132  133 #>  [6002,]  127  132  133 #>  [6003,]  127  132  133 #>  [6004,]  126  131  133 #>  [6005,]  127  132  133 #>  [6006,]  127  132  133 #>  [6007,]  127  132  133 #>  [6008,]  126  131  133 #>  [6009,]  126  131  133 #>  [6010,]  127  132  133 #>  [6011,]  127  132  133 #>  [6012,]  127  132  133 #>  [6013,]  127  132  133 #>  [6014,]  127  132  133 #>  [6015,]  127  132  133 #>  [6016,]  127  132  133 #>  [6017,]  126  131  133 #>  [6018,]  127  132  133 #>  [6019,]  127  132  133 #>  [6020,]  127  132  134 #>  [6021,]  127  132  133 #>  [6022,]  127  132  134 #>  [6023,]  127  132  133 #>  [6024,]  127  132  133 #>  [6025,]  127  132  133 #>  [6026,]  127  132  133 #>  [6027,]  126  131  134 #>  [6028,]  127  132  133 #>  [6029,]  127  132  134 #>  [6030,]  127  132  133 #>  [6031,]  127  132  133 #>  [6032,]  127  132  133 #>  [6033,]  127  132  133 #>  [6034,]  127  132  133 #>  [6035,]  127  132  133 #>  [6036,]  127  132  133 #>  [6037,]  127  132  133 #>  [6038,]  127  132  133 #>  [6039,]  127  132  133 #>  [6040,]  127  132  133 #>  [6041,]  127  132  133 #>  [6042,]  127  132  133 #>  [6043,]  127  132  133 #>  [6044,]  126  131  133 #>  [6045,]  127  132  133 #>  [6046,]  127  132  133 #>  [6047,]  127  132  133 #>  [6048,]  127  132  133 #>  [6049,]  127  132  133 #>  [6050,]  127  132  133 #>  [6051,]  127  132  133 #>  [6052,]  126  131  133 #>  [6053,]  127  132  133 #>  [6054,]  127  132  133 #>  [6055,]  127  132  133 #>  [6056,]  127  132  133 #>  [6057,]  127  132  133 #>  [6058,]  126  131  134 #>  [6059,]  127  132  133 #>  [6060,]  127  132  133 #>  [6061,]  127  132  133 #>  [6062,]  127  132  133 #>  [6063,]  127  132  133 #>  [6064,]  127  132  134 #>  [6065,]  127  132  133 #>  [6066,]  126  131  133 #>  [6067,]  127  132  133 #>  [6068,]  127  132  133 #>  [6069,]  127  132  133 #>  [6070,]  127  132  133 #>  [6071,]  127  132  133 #>  [6072,]  127  132  133 #>  [6073,]  127  132  133 #>  [6074,]  127  132  133 #>  [6075,]  127  132  133 #>  [6076,]  127  132  133 #>  [6077,]  127  132  134 #>  [6078,]  127  132  133 #>  [6079,]  127  132  133 #>  [6080,]  127  132  133 #>  [6081,]  126  131  134 #>  [6082,]  126  131  133 #>  [6083,]  127  132  133 #>  [6084,]  127  132  133 #>  [6085,]  127  132  133 #>  [6086,]  127  132  133 #>  [6087,]  126  131  134 #>  [6088,]  127  132  133 #>  [6089,]  127  132  133 #>  [6090,]  126  131  133 #>  [6091,]  127  132  133 #>  [6092,]  126  131  133 #>  [6093,]  127  132  133 #>  [6094,]  127  132  133 #>  [6095,]  126  131  133 #>  [6096,]  127  132  133 #>  [6097,]  127  132  133 #>  [6098,]  127  132  133 #>  [6099,]  126  131  133 #>  [6100,]  127  132  134 #>  [6101,]  129  134  135 #>  [6102,]  129  134  135 #>  [6103,]  128  133  135 #>  [6104,]  129  134  135 #>  [6105,]  129  134  135 #>  [6106,]  129  134  135 #>  [6107,]  129  134  135 #>  [6108,]  129  134  135 #>  [6109,]  129  134  135 #>  [6110,]  128  133  135 #>  [6111,]  128  133  135 #>  [6112,]  129  134  135 #>  [6113,]  129  134  135 #>  [6114,]  128  133  135 #>  [6115,]  129  134  135 #>  [6116,]  129  134  135 #>  [6117,]  129  134  135 #>  [6118,]  129  134  135 #>  [6119,]  129  134  135 #>  [6120,]  129  134  136 #>  [6121,]  128  133  135 #>  [6122,]  129  134  135 #>  [6123,]  129  134  135 #>  [6124,]  129  134  136 #>  [6125,]  129  134  135 #>  [6126,]  129  134  135 #>  [6127,]  129  134  135 #>  [6128,]  129  134  136 #>  [6129,]  129  134  135 #>  [6130,]  129  134  135 #>  [6131,]  128  133  135 #>  [6132,]  128  133  135 #>  [6133,]  129  134  135 #>  [6134,]  129  134  135 #>  [6135,]  129  134  135 #>  [6136,]  129  134  135 #>  [6137,]  129  134  135 #>  [6138,]  129  134  135 #>  [6139,]  129  134  135 #>  [6140,]  128  133  135 #>  [6141,]  129  134  135 #>  [6142,]  129  134  135 #>  [6143,]  129  134  135 #>  [6144,]  129  134  135 #>  [6145,]  129  134  135 #>  [6146,]  129  134  135 #>  [6147,]  129  134  135 #>  [6148,]  128  133  135 #>  [6149,]  129  134  135 #>  [6150,]  129  134  135 #>  [6151,]  129  134  135 #>  [6152,]  129  134  136 #>  [6153,]  129  134  135 #>  [6154,]  129  134  135 #>  [6155,]  129  134  135 #>  [6156,]  129  134  135 #>  [6157,]  129  134  135 #>  [6158,]  129  134  135 #>  [6159,]  129  134  135 #>  [6160,]  129  134  135 #>  [6161,]  129  134  135 #>  [6162,]  129  134  135 #>  [6163,]  129  134  135 #>  [6164,]  129  134  135 #>  [6165,]  129  134  135 #>  [6166,]  129  134  135 #>  [6167,]  129  134  135 #>  [6168,]  129  134  135 #>  [6169,]  129  134  135 #>  [6170,]  128  133  135 #>  [6171,]  129  134  135 #>  [6172,]  129  134  135 #>  [6173,]  129  134  135 #>  [6174,]  128  133  135 #>  [6175,]  129  134  135 #>  [6176,]  129  134  136 #>  [6177,]  129  134  135 #>  [6178,]  129  134  135 #>  [6179,]  129  134  135 #>  [6180,]  129  134  135 #>  [6181,]  129  134  135 #>  [6182,]  128  133  135 #>  [6183,]  129  134  135 #>  [6184,]  129  134  135 #>  [6185,]  129  134  135 #>  [6186,]  129  134  136 #>  [6187,]  129  134  135 #>  [6188,]  129  134  135 #>  [6189,]  129  134  135 #>  [6190,]  129  134  135 #>  [6191,]  129  134  135 #>  [6192,]  129  134  135 #>  [6193,]  129  134  135 #>  [6194,]  129  134  135 #>  [6195,]  129  134  135 #>  [6196,]  129  134  135 #>  [6197,]  129  134  135 #>  [6198,]  128  133  135 #>  [6199,]  129  134  135 #>  [6200,]  129  134  135 #>  [6201,]  131  137  138 #>  [6202,]  130  135  137 #>  [6203,]  130  135  137 #>  [6204,]  131  136  138 #>  [6205,]  130  135  137 #>  [6206,]  130  135  137 #>  [6207,]  131  136  138 #>  [6208,]  130  135  137 #>  [6209,]  131  136  138 #>  [6210,]  131  136  138 #>  [6211,]  130  135  137 #>  [6212,]  130  135  137 #>  [6213,]  131  137  138 #>  [6214,]  131  137  138 #>  [6215,]  130  135  137 #>  [6216,]  131  137  138 #>  [6217,]  130  135  137 #>  [6218,]  130  135  137 #>  [6219,]  130  135  137 #>  [6220,]  131  136  138 #>  [6221,]  130  135  137 #>  [6222,]  131  136  138 #>  [6223,]  130  135  137 #>  [6224,]  131  136  138 #>  [6225,]  131  136  138 #>  [6226,]  130  135  137 #>  [6227,]  130  135  137 #>  [6228,]  131  136  138 #>  [6229,]  130  135  137 #>  [6230,]  130  135  137 #>  [6231,]  130  135  137 #>  [6232,]  130  135  137 #>  [6233,]  130  135  137 #>  [6234,]  130  135  137 #>  [6235,]  130  135  137 #>  [6236,]  131  136  138 #>  [6237,]  130  135  137 #>  [6238,]  130  135  137 #>  [6239,]  131  136  138 #>  [6240,]  130  135  137 #>  [6241,]  130  135  137 #>  [6242,]  130  135  137 #>  [6243,]  130  135  137 #>  [6244,]  130  135  137 #>  [6245,]  131  136  138 #>  [6246,]  130  135  137 #>  [6247,]  130  135  137 #>  [6248,]  130  135  137 #>  [6249,]  131  136  138 #>  [6250,]  131  137  138 #>  [6251,]  130  135  137 #>  [6252,]  131  136  138 #>  [6253,]  131  136  138 #>  [6254,]  131  136  138 #>  [6255,]  131  136  138 #>  [6256,]  130  135  137 #>  [6257,]  131  136  138 #>  [6258,]  131  136  138 #>  [6259,]  131  137  138 #>  [6260,]  130  135  137 #>  [6261,]  130  135  137 #>  [6262,]  130  135  137 #>  [6263,]  130  135  137 #>  [6264,]  130  135  137 #>  [6265,]  130  135  137 #>  [6266,]  130  135  137 #>  [6267,]  131  136  138 #>  [6268,]  130  135  137 #>  [6269,]  130  135  137 #>  [6270,]  130  135  137 #>  [6271,]  130  135  137 #>  [6272,]  131  136  138 #>  [6273,]  131  137  138 #>  [6274,]  130  135  137 #>  [6275,]  130  135  137 #>  [6276,]  131  136  138 #>  [6277,]  130  135  137 #>  [6278,]  130  135  137 #>  [6279,]  130  135  137 #>  [6280,]  130  135  137 #>  [6281,]  130  135  137 #>  [6282,]  130  135  137 #>  [6283,]  130  135  137 #>  [6284,]  130  135  137 #>  [6285,]  131  136  138 #>  [6286,]  131  136  138 #>  [6287,]  131  136  138 #>  [6288,]  130  135  137 #>  [6289,]  130  135  137 #>  [6290,]  131  136  138 #>  [6291,]  131  136  138 #>  [6292,]  130  135  137 #>  [6293,]  130  135  137 #>  [6294,]  130  135  137 #>  [6295,]  130  135  137 #>  [6296,]  130  135  137 #>  [6297,]  130  135  137 #>  [6298,]  130  135  137 #>  [6299,]  130  135  137 #>  [6300,]  130  135  137 #>  [6301,]  132  138  139 #>  [6302,]  133  139  140 #>  [6303,]  132  138  139 #>  [6304,]  132  138  139 #>  [6305,]  133  139  142 #>  [6306,]  132  138  139 #>  [6307,]  133  139  140 #>  [6308,]  132  138  139 #>  [6309,]  133  140  142 #>  [6310,]  133  139  142 #>  [6311,]  132  138  139 #>  [6312,]  133  139  140 #>  [6313,]  133  140  142 #>  [6314,]  132  138  139 #>  [6315,]  132  138  139 #>  [6316,]  132  138  139 #>  [6317,]  133  140  142 #>  [6318,]  133  140  140 #>  [6319,]  132  138  139 #>  [6320,]  133  140  140 #>  [6321,]  133  139  141 #>  [6322,]  133  139  142 #>  [6323,]  133  139  140 #>  [6324,]  133  139  142 #>  [6325,]  132  138  139 #>  [6326,]  132  138  139 #>  [6327,]  133  140  142 #>  [6328,]  132  138  139 #>  [6329,]  133  139  142 #>  [6330,]  133  139  141 #>  [6331,]  133  139  140 #>  [6332,]  133  139  140 #>  [6333,]  133  140  140 #>  [6334,]  132  138  139 #>  [6335,]  132  138  139 #>  [6336,]  133  140  142 #>  [6337,]  132  138  139 #>  [6338,]  132  138  139 #>  [6339,]  133  139  141 #>  [6340,]  133  139  140 #>  [6341,]  133  139  142 #>  [6342,]  132  138  139 #>  [6343,]  132  138  139 #>  [6344,]  133  139  142 #>  [6345,]  132  138  139 #>  [6346,]  132  138  139 #>  [6347,]  133  139  142 #>  [6348,]  133  139  140 #>  [6349,]  132  138  139 #>  [6350,]  133  139  142 #>  [6351,]  133  140  142 #>  [6352,]  132  138  139 #>  [6353,]  133  140  142 #>  [6354,]  133  140  142 #>  [6355,]  132  138  139 #>  [6356,]  132  138  139 #>  [6357,]  132  138  139 #>  [6358,]  133  139  142 #>  [6359,]  132  138  139 #>  [6360,]  133  139  140 #>  [6361,]  133  139  140 #>  [6362,]  132  138  139 #>  [6363,]  133  139  142 #>  [6364,]  132  138  139 #>  [6365,]  132  138  139 #>  [6366,]  132  138  139 #>  [6367,]  132  138  139 #>  [6368,]  132  138  139 #>  [6369,]  132  138  139 #>  [6370,]  133  139  140 #>  [6371,]  133  139  140 #>  [6372,]  132  138  139 #>  [6373,]  132  138  139 #>  [6374,]  133  139  142 #>  [6375,]  133  139  142 #>  [6376,]  133  139  142 #>  [6377,]  132  138  139 #>  [6378,]  133  139  140 #>  [6379,]  132  138  139 #>  [6380,]  133  139  141 #>  [6381,]  133  139  142 #>  [6382,]  132  138  139 #>  [6383,]  133  140  142 #>  [6384,]  133  140  140 #>  [6385,]  132  138  139 #>  [6386,]  133  139  142 #>  [6387,]  133  140  142 #>  [6388,]  133  139  142 #>  [6389,]  132  138  139 #>  [6390,]  133  139  142 #>  [6391,]  132  138  139 #>  [6392,]  133  139  142 #>  [6393,]  133  140  140 #>  [6394,]  132  138  139 #>  [6395,]  133  139  141 #>  [6396,]  132  138  139 #>  [6397,]  132  138  139 #>  [6398,]  132  138  139 #>  [6399,]  132  138  139 #>  [6400,]  132  138  139 #>  [6401,]  134  141  143 #>  [6402,]  134  141  143 #>  [6403,]  134  141  143 #>  [6404,]  135  142  144 #>  [6405,]  134  141  143 #>  [6406,]  134  141  143 #>  [6407,]  135  142  144 #>  [6408,]  134  141  143 #>  [6409,]  134  141  143 #>  [6410,]  135  142  144 #>  [6411,]  134  141  143 #>  [6412,]  134  141  143 #>  [6413,]  134  141  143 #>  [6414,]  134  141  143 #>  [6415,]  134  141  143 #>  [6416,]  135  142  144 #>  [6417,]  134  141  143 #>  [6418,]  134  141  143 #>  [6419,]  134  141  143 #>  [6420,]  135  142  144 #>  [6421,]  134  141  143 #>  [6422,]  134  141  143 #>  [6423,]  134  141  143 #>  [6424,]  135  142  144 #>  [6425,]  135  142  144 #>  [6426,]  134  141  143 #>  [6427,]  134  141  143 #>  [6428,]  135  142  144 #>  [6429,]  134  141  143 #>  [6430,]  134  141  143 #>  [6431,]  134  141  143 #>  [6432,]  134  141  143 #>  [6433,]  134  141  143 #>  [6434,]  134  141  143 #>  [6435,]  134  141  143 #>  [6436,]  134  141  143 #>  [6437,]  134  141  143 #>  [6438,]  134  141  143 #>  [6439,]  135  142  144 #>  [6440,]  134  141  143 #>  [6441,]  134  141  143 #>  [6442,]  134  141  143 #>  [6443,]  134  141  143 #>  [6444,]  134  141  143 #>  [6445,]  134  141  143 #>  [6446,]  134  141  143 #>  [6447,]  134  141  143 #>  [6448,]  134  141  143 #>  [6449,]  134  141  143 #>  [6450,]  135  142  144 #>  [6451,]  134  141  143 #>  [6452,]  135  142  144 #>  [6453,]  134  141  143 #>  [6454,]  135  142  144 #>  [6455,]  134  141  143 #>  [6456,]  134  141  143 #>  [6457,]  135  142  144 #>  [6458,]  134  141  143 #>  [6459,]  134  141  143 #>  [6460,]  134  141  143 #>  [6461,]  134  141  143 #>  [6462,]  134  141  143 #>  [6463,]  134  141  143 #>  [6464,]  134  141  143 #>  [6465,]  134  141  143 #>  [6466,]  134  141  143 #>  [6467,]  134  141  143 #>  [6468,]  134  141  143 #>  [6469,]  134  141  143 #>  [6470,]  134  141  143 #>  [6471,]  134  141  143 #>  [6472,]  134  141  143 #>  [6473,]  135  142  144 #>  [6474,]  134  141  143 #>  [6475,]  134  141  143 #>  [6476,]  135  142  144 #>  [6477,]  134  141  143 #>  [6478,]  134  141  143 #>  [6479,]  134  141  143 #>  [6480,]  134  141  143 #>  [6481,]  134  141  143 #>  [6482,]  134  141  143 #>  [6483,]  134  141  143 #>  [6484,]  134  141  143 #>  [6485,]  134  141  143 #>  [6486,]  135  142  144 #>  [6487,]  134  141  143 #>  [6488,]  134  141  143 #>  [6489,]  134  141  143 #>  [6490,]  134  141  143 #>  [6491,]  135  142  144 #>  [6492,]  134  141  143 #>  [6493,]  134  141  143 #>  [6494,]  134  141  143 #>  [6495,]  134  141  143 #>  [6496,]  134  141  143 #>  [6497,]  134  141  143 #>  [6498,]  134  141  143 #>  [6499,]  134  141  143 #>  [6500,]  134  141  143 #>  [6501,]  137  144  146 #>  [6502,]  137  144  146 #>  [6503,]  137  144  146 #>  [6504,]  136  143  145 #>  [6505,]  137  144  146 #>  [6506,]  137  144  146 #>  [6507,]  137  144  146 #>  [6508,]  136  143  145 #>  [6509,]  136  143  145 #>  [6510,]  136  143  145 #>  [6511,]  137  144  146 #>  [6512,]  137  144  146 #>  [6513,]  137  144  146 #>  [6514,]  137  144  146 #>  [6515,]  137  144  146 #>  [6516,]  137  144  146 #>  [6517,]  137  144  146 #>  [6518,]  137  144  146 #>  [6519,]  137  144  146 #>  [6520,]  137  144  146 #>  [6521,]  137  144  146 #>  [6522,]  137  144  146 #>  [6523,]  137  144  146 #>  [6524,]  137  144  146 #>  [6525,]  137  144  146 #>  [6526,]  137  144  146 #>  [6527,]  137  144  146 #>  [6528,]  137  144  146 #>  [6529,]  137  144  146 #>  [6530,]  137  144  146 #>  [6531,]  137  144  146 #>  [6532,]  137  144  146 #>  [6533,]  137  144  146 #>  [6534,]  137  144  146 #>  [6535,]  137  144  146 #>  [6536,]  137  144  146 #>  [6537,]  137  144  146 #>  [6538,]  137  144  146 #>  [6539,]  137  144  146 #>  [6540,]  137  144  146 #>  [6541,]  137  144  146 #>  [6542,]  137  144  146 #>  [6543,]  137  144  146 #>  [6544,]  137  144  146 #>  [6545,]  137  144  146 #>  [6546,]  137  144  146 #>  [6547,]  137  144  146 #>  [6548,]  137  144  146 #>  [6549,]  137  144  146 #>  [6550,]  137  144  146 #>  [6551,]  136  143  145 #>  [6552,]  137  144  146 #>  [6553,]  137  144  146 #>  [6554,]  137  144  146 #>  [6555,]  137  144  146 #>  [6556,]  137  144  146 #>  [6557,]  137  144  146 #>  [6558,]  137  144  146 #>  [6559,]  137  144  146 #>  [6560,]  137  144  146 #>  [6561,]  137  144  146 #>  [6562,]  137  144  146 #>  [6563,]  137  144  146 #>  [6564,]  137  144  146 #>  [6565,]  137  144  146 #>  [6566,]  137  144  146 #>  [6567,]  137  144  146 #>  [6568,]  137  144  146 #>  [6569,]  137  144  146 #>  [6570,]  137  144  146 #>  [6571,]  137  144  146 #>  [6572,]  137  144  146 #>  [6573,]  137  144  146 #>  [6574,]  137  144  146 #>  [6575,]  137  144  146 #>  [6576,]  137  144  146 #>  [6577,]  137  144  146 #>  [6578,]  137  144  146 #>  [6579,]  137  144  146 #>  [6580,]  137  144  146 #>  [6581,]  137  144  146 #>  [6582,]  137  144  146 #>  [6583,]  137  144  146 #>  [6584,]  137  144  146 #>  [6585,]  136  143  145 #>  [6586,]  137  144  146 #>  [6587,]  137  144  146 #>  [6588,]  137  144  146 #>  [6589,]  137  144  146 #>  [6590,]  137  144  146 #>  [6591,]  136  143  145 #>  [6592,]  137  144  146 #>  [6593,]  137  144  146 #>  [6594,]  137  144  146 #>  [6595,]  136  143  145 #>  [6596,]  137  144  146 #>  [6597,]  137  144  146 #>  [6598,]  137  144  146 #>  [6599,]  137  144  146 #>  [6600,]  137  144  146 #>  [6601,]  139  146  148 #>  [6602,]  139  145  149 #>  [6603,]  139  146  147 #>  [6604,]  138  146  147 #>  [6605,]  139  146  148 #>  [6606,]  139  145  149 #>  [6607,]  139  146  147 #>  [6608,]  138  146  147 #>  [6609,]  138  146  147 #>  [6610,]  138  146  148 #>  [6611,]  139  145  149 #>  [6612,]  139  145  149 #>  [6613,]  139  146  147 #>  [6614,]  139  146  148 #>  [6615,]  139  145  149 #>  [6616,]  139  146  147 #>  [6617,]  139  145  149 #>  [6618,]  139  146  148 #>  [6619,]  139  145  149 #>  [6620,]  139  146  147 #>  [6621,]  139  146  147 #>  [6622,]  139  146  148 #>  [6623,]  139  145  149 #>  [6624,]  139  146  147 #>  [6625,]  139  146  147 #>  [6626,]  139  145  149 #>  [6627,]  139  146  148 #>  [6628,]  139  146  147 #>  [6629,]  139  145  149 #>  [6630,]  139  145  149 #>  [6631,]  139  145  149 #>  [6632,]  139  146  148 #>  [6633,]  139  146  147 #>  [6634,]  139  145  149 #>  [6635,]  139  145  149 #>  [6636,]  139  146  147 #>  [6637,]  139  145  149 #>  [6638,]  139  146  148 #>  [6639,]  139  146  147 #>  [6640,]  139  146  147 #>  [6641,]  139  146  147 #>  [6642,]  139  145  149 #>  [6643,]  138  145  149 #>  [6644,]  139  145  149 #>  [6645,]  139  146  147 #>  [6646,]  139  145  149 #>  [6647,]  139  145  149 #>  [6648,]  139  145  149 #>  [6649,]  139  146  147 #>  [6650,]  139  146  147 #>  [6651,]  138  146  147 #>  [6652,]  139  146  148 #>  [6653,]  139  146  147 #>  [6654,]  139  146  147 #>  [6655,]  139  146  147 #>  [6656,]  139  145  149 #>  [6657,]  139  146  147 #>  [6658,]  139  146  148 #>  [6659,]  139  146  148 #>  [6660,]  138  145  149 #>  [6661,]  139  145  149 #>  [6662,]  139  146  147 #>  [6663,]  139  145  149 #>  [6664,]  138  145  149 #>  [6665,]  139  145  149 #>  [6666,]  139  145  149 #>  [6667,]  138  146  147 #>  [6668,]  139  145  149 #>  [6669,]  139  146  147 #>  [6670,]  139  145  149 #>  [6671,]  139  146  148 #>  [6672,]  139  146  147 #>  [6673,]  139  146  147 #>  [6674,]  139  146  147 #>  [6675,]  139  145  149 #>  [6676,]  139  146  147 #>  [6677,]  139  146  148 #>  [6678,]  139  145  149 #>  [6679,]  139  145  149 #>  [6680,]  139  146  147 #>  [6681,]  139  145  149 #>  [6682,]  139  146  147 #>  [6683,]  139  146  147 #>  [6684,]  139  146  147 #>  [6685,]  138  146  147 #>  [6686,]  139  146  147 #>  [6687,]  139  146  148 #>  [6688,]  139  146  147 #>  [6689,]  139  146  147 #>  [6690,]  139  146  148 #>  [6691,]  138  146  148 #>  [6692,]  139  145  149 #>  [6693,]  139  146  147 #>  [6694,]  139  145  149 #>  [6695,]  138  145  149 #>  [6696,]  139  145  149 #>  [6697,]  139  146  147 #>  [6698,]  139  146  147 #>  [6699,]  139  146  147 #>  [6700,]  139  145  149 #>  [6701,]  140  147  151 #>  [6702,]  141  148  150 #>  [6703,]  140  147  151 #>  [6704,]  141  148  150 #>  [6705,]  141  148  150 #>  [6706,]  140  147  151 #>  [6707,]  141  148  150 #>  [6708,]  141  148  150 #>  [6709,]  141  148  150 #>  [6710,]  141  148  150 #>  [6711,]  140  147  151 #>  [6712,]  141  148  150 #>  [6713,]  141  148  150 #>  [6714,]  140  147  151 #>  [6715,]  141  148  150 #>  [6716,]  140  147  151 #>  [6717,]  141  148  150 #>  [6718,]  141  148  150 #>  [6719,]  140  147  151 #>  [6720,]  141  148  150 #>  [6721,]  141  148  150 #>  [6722,]  141  148  150 #>  [6723,]  141  148  150 #>  [6724,]  141  148  150 #>  [6725,]  141  148  150 #>  [6726,]  140  147  151 #>  [6727,]  141  148  150 #>  [6728,]  140  147  151 #>  [6729,]  141  148  150 #>  [6730,]  141  148  150 #>  [6731,]  141  148  150 #>  [6732,]  141  148  150 #>  [6733,]  141  148  150 #>  [6734,]  140  147  151 #>  [6735,]  140  147  151 #>  [6736,]  141  148  150 #>  [6737,]  140  147  151 #>  [6738,]  140  147  151 #>  [6739,]  141  148  150 #>  [6740,]  141  148  150 #>  [6741,]  141  148  150 #>  [6742,]  140  147  151 #>  [6743,]  141  148  150 #>  [6744,]  141  148  150 #>  [6745,]  140  147  151 #>  [6746,]  141  148  150 #>  [6747,]  141  148  150 #>  [6748,]  141  148  150 #>  [6749,]  140  147  151 #>  [6750,]  141  148  150 #>  [6751,]  141  148  150 #>  [6752,]  140  147  151 #>  [6753,]  141  148  150 #>  [6754,]  141  148  150 #>  [6755,]  141  148  150 #>  [6756,]  141  148  150 #>  [6757,]  141  148  150 #>  [6758,]  141  148  150 #>  [6759,]  141  148  150 #>  [6760,]  141  148  150 #>  [6761,]  141  148  150 #>  [6762,]  141  148  150 #>  [6763,]  141  148  150 #>  [6764,]  140  147  151 #>  [6765,]  141  148  150 #>  [6766,]  141  148  150 #>  [6767,]  141  148  150 #>  [6768,]  140  147  151 #>  [6769,]  141  148  150 #>  [6770,]  141  148  150 #>  [6771,]  141  148  150 #>  [6772,]  140  147  151 #>  [6773,]  140  147  151 #>  [6774,]  141  148  150 #>  [6775,]  141  148  150 #>  [6776,]  141  148  150 #>  [6777,]  140  147  151 #>  [6778,]  141  148  150 #>  [6779,]  141  148  150 #>  [6780,]  141  148  150 #>  [6781,]  141  148  150 #>  [6782,]  141  148  150 #>  [6783,]  141  148  150 #>  [6784,]  141  148  150 #>  [6785,]  141  148  150 #>  [6786,]  141  148  150 #>  [6787,]  141  148  150 #>  [6788,]  141  148  150 #>  [6789,]  140  147  151 #>  [6790,]  141  148  150 #>  [6791,]  141  148  150 #>  [6792,]  141  148  150 #>  [6793,]  141  148  150 #>  [6794,]  140  147  151 #>  [6795,]  141  148  150 #>  [6796,]  140  147  151 #>  [6797,]  140  147  151 #>  [6798,]  141  148  150 #>  [6799,]  141  148  150 #>  [6800,]  140  147  151 #>  [6801,]  143  150  153 #>  [6802,]  143  150  153 #>  [6803,]  143  150  153 #>  [6804,]  143  150  153 #>  [6805,]  143  150  153 #>  [6806,]  143  150  153 #>  [6807,]  143  150  153 #>  [6808,]  143  150  153 #>  [6809,]  143  150  153 #>  [6810,]  143  150  153 #>  [6811,]  143  150  153 #>  [6812,]  143  150  153 #>  [6813,]  143  150  153 #>  [6814,]  143  150  153 #>  [6815,]  143  150  153 #>  [6816,]  143  150  153 #>  [6817,]  143  150  153 #>  [6818,]  143  150  153 #>  [6819,]  143  150  153 #>  [6820,]  142  149  152 #>  [6821,]  142  149  152 #>  [6822,]  143  150  153 #>  [6823,]  143  150  153 #>  [6824,]  143  150  153 #>  [6825,]  142  149  152 #>  [6826,]  143  150  153 #>  [6827,]  143  150  153 #>  [6828,]  143  150  153 #>  [6829,]  143  150  153 #>  [6830,]  143  150  153 #>  [6831,]  143  150  153 #>  [6832,]  143  150  153 #>  [6833,]  143  150  153 #>  [6834,]  143  150  153 #>  [6835,]  143  150  153 #>  [6836,]  143  150  153 #>  [6837,]  143  150  153 #>  [6838,]  143  150  153 #>  [6839,]  143  150  153 #>  [6840,]  143  150  153 #>  [6841,]  143  150  153 #>  [6842,]  143  150  153 #>  [6843,]  143  150  153 #>  [6844,]  143  150  153 #>  [6845,]  143  150  153 #>  [6846,]  143  150  153 #>  [6847,]  143  150  153 #>  [6848,]  143  150  153 #>  [6849,]  143  150  153 #>  [6850,]  143  150  153 #>  [6851,]  143  150  153 #>  [6852,]  143  150  153 #>  [6853,]  143  150  153 #>  [6854,]  143  150  153 #>  [6855,]  143  150  153 #>  [6856,]  142  149  152 #>  [6857,]  143  150  153 #>  [6858,]  143  150  153 #>  [6859,]  143  150  153 #>  [6860,]  143  150  153 #>  [6861,]  143  150  153 #>  [6862,]  143  150  153 #>  [6863,]  143  150  153 #>  [6864,]  143  150  153 #>  [6865,]  142  149  152 #>  [6866,]  143  150  153 #>  [6867,]  143  150  153 #>  [6868,]  143  150  153 #>  [6869,]  143  150  153 #>  [6870,]  143  150  153 #>  [6871,]  143  150  153 #>  [6872,]  143  150  153 #>  [6873,]  143  150  153 #>  [6874,]  142  149  152 #>  [6875,]  143  150  153 #>  [6876,]  143  150  153 #>  [6877,]  143  150  153 #>  [6878,]  143  150  153 #>  [6879,]  143  150  153 #>  [6880,]  142  149  152 #>  [6881,]  143  150  153 #>  [6882,]  143  150  153 #>  [6883,]  143  150  153 #>  [6884,]  143  150  153 #>  [6885,]  142  149  152 #>  [6886,]  142  149  152 #>  [6887,]  143  150  153 #>  [6888,]  143  150  153 #>  [6889,]  142  149  152 #>  [6890,]  143  150  153 #>  [6891,]  143  150  153 #>  [6892,]  143  150  153 #>  [6893,]  143  150  153 #>  [6894,]  143  150  153 #>  [6895,]  143  150  153 #>  [6896,]  143  150  153 #>  [6897,]  143  150  153 #>  [6898,]  143  150  153 #>  [6899,]  143  150  153 #>  [6900,]  143  150  153 #>  [6901,]  145  152  154 #>  [6902,]  144  151  154 #>  [6903,]  145  152  154 #>  [6904,]  145  152  154 #>  [6905,]  145  152  154 #>  [6906,]  144  151  154 #>  [6907,]  145  152  154 #>  [6908,]  145  152  154 #>  [6909,]  145  152  154 #>  [6910,]  145  152  154 #>  [6911,]  144  151  154 #>  [6912,]  144  151  154 #>  [6913,]  145  152  154 #>  [6914,]  145  152  154 #>  [6915,]  144  151  154 #>  [6916,]  145  152  154 #>  [6917,]  144  151  154 #>  [6918,]  144  151  154 #>  [6919,]  144  151  154 #>  [6920,]  145  152  154 #>  [6921,]  144  151  154 #>  [6922,]  145  152  154 #>  [6923,]  144  151  154 #>  [6924,]  146  153  154 #>  [6925,]  145  152  154 #>  [6926,]  144  151  154 #>  [6927,]  145  152  154 #>  [6928,]  146  153  154 #>  [6929,]  144  151  154 #>  [6930,]  144  151  154 #>  [6931,]  144  151  154 #>  [6932,]  144  151  154 #>  [6933,]  145  152  154 #>  [6934,]  144  151  154 #>  [6935,]  144  151  154 #>  [6936,]  145  152  154 #>  [6937,]  144  151  154 #>  [6938,]  144  151  154 #>  [6939,]  145  152  154 #>  [6940,]  145  152  154 #>  [6941,]  145  152  154 #>  [6942,]  144  151  154 #>  [6943,]  144  151  154 #>  [6944,]  144  151  154 #>  [6945,]  145  152  154 #>  [6946,]  144  151  154 #>  [6947,]  144  151  154 #>  [6948,]  144  151  154 #>  [6949,]  145  152  154 #>  [6950,]  145  152  154 #>  [6951,]  144  151  154 #>  [6952,]  146  153  154 #>  [6953,]  145  152  154 #>  [6954,]  145  152  154 #>  [6955,]  145  152  154 #>  [6956,]  144  151  154 #>  [6957,]  145  152  154 #>  [6958,]  145  152  154 #>  [6959,]  145  152  154 #>  [6960,]  144  151  154 #>  [6961,]  144  151  154 #>  [6962,]  144  151  154 #>  [6963,]  144  151  154 #>  [6964,]  144  151  154 #>  [6965,]  144  151  154 #>  [6966,]  144  151  154 #>  [6967,]  145  152  154 #>  [6968,]  144  151  154 #>  [6969,]  144  151  154 #>  [6970,]  144  151  154 #>  [6971,]  145  152  154 #>  [6972,]  145  152  154 #>  [6973,]  145  152  154 #>  [6974,]  145  152  154 #>  [6975,]  144  151  154 #>  [6976,]  146  153  154 #>  [6977,]  145  152  154 #>  [6978,]  144  151  154 #>  [6979,]  144  151  154 #>  [6980,]  145  152  154 #>  [6981,]  144  151  154 #>  [6982,]  144  151  154 #>  [6983,]  145  152  154 #>  [6984,]  145  152  154 #>  [6985,]  145  152  154 #>  [6986,]  146  153  154 #>  [6987,]  145  152  154 #>  [6988,]  145  152  154 #>  [6989,]  144  151  154 #>  [6990,]  145  152  154 #>  [6991,]  145  152  154 #>  [6992,]  144  151  154 #>  [6993,]  144  151  154 #>  [6994,]  144  151  154 #>  [6995,]  144  151  154 #>  [6996,]  144  151  154 #>  [6997,]  144  151  154 #>  [6998,]  144  151  154 #>  [6999,]  145  152  154 #>  [7000,]  144  151  154 #>  [7001,]  148  155  156 #>  [7002,]  148  155  156 #>  [7003,]  148  155  156 #>  [7004,]  147  154  155 #>  [7005,]  148  155  156 #>  [7006,]  148  155  156 #>  [7007,]  148  155  156 #>  [7008,]  147  154  155 #>  [7009,]  147  154  155 #>  [7010,]  147  154  155 #>  [7011,]  148  155  156 #>  [7012,]  148  155  156 #>  [7013,]  148  155  156 #>  [7014,]  148  155  156 #>  [7015,]  148  155  156 #>  [7016,]  148  155  156 #>  [7017,]  148  155  156 #>  [7018,]  147  154  155 #>  [7019,]  148  155  156 #>  [7020,]  147  154  155 #>  [7021,]  148  155  156 #>  [7022,]  148  155  156 #>  [7023,]  148  155  156 #>  [7024,]  147  154  155 #>  [7025,]  148  155  156 #>  [7026,]  148  155  156 #>  [7027,]  148  155  156 #>  [7028,]  148  155  156 #>  [7029,]  148  155  156 #>  [7030,]  147  154  155 #>  [7031,]  148  155  156 #>  [7032,]  148  155  156 #>  [7033,]  148  155  156 #>  [7034,]  148  155  156 #>  [7035,]  148  155  156 #>  [7036,]  148  155  156 #>  [7037,]  148  155  156 #>  [7038,]  148  155  156 #>  [7039,]  147  154  155 #>  [7040,]  148  155  156 #>  [7041,]  148  155  156 #>  [7042,]  148  155  156 #>  [7043,]  147  154  155 #>  [7044,]  148  155  156 #>  [7045,]  147  154  155 #>  [7046,]  148  155  156 #>  [7047,]  148  155  156 #>  [7048,]  148  155  156 #>  [7049,]  147  154  155 #>  [7050,]  148  155  156 #>  [7051,]  147  154  155 #>  [7052,]  148  155  156 #>  [7053,]  147  154  155 #>  [7054,]  148  155  156 #>  [7055,]  148  155  156 #>  [7056,]  147  154  155 #>  [7057,]  148  155  156 #>  [7058,]  148  155  156 #>  [7059,]  148  155  156 #>  [7060,]  147  154  155 #>  [7061,]  148  155  156 #>  [7062,]  148  155  156 #>  [7063,]  148  155  156 #>  [7064,]  147  154  155 #>  [7065,]  147  154  155 #>  [7066,]  147  154  155 #>  [7067,]  147  154  155 #>  [7068,]  148  155  156 #>  [7069,]  148  155  156 #>  [7070,]  148  155  156 #>  [7071,]  148  155  156 #>  [7072,]  148  155  156 #>  [7073,]  148  155  156 #>  [7074,]  148  155  156 #>  [7075,]  148  155  156 #>  [7076,]  148  155  156 #>  [7077,]  148  155  156 #>  [7078,]  147  154  155 #>  [7079,]  148  155  156 #>  [7080,]  148  155  156 #>  [7081,]  148  155  156 #>  [7082,]  148  155  156 #>  [7083,]  148  155  156 #>  [7084,]  148  155  156 #>  [7085,]  147  154  155 #>  [7086,]  148  155  156 #>  [7087,]  148  155  156 #>  [7088,]  148  155  156 #>  [7089,]  147  154  155 #>  [7090,]  148  155  156 #>  [7091,]  147  154  155 #>  [7092,]  148  155  156 #>  [7093,]  148  155  156 #>  [7094,]  148  155  156 #>  [7095,]  147  154  155 #>  [7096,]  148  155  156 #>  [7097,]  148  155  156 #>  [7098,]  148  155  156 #>  [7099,]  148  155  156 #>  [7100,]  148  155  156 #>  [7101,]  151  157  158 #>  [7102,]  149  156  157 #>  [7103,]  149  156  157 #>  [7104,]  149  156  158 #>  [7105,]  150  157  158 #>  [7106,]  149  156  158 #>  [7107,]  149  156  157 #>  [7108,]  149  156  158 #>  [7109,]  149  156  158 #>  [7110,]  151  157  157 #>  [7111,]  150  157  158 #>  [7112,]  150  157  158 #>  [7113,]  149  156  157 #>  [7114,]  150  157  158 #>  [7115,]  151  157  158 #>  [7116,]  149  156  157 #>  [7117,]  151  157  158 #>  [7118,]  151  157  157 #>  [7119,]  149  156  157 #>  [7120,]  149  156  158 #>  [7121,]  149  156  157 #>  [7122,]  150  157  157 #>  [7123,]  149  156  157 #>  [7124,]  149  156  157 #>  [7125,]  149  156  158 #>  [7126,]  150  157  158 #>  [7127,]  151  157  158 #>  [7128,]  149  156  158 #>  [7129,]  149  156  157 #>  [7130,]  149  156  157 #>  [7131,]  150  157  157 #>  [7132,]  150  157  157 #>  [7133,]  149  156  158 #>  [7134,]  149  156  157 #>  [7135,]  149  156  157 #>  [7136,]  149  156  157 #>  [7137,]  149  156  157 #>  [7138,]  150  157  158 #>  [7139,]  151  157  157 #>  [7140,]  149  156  157 #>  [7141,]  149  156  158 #>  [7142,]  149  156  158 #>  [7143,]  151  157  158 #>  [7144,]  149  156  157 #>  [7145,]  149  156  158 #>  [7146,]  149  156  158 #>  [7147,]  151  157  157 #>  [7148,]  149  156  157 #>  [7149,]  149  156  157 #>  [7150,]  149  156  158 #>  [7151,]  149  156  158 #>  [7152,]  150  157  158 #>  [7153,]  149  156  158 #>  [7154,]  149  156  157 #>  [7155,]  149  156  158 #>  [7156,]  149  156  158 #>  [7157,]  149  156  158 #>  [7158,]  150  157  158 #>  [7159,]  150  157  157 #>  [7160,]  149  156  158 #>  [7161,]  151  157  158 #>  [7162,]  149  156  157 #>  [7163,]  149  156  158 #>  [7164,]  149  156  158 #>  [7165,]  149  156  158 #>  [7166,]  150  157  158 #>  [7167,]  149  156  158 #>  [7168,]  150  157  158 #>  [7169,]  149  156  158 #>  [7170,]  151  157  157 #>  [7171,]  151  157  158 #>  [7172,]  149  156  158 #>  [7173,]  149  156  158 #>  [7174,]  149  156  158 #>  [7175,]  151  157  158 #>  [7176,]  149  156  158 #>  [7177,]  151  157  157 #>  [7178,]  149  156  158 #>  [7179,]  151  157  157 #>  [7180,]  149  156  157 #>  [7181,]  149  156  158 #>  [7182,]  149  156  158 #>  [7183,]  150  157  157 #>  [7184,]  149  156  158 #>  [7185,]  149  156  157 #>  [7186,]  149  156  157 #>  [7187,]  151  157  158 #>  [7188,]  149  156  158 #>  [7189,]  149  156  158 #>  [7190,]  151  157  158 #>  [7191,]  150  157  158 #>  [7192,]  150  157  158 #>  [7193,]  149  156  157 #>  [7194,]  149  156  158 #>  [7195,]  151  157  157 #>  [7196,]  151  157  158 #>  [7197,]  149  156  158 #>  [7198,]  149  156  157 #>  [7199,]  149  156  158 #>  [7200,]  151  157  157 #>  [7201,]  153  159  160 #>  [7202,]  152  158  159 #>  [7203,]  152  158  159 #>  [7204,]  152  158  159 #>  [7205,]  153  159  160 #>  [7206,]  152  158  159 #>  [7207,]  152  158  159 #>  [7208,]  152  158  159 #>  [7209,]  153  159  160 #>  [7210,]  152  158  159 #>  [7211,]  153  159  160 #>  [7212,]  152  158  159 #>  [7213,]  153  159  160 #>  [7214,]  152  158  159 #>  [7215,]  152  158  159 #>  [7216,]  152  158  159 #>  [7217,]  153  159  160 #>  [7218,]  153  159  160 #>  [7219,]  153  159  160 #>  [7220,]  153  159  160 #>  [7221,]  153  159  160 #>  [7222,]  153  159  160 #>  [7223,]  152  158  159 #>  [7224,]  153  159  160 #>  [7225,]  152  158  159 #>  [7226,]  152  158  159 #>  [7227,]  153  159  160 #>  [7228,]  153  159  160 #>  [7229,]  153  159  160 #>  [7230,]  152  158  159 #>  [7231,]  152  158  159 #>  [7232,]  152  158  159 #>  [7233,]  153  159  160 #>  [7234,]  152  158  159 #>  [7235,]  152  158  159 #>  [7236,]  153  159  160 #>  [7237,]  152  158  159 #>  [7238,]  153  159  160 #>  [7239,]  153  159  160 #>  [7240,]  152  158  159 #>  [7241,]  153  159  160 #>  [7242,]  153  159  160 #>  [7243,]  152  158  159 #>  [7244,]  152  158  159 #>  [7245,]  152  158  159 #>  [7246,]  152  158  159 #>  [7247,]  152  158  159 #>  [7248,]  152  158  159 #>  [7249,]  152  158  159 #>  [7250,]  152  158  159 #>  [7251,]  153  159  160 #>  [7252,]  152  158  159 #>  [7253,]  153  159  160 #>  [7254,]  153  159  160 #>  [7255,]  152  158  159 #>  [7256,]  153  159  160 #>  [7257,]  152  158  159 #>  [7258,]  153  159  160 #>  [7259,]  152  158  159 #>  [7260,]  152  158  159 #>  [7261,]  153  159  160 #>  [7262,]  153  159  160 #>  [7263,]  152  158  159 #>  [7264,]  153  159  160 #>  [7265,]  153  159  160 #>  [7266,]  153  159  160 #>  [7267,]  152  158  159 #>  [7268,]  152  158  159 #>  [7269,]  152  158  159 #>  [7270,]  153  159  160 #>  [7271,]  152  158  159 #>  [7272,]  152  158  159 #>  [7273,]  153  159  160 #>  [7274,]  152  158  159 #>  [7275,]  152  158  159 #>  [7276,]  152  158  159 #>  [7277,]  153  159  160 #>  [7278,]  152  158  159 #>  [7279,]  153  159  160 #>  [7280,]  152  158  159 #>  [7281,]  153  159  160 #>  [7282,]  153  159  160 #>  [7283,]  153  159  160 #>  [7284,]  153  159  160 #>  [7285,]  153  159  160 #>  [7286,]  152  158  159 #>  [7287,]  153  159  160 #>  [7288,]  152  158  159 #>  [7289,]  153  159  160 #>  [7290,]  153  159  160 #>  [7291,]  153  159  160 #>  [7292,]  152  158  159 #>  [7293,]  153  159  160 #>  [7294,]  153  159  160 #>  [7295,]  152  158  159 #>  [7296,]  152  158  159 #>  [7297,]  152  158  159 #>  [7298,]  152  158  159 #>  [7299,]  153  159  160 #>  [7300,]  153  159  160 #>  [7301,]  154  162  162 #>  [7302,]  154  162  162 #>  [7303,]  154  161  161 #>  [7304,]  154  162  162 #>  [7305,]  154  162  162 #>  [7306,]  154  162  162 #>  [7307,]  154  161  161 #>  [7308,]  154  161  161 #>  [7309,]  154  162  162 #>  [7310,]  154  162  162 #>  [7311,]  154  162  162 #>  [7312,]  154  162  162 #>  [7313,]  154  161  161 #>  [7314,]  154  162  162 #>  [7315,]  154  160  162 #>  [7316,]  154  161  161 #>  [7317,]  154  160  161 #>  [7318,]  154  162  162 #>  [7319,]  154  162  162 #>  [7320,]  154  161  161 #>  [7321,]  154  162  162 #>  [7322,]  154  161  161 #>  [7323,]  154  162  162 #>  [7324,]  154  161  161 #>  [7325,]  154  161  161 #>  [7326,]  154  162  162 #>  [7327,]  154  162  162 #>  [7328,]  154  162  162 #>  [7329,]  154  162  162 #>  [7330,]  154  162  162 #>  [7331,]  154  160  162 #>  [7332,]  154  162  162 #>  [7333,]  154  162  162 #>  [7334,]  154  160  162 #>  [7335,]  154  162  162 #>  [7336,]  154  162  162 #>  [7337,]  154  160  162 #>  [7338,]  154  162  162 #>  [7339,]  154  161  161 #>  [7340,]  154  161  161 #>  [7341,]  154  162  162 #>  [7342,]  154  160  162 #>  [7343,]  154  160  161 #>  [7344,]  154  160  161 #>  [7345,]  154  161  161 #>  [7346,]  154  161  161 #>  [7347,]  154  161  161 #>  [7348,]  154  160  162 #>  [7349,]  154  161  161 #>  [7350,]  154  161  161 #>  [7351,]  154  161  161 #>  [7352,]  154  162  162 #>  [7353,]  154  161  161 #>  [7354,]  154  161  161 #>  [7355,]  154  161  161 #>  [7356,]  154  161  161 #>  [7357,]  154  162  162 #>  [7358,]  154  162  162 #>  [7359,]  154  161  161 #>  [7360,]  154  162  162 #>  [7361,]  154  162  162 #>  [7362,]  154  162  162 #>  [7363,]  154  160  161 #>  [7364,]  154  162  162 #>  [7365,]  154  161  161 #>  [7366,]  154  161  161 #>  [7367,]  154  162  162 #>  [7368,]  154  162  162 #>  [7369,]  154  162  162 #>  [7370,]  154  160  161 #>  [7371,]  154  162  162 #>  [7372,]  154  161  161 #>  [7373,]  154  162  162 #>  [7374,]  154  162  162 #>  [7375,]  154  160  162 #>  [7376,]  154  161  161 #>  [7377,]  154  161  161 #>  [7378,]  154  160  161 #>  [7379,]  154  160  161 #>  [7380,]  154  162  162 #>  [7381,]  154  162  162 #>  [7382,]  154  162  162 #>  [7383,]  154  161  161 #>  [7384,]  154  161  161 #>  [7385,]  154  162  162 #>  [7386,]  154  161  161 #>  [7387,]  154  162  162 #>  [7388,]  154  162  162 #>  [7389,]  154  161  161 #>  [7390,]  154  161  161 #>  [7391,]  154  162  162 #>  [7392,]  154  162  162 #>  [7393,]  154  162  162 #>  [7394,]  154  161  161 #>  [7395,]  154  160  162 #>  [7396,]  154  162  162 #>  [7397,]  154  162  162 #>  [7398,]  154  161  161 #>  [7399,]  154  162  162 #>  [7400,]  154  160  161 #>  [7401,]  155  163  163 #>  [7402,]  155  163  163 #>  [7403,]  155  163  163 #>  [7404,]  155  164  164 #>  [7405,]  155  163  163 #>  [7406,]  155  163  163 #>  [7407,]  155  163  163 #>  [7408,]  155  163  163 #>  [7409,]  155  163  163 #>  [7410,]  155  164  164 #>  [7411,]  155  163  163 #>  [7412,]  155  163  163 #>  [7413,]  155  163  163 #>  [7414,]  155  163  163 #>  [7415,]  155  164  164 #>  [7416,]  155  163  163 #>  [7417,]  155  163  163 #>  [7418,]  155  164  164 #>  [7419,]  155  163  163 #>  [7420,]  155  163  163 #>  [7421,]  155  164  164 #>  [7422,]  155  163  163 #>  [7423,]  155  164  164 #>  [7424,]  155  163  163 #>  [7425,]  155  164  164 #>  [7426,]  155  163  163 #>  [7427,]  155  163  163 #>  [7428,]  155  163  163 #>  [7429,]  155  163  163 #>  [7430,]  155  163  163 #>  [7431,]  155  163  163 #>  [7432,]  155  163  163 #>  [7433,]  155  163  163 #>  [7434,]  155  163  163 #>  [7435,]  155  163  163 #>  [7436,]  155  163  163 #>  [7437,]  155  163  163 #>  [7438,]  155  163  163 #>  [7439,]  155  164  164 #>  [7440,]  155  163  163 #>  [7441,]  155  163  163 #>  [7442,]  155  163  163 #>  [7443,]  155  164  164 #>  [7444,]  155  163  163 #>  [7445,]  155  164  164 #>  [7446,]  155  163  163 #>  [7447,]  155  163  163 #>  [7448,]  155  163  163 #>  [7449,]  155  163  163 #>  [7450,]  155  163  163 #>  [7451,]  155  163  163 #>  [7452,]  155  163  163 #>  [7453,]  155  164  164 #>  [7454,]  155  163  163 #>  [7455,]  155  163  163 #>  [7456,]  155  163  163 #>  [7457,]  155  163  163 #>  [7458,]  155  163  163 #>  [7459,]  155  163  163 #>  [7460,]  155  163  163 #>  [7461,]  155  164  164 #>  [7462,]  155  163  163 #>  [7463,]  155  163  163 #>  [7464,]  155  163  163 #>  [7465,]  155  163  163 #>  [7466,]  155  163  163 #>  [7467,]  155  163  163 #>  [7468,]  155  163  163 #>  [7469,]  155  163  163 #>  [7470,]  155  163  163 #>  [7471,]  155  163  163 #>  [7472,]  155  164  164 #>  [7473,]  155  164  164 #>  [7474,]  155  164  164 #>  [7475,]  155  164  164 #>  [7476,]  155  164  164 #>  [7477,]  155  164  164 #>  [7478,]  155  163  163 #>  [7479,]  155  163  163 #>  [7480,]  155  163  163 #>  [7481,]  155  163  163 #>  [7482,]  155  163  163 #>  [7483,]  155  163  163 #>  [7484,]  155  164  164 #>  [7485,]  155  163  163 #>  [7486,]  155  163  163 #>  [7487,]  155  163  163 #>  [7488,]  155  163  163 #>  [7489,]  155  163  163 #>  [7490,]  155  163  163 #>  [7491,]  155  163  163 #>  [7492,]  155  163  163 #>  [7493,]  155  163  163 #>  [7494,]  155  164  164 #>  [7495,]  155  164  164 #>  [7496,]  155  163  163 #>  [7497,]  155  163  163 #>  [7498,]  155  163  163 #>  [7499,]  155  163  163 #>  [7500,]  155  164  164 #>  [7501,]  156  165  165 #>  [7502,]  156  166  166 #>  [7503,]  156  165  165 #>  [7504,]  156  165  165 #>  [7505,]  156  165  165 #>  [7506,]  156  165  165 #>  [7507,]  156  165  165 #>  [7508,]  156  165  165 #>  [7509,]  156  166  166 #>  [7510,]  156  166  166 #>  [7511,]  156  165  165 #>  [7512,]  156  166  166 #>  [7513,]  156  165  165 #>  [7514,]  156  165  165 #>  [7515,]  156  165  165 #>  [7516,]  156  165  165 #>  [7517,]  156  166  166 #>  [7518,]  156  165  165 #>  [7519,]  156  165  165 #>  [7520,]  156  165  165 #>  [7521,]  156  166  166 #>  [7522,]  156  165  165 #>  [7523,]  156  165  165 #>  [7524,]  156  165  165 #>  [7525,]  156  165  165 #>  [7526,]  156  165  165 #>  [7527,]  156  165  165 #>  [7528,]  156  165  165 #>  [7529,]  156  166  166 #>  [7530,]  156  165  165 #>  [7531,]  156  165  165 #>  [7532,]  156  165  165 #>  [7533,]  156  166  166 #>  [7534,]  156  165  165 #>  [7535,]  156  165  165 #>  [7536,]  156  165  165 #>  [7537,]  156  165  165 #>  [7538,]  156  165  165 #>  [7539,]  156  165  165 #>  [7540,]  156  165  165 #>  [7541,]  156  165  165 #>  [7542,]  156  165  165 #>  [7543,]  156  165  165 #>  [7544,]  156  165  165 #>  [7545,]  156  165  165 #>  [7546,]  156  165  165 #>  [7547,]  156  165  165 #>  [7548,]  156  165  165 #>  [7549,]  156  165  165 #>  [7550,]  156  165  165 #>  [7551,]  156  165  165 #>  [7552,]  156  165  165 #>  [7553,]  156  165  165 #>  [7554,]  156  165  165 #>  [7555,]  156  165  165 #>  [7556,]  156  165  165 #>  [7557,]  156  165  165 #>  [7558,]  156  165  165 #>  [7559,]  156  165  165 #>  [7560,]  156  166  166 #>  [7561,]  156  165  165 #>  [7562,]  156  165  165 #>  [7563,]  156  166  166 #>  [7564,]  156  165  165 #>  [7565,]  156  165  165 #>  [7566,]  156  165  165 #>  [7567,]  156  165  165 #>  [7568,]  156  165  165 #>  [7569,]  156  165  165 #>  [7570,]  156  166  166 #>  [7571,]  156  165  165 #>  [7572,]  156  165  165 #>  [7573,]  156  165  165 #>  [7574,]  156  165  165 #>  [7575,]  156  165  165 #>  [7576,]  156  165  165 #>  [7577,]  156  165  165 #>  [7578,]  156  165  165 #>  [7579,]  156  165  165 #>  [7580,]  156  166  166 #>  [7581,]  156  166  166 #>  [7582,]  156  165  165 #>  [7583,]  156  165  165 #>  [7584,]  156  165  165 #>  [7585,]  156  165  165 #>  [7586,]  156  166  166 #>  [7587,]  156  165  165 #>  [7588,]  156  165  165 #>  [7589,]  156  165  165 #>  [7590,]  156  165  165 #>  [7591,]  156  165  165 #>  [7592,]  156  165  165 #>  [7593,]  156  165  165 #>  [7594,]  156  165  165 #>  [7595,]  156  165  165 #>  [7596,]  156  165  165 #>  [7597,]  156  165  165 #>  [7598,]  156  165  165 #>  [7599,]  156  165  165 #>  [7600,]  156  165  165 #>  [7601,]  157  167  167 #>  [7602,]  158  168  167 #>  [7603,]  157  167  167 #>  [7604,]  157  167  167 #>  [7605,]  157  167  167 #>  [7606,]  157  167  168 #>  [7607,]  157  167  167 #>  [7608,]  157  167  168 #>  [7609,]  158  168  168 #>  [7610,]  158  168  167 #>  [7611,]  157  167  167 #>  [7612,]  158  168  168 #>  [7613,]  158  168  167 #>  [7614,]  157  167  167 #>  [7615,]  157  167  168 #>  [7616,]  157  167  167 #>  [7617,]  158  168  167 #>  [7618,]  157  167  167 #>  [7619,]  157  167  167 #>  [7620,]  157  167  167 #>  [7621,]  158  168  167 #>  [7622,]  157  167  167 #>  [7623,]  157  167  167 #>  [7624,]  158  168  167 #>  [7625,]  157  167  167 #>  [7626,]  157  167  168 #>  [7627,]  157  167  167 #>  [7628,]  157  167  167 #>  [7629,]  158  168  167 #>  [7630,]  157  167  167 #>  [7631,]  157  167  167 #>  [7632,]  158  168  167 #>  [7633,]  158  168  168 #>  [7634,]  157  167  167 #>  [7635,]  157  167  167 #>  [7636,]  157  167  167 #>  [7637,]  157  167  167 #>  [7638,]  157  167  167 #>  [7639,]  157  167  167 #>  [7640,]  158  168  167 #>  [7641,]  157  167  167 #>  [7642,]  157  167  167 #>  [7643,]  157  167  168 #>  [7644,]  157  167  167 #>  [7645,]  157  167  168 #>  [7646,]  157  167  168 #>  [7647,]  157  167  167 #>  [7648,]  157  167  167 #>  [7649,]  157  167  167 #>  [7650,]  157  167  167 #>  [7651,]  157  167  168 #>  [7652,]  157  167  167 #>  [7653,]  158  168  167 #>  [7654,]  157  167  167 #>  [7655,]  157  167  167 #>  [7656,]  157  167  168 #>  [7657,]  157  167  168 #>  [7658,]  157  167  167 #>  [7659,]  157  167  167 #>  [7660,]  158  168  167 #>  [7661,]  158  168  168 #>  [7662,]  157  167  167 #>  [7663,]  158  168  167 #>  [7664,]  157  167  168 #>  [7665,]  157  167  167 #>  [7666,]  157  167  168 #>  [7667,]  157  167  167 #>  [7668,]  157  167  168 #>  [7669,]  157  167  167 #>  [7670,]  158  168  167 #>  [7671,]  157  167  167 #>  [7672,]  157  167  167 #>  [7673,]  157  167  167 #>  [7674,]  157  167  167 #>  [7675,]  158  168  167 #>  [7676,]  157  167  168 #>  [7677,]  157  167  167 #>  [7678,]  157  167  167 #>  [7679,]  157  167  167 #>  [7680,]  158  168  167 #>  [7681,]  158  168  167 #>  [7682,]  157  167  167 #>  [7683,]  158  168  167 #>  [7684,]  157  167  167 #>  [7685,]  157  167  167 #>  [7686,]  158  168  167 #>  [7687,]  157  167  167 #>  [7688,]  157  167  167 #>  [7689,]  157  167  167 #>  [7690,]  157  167  167 #>  [7691,]  157  167  167 #>  [7692,]  157  167  167 #>  [7693,]  157  167  167 #>  [7694,]  157  167  168 #>  [7695,]  157  167  167 #>  [7696,]  157  167  168 #>  [7697,]  157  167  167 #>  [7698,]  157  167  167 #>  [7699,]  157  167  167 #>  [7700,]  157  167  167 #>  [7701,]  160  170  171 #>  [7702,]  160  170  171 #>  [7703,]  160  170  170 #>  [7704,]  159  169  169 #>  [7705,]  160  170  171 #>  [7706,]  160  170  170 #>  [7707,]  160  170  170 #>  [7708,]  159  169  169 #>  [7709,]  159  169  169 #>  [7710,]  159  169  169 #>  [7711,]  160  170  171 #>  [7712,]  160  170  171 #>  [7713,]  160  170  171 #>  [7714,]  160  170  171 #>  [7715,]  160  170  171 #>  [7716,]  160  170  171 #>  [7717,]  160  170  171 #>  [7718,]  160  170  171 #>  [7719,]  160  170  171 #>  [7720,]  160  170  170 #>  [7721,]  160  170  170 #>  [7722,]  160  170  171 #>  [7723,]  160  170  170 #>  [7724,]  160  170  171 #>  [7725,]  160  170  170 #>  [7726,]  160  170  171 #>  [7727,]  160  170  171 #>  [7728,]  160  170  171 #>  [7729,]  160  170  171 #>  [7730,]  160  170  171 #>  [7731,]  160  170  171 #>  [7732,]  160  170  171 #>  [7733,]  160  170  171 #>  [7734,]  160  170  170 #>  [7735,]  160  170  170 #>  [7736,]  160  170  171 #>  [7737,]  160  170  170 #>  [7738,]  160  170  171 #>  [7739,]  160  170  171 #>  [7740,]  160  170  171 #>  [7741,]  160  170  171 #>  [7742,]  160  170  170 #>  [7743,]  159  169  169 #>  [7744,]  160  170  170 #>  [7745,]  160  170  171 #>  [7746,]  160  170  171 #>  [7747,]  160  170  171 #>  [7748,]  160  170  171 #>  [7749,]  160  170  171 #>  [7750,]  160  170  171 #>  [7751,]  159  169  169 #>  [7752,]  160  170  171 #>  [7753,]  160  170  170 #>  [7754,]  160  170  171 #>  [7755,]  160  170  171 #>  [7756,]  160  170  170 #>  [7757,]  160  170  170 #>  [7758,]  160  170  171 #>  [7759,]  160  170  171 #>  [7760,]  159  169  169 #>  [7761,]  160  170  171 #>  [7762,]  160  170  171 #>  [7763,]  160  170  171 #>  [7764,]  159  169  169 #>  [7765,]  160  170  170 #>  [7766,]  160  170  171 #>  [7767,]  159  169  169 #>  [7768,]  160  170  171 #>  [7769,]  160  170  171 #>  [7770,]  160  170  171 #>  [7771,]  160  170  171 #>  [7772,]  160  170  171 #>  [7773,]  160  170  170 #>  [7774,]  160  170  170 #>  [7775,]  160  170  171 #>  [7776,]  160  170  171 #>  [7777,]  160  170  171 #>  [7778,]  160  170  171 #>  [7779,]  160  170  171 #>  [7780,]  160  170  170 #>  [7781,]  160  170  171 #>  [7782,]  160  170  170 #>  [7783,]  160  170  171 #>  [7784,]  160  170  170 #>  [7785,]  159  169  169 #>  [7786,]  160  170  170 #>  [7787,]  160  170  171 #>  [7788,]  160  170  170 #>  [7789,]  160  170  170 #>  [7790,]  160  170  171 #>  [7791,]  159  169  169 #>  [7792,]  160  170  171 #>  [7793,]  160  170  171 #>  [7794,]  160  170  170 #>  [7795,]  159  169  169 #>  [7796,]  160  170  171 #>  [7797,]  160  170  171 #>  [7798,]  160  170  170 #>  [7799,]  160  170  170 #>  [7800,]  160  170  171 #>  [7801,]  162  172  173 #>  [7802,]  162  172  173 #>  [7803,]  161  171  172 #>  [7804,]  162  172  173 #>  [7805,]  162  172  173 #>  [7806,]  161  171  172 #>  [7807,]  162  172  173 #>  [7808,]  162  172  173 #>  [7809,]  162  172  173 #>  [7810,]  162  172  173 #>  [7811,]  162  172  173 #>  [7812,]  162  172  173 #>  [7813,]  162  172  173 #>  [7814,]  162  172  173 #>  [7815,]  162  172  173 #>  [7816,]  162  172  173 #>  [7817,]  162  172  173 #>  [7818,]  162  172  173 #>  [7819,]  161  171  172 #>  [7820,]  162  172  173 #>  [7821,]  162  172  173 #>  [7822,]  162  172  173 #>  [7823,]  162  172  173 #>  [7824,]  162  172  173 #>  [7825,]  162  172  173 #>  [7826,]  162  172  173 #>  [7827,]  162  172  173 #>  [7828,]  162  172  173 #>  [7829,]  162  172  173 #>  [7830,]  162  172  173 #>  [7831,]  162  172  173 #>  [7832,]  162  172  173 #>  [7833,]  162  172  173 #>  [7834,]  161  171  172 #>  [7835,]  162  172  173 #>  [7836,]  162  172  173 #>  [7837,]  161  171  172 #>  [7838,]  161  171  172 #>  [7839,]  162  172  173 #>  [7840,]  162  172  173 #>  [7841,]  162  172  173 #>  [7842,]  162  172  173 #>  [7843,]  162  172  173 #>  [7844,]  162  172  173 #>  [7845,]  161  171  172 #>  [7846,]  162  172  173 #>  [7847,]  162  172  173 #>  [7848,]  162  172  173 #>  [7849,]  161  171  172 #>  [7850,]  162  172  173 #>  [7851,]  162  172  173 #>  [7852,]  161  171  172 #>  [7853,]  162  172  173 #>  [7854,]  162  172  173 #>  [7855,]  162  172  173 #>  [7856,]  162  172  173 #>  [7857,]  162  172  173 #>  [7858,]  162  172  173 #>  [7859,]  162  172  173 #>  [7860,]  162  172  173 #>  [7861,]  162  172  173 #>  [7862,]  162  172  173 #>  [7863,]  162  172  173 #>  [7864,]  162  172  173 #>  [7865,]  162  172  173 #>  [7866,]  162  172  173 #>  [7867,]  162  172  173 #>  [7868,]  161  171  172 #>  [7869,]  162  172  173 #>  [7870,]  162  172  173 #>  [7871,]  162  172  173 #>  [7872,]  161  171  172 #>  [7873,]  162  172  173 #>  [7874,]  162  172  173 #>  [7875,]  162  172  173 #>  [7876,]  162  172  173 #>  [7877,]  162  172  173 #>  [7878,]  162  172  173 #>  [7879,]  162  172  173 #>  [7880,]  162  172  173 #>  [7881,]  162  172  173 #>  [7882,]  162  172  173 #>  [7883,]  162  172  173 #>  [7884,]  162  172  173 #>  [7885,]  162  172  173 #>  [7886,]  162  172  173 #>  [7887,]  162  172  173 #>  [7888,]  162  172  173 #>  [7889,]  162  172  173 #>  [7890,]  162  172  173 #>  [7891,]  162  172  173 #>  [7892,]  162  172  173 #>  [7893,]  162  172  173 #>  [7894,]  162  172  173 #>  [7895,]  162  172  173 #>  [7896,]  161  171  172 #>  [7897,]  162  172  173 #>  [7898,]  162  172  173 #>  [7899,]  162  172  173 #>  [7900,]  162  172  173 #>  [7901,]  163  175  175 #>  [7902,]  163  175  175 #>  [7903,]  163  174  175 #>  [7904,]  164  173  174 #>  [7905,]  163  174  175 #>  [7906,]  163  175  175 #>  [7907,]  164  173  174 #>  [7908,]  163  174  175 #>  [7909,]  163  174  175 #>  [7910,]  164  173  174 #>  [7911,]  163  175  175 #>  [7912,]  163  175  175 #>  [7913,]  164  173  174 #>  [7914,]  163  175  175 #>  [7915,]  164  173  174 #>  [7916,]  164  173  174 #>  [7917,]  164  173  174 #>  [7918,]  164  173  174 #>  [7919,]  163  175  175 #>  [7920,]  163  174  175 #>  [7921,]  164  173  174 #>  [7922,]  163  175  175 #>  [7923,]  164  173  174 #>  [7924,]  163  174  175 #>  [7925,]  164  173  174 #>  [7926,]  163  175  175 #>  [7927,]  164  173  174 #>  [7928,]  164  173  174 #>  [7929,]  163  175  175 #>  [7930,]  163  174  175 #>  [7931,]  163  175  175 #>  [7932,]  163  175  175 #>  [7933,]  163  175  175 #>  [7934,]  163  175  175 #>  [7935,]  163  175  175 #>  [7936,]  163  175  175 #>  [7937,]  163  175  175 #>  [7938,]  163  175  175 #>  [7939,]  164  173  174 #>  [7940,]  163  175  175 #>  [7941,]  163  175  175 #>  [7942,]  163  175  175 #>  [7943,]  164  173  174 #>  [7944,]  163  175  175 #>  [7945,]  164  173  174 #>  [7946,]  164  173  174 #>  [7947,]  164  173  174 #>  [7948,]  163  175  175 #>  [7949,]  163  174  175 #>  [7950,]  163  175  175 #>  [7951,]  163  174  175 #>  [7952,]  163  175  175 #>  [7953,]  164  173  174 #>  [7954,]  163  175  175 #>  [7955,]  163  175  175 #>  [7956,]  164  173  174 #>  [7957,]  163  175  175 #>  [7958,]  163  175  175 #>  [7959,]  163  175  175 #>  [7960,]  163  174  175 #>  [7961,]  164  173  174 #>  [7962,]  163  175  175 #>  [7963,]  163  175  175 #>  [7964,]  164  173  174 #>  [7965,]  163  174  175 #>  [7966,]  163  174  175 #>  [7967,]  163  174  175 #>  [7968,]  163  175  175 #>  [7969,]  163  175  175 #>  [7970,]  163  175  175 #>  [7971,]  164  173  174 #>  [7972,]  164  173  174 #>  [7973,]  164  173  174 #>  [7974,]  164  173  174 #>  [7975,]  164  173  174 #>  [7976,]  164  173  174 #>  [7977,]  164  173  174 #>  [7978,]  163  174  175 #>  [7979,]  163  175  175 #>  [7980,]  163  175  175 #>  [7981,]  163  175  175 #>  [7982,]  164  173  174 #>  [7983,]  163  175  175 #>  [7984,]  164  173  174 #>  [7985,]  163  174  175 #>  [7986,]  163  175  175 #>  [7987,]  163  175  175 #>  [7988,]  164  173  174 #>  [7989,]  163  174  175 #>  [7990,]  163  175  175 #>  [7991,]  163  174  175 #>  [7992,]  163  175  175 #>  [7993,]  163  175  175 #>  [7994,]  164  173  174 #>  [7995,]  164  173  174 #>  [7996,]  163  175  175 #>  [7997,]  163  175  175 #>  [7998,]  163  175  175 #>  [7999,]  163  175  175 #>  [8000,]  164  173  174 #>  [8001,]  166  177  176 #>  [8002,]  166  177  176 #>  [8003,]  166  176  177 #>  [8004,]  166  176  177 #>  [8005,]  166  176  177 #>  [8006,]  166  177  176 #>  [8007,]  166  176  177 #>  [8008,]  166  176  177 #>  [8009,]  166  176  177 #>  [8010,]  165  176  177 #>  [8011,]  165  176  177 #>  [8012,]  166  176  177 #>  [8013,]  166  177  176 #>  [8014,]  165  177  176 #>  [8015,]  166  177  176 #>  [8016,]  166  177  176 #>  [8017,]  166  177  176 #>  [8018,]  166  176  177 #>  [8019,]  166  176  177 #>  [8020,]  166  176  177 #>  [8021,]  166  177  176 #>  [8022,]  166  176  177 #>  [8023,]  166  176  177 #>  [8024,]  166  176  177 #>  [8025,]  166  176  177 #>  [8026,]  166  176  177 #>  [8027,]  166  176  177 #>  [8028,]  166  176  177 #>  [8029,]  166  177  176 #>  [8030,]  166  176  177 #>  [8031,]  166  176  177 #>  [8032,]  166  176  177 #>  [8033,]  166  177  176 #>  [8034,]  166  176  177 #>  [8035,]  166  176  177 #>  [8036,]  166  176  177 #>  [8037,]  166  176  177 #>  [8038,]  166  176  177 #>  [8039,]  166  176  177 #>  [8040,]  165  176  177 #>  [8041,]  166  177  176 #>  [8042,]  166  176  177 #>  [8043,]  166  176  177 #>  [8044,]  166  177  176 #>  [8045,]  166  176  177 #>  [8046,]  166  176  177 #>  [8047,]  166  176  177 #>  [8048,]  165  176  177 #>  [8049,]  166  176  177 #>  [8050,]  166  177  176 #>  [8051,]  166  176  177 #>  [8052,]  166  176  177 #>  [8053,]  166  176  177 #>  [8054,]  166  176  177 #>  [8055,]  166  176  177 #>  [8056,]  166  176  177 #>  [8057,]  166  176  177 #>  [8058,]  166  176  177 #>  [8059,]  166  177  176 #>  [8060,]  166  176  177 #>  [8061,]  166  177  176 #>  [8062,]  166  176  177 #>  [8063,]  166  176  177 #>  [8064,]  166  176  177 #>  [8065,]  166  176  177 #>  [8066,]  166  176  177 #>  [8067,]  166  176  177 #>  [8068,]  166  177  176 #>  [8069,]  166  176  177 #>  [8070,]  165  177  176 #>  [8071,]  166  176  177 #>  [8072,]  166  176  177 #>  [8073,]  166  177  176 #>  [8074,]  166  176  177 #>  [8075,]  166  176  177 #>  [8076,]  166  177  176 #>  [8077,]  166  176  177 #>  [8078,]  166  176  177 #>  [8079,]  166  176  177 #>  [8080,]  166  176  177 #>  [8081,]  166  177  176 #>  [8082,]  166  176  177 #>  [8083,]  166  177  176 #>  [8084,]  166  176  177 #>  [8085,]  166  176  177 #>  [8086,]  166  177  176 #>  [8087,]  166  176  177 #>  [8088,]  166  176  177 #>  [8089,]  166  176  177 #>  [8090,]  166  176  177 #>  [8091,]  166  176  177 #>  [8092,]  166  176  177 #>  [8093,]  166  177  176 #>  [8094,]  166  176  177 #>  [8095,]  166  176  177 #>  [8096,]  166  177  176 #>  [8097,]  166  176  177 #>  [8098,]  166  176  177 #>  [8099,]  166  177  176 #>  [8100,]  166  176  177 #>  [8101,]  168  179  178 #>  [8102,]  168  179  178 #>  [8103,]  167  178  179 #>  [8104,]  167  178  179 #>  [8105,]  167  178  179 #>  [8106,]  168  179  178 #>  [8107,]  167  178  179 #>  [8108,]  167  178  179 #>  [8109,]  167  178  179 #>  [8110,]  167  178  179 #>  [8111,]  168  179  178 #>  [8112,]  167  178  179 #>  [8113,]  168  179  178 #>  [8114,]  168  179  178 #>  [8115,]  168  179  178 #>  [8116,]  168  179  178 #>  [8117,]  168  179  178 #>  [8118,]  167  178  179 #>  [8119,]  168  179  178 #>  [8120,]  167  178  179 #>  [8121,]  168  179  178 #>  [8122,]  168  179  178 #>  [8123,]  167  178  179 #>  [8124,]  167  178  179 #>  [8125,]  167  178  179 #>  [8126,]  168  179  178 #>  [8127,]  168  179  178 #>  [8128,]  167  178  179 #>  [8129,]  168  179  178 #>  [8130,]  167  178  179 #>  [8131,]  167  178  179 #>  [8132,]  167  178  179 #>  [8133,]  168  179  178 #>  [8134,]  167  178  179 #>  [8135,]  168  179  178 #>  [8136,]  167  178  179 #>  [8137,]  168  179  178 #>  [8138,]  167  178  179 #>  [8139,]  167  178  179 #>  [8140,]  167  178  179 #>  [8141,]  168  179  178 #>  [8142,]  167  178  179 #>  [8143,]  167  178  179 #>  [8144,]  168  179  178 #>  [8145,]  167  178  179 #>  [8146,]  167  178  179 #>  [8147,]  168  179  178 #>  [8148,]  167  178  179 #>  [8149,]  167  178  179 #>  [8150,]  168  179  178 #>  [8151,]  167  178  179 #>  [8152,]  168  179  178 #>  [8153,]  167  178  179 #>  [8154,]  167  178  179 #>  [8155,]  168  179  178 #>  [8156,]  167  178  179 #>  [8157,]  167  178  179 #>  [8158,]  168  179  178 #>  [8159,]  168  179  178 #>  [8160,]  167  178  179 #>  [8161,]  168  179  178 #>  [8162,]  167  178  179 #>  [8163,]  167  178  179 #>  [8164,]  167  178  179 #>  [8165,]  167  178  179 #>  [8166,]  167  178  179 #>  [8167,]  167  178  179 #>  [8168,]  168  179  178 #>  [8169,]  168  179  178 #>  [8170,]  168  179  178 #>  [8171,]  168  179  178 #>  [8172,]  167  178  179 #>  [8173,]  168  179  178 #>  [8174,]  168  179  178 #>  [8175,]  168  179  178 #>  [8176,]  168  179  178 #>  [8177,]  168  179  178 #>  [8178,]  167  178  179 #>  [8179,]  168  179  178 #>  [8180,]  167  178  179 #>  [8181,]  168  179  178 #>  [8182,]  167  178  179 #>  [8183,]  168  179  178 #>  [8184,]  168  179  178 #>  [8185,]  167  178  179 #>  [8186,]  168  179  178 #>  [8187,]  168  179  178 #>  [8188,]  167  178  179 #>  [8189,]  167  178  179 #>  [8190,]  168  179  178 #>  [8191,]  167  178  179 #>  [8192,]  168  179  178 #>  [8193,]  168  179  178 #>  [8194,]  168  179  178 #>  [8195,]  167  178  179 #>  [8196,]  168  179  178 #>  [8197,]  168  179  178 #>  [8198,]  168  179  178 #>  [8199,]  168  179  178 #>  [8200,]  168  179  178 #>  [8201,]  170  181  180 #>  [8202,]  170  181  180 #>  [8203,]  170  181  180 #>  [8204,]  169  180  180 #>  [8205,]  170  181  180 #>  [8206,]  170  181  180 #>  [8207,]  170  181  180 #>  [8208,]  169  180  180 #>  [8209,]  169  180  180 #>  [8210,]  169  180  180 #>  [8211,]  170  181  180 #>  [8212,]  170  181  180 #>  [8213,]  170  181  180 #>  [8214,]  170  181  180 #>  [8215,]  170  181  180 #>  [8216,]  170  181  180 #>  [8217,]  170  181  180 #>  [8218,]  170  181  180 #>  [8219,]  170  181  180 #>  [8220,]  170  181  181 #>  [8221,]  170  181  180 #>  [8222,]  170  181  181 #>  [8223,]  170  181  180 #>  [8224,]  170  181  180 #>  [8225,]  170  181  180 #>  [8226,]  170  181  180 #>  [8227,]  170  181  181 #>  [8228,]  170  181  180 #>  [8229,]  170  181  181 #>  [8230,]  170  181  180 #>  [8231,]  170  181  180 #>  [8232,]  170  181  180 #>  [8233,]  170  181  180 #>  [8234,]  170  181  180 #>  [8235,]  170  181  180 #>  [8236,]  170  181  180 #>  [8237,]  170  181  180 #>  [8238,]  170  181  180 #>  [8239,]  170  181  180 #>  [8240,]  170  181  180 #>  [8241,]  170  181  180 #>  [8242,]  170  181  180 #>  [8243,]  169  180  180 #>  [8244,]  170  181  180 #>  [8245,]  170  181  180 #>  [8246,]  170  181  180 #>  [8247,]  170  181  180 #>  [8248,]  170  181  180 #>  [8249,]  170  181  180 #>  [8250,]  170  181  180 #>  [8251,]  169  180  180 #>  [8252,]  170  181  180 #>  [8253,]  170  181  180 #>  [8254,]  170  181  180 #>  [8255,]  170  181  180 #>  [8256,]  170  181  180 #>  [8257,]  170  181  180 #>  [8258,]  170  181  181 #>  [8259,]  170  181  180 #>  [8260,]  169  180  180 #>  [8261,]  170  181  180 #>  [8262,]  170  181  180 #>  [8263,]  170  181  180 #>  [8264,]  170  181  181 #>  [8265,]  170  181  180 #>  [8266,]  170  181  180 #>  [8267,]  170  181  180 #>  [8268,]  170  181  180 #>  [8269,]  170  181  180 #>  [8270,]  170  181  180 #>  [8271,]  170  181  180 #>  [8272,]  170  181  180 #>  [8273,]  170  181  180 #>  [8274,]  170  181  180 #>  [8275,]  170  181  180 #>  [8276,]  170  181  180 #>  [8277,]  170  181  181 #>  [8278,]  170  181  180 #>  [8279,]  170  181  180 #>  [8280,]  170  181  180 #>  [8281,]  170  181  181 #>  [8282,]  170  181  180 #>  [8283,]  170  181  180 #>  [8284,]  170  181  180 #>  [8285,]  169  180  180 #>  [8286,]  170  181  180 #>  [8287,]  170  181  181 #>  [8288,]  170  181  180 #>  [8289,]  170  181  180 #>  [8290,]  170  181  180 #>  [8291,]  169  180  180 #>  [8292,]  170  181  180 #>  [8293,]  170  181  180 #>  [8294,]  170  181  180 #>  [8295,]  169  180  180 #>  [8296,]  170  181  180 #>  [8297,]  170  181  180 #>  [8298,]  170  181  180 #>  [8299,]  170  181  180 #>  [8300,]  170  181  181 #>  [8301,]  171  182  183 #>  [8302,]  172  182  183 #>  [8303,]  171  182  182 #>  [8304,]  171  182  183 #>  [8305,]  171  182  183 #>  [8306,]  171  182  183 #>  [8307,]  171  182  183 #>  [8308,]  171  182  183 #>  [8309,]  172  182  183 #>  [8310,]  172  182  182 #>  [8311,]  171  182  182 #>  [8312,]  172  182  183 #>  [8313,]  172  182  183 #>  [8314,]  171  182  182 #>  [8315,]  171  182  183 #>  [8316,]  171  182  183 #>  [8317,]  172  182  183 #>  [8318,]  171  182  183 #>  [8319,]  171  182  183 #>  [8320,]  171  182  183 #>  [8321,]  172  182  183 #>  [8322,]  171  182  183 #>  [8323,]  171  182  183 #>  [8324,]  171  182  183 #>  [8325,]  171  182  183 #>  [8326,]  171  182  183 #>  [8327,]  171  182  183 #>  [8328,]  171  182  183 #>  [8329,]  172  182  183 #>  [8330,]  171  182  183 #>  [8331,]  171  182  182 #>  [8332,]  172  182  182 #>  [8333,]  172  182  183 #>  [8334,]  171  182  183 #>  [8335,]  171  182  183 #>  [8336,]  171  182  183 #>  [8337,]  171  182  183 #>  [8338,]  171  182  183 #>  [8339,]  171  182  183 #>  [8340,]  172  182  182 #>  [8341,]  171  182  183 #>  [8342,]  171  182  183 #>  [8343,]  171  182  183 #>  [8344,]  171  182  183 #>  [8345,]  171  182  183 #>  [8346,]  171  182  183 #>  [8347,]  171  182  183 #>  [8348,]  171  182  182 #>  [8349,]  171  182  183 #>  [8350,]  171  182  183 #>  [8351,]  171  182  183 #>  [8352,]  171  182  183 #>  [8353,]  172  182  183 #>  [8354,]  171  182  183 #>  [8355,]  171  182  183 #>  [8356,]  171  182  183 #>  [8357,]  171  182  183 #>  [8358,]  171  182  183 #>  [8359,]  171  182  183 #>  [8360,]  172  182  183 #>  [8361,]  171  182  183 #>  [8362,]  171  182  183 #>  [8363,]  172  182  183 #>  [8364,]  171  182  183 #>  [8365,]  171  182  183 #>  [8366,]  171  182  183 #>  [8367,]  171  182  183 #>  [8368,]  171  182  183 #>  [8369,]  171  182  183 #>  [8370,]  172  182  182 #>  [8371,]  171  182  183 #>  [8372,]  171  182  183 #>  [8373,]  171  182  183 #>  [8374,]  171  182  182 #>  [8375,]  172  182  183 #>  [8376,]  171  182  183 #>  [8377,]  171  182  183 #>  [8378,]  171  182  183 #>  [8379,]  171  182  183 #>  [8380,]  172  182  183 #>  [8381,]  172  182  183 #>  [8382,]  171  182  183 #>  [8383,]  171  182  183 #>  [8384,]  171  182  183 #>  [8385,]  171  182  183 #>  [8386,]  172  182  183 #>  [8387,]  171  182  183 #>  [8388,]  171  182  183 #>  [8389,]  171  182  183 #>  [8390,]  171  182  183 #>  [8391,]  171  182  183 #>  [8392,]  171  182  183 #>  [8393,]  171  182  183 #>  [8394,]  171  182  183 #>  [8395,]  171  182  183 #>  [8396,]  171  182  183 #>  [8397,]  171  182  183 #>  [8398,]  171  182  182 #>  [8399,]  171  182  183 #>  [8400,]  171  182  183 #>  [8401,]  173  185  185 #>  [8402,]  173  185  185 #>  [8403,]  173  184  185 #>  [8404,]  173  184  185 #>  [8405,]  173  185  185 #>  [8406,]  173  185  185 #>  [8407,]  174  183  184 #>  [8408,]  173  184  185 #>  [8409,]  173  185  185 #>  [8410,]  173  185  185 #>  [8411,]  173  185  185 #>  [8412,]  173  184  185 #>  [8413,]  173  185  185 #>  [8414,]  173  185  185 #>  [8415,]  173  185  185 #>  [8416,]  173  185  185 #>  [8417,]  173  185  185 #>  [8418,]  173  185  185 #>  [8419,]  173  185  185 #>  [8420,]  174  183  184 #>  [8421,]  173  185  185 #>  [8422,]  173  185  185 #>  [8423,]  173  185  185 #>  [8424,]  174  183  184 #>  [8425,]  173  184  185 #>  [8426,]  173  185  185 #>  [8427,]  173  185  185 #>  [8428,]  174  183  184 #>  [8429,]  173  185  185 #>  [8430,]  173  185  185 #>  [8431,]  173  184  185 #>  [8432,]  173  185  185 #>  [8433,]  173  185  185 #>  [8434,]  173  185  185 #>  [8435,]  173  185  185 #>  [8436,]  173  185  185 #>  [8437,]  173  185  185 #>  [8438,]  173  185  185 #>  [8439,]  173  185  185 #>  [8440,]  173  185  185 #>  [8441,]  173  185  185 #>  [8442,]  173  185  185 #>  [8443,]  173  185  185 #>  [8444,]  173  185  185 #>  [8445,]  173  185  185 #>  [8446,]  173  185  185 #>  [8447,]  173  184  185 #>  [8448,]  173  185  185 #>  [8449,]  173  185  185 #>  [8450,]  174  183  184 #>  [8451,]  173  185  185 #>  [8452,]  174  183  184 #>  [8453,]  173  185  185 #>  [8454,]  173  185  185 #>  [8455,]  173  185  185 #>  [8456,]  173  185  185 #>  [8457,]  173  184  185 #>  [8458,]  173  185  185 #>  [8459,]  173  184  185 #>  [8460,]  173  184  185 #>  [8461,]  173  185  185 #>  [8462,]  173  185  185 #>  [8463,]  173  185  185 #>  [8464,]  173  185  185 #>  [8465,]  173  185  185 #>  [8466,]  173  185  185 #>  [8467,]  173  185  185 #>  [8468,]  173  184  185 #>  [8469,]  173  185  185 #>  [8470,]  173  185  185 #>  [8471,]  173  185  185 #>  [8472,]  173  185  185 #>  [8473,]  173  185  185 #>  [8474,]  173  185  185 #>  [8475,]  173  185  185 #>  [8476,]  174  183  184 #>  [8477,]  173  185  185 #>  [8478,]  173  185  185 #>  [8479,]  173  185  185 #>  [8480,]  173  184  185 #>  [8481,]  173  185  185 #>  [8482,]  173  185  185 #>  [8483,]  173  185  185 #>  [8484,]  173  185  185 #>  [8485,]  173  185  185 #>  [8486,]  174  183  184 #>  [8487,]  173  185  185 #>  [8488,]  173  185  185 #>  [8489,]  173  185  185 #>  [8490,]  173  185  185 #>  [8491,]  173  185  185 #>  [8492,]  173  185  185 #>  [8493,]  173  185  185 #>  [8494,]  173  185  185 #>  [8495,]  173  185  185 #>  [8496,]  173  184  185 #>  [8497,]  173  184  185 #>  [8498,]  173  184  185 #>  [8499,]  173  185  185 #>  [8500,]  173  185  185 #>  [8501,]  175  186  186 #>  [8502,]  175  186  186 #>  [8503,]  176  187  187 #>  [8504,]  175  186  186 #>  [8505,]  175  186  186 #>  [8506,]  176  187  187 #>  [8507,]  175  186  186 #>  [8508,]  175  186  186 #>  [8509,]  175  186  186 #>  [8510,]  175  186  186 #>  [8511,]  175  186  186 #>  [8512,]  175  186  186 #>  [8513,]  175  186  186 #>  [8514,]  175  186  186 #>  [8515,]  175  186  186 #>  [8516,]  175  186  186 #>  [8517,]  175  186  186 #>  [8518,]  175  186  186 #>  [8519,]  175  186  186 #>  [8520,]  175  186  186 #>  [8521,]  175  186  186 #>  [8522,]  175  186  186 #>  [8523,]  175  186  186 #>  [8524,]  175  186  186 #>  [8525,]  175  186  186 #>  [8526,]  175  186  186 #>  [8527,]  175  186  186 #>  [8528,]  175  186  186 #>  [8529,]  175  186  186 #>  [8530,]  175  186  186 #>  [8531,]  175  186  186 #>  [8532,]  175  186  186 #>  [8533,]  175  186  186 #>  [8534,]  176  187  187 #>  [8535,]  175  186  186 #>  [8536,]  175  186  186 #>  [8537,]  175  186  186 #>  [8538,]  175  186  186 #>  [8539,]  175  186  186 #>  [8540,]  175  186  186 #>  [8541,]  175  186  186 #>  [8542,]  175  186  186 #>  [8543,]  175  186  186 #>  [8544,]  175  186  186 #>  [8545,]  175  186  186 #>  [8546,]  175  186  186 #>  [8547,]  175  186  186 #>  [8548,]  175  186  186 #>  [8549,]  175  186  186 #>  [8550,]  175  186  186 #>  [8551,]  175  186  186 #>  [8552,]  175  186  186 #>  [8553,]  175  186  186 #>  [8554,]  175  186  186 #>  [8555,]  175  186  186 #>  [8556,]  175  186  186 #>  [8557,]  175  186  186 #>  [8558,]  175  186  186 #>  [8559,]  175  186  186 #>  [8560,]  176  187  187 #>  [8561,]  175  186  186 #>  [8562,]  175  186  186 #>  [8563,]  175  186  186 #>  [8564,]  175  186  186 #>  [8565,]  176  187  187 #>  [8566,]  175  186  186 #>  [8567,]  175  186  186 #>  [8568,]  175  186  186 #>  [8569,]  175  186  186 #>  [8570,]  176  187  187 #>  [8571,]  175  186  186 #>  [8572,]  175  186  186 #>  [8573,]  176  187  187 #>  [8574,]  175  186  186 #>  [8575,]  175  186  186 #>  [8576,]  175  186  186 #>  [8577,]  175  186  186 #>  [8578,]  175  186  186 #>  [8579,]  175  186  186 #>  [8580,]  175  186  186 #>  [8581,]  175  186  186 #>  [8582,]  175  186  186 #>  [8583,]  175  186  186 #>  [8584,]  175  186  186 #>  [8585,]  175  186  186 #>  [8586,]  175  186  186 #>  [8587,]  175  186  186 #>  [8588,]  175  186  186 #>  [8589,]  175  186  186 #>  [8590,]  175  186  186 #>  [8591,]  175  186  186 #>  [8592,]  175  186  186 #>  [8593,]  176  187  187 #>  [8594,]  175  186  186 #>  [8595,]  175  186  186 #>  [8596,]  175  186  186 #>  [8597,]  175  186  186 #>  [8598,]  175  186  186 #>  [8599,]  175  186  186 #>  [8600,]  175  186  186 #>  [8601,]  178  189  189 #>  [8602,]  178  189  189 #>  [8603,]  177  188  188 #>  [8604,]  178  189  189 #>  [8605,]  178  189  189 #>  [8606,]  178  189  189 #>  [8607,]  177  188  188 #>  [8608,]  177  188  188 #>  [8609,]  178  189  189 #>  [8610,]  178  189  189 #>  [8611,]  178  189  189 #>  [8612,]  178  189  189 #>  [8613,]  178  189  189 #>  [8614,]  178  189  189 #>  [8615,]  178  189  189 #>  [8616,]  178  189  189 #>  [8617,]  178  189  189 #>  [8618,]  178  189  189 #>  [8619,]  178  189  189 #>  [8620,]  177  188  188 #>  [8621,]  178  189  189 #>  [8622,]  178  189  189 #>  [8623,]  178  189  189 #>  [8624,]  178  189  189 #>  [8625,]  177  188  188 #>  [8626,]  178  189  189 #>  [8627,]  178  189  189 #>  [8628,]  178  189  189 #>  [8629,]  178  189  189 #>  [8630,]  178  189  189 #>  [8631,]  178  189  189 #>  [8632,]  178  189  189 #>  [8633,]  178  189  189 #>  [8634,]  178  189  189 #>  [8635,]  178  189  189 #>  [8636,]  178  189  189 #>  [8637,]  178  189  189 #>  [8638,]  178  189  189 #>  [8639,]  177  188  188 #>  [8640,]  178  189  189 #>  [8641,]  178  189  189 #>  [8642,]  178  189  189 #>  [8643,]  178  189  189 #>  [8644,]  177  188  188 #>  [8645,]  178  189  189 #>  [8646,]  177  188  188 #>  [8647,]  178  189  189 #>  [8648,]  178  189  189 #>  [8649,]  177  188  188 #>  [8650,]  177  188  188 #>  [8651,]  178  189  189 #>  [8652,]  178  189  189 #>  [8653,]  177  188  188 #>  [8654,]  178  189  189 #>  [8655,]  177  188  188 #>  [8656,]  177  188  188 #>  [8657,]  178  189  189 #>  [8658,]  178  189  189 #>  [8659,]  177  188  188 #>  [8660,]  178  189  189 #>  [8661,]  178  189  189 #>  [8662,]  178  189  189 #>  [8663,]  178  189  189 #>  [8664,]  178  189  189 #>  [8665,]  177  188  188 #>  [8666,]  177  188  188 #>  [8667,]  178  189  189 #>  [8668,]  178  189  189 #>  [8669,]  178  189  189 #>  [8670,]  177  188  188 #>  [8671,]  178  189  189 #>  [8672,]  178  189  189 #>  [8673,]  178  189  189 #>  [8674,]  178  189  189 #>  [8675,]  178  189  189 #>  [8676,]  178  189  189 #>  [8677,]  178  189  189 #>  [8678,]  178  189  189 #>  [8679,]  178  189  189 #>  [8680,]  178  189  189 #>  [8681,]  178  189  189 #>  [8682,]  178  189  189 #>  [8683,]  178  189  189 #>  [8684,]  177  188  188 #>  [8685,]  178  189  189 #>  [8686,]  177  188  188 #>  [8687,]  178  189  189 #>  [8688,]  178  189  189 #>  [8689,]  178  189  189 #>  [8690,]  177  188  188 #>  [8691,]  178  189  189 #>  [8692,]  178  189  189 #>  [8693,]  178  189  189 #>  [8694,]  178  189  189 #>  [8695,]  178  189  189 #>  [8696,]  178  189  189 #>  [8697,]  178  189  189 #>  [8698,]  177  188  188 #>  [8699,]  178  189  189 #>  [8700,]  177  188  188 #>  [8701,]  180  191  191 #>  [8702,]  180  191  191 #>  [8703,]  179  190  190 #>  [8704,]  179  190  190 #>  [8705,]  180  191  191 #>  [8706,]  180  191  191 #>  [8707,]  179  190  190 #>  [8708,]  179  190  190 #>  [8709,]  180  191  191 #>  [8710,]  180  191  191 #>  [8711,]  180  191  191 #>  [8712,]  179  190  190 #>  [8713,]  180  191  191 #>  [8714,]  180  191  191 #>  [8715,]  180  191  191 #>  [8716,]  180  191  191 #>  [8717,]  180  191  191 #>  [8718,]  180  191  191 #>  [8719,]  180  191  191 #>  [8720,]  180  191  191 #>  [8721,]  180  191  191 #>  [8722,]  180  191  191 #>  [8723,]  179  190  190 #>  [8724,]  180  191  191 #>  [8725,]  179  190  190 #>  [8726,]  180  191  191 #>  [8727,]  180  191  191 #>  [8728,]  180  191  191 #>  [8729,]  180  191  191 #>  [8730,]  180  191  191 #>  [8731,]  179  190  190 #>  [8732,]  180  191  191 #>  [8733,]  180  191  191 #>  [8734,]  180  191  191 #>  [8735,]  180  191  191 #>  [8736,]  180  191  191 #>  [8737,]  179  190  190 #>  [8738,]  180  191  191 #>  [8739,]  180  191  191 #>  [8740,]  179  190  190 #>  [8741,]  180  191  191 #>  [8742,]  180  191  191 #>  [8743,]  180  191  191 #>  [8744,]  180  191  191 #>  [8745,]  180  191  191 #>  [8746,]  179  190  190 #>  [8747,]  179  190  190 #>  [8748,]  180  191  191 #>  [8749,]  180  191  191 #>  [8750,]  180  191  191 #>  [8751,]  180  191  191 #>  [8752,]  179  190  190 #>  [8753,]  180  191  191 #>  [8754,]  180  191  191 #>  [8755,]  179  190  190 #>  [8756,]  180  191  191 #>  [8757,]  179  190  190 #>  [8758,]  180  191  191 #>  [8759,]  179  190  190 #>  [8760,]  179  190  190 #>  [8761,]  180  191  191 #>  [8762,]  180  191  191 #>  [8763,]  180  191  191 #>  [8764,]  180  191  191 #>  [8765,]  180  191  191 #>  [8766,]  180  191  191 #>  [8767,]  180  191  191 #>  [8768,]  179  190  190 #>  [8769,]  180  191  191 #>  [8770,]  180  191  191 #>  [8771,]  180  191  191 #>  [8772,]  180  191  191 #>  [8773,]  180  191  191 #>  [8774,]  179  190  190 #>  [8775,]  180  191  191 #>  [8776,]  180  191  191 #>  [8777,]  180  191  191 #>  [8778,]  180  191  191 #>  [8779,]  180  191  191 #>  [8780,]  179  190  190 #>  [8781,]  180  191  191 #>  [8782,]  180  191  191 #>  [8783,]  180  191  191 #>  [8784,]  180  191  191 #>  [8785,]  180  191  191 #>  [8786,]  179  190  190 #>  [8787,]  180  191  191 #>  [8788,]  180  191  191 #>  [8789,]  180  191  191 #>  [8790,]  180  191  191 #>  [8791,]  180  191  191 #>  [8792,]  179  190  190 #>  [8793,]  180  191  191 #>  [8794,]  180  191  191 #>  [8795,]  180  191  191 #>  [8796,]  179  190  190 #>  [8797,]  179  190  190 #>  [8798,]  179  190  190 #>  [8799,]  180  191  191 #>  [8800,]  180  191  191 #>  [8801,]  181  192  192 #>  [8802,]  181  192  192 #>  [8803,]  181  192  192 #>  [8804,]  181  192  192 #>  [8805,]  181  192  192 #>  [8806,]  182  193  193 #>  [8807,]  181  192  192 #>  [8808,]  182  193  193 #>  [8809,]  182  193  193 #>  [8810,]  181  192  192 #>  [8811,]  181  192  192 #>  [8812,]  182  193  193 #>  [8813,]  181  192  192 #>  [8814,]  181  192  192 #>  [8815,]  182  193  193 #>  [8816,]  181  192  192 #>  [8817,]  181  192  192 #>  [8818,]  181  192  192 #>  [8819,]  181  192  192 #>  [8820,]  181  192  192 #>  [8821,]  181  192  192 #>  [8822,]  181  192  192 #>  [8823,]  181  192  192 #>  [8824,]  181  192  192 #>  [8825,]  181  192  192 #>  [8826,]  182  193  193 #>  [8827,]  181  192  192 #>  [8828,]  181  192  192 #>  [8829,]  181  192  192 #>  [8830,]  181  192  192 #>  [8831,]  181  192  192 #>  [8832,]  181  192  192 #>  [8833,]  182  193  193 #>  [8834,]  181  192  192 #>  [8835,]  181  192  192 #>  [8836,]  181  192  192 #>  [8837,]  181  192  192 #>  [8838,]  181  192  192 #>  [8839,]  181  192  192 #>  [8840,]  181  192  192 #>  [8841,]  181  192  192 #>  [8842,]  181  192  192 #>  [8843,]  182  193  193 #>  [8844,]  181  192  192 #>  [8845,]  182  193  193 #>  [8846,]  182  193  193 #>  [8847,]  181  192  192 #>  [8848,]  181  192  192 #>  [8849,]  181  192  192 #>  [8850,]  181  192  192 #>  [8851,]  182  193  193 #>  [8852,]  181  192  192 #>  [8853,]  181  192  192 #>  [8854,]  181  192  192 #>  [8855,]  181  192  192 #>  [8856,]  182  193  193 #>  [8857,]  182  193  193 #>  [8858,]  181  192  192 #>  [8859,]  181  192  192 #>  [8860,]  181  192  192 #>  [8861,]  182  193  193 #>  [8862,]  181  192  192 #>  [8863,]  181  192  192 #>  [8864,]  182  193  193 #>  [8865,]  181  192  192 #>  [8866,]  182  193  193 #>  [8867,]  181  192  192 #>  [8868,]  182  193  193 #>  [8869,]  181  192  192 #>  [8870,]  181  192  192 #>  [8871,]  181  192  192 #>  [8872,]  181  192  192 #>  [8873,]  181  192  192 #>  [8874,]  181  192  192 #>  [8875,]  181  192  192 #>  [8876,]  182  193  193 #>  [8877,]  181  192  192 #>  [8878,]  181  192  192 #>  [8879,]  181  192  192 #>  [8880,]  181  192  192 #>  [8881,]  181  192  192 #>  [8882,]  181  192  192 #>  [8883,]  181  192  192 #>  [8884,]  181  192  192 #>  [8885,]  181  192  192 #>  [8886,]  181  192  192 #>  [8887,]  181  192  192 #>  [8888,]  181  192  192 #>  [8889,]  181  192  192 #>  [8890,]  181  192  192 #>  [8891,]  181  192  192 #>  [8892,]  181  192  192 #>  [8893,]  181  192  192 #>  [8894,]  182  193  193 #>  [8895,]  181  192  192 #>  [8896,]  182  193  193 #>  [8897,]  181  192  192 #>  [8898,]  181  192  192 #>  [8899,]  181  192  192 #>  [8900,]  181  192  192 #>  [8901,]  183  194  195 #>  [8902,]  184  195  195 #>  [8903,]  183  194  194 #>  [8904,]  183  194  195 #>  [8905,]  183  194  195 #>  [8906,]  183  194  195 #>  [8907,]  183  194  195 #>  [8908,]  183  194  195 #>  [8909,]  184  195  195 #>  [8910,]  184  195  194 #>  [8911,]  183  194  194 #>  [8912,]  184  195  195 #>  [8913,]  183  194  195 #>  [8914,]  183  194  194 #>  [8915,]  183  194  195 #>  [8916,]  183  194  195 #>  [8917,]  183  194  195 #>  [8918,]  183  194  195 #>  [8919,]  183  194  195 #>  [8920,]  183  194  195 #>  [8921,]  184  195  195 #>  [8922,]  183  194  195 #>  [8923,]  183  194  195 #>  [8924,]  183  194  195 #>  [8925,]  183  194  195 #>  [8926,]  183  194  195 #>  [8927,]  183  194  195 #>  [8928,]  183  194  195 #>  [8929,]  184  195  195 #>  [8930,]  183  194  195 #>  [8931,]  183  194  195 #>  [8932,]  183  194  194 #>  [8933,]  184  195  195 #>  [8934,]  183  194  195 #>  [8935,]  183  194  195 #>  [8936,]  183  194  195 #>  [8937,]  183  194  195 #>  [8938,]  183  194  195 #>  [8939,]  183  194  195 #>  [8940,]  183  194  194 #>  [8941,]  183  194  195 #>  [8942,]  183  194  195 #>  [8943,]  183  194  195 #>  [8944,]  183  194  195 #>  [8945,]  183  194  195 #>  [8946,]  183  194  195 #>  [8947,]  183  194  195 #>  [8948,]  183  194  194 #>  [8949,]  183  194  195 #>  [8950,]  183  194  195 #>  [8951,]  183  194  195 #>  [8952,]  183  194  195 #>  [8953,]  183  194  195 #>  [8954,]  183  194  195 #>  [8955,]  183  194  195 #>  [8956,]  183  194  195 #>  [8957,]  183  194  195 #>  [8958,]  183  194  195 #>  [8959,]  183  194  195 #>  [8960,]  183  194  195 #>  [8961,]  183  194  195 #>  [8962,]  183  194  195 #>  [8963,]  183  194  195 #>  [8964,]  183  194  195 #>  [8965,]  183  194  195 #>  [8966,]  183  194  195 #>  [8967,]  183  194  195 #>  [8968,]  183  194  195 #>  [8969,]  183  194  195 #>  [8970,]  184  195  194 #>  [8971,]  183  194  195 #>  [8972,]  183  194  195 #>  [8973,]  183  194  195 #>  [8974,]  183  194  195 #>  [8975,]  183  194  195 #>  [8976,]  183  194  195 #>  [8977,]  183  194  195 #>  [8978,]  183  194  195 #>  [8979,]  183  194  195 #>  [8980,]  183  194  195 #>  [8981,]  183  194  195 #>  [8982,]  183  194  195 #>  [8983,]  183  194  195 #>  [8984,]  183  194  195 #>  [8985,]  183  194  195 #>  [8986,]  184  195  195 #>  [8987,]  183  194  195 #>  [8988,]  183  194  195 #>  [8989,]  183  194  195 #>  [8990,]  183  194  195 #>  [8991,]  183  194  195 #>  [8992,]  183  194  195 #>  [8993,]  183  194  195 #>  [8994,]  183  194  195 #>  [8995,]  183  194  195 #>  [8996,]  183  194  195 #>  [8997,]  183  194  195 #>  [8998,]  183  194  195 #>  [8999,]  183  194  195 #>  [9000,]  183  194  195 #>  [9001,]  186  197  197 #>  [9002,]  185  196  196 #>  [9003,]  185  196  196 #>  [9004,]  186  197  197 #>  [9005,]  186  197  197 #>  [9006,]  185  196  196 #>  [9007,]  185  196  196 #>  [9008,]  185  196  196 #>  [9009,]  185  196  196 #>  [9010,]  186  197  197 #>  [9011,]  186  197  197 #>  [9012,]  186  197  197 #>  [9013,]  186  197  197 #>  [9014,]  186  197  197 #>  [9015,]  186  197  197 #>  [9016,]  186  197  197 #>  [9017,]  186  197  197 #>  [9018,]  186  197  197 #>  [9019,]  186  197  197 #>  [9020,]  185  196  196 #>  [9021,]  185  196  196 #>  [9022,]  186  197  197 #>  [9023,]  185  196  196 #>  [9024,]  186  197  197 #>  [9025,]  185  196  196 #>  [9026,]  186  197  197 #>  [9027,]  186  197  197 #>  [9028,]  186  197  197 #>  [9029,]  185  196  196 #>  [9030,]  186  197  197 #>  [9031,]  186  197  197 #>  [9032,]  186  197  197 #>  [9033,]  186  197  197 #>  [9034,]  185  196  196 #>  [9035,]  185  196  196 #>  [9036,]  185  196  196 #>  [9037,]  185  196  196 #>  [9038,]  186  197  197 #>  [9039,]  186  197  197 #>  [9040,]  185  196  196 #>  [9041,]  185  196  196 #>  [9042,]  185  196  196 #>  [9043,]  186  197  197 #>  [9044,]  185  196  196 #>  [9045,]  185  196  196 #>  [9046,]  186  197  197 #>  [9047,]  186  197  197 #>  [9048,]  186  197  197 #>  [9049,]  185  196  196 #>  [9050,]  185  196  196 #>  [9051,]  186  197  197 #>  [9052,]  186  197  197 #>  [9053,]  185  196  196 #>  [9054,]  185  196  196 #>  [9055,]  185  196  196 #>  [9056,]  185  196  196 #>  [9057,]  185  196  196 #>  [9058,]  186  197  197 #>  [9059,]  186  197  197 #>  [9060,]  185  196  196 #>  [9061,]  186  197  197 #>  [9062,]  185  196  196 #>  [9063,]  186  197  197 #>  [9064,]  185  196  196 #>  [9065,]  185  196  196 #>  [9066,]  186  197  197 #>  [9067,]  185  196  196 #>  [9068,]  186  197  197 #>  [9069,]  186  197  197 #>  [9070,]  186  197  197 #>  [9071,]  186  197  197 #>  [9072,]  185  196  196 #>  [9073,]  185  196  196 #>  [9074,]  185  196  196 #>  [9075,]  186  197  197 #>  [9076,]  185  196  196 #>  [9077,]  186  197  197 #>  [9078,]  186  197  197 #>  [9079,]  186  197  197 #>  [9080,]  185  196  196 #>  [9081,]  185  196  196 #>  [9082,]  185  196  196 #>  [9083,]  186  197  197 #>  [9084,]  185  196  196 #>  [9085,]  185  196  196 #>  [9086,]  185  196  196 #>  [9087,]  186  197  197 #>  [9088,]  185  196  196 #>  [9089,]  185  196  196 #>  [9090,]  186  197  197 #>  [9091,]  186  197  197 #>  [9092,]  186  197  197 #>  [9093,]  186  197  197 #>  [9094,]  185  196  196 #>  [9095,]  186  197  197 #>  [9096,]  186  197  197 #>  [9097,]  185  196  196 #>  [9098,]  185  196  196 #>  [9099,]  185  196  196 #>  [9100,]  186  197  197 #>  [9101,]  188  199  199 #>  [9102,]  188  199  199 #>  [9103,]  187  198  198 #>  [9104,]  187  198  198 #>  [9105,]  188  199  199 #>  [9106,]  188  199  199 #>  [9107,]  187  198  198 #>  [9108,]  187  198  198 #>  [9109,]  188  199  199 #>  [9110,]  188  199  199 #>  [9111,]  188  199  199 #>  [9112,]  187  198  198 #>  [9113,]  188  199  199 #>  [9114,]  188  199  199 #>  [9115,]  188  199  199 #>  [9116,]  188  199  199 #>  [9117,]  188  199  199 #>  [9118,]  188  199  199 #>  [9119,]  188  199  199 #>  [9120,]  188  199  199 #>  [9121,]  188  199  199 #>  [9122,]  188  199  199 #>  [9123,]  187  198  198 #>  [9124,]  188  199  199 #>  [9125,]  187  198  198 #>  [9126,]  188  199  199 #>  [9127,]  188  199  199 #>  [9128,]  188  199  199 #>  [9129,]  188  199  199 #>  [9130,]  188  199  199 #>  [9131,]  187  198  198 #>  [9132,]  188  199  199 #>  [9133,]  188  199  199 #>  [9134,]  188  199  199 #>  [9135,]  188  199  199 #>  [9136,]  188  199  199 #>  [9137,]  187  198  198 #>  [9138,]  188  199  199 #>  [9139,]  188  199  199 #>  [9140,]  187  198  198 #>  [9141,]  188  199  199 #>  [9142,]  188  199  199 #>  [9143,]  188  199  199 #>  [9144,]  188  199  199 #>  [9145,]  188  199  199 #>  [9146,]  187  198  198 #>  [9147,]  187  198  198 #>  [9148,]  188  199  199 #>  [9149,]  188  199  199 #>  [9150,]  188  199  199 #>  [9151,]  188  199  199 #>  [9152,]  187  198  198 #>  [9153,]  188  199  199 #>  [9154,]  188  199  199 #>  [9155,]  187  198  198 #>  [9156,]  188  199  199 #>  [9157,]  187  198  198 #>  [9158,]  188  199  199 #>  [9159,]  187  198  198 #>  [9160,]  187  198  198 #>  [9161,]  188  199  199 #>  [9162,]  188  199  199 #>  [9163,]  188  199  199 #>  [9164,]  188  199  199 #>  [9165,]  188  199  199 #>  [9166,]  188  199  199 #>  [9167,]  188  199  199 #>  [9168,]  187  198  198 #>  [9169,]  188  199  199 #>  [9170,]  188  199  199 #>  [9171,]  188  199  199 #>  [9172,]  188  199  199 #>  [9173,]  188  199  199 #>  [9174,]  187  198  198 #>  [9175,]  188  199  199 #>  [9176,]  188  199  199 #>  [9177,]  188  199  199 #>  [9178,]  188  199  199 #>  [9179,]  188  199  199 #>  [9180,]  187  198  198 #>  [9181,]  188  199  199 #>  [9182,]  188  199  199 #>  [9183,]  188  199  199 #>  [9184,]  188  199  199 #>  [9185,]  188  199  199 #>  [9186,]  187  198  198 #>  [9187,]  188  199  199 #>  [9188,]  188  199  199 #>  [9189,]  188  199  199 #>  [9190,]  188  199  199 #>  [9191,]  188  199  199 #>  [9192,]  188  199  199 #>  [9193,]  188  199  199 #>  [9194,]  188  199  199 #>  [9195,]  188  199  199 #>  [9196,]  187  198  198 #>  [9197,]  187  198  198 #>  [9198,]  187  198  198 #>  [9199,]  188  199  199 #>  [9200,]  188  199  199 #>  [9201,]  190  201  201 #>  [9202,]  189  200  200 #>  [9203,]  189  200  200 #>  [9204,]  189  200  200 #>  [9205,]  190  201  201 #>  [9206,]  189  200  200 #>  [9207,]  189  200  200 #>  [9208,]  189  200  200 #>  [9209,]  189  200  200 #>  [9210,]  189  200  200 #>  [9211,]  190  201  201 #>  [9212,]  189  200  200 #>  [9213,]  189  200  200 #>  [9214,]  190  201  201 #>  [9215,]  190  201  201 #>  [9216,]  189  200  200 #>  [9217,]  190  201  201 #>  [9218,]  190  201  201 #>  [9219,]  189  200  200 #>  [9220,]  189  200  200 #>  [9221,]  189  200  200 #>  [9222,]  190  201  201 #>  [9223,]  189  200  200 #>  [9224,]  189  200  200 #>  [9225,]  189  200  200 #>  [9226,]  190  201  201 #>  [9227,]  190  201  201 #>  [9228,]  189  200  200 #>  [9229,]  189  200  200 #>  [9230,]  189  200  200 #>  [9231,]  190  201  201 #>  [9232,]  190  201  201 #>  [9233,]  189  200  200 #>  [9234,]  189  200  200 #>  [9235,]  189  200  200 #>  [9236,]  189  200  200 #>  [9237,]  189  200  200 #>  [9238,]  189  200  200 #>  [9239,]  189  200  200 #>  [9240,]  189  200  200 #>  [9241,]  189  200  200 #>  [9242,]  189  200  200 #>  [9243,]  190  201  201 #>  [9244,]  189  200  200 #>  [9245,]  189  200  200 #>  [9246,]  189  200  200 #>  [9247,]  190  201  201 #>  [9248,]  189  200  200 #>  [9249,]  189  200  200 #>  [9250,]  189  200  200 #>  [9251,]  189  200  200 #>  [9252,]  189  200  200 #>  [9253,]  189  200  200 #>  [9254,]  189  200  200 #>  [9255,]  189  200  200 #>  [9256,]  189  200  200 #>  [9257,]  189  200  200 #>  [9258,]  190  201  201 #>  [9259,]  190  201  201 #>  [9260,]  189  200  200 #>  [9261,]  190  201  201 #>  [9262,]  189  200  200 #>  [9263,]  189  200  200 #>  [9264,]  189  200  200 #>  [9265,]  189  200  200 #>  [9266,]  190  201  201 #>  [9267,]  189  200  200 #>  [9268,]  189  200  200 #>  [9269,]  189  200  200 #>  [9270,]  190  201  201 #>  [9271,]  190  201  201 #>  [9272,]  189  200  200 #>  [9273,]  189  200  200 #>  [9274,]  189  200  200 #>  [9275,]  190  201  201 #>  [9276,]  189  200  200 #>  [9277,]  190  201  201 #>  [9278,]  189  200  200 #>  [9279,]  190  201  201 #>  [9280,]  189  200  200 #>  [9281,]  189  200  200 #>  [9282,]  189  200  200 #>  [9283,]  189  200  200 #>  [9284,]  189  200  200 #>  [9285,]  189  200  200 #>  [9286,]  189  200  200 #>  [9287,]  190  201  201 #>  [9288,]  189  200  200 #>  [9289,]  189  200  200 #>  [9290,]  189  200  200 #>  [9291,]  190  201  201 #>  [9292,]  189  200  200 #>  [9293,]  189  200  200 #>  [9294,]  189  200  200 #>  [9295,]  190  201  201 #>  [9296,]  189  200  200 #>  [9297,]  189  200  200 #>  [9298,]  189  200  200 #>  [9299,]  189  200  200 #>  [9300,]  190  201  201 #>  [9301,]  192  204  203 #>  [9302,]  192  205  203 #>  [9303,]  192  203  203 #>  [9304,]  191  202  202 #>  [9305,]  192  205  203 #>  [9306,]  192  204  204 #>  [9307,]  192  203  203 #>  [9308,]  191  202  202 #>  [9309,]  191  202  202 #>  [9310,]  191  202  202 #>  [9311,]  192  204  204 #>  [9312,]  192  205  204 #>  [9313,]  192  203  203 #>  [9314,]  192  204  204 #>  [9315,]  192  205  204 #>  [9316,]  192  203  203 #>  [9317,]  192  203  203 #>  [9318,]  191  202  202 #>  [9319,]  192  204  204 #>  [9320,]  191  202  202 #>  [9321,]  192  205  204 #>  [9322,]  192  203  203 #>  [9323,]  192  205  203 #>  [9324,]  192  203  203 #>  [9325,]  192  203  203 #>  [9326,]  192  204  204 #>  [9327,]  192  205  204 #>  [9328,]  192  204  203 #>  [9329,]  192  203  203 #>  [9330,]  191  202  202 #>  [9331,]  192  205  204 #>  [9332,]  192  205  204 #>  [9333,]  192  205  204 #>  [9334,]  192  204  203 #>  [9335,]  192  204  203 #>  [9336,]  192  205  204 #>  [9337,]  192  204  203 #>  [9338,]  192  204  204 #>  [9339,]  191  202  202 #>  [9340,]  192  203  203 #>  [9341,]  192  205  204 #>  [9342,]  192  204  204 #>  [9343,]  191  202  202 #>  [9344,]  192  203  203 #>  [9345,]  191  202  202 #>  [9346,]  192  203  203 #>  [9347,]  192  203  203 #>  [9348,]  192  205  204 #>  [9349,]  191  202  202 #>  [9350,]  192  203  203 #>  [9351,]  191  202  202 #>  [9352,]  192  204  203 #>  [9353,]  191  202  202 #>  [9354,]  192  203  203 #>  [9355,]  192  203  203 #>  [9356,]  191  202  202 #>  [9357,]  192  205  203 #>  [9358,]  192  205  204 #>  [9359,]  192  203  203 #>  [9360,]  191  202  202 #>  [9361,]  192  205  204 #>  [9362,]  192  205  204 #>  [9363,]  192  203  203 #>  [9364,]  191  202  202 #>  [9365,]  191  202  202 #>  [9366,]  191  202  202 #>  [9367,]  191  202  202 #>  [9368,]  192  204  204 #>  [9369,]  192  204  204 #>  [9370,]  192  203  203 #>  [9371,]  192  205  203 #>  [9372,]  192  203  203 #>  [9373,]  192  204  203 #>  [9374,]  192  205  204 #>  [9375,]  192  205  204 #>  [9376,]  192  203  203 #>  [9377,]  192  203  203 #>  [9378,]  191  202  202 #>  [9379,]  192  203  203 #>  [9380,]  192  205  203 #>  [9381,]  192  205  203 #>  [9382,]  192  205  204 #>  [9383,]  192  203  203 #>  [9384,]  192  203  203 #>  [9385,]  191  202  202 #>  [9386,]  192  203  203 #>  [9387,]  192  205  203 #>  [9388,]  192  205  203 #>  [9389,]  191  202  202 #>  [9390,]  192  203  203 #>  [9391,]  191  202  202 #>  [9392,]  192  205  204 #>  [9393,]  192  205  204 #>  [9394,]  192  203  203 #>  [9395,]  191  202  202 #>  [9396,]  192  204  204 #>  [9397,]  192  204  204 #>  [9398,]  192  203  203 #>  [9399,]  192  205  204 #>  [9400,]  192  203  203 #>  [9401,]  194  207  206 #>  [9402,]  193  206  205 #>  [9403,]  193  206  205 #>  [9404,]  193  206  205 #>  [9405,]  193  206  205 #>  [9406,]  193  206  205 #>  [9407,]  193  206  205 #>  [9408,]  193  206  205 #>  [9409,]  193  206  205 #>  [9410,]  193  206  205 #>  [9411,]  193  206  205 #>  [9412,]  193  206  205 #>  [9413,]  193  206  205 #>  [9414,]  194  207  206 #>  [9415,]  194  207  206 #>  [9416,]  194  207  206 #>  [9417,]  193  206  205 #>  [9418,]  193  206  205 #>  [9419,]  193  206  205 #>  [9420,]  193  206  205 #>  [9421,]  193  206  205 #>  [9422,]  193  206  205 #>  [9423,]  193  206  205 #>  [9424,]  193  206  205 #>  [9425,]  193  206  205 #>  [9426,]  193  206  205 #>  [9427,]  193  206  205 #>  [9428,]  193  206  205 #>  [9429,]  193  206  205 #>  [9430,]  193  206  205 #>  [9431,]  193  206  205 #>  [9432,]  193  206  205 #>  [9433,]  193  206  205 #>  [9434,]  193  206  205 #>  [9435,]  193  206  205 #>  [9436,]  193  206  205 #>  [9437,]  193  206  205 #>  [9438,]  193  206  205 #>  [9439,]  193  206  205 #>  [9440,]  193  206  205 #>  [9441,]  194  207  206 #>  [9442,]  193  206  205 #>  [9443,]  193  206  205 #>  [9444,]  194  207  206 #>  [9445,]  193  206  205 #>  [9446,]  193  206  205 #>  [9447,]  193  206  205 #>  [9448,]  193  206  205 #>  [9449,]  193  206  205 #>  [9450,]  194  207  206 #>  [9451,]  193  206  205 #>  [9452,]  193  206  205 #>  [9453,]  193  206  205 #>  [9454,]  193  206  205 #>  [9455,]  193  206  205 #>  [9456,]  193  206  205 #>  [9457,]  193  206  205 #>  [9458,]  193  206  205 #>  [9459,]  194  207  206 #>  [9460,]  193  206  205 #>  [9461,]  193  206  205 #>  [9462,]  193  206  205 #>  [9463,]  193  206  205 #>  [9464,]  193  206  205 #>  [9465,]  193  206  205 #>  [9466,]  193  206  205 #>  [9467,]  193  206  205 #>  [9468,]  193  206  205 #>  [9469,]  193  206  205 #>  [9470,]  194  207  206 #>  [9471,]  193  206  205 #>  [9472,]  193  206  205 #>  [9473,]  194  207  206 #>  [9474,]  193  206  205 #>  [9475,]  193  206  205 #>  [9476,]  193  206  205 #>  [9477,]  193  206  205 #>  [9478,]  193  206  205 #>  [9479,]  193  206  205 #>  [9480,]  193  206  205 #>  [9481,]  193  206  205 #>  [9482,]  193  206  205 #>  [9483,]  193  206  205 #>  [9484,]  193  206  205 #>  [9485,]  193  206  205 #>  [9486,]  193  206  205 #>  [9487,]  193  206  205 #>  [9488,]  193  206  205 #>  [9489,]  193  206  205 #>  [9490,]  193  206  205 #>  [9491,]  193  206  205 #>  [9492,]  193  206  205 #>  [9493,]  193  206  205 #>  [9494,]  193  206  205 #>  [9495,]  193  206  205 #>  [9496,]  194  207  206 #>  [9497,]  193  206  205 #>  [9498,]  193  206  205 #>  [9499,]  194  207  206 #>  [9500,]  193  206  205 #>  [9501,]  196  209  208 #>  [9502,]  196  209  208 #>  [9503,]  195  208  207 #>  [9504,]  196  209  208 #>  [9505,]  196  209  208 #>  [9506,]  196  209  208 #>  [9507,]  195  208  207 #>  [9508,]  196  209  208 #>  [9509,]  196  209  208 #>  [9510,]  196  209  208 #>  [9511,]  196  209  208 #>  [9512,]  196  209  208 #>  [9513,]  196  209  208 #>  [9514,]  196  209  208 #>  [9515,]  196  209  208 #>  [9516,]  196  209  208 #>  [9517,]  196  209  208 #>  [9518,]  196  209  208 #>  [9519,]  196  209  208 #>  [9520,]  195  208  207 #>  [9521,]  196  209  208 #>  [9522,]  196  209  208 #>  [9523,]  196  209  208 #>  [9524,]  196  209  208 #>  [9525,]  195  208  207 #>  [9526,]  196  209  208 #>  [9527,]  196  209  208 #>  [9528,]  196  209  208 #>  [9529,]  196  209  208 #>  [9530,]  196  209  208 #>  [9531,]  196  209  208 #>  [9532,]  196  209  208 #>  [9533,]  196  209  208 #>  [9534,]  196  209  208 #>  [9535,]  196  209  208 #>  [9536,]  196  209  208 #>  [9537,]  196  209  208 #>  [9538,]  196  209  208 #>  [9539,]  195  208  207 #>  [9540,]  196  209  208 #>  [9541,]  196  209  208 #>  [9542,]  196  209  208 #>  [9543,]  196  209  208 #>  [9544,]  196  209  208 #>  [9545,]  196  209  208 #>  [9546,]  196  209  208 #>  [9547,]  196  209  208 #>  [9548,]  196  209  208 #>  [9549,]  195  208  207 #>  [9550,]  196  209  208 #>  [9551,]  196  209  208 #>  [9552,]  196  209  208 #>  [9553,]  195  208  207 #>  [9554,]  196  209  208 #>  [9555,]  195  208  207 #>  [9556,]  195  208  207 #>  [9557,]  196  209  208 #>  [9558,]  196  209  208 #>  [9559,]  196  209  208 #>  [9560,]  196  209  208 #>  [9561,]  196  209  208 #>  [9562,]  196  209  208 #>  [9563,]  196  209  208 #>  [9564,]  196  209  208 #>  [9565,]  195  208  207 #>  [9566,]  195  208  207 #>  [9567,]  196  209  208 #>  [9568,]  196  209  208 #>  [9569,]  196  209  208 #>  [9570,]  196  209  208 #>  [9571,]  196  209  208 #>  [9572,]  196  209  208 #>  [9573,]  196  209  208 #>  [9574,]  196  209  208 #>  [9575,]  196  209  208 #>  [9576,]  196  209  208 #>  [9577,]  196  209  208 #>  [9578,]  196  209  208 #>  [9579,]  196  209  208 #>  [9580,]  196  209  208 #>  [9581,]  196  209  208 #>  [9582,]  196  209  208 #>  [9583,]  196  209  208 #>  [9584,]  196  209  208 #>  [9585,]  196  209  208 #>  [9586,]  196  209  208 #>  [9587,]  196  209  208 #>  [9588,]  196  209  208 #>  [9589,]  196  209  208 #>  [9590,]  195  208  207 #>  [9591,]  196  209  208 #>  [9592,]  196  209  208 #>  [9593,]  196  209  208 #>  [9594,]  196  209  208 #>  [9595,]  196  209  208 #>  [9596,]  196  209  208 #>  [9597,]  196  209  208 #>  [9598,]  196  209  208 #>  [9599,]  196  209  208 #>  [9600,]  195  208  207 #>  [9601,]  198  211  210 #>  [9602,]  198  211  210 #>  [9603,]  197  210  209 #>  [9604,]  197  210  209 #>  [9605,]  198  211  210 #>  [9606,]  198  211  210 #>  [9607,]  197  210  209 #>  [9608,]  197  210  209 #>  [9609,]  198  211  210 #>  [9610,]  198  211  210 #>  [9611,]  198  211  210 #>  [9612,]  197  210  209 #>  [9613,]  198  212  210 #>  [9614,]  198  211  210 #>  [9615,]  198  212  210 #>  [9616,]  198  211  210 #>  [9617,]  198  211  210 #>  [9618,]  198  211  210 #>  [9619,]  198  212  210 #>  [9620,]  198  212  210 #>  [9621,]  198  211  210 #>  [9622,]  198  212  210 #>  [9623,]  197  210  209 #>  [9624,]  198  211  210 #>  [9625,]  197  210  209 #>  [9626,]  198  211  210 #>  [9627,]  198  212  210 #>  [9628,]  198  211  210 #>  [9629,]  198  212  210 #>  [9630,]  198  211  210 #>  [9631,]  197  210  209 #>  [9632,]  198  211  210 #>  [9633,]  198  211  210 #>  [9634,]  198  211  210 #>  [9635,]  198  211  210 #>  [9636,]  198  212  210 #>  [9637,]  198  212  210 #>  [9638,]  198  212  210 #>  [9639,]  198  211  210 #>  [9640,]  197  210  209 #>  [9641,]  198  212  210 #>  [9642,]  198  211  210 #>  [9643,]  198  212  210 #>  [9644,]  198  211  210 #>  [9645,]  198  211  210 #>  [9646,]  198  212  210 #>  [9647,]  197  210  209 #>  [9648,]  198  211  210 #>  [9649,]  198  211  210 #>  [9650,]  198  212  210 #>  [9651,]  198  212  210 #>  [9652,]  197  210  209 #>  [9653,]  198  212  210 #>  [9654,]  198  211  210 #>  [9655,]  198  212  210 #>  [9656,]  198  211  210 #>  [9657,]  197  210  209 #>  [9658,]  198  212  210 #>  [9659,]  197  210  209 #>  [9660,]  197  210  209 #>  [9661,]  198  211  210 #>  [9662,]  198  211  210 #>  [9663,]  198  211  210 #>  [9664,]  198  212  210 #>  [9665,]  198  211  210 #>  [9666,]  198  212  210 #>  [9667,]  198  211  210 #>  [9668,]  197  210  209 #>  [9669,]  198  212  210 #>  [9670,]  198  211  210 #>  [9671,]  198  212  210 #>  [9672,]  198  211  210 #>  [9673,]  198  211  210 #>  [9674,]  198  211  210 #>  [9675,]  198  211  210 #>  [9676,]  198  211  210 #>  [9677,]  198  212  210 #>  [9678,]  198  211  210 #>  [9679,]  198  211  210 #>  [9680,]  197  210  209 #>  [9681,]  198  212  210 #>  [9682,]  198  211  210 #>  [9683,]  198  212  210 #>  [9684,]  198  212  210 #>  [9685,]  198  212  210 #>  [9686,]  197  210  209 #>  [9687,]  198  212  210 #>  [9688,]  198  211  210 #>  [9689,]  198  211  210 #>  [9690,]  198  212  210 #>  [9691,]  198  211  210 #>  [9692,]  198  211  210 #>  [9693,]  198  211  210 #>  [9694,]  198  211  210 #>  [9695,]  198  212  210 #>  [9696,]  197  210  209 #>  [9697,]  197  210  209 #>  [9698,]  197  210  209 #>  [9699,]  198  211  210 #>  [9700,]  198  212  210 #>  [9701,]  199  213  212 #>  [9702,]  199  213  212 #>  [9703,]  199  213  212 #>  [9704,]  199  213  212 #>  [9705,]  199  213  212 #>  [9706,]  199  213  212 #>  [9707,]  199  213  212 #>  [9708,]  199  213  212 #>  [9709,]  199  213  212 #>  [9710,]  199  213  212 #>  [9711,]  199  213  212 #>  [9712,]  199  213  212 #>  [9713,]  199  213  212 #>  [9714,]  199  213  212 #>  [9715,]  200  214  211 #>  [9716,]  199  213  212 #>  [9717,]  199  213  212 #>  [9718,]  199  213  212 #>  [9719,]  200  214  211 #>  [9720,]  200  214  211 #>  [9721,]  199  213  212 #>  [9722,]  200  214  211 #>  [9723,]  199  213  212 #>  [9724,]  199  213  212 #>  [9725,]  199  213  212 #>  [9726,]  199  213  212 #>  [9727,]  200  214  211 #>  [9728,]  199  213  212 #>  [9729,]  200  214  211 #>  [9730,]  199  213  212 #>  [9731,]  199  213  212 #>  [9732,]  199  213  212 #>  [9733,]  199  213  212 #>  [9734,]  199  213  212 #>  [9735,]  199  213  212 #>  [9736,]  200  214  211 #>  [9737,]  199  213  212 #>  [9738,]  199  213  212 #>  [9739,]  199  213  212 #>  [9740,]  199  213  212 #>  [9741,]  199  213  212 #>  [9742,]  199  213  212 #>  [9743,]  199  213  212 #>  [9744,]  199  213  212 #>  [9745,]  199  213  212 #>  [9746,]  199  213  212 #>  [9747,]  199  213  212 #>  [9748,]  199  213  212 #>  [9749,]  199  213  212 #>  [9750,]  199  213  212 #>  [9751,]  199  213  212 #>  [9752,]  199  213  212 #>  [9753,]  199  213  212 #>  [9754,]  199  213  212 #>  [9755,]  200  214  211 #>  [9756,]  199  213  212 #>  [9757,]  199  213  212 #>  [9758,]  200  214  211 #>  [9759,]  199  213  212 #>  [9760,]  199  213  212 #>  [9761,]  199  213  212 #>  [9762,]  199  213  212 #>  [9763,]  199  213  212 #>  [9764,]  200  214  211 #>  [9765,]  199  213  212 #>  [9766,]  200  214  211 #>  [9767,]  199  213  212 #>  [9768,]  199  213  212 #>  [9769,]  199  213  212 #>  [9770,]  199  213  212 #>  [9771,]  199  213  212 #>  [9772,]  199  213  212 #>  [9773,]  199  213  212 #>  [9774,]  199  213  212 #>  [9775,]  199  213  212 #>  [9776,]  199  213  212 #>  [9777,]  200  214  211 #>  [9778,]  199  213  212 #>  [9779,]  199  213  212 #>  [9780,]  199  213  212 #>  [9781,]  200  214  211 #>  [9782,]  199  213  212 #>  [9783,]  200  214  211 #>  [9784,]  199  213  212 #>  [9785,]  199  213  212 #>  [9786,]  199  213  212 #>  [9787,]  200  214  211 #>  [9788,]  199  213  212 #>  [9789,]  199  213  212 #>  [9790,]  199  213  212 #>  [9791,]  199  213  212 #>  [9792,]  199  213  212 #>  [9793,]  199  213  212 #>  [9794,]  199  213  212 #>  [9795,]  199  213  212 #>  [9796,]  199  213  212 #>  [9797,]  200  214  211 #>  [9798,]  199  213  212 #>  [9799,]  199  213  212 #>  [9800,]  200  214  211 #>  [9801,]  202  216  214 #>  [9802,]  201  215  213 #>  [9803,]  202  216  214 #>  [9804,]  202  216  214 #>  [9805,]  202  216  214 #>  [9806,]  201  215  213 #>  [9807,]  202  216  214 #>  [9808,]  202  216  214 #>  [9809,]  202  216  214 #>  [9810,]  202  216  214 #>  [9811,]  201  215  213 #>  [9812,]  201  215  213 #>  [9813,]  202  216  214 #>  [9814,]  202  216  214 #>  [9815,]  201  215  213 #>  [9816,]  202  216  214 #>  [9817,]  201  215  213 #>  [9818,]  202  216  214 #>  [9819,]  201  215  213 #>  [9820,]  202  216  214 #>  [9821,]  202  216  214 #>  [9822,]  202  216  214 #>  [9823,]  201  215  213 #>  [9824,]  202  216  214 #>  [9825,]  202  216  214 #>  [9826,]  201  215  213 #>  [9827,]  202  216  214 #>  [9828,]  202  216  214 #>  [9829,]  201  215  213 #>  [9830,]  201  215  213 #>  [9831,]  201  215  213 #>  [9832,]  202  216  214 #>  [9833,]  202  216  214 #>  [9834,]  201  215  213 #>  [9835,]  201  215  213 #>  [9836,]  202  216  214 #>  [9837,]  201  215  213 #>  [9838,]  202  216  214 #>  [9839,]  202  216  214 #>  [9840,]  202  216  214 #>  [9841,]  202  216  214 #>  [9842,]  201  215  213 #>  [9843,]  201  215  213 #>  [9844,]  201  215  213 #>  [9845,]  202  216  214 #>  [9846,]  201  215  213 #>  [9847,]  201  215  213 #>  [9848,]  201  215  213 #>  [9849,]  202  216  214 #>  [9850,]  202  216  214 #>  [9851,]  202  216  214 #>  [9852,]  202  216  214 #>  [9853,]  202  216  214 #>  [9854,]  202  216  214 #>  [9855,]  202  216  214 #>  [9856,]  201  215  213 #>  [9857,]  202  216  214 #>  [9858,]  202  216  214 #>  [9859,]  202  216  214 #>  [9860,]  201  215  213 #>  [9861,]  201  215  213 #>  [9862,]  202  216  214 #>  [9863,]  201  215  213 #>  [9864,]  201  215  213 #>  [9865,]  201  215  213 #>  [9866,]  201  215  213 #>  [9867,]  202  216  214 #>  [9868,]  201  215  213 #>  [9869,]  202  216  214 #>  [9870,]  201  215  213 #>  [9871,]  202  216  214 #>  [9872,]  202  216  214 #>  [9873,]  202  216  214 #>  [9874,]  202  216  214 #>  [9875,]  201  215  213 #>  [9876,]  202  216  214 #>  [9877,]  202  216  214 #>  [9878,]  201  215  213 #>  [9879,]  201  215  213 #>  [9880,]  202  216  214 #>  [9881,]  201  215  213 #>  [9882,]  202  216  214 #>  [9883,]  202  216  214 #>  [9884,]  202  216  214 #>  [9885,]  202  216  214 #>  [9886,]  202  216  214 #>  [9887,]  202  216  214 #>  [9888,]  202  216  214 #>  [9889,]  202  216  214 #>  [9890,]  202  216  214 #>  [9891,]  202  216  214 #>  [9892,]  201  215  213 #>  [9893,]  202  216  214 #>  [9894,]  201  215  213 #>  [9895,]  201  215  213 #>  [9896,]  201  215  213 #>  [9897,]  202  216  214 #>  [9898,]  202  216  214 #>  [9899,]  202  216  214 #>  [9900,]  201  215  213 #>  [9901,]  203  218  216 #>  [9902,]  203  218  216 #>  [9903,]  203  218  216 #>  [9904,]  204  217  215 #>  [9905,]  203  218  216 #>  [9906,]  204  217  215 #>  [9907,]  203  218  216 #>  [9908,]  203  218  216 #>  [9909,]  204  217  215 #>  [9910,]  204  217  215 #>  [9911,]  204  217  215 #>  [9912,]  204  217  215 #>  [9913,]  203  218  216 #>  [9914,]  204  217  215 #>  [9915,]  204  217  215 #>  [9916,]  203  218  216 #>  [9917,]  203  218  216 #>  [9918,]  204  217  215 #>  [9919,]  204  217  215 #>  [9920,]  203  218  216 #>  [9921,]  204  217  215 #>  [9922,]  203  218  216 #>  [9923,]  204  217  215 #>  [9924,]  203  218  216 #>  [9925,]  203  218  216 #>  [9926,]  204  217  215 #>  [9927,]  204  217  215 #>  [9928,]  203  218  216 #>  [9929,]  203  218  216 #>  [9930,]  204  217  215 #>  [9931,]  204  217  215 #>  [9932,]  204  217  215 #>  [9933,]  204  217  215 #>  [9934,]  204  217  215 #>  [9935,]  203  218  216 #>  [9936,]  204  217  215 #>  [9937,]  203  218  216 #>  [9938,]  204  217  215 #>  [9939,]  203  218  216 #>  [9940,]  203  218  216 #>  [9941,]  204  217  215 #>  [9942,]  204  217  215 #>  [9943,]  203  218  216 #>  [9944,]  203  218  216 #>  [9945,]  203  218  216 #>  [9946,]  203  218  216 #>  [9947,]  203  218  216 #>  [9948,]  204  217  215 #>  [9949,]  203  218  216 #>  [9950,]  203  218  216 #>  [9951,]  203  218  216 #>  [9952,]  204  217  215 #>  [9953,]  203  218  216 #>  [9954,]  203  218  216 #>  [9955,]  203  218  216 #>  [9956,]  203  218  216 #>  [9957,]  203  218  216 #>  [9958,]  204  217  215 #>  [9959,]  203  218  216 #>  [9960,]  204  217  215 #>  [9961,]  204  217  215 #>  [9962,]  204  217  215 #>  [9963,]  203  218  216 #>  [9964,]  204  217  215 #>  [9965,]  203  218  216 #>  [9966,]  203  218  216 #>  [9967,]  204  217  215 #>  [9968,]  204  217  215 #>  [9969,]  204  217  215 #>  [9970,]  203  218  216 #>  [9971,]  203  218  216 #>  [9972,]  203  218  216 #>  [9973,]  204  217  215 #>  [9974,]  204  217  215 #>  [9975,]  204  217  215 #>  [9976,]  203  218  216 #>  [9977,]  203  218  216 #>  [9978,]  203  218  216 #>  [9979,]  203  218  216 #>  [9980,]  204  217  215 #>  [9981,]  203  218  216 #>  [9982,]  204  217  215 #>  [9983,]  203  218  216 #>  [9984,]  203  218  216 #>  [9985,]  204  217  215 #>  [9986,]  203  218  216 #>  [9987,]  203  218  216 #>  [9988,]  203  218  216 #>  [9989,]  203  218  216 #>  [9990,]  203  218  216 #>  [9991,]  204  217  215 #>  [9992,]  204  217  215 #>  [9993,]  204  217  215 #>  [9994,]  203  218  216 #>  [9995,]  203  218  216 #>  [9996,]  204  217  215 #>  [9997,]  204  217  215 #>  [9998,]  203  218  216 #>  [9999,]  204  217  215 #> [10000,]  203  218  216 #> [10001,]  207  220  217 #> [10002,]  205  219  218 #> [10003,]  205  219  218 #> [10004,]  205  219  218 #> [10005,]  205  219  218 #> [10006,]  207  220  217 #> [10007,]  205  219  218 #> [10008,]  205  219  218 #> [10009,]  205  219  218 #> [10010,]  205  219  218 #> [10011,]  205  219  218 #> [10012,]  205  219  218 #> [10013,]  207  220  217 #> [10014,]  206  220  217 #> [10015,]  207  220  217 #> [10016,]  206  220  217 #> [10017,]  205  219  218 #> [10018,]  205  219  218 #> [10019,]  205  219  218 #> [10020,]  205  219  218 #> [10021,]  207  220  217 #> [10022,]  205  219  218 #> [10023,]  205  219  218 #> [10024,]  205  219  218 #> [10025,]  205  219  218 #> [10026,]  205  219  218 #> [10027,]  205  219  218 #> [10028,]  205  219  218 #> [10029,]  207  220  217 #> [10030,]  205  219  218 #> [10031,]  205  219  218 #> [10032,]  205  219  218 #> [10033,]  207  220  217 #> [10034,]  205  219  218 #> [10035,]  205  219  218 #> [10036,]  205  219  218 #> [10037,]  205  219  218 #> [10038,]  205  219  218 #> [10039,]  205  219  218 #> [10040,]  205  219  218 #> [10041,]  207  220  217 #> [10042,]  205  219  218 #> [10043,]  205  219  218 #> [10044,]  206  220  217 #> [10045,]  205  219  218 #> [10046,]  205  219  218 #> [10047,]  205  219  218 #> [10048,]  205  219  218 #> [10049,]  205  219  218 #> [10050,]  207  220  217 #> [10051,]  205  219  218 #> [10052,]  205  219  218 #> [10053,]  205  219  218 #> [10054,]  205  219  218 #> [10055,]  205  219  218 #> [10056,]  205  219  218 #> [10057,]  205  219  218 #> [10058,]  205  219  218 #> [10059,]  206  220  217 #> [10060,]  205  219  218 #> [10061,]  207  220  217 #> [10062,]  205  219  218 #> [10063,]  205  219  218 #> [10064,]  205  219  218 #> [10065,]  205  219  218 #> [10066,]  205  219  218 #> [10067,]  205  219  218 #> [10068,]  206  220  217 #> [10069,]  205  219  218 #> [10070,]  207  220  217 #> [10071,]  205  219  218 #> [10072,]  205  219  218 #> [10073,]  207  220  217 #> [10074,]  205  219  218 #> [10075,]  205  219  218 #> [10076,]  205  219  218 #> [10077,]  205  219  218 #> [10078,]  205  219  218 #> [10079,]  205  219  218 #> [10080,]  205  219  218 #> [10081,]  205  219  218 #> [10082,]  205  219  218 #> [10083,]  207  220  217 #> [10084,]  205  219  218 #> [10085,]  205  219  218 #> [10086,]  206  220  217 #> [10087,]  205  219  218 #> [10088,]  205  219  218 #> [10089,]  205  219  218 #> [10090,]  205  219  218 #> [10091,]  205  219  218 #> [10092,]  205  219  218 #> [10093,]  205  219  218 #> [10094,]  205  219  218 #> [10095,]  205  219  218 #> [10096,]  206  220  217 #> [10097,]  205  219  218 #> [10098,]  205  219  218 #> [10099,]  207  220  217 #> [10100,]  205  219  218 #> [10101,]  208  221  220 #> [10102,]  208  221  220 #> [10103,]  208  221  220 #> [10104,]  209  222  219 #> [10105,]  208  221  220 #> [10106,]  208  221  220 #> [10107,]  208  221  221 #> [10108,]  208  221  220 #> [10109,]  208  221  220 #> [10110,]  208  221  221 #> [10111,]  209  222  219 #> [10112,]  209  222  219 #> [10113,]  208  221  220 #> [10114,]  209  222  219 #> [10115,]  209  222  219 #> [10116,]  208  221  221 #> [10117,]  208  221  220 #> [10118,]  208  221  220 #> [10119,]  209  222  219 #> [10120,]  208  221  221 #> [10121,]  209  222  219 #> [10122,]  208  221  220 #> [10123,]  208  221  220 #> [10124,]  208  221  221 #> [10125,]  208  221  221 #> [10126,]  208  221  220 #> [10127,]  209  222  219 #> [10128,]  208  221  221 #> [10129,]  208  221  220 #> [10130,]  208  221  220 #> [10131,]  208  221  220 #> [10132,]  208  221  220 #> [10133,]  208  221  220 #> [10134,]  208  221  220 #> [10135,]  208  221  220 #> [10136,]  208  221  221 #> [10137,]  208  221  220 #> [10138,]  209  222  219 #> [10139,]  208  221  221 #> [10140,]  208  221  220 #> [10141,]  209  222  219 #> [10142,]  209  222  219 #> [10143,]  208  221  220 #> [10144,]  208  221  220 #> [10145,]  208  221  220 #> [10146,]  208  221  220 #> [10147,]  208  221  220 #> [10148,]  209  222  219 #> [10149,]  208  221  220 #> [10150,]  208  221  221 #> [10151,]  208  221  220 #> [10152,]  208  221  221 #> [10153,]  208  221  220 #> [10154,]  208  221  221 #> [10155,]  208  221  220 #> [10156,]  208  221  220 #> [10157,]  208  221  221 #> [10158,]  208  221  220 #> [10159,]  208  221  220 #> [10160,]  208  221  220 #> [10161,]  209  222  219 #> [10162,]  208  221  220 #> [10163,]  208  221  220 #> [10164,]  208  221  220 #> [10165,]  208  221  220 #> [10166,]  208  221  220 #> [10167,]  208  221  221 #> [10168,]  209  222  219 #> [10169,]  209  222  219 #> [10170,]  208  221  220 #> [10171,]  208  221  220 #> [10172,]  208  221  220 #> [10173,]  208  221  221 #> [10174,]  209  222  219 #> [10175,]  209  222  219 #> [10176,]  208  221  221 #> [10177,]  208  221  220 #> [10178,]  208  221  220 #> [10179,]  208  221  220 #> [10180,]  208  221  220 #> [10181,]  208  221  220 #> [10182,]  209  222  219 #> [10183,]  208  221  220 #> [10184,]  208  221  220 #> [10185,]  208  221  220 #> [10186,]  208  221  221 #> [10187,]  208  221  220 #> [10188,]  208  221  220 #> [10189,]  208  221  220 #> [10190,]  208  221  220 #> [10191,]  208  221  221 #> [10192,]  209  222  219 #> [10193,]  209  222  219 #> [10194,]  208  221  220 #> [10195,]  208  221  220 #> [10196,]  209  222  219 #> [10197,]  209  222  219 #> [10198,]  208  221  220 #> [10199,]  208  221  220 #> [10200,]  208  221  220 #> [10201,]  211  224  223 #> [10202,]  211  224  223 #> [10203,]  210  223  222 #> [10204,]  210  223  222 #> [10205,]  210  223  222 #> [10206,]  210  223  222 #> [10207,]  210  223  222 #> [10208,]  211  224  223 #> [10209,]  210  223  222 #> [10210,]  210  223  222 #> [10211,]  210  223  222 #> [10212,]  210  223  222 #> [10213,]  211  224  223 #> [10214,]  210  223  222 #> [10215,]  211  224  223 #> [10216,]  211  224  223 #> [10217,]  210  223  222 #> [10218,]  210  223  222 #> [10219,]  211  224  223 #> [10220,]  211  224  223 #> [10221,]  210  223  222 #> [10222,]  211  224  223 #> [10223,]  211  224  223 #> [10224,]  210  223  222 #> [10225,]  210  223  222 #> [10226,]  211  224  223 #> [10227,]  211  224  223 #> [10228,]  210  223  222 #> [10229,]  211  224  223 #> [10230,]  211  224  223 #> [10231,]  210  223  222 #> [10232,]  210  223  222 #> [10233,]  211  224  223 #> [10234,]  210  223  222 #> [10235,]  210  223  222 #> [10236,]  211  224  223 #> [10237,]  211  224  223 #> [10238,]  211  224  223 #> [10239,]  210  223  222 #> [10240,]  210  223  222 #> [10241,]  211  224  223 #> [10242,]  210  223  222 #> [10243,]  211  224  223 #> [10244,]  211  224  223 #> [10245,]  210  223  222 #> [10246,]  211  224  223 #> [10247,]  210  223  222 #> [10248,]  210  223  222 #> [10249,]  210  223  222 #> [10250,]  211  224  223 #> [10251,]  211  224  223 #> [10252,]  210  223  222 #> [10253,]  211  224  223 #> [10254,]  210  223  222 #> [10255,]  211  224  223 #> [10256,]  211  224  223 #> [10257,]  210  223  222 #> [10258,]  211  224  223 #> [10259,]  211  224  223 #> [10260,]  211  224  223 #> [10261,]  211  224  223 #> [10262,]  210  223  222 #> [10263,]  211  224  223 #> [10264,]  211  224  223 #> [10265,]  210  223  222 #> [10266,]  211  224  223 #> [10267,]  210  223  222 #> [10268,]  211  224  223 #> [10269,]  211  224  223 #> [10270,]  210  223  222 #> [10271,]  211  224  223 #> [10272,]  210  223  222 #> [10273,]  210  223  222 #> [10274,]  210  223  222 #> [10275,]  211  224  223 #> [10276,]  210  223  222 #> [10277,]  211  224  223 #> [10278,]  211  224  223 #> [10279,]  210  223  222 #> [10280,]  211  224  223 #> [10281,]  211  224  223 #> [10282,]  210  223  222 #> [10283,]  211  224  223 #> [10284,]  211  224  223 #> [10285,]  211  224  223 #> [10286,]  210  223  222 #> [10287,]  211  224  223 #> [10288,]  210  223  222 #> [10289,]  210  223  222 #> [10290,]  211  224  223 #> [10291,]  210  223  222 #> [10292,]  210  223  222 #> [10293,]  211  224  223 #> [10294,]  210  223  222 #> [10295,]  211  224  223 #> [10296,]  211  224  223 #> [10297,]  211  224  223 #> [10298,]  210  223  222 #> [10299,]  210  223  222 #> [10300,]  211  224  223 #> [10301,]  214  226  225 #> [10302,]  214  226  225 #> [10303,]  213  226  225 #> [10304,]  212  225  224 #> [10305,]  214  226  225 #> [10306,]  214  226  225 #> [10307,]  214  226  225 #> [10308,]  212  225  224 #> [10309,]  212  225  224 #> [10310,]  212  225  224 #> [10311,]  214  226  225 #> [10312,]  213  226  225 #> [10313,]  214  226  225 #> [10314,]  213  226  225 #> [10315,]  214  226  225 #> [10316,]  214  226  225 #> [10317,]  214  226  225 #> [10318,]  214  226  225 #> [10319,]  214  226  225 #> [10320,]  214  226  225 #> [10321,]  214  226  225 #> [10322,]  214  226  225 #> [10323,]  214  226  225 #> [10324,]  214  226  225 #> [10325,]  214  226  225 #> [10326,]  213  226  225 #> [10327,]  214  226  225 #> [10328,]  214  226  225 #> [10329,]  214  226  225 #> [10330,]  214  226  225 #> [10331,]  214  226  225 #> [10332,]  213  226  225 #> [10333,]  214  226  225 #> [10334,]  214  226  225 #> [10335,]  214  226  225 #> [10336,]  214  226  225 #> [10337,]  214  226  225 #> [10338,]  214  226  225 #> [10339,]  214  226  225 #> [10340,]  214  226  225 #> [10341,]  214  226  225 #> [10342,]  214  226  225 #> [10343,]  214  226  225 #> [10344,]  214  226  225 #> [10345,]  214  226  225 #> [10346,]  214  226  225 #> [10347,]  214  226  225 #> [10348,]  213  226  225 #> [10349,]  214  226  225 #> [10350,]  214  226  225 #> [10351,]  212  225  224 #> [10352,]  214  226  225 #> [10353,]  214  226  225 #> [10354,]  213  226  225 #> [10355,]  214  226  225 #> [10356,]  214  226  225 #> [10357,]  214  226  225 #> [10358,]  214  226  225 #> [10359,]  214  226  225 #> [10360,]  214  226  225 #> [10361,]  214  226  225 #> [10362,]  213  226  225 #> [10363,]  214  226  225 #> [10364,]  214  226  225 #> [10365,]  214  226  225 #> [10366,]  213  226  225 #> [10367,]  214  226  225 #> [10368,]  214  226  225 #> [10369,]  213  226  225 #> [10370,]  214  226  225 #> [10371,]  214  226  225 #> [10372,]  214  226  225 #> [10373,]  214  226  225 #> [10374,]  214  226  225 #> [10375,]  214  226  225 #> [10376,]  214  226  225 #> [10377,]  214  226  225 #> [10378,]  214  226  225 #> [10379,]  214  226  225 #> [10380,]  213  226  225 #> [10381,]  213  226  225 #> [10382,]  214  226  225 #> [10383,]  214  226  225 #> [10384,]  214  226  225 #> [10385,]  212  225  224 #> [10386,]  214  226  225 #> [10387,]  214  226  225 #> [10388,]  214  226  225 #> [10389,]  213  226  225 #> [10390,]  214  226  225 #> [10391,]  212  225  224 #> [10392,]  214  226  225 #> [10393,]  214  226  225 #> [10394,]  214  226  225 #> [10395,]  212  225  224 #> [10396,]  214  226  225 #> [10397,]  214  226  225 #> [10398,]  214  226  225 #> [10399,]  214  226  225 #> [10400,]  214  226  225 #> [10401,]  215  227  226 #> [10402,]  215  227  226 #> [10403,]  215  227  226 #> [10404,]  215  227  226 #> [10405,]  215  227  226 #> [10406,]  215  227  226 #> [10407,]  215  227  226 #> [10408,]  215  227  226 #> [10409,]  215  227  226 #> [10410,]  215  227  226 #> [10411,]  215  227  226 #> [10412,]  215  227  226 #> [10413,]  215  227  226 #> [10414,]  215  227  226 #> [10415,]  216  228  227 #> [10416,]  215  227  226 #> [10417,]  215  227  226 #> [10418,]  215  227  226 #> [10419,]  216  228  227 #> [10420,]  216  228  227 #> [10421,]  215  227  226 #> [10422,]  216  228  227 #> [10423,]  215  227  226 #> [10424,]  215  227  226 #> [10425,]  215  227  226 #> [10426,]  215  227  226 #> [10427,]  216  228  227 #> [10428,]  215  227  226 #> [10429,]  216  228  227 #> [10430,]  215  227  226 #> [10431,]  215  227  226 #> [10432,]  215  227  226 #> [10433,]  215  227  226 #> [10434,]  215  227  226 #> [10435,]  215  227  226 #> [10436,]  216  228  227 #> [10437,]  216  228  227 #> [10438,]  216  228  227 #> [10439,]  215  227  226 #> [10440,]  215  227  226 #> [10441,]  215  227  226 #> [10442,]  215  227  226 #> [10443,]  215  227  226 #> [10444,]  215  227  226 #> [10445,]  215  227  226 #> [10446,]  215  227  226 #> [10447,]  215  227  226 #> [10448,]  215  227  226 #> [10449,]  215  227  226 #> [10450,]  215  227  226 #> [10451,]  215  227  226 #> [10452,]  215  227  226 #> [10453,]  215  227  226 #> [10454,]  215  227  226 #> [10455,]  216  228  227 #> [10456,]  215  227  226 #> [10457,]  215  227  226 #> [10458,]  216  228  227 #> [10459,]  215  227  226 #> [10460,]  215  227  226 #> [10461,]  215  227  226 #> [10462,]  215  227  226 #> [10463,]  215  227  226 #> [10464,]  216  228  227 #> [10465,]  215  227  226 #> [10466,]  216  228  227 #> [10467,]  215  227  226 #> [10468,]  215  227  226 #> [10469,]  216  228  227 #> [10470,]  215  227  226 #> [10471,]  215  227  226 #> [10472,]  215  227  226 #> [10473,]  215  227  226 #> [10474,]  215  227  226 #> [10475,]  215  227  226 #> [10476,]  215  227  226 #> [10477,]  216  228  227 #> [10478,]  215  227  226 #> [10479,]  215  227  226 #> [10480,]  215  227  226 #> [10481,]  216  228  227 #> [10482,]  215  227  226 #> [10483,]  216  228  227 #> [10484,]  215  227  226 #> [10485,]  215  227  226 #> [10486,]  215  227  226 #> [10487,]  216  228  227 #> [10488,]  215  227  226 #> [10489,]  215  227  226 #> [10490,]  216  228  227 #> [10491,]  215  227  226 #> [10492,]  215  227  226 #> [10493,]  215  227  226 #> [10494,]  215  227  226 #> [10495,]  215  227  226 #> [10496,]  215  227  226 #> [10497,]  216  228  227 #> [10498,]  215  227  226 #> [10499,]  215  227  226 #> [10500,]  216  228  227 #> [10501,]  218  230  229 #> [10502,]  217  229  228 #> [10503,]  217  229  228 #> [10504,]  218  230  229 #> [10505,]  217  229  228 #> [10506,]  217  229  228 #> [10507,]  218  230  229 #> [10508,]  218  230  229 #> [10509,]  218  230  229 #> [10510,]  218  230  229 #> [10511,]  217  229  228 #> [10512,]  217  229  228 #> [10513,]  218  230  229 #> [10514,]  217  229  228 #> [10515,]  218  230  229 #> [10516,]  218  230  229 #> [10517,]  218  230  229 #> [10518,]  218  230  229 #> [10519,]  217  229  228 #> [10520,]  217  229  228 #> [10521,]  218  230  229 #> [10522,]  217  229  228 #> [10523,]  218  230  229 #> [10524,]  217  229  228 #> [10525,]  218  230  229 #> [10526,]  217  229  228 #> [10527,]  218  230  229 #> [10528,]  218  230  229 #> [10529,]  217  229  228 #> [10530,]  217  229  228 #> [10531,]  217  229  228 #> [10532,]  217  229  228 #> [10533,]  217  229  228 #> [10534,]  217  229  228 #> [10535,]  217  229  228 #> [10536,]  217  229  228 #> [10537,]  218  230  229 #> [10538,]  218  230  229 #> [10539,]  218  230  229 #> [10540,]  217  229  228 #> [10541,]  217  229  228 #> [10542,]  217  229  228 #> [10543,]  218  230  229 #> [10544,]  218  230  229 #> [10545,]  218  230  229 #> [10546,]  218  230  229 #> [10547,]  218  230  229 #> [10548,]  217  229  228 #> [10549,]  217  229  228 #> [10550,]  217  229  228 #> [10551,]  217  229  228 #> [10552,]  217  229  228 #> [10553,]  218  230  229 #> [10554,]  217  229  228 #> [10555,]  217  229  228 #> [10556,]  218  230  229 #> [10557,]  217  229  228 #> [10558,]  217  229  228 #> [10559,]  217  229  228 #> [10560,]  217  229  228 #> [10561,]  218  230  229 #> [10562,]  217  229  228 #> [10563,]  217  229  228 #> [10564,]  218  230  229 #> [10565,]  217  229  228 #> [10566,]  217  229  228 #> [10567,]  217  229  228 #> [10568,]  217  229  228 #> [10569,]  217  229  228 #> [10570,]  218  230  229 #> [10571,]  218  230  229 #> [10572,]  218  230  229 #> [10573,]  218  230  229 #> [10574,]  218  230  229 #> [10575,]  218  230  229 #> [10576,]  218  230  229 #> [10577,]  218  230  229 #> [10578,]  217  229  228 #> [10579,]  218  230  229 #> [10580,]  217  229  228 #> [10581,]  217  229  228 #> [10582,]  218  230  229 #> [10583,]  217  229  228 #> [10584,]  218  230  229 #> [10585,]  217  229  228 #> [10586,]  218  230  229 #> [10587,]  218  230  229 #> [10588,]  218  230  229 #> [10589,]  217  229  228 #> [10590,]  218  230  229 #> [10591,]  217  229  228 #> [10592,]  217  229  228 #> [10593,]  217  229  228 #> [10594,]  218  230  229 #> [10595,]  218  230  229 #> [10596,]  218  230  229 #> [10597,]  217  229  228 #> [10598,]  217  229  228 #> [10599,]  217  229  228 #> [10600,]  218  230  229 #> [10601,]  220  232  231 #> [10602,]  220  232  231 #> [10603,]  219  231  230 #> [10604,]  219  231  230 #> [10605,]  220  232  231 #> [10606,]  220  232  231 #> [10607,]  219  231  230 #> [10608,]  219  231  230 #> [10609,]  220  232  231 #> [10610,]  220  232  231 #> [10611,]  220  232  231 #> [10612,]  219  231  230 #> [10613,]  220  232  231 #> [10614,]  220  232  231 #> [10615,]  220  232  231 #> [10616,]  220  232  231 #> [10617,]  220  232  231 #> [10618,]  220  232  231 #> [10619,]  220  232  231 #> [10620,]  220  232  231 #> [10621,]  220  232  231 #> [10622,]  220  232  231 #> [10623,]  219  231  230 #> [10624,]  220  232  231 #> [10625,]  219  231  230 #> [10626,]  220  232  231 #> [10627,]  220  232  231 #> [10628,]  220  232  231 #> [10629,]  220  232  231 #> [10630,]  220  232  231 #> [10631,]  219  231  230 #> [10632,]  220  232  231 #> [10633,]  220  232  231 #> [10634,]  220  232  231 #> [10635,]  220  232  231 #> [10636,]  220  232  231 #> [10637,]  220  232  231 #> [10638,]  220  232  231 #> [10639,]  220  232  231 #> [10640,]  220  232  231 #> [10641,]  220  232  231 #> [10642,]  220  232  231 #> [10643,]  220  232  231 #> [10644,]  220  232  231 #> [10645,]  220  232  231 #> [10646,]  220  232  231 #> [10647,]  219  231  230 #> [10648,]  220  232  231 #> [10649,]  220  232  231 #> [10650,]  220  232  231 #> [10651,]  220  232  231 #> [10652,]  219  231  230 #> [10653,]  220  232  231 #> [10654,]  220  232  231 #> [10655,]  220  232  231 #> [10656,]  220  232  231 #> [10657,]  219  231  230 #> [10658,]  220  232  231 #> [10659,]  219  231  230 #> [10660,]  219  231  230 #> [10661,]  220  232  231 #> [10662,]  220  232  231 #> [10663,]  220  232  231 #> [10664,]  220  232  231 #> [10665,]  220  232  231 #> [10666,]  220  232  231 #> [10667,]  220  232  231 #> [10668,]  219  231  230 #> [10669,]  220  232  231 #> [10670,]  220  232  231 #> [10671,]  220  232  231 #> [10672,]  220  232  231 #> [10673,]  220  232  231 #> [10674,]  220  232  231 #> [10675,]  220  232  231 #> [10676,]  220  232  231 #> [10677,]  220  232  231 #> [10678,]  220  232  231 #> [10679,]  220  232  231 #> [10680,]  219  231  230 #> [10681,]  220  232  231 #> [10682,]  220  232  231 #> [10683,]  220  232  231 #> [10684,]  220  232  231 #> [10685,]  220  232  231 #> [10686,]  219  231  230 #> [10687,]  220  232  231 #> [10688,]  220  232  231 #> [10689,]  220  232  231 #> [10690,]  220  232  231 #> [10691,]  220  232  231 #> [10692,]  220  232  231 #> [10693,]  220  232  231 #> [10694,]  220  232  231 #> [10695,]  220  232  231 #> [10696,]  219  231  230 #> [10697,]  219  231  230 #> [10698,]  219  231  230 #> [10699,]  220  232  231 #> [10700,]  220  232  231 #> [10701,]  222  234  233 #> [10702,]  221  233  232 #> [10703,]  221  233  232 #> [10704,]  222  234  233 #> [10705,]  221  233  232 #> [10706,]  221  233  232 #> [10707,]  222  234  233 #> [10708,]  222  234  233 #> [10709,]  222  234  233 #> [10710,]  222  234  233 #> [10711,]  221  233  232 #> [10712,]  221  233  232 #> [10713,]  222  234  233 #> [10714,]  221  233  232 #> [10715,]  222  234  233 #> [10716,]  222  234  233 #> [10717,]  222  234  233 #> [10718,]  222  234  233 #> [10719,]  221  233  232 #> [10720,]  221  233  232 #> [10721,]  222  234  233 #> [10722,]  221  233  232 #> [10723,]  222  234  233 #> [10724,]  221  233  232 #> [10725,]  222  234  233 #> [10726,]  221  233  232 #> [10727,]  222  234  233 #> [10728,]  222  234  233 #> [10729,]  221  233  232 #> [10730,]  221  233  232 #> [10731,]  221  233  232 #> [10732,]  221  233  232 #> [10733,]  221  233  232 #> [10734,]  221  233  232 #> [10735,]  221  233  232 #> [10736,]  221  233  232 #> [10737,]  221  233  232 #> [10738,]  221  233  232 #> [10739,]  222  234  233 #> [10740,]  221  233  232 #> [10741,]  221  233  232 #> [10742,]  221  233  232 #> [10743,]  222  234  233 #> [10744,]  221  233  232 #> [10745,]  222  234  233 #> [10746,]  222  234  233 #> [10747,]  222  234  233 #> [10748,]  221  233  232 #> [10749,]  221  233  232 #> [10750,]  221  233  232 #> [10751,]  221  233  232 #> [10752,]  221  233  232 #> [10753,]  222  234  233 #> [10754,]  221  233  232 #> [10755,]  221  233  232 #> [10756,]  222  234  233 #> [10757,]  221  233  232 #> [10758,]  221  233  232 #> [10759,]  221  233  232 #> [10760,]  221  233  232 #> [10761,]  222  234  233 #> [10762,]  221  233  232 #> [10763,]  221  233  232 #> [10764,]  222  234  233 #> [10765,]  221  233  232 #> [10766,]  221  233  232 #> [10767,]  221  233  232 #> [10768,]  221  233  232 #> [10769,]  221  233  232 #> [10770,]  222  234  233 #> [10771,]  222  234  233 #> [10772,]  222  234  233 #> [10773,]  222  234  233 #> [10774,]  222  234  233 #> [10775,]  222  234  233 #> [10776,]  222  234  233 #> [10777,]  222  234  233 #> [10778,]  221  233  232 #> [10779,]  221  233  232 #> [10780,]  221  233  232 #> [10781,]  221  233  232 #> [10782,]  222  234  233 #> [10783,]  221  233  232 #> [10784,]  222  234  233 #> [10785,]  221  233  232 #> [10786,]  221  233  232 #> [10787,]  221  233  232 #> [10788,]  222  234  233 #> [10789,]  221  233  232 #> [10790,]  221  233  232 #> [10791,]  221  233  232 #> [10792,]  221  233  232 #> [10793,]  221  233  232 #> [10794,]  222  234  233 #> [10795,]  222  234  233 #> [10796,]  221  233  232 #> [10797,]  221  233  232 #> [10798,]  221  233  232 #> [10799,]  221  233  232 #> [10800,]  222  234  233 #> [10801,]  224  236  235 #> [10802,]  224  236  235 #> [10803,]  223  235  234 #> [10804,]  224  236  235 #> [10805,]  224  236  235 #> [10806,]  224  236  235 #> [10807,]  224  236  235 #> [10808,]  224  236  235 #> [10809,]  223  235  234 #> [10810,]  223  235  234 #> [10811,]  223  235  234 #> [10812,]  224  236  235 #> [10813,]  224  236  235 #> [10814,]  223  235  234 #> [10815,]  224  236  235 #> [10816,]  224  236  235 #> [10817,]  224  236  235 #> [10818,]  224  236  235 #> [10819,]  224  236  235 #> [10820,]  224  236  235 #> [10821,]  223  235  234 #> [10822,]  224  236  235 #> [10823,]  224  236  235 #> [10824,]  224  236  235 #> [10825,]  224  236  235 #> [10826,]  224  236  235 #> [10827,]  224  236  235 #> [10828,]  223  235  234 #> [10829,]  224  236  235 #> [10830,]  224  236  235 #> [10831,]  223  235  234 #> [10832,]  223  235  234 #> [10833,]  224  236  235 #> [10834,]  223  235  234 #> [10835,]  223  235  234 #> [10836,]  224  236  235 #> [10837,]  224  236  235 #> [10838,]  224  236  235 #> [10839,]  223  235  234 #> [10840,]  223  235  234 #> [10841,]  224  236  235 #> [10842,]  224  236  235 #> [10843,]  224  236  235 #> [10844,]  224  236  235 #> [10845,]  224  236  235 #> [10846,]  224  236  235 #> [10847,]  224  236  235 #> [10848,]  223  235  234 #> [10849,]  224  236  235 #> [10850,]  224  236  235 #> [10851,]  224  236  235 #> [10852,]  223  235  234 #> [10853,]  224  236  235 #> [10854,]  224  236  235 #> [10855,]  224  236  235 #> [10856,]  224  236  235 #> [10857,]  224  236  235 #> [10858,]  224  236  235 #> [10859,]  224  236  235 #> [10860,]  224  236  235 #> [10861,]  224  236  235 #> [10862,]  223  235  234 #> [10863,]  224  236  235 #> [10864,]  224  236  235 #> [10865,]  223  235  234 #> [10866,]  224  236  235 #> [10867,]  224  236  235 #> [10868,]  224  236  235 #> [10869,]  224  236  235 #> [10870,]  223  235  234 #> [10871,]  224  236  235 #> [10872,]  224  236  235 #> [10873,]  224  236  235 #> [10874,]  223  235  234 #> [10875,]  224  236  235 #> [10876,]  224  236  235 #> [10877,]  224  236  235 #> [10878,]  224  236  235 #> [10879,]  224  236  235 #> [10880,]  224  236  235 #> [10881,]  224  236  235 #> [10882,]  223  235  234 #> [10883,]  224  236  235 #> [10884,]  224  236  235 #> [10885,]  224  236  235 #> [10886,]  224  236  235 #> [10887,]  224  236  235 #> [10888,]  224  236  235 #> [10889,]  224  236  235 #> [10890,]  224  236  235 #> [10891,]  224  236  235 #> [10892,]  224  236  235 #> [10893,]  224  236  235 #> [10894,]  224  236  235 #> [10895,]  224  236  235 #> [10896,]  224  236  235 #> [10897,]  224  236  235 #> [10898,]  223  235  234 #> [10899,]  224  236  235 #> [10900,]  224  236  235 #> [10901,]  226  238  237 #> [10902,]  226  238  236 #> [10903,]  226  238  237 #> [10904,]  225  237  237 #> [10905,]  226  238  237 #> [10906,]  226  238  236 #> [10907,]  226  238  237 #> [10908,]  225  237  237 #> [10909,]  225  237  237 #> [10910,]  226  238  237 #> [10911,]  225  237  236 #> [10912,]  226  238  236 #> [10913,]  225  237  237 #> [10914,]  226  238  237 #> [10915,]  226  238  236 #> [10916,]  226  238  237 #> [10917,]  225  237  236 #> [10918,]  226  238  237 #> [10919,]  226  238  237 #> [10920,]  226  238  237 #> [10921,]  226  238  237 #> [10922,]  225  237  237 #> [10923,]  226  238  236 #> [10924,]  226  238  237 #> [10925,]  226  238  237 #> [10926,]  226  238  237 #> [10927,]  225  237  237 #> [10928,]  226  238  237 #> [10929,]  226  238  236 #> [10930,]  226  238  237 #> [10931,]  226  238  236 #> [10932,]  226  238  237 #> [10933,]  226  238  237 #> [10934,]  226  238  236 #> [10935,]  225  237  237 #> [10936,]  226  238  237 #> [10937,]  226  238  236 #> [10938,]  226  238  237 #> [10939,]  226  238  237 #> [10940,]  226  238  237 #> [10941,]  226  238  237 #> [10942,]  226  238  236 #> [10943,]  225  237  236 #> [10944,]  225  237  236 #> [10945,]  226  238  237 #> [10946,]  226  238  237 #> [10947,]  226  238  236 #> [10948,]  226  238  236 #> [10949,]  225  237  237 #> [10950,]  226  238  237 #> [10951,]  226  238  237 #> [10952,]  225  237  237 #> [10953,]  226  238  237 #> [10954,]  226  238  237 #> [10955,]  225  237  237 #> [10956,]  226  238  236 #> [10957,]  226  238  237 #> [10958,]  225  237  237 #> [10959,]  226  238  237 #> [10960,]  226  238  237 #> [10961,]  226  238  236 #> [10962,]  226  238  237 #> [10963,]  226  238  236 #> [10964,]  226  238  236 #> [10965,]  226  238  236 #> [10966,]  225  237  237 #> [10967,]  226  238  237 #> [10968,]  226  238  237 #> [10969,]  225  237  237 #> [10970,]  226  238  236 #> [10971,]  226  238  237 #> [10972,]  226  238  237 #> [10973,]  226  238  237 #> [10974,]  226  238  237 #> [10975,]  226  238  236 #> [10976,]  226  238  237 #> [10977,]  226  238  237 #> [10978,]  226  238  236 #> [10979,]  225  237  236 #> [10980,]  225  237  237 #> [10981,]  225  237  236 #> [10982,]  225  237  237 #> [10983,]  225  237  237 #> [10984,]  226  238  237 #> [10985,]  226  238  237 #> [10986,]  226  238  237 #> [10987,]  225  237  237 #> [10988,]  225  237  237 #> [10989,]  225  237  237 #> [10990,]  225  237  237 #> [10991,]  226  238  237 #> [10992,]  225  237  236 #> [10993,]  226  238  237 #> [10994,]  226  238  236 #> [10995,]  225  237  236 #> [10996,]  226  238  237 #> [10997,]  226  238  237 #> [10998,]  226  238  237 #> [10999,]  225  237  237 #> [11000,]  226  238  236 #> [11001,]  229  239  240 #> [11002,]  229  239  240 #> [11003,]  228  239  240 #> [11004,]  227  239  238 #> [11005,]  229  239  240 #> [11006,]  229  239  239 #> [11007,]  228  239  240 #> [11008,]  227  239  238 #> [11009,]  227  239  238 #> [11010,]  228  239  239 #> [11011,]  227  239  239 #> [11012,]  228  239  239 #> [11013,]  227  239  240 #> [11014,]  228  239  239 #> [11015,]  229  239  239 #> [11016,]  228  239  240 #> [11017,]  227  239  238 #> [11018,]  229  239  239 #> [11019,]  229  239  239 #> [11020,]  229  239  240 #> [11021,]  229  239  239 #> [11022,]  227  239  240 #> [11023,]  228  239  240 #> [11024,]  229  239  240 #> [11025,]  228  239  240 #> [11026,]  228  239  239 #> [11027,]  227  239  238 #> [11028,]  229  239  240 #> [11029,]  229  239  240 #> [11030,]  227  239  239 #> [11031,]  228  239  239 #> [11032,]  228  239  239 #> [11033,]  229  239  239 #> [11034,]  228  239  240 #> [11035,]  227  239  240 #> [11036,]  229  239  239 #> [11037,]  228  239  240 #> [11038,]  229  239  239 #> [11039,]  229  239  240 #> [11040,]  228  239  240 #> [11041,]  229  239  239 #> [11042,]  229  239  239 #> [11043,]  227  239  240 #> [11044,]  227  239  238 #> [11045,]  228  239  240 #> [11046,]  228  239  240 #> [11047,]  228  239  240 #> [11048,]  229  239  239 #> [11049,]  227  239  240 #> [11050,]  229  239  240 #> [11051,]  229  239  240 #> [11052,]  227  239  238 #> [11053,]  229  239  240 #> [11054,]  229  239  240 #> [11055,]  227  239  240 #> [11056,]  229  239  240 #> [11057,]  228  239  240 #> [11058,]  227  239  238 #> [11059,]  228  239  240 #> [11060,]  228  239  239 #> [11061,]  229  239  239 #> [11062,]  229  239  239 #> [11063,]  229  239  240 #> [11064,]  229  239  239 #> [11065,]  229  239  240 #> [11066,]  227  239  238 #> [11067,]  228  239  240 #> [11068,]  228  239  239 #> [11069,]  227  239  239 #> [11070,]  229  239  240 #> [11071,]  228  239  240 #> [11072,]  228  239  240 #> [11073,]  229  239  240 #> [11074,]  228  239  239 #> [11075,]  228  239  239 #> [11076,]  228  239  240 #> [11077,]  229  239  240 #> [11078,]  228  239  240 #> [11079,]  227  239  240 #> [11080,]  227  239  240 #> [11081,]  227  239  238 #> [11082,]  227  239  238 #> [11083,]  227  239  240 #> [11084,]  229  239  240 #> [11085,]  229  239  239 #> [11086,]  228  239  240 #> [11087,]  227  239  238 #> [11088,]  227  239  240 #> [11089,]  227  239  240 #> [11090,]  227  239  238 #> [11091,]  229  239  240 #> [11092,]  227  239  238 #> [11093,]  229  239  239 #> [11094,]  229  239  240 #> [11095,]  227  239  238 #> [11096,]  228  239  239 #> [11097,]  228  239  239 #> [11098,]  228  239  240 #> [11099,]  227  239  238 #> [11100,]  229  239  240 #> [11101,]  230  240  241 #> [11102,]  231  241  242 #> [11103,]  231  241  242 #> [11104,]  230  240  241 #> [11105,]  230  240  241 #> [11106,]  231  241  242 #> [11107,]  230  240  241 #> [11108,]  230  240  241 #> [11109,]  230  240  241 #> [11110,]  230  240  241 #> [11111,]  230  240  241 #> [11112,]  231  241  242 #> [11113,]  230  240  241 #> [11114,]  230  240  241 #> [11115,]  230  240  241 #> [11116,]  230  240  241 #> [11117,]  230  240  241 #> [11118,]  231  241  242 #> [11119,]  231  241  242 #> [11120,]  231  241  242 #> [11121,]  230  240  241 #> [11122,]  230  240  241 #> [11123,]  230  240  241 #> [11124,]  230  240  241 #> [11125,]  231  241  242 #> [11126,]  230  240  241 #> [11127,]  230  240  241 #> [11128,]  231  241  242 #> [11129,]  230  240  241 #> [11130,]  230  240  241 #> [11131,]  230  240  241 #> [11132,]  230  240  241 #> [11133,]  231  241  242 #> [11134,]  231  241  242 #> [11135,]  230  240  241 #> [11136,]  230  240  241 #> [11137,]  230  240  241 #> [11138,]  230  240  241 #> [11139,]  230  240  241 #> [11140,]  230  240  241 #> [11141,]  230  240  241 #> [11142,]  230  240  241 #> [11143,]  230  240  241 #> [11144,]  230  240  241 #> [11145,]  230  240  241 #> [11146,]  230  240  241 #> [11147,]  230  240  241 #> [11148,]  230  240  241 #> [11149,]  230  240  241 #> [11150,]  230  240  241 #> [11151,]  230  240  241 #> [11152,]  230  240  241 #> [11153,]  230  240  241 #> [11154,]  230  240  241 #> [11155,]  230  240  241 #> [11156,]  230  240  241 #> [11157,]  230  240  241 #> [11158,]  230  240  241 #> [11159,]  230  240  241 #> [11160,]  231  241  242 #> [11161,]  230  240  241 #> [11162,]  230  240  241 #> [11163,]  230  240  241 #> [11164,]  230  240  241 #> [11165,]  231  241  242 #> [11166,]  230  240  241 #> [11167,]  230  240  241 #> [11168,]  230  240  241 #> [11169,]  230  240  241 #> [11170,]  231  241  242 #> [11171,]  231  241  242 #> [11172,]  230  240  241 #> [11173,]  231  241  242 #> [11174,]  230  240  241 #> [11175,]  230  240  241 #> [11176,]  230  240  241 #> [11177,]  230  240  241 #> [11178,]  230  240  241 #> [11179,]  230  240  241 #> [11180,]  230  240  241 #> [11181,]  230  240  241 #> [11182,]  230  240  241 #> [11183,]  230  240  241 #> [11184,]  231  241  242 #> [11185,]  230  240  241 #> [11186,]  230  240  241 #> [11187,]  230  240  241 #> [11188,]  230  240  241 #> [11189,]  230  240  241 #> [11190,]  230  240  241 #> [11191,]  230  240  241 #> [11192,]  230  240  241 #> [11193,]  231  241  242 #> [11194,]  230  240  241 #> [11195,]  230  240  241 #> [11196,]  230  240  241 #> [11197,]  231  241  242 #> [11198,]  231  241  242 #> [11199,]  230  240  241 #> [11200,]  230  240  241 #> [11201,]  233  243  244 #> [11202,]  232  242  243 #> [11203,]  232  242  243 #> [11204,]  233  243  244 #> [11205,]  232  242  243 #> [11206,]  232  242  243 #> [11207,]  233  243  244 #> [11208,]  232  242  243 #> [11209,]  233  243  244 #> [11210,]  233  243  244 #> [11211,]  232  242  243 #> [11212,]  232  242  243 #> [11213,]  233  243  244 #> [11214,]  233  243  244 #> [11215,]  232  242  243 #> [11216,]  233  243  244 #> [11217,]  232  242  243 #> [11218,]  232  242  243 #> [11219,]  232  242  243 #> [11220,]  233  243  244 #> [11221,]  232  242  243 #> [11222,]  233  243  244 #> [11223,]  232  242  243 #> [11224,]  233  243  244 #> [11225,]  233  243  244 #> [11226,]  232  242  243 #> [11227,]  232  242  243 #> [11228,]  233  243  244 #> [11229,]  232  242  243 #> [11230,]  232  242  243 #> [11231,]  232  242  243 #> [11232,]  232  242  243 #> [11233,]  232  242  243 #> [11234,]  232  242  243 #> [11235,]  232  242  243 #> [11236,]  233  243  244 #> [11237,]  232  242  243 #> [11238,]  232  242  243 #> [11239,]  233  243  244 #> [11240,]  232  242  243 #> [11241,]  232  242  243 #> [11242,]  232  242  243 #> [11243,]  232  242  243 #> [11244,]  232  242  243 #> [11245,]  233  243  244 #> [11246,]  232  242  243 #> [11247,]  232  242  243 #> [11248,]  232  242  243 #> [11249,]  233  243  244 #> [11250,]  233  243  244 #> [11251,]  232  242  243 #> [11252,]  233  243  244 #> [11253,]  233  243  244 #> [11254,]  233  243  244 #> [11255,]  233  243  244 #> [11256,]  232  242  243 #> [11257,]  233  243  244 #> [11258,]  233  243  244 #> [11259,]  233  243  244 #> [11260,]  232  242  243 #> [11261,]  232  242  243 #> [11262,]  232  242  243 #> [11263,]  232  242  243 #> [11264,]  232  242  243 #> [11265,]  232  242  243 #> [11266,]  232  242  243 #> [11267,]  233  243  244 #> [11268,]  232  242  243 #> [11269,]  232  242  243 #> [11270,]  232  242  243 #> [11271,]  232  242  243 #> [11272,]  233  243  244 #> [11273,]  233  243  244 #> [11274,]  232  242  243 #> [11275,]  232  242  243 #> [11276,]  233  243  244 #> [11277,]  232  242  243 #> [11278,]  232  242  243 #> [11279,]  232  242  243 #> [11280,]  232  242  243 #> [11281,]  232  242  243 #> [11282,]  232  242  243 #> [11283,]  232  242  243 #> [11284,]  232  242  243 #> [11285,]  233  243  244 #> [11286,]  233  243  244 #> [11287,]  233  243  244 #> [11288,]  232  242  243 #> [11289,]  232  242  243 #> [11290,]  233  243  244 #> [11291,]  233  243  244 #> [11292,]  232  242  243 #> [11293,]  232  242  243 #> [11294,]  232  242  243 #> [11295,]  232  242  243 #> [11296,]  232  242  243 #> [11297,]  232  242  243 #> [11298,]  232  242  243 #> [11299,]  232  242  243 #> [11300,]  232  242  243 #> [11301,]  235  245  246 #> [11302,]  235  245  245 #> [11303,]  234  244  247 #> [11304,]  234  244  248 #> [11305,]  234  244  247 #> [11306,]  235  245  245 #> [11307,]  234  244  248 #> [11308,]  234  244  247 #> [11309,]  234  244  247 #> [11310,]  234  244  248 #> [11311,]  234  244  247 #> [11312,]  234  244  247 #> [11313,]  235  245  246 #> [11314,]  235  245  246 #> [11315,]  235  245  245 #> [11316,]  235  245  246 #> [11317,]  235  245  245 #> [11318,]  234  244  247 #> [11319,]  234  244  247 #> [11320,]  234  244  248 #> [11321,]  235  245  246 #> [11322,]  234  244  247 #> [11323,]  234  244  247 #> [11324,]  234  244  248 #> [11325,]  234  244  248 #> [11326,]  234  244  247 #> [11327,]  234  244  247 #> [11328,]  234  244  248 #> [11329,]  235  245  245 #> [11330,]  234  244  247 #> [11331,]  234  244  247 #> [11332,]  234  244  247 #> [11333,]  235  245  246 #> [11334,]  234  244  247 #> [11335,]  235  245  245 #> [11336,]  234  244  247 #> [11337,]  234  244  247 #> [11338,]  234  244  247 #> [11339,]  234  244  248 #> [11340,]  234  244  247 #> [11341,]  235  245  246 #> [11342,]  234  244  247 #> [11343,]  234  244  247 #> [11344,]  235  245  245 #> [11345,]  234  244  247 #> [11346,]  234  244  247 #> [11347,]  234  244  247 #> [11348,]  234  244  247 #> [11349,]  234  244  247 #> [11350,]  235  245  246 #> [11351,]  234  244  247 #> [11352,]  234  244  248 #> [11353,]  234  244  247 #> [11354,]  234  244  248 #> [11355,]  234  244  247 #> [11356,]  234  244  247 #> [11357,]  234  244  248 #> [11358,]  234  244  247 #> [11359,]  235  245  246 #> [11360,]  234  244  247 #> [11361,]  235  245  245 #> [11362,]  234  244  247 #> [11363,]  234  244  247 #> [11364,]  234  244  247 #> [11365,]  234  244  247 #> [11366,]  234  244  247 #> [11367,]  234  244  247 #> [11368,]  235  245  245 #> [11369,]  234  244  247 #> [11370,]  235  245  245 #> [11371,]  234  244  247 #> [11372,]  234  244  247 #> [11373,]  235  245  246 #> [11374,]  234  244  247 #> [11375,]  234  244  247 #> [11376,]  235  245  246 #> [11377,]  235  245  246 #> [11378,]  234  244  247 #> [11379,]  235  245  245 #> [11380,]  234  244  247 #> [11381,]  235  245  245 #> [11382,]  234  244  247 #> [11383,]  235  245  246 #> [11384,]  234  244  247 #> [11385,]  234  244  247 #> [11386,]  235  245  246 #> [11387,]  234  244  247 #> [11388,]  234  244  247 #> [11389,]  234  244  247 #> [11390,]  234  244  247 #> [11391,]  234  244  248 #> [11392,]  234  244  247 #> [11393,]  235  245  245 #> [11394,]  234  244  247 #> [11395,]  234  244  247 #> [11396,]  235  245  245 #> [11397,]  234  244  247 #> [11398,]  234  244  247 #> [11399,]  235  245  246 #> [11400,]  234  244  247 #> [11401,]  237  246  251 #> [11402,]  237  246  251 #> [11403,]  237  246  250 #> [11404,]  236  246  249 #> [11405,]  237  246  251 #> [11406,]  237  246  250 #> [11407,]  237  246  250 #> [11408,]  236  246  251 #> [11409,]  236  246  251 #> [11410,]  236  246  249 #> [11411,]  237  246  251 #> [11412,]  237  246  251 #> [11413,]  237  246  251 #> [11414,]  237  246  251 #> [11415,]  237  246  251 #> [11416,]  237  246  251 #> [11417,]  237  246  251 #> [11418,]  237  246  249 #> [11419,]  237  246  251 #> [11420,]  237  246  250 #> [11421,]  237  246  249 #> [11422,]  237  246  251 #> [11423,]  237  246  250 #> [11424,]  237  246  251 #> [11425,]  237  246  249 #> [11426,]  237  246  251 #> [11427,]  237  246  251 #> [11428,]  237  246  251 #> [11429,]  237  246  251 #> [11430,]  237  246  251 #> [11431,]  237  246  251 #> [11432,]  237  246  251 #> [11433,]  237  246  251 #> [11434,]  237  246  250 #> [11435,]  237  246  250 #> [11436,]  237  246  251 #> [11437,]  237  246  250 #> [11438,]  237  246  251 #> [11439,]  237  246  249 #> [11440,]  237  246  251 #> [11441,]  237  246  251 #> [11442,]  237  246  250 #> [11443,]  236  246  249 #> [11444,]  237  246  250 #> [11445,]  237  246  249 #> [11446,]  237  246  251 #> [11447,]  237  246  251 #> [11448,]  237  246  251 #> [11449,]  237  246  251 #> [11450,]  237  246  251 #> [11451,]  236  246  251 #> [11452,]  237  246  251 #> [11453,]  237  246  249 #> [11454,]  237  246  250 #> [11455,]  237  246  250 #> [11456,]  237  246  250 #> [11457,]  237  246  250 #> [11458,]  237  246  251 #> [11459,]  237  246  251 #> [11460,]  236  246  251 #> [11461,]  237  246  249 #> [11462,]  237  246  251 #> [11463,]  237  246  251 #> [11464,]  237  246  250 #> [11465,]  237  246  250 #> [11466,]  237  246  251 #> [11467,]  236  246  251 #> [11468,]  237  246  251 #> [11469,]  237  246  251 #> [11470,]  237  246  251 #> [11471,]  237  246  251 #> [11472,]  237  246  249 #> [11473,]  237  246  249 #> [11474,]  237  246  249 #> [11475,]  237  246  249 #> [11476,]  237  246  249 #> [11477,]  237  246  249 #> [11478,]  237  246  251 #> [11479,]  237  246  251 #> [11480,]  237  246  250 #> [11481,]  237  246  251 #> [11482,]  237  246  250 #> [11483,]  237  246  251 #> [11484,]  237  246  249 #> [11485,]  236  246  250 #> [11486,]  237  246  250 #> [11487,]  237  246  251 #> [11488,]  237  246  250 #> [11489,]  237  246  250 #> [11490,]  237  246  251 #> [11491,]  236  246  251 #> [11492,]  237  246  251 #> [11493,]  237  246  251 #> [11494,]  237  246  249 #> [11495,]  236  246  249 #> [11496,]  237  246  251 #> [11497,]  237  246  251 #> [11498,]  237  246  250 #> [11499,]  237  246  250 #> [11500,]  237  246  249 #> [11501,]  239  248  253 #> [11502,]  239  248  253 #> [11503,]  239  248  253 #> [11504,]  238  247  252 #> [11505,]  239  248  253 #> [11506,]  239  248  253 #> [11507,]  239  248  253 #> [11508,]  238  247  252 #> [11509,]  238  247  252 #> [11510,]  238  247  252 #> [11511,]  239  248  253 #> [11512,]  239  248  253 #> [11513,]  239  248  253 #> [11514,]  239  248  253 #> [11515,]  239  248  253 #> [11516,]  239  248  253 #> [11517,]  239  248  253 #> [11518,]  239  248  253 #> [11519,]  239  248  253 #> [11520,]  239  248  253 #> [11521,]  239  248  253 #> [11522,]  239  248  253 #> [11523,]  239  248  253 #> [11524,]  239  248  253 #> [11525,]  239  248  253 #> [11526,]  239  248  253 #> [11527,]  239  248  253 #> [11528,]  239  248  253 #> [11529,]  239  248  253 #> [11530,]  239  248  253 #> [11531,]  239  248  253 #> [11532,]  239  248  253 #> [11533,]  239  248  253 #> [11534,]  239  248  253 #> [11535,]  239  248  253 #> [11536,]  239  248  253 #> [11537,]  239  248  253 #> [11538,]  239  248  253 #> [11539,]  239  248  253 #> [11540,]  239  248  253 #> [11541,]  239  248  253 #> [11542,]  239  248  253 #> [11543,]  238  247  252 #> [11544,]  239  248  253 #> [11545,]  239  248  253 #> [11546,]  239  248  253 #> [11547,]  239  248  253 #> [11548,]  239  248  253 #> [11549,]  239  248  253 #> [11550,]  239  248  253 #> [11551,]  238  247  252 #> [11552,]  239  248  253 #> [11553,]  239  248  253 #> [11554,]  239  248  253 #> [11555,]  239  248  253 #> [11556,]  239  248  253 #> [11557,]  239  248  253 #> [11558,]  239  248  253 #> [11559,]  239  248  253 #> [11560,]  238  247  252 #> [11561,]  239  248  253 #> [11562,]  239  248  253 #> [11563,]  239  248  253 #> [11564,]  239  248  253 #> [11565,]  239  248  253 #> [11566,]  239  248  253 #> [11567,]  239  248  253 #> [11568,]  239  248  253 #> [11569,]  239  248  253 #> [11570,]  239  248  253 #> [11571,]  239  248  253 #> [11572,]  239  248  253 #> [11573,]  239  248  253 #> [11574,]  239  248  253 #> [11575,]  239  248  253 #> [11576,]  239  248  253 #> [11577,]  239  248  253 #> [11578,]  239  248  253 #> [11579,]  239  248  253 #> [11580,]  239  248  253 #> [11581,]  239  248  253 #> [11582,]  239  248  253 #> [11583,]  239  248  253 #> [11584,]  239  248  253 #> [11585,]  238  247  252 #> [11586,]  239  248  253 #> [11587,]  239  248  253 #> [11588,]  239  248  253 #> [11589,]  239  248  253 #> [11590,]  239  248  253 #> [11591,]  238  247  252 #> [11592,]  239  248  253 #> [11593,]  239  248  253 #> [11594,]  239  248  253 #> [11595,]  238  247  252 #> [11596,]  239  248  253 #> [11597,]  239  248  253 #> [11598,]  239  248  253 #> [11599,]  239  248  253 #> [11600,]  239  248  253 #> [11601,]  241  249  255 #> [11602,]  241  249  255 #> [11603,]  240  251  256 #> [11604,]  241  249  255 #> [11605,]  240  251  256 #> [11606,]  241  249  255 #> [11607,]  241  249  254 #> [11608,]  241  249  255 #> [11609,]  240  250  256 #> [11610,]  240  251  256 #> [11611,]  240  250  256 #> [11612,]  241  249  254 #> [11613,]  241  249  255 #> [11614,]  240  251  256 #> [11615,]  241  249  255 #> [11616,]  241  249  255 #> [11617,]  241  249  255 #> [11618,]  241  249  255 #> [11619,]  241  249  255 #> [11620,]  241  249  255 #> [11621,]  240  251  256 #> [11622,]  241  249  255 #> [11623,]  241  249  255 #> [11624,]  240  251  256 #> [11625,]  241  249  255 #> [11626,]  241  249  255 #> [11627,]  241  249  255 #> [11628,]  240  251  256 #> [11629,]  241  249  255 #> [11630,]  241  249  255 #> [11631,]  240  251  256 #> [11632,]  240  251  256 #> [11633,]  241  249  255 #> [11634,]  240  251  256 #> [11635,]  240  250  256 #> [11636,]  241  249  255 #> [11637,]  241  249  255 #> [11638,]  241  249  255 #> [11639,]  240  251  256 #> [11640,]  240  251  256 #> [11641,]  241  249  255 #> [11642,]  241  249  255 #> [11643,]  241  249  255 #> [11644,]  241  249  255 #> [11645,]  241  249  255 #> [11646,]  241  249  255 #> [11647,]  240  251  256 #> [11648,]  240  251  256 #> [11649,]  241  249  255 #> [11650,]  241  249  255 #> [11651,]  241  249  255 #> [11652,]  240  250  256 #> [11653,]  241  249  255 #> [11654,]  241  249  255 #> [11655,]  241  249  255 #> [11656,]  241  249  255 #> [11657,]  241  249  255 #> [11658,]  241  249  255 #> [11659,]  241  249  254 #> [11660,]  241  249  254 #> [11661,]  241  249  255 #> [11662,]  240  251  256 #> [11663,]  241  249  255 #> [11664,]  241  249  255 #> [11665,]  240  251  256 #> [11666,]  241  249  255 #> [11667,]  241  249  255 #> [11668,]  241  249  255 #> [11669,]  241  249  255 #> [11670,]  240  251  256 #> [11671,]  241  249  255 #> [11672,]  240  251  256 #> [11673,]  241  249  255 #> [11674,]  240  251  256 #> [11675,]  241  249  255 #> [11676,]  240  251  256 #> [11677,]  241  249  255 #> [11678,]  241  249  255 #> [11679,]  241  249  255 #> [11680,]  241  249  255 #> [11681,]  241  249  255 #> [11682,]  240  250  256 #> [11683,]  241  249  255 #> [11684,]  241  249  255 #> [11685,]  241  249  255 #> [11686,]  241  249  255 #> [11687,]  241  249  255 #> [11688,]  241  249  255 #> [11689,]  241  249  255 #> [11690,]  241  249  255 #> [11691,]  240  251  256 #> [11692,]  241  249  255 #> [11693,]  241  249  255 #> [11694,]  241  249  255 #> [11695,]  241  249  255 #> [11696,]  241  249  255 #> [11697,]  241  249  254 #> [11698,]  240  251  256 #> [11699,]  241  249  255 #> [11700,]  241  249  255 #> [11701,]  242  254  258 #> [11702,]  243  252  257 #> [11703,]  242  253  258 #> [11704,]  242  253  258 #> [11705,]  242  253  258 #> [11706,]  242  254  258 #> [11707,]  242  253  258 #> [11708,]  242  254  258 #> [11709,]  243  252  257 #> [11710,]  243  252  257 #> [11711,]  242  253  258 #> [11712,]  243  252  257 #> [11713,]  242  253  258 #> [11714,]  242  254  258 #> [11715,]  242  254  258 #> [11716,]  242  253  258 #> [11717,]  243  252  257 #> [11718,]  242  253  258 #> [11719,]  242  253  258 #> [11720,]  242  254  258 #> [11721,]  243  252  257 #> [11722,]  242  253  258 #> [11723,]  242  253  258 #> [11724,]  242  253  258 #> [11725,]  242  253  258 #> [11726,]  242  254  258 #> [11727,]  242  253  258 #> [11728,]  242  253  258 #> [11729,]  243  252  257 #> [11730,]  242  253  258 #> [11731,]  242  253  258 #> [11732,]  242  253  258 #> [11733,]  243  252  257 #> [11734,]  242  253  258 #> [11735,]  242  253  258 #> [11736,]  242  253  258 #> [11737,]  242  253  258 #> [11738,]  242  253  258 #> [11739,]  242  253  258 #> [11740,]  242  253  258 #> [11741,]  242  253  258 #> [11742,]  242  253  258 #> [11743,]  242  254  258 #> [11744,]  242  253  258 #> [11745,]  242  254  258 #> [11746,]  242  254  258 #> [11747,]  242  253  258 #> [11748,]  242  253  258 #> [11749,]  242  253  258 #> [11750,]  242  254  258 #> [11751,]  242  254  258 #> [11752,]  242  253  258 #> [11753,]  243  252  257 #> [11754,]  242  253  258 #> [11755,]  242  254  258 #> [11756,]  242  254  258 #> [11757,]  242  254  258 #> [11758,]  242  254  258 #> [11759,]  242  253  258 #> [11760,]  243  252  257 #> [11761,]  242  254  258 #> [11762,]  242  253  258 #> [11763,]  243  252  257 #> [11764,]  242  254  258 #> [11765,]  242  254  258 #> [11766,]  242  254  258 #> [11767,]  242  253  258 #> [11768,]  242  254  258 #> [11769,]  242  253  258 #> [11770,]  243  252  257 #> [11771,]  242  254  258 #> [11772,]  242  254  258 #> [11773,]  242  254  258 #> [11774,]  242  254  258 #> [11775,]  242  254  258 #> [11776,]  242  254  258 #> [11777,]  242  253  258 #> [11778,]  242  254  258 #> [11779,]  242  253  258 #> [11780,]  243  252  257 #> [11781,]  243  252  257 #> [11782,]  242  253  258 #> [11783,]  242  253  258 #> [11784,]  242  253  258 #> [11785,]  242  253  258 #> [11786,]  243  252  257 #> [11787,]  242  253  258 #> [11788,]  242  253  258 #> [11789,]  242  253  258 #> [11790,]  242  253  258 #> [11791,]  242  253  258 #> [11792,]  242  254  258 #> [11793,]  242  253  258 #> [11794,]  242  254  258 #> [11795,]  242  253  258 #> [11796,]  242  254  258 #> [11797,]  242  254  258 #> [11798,]  242  253  258 #> [11799,]  242  253  258 #> [11800,]  242  253  258 #> [11801,]  245  256  260 #> [11802,]  244  255  259 #> [11803,]  244  255  259 #> [11804,]  245  256  260 #> [11805,]  245  256  260 #> [11806,]  244  255  259 #> [11807,]  244  255  259 #> [11808,]  244  255  259 #> [11809,]  244  255  259 #> [11810,]  245  256  260 #> [11811,]  245  256  260 #> [11812,]  245  256  260 #> [11813,]  245  256  260 #> [11814,]  245  256  260 #> [11815,]  245  256  260 #> [11816,]  245  256  260 #> [11817,]  245  256  260 #> [11818,]  245  256  260 #> [11819,]  245  256  260 #> [11820,]  244  255  259 #> [11821,]  244  255  259 #> [11822,]  245  256  260 #> [11823,]  244  255  259 #> [11824,]  245  256  260 #> [11825,]  244  255  259 #> [11826,]  245  256  260 #> [11827,]  245  256  260 #> [11828,]  245  256  260 #> [11829,]  244  255  259 #> [11830,]  245  256  260 #> [11831,]  245  256  260 #> [11832,]  245  256  260 #> [11833,]  245  256  260 #> [11834,]  244  255  259 #> [11835,]  244  255  259 #> [11836,]  244  255  259 #> [11837,]  244  255  259 #> [11838,]  245  256  260 #> [11839,]  245  256  260 #> [11840,]  245  256  260 #> [11841,]  244  255  259 #> [11842,]  244  255  259 #> [11843,]  245  256  260 #> [11844,]  244  255  259 #> [11845,]  244  255  259 #> [11846,]  245  256  260 #> [11847,]  245  256  260 #> [11848,]  245  256  260 #> [11849,]  245  256  260 #> [11850,]  244  255  259 #> [11851,]  245  256  260 #> [11852,]  245  256  260 #> [11853,]  244  255  259 #> [11854,]  244  255  259 #> [11855,]  244  255  259 #> [11856,]  244  255  259 #> [11857,]  244  255  259 #> [11858,]  245  256  260 #> [11859,]  245  256  260 #> [11860,]  244  255  259 #> [11861,]  245  256  260 #> [11862,]  244  255  259 #> [11863,]  245  256  260 #> [11864,]  244  255  259 #> [11865,]  244  255  259 #> [11866,]  245  256  260 #> [11867,]  244  255  259 #> [11868,]  245  256  260 #> [11869,]  245  256  260 #> [11870,]  245  256  260 #> [11871,]  245  256  260 #> [11872,]  244  255  259 #> [11873,]  244  255  259 #> [11874,]  244  255  259 #> [11875,]  245  256  260 #> [11876,]  244  255  259 #> [11877,]  245  256  260 #> [11878,]  245  256  260 #> [11879,]  245  256  260 #> [11880,]  244  255  259 #> [11881,]  244  255  259 #> [11882,]  244  255  259 #> [11883,]  245  256  260 #> [11884,]  244  255  259 #> [11885,]  244  255  259 #> [11886,]  244  255  259 #> [11887,]  245  256  260 #> [11888,]  244  255  259 #> [11889,]  244  255  259 #> [11890,]  245  256  260 #> [11891,]  245  256  260 #> [11892,]  245  256  260 #> [11893,]  245  256  260 #> [11894,]  244  255  259 #> [11895,]  245  256  260 #> [11896,]  245  256  260 #> [11897,]  244  255  259 #> [11898,]  244  255  259 #> [11899,]  244  255  259 #> [11900,]  245  256  260 #> [11901,]  247  258  262 #> [11902,]  246  257  261 #> [11903,]  247  258  262 #> [11904,]  247  258  262 #> [11905,]  247  258  262 #> [11906,]  246  257  261 #> [11907,]  247  258  262 #> [11908,]  247  258  262 #> [11909,]  247  258  262 #> [11910,]  247  258  262 #> [11911,]  247  258  262 #> [11912,]  246  257  261 #> [11913,]  247  258  262 #> [11914,]  247  258  262 #> [11915,]  246  257  261 #> [11916,]  247  258  262 #> [11917,]  246  257  261 #> [11918,]  247  258  262 #> [11919,]  247  258  262 #> [11920,]  247  258  262 #> [11921,]  247  258  262 #> [11922,]  247  258  262 #> [11923,]  246  257  261 #> [11924,]  247  258  262 #> [11925,]  247  258  262 #> [11926,]  247  258  262 #> [11927,]  247  258  262 #> [11928,]  247  258  262 #> [11929,]  246  257  261 #> [11930,]  247  258  262 #> [11931,]  246  257  261 #> [11932,]  247  258  262 #> [11933,]  247  258  262 #> [11934,]  246  257  261 #> [11935,]  247  258  262 #> [11936,]  247  258  262 #> [11937,]  246  257  261 #> [11938,]  247  258  262 #> [11939,]  247  258  262 #> [11940,]  247  258  262 #> [11941,]  247  258  262 #> [11942,]  246  257  261 #> [11943,]  246  257  261 #> [11944,]  246  257  261 #> [11945,]  247  258  262 #> [11946,]  247  258  262 #> [11947,]  246  257  261 #> [11948,]  246  257  261 #> [11949,]  247  258  262 #> [11950,]  247  258  262 #> [11951,]  247  258  262 #> [11952,]  247  258  262 #> [11953,]  247  258  262 #> [11954,]  247  258  262 #> [11955,]  247  258  262 #> [11956,]  247  258  262 #> [11957,]  247  258  262 #> [11958,]  247  258  262 #> [11959,]  247  258  262 #> [11960,]  247  258  262 #> [11961,]  247  258  262 #> [11962,]  247  258  262 #> [11963,]  246  257  261 #> [11964,]  246  257  261 #> [11965,]  247  258  262 #> [11966,]  247  258  262 #> [11967,]  247  258  262 #> [11968,]  247  258  262 #> [11969,]  247  258  262 #> [11970,]  246  257  261 #> [11971,]  247  258  262 #> [11972,]  247  258  262 #> [11973,]  247  258  262 #> [11974,]  247  258  262 #> [11975,]  246  257  261 #> [11976,]  247  258  262 #> [11977,]  247  258  262 #> [11978,]  246  257  261 #> [11979,]  246  257  261 #> [11980,]  247  258  262 #> [11981,]  246  257  261 #> [11982,]  247  258  262 #> [11983,]  247  258  262 #> [11984,]  247  258  262 #> [11985,]  247  258  262 #> [11986,]  247  258  262 #> [11987,]  247  258  262 #> [11988,]  247  258  262 #> [11989,]  247  258  262 #> [11990,]  247  258  262 #> [11991,]  247  258  262 #> [11992,]  246  257  261 #> [11993,]  247  258  262 #> [11994,]  246  257  261 #> [11995,]  246  257  261 #> [11996,]  247  258  262 #> [11997,]  247  258  262 #> [11998,]  247  258  262 #> [11999,]  247  258  262 #> [12000,]  246  257  261 #> [12001,]  249  259  265 #> [12002,]  248  259  265 #> [12003,]  249  259  265 #> [12004,]  249  259  263 #> [12005,]  249  259  265 #> [12006,]  248  259  265 #> [12007,]  249  259  265 #> [12008,]  249  259  264 #> [12009,]  249  259  263 #> [12010,]  249  259  264 #> [12011,]  248  259  263 #> [12012,]  248  259  263 #> [12013,]  249  259  265 #> [12014,]  249  259  263 #> [12015,]  248  259  263 #> [12016,]  249  259  265 #> [12017,]  248  259  265 #> [12018,]  249  259  265 #> [12019,]  248  259  263 #> [12020,]  249  259  265 #> [12021,]  249  259  263 #> [12022,]  249  259  265 #> [12023,]  248  259  265 #> [12024,]  249  259  265 #> [12025,]  249  259  265 #> [12026,]  248  259  265 #> [12027,]  249  259  263 #> [12028,]  249  259  265 #> [12029,]  248  259  265 #> [12030,]  248  259  264 #> [12031,]  248  259  263 #> [12032,]  249  259  265 #> [12033,]  249  259  263 #> [12034,]  248  259  265 #> [12035,]  248  259  265 #> [12036,]  249  259  263 #> [12037,]  248  259  265 #> [12038,]  249  259  263 #> [12039,]  249  259  265 #> [12040,]  249  259  265 #> [12041,]  249  259  263 #> [12042,]  248  259  263 #> [12043,]  248  259  264 #> [12044,]  248  259  265 #> [12045,]  249  259  265 #> [12046,]  248  259  265 #> [12047,]  248  259  265 #> [12048,]  248  259  263 #> [12049,]  249  259  265 #> [12050,]  249  259  265 #> [12051,]  249  259  264 #> [12052,]  249  259  265 #> [12053,]  249  259  265 #> [12054,]  249  259  265 #> [12055,]  249  259  265 #> [12056,]  248  259  264 #> [12057,]  249  259  265 #> [12058,]  249  259  263 #> [12059,]  249  259  265 #> [12060,]  248  259  264 #> [12061,]  248  259  263 #> [12062,]  249  259  265 #> [12063,]  248  259  265 #> [12064,]  248  259  264 #> [12065,]  248  259  265 #> [12066,]  248  259  265 #> [12067,]  249  259  264 #> [12068,]  248  259  263 #> [12069,]  249  259  263 #> [12070,]  248  259  265 #> [12071,]  249  259  265 #> [12072,]  249  259  265 #> [12073,]  249  259  265 #> [12074,]  249  259  263 #> [12075,]  248  259  263 #> [12076,]  249  259  265 #> [12077,]  249  259  265 #> [12078,]  248  259  264 #> [12079,]  248  259  265 #> [12080,]  249  259  265 #> [12081,]  248  259  265 #> [12082,]  249  259  263 #> [12083,]  249  259  265 #> [12084,]  249  259  265 #> [12085,]  249  259  263 #> [12086,]  249  259  265 #> [12087,]  249  259  265 #> [12088,]  249  259  265 #> [12089,]  249  259  264 #> [12090,]  249  259  265 #> [12091,]  249  259  264 #> [12092,]  248  259  263 #> [12093,]  248  259  263 #> [12094,]  248  259  265 #> [12095,]  248  259  264 #> [12096,]  248  259  263 #> [12097,]  249  259  263 #> [12098,]  249  259  265 #> [12099,]  249  259  265 #> [12100,]  248  259  265 #> [12101,]  250  261  266 #> [12102,]  250  261  266 #> [12103,]  250  261  266 #> [12104,]  250  260  266 #> [12105,]  250  261  266 #> [12106,]  250  261  266 #> [12107,]  250  261  266 #> [12108,]  250  260  266 #> [12109,]  250  260  266 #> [12110,]  250  261  266 #> [12111,]  250  261  266 #> [12112,]  250  261  266 #> [12113,]  250  261  266 #> [12114,]  250  261  266 #> [12115,]  250  261  266 #> [12116,]  250  261  266 #> [12117,]  250  260  266 #> [12118,]  250  261  266 #> [12119,]  250  261  266 #> [12120,]  250  261  266 #> [12121,]  250  261  266 #> [12122,]  250  261  266 #> [12123,]  250  261  266 #> [12124,]  250  261  266 #> [12125,]  250  261  266 #> [12126,]  250  261  266 #> [12127,]  250  261  266 #> [12128,]  250  261  266 #> [12129,]  250  261  266 #> [12130,]  250  261  266 #> [12131,]  250  261  266 #> [12132,]  250  261  266 #> [12133,]  250  261  266 #> [12134,]  250  261  266 #> [12135,]  250  261  266 #> [12136,]  250  261  266 #> [12137,]  250  261  266 #> [12138,]  250  261  266 #> [12139,]  250  261  266 #> [12140,]  250  261  266 #> [12141,]  250  261  266 #> [12142,]  250  261  266 #> [12143,]  250  261  266 #> [12144,]  250  261  266 #> [12145,]  250  261  266 #> [12146,]  250  261  266 #> [12147,]  250  261  266 #> [12148,]  250  261  266 #> [12149,]  250  261  266 #> [12150,]  250  261  266 #> [12151,]  250  261  266 #> [12152,]  250  260  266 #> [12153,]  250  261  266 #> [12154,]  250  261  266 #> [12155,]  250  261  266 #> [12156,]  250  261  266 #> [12157,]  250  261  266 #> [12158,]  250  261  266 #> [12159,]  250  261  266 #> [12160,]  250  261  266 #> [12161,]  250  261  266 #> [12162,]  250  261  266 #> [12163,]  250  261  266 #> [12164,]  250  261  266 #> [12165,]  250  261  266 #> [12166,]  250  261  266 #> [12167,]  250  261  266 #> [12168,]  250  261  266 #> [12169,]  250  261  266 #> [12170,]  250  261  266 #> [12171,]  250  261  266 #> [12172,]  250  261  266 #> [12173,]  250  261  266 #> [12174,]  250  261  266 #> [12175,]  250  261  266 #> [12176,]  250  261  266 #> [12177,]  250  261  266 #> [12178,]  250  261  266 #> [12179,]  250  261  266 #> [12180,]  250  261  266 #> [12181,]  250  260  266 #> [12182,]  250  260  266 #> [12183,]  250  261  266 #> [12184,]  250  261  266 #> [12185,]  250  261  266 #> [12186,]  250  261  266 #> [12187,]  250  261  266 #> [12188,]  250  261  266 #> [12189,]  250  261  266 #> [12190,]  250  261  266 #> [12191,]  250  261  266 #> [12192,]  250  261  266 #> [12193,]  250  261  266 #> [12194,]  250  261  266 #> [12195,]  250  260  266 #> [12196,]  250  261  266 #> [12197,]  250  261  266 #> [12198,]  250  261  266 #> [12199,]  250  261  266 #> [12200,]  250  261  266 #> [12201,]  252  263  267 #> [12202,]  252  263  267 #> [12203,]  251  262  268 #> [12204,]  251  262  269 #> [12205,]  251  262  268 #> [12206,]  252  263  267 #> [12207,]  252  263  267 #> [12208,]  251  262  268 #> [12209,]  251  262  269 #> [12210,]  251  262  269 #> [12211,]  252  263  267 #> [12212,]  251  262  269 #> [12213,]  252  263  267 #> [12214,]  252  263  267 #> [12215,]  252  263  267 #> [12216,]  252  263  267 #> [12217,]  252  263  267 #> [12218,]  251  262  269 #> [12219,]  252  263  267 #> [12220,]  251  262  268 #> [12221,]  252  263  267 #> [12222,]  252  263  267 #> [12223,]  251  262  268 #> [12224,]  251  262  268 #> [12225,]  251  262  268 #> [12226,]  252  263  267 #> [12227,]  252  263  267 #> [12228,]  251  262  268 #> [12229,]  252  263  267 #> [12230,]  251  262  269 #> [12231,]  251  262  269 #> [12232,]  251  262  269 #> [12233,]  252  263  267 #> [12234,]  251  262  268 #> [12235,]  252  263  267 #> [12236,]  251  262  269 #> [12237,]  252  263  267 #> [12238,]  251  262  269 #> [12239,]  251  262  268 #> [12240,]  252  263  267 #> [12241,]  252  263  267 #> [12242,]  251  262  269 #> [12243,]  251  262  268 #> [12244,]  252  263  267 #> [12245,]  251  262  268 #> [12246,]  252  263  267 #> [12247,]  252  263  267 #> [12248,]  251  262  269 #> [12249,]  251  262  268 #> [12250,]  252  263  267 #> [12251,]  251  262  268 #> [12252,]  252  263  267 #> [12253,]  251  262  268 #> [12254,]  251  262  268 #> [12255,]  252  263  267 #> [12256,]  251  262  268 #> [12257,]  251  262  268 #> [12258,]  252  263  267 #> [12259,]  252  263  267 #> [12260,]  251  262  269 #> [12261,]  252  263  267 #> [12262,]  251  262  269 #> [12263,]  251  262  268 #> [12264,]  251  262  269 #> [12265,]  251  262  268 #> [12266,]  251  262  268 #> [12267,]  251  262  268 #> [12268,]  252  263  267 #> [12269,]  252  263  267 #> [12270,]  252  263  267 #> [12271,]  252  263  267 #> [12272,]  251  262  268 #> [12273,]  252  263  267 #> [12274,]  252  263  267 #> [12275,]  252  263  267 #> [12276,]  252  263  267 #> [12277,]  252  263  267 #> [12278,]  251  262  268 #> [12279,]  252  263  267 #> [12280,]  251  262  268 #> [12281,]  252  263  267 #> [12282,]  251  262  269 #> [12283,]  252  263  267 #> [12284,]  252  263  267 #> [12285,]  251  262  269 #> [12286,]  252  263  267 #> [12287,]  252  263  267 #> [12288,]  251  262  268 #> [12289,]  251  262  268 #> [12290,]  252  263  267 #> [12291,]  251  262  268 #> [12292,]  252  263  267 #> [12293,]  252  263  267 #> [12294,]  252  263  267 #> [12295,]  251  262  268 #> [12296,]  252  263  267 #> [12297,]  252  263  267 #> [12298,]  252  263  267 #> [12299,]  252  263  267 #> [12300,]  252  263  267 #> [12301,]  254  265  270 #> [12302,]  254  265  270 #> [12303,]  254  265  270 #> [12304,]  253  264  271 #> [12305,]  254  265  270 #> [12306,]  254  265  270 #> [12307,]  254  265  270 #> [12308,]  253  264  272 #> [12309,]  253  264  271 #> [12310,]  253  264  271 #> [12311,]  254  265  270 #> [12312,]  254  265  270 #> [12313,]  254  265  270 #> [12314,]  254  265  270 #> [12315,]  254  265  270 #> [12316,]  254  265  270 #> [12317,]  254  265  270 #> [12318,]  254  265  270 #> [12319,]  254  265  270 #> [12320,]  254  265  270 #> [12321,]  254  265  270 #> [12322,]  254  265  270 #> [12323,]  254  265  270 #> [12324,]  254  265  270 #> [12325,]  254  265  270 #> [12326,]  254  265  270 #> [12327,]  254  265  270 #> [12328,]  254  265  270 #> [12329,]  254  265  270 #> [12330,]  254  265  270 #> [12331,]  254  265  270 #> [12332,]  254  265  270 #> [12333,]  254  265  270 #> [12334,]  254  265  270 #> [12335,]  254  265  270 #> [12336,]  254  265  270 #> [12337,]  254  265  270 #> [12338,]  254  265  270 #> [12339,]  254  265  270 #> [12340,]  254  265  270 #> [12341,]  254  265  270 #> [12342,]  254  265  270 #> [12343,]  253  264  272 #> [12344,]  254  265  270 #> [12345,]  254  265  270 #> [12346,]  254  265  270 #> [12347,]  254  265  270 #> [12348,]  254  265  270 #> [12349,]  254  265  270 #> [12350,]  254  265  270 #> [12351,]  253  264  272 #> [12352,]  254  265  270 #> [12353,]  254  265  270 #> [12354,]  254  265  270 #> [12355,]  254  265  270 #> [12356,]  254  265  270 #> [12357,]  254  265  270 #> [12358,]  254  265  270 #> [12359,]  254  265  270 #> [12360,]  253  264  272 #> [12361,]  254  265  270 #> [12362,]  254  265  270 #> [12363,]  254  265  270 #> [12364,]  254  265  270 #> [12365,]  254  265  270 #> [12366,]  254  265  270 #> [12367,]  253  264  271 #> [12368,]  254  265  270 #> [12369,]  254  265  270 #> [12370,]  254  265  270 #> [12371,]  254  265  270 #> [12372,]  254  265  270 #> [12373,]  254  265  270 #> [12374,]  254  265  270 #> [12375,]  254  265  270 #> [12376,]  254  265  270 #> [12377,]  254  265  270 #> [12378,]  254  265  270 #> [12379,]  254  265  270 #> [12380,]  254  265  270 #> [12381,]  254  265  270 #> [12382,]  254  265  270 #> [12383,]  254  265  270 #> [12384,]  254  265  270 #> [12385,]  253  264  272 #> [12386,]  254  265  270 #> [12387,]  254  265  270 #> [12388,]  254  265  270 #> [12389,]  254  265  270 #> [12390,]  254  265  270 #> [12391,]  253  264  271 #> [12392,]  254  265  270 #> [12393,]  254  265  270 #> [12394,]  254  265  270 #> [12395,]  253  264  272 #> [12396,]  254  265  270 #> [12397,]  254  265  270 #> [12398,]  254  265  270 #> [12399,]  254  265  270 #> [12400,]  254  265  270 #> [12401,]  256  267  275 #> [12402,]  256  267  275 #> [12403,]  256  267  274 #> [12404,]  256  267  274 #> [12405,]  256  267  275 #> [12406,]  255  266  273 #> [12407,]  256  267  274 #> [12408,]  256  267  274 #> [12409,]  256  267  275 #> [12410,]  256  267  274 #> [12411,]  256  267  275 #> [12412,]  256  267  274 #> [12413,]  256  267  275 #> [12414,]  256  267  274 #> [12415,]  256  267  274 #> [12416,]  256  267  274 #> [12417,]  256  267  275 #> [12418,]  256  267  275 #> [12419,]  256  267  275 #> [12420,]  255  266  273 #> [12421,]  255  266  273 #> [12422,]  256  267  275 #> [12423,]  256  267  274 #> [12424,]  256  267  275 #> [12425,]  255  266  273 #> [12426,]  256  267  274 #> [12427,]  256  267  275 #> [12428,]  256  267  275 #> [12429,]  256  267  275 #> [12430,]  256  267  274 #> [12431,]  256  267  274 #> [12432,]  256  267  274 #> [12433,]  256  267  275 #> [12434,]  256  267  274 #> [12435,]  255  266  273 #> [12436,]  256  267  275 #> [12437,]  256  267  274 #> [12438,]  256  267  275 #> [12439,]  256  267  275 #> [12440,]  256  267  274 #> [12441,]  256  267  275 #> [12442,]  255  266  273 #> [12443,]  256  267  275 #> [12444,]  255  266  273 #> [12445,]  256  267  274 #> [12446,]  256  267  274 #> [12447,]  256  267  274 #> [12448,]  256  267  275 #> [12449,]  256  267  274 #> [12450,]  256  267  275 #> [12451,]  256  267  275 #> [12452,]  256  267  274 #> [12453,]  255  266  273 #> [12454,]  256  267  275 #> [12455,]  256  267  274 #> [12456,]  255  266  273 #> [12457,]  256  267  274 #> [12458,]  256  267  275 #> [12459,]  256  267  274 #> [12460,]  256  267  274 #> [12461,]  256  267  275 #> [12462,]  256  267  275 #> [12463,]  256  267  275 #> [12464,]  256  267  275 #> [12465,]  255  266  273 #> [12466,]  256  267  275 #> [12467,]  256  267  274 #> [12468,]  256  267  274 #> [12469,]  256  267  274 #> [12470,]  256  267  275 #> [12471,]  256  267  274 #> [12472,]  256  267  274 #> [12473,]  255  266  273 #> [12474,]  255  266  273 #> [12475,]  256  267  274 #> [12476,]  256  267  274 #> [12477,]  256  267  275 #> [12478,]  256  267  274 #> [12479,]  256  267  275 #> [12480,]  255  266  273 #> [12481,]  256  267  275 #> [12482,]  255  266  273 #> [12483,]  256  267  275 #> [12484,]  255  266  273 #> [12485,]  255  266  273 #> [12486,]  255  266  273 #> [12487,]  256  267  275 #> [12488,]  256  267  274 #> [12489,]  255  266  273 #> [12490,]  256  267  275 #> [12491,]  256  267  275 #> [12492,]  256  267  274 #> [12493,]  256  267  275 #> [12494,]  255  266  273 #> [12495,]  256  267  274 #> [12496,]  256  267  274 #> [12497,]  256  267  274 #> [12498,]  256  267  274 #> [12499,]  255  266  273 #> [12500,]  256  267  275 #> [12501,]  258  269  277 #> [12502,]  258  269  277 #> [12503,]  257  268  276 #> [12504,]  258  269  277 #> [12505,]  258  269  277 #> [12506,]  257  268  276 #> [12507,]  257  268  276 #> [12508,]  258  269  277 #> [12509,]  258  269  277 #> [12510,]  258  269  277 #> [12511,]  258  269  277 #> [12512,]  258  269  277 #> [12513,]  258  269  277 #> [12514,]  258  269  277 #> [12515,]  258  269  277 #> [12516,]  258  269  277 #> [12517,]  258  269  277 #> [12518,]  258  269  277 #> [12519,]  258  269  277 #> [12520,]  257  268  276 #> [12521,]  257  268  276 #> [12522,]  258  269  277 #> [12523,]  257  268  276 #> [12524,]  258  269  277 #> [12525,]  257  268  276 #> [12526,]  258  269  277 #> [12527,]  258  269  277 #> [12528,]  258  269  277 #> [12529,]  258  269  277 #> [12530,]  258  269  277 #> [12531,]  258  269  277 #> [12532,]  258  269  277 #> [12533,]  258  269  277 #> [12534,]  257  268  276 #> [12535,]  257  268  276 #> [12536,]  258  269  277 #> [12537,]  257  268  276 #> [12538,]  258  269  277 #> [12539,]  258  269  277 #> [12540,]  258  269  277 #> [12541,]  258  269  277 #> [12542,]  257  268  276 #> [12543,]  258  269  277 #> [12544,]  257  268  276 #> [12545,]  258  269  277 #> [12546,]  258  269  277 #> [12547,]  258  269  277 #> [12548,]  258  269  277 #> [12549,]  258  269  277 #> [12550,]  257  268  276 #> [12551,]  258  269  277 #> [12552,]  258  269  277 #> [12553,]  257  268  276 #> [12554,]  257  268  276 #> [12555,]  257  268  276 #> [12556,]  257  268  276 #> [12557,]  257  268  276 #> [12558,]  258  269  277 #> [12559,]  258  269  277 #> [12560,]  257  268  276 #> [12561,]  258  269  277 #> [12562,]  258  269  277 #> [12563,]  258  269  277 #> [12564,]  257  268  276 #> [12565,]  257  268  276 #> [12566,]  258  269  277 #> [12567,]  258  269  277 #> [12568,]  258  269  277 #> [12569,]  258  269  277 #> [12570,]  258  269  277 #> [12571,]  258  269  277 #> [12572,]  258  269  277 #> [12573,]  257  268  276 #> [12574,]  257  268  276 #> [12575,]  258  269  277 #> [12576,]  258  269  277 #> [12577,]  258  269  277 #> [12578,]  258  269  277 #> [12579,]  258  269  277 #> [12580,]  257  268  276 #> [12581,]  257  268  276 #> [12582,]  257  268  276 #> [12583,]  258  269  277 #> [12584,]  257  268  276 #> [12585,]  257  268  276 #> [12586,]  257  268  276 #> [12587,]  258  269  277 #> [12588,]  257  268  276 #> [12589,]  257  268  276 #> [12590,]  258  269  277 #> [12591,]  258  269  277 #> [12592,]  258  269  277 #> [12593,]  258  269  277 #> [12594,]  257  268  276 #> [12595,]  258  269  277 #> [12596,]  258  269  277 #> [12597,]  257  268  276 #> [12598,]  257  268  276 #> [12599,]  257  268  276 #> [12600,]  258  269  277 #> [12601,]  260  271  279 #> [12602,]  260  271  279 #> [12603,]  260  271  279 #> [12604,]  260  271  279 #> [12605,]  260  271  279 #> [12606,]  260  271  279 #> [12607,]  259  270  278 #> [12608,]  260  271  279 #> [12609,]  260  271  279 #> [12610,]  260  271  279 #> [12611,]  260  271  279 #> [12612,]  260  271  279 #> [12613,]  260  271  279 #> [12614,]  260  271  279 #> [12615,]  260  271  279 #> [12616,]  260  271  279 #> [12617,]  260  271  279 #> [12618,]  260  271  279 #> [12619,]  260  271  279 #> [12620,]  260  271  279 #> [12621,]  259  270  278 #> [12622,]  260  271  279 #> [12623,]  260  271  279 #> [12624,]  260  271  279 #> [12625,]  260  271  279 #> [12626,]  260  271  279 #> [12627,]  260  271  279 #> [12628,]  260  271  279 #> [12629,]  260  271  279 #> [12630,]  260  271  279 #> [12631,]  260  271  279 #> [12632,]  260  271  279 #> [12633,]  260  271  279 #> [12634,]  260  271  279 #> [12635,]  260  271  279 #> [12636,]  260  271  279 #> [12637,]  260  271  279 #> [12638,]  260  271  279 #> [12639,]  259  270  278 #> [12640,]  260  271  279 #> [12641,]  260  271  279 #> [12642,]  260  271  279 #> [12643,]  260  271  279 #> [12644,]  260  271  279 #> [12645,]  260  271  279 #> [12646,]  260  271  279 #> [12647,]  260  271  279 #> [12648,]  260  271  279 #> [12649,]  259  270  278 #> [12650,]  260  271  279 #> [12651,]  260  271  279 #> [12652,]  260  271  279 #> [12653,]  260  271  279 #> [12654,]  260  271  279 #> [12655,]  260  271  279 #> [12656,]  260  271  279 #> [12657,]  260  271  279 #> [12658,]  260  271  279 #> [12659,]  260  271  279 #> [12660,]  260  271  279 #> [12661,]  260  271  279 #> [12662,]  259  270  278 #> [12663,]  260  271  279 #> [12664,]  260  271  279 #> [12665,]  260  271  279 #> [12666,]  260  271  279 #> [12667,]  260  271  279 #> [12668,]  260  271  279 #> [12669,]  260  271  279 #> [12670,]  259  270  278 #> [12671,]  260  271  279 #> [12672,]  260  271  279 #> [12673,]  260  271  279 #> [12674,]  260  271  279 #> [12675,]  260  271  279 #> [12676,]  260  271  279 #> [12677,]  260  271  279 #> [12678,]  260  271  279 #> [12679,]  260  271  279 #> [12680,]  259  270  278 #> [12681,]  260  271  279 #> [12682,]  260  271  279 #> [12683,]  260  271  279 #> [12684,]  260  271  279 #> [12685,]  260  271  279 #> [12686,]  260  271  279 #> [12687,]  260  271  279 #> [12688,]  260  271  279 #> [12689,]  260  271  279 #> [12690,]  260  271  279 #> [12691,]  260  271  279 #> [12692,]  260  271  279 #> [12693,]  260  271  279 #> [12694,]  260  271  279 #> [12695,]  259  270  278 #> [12696,]  260  271  279 #> [12697,]  260  271  279 #> [12698,]  260  271  279 #> [12699,]  260  271  279 #> [12700,]  260  271  279 #> [12701,]  261  272  280 #> [12702,]  262  273  281 #> [12703,]  262  273  281 #> [12704,]  261  272  280 #> [12705,]  262  273  281 #> [12706,]  262  273  281 #> [12707,]  262  273  281 #> [12708,]  261  272  280 #> [12709,]  261  272  280 #> [12710,]  262  273  281 #> [12711,]  261  272  280 #> [12712,]  262  273  281 #> [12713,]  261  272  280 #> [12714,]  261  272  280 #> [12715,]  261  272  280 #> [12716,]  261  272  280 #> [12717,]  261  272  280 #> [12718,]  262  273  281 #> [12719,]  262  273  281 #> [12720,]  262  273  281 #> [12721,]  261  272  280 #> [12722,]  261  272  280 #> [12723,]  262  273  281 #> [12724,]  261  272  280 #> [12725,]  262  273  281 #> [12726,]  262  273  281 #> [12727,]  261  272  280 #> [12728,]  262  273  281 #> [12729,]  262  273  281 #> [12730,]  261  272  280 #> [12731,]  262  273  281 #> [12732,]  262  273  281 #> [12733,]  262  273  281 #> [12734,]  262  273  281 #> [12735,]  261  272  280 #> [12736,]  262  273  281 #> [12737,]  261  272  280 #> [12738,]  261  272  280 #> [12739,]  262  273  281 #> [12740,]  262  273  281 #> [12741,]  261  272  280 #> [12742,]  262  273  281 #> [12743,]  261  272  280 #> [12744,]  261  272  280 #> [12745,]  261  272  280 #> [12746,]  261  272  280 #> [12747,]  262  273  281 #> [12748,]  262  273  281 #> [12749,]  261  272  280 #> [12750,]  262  273  281 #> [12751,]  261  272  280 #> [12752,]  261  272  280 #> [12753,]  262  273  281 #> [12754,]  261  272  280 #> [12755,]  261  272  280 #> [12756,]  262  273  281 #> [12757,]  262  273  281 #> [12758,]  261  272  280 #> [12759,]  261  272  280 #> [12760,]  262  273  281 #> [12761,]  262  273  281 #> [12762,]  261  272  280 #> [12763,]  262  273  281 #> [12764,]  262  273  281 #> [12765,]  262  273  281 #> [12766,]  261  272  280 #> [12767,]  261  272  280 #> [12768,]  261  272  280 #> [12769,]  261  272  280 #> [12770,]  262  273  281 #> [12771,]  262  273  281 #> [12772,]  262  273  281 #> [12773,]  262  273  281 #> [12774,]  261  272  280 #> [12775,]  262  273  281 #> [12776,]  262  273  281 #> [12777,]  262  273  281 #> [12778,]  262  273  281 #> [12779,]  261  272  280 #> [12780,]  261  272  280 #> [12781,]  261  272  280 #> [12782,]  261  272  280 #> [12783,]  261  272  280 #> [12784,]  262  273  281 #> [12785,]  261  272  280 #> [12786,]  262  273  281 #> [12787,]  261  272  280 #> [12788,]  261  272  280 #> [12789,]  261  272  280 #> [12790,]  261  272  280 #> [12791,]  261  272  280 #> [12792,]  261  272  280 #> [12793,]  262  273  281 #> [12794,]  262  273  281 #> [12795,]  261  272  280 #> [12796,]  261  272  280 #> [12797,]  262  273  281 #> [12798,]  262  273  281 #> [12799,]  261  272  280 #> [12800,]  262  273  281 #> [12801,]  264  275  282 #> [12802,]  263  274  283 #> [12803,]  264  275  282 #> [12804,]  264  275  282 #> [12805,]  264  275  282 #> [12806,]  263  274  283 #> [12807,]  264  275  282 #> [12808,]  264  275  282 #> [12809,]  264  275  282 #> [12810,]  264  275  282 #> [12811,]  263  274  283 #> [12812,]  263  274  283 #> [12813,]  264  275  282 #> [12814,]  264  275  282 #> [12815,]  263  274  283 #> [12816,]  264  275  282 #> [12817,]  263  274  283 #> [12818,]  263  274  283 #> [12819,]  263  274  283 #> [12820,]  264  275  282 #> [12821,]  263  274  283 #> [12822,]  264  275  282 #> [12823,]  263  274  283 #> [12824,]  264  275  282 #> [12825,]  264  275  282 #> [12826,]  263  274  283 #> [12827,]  264  275  282 #> [12828,]  264  275  282 #> [12829,]  263  274  283 #> [12830,]  263  274  283 #> [12831,]  263  274  283 #> [12832,]  263  274  283 #> [12833,]  264  275  282 #> [12834,]  263  274  283 #> [12835,]  263  274  283 #> [12836,]  264  275  282 #> [12837,]  263  274  283 #> [12838,]  263  274  283 #> [12839,]  264  275  282 #> [12840,]  263  274  283 #> [12841,]  264  275  282 #> [12842,]  263  274  283 #> [12843,]  263  274  283 #> [12844,]  263  274  283 #> [12845,]  264  275  282 #> [12846,]  263  274  283 #> [12847,]  263  274  283 #> [12848,]  263  274  283 #> [12849,]  264  275  282 #> [12850,]  264  275  282 #> [12851,]  263  274  283 #> [12852,]  264  275  282 #> [12853,]  264  275  282 #> [12854,]  264  275  282 #> [12855,]  264  275  282 #> [12856,]  263  274  283 #> [12857,]  264  275  282 #> [12858,]  264  275  282 #> [12859,]  264  275  282 #> [12860,]  263  274  283 #> [12861,]  263  274  283 #> [12862,]  263  274  283 #> [12863,]  263  274  283 #> [12864,]  263  274  283 #> [12865,]  263  274  283 #> [12866,]  263  274  283 #> [12867,]  264  275  282 #> [12868,]  263  274  283 #> [12869,]  263  274  283 #> [12870,]  263  274  283 #> [12871,]  264  275  282 #> [12872,]  264  275  282 #> [12873,]  264  275  282 #> [12874,]  264  275  282 #> [12875,]  263  274  283 #> [12876,]  264  275  282 #> [12877,]  264  275  282 #> [12878,]  263  274  283 #> [12879,]  263  274  283 #> [12880,]  264  275  282 #> [12881,]  263  274  283 #> [12882,]  263  274  283 #> [12883,]  263  274  283 #> [12884,]  264  275  282 #> [12885,]  264  275  282 #> [12886,]  264  275  282 #> [12887,]  264  275  282 #> [12888,]  264  275  282 #> [12889,]  263  274  283 #> [12890,]  264  275  282 #> [12891,]  264  275  282 #> [12892,]  263  274  283 #> [12893,]  263  274  283 #> [12894,]  263  274  283 #> [12895,]  263  274  283 #> [12896,]  263  274  283 #> [12897,]  263  274  283 #> [12898,]  263  274  283 #> [12899,]  263  274  283 #> [12900,]  263  274  283 #> [12901,]  266  277  286 #> [12902,]  266  277  285 #> [12903,]  266  277  286 #> [12904,]  265  276  284 #> [12905,]  266  277  286 #> [12906,]  265  276  284 #> [12907,]  266  277  286 #> [12908,]  266  277  286 #> [12909,]  265  276  284 #> [12910,]  265  276  284 #> [12911,]  265  276  284 #> [12912,]  265  276  284 #> [12913,]  266  277  286 #> [12914,]  265  276  284 #> [12915,]  265  276  284 #> [12916,]  266  277  286 #> [12917,]  266  277  285 #> [12918,]  265  276  284 #> [12919,]  265  276  284 #> [12920,]  266  277  286 #> [12921,]  265  276  284 #> [12922,]  266  277  286 #> [12923,]  265  276  284 #> [12924,]  266  277  286 #> [12925,]  267  277  286 #> [12926,]  265  276  284 #> [12927,]  265  276  284 #> [12928,]  266  277  286 #> [12929,]  266  277  285 #> [12930,]  265  276  284 #> [12931,]  265  276  284 #> [12932,]  265  276  284 #> [12933,]  265  276  284 #> [12934,]  265  276  284 #> [12935,]  266  277  285 #> [12936,]  265  276  284 #> [12937,]  266  277  285 #> [12938,]  265  276  284 #> [12939,]  267  277  286 #> [12940,]  266  277  286 #> [12941,]  265  276  284 #> [12942,]  265  276  284 #> [12943,]  267  277  285 #> [12944,]  266  277  285 #> [12945,]  267  277  286 #> [12946,]  266  277  285 #> [12947,]  266  277  285 #> [12948,]  265  276  284 #> [12949,]  266  277  286 #> [12950,]  266  277  286 #> [12951,]  266  277  286 #> [12952,]  265  276  284 #> [12953,]  266  277  286 #> [12954,]  266  277  286 #> [12955,]  266  277  286 #> [12956,]  266  277  285 #> [12957,]  266  277  286 #> [12958,]  265  276  284 #> [12959,]  266  277  286 #> [12960,]  265  276  284 #> [12961,]  265  276  284 #> [12962,]  265  276  284 #> [12963,]  266  277  285 #> [12964,]  265  276  284 #> [12965,]  266  277  285 #> [12966,]  266  277  285 #> [12967,]  265  276  284 #> [12968,]  265  276  284 #> [12969,]  265  276  284 #> [12970,]  266  277  285 #> [12971,]  266  277  286 #> [12972,]  266  277  286 #> [12973,]  265  276  284 #> [12974,]  265  276  284 #> [12975,]  265  276  284 #> [12976,]  267  277  286 #> [12977,]  267  277  286 #> [12978,]  266  277  285 #> [12979,]  266  277  285 #> [12980,]  265  276  284 #> [12981,]  266  277  285 #> [12982,]  265  276  284 #> [12983,]  266  277  286 #> [12984,]  266  277  286 #> [12985,]  265  276  284 #> [12986,]  266  277  286 #> [12987,]  266  277  286 #> [12988,]  266  277  286 #> [12989,]  266  277  286 #> [12990,]  266  277  286 #> [12991,]  266  277  286 #> [12992,]  265  276  284 #> [12993,]  265  276  284 #> [12994,]  266  277  285 #> [12995,]  266  277  285 #> [12996,]  265  276  284 #> [12997,]  265  276  284 #> [12998,]  266  277  286 #> [12999,]  265  276  284 #> [13000,]  266  277  285 #> [13001,]  268  279  288 #> [13002,]  268  279  288 #> [13003,]  268  279  288 #> [13004,]  268  279  288 #> [13005,]  268  279  288 #> [13006,]  268  279  288 #> [13007,]  269  278  287 #> [13008,]  268  279  288 #> [13009,]  268  279  288 #> [13010,]  269  278  287 #> [13011,]  268  279  288 #> [13012,]  268  279  288 #> [13013,]  268  279  288 #> [13014,]  268  279  288 #> [13015,]  268  279  288 #> [13016,]  269  278  287 #> [13017,]  268  279  288 #> [13018,]  268  279  288 #> [13019,]  268  279  288 #> [13020,]  269  278  287 #> [13021,]  268  279  288 #> [13022,]  268  279  288 #> [13023,]  268  279  288 #> [13024,]  269  278  287 #> [13025,]  268  279  288 #> [13026,]  268  279  288 #> [13027,]  268  279  288 #> [13028,]  269  278  287 #> [13029,]  268  279  288 #> [13030,]  268  279  288 #> [13031,]  268  279  288 #> [13032,]  268  279  288 #> [13033,]  268  279  288 #> [13034,]  268  279  288 #> [13035,]  268  279  288 #> [13036,]  268  279  288 #> [13037,]  268  279  288 #> [13038,]  268  279  288 #> [13039,]  268  279  288 #> [13040,]  268  279  288 #> [13041,]  268  279  288 #> [13042,]  268  279  288 #> [13043,]  268  279  288 #> [13044,]  268  279  288 #> [13045,]  268  279  288 #> [13046,]  268  279  288 #> [13047,]  268  279  288 #> [13048,]  268  279  288 #> [13049,]  268  279  288 #> [13050,]  269  278  287 #> [13051,]  268  279  288 #> [13052,]  269  278  287 #> [13053,]  268  279  288 #> [13054,]  269  278  287 #> [13055,]  268  279  288 #> [13056,]  268  279  288 #> [13057,]  268  279  288 #> [13058,]  268  279  288 #> [13059,]  268  279  288 #> [13060,]  268  279  288 #> [13061,]  268  279  288 #> [13062,]  268  279  288 #> [13063,]  268  279  288 #> [13064,]  268  279  288 #> [13065,]  268  279  288 #> [13066,]  268  279  288 #> [13067,]  268  279  288 #> [13068,]  268  279  288 #> [13069,]  268  279  288 #> [13070,]  268  279  288 #> [13071,]  268  279  288 #> [13072,]  268  279  288 #> [13073,]  268  279  288 #> [13074,]  268  279  288 #> [13075,]  268  279  288 #> [13076,]  269  278  287 #> [13077,]  268  279  288 #> [13078,]  268  279  288 #> [13079,]  268  279  288 #> [13080,]  268  279  288 #> [13081,]  268  279  288 #> [13082,]  268  279  288 #> [13083,]  268  279  288 #> [13084,]  268  279  288 #> [13085,]  268  279  288 #> [13086,]  269  278  287 #> [13087,]  268  279  288 #> [13088,]  268  279  288 #> [13089,]  268  279  288 #> [13090,]  268  279  288 #> [13091,]  269  278  287 #> [13092,]  268  279  288 #> [13093,]  268  279  288 #> [13094,]  268  279  288 #> [13095,]  268  279  288 #> [13096,]  268  279  288 #> [13097,]  268  279  288 #> [13098,]  268  279  288 #> [13099,]  268  279  288 #> [13100,]  268  279  288 #> [13101,]  270  281  290 #> [13102,]  270  281  290 #> [13103,]  270  280  289 #> [13104,]  270  280  289 #> [13105,]  270  281  290 #> [13106,]  270  281  290 #> [13107,]  270  280  289 #> [13108,]  270  280  289 #> [13109,]  270  281  290 #> [13110,]  270  280  289 #> [13111,]  270  281  290 #> [13112,]  270  280  289 #> [13113,]  270  281  290 #> [13114,]  270  280  289 #> [13115,]  270  281  290 #> [13116,]  270  280  289 #> [13117,]  270  281  290 #> [13118,]  270  281  290 #> [13119,]  270  281  290 #> [13120,]  270  281  290 #> [13121,]  270  281  290 #> [13122,]  270  281  290 #> [13123,]  270  280  289 #> [13124,]  270  281  290 #> [13125,]  270  280  289 #> [13126,]  270  280  289 #> [13127,]  270  281  290 #> [13128,]  270  281  290 #> [13129,]  270  281  290 #> [13130,]  270  280  289 #> [13131,]  270  280  289 #> [13132,]  270  280  289 #> [13133,]  270  281  290 #> [13134,]  270  280  289 #> [13135,]  270  280  289 #> [13136,]  270  281  290 #> [13137,]  270  280  289 #> [13138,]  270  281  290 #> [13139,]  270  281  290 #> [13140,]  270  280  289 #> [13141,]  270  281  290 #> [13142,]  270  281  290 #> [13143,]  270  281  290 #> [13144,]  270  280  289 #> [13145,]  270  280  289 #> [13146,]  270  280  289 #> [13147,]  270  280  289 #> [13148,]  270  281  290 #> [13149,]  270  280  289 #> [13150,]  270  281  290 #> [13151,]  270  281  290 #> [13152,]  270  280  289 #> [13153,]  270  281  290 #> [13154,]  270  281  290 #> [13155,]  270  280  289 #> [13156,]  270  281  290 #> [13157,]  270  280  289 #> [13158,]  270  281  290 #> [13159,]  270  280  289 #> [13160,]  270  280  289 #> [13161,]  270  281  290 #> [13162,]  270  281  290 #> [13163,]  270  281  290 #> [13164,]  270  281  290 #> [13165,]  270  281  290 #> [13166,]  270  281  290 #> [13167,]  270  280  289 #> [13168,]  270  280  289 #> [13169,]  270  281  290 #> [13170,]  270  281  290 #> [13171,]  270  280  289 #> [13172,]  270  280  289 #> [13173,]  270  281  290 #> [13174,]  270  280  289 #> [13175,]  270  280  289 #> [13176,]  270  280  289 #> [13177,]  270  281  290 #> [13178,]  270  280  289 #> [13179,]  270  281  290 #> [13180,]  270  280  289 #> [13181,]  270  281  290 #> [13182,]  270  281  290 #> [13183,]  270  281  290 #> [13184,]  270  281  290 #> [13185,]  270  281  290 #> [13186,]  270  280  289 #> [13187,]  270  281  290 #> [13188,]  270  280  289 #> [13189,]  270  281  290 #> [13190,]  270  281  290 #> [13191,]  270  281  290 #> [13192,]  270  280  289 #> [13193,]  270  281  290 #> [13194,]  270  281  290 #> [13195,]  270  280  289 #> [13196,]  270  280  289 #> [13197,]  270  280  289 #> [13198,]  270  280  289 #> [13199,]  270  281  290 #> [13200,]  270  281  290 #> [13201,]  272  283  292 #> [13202,]  272  283  292 #> [13203,]  271  282  291 #> [13204,]  272  283  292 #> [13205,]  271  282  292 #> [13206,]  271  282  292 #> [13207,]  272  283  291 #> [13208,]  272  283  292 #> [13209,]  272  283  292 #> [13210,]  272  283  292 #> [13211,]  271  282  292 #> [13212,]  271  282  292 #> [13213,]  272  283  291 #> [13214,]  271  282  292 #> [13215,]  272  283  292 #> [13216,]  272  283  291 #> [13217,]  272  283  292 #> [13218,]  272  283  292 #> [13219,]  271  282  291 #> [13220,]  271  282  292 #> [13221,]  272  283  291 #> [13222,]  271  282  292 #> [13223,]  272  283  291 #> [13224,]  271  282  292 #> [13225,]  272  283  292 #> [13226,]  271  282  292 #> [13227,]  272  283  292 #> [13228,]  272  283  292 #> [13229,]  271  282  292 #> [13230,]  271  282  291 #> [13231,]  272  283  291 #> [13232,]  271  282  292 #> [13233,]  272  283  292 #> [13234,]  271  282  291 #> [13235,]  271  282  291 #> [13236,]  271  282  291 #> [13237,]  272  283  291 #> [13238,]  272  283  292 #> [13239,]  272  283  291 #> [13240,]  271  282  291 #> [13241,]  271  282  292 #> [13242,]  271  282  292 #> [13243,]  272  283  292 #> [13244,]  272  283  292 #> [13245,]  272  283  292 #> [13246,]  272  283  292 #> [13247,]  272  283  291 #> [13248,]  271  282  292 #> [13249,]  272  283  291 #> [13250,]  272  283  292 #> [13251,]  271  282  292 #> [13252,]  271  282  292 #> [13253,]  272  283  292 #> [13254,]  271  282  291 #> [13255,]  271  282  292 #> [13256,]  272  283  292 #> [13257,]  271  282  292 #> [13258,]  271  282  292 #> [13259,]  272  283  292 #> [13260,]  271  282  292 #> [13261,]  272  283  292 #> [13262,]  271  282  291 #> [13263,]  271  282  292 #> [13264,]  272  283  292 #> [13265,]  272  283  292 #> [13266,]  271  282  292 #> [13267,]  271  282  292 #> [13268,]  271  282  292 #> [13269,]  271  282  292 #> [13270,]  272  283  291 #> [13271,]  272  283  292 #> [13272,]  272  283  292 #> [13273,]  272  283  292 #> [13274,]  272  283  292 #> [13275,]  272  283  292 #> [13276,]  272  283  292 #> [13277,]  272  283  291 #> [13278,]  271  282  292 #> [13279,]  272  283  291 #> [13280,]  271  282  291 #> [13281,]  271  282  292 #> [13282,]  272  283  292 #> [13283,]  271  282  291 #> [13284,]  272  283  292 #> [13285,]  272  283  292 #> [13286,]  272  283  292 #> [13287,]  272  283  292 #> [13288,]  272  283  292 #> [13289,]  271  282  292 #> [13290,]  272  283  292 #> [13291,]  271  282  292 #> [13292,]  272  283  292 #> [13293,]  271  282  291 #> [13294,]  272  283  292 #> [13295,]  272  283  291 #> [13296,]  272  283  292 #> [13297,]  272  283  292 #> [13298,]  271  282  291 #> [13299,]  271  282  292 #> [13300,]  272  283  292 #> [13301,]  274  284  293 #> [13302,]  274  284  293 #> [13303,]  273  285  293 #> [13304,]  274  284  293 #> [13305,]  274  284  293 #> [13306,]  274  284  293 #> [13307,]  273  285  293 #> [13308,]  274  284  294 #> [13309,]  274  284  294 #> [13310,]  274  284  293 #> [13311,]  274  284  293 #> [13312,]  274  284  293 #> [13313,]  273  285  293 #> [13314,]  274  284  293 #> [13315,]  274  284  293 #> [13316,]  273  285  293 #> [13317,]  274  284  293 #> [13318,]  273  285  293 #> [13319,]  273  285  293 #> [13320,]  274  284  293 #> [13321,]  273  285  293 #> [13322,]  274  284  293 #> [13323,]  273  285  293 #> [13324,]  273  285  293 #> [13325,]  274  284  293 #> [13326,]  274  284  294 #> [13327,]  274  284  293 #> [13328,]  274  284  293 #> [13329,]  274  284  293 #> [13330,]  273  285  293 #> [13331,]  273  285  293 #> [13332,]  274  284  293 #> [13333,]  274  284  293 #> [13334,]  273  285  293 #> [13335,]  273  285  293 #> [13336,]  273  285  293 #> [13337,]  273  285  293 #> [13338,]  274  284  293 #> [13339,]  273  285  293 #> [13340,]  273  285  293 #> [13341,]  274  284  293 #> [13342,]  274  284  293 #> [13343,]  274  284  294 #> [13344,]  273  285  293 #> [13345,]  274  284  293 #> [13346,]  274  284  293 #> [13347,]  273  285  293 #> [13348,]  274  284  293 #> [13349,]  273  285  293 #> [13350,]  274  284  293 #> [13351,]  274  284  293 #> [13352,]  274  284  293 #> [13353,]  274  284  293 #> [13354,]  273  285  293 #> [13355,]  274  284  293 #> [13356,]  274  284  294 #> [13357,]  274  284  293 #> [13358,]  274  284  293 #> [13359,]  274  284  293 #> [13360,]  274  284  293 #> [13361,]  274  284  294 #> [13362,]  273  285  293 #> [13363,]  274  284  293 #> [13364,]  274  284  293 #> [13365,]  274  284  293 #> [13366,]  274  284  293 #> [13367,]  274  284  293 #> [13368,]  274  284  293 #> [13369,]  274  284  293 #> [13370,]  273  285  293 #> [13371,]  274  284  293 #> [13372,]  274  284  293 #> [13373,]  274  284  293 #> [13374,]  274  284  293 #> [13375,]  274  284  293 #> [13376,]  274  284  294 #> [13377,]  273  285  293 #> [13378,]  274  284  293 #> [13379,]  273  285  293 #> [13380,]  273  285  293 #> [13381,]  274  284  293 #> [13382,]  274  284  293 #> [13383,]  273  285  293 #> [13384,]  274  284  293 #> [13385,]  274  284  293 #> [13386,]  274  284  293 #> [13387,]  274  284  293 #> [13388,]  274  284  293 #> [13389,]  274  284  293 #> [13390,]  274  284  293 #> [13391,]  274  284  293 #> [13392,]  274  284  293 #> [13393,]  273  285  293 #> [13394,]  274  284  293 #> [13395,]  273  285  293 #> [13396,]  274  284  293 #> [13397,]  274  284  293 #> [13398,]  273  285  293 #> [13399,]  274  284  293 #> [13400,]  273  285  293 #> [13401,]  275  287  295 #> [13402,]  275  287  295 #> [13403,]  276  288  296 #> [13404,]  275  287  295 #> [13405,]  276  288  296 #> [13406,]  277  288  296 #> [13407,]  275  286  295 #> [13408,]  275  287  295 #> [13409,]  275  287  295 #> [13410,]  275  287  295 #> [13411,]  277  288  296 #> [13412,]  277  288  296 #> [13413,]  275  286  295 #> [13414,]  277  288  296 #> [13415,]  275  287  295 #> [13416,]  275  287  295 #> [13417,]  275  287  295 #> [13418,]  275  287  295 #> [13419,]  277  288  296 #> [13420,]  276  288  296 #> [13421,]  275  286  295 #> [13422,]  276  288  296 #> [13423,]  275  286  295 #> [13424,]  276  288  296 #> [13425,]  275  287  295 #> [13426,]  277  288  296 #> [13427,]  275  287  295 #> [13428,]  275  287  295 #> [13429,]  276  288  296 #> [13430,]  277  288  296 #> [13431,]  275  286  295 #> [13432,]  277  288  296 #> [13433,]  277  288  296 #> [13434,]  276  288  296 #> [13435,]  276  288  296 #> [13436,]  277  288  296 #> [13437,]  275  287  295 #> [13438,]  275  287  295 #> [13439,]  275  286  295 #> [13440,]  276  288  296 #> [13441,]  277  288  296 #> [13442,]  277  288  296 #> [13443,]  275  287  295 #> [13444,]  275  287  295 #> [13445,]  275  287  295 #> [13446,]  275  287  295 #> [13447,]  275  286  295 #> [13448,]  277  288  296 #> [13449,]  276  288  296 #> [13450,]  276  288  296 #> [13451,]  276  288  296 #> [13452,]  277  288  296 #> [13453,]  275  287  295 #> [13454,]  276  288  296 #> [13455,]  276  288  296 #> [13456,]  275  287  295 #> [13457,]  276  288  296 #> [13458,]  277  288  296 #> [13459,]  276  288  296 #> [13460,]  277  288  296 #> [13461,]  275  287  295 #> [13462,]  277  288  296 #> [13463,]  276  288  296 #> [13464,]  275  287  295 #> [13465,]  276  288  296 #> [13466,]  276  288  296 #> [13467,]  277  288  296 #> [13468,]  277  288  296 #> [13469,]  277  288  296 #> [13470,]  275  286  295 #> [13471,]  275  287  295 #> [13472,]  275  287  295 #> [13473,]  275  287  295 #> [13474,]  275  287  295 #> [13475,]  275  287  295 #> [13476,]  275  287  295 #> [13477,]  275  286  295 #> [13478,]  276  288  296 #> [13479,]  275  286  295 #> [13480,]  276  288  296 #> [13481,]  276  288  296 #> [13482,]  275  287  295 #> [13483,]  276  288  296 #> [13484,]  275  287  295 #> [13485,]  277  288  296 #> [13486,]  275  287  295 #> [13487,]  275  287  295 #> [13488,]  275  287  295 #> [13489,]  276  288  296 #> [13490,]  275  287  295 #> [13491,]  276  288  296 #> [13492,]  277  288  296 #> [13493,]  277  288  296 #> [13494,]  275  287  295 #> [13495,]  275  286  295 #> [13496,]  275  287  295 #> [13497,]  277  288  296 #> [13498,]  276  288  296 #> [13499,]  277  288  296 #> [13500,]  275  287  295 #> [13501,]  278  290  298 #> [13502,]  278  290  298 #> [13503,]  278  290  298 #> [13504,]  278  290  298 #> [13505,]  278  290  298 #> [13506,]  278  290  298 #> [13507,]  278  290  298 #> [13508,]  278  290  298 #> [13509,]  278  290  298 #> [13510,]  278  290  298 #> [13511,]  278  290  298 #> [13512,]  278  290  298 #> [13513,]  278  290  298 #> [13514,]  278  290  298 #> [13515,]  278  289  297 #> [13516,]  278  290  298 #> [13517,]  278  289  297 #> [13518,]  278  290  298 #> [13519,]  278  290  298 #> [13520,]  278  290  298 #> [13521,]  278  290  298 #> [13522,]  278  290  298 #> [13523,]  278  290  298 #> [13524,]  278  290  298 #> [13525,]  278  290  298 #> [13526,]  278  290  298 #> [13527,]  278  290  298 #> [13528,]  278  290  298 #> [13529,]  278  290  298 #> [13530,]  278  290  298 #> [13531,]  278  289  297 #> [13532,]  278  290  298 #> [13533,]  278  290  298 #> [13534,]  278  289  297 #> [13535,]  278  290  298 #> [13536,]  278  290  298 #> [13537,]  278  289  297 #> [13538,]  278  290  298 #> [13539,]  278  290  298 #> [13540,]  278  290  298 #> [13541,]  278  290  298 #> [13542,]  278  289  297 #> [13543,]  278  289  297 #> [13544,]  278  289  297 #> [13545,]  278  290  298 #> [13546,]  278  290  298 #> [13547,]  278  290  298 #> [13548,]  278  289  297 #> [13549,]  278  290  298 #> [13550,]  278  290  298 #> [13551,]  278  290  298 #> [13552,]  278  290  298 #> [13553,]  278  290  298 #> [13554,]  278  290  298 #> [13555,]  278  290  298 #> [13556,]  278  290  298 #> [13557,]  278  290  298 #> [13558,]  278  290  298 #> [13559,]  278  290  298 #> [13560,]  278  290  298 #> [13561,]  278  290  298 #> [13562,]  278  290  298 #> [13563,]  278  289  297 #> [13564,]  278  290  298 #> [13565,]  278  290  298 #> [13566,]  278  290  298 #> [13567,]  278  290  298 #> [13568,]  278  290  298 #> [13569,]  278  290  298 #> [13570,]  278  289  297 #> [13571,]  278  290  298 #> [13572,]  278  290  298 #> [13573,]  278  290  298 #> [13574,]  278  290  298 #> [13575,]  278  289  297 #> [13576,]  278  290  298 #> [13577,]  278  290  298 #> [13578,]  278  289  297 #> [13579,]  278  289  297 #> [13580,]  278  290  298 #> [13581,]  278  290  298 #> [13582,]  278  290  298 #> [13583,]  278  290  298 #> [13584,]  278  290  298 #> [13585,]  278  290  298 #> [13586,]  278  290  298 #> [13587,]  278  290  298 #> [13588,]  278  290  298 #> [13589,]  278  290  298 #> [13590,]  278  290  298 #> [13591,]  278  290  298 #> [13592,]  278  290  298 #> [13593,]  278  290  298 #> [13594,]  278  289  297 #> [13595,]  278  289  297 #> [13596,]  278  290  298 #> [13597,]  278  290  298 #> [13598,]  278  290  298 #> [13599,]  278  290  298 #> [13600,]  278  289  297 #> [13601,]  279  292  299 #> [13602,]  279  292  299 #> [13603,]  279  292  299 #> [13604,]  279  292  299 #> [13605,]  279  292  299 #> [13606,]  279  292  299 #> [13607,]  279  292  299 #> [13608,]  279  292  299 #> [13609,]  279  292  299 #> [13610,]  279  292  299 #> [13611,]  279  292  299 #> [13612,]  279  292  299 #> [13613,]  280  292  299 #> [13614,]  279  292  299 #> [13615,]  279  291  300 #> [13616,]  279  292  299 #> [13617,]  279  292  299 #> [13618,]  280  292  299 #> [13619,]  279  292  299 #> [13620,]  279  292  299 #> [13621,]  279  292  299 #> [13622,]  279  292  299 #> [13623,]  279  292  299 #> [13624,]  279  292  299 #> [13625,]  279  292  299 #> [13626,]  279  292  299 #> [13627,]  279  292  299 #> [13628,]  279  292  299 #> [13629,]  279  292  299 #> [13630,]  279  292  299 #> [13631,]  279  291  300 #> [13632,]  279  292  299 #> [13633,]  279  292  299 #> [13634,]  279  291  300 #> [13635,]  279  292  299 #> [13636,]  279  292  299 #> [13637,]  279  291  300 #> [13638,]  279  292  299 #> [13639,]  279  292  299 #> [13640,]  279  292  299 #> [13641,]  279  292  299 #> [13642,]  280  291  300 #> [13643,]  279  291  300 #> [13644,]  279  291  300 #> [13645,]  279  292  299 #> [13646,]  279  292  299 #> [13647,]  279  292  299 #> [13648,]  279  292  299 #> [13649,]  279  292  299 #> [13650,]  279  292  299 #> [13651,]  280  292  299 #> [13652,]  279  292  299 #> [13653,]  280  292  299 #> [13654,]  279  292  299 #> [13655,]  279  292  299 #> [13656,]  279  292  299 #> [13657,]  279  292  299 #> [13658,]  279  292  299 #> [13659,]  279  292  299 #> [13660,]  279  292  299 #> [13661,]  279  292  299 #> [13662,]  279  292  299 #> [13663,]  279  291  300 #> [13664,]  279  292  299 #> [13665,]  279  292  299 #> [13666,]  279  292  299 #> [13667,]  279  292  299 #> [13668,]  279  292  299 #> [13669,]  279  292  299 #> [13670,]  279  292  299 #> [13671,]  279  292  299 #> [13672,]  279  292  299 #> [13673,]  279  292  299 #> [13674,]  279  292  299 #> [13675,]  279  291  300 #> [13676,]  279  292  299 #> [13677,]  279  292  299 #> [13678,]  279  291  300 #> [13679,]  280  292  299 #> [13680,]  279  292  299 #> [13681,]  279  292  299 #> [13682,]  279  292  299 #> [13683,]  279  292  299 #> [13684,]  280  292  299 #> [13685,]  279  292  299 #> [13686,]  279  292  299 #> [13687,]  279  292  299 #> [13688,]  279  292  299 #> [13689,]  279  292  299 #> [13690,]  279  292  299 #> [13691,]  280  292  299 #> [13692,]  279  292  299 #> [13693,]  280  292  299 #> [13694,]  280  292  299 #> [13695,]  279  291  300 #> [13696,]  279  292  299 #> [13697,]  279  292  299 #> [13698,]  279  292  299 #> [13699,]  279  292  299 #> [13700,]  279  291  300 #> [13701,]  282  294  303 #> [13702,]  281  293  301 #> [13703,]  282  294  302 #> [13704,]  282  294  303 #> [13705,]  281  293  301 #> [13706,]  281  293  301 #> [13707,]  282  294  302 #> [13708,]  281  293  301 #> [13709,]  282  294  303 #> [13710,]  282  294  303 #> [13711,]  281  293  301 #> [13712,]  281  293  301 #> [13713,]  282  294  302 #> [13714,]  282  294  303 #> [13715,]  281  293  301 #> [13716,]  282  294  302 #> [13717,]  281  293  301 #> [13718,]  281  293  301 #> [13719,]  281  293  301 #> [13720,]  282  294  302 #> [13721,]  281  293  301 #> [13722,]  282  294  302 #> [13723,]  281  293  301 #> [13724,]  282  294  302 #> [13725,]  282  294  302 #> [13726,]  281  293  301 #> [13727,]  282  294  303 #> [13728,]  282  294  303 #> [13729,]  281  293  301 #> [13730,]  281  293  301 #> [13731,]  281  293  301 #> [13732,]  281  293  301 #> [13733,]  281  293  301 #> [13734,]  281  293  301 #> [13735,]  281  293  301 #> [13736,]  282  294  303 #> [13737,]  281  293  301 #> [13738,]  281  293  301 #> [13739,]  282  294  302 #> [13740,]  281  293  301 #> [13741,]  282  294  303 #> [13742,]  281  293  301 #> [13743,]  281  293  301 #> [13744,]  281  293  301 #> [13745,]  282  294  303 #> [13746,]  281  293  301 #> [13747,]  281  293  301 #> [13748,]  281  293  301 #> [13749,]  282  294  302 #> [13750,]  282  294  302 #> [13751,]  281  293  301 #> [13752,]  282  294  303 #> [13753,]  282  294  302 #> [13754,]  282  294  302 #> [13755,]  282  294  302 #> [13756,]  281  293  301 #> [13757,]  282  294  303 #> [13758,]  282  294  303 #> [13759,]  282  294  302 #> [13760,]  281  293  301 #> [13761,]  281  293  301 #> [13762,]  281  293  301 #> [13763,]  281  293  301 #> [13764,]  281  293  301 #> [13765,]  281  293  301 #> [13766,]  281  293  301 #> [13767,]  282  294  303 #> [13768,]  281  293  301 #> [13769,]  281  293  301 #> [13770,]  281  293  301 #> [13771,]  282  294  303 #> [13772,]  282  294  302 #> [13773,]  282  294  303 #> [13774,]  282  294  303 #> [13775,]  281  293  301 #> [13776,]  282  294  303 #> [13777,]  281  293  301 #> [13778,]  281  293  301 #> [13779,]  281  293  301 #> [13780,]  281  293  301 #> [13781,]  281  293  301 #> [13782,]  281  293  301 #> [13783,]  281  293  301 #> [13784,]  281  293  301 #> [13785,]  282  294  303 #> [13786,]  282  294  302 #> [13787,]  282  294  303 #> [13788,]  282  294  303 #> [13789,]  281  293  301 #> [13790,]  282  294  302 #> [13791,]  282  294  303 #> [13792,]  281  293  301 #> [13793,]  281  293  301 #> [13794,]  281  293  301 #> [13795,]  281  293  301 #> [13796,]  281  293  301 #> [13797,]  281  293  301 #> [13798,]  281  293  301 #> [13799,]  281  293  301 #> [13800,]  281  293  301 #> [13801,]  284  295  305 #> [13802,]  284  295  304 #> [13803,]  283  295  304 #> [13804,]  283  295  304 #> [13805,]  283  295  305 #> [13806,]  284  295  305 #> [13807,]  283  295  304 #> [13808,]  283  295  305 #> [13809,]  283  295  305 #> [13810,]  283  295  304 #> [13811,]  283  295  305 #> [13812,]  283  295  305 #> [13813,]  284  295  304 #> [13814,]  284  295  305 #> [13815,]  284  295  305 #> [13816,]  284  295  304 #> [13817,]  284  295  304 #> [13818,]  283  295  304 #> [13819,]  283  295  304 #> [13820,]  283  295  305 #> [13821,]  284  295  304 #> [13822,]  284  295  304 #> [13823,]  283  295  304 #> [13824,]  283  295  304 #> [13825,]  283  295  304 #> [13826,]  284  295  305 #> [13827,]  284  295  304 #> [13828,]  283  295  305 #> [13829,]  284  295  304 #> [13830,]  283  295  304 #> [13831,]  283  295  304 #> [13832,]  283  295  304 #> [13833,]  284  295  305 #> [13834,]  283  295  304 #> [13835,]  284  295  304 #> [13836,]  283  295  304 #> [13837,]  284  295  304 #> [13838,]  283  295  305 #> [13839,]  283  295  304 #> [13840,]  283  295  304 #> [13841,]  284  295  305 #> [13842,]  283  295  305 #> [13843,]  283  295  305 #> [13844,]  284  295  304 #> [13845,]  283  295  305 #> [13846,]  283  295  305 #> [13847,]  283  295  304 #> [13848,]  283  295  304 #> [13849,]  283  295  304 #> [13850,]  284  295  305 #> [13851,]  283  295  305 #> [13852,]  284  295  305 #> [13853,]  283  295  305 #> [13854,]  283  295  304 #> [13855,]  283  295  305 #> [13856,]  283  295  305 #> [13857,]  283  295  305 #> [13858,]  284  295  305 #> [13859,]  284  295  304 #> [13860,]  283  295  305 #> [13861,]  284  295  305 #> [13862,]  283  295  304 #> [13863,]  283  295  305 #> [13864,]  283  295  305 #> [13865,]  283  295  305 #> [13866,]  283  295  305 #> [13867,]  283  295  305 #> [13868,]  284  295  305 #> [13869,]  283  295  304 #> [13870,]  284  295  304 #> [13871,]  284  295  305 #> [13872,]  283  295  305 #> [13873,]  284  295  305 #> [13874,]  283  295  305 #> [13875,]  283  295  305 #> [13876,]  284  295  305 #> [13877,]  284  295  304 #> [13878,]  283  295  305 #> [13879,]  284  295  304 #> [13880,]  283  295  304 #> [13881,]  284  295  305 #> [13882,]  283  295  304 #> [13883,]  284  295  304 #> [13884,]  283  295  305 #> [13885,]  283  295  304 #> [13886,]  284  295  304 #> [13887,]  283  295  305 #> [13888,]  283  295  305 #> [13889,]  283  295  304 #> [13890,]  284  295  305 #> [13891,]  283  295  305 #> [13892,]  283  295  305 #> [13893,]  284  295  304 #> [13894,]  284  295  305 #> [13895,]  283  295  304 #> [13896,]  284  295  305 #> [13897,]  283  295  305 #> [13898,]  283  295  304 #> [13899,]  284  295  304 #> [13900,]  284  295  304 #> [13901,]  285  298  307 #> [13902,]  286  296  306 #> [13903,]  285  297  307 #> [13904,]  285  298  307 #> [13905,]  286  296  306 #> [13906,]  285  298  307 #> [13907,]  286  296  306 #> [13908,]  285  298  307 #> [13909,]  286  296  306 #> [13910,]  286  296  306 #> [13911,]  285  298  307 #> [13912,]  286  296  306 #> [13913,]  286  296  306 #> [13914,]  285  298  307 #> [13915,]  285  298  307 #> [13916,]  285  297  307 #> [13917,]  286  296  306 #> [13918,]  286  296  306 #> [13919,]  285  297  307 #> [13920,]  286  296  306 #> [13921,]  286  296  306 #> [13922,]  286  296  306 #> [13923,]  286  296  306 #> [13924,]  286  296  306 #> [13925,]  286  296  306 #> [13926,]  285  298  307 #> [13927,]  286  296  306 #> [13928,]  285  298  307 #> [13929,]  286  296  306 #> [13930,]  286  296  306 #> [13931,]  286  296  306 #> [13932,]  286  296  306 #> [13933,]  286  296  306 #> [13934,]  285  297  307 #> [13935,]  285  297  307 #> [13936,]  286  296  306 #> [13937,]  285  297  307 #> [13938,]  285  298  307 #> [13939,]  286  296  306 #> [13940,]  286  296  306 #> [13941,]  286  296  306 #> [13942,]  285  298  307 #> [13943,]  286  296  306 #> [13944,]  286  296  306 #> [13945,]  285  298  307 #> [13946,]  285  298  307 #> [13947,]  286  296  306 #> [13948,]  286  296  306 #> [13949,]  285  297  307 #> [13950,]  286  296  306 #> [13951,]  286  296  306 #> [13952,]  285  298  307 #> [13953,]  286  296  306 #> [13954,]  286  296  306 #> [13955,]  285  298  307 #> [13956,]  285  298  307 #> [13957,]  285  298  307 #> [13958,]  286  296  306 #> [13959,]  285  298  307 #> [13960,]  286  296  306 #> [13961,]  286  296  306 #> [13962,]  285  297  307 #> [13963,]  286  296  306 #> [13964,]  285  298  307 #> [13965,]  285  298  307 #> [13966,]  286  296  306 #> [13967,]  286  296  306 #> [13968,]  285  298  307 #> [13969,]  285  298  307 #> [13970,]  286  296  306 #> [13971,]  286  296  306 #> [13972,]  285  298  307 #> [13973,]  285  298  307 #> [13974,]  286  296  306 #> [13975,]  286  296  306 #> [13976,]  286  296  306 #> [13977,]  285  297  307 #> [13978,]  286  296  306 #> [13979,]  285  297  307 #> [13980,]  286  296  306 #> [13981,]  286  296  306 #> [13982,]  285  298  307 #> [13983,]  286  296  306 #> [13984,]  286  296  306 #> [13985,]  286  296  306 #> [13986,]  286  296  306 #> [13987,]  286  296  306 #> [13988,]  286  296  306 #> [13989,]  285  298  307 #> [13990,]  286  296  306 #> [13991,]  285  298  307 #> [13992,]  286  296  306 #> [13993,]  286  296  306 #> [13994,]  285  298  307 #> [13995,]  286  296  306 #> [13996,]  285  298  307 #> [13997,]  285  298  307 #> [13998,]  286  296  306 #> [13999,]  286  296  306 #> [14000,]  285  298  307 #> [14001,]  287  299  308 #> [14002,]  288  300  309 #> [14003,]  287  299  308 #> [14004,]  287  299  308 #> [14005,]  288  300  309 #> [14006,]  287  299  308 #> [14007,]  288  300  309 #> [14008,]  288  300  309 #> [14009,]  288  300  309 #> [14010,]  288  300  309 #> [14011,]  287  299  308 #> [14012,]  288  300  309 #> [14013,]  288  300  309 #> [14014,]  287  299  308 #> [14015,]  288  300  309 #> [14016,]  287  299  308 #> [14017,]  288  300  309 #> [14018,]  288  300  309 #> [14019,]  287  299  308 #> [14020,]  288  300  309 #> [14021,]  288  300  309 #> [14022,]  288  300  309 #> [14023,]  288  300  309 #> [14024,]  288  300  309 #> [14025,]  288  300  309 #> [14026,]  287  299  308 #> [14027,]  288  300  309 #> [14028,]  287  299  308 #> [14029,]  288  300  309 #> [14030,]  288  300  309 #> [14031,]  288  300  309 #> [14032,]  288  300  309 #> [14033,]  288  300  309 #> [14034,]  287  299  308 #> [14035,]  287  299  308 #> [14036,]  288  300  309 #> [14037,]  287  299  308 #> [14038,]  287  299  308 #> [14039,]  288  300  309 #> [14040,]  288  300  309 #> [14041,]  288  300  309 #> [14042,]  287  299  308 #> [14043,]  288  300  309 #> [14044,]  288  300  309 #> [14045,]  287  299  308 #> [14046,]  288  300  309 #> [14047,]  288  300  309 #> [14048,]  288  300  309 #> [14049,]  287  299  308 #> [14050,]  288  300  309 #> [14051,]  288  300  309 #> [14052,]  287  299  308 #> [14053,]  288  300  309 #> [14054,]  288  300  309 #> [14055,]  288  300  309 #> [14056,]  287  299  308 #> [14057,]  288  300  309 #> [14058,]  288  300  309 #> [14059,]  287  299  308 #> [14060,]  288  300  309 #> [14061,]  288  300  309 #> [14062,]  288  300  309 #> [14063,]  288  300  309 #> [14064,]  287  299  308 #> [14065,]  287  299  308 #> [14066,]  288  300  309 #> [14067,]  288  300  309 #> [14068,]  287  299  308 #> [14069,]  287  299  308 #> [14070,]  288  300  309 #> [14071,]  288  300  309 #> [14072,]  287  299  308 #> [14073,]  287  299  308 #> [14074,]  288  300  309 #> [14075,]  288  300  309 #> [14076,]  288  300  309 #> [14077,]  287  299  308 #> [14078,]  288  300  309 #> [14079,]  287  299  308 #> [14080,]  288  300  309 #> [14081,]  288  300  309 #> [14082,]  288  300  309 #> [14083,]  288  300  309 #> [14084,]  288  300  309 #> [14085,]  288  300  309 #> [14086,]  288  300  309 #> [14087,]  288  300  309 #> [14088,]  288  300  309 #> [14089,]  287  299  308 #> [14090,]  288  300  309 #> [14091,]  288  300  309 #> [14092,]  288  300  309 #> [14093,]  288  300  309 #> [14094,]  287  299  308 #> [14095,]  288  300  309 #> [14096,]  287  299  308 #> [14097,]  287  299  308 #> [14098,]  288  300  309 #> [14099,]  288  300  309 #> [14100,]  287  299  308 #> [14101,]  291  302  311 #> [14102,]  290  302  311 #> [14103,]  289  301  310 #> [14104,]  290  302  311 #> [14105,]  290  302  311 #> [14106,]  290  302  311 #> [14107,]  289  301  310 #> [14108,]  290  302  311 #> [14109,]  290  302  311 #> [14110,]  290  302  311 #> [14111,]  290  302  311 #> [14112,]  290  302  311 #> [14113,]  289  301  310 #> [14114,]  291  302  311 #> [14115,]  291  302  311 #> [14116,]  291  302  311 #> [14117,]  290  302  311 #> [14118,]  290  302  311 #> [14119,]  290  302  311 #> [14120,]  290  302  311 #> [14121,]  289  301  310 #> [14122,]  290  302  311 #> [14123,]  289  301  310 #> [14124,]  290  302  311 #> [14125,]  290  302  311 #> [14126,]  290  302  311 #> [14127,]  290  302  311 #> [14128,]  290  302  311 #> [14129,]  291  302  311 #> [14130,]  289  301  310 #> [14131,]  289  301  310 #> [14132,]  290  302  311 #> [14133,]  291  302  311 #> [14134,]  290  302  311 #> [14135,]  290  302  311 #> [14136,]  290  302  311 #> [14137,]  290  302  311 #> [14138,]  290  302  311 #> [14139,]  289  301  310 #> [14140,]  289  301  310 #> [14141,]  291  302  311 #> [14142,]  290  302  311 #> [14143,]  290  302  311 #> [14144,]  291  302  311 #> [14145,]  290  302  311 #> [14146,]  290  302  311 #> [14147,]  289  301  310 #> [14148,]  290  302  311 #> [14149,]  289  301  310 #> [14150,]  291  302  311 #> [14151,]  290  302  311 #> [14152,]  290  302  311 #> [14153,]  290  302  311 #> [14154,]  289  301  310 #> [14155,]  290  302  311 #> [14156,]  290  302  311 #> [14157,]  290  302  311 #> [14158,]  290  302  311 #> [14159,]  291  302  311 #> [14160,]  290  302  311 #> [14161,]  290  302  311 #> [14162,]  289  301  310 #> [14163,]  290  302  311 #> [14164,]  290  302  311 #> [14165,]  290  302  311 #> [14166,]  290  302  311 #> [14167,]  290  302  311 #> [14168,]  291  302  311 #> [14169,]  290  302  311 #> [14170,]  289  301  310 #> [14171,]  290  302  311 #> [14172,]  290  302  311 #> [14173,]  291  302  311 #> [14174,]  290  302  311 #> [14175,]  290  302  311 #> [14176,]  290  302  311 #> [14177,]  289  301  310 #> [14178,]  290  302  311 #> [14179,]  289  301  310 #> [14180,]  289  301  310 #> [14181,]  290  302  311 #> [14182,]  290  302  311 #> [14183,]  289  301  310 #> [14184,]  290  302  311 #> [14185,]  290  302  311 #> [14186,]  290  302  311 #> [14187,]  290  302  311 #> [14188,]  290  302  311 #> [14189,]  290  302  311 #> [14190,]  290  302  311 #> [14191,]  290  302  311 #> [14192,]  290  302  311 #> [14193,]  290  302  311 #> [14194,]  290  302  311 #> [14195,]  289  301  310 #> [14196,]  291  302  311 #> [14197,]  290  302  311 #> [14198,]  289  301  310 #> [14199,]  291  302  311 #> [14200,]  290  302  311 #> [14201,]  292  303  313 #> [14202,]  293  304  312 #> [14203,]  293  304  312 #> [14204,]  292  303  312 #> [14205,]  293  304  312 #> [14206,]  293  304  312 #> [14207,]  293  304  312 #> [14208,]  292  303  312 #> [14209,]  292  303  313 #> [14210,]  293  304  312 #> [14211,]  292  303  312 #> [14212,]  293  304  312 #> [14213,]  292  303  313 #> [14214,]  292  303  312 #> [14215,]  292  303  312 #> [14216,]  292  303  312 #> [14217,]  292  303  313 #> [14218,]  293  304  313 #> [14219,]  293  304  312 #> [14220,]  293  304  313 #> [14221,]  292  303  312 #> [14222,]  292  303  312 #> [14223,]  293  304  312 #> [14224,]  293  304  312 #> [14225,]  293  304  312 #> [14226,]  293  304  312 #> [14227,]  292  303  313 #> [14228,]  293  304  312 #> [14229,]  293  304  312 #> [14230,]  292  303  312 #> [14231,]  293  304  312 #> [14232,]  293  304  312 #> [14233,]  293  304  313 #> [14234,]  293  304  312 #> [14235,]  292  303  312 #> [14236,]  293  304  313 #> [14237,]  292  303  312 #> [14238,]  293  304  313 #> [14239,]  293  304  313 #> [14240,]  293  304  312 #> [14241,]  292  303  312 #> [14242,]  293  304  313 #> [14243,]  292  303  312 #> [14244,]  292  303  312 #> [14245,]  292  303  312 #> [14246,]  292  303  312 #> [14247,]  293  304  312 #> [14248,]  293  304  312 #> [14249,]  292  303  312 #> [14250,]  293  304  312 #> [14251,]  293  304  313 #> [14252,]  292  303  312 #> [14253,]  293  304  313 #> [14254,]  292  303  313 #> [14255,]  292  303  312 #> [14256,]  293  304  313 #> [14257,]  293  304  312 #> [14258,]  292  303  312 #> [14259,]  293  304  312 #> [14260,]  293  304  312 #> [14261,]  293  304  312 #> [14262,]  292  303  313 #> [14263,]  293  304  312 #> [14264,]  293  304  312 #> [14265,]  293  304  313 #> [14266,]  292  303  313 #> [14267,]  292  303  312 #> [14268,]  292  303  312 #> [14269,]  292  303  312 #> [14270,]  293  304  312 #> [14271,]  293  304  312 #> [14272,]  293  304  312 #> [14273,]  293  304  312 #> [14274,]  292  303  312 #> [14275,]  293  304  312 #> [14276,]  293  304  312 #> [14277,]  293  304  313 #> [14278,]  293  304  312 #> [14279,]  292  303  313 #> [14280,]  292  303  312 #> [14281,]  292  303  312 #> [14282,]  292  303  313 #> [14283,]  292  303  313 #> [14284,]  293  304  313 #> [14285,]  292  303  313 #> [14286,]  293  304  312 #> [14287,]  292  303  313 #> [14288,]  292  303  312 #> [14289,]  292  303  313 #> [14290,]  292  303  312 #> [14291,]  292  303  313 #> [14292,]  292  303  312 #> [14293,]  293  304  313 #> [14294,]  293  304  313 #> [14295,]  292  303  312 #> [14296,]  292  303  312 #> [14297,]  293  304  312 #> [14298,]  293  304  312 #> [14299,]  292  303  312 #> [14300,]  293  304  312 #> [14301,]  295  306  315 #> [14302,]  295  306  315 #> [14303,]  294  305  314 #> [14304,]  294  305  314 #> [14305,]  294  305  314 #> [14306,]  295  306  315 #> [14307,]  295  306  315 #> [14308,]  294  305  314 #> [14309,]  294  305  314 #> [14310,]  294  305  314 #> [14311,]  295  306  315 #> [14312,]  295  306  315 #> [14313,]  295  306  315 #> [14314,]  295  306  315 #> [14315,]  295  306  315 #> [14316,]  295  306  315 #> [14317,]  295  306  315 #> [14318,]  294  305  314 #> [14319,]  295  306  315 #> [14320,]  294  305  314 #> [14321,]  295  306  315 #> [14322,]  295  306  315 #> [14323,]  295  306  315 #> [14324,]  294  305  314 #> [14325,]  295  306  315 #> [14326,]  295  306  315 #> [14327,]  295  306  315 #> [14328,]  295  306  315 #> [14329,]  295  306  315 #> [14330,]  294  305  314 #> [14331,]  294  305  314 #> [14332,]  294  305  314 #> [14333,]  295  306  315 #> [14334,]  294  305  314 #> [14335,]  295  306  315 #> [14336,]  295  306  315 #> [14337,]  295  306  315 #> [14338,]  295  306  315 #> [14339,]  294  305  314 #> [14340,]  295  306  315 #> [14341,]  295  306  315 #> [14342,]  294  305  314 #> [14343,]  294  305  314 #> [14344,]  295  306  315 #> [14345,]  294  305  314 #> [14346,]  295  306  315 #> [14347,]  295  306  315 #> [14348,]  294  305  314 #> [14349,]  294  305  314 #> [14350,]  295  306  315 #> [14351,]  294  305  314 #> [14352,]  295  306  315 #> [14353,]  294  305  314 #> [14354,]  295  306  315 #> [14355,]  295  306  315 #> [14356,]  294  305  314 #> [14357,]  295  306  315 #> [14358,]  295  306  315 #> [14359,]  295  306  315 #> [14360,]  294  305  314 #> [14361,]  295  306  315 #> [14362,]  294  305  314 #> [14363,]  295  306  315 #> [14364,]  294  305  314 #> [14365,]  294  305  314 #> [14366,]  294  305  314 #> [14367,]  294  305  314 #> [14368,]  295  306  315 #> [14369,]  295  306  315 #> [14370,]  295  306  315 #> [14371,]  295  306  315 #> [14372,]  294  305  314 #> [14373,]  295  306  315 #> [14374,]  295  306  315 #> [14375,]  295  306  315 #> [14376,]  295  306  315 #> [14377,]  295  306  315 #> [14378,]  294  305  314 #> [14379,]  295  306  315 #> [14380,]  295  306  315 #> [14381,]  295  306  315 #> [14382,]  295  306  315 #> [14383,]  295  306  315 #> [14384,]  295  306  315 #> [14385,]  294  305  314 #> [14386,]  295  306  315 #> [14387,]  295  306  315 #> [14388,]  294  305  314 #> [14389,]  294  305  314 #> [14390,]  295  306  315 #> [14391,]  294  305  314 #> [14392,]  295  306  315 #> [14393,]  295  306  315 #> [14394,]  295  306  315 #> [14395,]  294  305  314 #> [14396,]  295  306  315 #> [14397,]  295  306  315 #> [14398,]  295  306  315 #> [14399,]  295  306  315 #> [14400,]  295  306  315 #> [14401,]  297  308  317 #> [14402,]  297  308  316 #> [14403,]  297  308  316 #> [14404,]  297  308  316 #> [14405,]  297  308  317 #> [14406,]  296  307  316 #> [14407,]  297  308  316 #> [14408,]  297  308  316 #> [14409,]  297  308  316 #> [14410,]  297  308  317 #> [14411,]  297  308  317 #> [14412,]  297  308  317 #> [14413,]  297  308  316 #> [14414,]  297  308  317 #> [14415,]  297  308  317 #> [14416,]  297  308  316 #> [14417,]  297  308  317 #> [14418,]  297  308  317 #> [14419,]  297  308  316 #> [14420,]  296  307  316 #> [14421,]  296  307  316 #> [14422,]  297  308  317 #> [14423,]  297  308  316 #> [14424,]  297  308  316 #> [14425,]  296  307  316 #> [14426,]  297  308  317 #> [14427,]  297  308  317 #> [14428,]  297  308  316 #> [14429,]  297  308  316 #> [14430,]  297  308  316 #> [14431,]  297  308  317 #> [14432,]  297  308  317 #> [14433,]  297  308  316 #> [14434,]  297  308  316 #> [14435,]  296  307  316 #> [14436,]  297  308  316 #> [14437,]  297  308  316 #> [14438,]  297  308  317 #> [14439,]  297  308  316 #> [14440,]  297  308  316 #> [14441,]  297  308  316 #> [14442,]  296  307  316 #> [14443,]  297  308  317 #> [14444,]  296  307  316 #> [14445,]  297  308  316 #> [14446,]  297  308  316 #> [14447,]  297  308  317 #> [14448,]  297  308  316 #> [14449,]  297  308  316 #> [14450,]  297  308  316 #> [14451,]  297  308  316 #> [14452,]  297  308  317 #> [14453,]  296  307  316 #> [14454,]  297  308  316 #> [14455,]  297  308  316 #> [14456,]  296  307  316 #> [14457,]  297  308  316 #> [14458,]  297  308  317 #> [14459,]  297  308  317 #> [14460,]  297  308  316 #> [14461,]  297  308  317 #> [14462,]  297  308  316 #> [14463,]  297  308  316 #> [14464,]  297  308  316 #> [14465,]  296  307  316 #> [14466,]  297  308  317 #> [14467,]  297  308  316 #> [14468,]  297  308  316 #> [14469,]  297  308  316 #> [14470,]  297  308  317 #> [14471,]  297  308  317 #> [14472,]  297  308  316 #> [14473,]  296  307  316 #> [14474,]  296  307  316 #> [14475,]  297  308  317 #> [14476,]  297  308  316 #> [14477,]  297  308  317 #> [14478,]  297  308  316 #> [14479,]  297  308  317 #> [14480,]  296  307  316 #> [14481,]  297  308  316 #> [14482,]  296  307  316 #> [14483,]  297  308  316 #> [14484,]  296  307  316 #> [14485,]  296  307  316 #> [14486,]  296  307  316 #> [14487,]  297  308  317 #> [14488,]  297  308  316 #> [14489,]  296  307  316 #> [14490,]  297  308  317 #> [14491,]  297  308  317 #> [14492,]  297  308  317 #> [14493,]  297  308  316 #> [14494,]  296  307  316 #> [14495,]  297  308  317 #> [14496,]  297  308  316 #> [14497,]  297  308  316 #> [14498,]  297  308  316 #> [14499,]  296  307  316 #> [14500,]  297  308  317 #> [14501,]  299  310  319 #> [14502,]  298  309  319 #> [14503,]  299  310  319 #> [14504,]  299  310  319 #> [14505,]  299  310  319 #> [14506,]  298  309  319 #> [14507,]  299  310  318 #> [14508,]  299  310  319 #> [14509,]  299  310  319 #> [14510,]  299  310  319 #> [14511,]  298  309  319 #> [14512,]  298  309  319 #> [14513,]  299  310  319 #> [14514,]  299  310  319 #> [14515,]  298  309  319 #> [14516,]  299  310  319 #> [14517,]  298  309  319 #> [14518,]  299  310  319 #> [14519,]  298  309  319 #> [14520,]  299  310  319 #> [14521,]  299  310  318 #> [14522,]  299  310  319 #> [14523,]  298  309  319 #> [14524,]  299  310  319 #> [14525,]  299  310  319 #> [14526,]  298  309  319 #> [14527,]  299  310  319 #> [14528,]  299  310  319 #> [14529,]  298  309  319 #> [14530,]  298  309  319 #> [14531,]  298  309  319 #> [14532,]  299  310  319 #> [14533,]  299  310  319 #> [14534,]  298  309  319 #> [14535,]  298  309  319 #> [14536,]  299  310  319 #> [14537,]  298  309  319 #> [14538,]  299  310  319 #> [14539,]  299  310  319 #> [14540,]  299  310  319 #> [14541,]  299  310  319 #> [14542,]  298  309  319 #> [14543,]  298  309  319 #> [14544,]  298  309  319 #> [14545,]  299  310  319 #> [14546,]  299  310  319 #> [14547,]  298  309  319 #> [14548,]  298  309  319 #> [14549,]  299  310  319 #> [14550,]  299  310  319 #> [14551,]  299  310  319 #> [14552,]  299  310  319 #> [14553,]  299  310  319 #> [14554,]  299  310  319 #> [14555,]  299  310  319 #> [14556,]  298  309  319 #> [14557,]  299  310  319 #> [14558,]  299  310  319 #> [14559,]  299  310  319 #> [14560,]  298  309  319 #> [14561,]  298  309  319 #> [14562,]  299  310  318 #> [14563,]  298  309  319 #> [14564,]  298  309  319 #> [14565,]  298  309  319 #> [14566,]  298  309  319 #> [14567,]  299  310  319 #> [14568,]  298  309  319 #> [14569,]  299  310  319 #> [14570,]  298  309  318 #> [14571,]  299  310  319 #> [14572,]  299  310  319 #> [14573,]  299  310  319 #> [14574,]  299  310  319 #> [14575,]  298  309  319 #> [14576,]  299  310  319 #> [14577,]  299  310  319 #> [14578,]  298  309  319 #> [14579,]  298  309  319 #> [14580,]  299  310  319 #> [14581,]  298  309  319 #> [14582,]  299  310  319 #> [14583,]  299  310  319 #> [14584,]  299  310  319 #> [14585,]  299  310  319 #> [14586,]  299  310  319 #> [14587,]  299  310  319 #> [14588,]  299  310  319 #> [14589,]  299  310  319 #> [14590,]  299  310  319 #> [14591,]  299  310  319 #> [14592,]  298  309  319 #> [14593,]  299  310  319 #> [14594,]  298  309  319 #> [14595,]  298  309  318 #> [14596,]  298  309  319 #> [14597,]  299  310  319 #> [14598,]  299  310  319 #> [14599,]  299  310  319 #> [14600,]  298  309  319 #> [14601,]  301  312  321 #> [14602,]  301  312  321 #> [14603,]  300  311  320 #> [14604,]  300  311  320 #> [14605,]  300  311  320 #> [14606,]  300  311  320 #> [14607,]  301  312  321 #> [14608,]  301  312  321 #> [14609,]  300  311  320 #> [14610,]  300  311  320 #> [14611,]  300  311  320 #> [14612,]  301  312  321 #> [14613,]  301  312  321 #> [14614,]  300  311  320 #> [14615,]  301  312  321 #> [14616,]  301  312  321 #> [14617,]  300  311  320 #> [14618,]  301  312  321 #> [14619,]  301  312  321 #> [14620,]  301  312  321 #> [14621,]  300  311  320 #> [14622,]  301  312  321 #> [14623,]  301  312  321 #> [14624,]  300  311  320 #> [14625,]  300  311  320 #> [14626,]  301  312  321 #> [14627,]  301  312  321 #> [14628,]  300  311  320 #> [14629,]  301  312  321 #> [14630,]  301  312  321 #> [14631,]  300  311  320 #> [14632,]  300  311  320 #> [14633,]  301  312  321 #> [14634,]  300  311  320 #> [14635,]  300  311  320 #> [14636,]  301  312  321 #> [14637,]  301  312  321 #> [14638,]  301  312  321 #> [14639,]  300  311  320 #> [14640,]  300  311  320 #> [14641,]  301  312  321 #> [14642,]  300  311  320 #> [14643,]  301  312  321 #> [14644,]  301  312  321 #> [14645,]  301  312  321 #> [14646,]  301  312  321 #> [14647,]  300  311  320 #> [14648,]  300  311  320 #> [14649,]  301  312  321 #> [14650,]  301  312  321 #> [14651,]  301  312  321 #> [14652,]  300  311  320 #> [14653,]  301  312  321 #> [14654,]  300  311  320 #> [14655,]  301  312  321 #> [14656,]  301  312  321 #> [14657,]  300  311  320 #> [14658,]  301  312  321 #> [14659,]  301  312  321 #> [14660,]  301  312  321 #> [14661,]  301  312  321 #> [14662,]  300  311  320 #> [14663,]  301  312  321 #> [14664,]  301  312  321 #> [14665,]  300  311  320 #> [14666,]  301  312  321 #> [14667,]  300  311  320 #> [14668,]  301  312  321 #> [14669,]  301  312  321 #> [14670,]  300  311  320 #> [14671,]  301  312  321 #> [14672,]  300  311  320 #> [14673,]  300  311  320 #> [14674,]  300  311  320 #> [14675,]  301  312  321 #> [14676,]  300  311  320 #> [14677,]  301  312  321 #> [14678,]  301  312  321 #> [14679,]  300  311  320 #> [14680,]  301  312  321 #> [14681,]  301  312  321 #> [14682,]  300  311  320 #> [14683,]  301  312  321 #> [14684,]  301  312  321 #> [14685,]  301  312  321 #> [14686,]  300  311  320 #> [14687,]  301  312  321 #> [14688,]  300  311  320 #> [14689,]  300  311  320 #> [14690,]  301  312  321 #> [14691,]  300  311  320 #> [14692,]  300  311  320 #> [14693,]  301  312  321 #> [14694,]  300  311  320 #> [14695,]  301  312  321 #> [14696,]  301  312  321 #> [14697,]  301  312  321 #> [14698,]  300  311  320 #> [14699,]  300  311  320 #> [14700,]  301  312  321 #> [14701,]  303  314  323 #> [14702,]  303  314  323 #> [14703,]  302  313  322 #> [14704,]  303  314  323 #> [14705,]  303  314  323 #> [14706,]  303  314  323 #> [14707,]  303  314  322 #> [14708,]  303  314  322 #> [14709,]  303  314  323 #> [14710,]  303  314  323 #> [14711,]  303  314  323 #> [14712,]  302  313  323 #> [14713,]  303  314  322 #> [14714,]  302  313  323 #> [14715,]  303  314  323 #> [14716,]  303  314  322 #> [14717,]  303  314  323 #> [14718,]  303  314  323 #> [14719,]  303  314  323 #> [14720,]  303  314  322 #> [14721,]  303  314  323 #> [14722,]  303  314  322 #> [14723,]  303  314  323 #> [14724,]  303  314  322 #> [14725,]  303  314  322 #> [14726,]  302  313  323 #> [14727,]  303  314  323 #> [14728,]  303  314  323 #> [14729,]  303  314  323 #> [14730,]  303  314  323 #> [14731,]  303  314  323 #> [14732,]  302  313  323 #> [14733,]  303  314  323 #> [14734,]  303  314  323 #> [14735,]  303  314  323 #> [14736,]  303  314  323 #> [14737,]  303  314  323 #> [14738,]  303  314  323 #> [14739,]  303  314  322 #> [14740,]  303  314  322 #> [14741,]  303  314  323 #> [14742,]  302  313  323 #> [14743,]  303  314  323 #> [14744,]  303  314  322 #> [14745,]  303  314  323 #> [14746,]  303  314  322 #> [14747,]  303  314  323 #> [14748,]  302  313  323 #> [14749,]  303  314  322 #> [14750,]  303  314  322 #> [14751,]  302  313  323 #> [14752,]  303  314  323 #> [14753,]  303  314  322 #> [14754,]  302  313  323 #> [14755,]  303  314  322 #> [14756,]  303  314  322 #> [14757,]  303  314  323 #> [14758,]  303  314  323 #> [14759,]  303  314  322 #> [14760,]  303  314  323 #> [14761,]  303  314  323 #> [14762,]  302  313  323 #> [14763,]  303  314  323 #> [14764,]  303  314  323 #> [14765,]  303  314  322 #> [14766,]  302  313  322 #> [14767,]  303  314  323 #> [14768,]  303  314  323 #> [14769,]  302  313  323 #> [14770,]  303  314  322 #> [14771,]  303  314  323 #> [14772,]  303  314  322 #> [14773,]  303  314  323 #> [14774,]  303  314  323 #> [14775,]  303  314  323 #> [14776,]  303  314  323 #> [14777,]  303  314  323 #> [14778,]  303  314  323 #> [14779,]  303  314  323 #> [14780,]  302  313  323 #> [14781,]  302  313  323 #> [14782,]  303  314  323 #> [14783,]  303  314  323 #> [14784,]  303  314  322 #> [14785,]  303  314  323 #> [14786,]  303  314  322 #> [14787,]  303  314  323 #> [14788,]  303  314  323 #> [14789,]  302  313  323 #> [14790,]  303  314  322 #> [14791,]  303  314  323 #> [14792,]  303  314  323 #> [14793,]  303  314  323 #> [14794,]  303  314  323 #> [14795,]  303  314  323 #> [14796,]  303  314  323 #> [14797,]  303  314  323 #> [14798,]  303  314  322 #> [14799,]  303  314  323 #> [14800,]  303  314  322 #> [14801,]  304  315  324 #> [14802,]  305  316  325 #> [14803,]  304  315  324 #> [14804,]  304  315  324 #> [14805,]  305  316  325 #> [14806,]  304  315  324 #> [14807,]  304  315  324 #> [14808,]  304  315  324 #> [14809,]  305  316  325 #> [14810,]  305  316  325 #> [14811,]  304  315  324 #> [14812,]  305  316  325 #> [14813,]  305  316  325 #> [14814,]  304  315  324 #> [14815,]  304  315  324 #> [14816,]  304  315  324 #> [14817,]  305  316  325 #> [14818,]  305  316  325 #> [14819,]  304  315  324 #> [14820,]  305  316  325 #> [14821,]  305  316  325 #> [14822,]  304  315  324 #> [14823,]  305  316  325 #> [14824,]  305  316  325 #> [14825,]  304  315  324 #> [14826,]  304  315  324 #> [14827,]  305  316  325 #> [14828,]  304  315  324 #> [14829,]  305  316  325 #> [14830,]  304  315  324 #> [14831,]  305  316  325 #> [14832,]  305  316  325 #> [14833,]  305  316  325 #> [14834,]  304  315  324 #> [14835,]  304  315  324 #> [14836,]  305  316  325 #> [14837,]  304  315  324 #> [14838,]  304  315  324 #> [14839,]  304  315  324 #> [14840,]  305  316  325 #> [14841,]  304  315  324 #> [14842,]  304  315  324 #> [14843,]  304  315  324 #> [14844,]  305  316  325 #> [14845,]  304  315  324 #> [14846,]  304  315  324 #> [14847,]  304  315  324 #> [14848,]  304  315  324 #> [14849,]  304  315  324 #> [14850,]  304  315  324 #> [14851,]  304  315  324 #> [14852,]  304  315  324 #> [14853,]  305  316  325 #> [14854,]  304  315  324 #> [14855,]  304  315  324 #> [14856,]  304  315  324 #> [14857,]  304  315  324 #> [14858,]  304  315  324 #> [14859,]  304  315  324 #> [14860,]  305  316  325 #> [14861,]  305  316  325 #> [14862,]  304  315  324 #> [14863,]  305  316  325 #> [14864,]  304  315  324 #> [14865,]  304  315  324 #> [14866,]  304  315  324 #> [14867,]  304  315  324 #> [14868,]  304  315  324 #> [14869,]  304  315  324 #> [14870,]  305  316  325 #> [14871,]  304  315  324 #> [14872,]  304  315  324 #> [14873,]  304  315  324 #> [14874,]  304  315  324 #> [14875,]  305  316  325 #> [14876,]  304  315  324 #> [14877,]  304  315  324 #> [14878,]  304  315  324 #> [14879,]  304  315  324 #> [14880,]  305  316  325 #> [14881,]  305  316  325 #> [14882,]  304  315  324 #> [14883,]  305  316  325 #> [14884,]  305  316  325 #> [14885,]  304  315  324 #> [14886,]  305  316  325 #> [14887,]  304  315  324 #> [14888,]  305  316  325 #> [14889,]  304  315  324 #> [14890,]  304  315  324 #> [14891,]  304  315  324 #> [14892,]  304  315  324 #> [14893,]  304  315  324 #> [14894,]  304  315  324 #> [14895,]  304  315  324 #> [14896,]  304  315  324 #> [14897,]  304  315  324 #> [14898,]  304  315  324 #> [14899,]  304  315  324 #> [14900,]  304  315  324 #> [14901,]  307  318  327 #> [14902,]  307  318  327 #> [14903,]  307  318  327 #> [14904,]  306  317  326 #> [14905,]  307  318  327 #> [14906,]  307  318  327 #> [14907,]  307  318  327 #> [14908,]  306  317  326 #> [14909,]  306  317  326 #> [14910,]  307  318  327 #> [14911,]  306  317  326 #> [14912,]  307  318  327 #> [14913,]  306  317  326 #> [14914,]  307  318  327 #> [14915,]  307  318  327 #> [14916,]  307  318  327 #> [14917,]  306  317  326 #> [14918,]  307  318  327 #> [14919,]  307  318  327 #> [14920,]  307  318  327 #> [14921,]  307  318  327 #> [14922,]  306  317  326 #> [14923,]  307  318  327 #> [14924,]  307  318  327 #> [14925,]  307  318  327 #> [14926,]  307  318  327 #> [14927,]  306  317  326 #> [14928,]  307  318  327 #> [14929,]  307  318  327 #> [14930,]  307  318  327 #> [14931,]  307  318  327 #> [14932,]  307  318  327 #> [14933,]  307  318  327 #> [14934,]  307  318  327 #> [14935,]  306  317  326 #> [14936,]  307  318  327 #> [14937,]  307  318  327 #> [14938,]  307  318  327 #> [14939,]  307  318  327 #> [14940,]  307  318  327 #> [14941,]  307  318  327 #> [14942,]  307  318  327 #> [14943,]  307  318  327 #> [14944,]  306  317  326 #> [14945,]  307  318  327 #> [14946,]  307  318  327 #> [14947,]  307  318  327 #> [14948,]  307  318  327 #> [14949,]  306  317  326 #> [14950,]  307  318  327 #> [14951,]  307  318  327 #> [14952,]  306  317  326 #> [14953,]  307  318  327 #> [14954,]  307  318  327 #> [14955,]  306  317  326 #> [14956,]  307  318  327 #> [14957,]  307  318  327 #> [14958,]  306  317  326 #> [14959,]  307  318  327 #> [14960,]  307  318  327 #> [14961,]  307  318  327 #> [14962,]  307  318  327 #> [14963,]  307  318  327 #> [14964,]  307  318  327 #> [14965,]  307  318  327 #> [14966,]  306  317  326 #> [14967,]  307  318  327 #> [14968,]  307  318  327 #> [14969,]  307  318  327 #> [14970,]  307  318  327 #> [14971,]  307  318  327 #> [14972,]  307  318  327 #> [14973,]  307  318  327 #> [14974,]  307  318  327 #> [14975,]  307  318  327 #> [14976,]  307  318  327 #> [14977,]  307  318  327 #> [14978,]  307  318  327 #> [14979,]  306  317  326 #> [14980,]  306  317  326 #> [14981,]  306  317  326 #> [14982,]  306  317  326 #> [14983,]  306  317  326 #> [14984,]  307  318  327 #> [14985,]  307  318  327 #> [14986,]  307  318  327 #> [14987,]  306  317  326 #> [14988,]  306  317  326 #> [14989,]  306  317  326 #> [14990,]  306  317  326 #> [14991,]  307  318  327 #> [14992,]  306  317  326 #> [14993,]  307  318  327 #> [14994,]  307  318  327 #> [14995,]  306  317  326 #> [14996,]  307  318  327 #> [14997,]  307  318  327 #> [14998,]  307  318  327 #> [14999,]  306  317  326 #> [15000,]  307  318  327 #> [15001,]  309  320  329 #> [15002,]  309  320  329 #> [15003,]  308  320  329 #> [15004,]  309  320  329 #> [15005,]  309  320  329 #> [15006,]  309  320  329 #> [15007,]  308  320  329 #> [15008,]  309  320  329 #> [15009,]  309  320  329 #> [15010,]  309  319  328 #> [15011,]  309  319  328 #> [15012,]  309  320  329 #> [15013,]  308  320  329 #> [15014,]  309  319  328 #> [15015,]  309  320  329 #> [15016,]  308  320  329 #> [15017,]  309  320  329 #> [15018,]  309  320  329 #> [15019,]  308  320  329 #> [15020,]  309  320  329 #> [15021,]  308  320  329 #> [15022,]  309  320  329 #> [15023,]  308  320  329 #> [15024,]  309  320  329 #> [15025,]  309  320  329 #> [15026,]  309  320  329 #> [15027,]  309  320  329 #> [15028,]  309  320  329 #> [15029,]  309  320  329 #> [15030,]  308  320  329 #> [15031,]  308  320  329 #> [15032,]  309  320  329 #> [15033,]  309  320  329 #> [15034,]  308  320  329 #> [15035,]  308  320  329 #> [15036,]  308  320  329 #> [15037,]  308  320  329 #> [15038,]  309  320  329 #> [15039,]  308  320  329 #> [15040,]  308  319  328 #> [15041,]  309  320  329 #> [15042,]  309  320  329 #> [15043,]  309  320  329 #> [15044,]  309  320  329 #> [15045,]  309  320  329 #> [15046,]  309  320  329 #> [15047,]  308  320  329 #> [15048,]  309  319  328 #> [15049,]  308  320  329 #> [15050,]  309  320  329 #> [15051,]  309  320  329 #> [15052,]  309  320  329 #> [15053,]  309  320  329 #> [15054,]  308  320  329 #> [15055,]  309  320  329 #> [15056,]  309  320  329 #> [15057,]  309  320  329 #> [15058,]  309  320  329 #> [15059,]  309  320  329 #> [15060,]  309  320  329 #> [15061,]  309  320  329 #> [15062,]  308  320  329 #> [15063,]  309  320  329 #> [15064,]  309  320  329 #> [15065,]  309  320  329 #> [15066,]  309  320  329 #> [15067,]  309  320  329 #> [15068,]  309  320  329 #> [15069,]  309  320  329 #> [15070,]  308  319  328 #> [15071,]  309  320  329 #> [15072,]  309  320  329 #> [15073,]  309  320  329 #> [15074,]  309  320  329 #> [15075,]  309  320  329 #> [15076,]  309  320  329 #> [15077,]  308  320  329 #> [15078,]  309  320  329 #> [15079,]  308  320  329 #> [15080,]  308  320  329 #> [15081,]  309  320  329 #> [15082,]  309  320  329 #> [15083,]  308  320  329 #> [15084,]  309  320  329 #> [15085,]  309  320  329 #> [15086,]  309  320  329 #> [15087,]  309  320  329 #> [15088,]  309  320  329 #> [15089,]  309  320  329 #> [15090,]  309  320  329 #> [15091,]  309  320  329 #> [15092,]  309  320  329 #> [15093,]  308  320  329 #> [15094,]  309  320  329 #> [15095,]  308  320  329 #> [15096,]  309  320  329 #> [15097,]  309  320  329 #> [15098,]  308  320  329 #> [15099,]  309  320  329 #> [15100,]  308  320  329 #> [15101,]  311  321  331 #> [15102,]  311  321  331 #> [15103,]  310  321  330 #> [15104,]  310  321  331 #> [15105,]  310  321  331 #> [15106,]  311  321  331 #> [15107,]  310  321  331 #> [15108,]  310  321  331 #> [15109,]  310  321  331 #> [15110,]  310  321  330 #> [15111,]  310  321  330 #> [15112,]  310  321  331 #> [15113,]  311  321  331 #> [15114,]  311  321  330 #> [15115,]  311  321  331 #> [15116,]  311  321  331 #> [15117,]  311  321  331 #> [15118,]  310  321  331 #> [15119,]  310  321  331 #> [15120,]  310  321  331 #> [15121,]  311  321  331 #> [15122,]  311  321  331 #> [15123,]  310  321  331 #> [15124,]  310  321  331 #> [15125,]  310  321  331 #> [15126,]  311  321  331 #> [15127,]  311  321  331 #> [15128,]  310  321  331 #> [15129,]  311  321  331 #> [15130,]  310  321  331 #> [15131,]  310  321  331 #> [15132,]  310  321  330 #> [15133,]  311  321  331 #> [15134,]  310  321  331 #> [15135,]  311  321  331 #> [15136,]  310  321  331 #> [15137,]  311  321  331 #> [15138,]  310  321  331 #> [15139,]  310  321  331 #> [15140,]  310  321  330 #> [15141,]  311  321  331 #> [15142,]  310  321  331 #> [15143,]  310  321  331 #> [15144,]  311  321  331 #> [15145,]  310  321  331 #> [15146,]  310  321  331 #> [15147,]  311  321  331 #> [15148,]  310  321  330 #> [15149,]  310  321  331 #> [15150,]  311  321  331 #> [15151,]  310  321  331 #> [15152,]  311  321  331 #> [15153,]  310  321  331 #> [15154,]  310  321  331 #> [15155,]  310  321  331 #> [15156,]  310  321  331 #> [15157,]  310  321  331 #> [15158,]  311  321  331 #> [15159,]  311  321  331 #> [15160,]  310  321  331 #> [15161,]  311  321  331 #> [15162,]  310  321  331 #> [15163,]  310  321  331 #> [15164,]  310  321  331 #> [15165,]  310  321  331 #> [15166,]  310  321  331 #> [15167,]  310  321  331 #> [15168,]  311  321  331 #> [15169,]  310  321  331 #> [15170,]  311  321  330 #> [15171,]  311  321  331 #> [15172,]  310  321  331 #> [15173,]  311  321  331 #> [15174,]  310  321  331 #> [15175,]  310  321  331 #> [15176,]  311  321  331 #> [15177,]  311  321  331 #> [15178,]  310  321  331 #> [15179,]  311  321  331 #> [15180,]  310  321  331 #> [15181,]  311  321  331 #> [15182,]  310  321  331 #> [15183,]  311  321  331 #> [15184,]  311  321  331 #> [15185,]  310  321  331 #> [15186,]  311  321  331 #> [15187,]  310  321  331 #> [15188,]  310  321  331 #> [15189,]  310  321  331 #> [15190,]  311  321  331 #> [15191,]  310  321  331 #> [15192,]  310  321  331 #> [15193,]  311  321  331 #> [15194,]  311  321  331 #> [15195,]  310  321  331 #> [15196,]  311  321  331 #> [15197,]  310  321  331 #> [15198,]  310  321  330 #> [15199,]  311  321  331 #> [15200,]  311  321  331 #> [15201,]  313  323  333 #> [15202,]  313  323  333 #> [15203,]  312  322  332 #> [15204,]  313  323  333 #> [15205,]  313  323  333 #> [15206,]  313  323  333 #> [15207,]  313  323  333 #> [15208,]  313  323  333 #> [15209,]  313  323  333 #> [15210,]  313  323  333 #> [15211,]  313  323  333 #> [15212,]  312  322  332 #> [15213,]  313  323  333 #> [15214,]  312  322  332 #> [15215,]  313  323  333 #> [15216,]  313  323  333 #> [15217,]  313  323  333 #> [15218,]  313  323  333 #> [15219,]  313  323  333 #> [15220,]  313  323  333 #> [15221,]  313  323  333 #> [15222,]  313  323  333 #> [15223,]  313  323  333 #> [15224,]  313  323  333 #> [15225,]  313  323  333 #> [15226,]  312  322  332 #> [15227,]  313  323  333 #> [15228,]  313  323  333 #> [15229,]  313  323  333 #> [15230,]  313  323  333 #> [15231,]  313  323  333 #> [15232,]  312  322  332 #> [15233,]  313  323  333 #> [15234,]  313  323  333 #> [15235,]  313  323  333 #> [15236,]  313  323  333 #> [15237,]  313  323  333 #> [15238,]  313  323  333 #> [15239,]  313  323  333 #> [15240,]  313  323  333 #> [15241,]  313  323  333 #> [15242,]  313  323  333 #> [15243,]  313  323  333 #> [15244,]  313  323  333 #> [15245,]  313  323  333 #> [15246,]  313  323  333 #> [15247,]  313  323  333 #> [15248,]  313  323  333 #> [15249,]  313  323  333 #> [15250,]  313  323  333 #> [15251,]  313  323  333 #> [15252,]  313  323  333 #> [15253,]  313  323  333 #> [15254,]  313  323  333 #> [15255,]  313  323  333 #> [15256,]  313  323  333 #> [15257,]  313  323  333 #> [15258,]  313  323  333 #> [15259,]  313  323  333 #> [15260,]  313  323  333 #> [15261,]  313  323  333 #> [15262,]  313  323  333 #> [15263,]  313  323  333 #> [15264,]  313  323  333 #> [15265,]  313  323  333 #> [15266,]  313  323  333 #> [15267,]  313  323  333 #> [15268,]  313  323  333 #> [15269,]  312  322  332 #> [15270,]  313  323  333 #> [15271,]  313  323  333 #> [15272,]  313  323  333 #> [15273,]  313  323  333 #> [15274,]  313  323  333 #> [15275,]  313  323  333 #> [15276,]  313  323  333 #> [15277,]  313  323  333 #> [15278,]  313  323  333 #> [15279,]  313  323  333 #> [15280,]  312  322  332 #> [15281,]  313  323  333 #> [15282,]  313  323  333 #> [15283,]  313  323  333 #> [15284,]  313  323  333 #> [15285,]  313  323  333 #> [15286,]  313  323  333 #> [15287,]  313  323  333 #> [15288,]  313  323  333 #> [15289,]  313  323  333 #> [15290,]  313  323  333 #> [15291,]  313  323  333 #> [15292,]  313  323  333 #> [15293,]  313  323  333 #> [15294,]  313  323  333 #> [15295,]  313  323  333 #> [15296,]  313  323  333 #> [15297,]  313  323  333 #> [15298,]  313  323  333 #> [15299,]  313  323  333 #> [15300,]  313  323  333 #> [15301,]  315  325  334 #> [15302,]  315  325  334 #> [15303,]  314  324  334 #> [15304,]  314  324  334 #> [15305,]  314  324  334 #> [15306,]  315  325  334 #> [15307,]  314  324  334 #> [15308,]  314  324  334 #> [15309,]  314  324  334 #> [15310,]  314  324  334 #> [15311,]  314  324  334 #> [15312,]  314  324  334 #> [15313,]  315  325  334 #> [15314,]  315  325  334 #> [15315,]  315  325  334 #> [15316,]  315  325  334 #> [15317,]  315  325  334 #> [15318,]  314  324  334 #> [15319,]  314  324  334 #> [15320,]  314  324  334 #> [15321,]  315  325  334 #> [15322,]  314  324  334 #> [15323,]  314  324  334 #> [15324,]  314  324  334 #> [15325,]  314  324  334 #> [15326,]  315  325  334 #> [15327,]  314  324  334 #> [15328,]  314  324  334 #> [15329,]  315  325  334 #> [15330,]  314  324  334 #> [15331,]  314  324  334 #> [15332,]  314  324  334 #> [15333,]  315  325  334 #> [15334,]  314  324  334 #> [15335,]  315  325  334 #> [15336,]  314  324  334 #> [15337,]  314  324  334 #> [15338,]  314  324  334 #> [15339,]  314  324  334 #> [15340,]  314  324  334 #> [15341,]  315  325  334 #> [15342,]  314  324  334 #> [15343,]  314  324  334 #> [15344,]  315  325  334 #> [15345,]  314  324  334 #> [15346,]  314  324  334 #> [15347,]  314  324  334 #> [15348,]  314  324  334 #> [15349,]  314  324  334 #> [15350,]  315  325  334 #> [15351,]  314  324  334 #> [15352,]  314  324  334 #> [15353,]  314  324  334 #> [15354,]  314  324  334 #> [15355,]  314  324  334 #> [15356,]  314  324  334 #> [15357,]  314  324  334 #> [15358,]  314  324  334 #> [15359,]  315  325  334 #> [15360,]  314  324  334 #> [15361,]  315  325  334 #> [15362,]  314  324  334 #> [15363,]  314  324  334 #> [15364,]  314  324  334 #> [15365,]  314  324  334 #> [15366,]  314  324  334 #> [15367,]  314  324  334 #> [15368,]  315  325  334 #> [15369,]  314  324  334 #> [15370,]  315  325  334 #> [15371,]  315  325  334 #> [15372,]  314  324  334 #> [15373,]  315  325  334 #> [15374,]  314  324  334 #> [15375,]  314  324  334 #> [15376,]  315  325  334 #> [15377,]  315  325  334 #> [15378,]  314  324  334 #> [15379,]  315  325  334 #> [15380,]  314  324  334 #> [15381,]  315  325  334 #> [15382,]  314  324  334 #> [15383,]  315  325  334 #> [15384,]  314  324  334 #> [15385,]  314  324  334 #> [15386,]  315  325  334 #> [15387,]  314  324  334 #> [15388,]  314  324  334 #> [15389,]  314  324  334 #> [15390,]  314  324  334 #> [15391,]  314  324  334 #> [15392,]  314  324  334 #> [15393,]  315  325  334 #> [15394,]  314  324  334 #> [15395,]  314  324  334 #> [15396,]  315  325  334 #> [15397,]  314  324  334 #> [15398,]  314  324  334 #> [15399,]  315  325  334 #> [15400,]  314  324  334 #> [15401,]  316  326  335 #> [15402,]  316  326  335 #> [15403,]  316  326  335 #> [15404,]  316  326  335 #> [15405,]  316  326  335 #> [15406,]  316  326  335 #> [15407,]  316  326  335 #> [15408,]  317  327  336 #> [15409,]  316  326  335 #> [15410,]  316  326  335 #> [15411,]  316  326  335 #> [15412,]  316  326  335 #> [15413,]  317  327  336 #> [15414,]  316  326  335 #> [15415,]  317  327  336 #> [15416,]  317  327  336 #> [15417,]  316  326  335 #> [15418,]  316  326  335 #> [15419,]  317  327  336 #> [15420,]  317  327  336 #> [15421,]  316  326  335 #> [15422,]  317  327  336 #> [15423,]  316  326  335 #> [15424,]  316  326  335 #> [15425,]  316  326  335 #> [15426,]  317  327  336 #> [15427,]  317  327  336 #> [15428,]  316  326  335 #> [15429,]  317  327  336 #> [15430,]  317  327  336 #> [15431,]  316  326  335 #> [15432,]  316  326  335 #> [15433,]  316  326  335 #> [15434,]  316  326  335 #> [15435,]  316  326  335 #> [15436,]  317  327  336 #> [15437,]  317  327  336 #> [15438,]  317  327  336 #> [15439,]  316  326  335 #> [15440,]  316  326  335 #> [15441,]  317  327  336 #> [15442,]  316  326  335 #> [15443,]  317  327  336 #> [15444,]  317  327  336 #> [15445,]  316  326  335 #> [15446,]  317  327  336 #> [15447,]  316  326  335 #> [15448,]  316  326  335 #> [15449,]  316  326  335 #> [15450,]  317  327  336 #> [15451,]  317  327  336 #> [15452,]  316  326  335 #> [15453,]  317  327  336 #> [15454,]  316  326  335 #> [15455,]  317  327  336 #> [15456,]  317  327  336 #> [15457,]  316  326  335 #> [15458,]  317  327  336 #> [15459,]  317  327  336 #> [15460,]  317  327  336 #> [15461,]  316  326  335 #> [15462,]  316  326  335 #> [15463,]  316  326  335 #> [15464,]  317  327  336 #> [15465,]  316  326  335 #> [15466,]  317  327  336 #> [15467,]  316  326  335 #> [15468,]  316  326  335 #> [15469,]  317  327  336 #> [15470,]  316  326  335 #> [15471,]  317  327  336 #> [15472,]  316  326  335 #> [15473,]  316  326  335 #> [15474,]  316  326  335 #> [15475,]  316  326  335 #> [15476,]  316  326  335 #> [15477,]  317  327  336 #> [15478,]  316  326  335 #> [15479,]  316  326  335 #> [15480,]  317  327  336 #> [15481,]  317  327  336 #> [15482,]  316  326  335 #> [15483,]  317  327  336 #> [15484,]  317  327  336 #> [15485,]  317  327  336 #> [15486,]  316  326  335 #> [15487,]  317  327  336 #> [15488,]  316  326  335 #> [15489,]  316  326  335 #> [15490,]  317  327  336 #> [15491,]  316  326  335 #> [15492,]  316  326  335 #> [15493,]  316  326  335 #> [15494,]  316  326  335 #> [15495,]  317  327  336 #> [15496,]  317  327  336 #> [15497,]  317  327  336 #> [15498,]  316  326  335 #> [15499,]  316  326  335 #> [15500,]  317  327  336 #> [15501,]  319  329  337 #> [15502,]  318  328  338 #> [15503,]  319  329  338 #> [15504,]  319  329  337 #> [15505,]  319  329  337 #> [15506,]  318  328  338 #> [15507,]  319  329  338 #> [15508,]  319  329  337 #> [15509,]  319  329  337 #> [15510,]  319  329  337 #> [15511,]  318  328  337 #> [15512,]  318  328  339 #> [15513,]  319  329  337 #> [15514,]  319  329  337 #> [15515,]  318  328  337 #> [15516,]  319  329  337 #> [15517,]  318  328  337 #> [15518,]  319  329  339 #> [15519,]  318  328  339 #> [15520,]  319  329  338 #> [15521,]  319  329  337 #> [15522,]  319  329  337 #> [15523,]  318  328  338 #> [15524,]  319  329  337 #> [15525,]  319  329  338 #> [15526,]  318  328  337 #> [15527,]  319  329  337 #> [15528,]  319  329  338 #> [15529,]  318  328  338 #> [15530,]  318  328  337 #> [15531,]  318  328  339 #> [15532,]  319  329  338 #> [15533,]  319  329  339 #> [15534,]  318  328  338 #> [15535,]  318  328  337 #> [15536,]  319  329  337 #> [15537,]  318  328  337 #> [15538,]  319  329  337 #> [15539,]  319  329  337 #> [15540,]  319  329  338 #> [15541,]  319  329  337 #> [15542,]  318  328  339 #> [15543,]  318  328  337 #> [15544,]  318  328  337 #> [15545,]  319  329  337 #> [15546,]  319  329  337 #> [15547,]  318  328  337 #> [15548,]  318  328  339 #> [15549,]  319  329  337 #> [15550,]  319  329  337 #> [15551,]  319  329  337 #> [15552,]  319  329  337 #> [15553,]  319  329  337 #> [15554,]  319  329  337 #> [15555,]  319  329  337 #> [15556,]  318  328  338 #> [15557,]  319  329  338 #> [15558,]  319  329  337 #> [15559,]  319  329  337 #> [15560,]  318  328  339 #> [15561,]  318  328  339 #> [15562,]  319  329  337 #> [15563,]  318  328  337 #> [15564,]  318  328  338 #> [15565,]  318  328  338 #> [15566,]  318  328  337 #> [15567,]  319  329  337 #> [15568,]  318  328  337 #> [15569,]  319  329  337 #> [15570,]  318  328  338 #> [15571,]  319  329  338 #> [15572,]  319  329  337 #> [15573,]  319  329  338 #> [15574,]  319  329  337 #> [15575,]  318  328  339 #> [15576,]  319  329  337 #> [15577,]  319  329  338 #> [15578,]  318  328  338 #> [15579,]  318  328  337 #> [15580,]  319  329  337 #> [15581,]  318  328  337 #> [15582,]  319  329  337 #> [15583,]  319  329  337 #> [15584,]  319  329  338 #> [15585,]  319  329  337 #> [15586,]  319  329  338 #> [15587,]  319  329  337 #> [15588,]  319  329  337 #> [15589,]  319  329  337 #> [15590,]  319  329  337 #> [15591,]  319  329  337 #> [15592,]  318  328  337 #> [15593,]  319  329  339 #> [15594,]  318  328  337 #> [15595,]  318  328  337 #> [15596,]  318  328  337 #> [15597,]  319  329  339 #> [15598,]  319  329  338 #> [15599,]  319  329  337 #> [15600,]  318  328  338 #> [15601,]  320  330  341 #> [15602,]  321  331  340 #> [15603,]  321  331  340 #> [15604,]  320  330  342 #> [15605,]  320  330  341 #> [15606,]  321  331  340 #> [15607,]  321  331  340 #> [15608,]  320  330  341 #> [15609,]  320  330  341 #> [15610,]  320  330  342 #> [15611,]  320  330  341 #> [15612,]  321  331  340 #> [15613,]  320  330  341 #> [15614,]  320  330  341 #> [15615,]  320  330  342 #> [15616,]  320  330  342 #> [15617,]  320  330  341 #> [15618,]  321  331  340 #> [15619,]  321  331  340 #> [15620,]  321  331  340 #> [15621,]  320  330  342 #> [15622,]  320  330  341 #> [15623,]  321  331  340 #> [15624,]  320  330  341 #> [15625,]  321  331  340 #> [15626,]  320  330  341 #> [15627,]  320  330  342 #> [15628,]  321  331  340 #> [15629,]  320  330  341 #> [15630,]  320  330  341 #> [15631,]  321  331  340 #> [15632,]  321  331  340 #> [15633,]  321  331  340 #> [15634,]  321  331  340 #> [15635,]  320  330  341 #> [15636,]  320  330  341 #> [15637,]  320  330  341 #> [15638,]  320  330  341 #> [15639,]  320  330  342 #> [15640,]  321  331  340 #> [15641,]  320  330  341 #> [15642,]  321  331  340 #> [15643,]  320  330  342 #> [15644,]  320  330  341 #> [15645,]  320  330  342 #> [15646,]  320  330  341 #> [15647,]  320  330  342 #> [15648,]  321  331  340 #> [15649,]  320  330  341 #> [15650,]  320  330  341 #> [15651,]  320  330  341 #> [15652,]  320  330  341 #> [15653,]  320  330  342 #> [15654,]  320  330  341 #> [15655,]  320  330  341 #> [15656,]  321  331  340 #> [15657,]  320  330  341 #> [15658,]  320  330  341 #> [15659,]  320  330  341 #> [15660,]  321  331  340 #> [15661,]  320  330  342 #> [15662,]  320  330  341 #> [15663,]  320  330  341 #> [15664,]  321  331  340 #> [15665,]  321  331  340 #> [15666,]  320  330  341 #> [15667,]  320  330  341 #> [15668,]  320  330  341 #> [15669,]  320  330  341 #> [15670,]  321  331  340 #> [15671,]  321  331  340 #> [15672,]  320  330  342 #> [15673,]  321  331  340 #> [15674,]  320  330  342 #> [15675,]  320  330  342 #> [15676,]  320  330  342 #> [15677,]  320  330  342 #> [15678,]  321  331  340 #> [15679,]  320  330  341 #> [15680,]  320  330  341 #> [15681,]  320  330  341 #> [15682,]  320  330  341 #> [15683,]  320  330  341 #> [15684,]  321  331  340 #> [15685,]  320  330  341 #> [15686,]  320  330  341 #> [15687,]  320  330  341 #> [15688,]  320  330  342 #> [15689,]  320  330  341 #> [15690,]  320  330  341 #> [15691,]  320  330  341 #> [15692,]  320  330  341 #> [15693,]  321  331  340 #> [15694,]  320  330  342 #> [15695,]  320  330  342 #> [15696,]  320  330  341 #> [15697,]  321  331  340 #> [15698,]  321  331  340 #> [15699,]  320  330  341 #> [15700,]  321  331  340 #> [15701,]  323  333  344 #> [15702,]  323  333  344 #> [15703,]  323  333  344 #> [15704,]  323  333  344 #> [15705,]  323  333  344 #> [15706,]  322  332  343 #> [15707,]  323  333  344 #> [15708,]  323  333  344 #> [15709,]  323  333  344 #> [15710,]  323  333  344 #> [15711,]  323  333  344 #> [15712,]  323  333  344 #> [15713,]  323  333  344 #> [15714,]  323  333  344 #> [15715,]  323  333  344 #> [15716,]  323  333  344 #> [15717,]  323  333  344 #> [15718,]  323  333  344 #> [15719,]  322  332  343 #> [15720,]  323  333  344 #> [15721,]  323  333  344 #> [15722,]  323  333  344 #> [15723,]  323  333  344 #> [15724,]  323  333  344 #> [15725,]  323  333  344 #> [15726,]  323  333  344 #> [15727,]  323  333  344 #> [15728,]  323  333  344 #> [15729,]  323  333  344 #> [15730,]  323  333  344 #> [15731,]  323  333  344 #> [15732,]  323  333  344 #> [15733,]  323  333  344 #> [15734,]  322  332  343 #> [15735,]  323  333  344 #> [15736,]  323  333  344 #> [15737,]  323  333  344 #> [15738,]  322  332  343 #> [15739,]  323  333  344 #> [15740,]  323  333  344 #> [15741,]  323  333  344 #> [15742,]  323  333  344 #> [15743,]  323  333  344 #> [15744,]  323  333  344 #> [15745,]  323  333  344 #> [15746,]  323  333  344 #> [15747,]  323  333  344 #> [15748,]  323  333  344 #> [15749,]  322  332  343 #> [15750,]  323  333  344 #> [15751,]  323  333  344 #> [15752,]  323  333  344 #> [15753,]  323  333  344 #> [15754,]  323  333  344 #> [15755,]  323  333  344 #> [15756,]  323  333  344 #> [15757,]  323  333  344 #> [15758,]  323  333  344 #> [15759,]  323  333  344 #> [15760,]  323  333  344 #> [15761,]  323  333  344 #> [15762,]  323  333  344 #> [15763,]  323  333  344 #> [15764,]  323  333  344 #> [15765,]  323  333  344 #> [15766,]  323  333  344 #> [15767,]  323  333  344 #> [15768,]  323  333  344 #> [15769,]  323  333  344 #> [15770,]  323  333  344 #> [15771,]  323  333  344 #> [15772,]  322  332  343 #> [15773,]  323  333  344 #> [15774,]  323  333  344 #> [15775,]  323  333  344 #> [15776,]  323  333  344 #> [15777,]  323  333  344 #> [15778,]  323  333  344 #> [15779,]  323  333  344 #> [15780,]  323  333  344 #> [15781,]  323  333  344 #> [15782,]  323  333  344 #> [15783,]  323  333  344 #> [15784,]  323  333  344 #> [15785,]  323  333  344 #> [15786,]  323  333  344 #> [15787,]  323  333  344 #> [15788,]  323  333  344 #> [15789,]  323  333  344 #> [15790,]  323  333  344 #> [15791,]  323  333  344 #> [15792,]  323  333  344 #> [15793,]  323  333  344 #> [15794,]  323  333  344 #> [15795,]  323  333  344 #> [15796,]  323  333  344 #> [15797,]  323  333  344 #> [15798,]  323  333  344 #> [15799,]  323  333  344 #> [15800,]  323  333  344 #> [15801,]  325  335  346 #> [15802,]  325  335  346 #> [15803,]  324  334  345 #> [15804,]  325  335  346 #> [15805,]  325  335  346 #> [15806,]  325  335  346 #> [15807,]  325  335  346 #> [15808,]  325  335  346 #> [15809,]  325  335  346 #> [15810,]  324  334  345 #> [15811,]  324  334  345 #> [15812,]  325  335  346 #> [15813,]  325  335  346 #> [15814,]  324  334  345 #> [15815,]  325  335  346 #> [15816,]  325  335  346 #> [15817,]  325  335  346 #> [15818,]  325  335  346 #> [15819,]  325  335  346 #> [15820,]  325  335  346 #> [15821,]  325  335  346 #> [15822,]  325  335  346 #> [15823,]  325  335  346 #> [15824,]  325  335  346 #> [15825,]  325  335  346 #> [15826,]  325  335  346 #> [15827,]  325  335  346 #> [15828,]  325  335  346 #> [15829,]  325  335  346 #> [15830,]  325  335  346 #> [15831,]  325  335  346 #> [15832,]  324  334  345 #> [15833,]  325  335  346 #> [15834,]  325  335  346 #> [15835,]  325  335  346 #> [15836,]  325  335  346 #> [15837,]  325  335  346 #> [15838,]  325  335  346 #> [15839,]  325  335  346 #> [15840,]  324  334  345 #> [15841,]  325  335  346 #> [15842,]  325  335  346 #> [15843,]  325  335  346 #> [15844,]  325  335  346 #> [15845,]  325  335  346 #> [15846,]  325  335  346 #> [15847,]  325  335  346 #> [15848,]  324  334  345 #> [15849,]  325  335  346 #> [15850,]  325  335  346 #> [15851,]  325  335  346 #> [15852,]  325  335  346 #> [15853,]  325  335  346 #> [15854,]  325  335  346 #> [15855,]  325  335  346 #> [15856,]  325  335  346 #> [15857,]  325  335  346 #> [15858,]  325  335  346 #> [15859,]  325  335  346 #> [15860,]  325  335  346 #> [15861,]  325  335  346 #> [15862,]  325  335  346 #> [15863,]  325  335  346 #> [15864,]  325  335  346 #> [15865,]  325  335  346 #> [15866,]  325  335  346 #> [15867,]  325  335  346 #> [15868,]  325  335  346 #> [15869,]  325  335  346 #> [15870,]  324  334  345 #> [15871,]  325  335  346 #> [15872,]  325  335  346 #> [15873,]  325  335  346 #> [15874,]  325  335  346 #> [15875,]  325  335  346 #> [15876,]  325  335  346 #> [15877,]  325  335  346 #> [15878,]  325  335  346 #> [15879,]  325  335  346 #> [15880,]  325  335  346 #> [15881,]  325  335  346 #> [15882,]  325  335  346 #> [15883,]  325  335  346 #> [15884,]  325  335  346 #> [15885,]  325  335  346 #> [15886,]  325  335  346 #> [15887,]  325  335  346 #> [15888,]  325  335  346 #> [15889,]  325  335  346 #> [15890,]  325  335  346 #> [15891,]  325  335  346 #> [15892,]  325  335  346 #> [15893,]  325  335  346 #> [15894,]  325  335  346 #> [15895,]  325  335  346 #> [15896,]  325  335  346 #> [15897,]  325  335  346 #> [15898,]  325  335  346 #> [15899,]  325  335  346 #> [15900,]  325  335  346 #> [15901,]  326  336  347 #> [15902,]  326  336  347 #> [15903,]  326  336  347 #> [15904,]  326  336  347 #> [15905,]  326  336  347 #> [15906,]  326  336  347 #> [15907,]  326  336  347 #> [15908,]  326  336  347 #> [15909,]  326  336  347 #> [15910,]  326  336  347 #> [15911,]  326  336  347 #> [15912,]  326  336  347 #> [15913,]  326  336  347 #> [15914,]  326  336  347 #> [15915,]  326  336  347 #> [15916,]  326  336  347 #> [15917,]  326  336  347 #> [15918,]  326  336  347 #> [15919,]  326  336  347 #> [15920,]  327  337  348 #> [15921,]  326  336  347 #> [15922,]  327  337  348 #> [15923,]  326  336  347 #> [15924,]  326  336  347 #> [15925,]  326  336  347 #> [15926,]  326  336  347 #> [15927,]  326  336  347 #> [15928,]  326  336  347 #> [15929,]  327  337  348 #> [15930,]  326  336  347 #> [15931,]  326  336  347 #> [15932,]  326  336  347 #> [15933,]  326  336  347 #> [15934,]  326  336  347 #> [15935,]  326  336  347 #> [15936,]  326  336  347 #> [15937,]  326  336  347 #> [15938,]  326  336  347 #> [15939,]  326  336  347 #> [15940,]  326  336  347 #> [15941,]  326  336  347 #> [15942,]  326  336  347 #> [15943,]  326  336  347 #> [15944,]  326  336  347 #> [15945,]  326  336  347 #> [15946,]  326  336  347 #> [15947,]  326  336  347 #> [15948,]  326  336  347 #> [15949,]  326  336  347 #> [15950,]  326  336  347 #> [15951,]  326  336  347 #> [15952,]  326  336  347 #> [15953,]  326  336  347 #> [15954,]  326  336  347 #> [15955,]  326  336  347 #> [15956,]  326  336  347 #> [15957,]  326  336  347 #> [15958,]  327  337  348 #> [15959,]  326  336  347 #> [15960,]  326  336  347 #> [15961,]  326  336  347 #> [15962,]  326  336  347 #> [15963,]  326  336  347 #> [15964,]  327  337  348 #> [15965,]  326  336  347 #> [15966,]  326  336  347 #> [15967,]  326  336  347 #> [15968,]  326  336  347 #> [15969,]  326  336  347 #> [15970,]  326  336  347 #> [15971,]  326  336  347 #> [15972,]  326  336  347 #> [15973,]  326  336  347 #> [15974,]  326  336  347 #> [15975,]  326  336  347 #> [15976,]  326  336  347 #> [15977,]  327  337  348 #> [15978,]  326  336  347 #> [15979,]  326  336  347 #> [15980,]  326  336  347 #> [15981,]  326  336  347 #> [15982,]  326  336  347 #> [15983,]  326  336  347 #> [15984,]  326  336  347 #> [15985,]  326  336  347 #> [15986,]  326  336  347 #> [15987,]  327  337  348 #> [15988,]  326  336  347 #> [15989,]  326  336  347 #> [15990,]  326  336  347 #> [15991,]  326  336  347 #> [15992,]  326  336  347 #> [15993,]  326  336  347 #> [15994,]  326  336  347 #> [15995,]  326  336  347 #> [15996,]  326  336  347 #> [15997,]  326  336  347 #> [15998,]  326  336  347 #> [15999,]  326  336  347 #> [16000,]  326  336  347 #> [16001,]  329  339  350 #> [16002,]  328  338  349 #> [16003,]  329  339  350 #> [16004,]  329  339  350 #> [16005,]  329  339  350 #> [16006,]  328  338  349 #> [16007,]  329  339  350 #> [16008,]  329  339  350 #> [16009,]  329  339  350 #> [16010,]  329  339  350 #> [16011,]  328  338  349 #> [16012,]  328  338  349 #> [16013,]  329  339  350 #> [16014,]  329  339  350 #> [16015,]  328  338  349 #> [16016,]  329  339  350 #> [16017,]  328  338  349 #> [16018,]  329  339  350 #> [16019,]  329  339  350 #> [16020,]  329  339  350 #> [16021,]  329  339  350 #> [16022,]  329  339  350 #> [16023,]  328  338  349 #> [16024,]  329  339  350 #> [16025,]  329  339  350 #> [16026,]  329  339  350 #> [16027,]  329  339  350 #> [16028,]  329  339  350 #> [16029,]  328  338  349 #> [16030,]  328  338  349 #> [16031,]  328  338  349 #> [16032,]  329  339  350 #> [16033,]  329  339  350 #> [16034,]  328  338  349 #> [16035,]  328  338  349 #> [16036,]  329  339  350 #> [16037,]  328  338  349 #> [16038,]  329  339  350 #> [16039,]  329  339  350 #> [16040,]  329  339  350 #> [16041,]  329  339  350 #> [16042,]  328  338  349 #> [16043,]  328  338  349 #> [16044,]  328  338  349 #> [16045,]  329  339  350 #> [16046,]  329  339  350 #> [16047,]  328  338  349 #> [16048,]  328  338  349 #> [16049,]  329  339  350 #> [16050,]  329  339  350 #> [16051,]  329  339  350 #> [16052,]  329  339  350 #> [16053,]  329  339  350 #> [16054,]  329  339  350 #> [16055,]  329  339  350 #> [16056,]  328  338  349 #> [16057,]  329  339  350 #> [16058,]  329  339  350 #> [16059,]  329  339  350 #> [16060,]  328  338  349 #> [16061,]  328  338  349 #> [16062,]  329  339  350 #> [16063,]  328  338  349 #> [16064,]  328  338  349 #> [16065,]  328  338  349 #> [16066,]  328  338  349 #> [16067,]  329  339  350 #> [16068,]  329  339  350 #> [16069,]  329  339  350 #> [16070,]  328  338  349 #> [16071,]  329  339  350 #> [16072,]  329  339  350 #> [16073,]  329  339  350 #> [16074,]  329  339  350 #> [16075,]  328  338  349 #> [16076,]  329  339  350 #> [16077,]  329  339  350 #> [16078,]  328  338  349 #> [16079,]  328  338  349 #> [16080,]  329  339  350 #> [16081,]  328  338  349 #> [16082,]  329  339  350 #> [16083,]  329  339  350 #> [16084,]  329  339  350 #> [16085,]  329  339  350 #> [16086,]  329  339  350 #> [16087,]  329  339  350 #> [16088,]  329  339  350 #> [16089,]  329  339  350 #> [16090,]  329  339  350 #> [16091,]  329  339  350 #> [16092,]  328  338  349 #> [16093,]  329  339  350 #> [16094,]  328  338  349 #> [16095,]  328  338  349 #> [16096,]  329  339  350 #> [16097,]  329  339  350 #> [16098,]  329  339  350 #> [16099,]  329  339  350 #> [16100,]  328  338  349 #> [16101,]  330  340  352 #> [16102,]  330  340  351 #> [16103,]  330  340  351 #> [16104,]  331  341  352 #> [16105,]  330  340  352 #> [16106,]  330  340  351 #> [16107,]  330  340  351 #> [16108,]  331  341  351 #> [16109,]  331  341  351 #> [16110,]  330  340  352 #> [16111,]  330  340  352 #> [16112,]  330  340  352 #> [16113,]  330  340  352 #> [16114,]  330  340  352 #> [16115,]  330  340  352 #> [16116,]  330  340  352 #> [16117,]  332  341  352 #> [16118,]  330  340  352 #> [16119,]  330  340  352 #> [16120,]  330  340  351 #> [16121,]  330  340  351 #> [16122,]  331  341  352 #> [16123,]  330  340  351 #> [16124,]  330  340  352 #> [16125,]  330  340  351 #> [16126,]  330  340  352 #> [16127,]  332  341  352 #> [16128,]  330  340  352 #> [16129,]  330  340  351 #> [16130,]  330  340  351 #> [16131,]  330  340  352 #> [16132,]  330  340  352 #> [16133,]  330  340  352 #> [16134,]  330  340  351 #> [16135,]  332  341  351 #> [16136,]  330  340  351 #> [16137,]  330  340  351 #> [16138,]  330  340  352 #> [16139,]  330  340  352 #> [16140,]  330  340  351 #> [16141,]  330  340  351 #> [16142,]  330  340  351 #> [16143,]  330  340  352 #> [16144,]  332  341  351 #> [16145,]  330  340  351 #> [16146,]  330  340  352 #> [16147,]  330  340  352 #> [16148,]  330  340  352 #> [16149,]  330  340  351 #> [16150,]  330  340  351 #> [16151,]  330  340  352 #> [16152,]  332  341  352 #> [16153,]  330  340  351 #> [16154,]  330  340  351 #> [16155,]  330  340  351 #> [16156,]  330  340  351 #> [16157,]  330  340  351 #> [16158,]  332  341  352 #> [16159,]  330  340  352 #> [16160,]  330  340  351 #> [16161,]  330  340  352 #> [16162,]  330  340  351 #> [16163,]  330  340  352 #> [16164,]  330  340  351 #> [16165,]  330  340  351 #> [16166,]  331  341  352 #> [16167,]  330  340  351 #> [16168,]  330  340  352 #> [16169,]  330  340  352 #> [16170,]  330  340  352 #> [16171,]  330  340  352 #> [16172,]  330  340  351 #> [16173,]  330  340  351 #> [16174,]  330  340  351 #> [16175,]  330  340  352 #> [16176,]  330  340  351 #> [16177,]  330  340  352 #> [16178,]  330  340  352 #> [16179,]  330  340  352 #> [16180,]  330  340  351 #> [16181,]  332  341  351 #> [16182,]  331  341  351 #> [16183,]  330  340  352 #> [16184,]  330  340  351 #> [16185,]  330  340  351 #> [16186,]  330  340  351 #> [16187,]  331  341  352 #> [16188,]  330  340  351 #> [16189,]  330  340  351 #> [16190,]  332  341  352 #> [16191,]  330  340  352 #> [16192,]  331  341  352 #> [16193,]  330  340  352 #> [16194,]  330  340  351 #> [16195,]  331  341  352 #> [16196,]  330  340  352 #> [16197,]  330  340  351 #> [16198,]  330  340  351 #> [16199,]  332  341  351 #> [16200,]  330  340  352 #> [16201,]  334  343  354 #> [16202,]  334  343  354 #> [16203,]  333  342  353 #> [16204,]  334  344  353 #> [16205,]  334  343  353 #> [16206,]  334  343  354 #> [16207,]  334  343  353 #> [16208,]  334  343  353 #> [16209,]  334  343  353 #> [16210,]  334  344  353 #> [16211,]  333  342  353 #> [16212,]  333  342  353 #> [16213,]  334  343  354 #> [16214,]  333  342  354 #> [16215,]  334  344  354 #> [16216,]  334  343  354 #> [16217,]  334  343  354 #> [16218,]  334  344  353 #> [16219,]  333  342  353 #> [16220,]  333  342  353 #> [16221,]  334  344  354 #> [16222,]  333  342  353 #> [16223,]  334  344  353 #> [16224,]  334  343  353 #> [16225,]  334  344  353 #> [16226,]  333  342  353 #> [16227,]  334  343  353 #> [16228,]  334  343  353 #> [16229,]  333  342  354 #> [16230,]  334  343  353 #> [16231,]  334  343  353 #> [16232,]  333  342  353 #> [16233,]  334  343  354 #> [16234,]  334  343  353 #> [16235,]  334  343  353 #> [16236,]  333  342  353 #> [16237,]  334  343  353 #> [16238,]  334  343  353 #> [16239,]  334  344  353 #> [16240,]  333  342  353 #> [16241,]  333  342  354 #> [16242,]  333  342  353 #> [16243,]  334  344  353 #> [16244,]  334  343  354 #> [16245,]  334  344  353 #> [16246,]  334  343  353 #> [16247,]  334  343  353 #> [16248,]  333  342  353 #> [16249,]  334  343  353 #> [16250,]  334  343  354 #> [16251,]  333  342  353 #> [16252,]  334  343  353 #> [16253,]  334  344  353 #> [16254,]  333  342  353 #> [16255,]  334  343  353 #> [16256,]  334  343  353 #> [16257,]  334  343  353 #> [16258,]  334  343  353 #> [16259,]  334  343  354 #> [16260,]  333  342  353 #> [16261,]  334  344  354 #> [16262,]  333  342  353 #> [16263,]  333  342  353 #> [16264,]  334  343  353 #> [16265,]  334  343  353 #> [16266,]  333  342  353 #> [16267,]  334  343  353 #> [16268,]  333  342  354 #> [16269,]  333  342  353 #> [16270,]  334  343  354 #> [16271,]  334  343  353 #> [16272,]  334  344  353 #> [16273,]  334  344  354 #> [16274,]  334  344  353 #> [16275,]  334  344  353 #> [16276,]  334  344  354 #> [16277,]  334  344  353 #> [16278,]  334  343  353 #> [16279,]  334  343  353 #> [16280,]  333  342  353 #> [16281,]  333  342  354 #> [16282,]  334  343  353 #> [16283,]  333  342  354 #> [16284,]  334  344  353 #> [16285,]  334  343  353 #> [16286,]  334  343  354 #> [16287,]  334  343  353 #> [16288,]  334  343  353 #> [16289,]  333  342  353 #> [16290,]  334  343  353 #> [16291,]  333  342  353 #> [16292,]  334  343  353 #> [16293,]  334  343  354 #> [16294,]  334  344  353 #> [16295,]  334  344  353 #> [16296,]  334  343  354 #> [16297,]  334  343  353 #> [16298,]  334  343  353 #> [16299,]  334  343  354 #> [16300,]  334  344  353 #> [16301,]  335  345  355 #> [16302,]  335  345  355 #> [16303,]  335  345  355 #> [16304,]  336  345  355 #> [16305,]  335  345  355 #> [16306,]  335  345  355 #> [16307,]  335  345  355 #> [16308,]  335  345  355 #> [16309,]  335  345  355 #> [16310,]  336  345  355 #> [16311,]  335  345  355 #> [16312,]  335  345  355 #> [16313,]  335  345  355 #> [16314,]  335  345  355 #> [16315,]  336  345  355 #> [16316,]  336  345  355 #> [16317,]  335  345  355 #> [16318,]  336  345  355 #> [16319,]  335  345  355 #> [16320,]  335  345  355 #> [16321,]  336  345  355 #> [16322,]  335  345  355 #> [16323,]  336  345  355 #> [16324,]  335  345  355 #> [16325,]  336  345  355 #> [16326,]  335  345  355 #> [16327,]  336  345  355 #> [16328,]  335  345  355 #> [16329,]  335  345  355 #> [16330,]  335  345  355 #> [16331,]  335  345  355 #> [16332,]  335  345  355 #> [16333,]  335  345  355 #> [16334,]  335  345  355 #> [16335,]  335  345  355 #> [16336,]  335  345  355 #> [16337,]  335  345  355 #> [16338,]  335  345  355 #> [16339,]  336  345  355 #> [16340,]  335  345  355 #> [16341,]  335  345  355 #> [16342,]  335  345  355 #> [16343,]  336  345  355 #> [16344,]  335  345  355 #> [16345,]  336  345  355 #> [16346,]  335  345  355 #> [16347,]  335  345  355 #> [16348,]  335  345  355 #> [16349,]  335  345  355 #> [16350,]  335  345  355 #> [16351,]  335  345  355 #> [16352,]  335  345  355 #> [16353,]  336  345  355 #> [16354,]  335  345  355 #> [16355,]  335  345  355 #> [16356,]  335  345  355 #> [16357,]  335  345  355 #> [16358,]  335  345  355 #> [16359,]  335  345  355 #> [16360,]  335  345  355 #> [16361,]  336  345  355 #> [16362,]  335  345  355 #> [16363,]  335  345  355 #> [16364,]  335  345  355 #> [16365,]  335  345  355 #> [16366,]  335  345  355 #> [16367,]  335  345  355 #> [16368,]  335  345  355 #> [16369,]  335  345  355 #> [16370,]  335  345  355 #> [16371,]  335  345  355 #> [16372,]  336  345  355 #> [16373,]  336  345  355 #> [16374,]  336  345  355 #> [16375,]  336  345  355 #> [16376,]  336  345  355 #> [16377,]  336  345  355 #> [16378,]  335  345  355 #> [16379,]  335  345  355 #> [16380,]  335  345  355 #> [16381,]  335  345  355 #> [16382,]  335  345  355 #> [16383,]  335  345  355 #> [16384,]  336  345  355 #> [16385,]  335  345  355 #> [16386,]  335  345  355 #> [16387,]  335  345  355 #> [16388,]  335  345  355 #> [16389,]  335  345  355 #> [16390,]  335  345  355 #> [16391,]  335  345  355 #> [16392,]  335  345  355 #> [16393,]  335  345  355 #> [16394,]  336  345  355 #> [16395,]  336  345  355 #> [16396,]  335  345  355 #> [16397,]  335  345  355 #> [16398,]  335  345  355 #> [16399,]  335  345  355 #> [16400,]  336  345  355 #> [16401,]  338  347  357 #> [16402,]  338  347  357 #> [16403,]  337  346  356 #> [16404,]  338  347  357 #> [16405,]  338  347  357 #> [16406,]  338  347  357 #> [16407,]  337  346  356 #> [16408,]  337  346  356 #> [16409,]  338  347  357 #> [16410,]  338  347  357 #> [16411,]  338  347  357 #> [16412,]  338  347  357 #> [16413,]  337  346  356 #> [16414,]  338  347  357 #> [16415,]  338  347  357 #> [16416,]  337  346  356 #> [16417,]  337  346  356 #> [16418,]  338  347  357 #> [16419,]  338  347  357 #> [16420,]  337  346  356 #> [16421,]  338  347  357 #> [16422,]  337  346  356 #> [16423,]  338  347  357 #> [16424,]  337  346  356 #> [16425,]  337  346  356 #> [16426,]  338  347  357 #> [16427,]  338  347  357 #> [16428,]  338  347  357 #> [16429,]  338  347  357 #> [16430,]  338  347  357 #> [16431,]  338  347  357 #> [16432,]  338  347  357 #> [16433,]  338  347  357 #> [16434,]  338  347  357 #> [16435,]  338  347  357 #> [16436,]  338  347  357 #> [16437,]  338  347  357 #> [16438,]  338  347  357 #> [16439,]  337  346  356 #> [16440,]  337  346  356 #> [16441,]  338  347  357 #> [16442,]  338  347  357 #> [16443,]  337  346  356 #> [16444,]  337  346  356 #> [16445,]  337  346  356 #> [16446,]  337  346  356 #> [16447,]  337  346  356 #> [16448,]  338  347  357 #> [16449,]  337  346  356 #> [16450,]  337  346  356 #> [16451,]  337  346  356 #> [16452,]  338  347  357 #> [16453,]  337  346  356 #> [16454,]  337  346  356 #> [16455,]  337  346  356 #> [16456,]  337  346  356 #> [16457,]  338  347  357 #> [16458,]  338  347  357 #> [16459,]  337  346  356 #> [16460,]  338  347  357 #> [16461,]  338  347  357 #> [16462,]  338  347  357 #> [16463,]  337  346  356 #> [16464,]  338  347  357 #> [16465,]  337  346  356 #> [16466,]  337  346  356 #> [16467,]  338  347  357 #> [16468,]  338  347  357 #> [16469,]  338  347  357 #> [16470,]  337  346  356 #> [16471,]  338  347  357 #> [16472,]  337  346  356 #> [16473,]  338  347  357 #> [16474,]  338  347  357 #> [16475,]  338  347  357 #> [16476,]  337  346  356 #> [16477,]  337  346  356 #> [16478,]  337  346  356 #> [16479,]  337  346  356 #> [16480,]  338  347  357 #> [16481,]  338  347  357 #> [16482,]  338  347  357 #> [16483,]  337  346  356 #> [16484,]  337  346  356 #> [16485,]  338  347  357 #> [16486,]  337  346  356 #> [16487,]  338  347  357 #> [16488,]  338  347  357 #> [16489,]  337  346  356 #> [16490,]  337  346  356 #> [16491,]  338  347  357 #> [16492,]  338  347  357 #> [16493,]  338  347  357 #> [16494,]  337  346  356 #> [16495,]  338  347  357 #> [16496,]  338  347  357 #> [16497,]  338  347  357 #> [16498,]  337  346  356 #> [16499,]  338  347  357 #> [16500,]  337  346  356 #> [16501,]  340  350  360 #> [16502,]  340  350  360 #> [16503,]  339  348  358 #> [16504,]  339  348  358 #> [16505,]  340  350  360 #> [16506,]  340  350  360 #> [16507,]  339  348  358 #> [16508,]  339  348  358 #> [16509,]  340  349  359 #> [16510,]  340  350  360 #> [16511,]  340  350  360 #> [16512,]  339  348  358 #> [16513,]  340  350  360 #> [16514,]  340  350  360 #> [16515,]  340  350  360 #> [16516,]  340  350  360 #> [16517,]  340  349  359 #> [16518,]  340  350  360 #> [16519,]  340  350  360 #> [16520,]  340  350  360 #> [16521,]  340  350  360 #> [16522,]  340  350  360 #> [16523,]  340  350  360 #> [16524,]  340  350  360 #> [16525,]  339  348  358 #> [16526,]  340  350  360 #> [16527,]  340  349  359 #> [16528,]  340  350  360 #> [16529,]  340  350  360 #> [16530,]  340  350  360 #> [16531,]  339  348  358 #> [16532,]  340  350  360 #> [16533,]  340  350  360 #> [16534,]  340  350  360 #> [16535,]  340  350  360 #> [16536,]  340  350  360 #> [16537,]  340  350  360 #> [16538,]  340  350  360 #> [16539,]  340  350  360 #> [16540,]  340  350  360 #> [16541,]  340  350  360 #> [16542,]  340  350  360 #> [16543,]  340  350  360 #> [16544,]  340  349  359 #> [16545,]  340  350  360 #> [16546,]  340  350  360 #> [16547,]  340  350  360 #> [16548,]  340  350  360 #> [16549,]  340  350  360 #> [16550,]  340  350  360 #> [16551,]  340  350  360 #> [16552,]  339  348  358 #> [16553,]  340  350  360 #> [16554,]  340  350  360 #> [16555,]  340  350  360 #> [16556,]  340  350  360 #> [16557,]  339  348  358 #> [16558,]  340  350  360 #> [16559,]  339  348  358 #> [16560,]  339  348  358 #> [16561,]  340  350  360 #> [16562,]  340  350  360 #> [16563,]  340  350  360 #> [16564,]  340  350  360 #> [16565,]  340  350  360 #> [16566,]  340  349  359 #> [16567,]  340  350  360 #> [16568,]  339  348  358 #> [16569,]  340  350  360 #> [16570,]  340  350  360 #> [16571,]  340  350  360 #> [16572,]  340  350  360 #> [16573,]  340  350  360 #> [16574,]  340  350  360 #> [16575,]  340  350  360 #> [16576,]  340  350  360 #> [16577,]  340  350  360 #> [16578,]  340  350  360 #> [16579,]  340  350  360 #> [16580,]  340  350  360 #> [16581,]  340  349  359 #> [16582,]  340  349  359 #> [16583,]  340  350  360 #> [16584,]  340  350  360 #> [16585,]  340  350  360 #> [16586,]  339  348  358 #> [16587,]  340  349  359 #> [16588,]  340  350  360 #> [16589,]  340  350  360 #> [16590,]  340  349  359 #> [16591,]  340  350  360 #> [16592,]  340  349  359 #> [16593,]  340  350  360 #> [16594,]  340  350  360 #> [16595,]  340  349  359 #> [16596,]  339  348  358 #> [16597,]  339  348  358 #> [16598,]  340  350  360 #> [16599,]  340  349  359 #> [16600,]  340  350  360 #> [16601,]  342  352  362 #> [16602,]  341  351  361 #> [16603,]  341  351  361 #> [16604,]  341  351  361 #> [16605,]  342  352  362 #> [16606,]  341  351  361 #> [16607,]  341  351  361 #> [16608,]  341  351  361 #> [16609,]  342  353  362 #> [16610,]  341  351  361 #> [16611,]  342  352  362 #> [16612,]  341  351  361 #> [16613,]  342  353  362 #> [16614,]  341  351  361 #> [16615,]  341  351  361 #> [16616,]  341  351  361 #> [16617,]  342  353  362 #> [16618,]  342  353  362 #> [16619,]  341  351  361 #> [16620,]  342  352  362 #> [16621,]  342  353  362 #> [16622,]  341  351  361 #> [16623,]  341  351  361 #> [16624,]  342  353  362 #> [16625,]  341  351  361 #> [16626,]  341  351  361 #> [16627,]  342  352  362 #> [16628,]  342  352  362 #> [16629,]  342  353  362 #> [16630,]  341  351  361 #> [16631,]  341  351  361 #> [16632,]  341  351  361 #> [16633,]  342  353  362 #> [16634,]  341  351  361 #> [16635,]  341  351  361 #> [16636,]  342  352  362 #> [16637,]  341  351  361 #> [16638,]  342  352  362 #> [16639,]  342  352  362 #> [16640,]  341  351  361 #> [16641,]  342  352  362 #> [16642,]  342  352  362 #> [16643,]  341  351  361 #> [16644,]  341  351  361 #> [16645,]  341  351  361 #> [16646,]  341  351  361 #> [16647,]  341  351  361 #> [16648,]  341  351  361 #> [16649,]  341  351  361 #> [16650,]  341  351  361 #> [16651,]  342  352  362 #> [16652,]  341  351  361 #> [16653,]  342  353  362 #> [16654,]  342  352  362 #> [16655,]  341  351  361 #> [16656,]  342  352  362 #> [16657,]  341  351  361 #> [16658,]  342  352  362 #> [16659,]  341  351  361 #> [16660,]  341  351  361 #> [16661,]  342  353  362 #> [16662,]  342  352  362 #> [16663,]  341  351  361 #> [16664,]  342  352  362 #> [16665,]  342  352  362 #> [16666,]  342  352  362 #> [16667,]  341  351  361 #> [16668,]  341  351  361 #> [16669,]  341  351  361 #> [16670,]  342  353  362 #> [16671,]  341  351  361 #> [16672,]  341  351  361 #> [16673,]  341  351  361 #> [16674,]  341  351  361 #> [16675,]  341  351  361 #> [16676,]  341  351  361 #> [16677,]  342  352  362 #> [16678,]  341  351  361 #> [16679,]  342  352  362 #> [16680,]  341  351  361 #> [16681,]  341  351  361 #> [16682,]  342  352  362 #> [16683,]  342  353  362 #> [16684,]  342  352  362 #> [16685,]  342  352  362 #> [16686,]  341  351  361 #> [16687,]  342  352  362 #> [16688,]  341  351  361 #> [16689,]  342  352  362 #> [16690,]  342  352  362 #> [16691,]  342  352  362 #> [16692,]  341  351  361 #> [16693,]  342  352  362 #> [16694,]  342  352  362 #> [16695,]  341  351  361 #> [16696,]  341  351  361 #> [16697,]  341  351  361 #> [16698,]  341  351  361 #> [16699,]  342  352  362 #> [16700,]  342  352  362 #> [16701,]  343  354  363 #> [16702,]  344  356  364 #> [16703,]  344  355  364 #> [16704,]  343  354  363 #> [16705,]  343  354  363 #> [16706,]  344  355  364 #> [16707,]  343  354  363 #> [16708,]  343  354  363 #> [16709,]  343  354  363 #> [16710,]  343  354  363 #> [16711,]  343  354  363 #> [16712,]  344  356  364 #> [16713,]  343  354  363 #> [16714,]  343  354  363 #> [16715,]  343  354  363 #> [16716,]  343  354  363 #> [16717,]  343  354  363 #> [16718,]  344  356  364 #> [16719,]  344  356  364 #> [16720,]  344  356  364 #> [16721,]  343  354  363 #> [16722,]  343  354  363 #> [16723,]  343  354  363 #> [16724,]  343  354  363 #> [16725,]  344  355  364 #> [16726,]  343  354  363 #> [16727,]  343  354  363 #> [16728,]  344  355  364 #> [16729,]  343  354  363 #> [16730,]  343  354  363 #> [16731,]  344  355  364 #> [16732,]  344  355  364 #> [16733,]  344  356  364 #> [16734,]  344  355  364 #> [16735,]  343  354  363 #> [16736,]  343  354  363 #> [16737,]  343  354  363 #> [16738,]  343  354  363 #> [16739,]  343  354  363 #> [16740,]  343  354  363 #> [16741,]  343  354  363 #> [16742,]  343  354  363 #> [16743,]  343  354  363 #> [16744,]  343  354  363 #> [16745,]  343  354  363 #> [16746,]  343  354  363 #> [16747,]  343  354  363 #> [16748,]  343  354  363 #> [16749,]  343  354  363 #> [16750,]  343  354  363 #> [16751,]  343  354  363 #> [16752,]  343  354  363 #> [16753,]  343  354  363 #> [16754,]  343  354  363 #> [16755,]  343  354  363 #> [16756,]  343  354  363 #> [16757,]  343  354  363 #> [16758,]  343  354  363 #> [16759,]  343  354  363 #> [16760,]  344  356  364 #> [16761,]  343  354  363 #> [16762,]  343  354  363 #> [16763,]  343  354  363 #> [16764,]  343  354  363 #> [16765,]  344  355  364 #> [16766,]  343  354  363 #> [16767,]  343  354  363 #> [16768,]  343  354  363 #> [16769,]  343  354  363 #> [16770,]  344  355  364 #> [16771,]  344  356  364 #> [16772,]  343  354  363 #> [16773,]  344  355  364 #> [16774,]  343  354  363 #> [16775,]  343  354  363 #> [16776,]  343  354  363 #> [16777,]  343  354  363 #> [16778,]  343  354  363 #> [16779,]  343  354  363 #> [16780,]  343  354  363 #> [16781,]  343  354  363 #> [16782,]  343  354  363 #> [16783,]  343  354  363 #> [16784,]  344  356  364 #> [16785,]  343  354  363 #> [16786,]  343  354  363 #> [16787,]  343  354  363 #> [16788,]  343  354  363 #> [16789,]  343  354  363 #> [16790,]  343  354  363 #> [16791,]  343  354  363 #> [16792,]  343  354  363 #> [16793,]  344  356  364 #> [16794,]  343  354  363 #> [16795,]  343  354  363 #> [16796,]  343  354  363 #> [16797,]  344  356  364 #> [16798,]  344  355  364 #> [16799,]  343  354  363 #> [16800,]  344  356  364 #> [16801,]  345  357  365 #> [16802,]  345  357  366 #> [16803,]  345  357  366 #> [16804,]  345  357  365 #> [16805,]  345  357  366 #> [16806,]  346  358  366 #> [16807,]  345  357  366 #> [16808,]  346  358  365 #> [16809,]  346  358  365 #> [16810,]  345  357  366 #> [16811,]  345  357  365 #> [16812,]  346  358  366 #> [16813,]  345  357  365 #> [16814,]  345  357  365 #> [16815,]  346  358  365 #> [16816,]  345  357  366 #> [16817,]  345  357  365 #> [16818,]  345  357  366 #> [16819,]  345  357  366 #> [16820,]  345  357  366 #> [16821,]  345  357  365 #> [16822,]  345  357  365 #> [16823,]  345  357  366 #> [16824,]  345  357  366 #> [16825,]  345  357  366 #> [16826,]  346  358  366 #> [16827,]  345  357  365 #> [16828,]  345  357  366 #> [16829,]  345  357  366 #> [16830,]  345  357  365 #> [16831,]  345  357  366 #> [16832,]  345  357  366 #> [16833,]  346  358  366 #> [16834,]  345  357  366 #> [16835,]  345  357  365 #> [16836,]  345  357  366 #> [16837,]  345  357  366 #> [16838,]  345  357  366 #> [16839,]  345  357  366 #> [16840,]  345  357  366 #> [16841,]  345  357  366 #> [16842,]  345  357  366 #> [16843,]  346  358  365 #> [16844,]  345  357  365 #> [16845,]  346  358  365 #> [16846,]  346  358  365 #> [16847,]  345  357  366 #> [16848,]  345  357  366 #> [16849,]  345  357  365 #> [16850,]  345  357  366 #> [16851,]  346  358  366 #> [16852,]  345  357  365 #> [16853,]  345  357  366 #> [16854,]  345  357  365 #> [16855,]  345  357  365 #> [16856,]  346  358  366 #> [16857,]  346  358  366 #> [16858,]  345  357  365 #> [16859,]  345  357  366 #> [16860,]  345  357  366 #> [16861,]  346  358  366 #> [16862,]  345  357  365 #> [16863,]  345  357  366 #> [16864,]  346  358  366 #> [16865,]  345  357  366 #> [16866,]  346  358  365 #> [16867,]  345  357  365 #> [16868,]  346  358  365 #> [16869,]  345  357  365 #> [16870,]  345  357  366 #> [16871,]  345  357  366 #> [16872,]  345  357  366 #> [16873,]  345  357  366 #> [16874,]  345  357  365 #> [16875,]  345  357  366 #> [16876,]  346  358  366 #> [16877,]  345  357  366 #> [16878,]  345  357  366 #> [16879,]  345  357  365 #> [16880,]  345  357  365 #> [16881,]  345  357  365 #> [16882,]  345  357  365 #> [16883,]  345  357  365 #> [16884,]  345  357  366 #> [16885,]  345  357  365 #> [16886,]  345  357  366 #> [16887,]  345  357  365 #> [16888,]  345  357  365 #> [16889,]  345  357  365 #> [16890,]  345  357  365 #> [16891,]  345  357  365 #> [16892,]  345  357  365 #> [16893,]  345  357  366 #> [16894,]  346  358  366 #> [16895,]  345  357  365 #> [16896,]  345  357  365 #> [16897,]  345  357  366 #> [16898,]  345  357  366 #> [16899,]  345  357  365 #> [16900,]  345  357  366 #> [16901,]  347  359  367 #> [16902,]  348  360  367 #> [16903,]  348  360  367 #> [16904,]  347  359  367 #> [16905,]  347  359  367 #> [16906,]  348  360  367 #> [16907,]  348  360  368 #> [16908,]  347  359  367 #> [16909,]  347  359  367 #> [16910,]  348  360  367 #> [16911,]  347  359  367 #> [16912,]  348  360  367 #> [16913,]  347  359  367 #> [16914,]  347  359  367 #> [16915,]  347  359  367 #> [16916,]  347  359  368 #> [16917,]  347  359  367 #> [16918,]  348  360  367 #> [16919,]  348  360  367 #> [16920,]  348  360  368 #> [16921,]  347  359  367 #> [16922,]  347  359  367 #> [16923,]  348  360  367 #> [16924,]  347  359  368 #> [16925,]  348  360  367 #> [16926,]  347  359  367 #> [16927,]  347  359  367 #> [16928,]  348  360  368 #> [16929,]  348  360  367 #> [16930,]  347  359  367 #> [16931,]  348  360  367 #> [16932,]  348  360  367 #> [16933,]  348  360  367 #> [16934,]  348  360  367 #> [16935,]  347  359  367 #> [16936,]  348  360  367 #> [16937,]  347  359  367 #> [16938,]  347  359  367 #> [16939,]  348  360  367 #> [16940,]  348  360  367 #> [16941,]  347  359  367 #> [16942,]  348  360  367 #> [16943,]  347  359  367 #> [16944,]  347  359  367 #> [16945,]  347  359  367 #> [16946,]  347  359  367 #> [16947,]  348  360  367 #> [16948,]  348  360  367 #> [16949,]  347  359  367 #> [16950,]  348  360  368 #> [16951,]  347  359  367 #> [16952,]  347  359  368 #> [16953,]  348  360  367 #> [16954,]  347  359  367 #> [16955,]  347  359  367 #> [16956,]  348  360  367 #> [16957,]  348  360  367 #> [16958,]  347  359  367 #> [16959,]  347  359  367 #> [16960,]  348  360  367 #> [16961,]  348  360  367 #> [16962,]  347  359  367 #> [16963,]  348  360  367 #> [16964,]  348  360  367 #> [16965,]  348  360  367 #> [16966,]  347  359  367 #> [16967,]  347  359  367 #> [16968,]  347  359  367 #> [16969,]  347  359  367 #> [16970,]  348  360  367 #> [16971,]  348  360  367 #> [16972,]  348  360  367 #> [16973,]  348  360  367 #> [16974,]  347  359  367 #> [16975,]  348  360  367 #> [16976,]  348  360  368 #> [16977,]  348  360  367 #> [16978,]  348  360  367 #> [16979,]  347  359  367 #> [16980,]  347  359  367 #> [16981,]  347  359  367 #> [16982,]  347  359  367 #> [16983,]  347  359  367 #> [16984,]  348  360  367 #> [16985,]  347  359  367 #> [16986,]  348  360  368 #> [16987,]  347  359  367 #> [16988,]  347  359  367 #> [16989,]  347  359  367 #> [16990,]  347  359  367 #> [16991,]  347  359  368 #> [16992,]  347  359  367 #> [16993,]  348  360  367 #> [16994,]  348  360  367 #> [16995,]  347  359  367 #> [16996,]  347  359  367 #> [16997,]  348  360  367 #> [16998,]  348  360  367 #> [16999,]  347  359  367 #> [17000,]  348  360  367 #> [17001,]  350  362  370 #> [17002,]  350  362  370 #> [17003,]  350  362  370 #> [17004,]  349  361  369 #> [17005,]  350  362  370 #> [17006,]  350  362  370 #> [17007,]  350  362  370 #> [17008,]  349  361  369 #> [17009,]  349  361  369 #> [17010,]  349  361  369 #> [17011,]  350  362  370 #> [17012,]  350  362  370 #> [17013,]  350  362  370 #> [17014,]  350  362  370 #> [17015,]  350  362  370 #> [17016,]  350  362  370 #> [17017,]  350  362  370 #> [17018,]  350  362  370 #> [17019,]  350  362  370 #> [17020,]  349  361  369 #> [17021,]  350  362  370 #> [17022,]  350  362  370 #> [17023,]  350  362  370 #> [17024,]  350  362  370 #> [17025,]  350  362  370 #> [17026,]  350  362  370 #> [17027,]  350  362  370 #> [17028,]  350  362  370 #> [17029,]  350  362  370 #> [17030,]  349  361  369 #> [17031,]  350  362  370 #> [17032,]  350  362  370 #> [17033,]  350  362  370 #> [17034,]  350  362  370 #> [17035,]  350  362  370 #> [17036,]  350  362  370 #> [17037,]  350  362  370 #> [17038,]  350  362  370 #> [17039,]  350  362  370 #> [17040,]  350  362  370 #> [17041,]  350  362  370 #> [17042,]  350  362  370 #> [17043,]  349  361  369 #> [17044,]  350  362  370 #> [17045,]  350  362  370 #> [17046,]  350  362  370 #> [17047,]  350  362  370 #> [17048,]  350  362  370 #> [17049,]  350  362  370 #> [17050,]  350  362  370 #> [17051,]  349  361  369 #> [17052,]  350  362  370 #> [17053,]  350  362  370 #> [17054,]  350  362  370 #> [17055,]  350  362  370 #> [17056,]  349  361  369 #> [17057,]  350  362  370 #> [17058,]  350  362  370 #> [17059,]  350  362  370 #> [17060,]  349  361  369 #> [17061,]  350  362  370 #> [17062,]  350  362  370 #> [17063,]  350  362  370 #> [17064,]  349  361  369 #> [17065,]  350  362  370 #> [17066,]  350  362  370 #> [17067,]  349  361  369 #> [17068,]  350  362  370 #> [17069,]  350  362  370 #> [17070,]  350  362  370 #> [17071,]  350  362  370 #> [17072,]  350  362  370 #> [17073,]  350  362  370 #> [17074,]  350  362  370 #> [17075,]  350  362  370 #> [17076,]  350  362  370 #> [17077,]  350  362  370 #> [17078,]  349  361  369 #> [17079,]  350  362  370 #> [17080,]  350  362  370 #> [17081,]  350  362  370 #> [17082,]  350  362  370 #> [17083,]  350  362  370 #> [17084,]  350  362  370 #> [17085,]  349  361  369 #> [17086,]  350  362  370 #> [17087,]  350  362  370 #> [17088,]  350  362  370 #> [17089,]  349  361  369 #> [17090,]  350  362  370 #> [17091,]  349  361  369 #> [17092,]  350  362  370 #> [17093,]  350  362  370 #> [17094,]  350  362  370 #> [17095,]  349  361  369 #> [17096,]  350  362  370 #> [17097,]  350  362  370 #> [17098,]  350  362  370 #> [17099,]  350  362  370 #> [17100,]  350  362  370 #> [17101,]  352  364  372 #> [17102,]  351  363  371 #> [17103,]  351  363  371 #> [17104,]  351  363  371 #> [17105,]  352  364  372 #> [17106,]  351  363  371 #> [17107,]  351  363  371 #> [17108,]  351  363  371 #> [17109,]  352  364  372 #> [17110,]  351  363  371 #> [17111,]  352  364  372 #> [17112,]  351  363  371 #> [17113,]  352  364  372 #> [17114,]  351  363  371 #> [17115,]  351  363  371 #> [17116,]  351  363  371 #> [17117,]  352  364  372 #> [17118,]  352  364  372 #> [17119,]  352  364  372 #> [17120,]  352  364  372 #> [17121,]  352  364  372 #> [17122,]  352  364  372 #> [17123,]  351  363  371 #> [17124,]  352  364  372 #> [17125,]  351  363  371 #> [17126,]  351  363  371 #> [17127,]  352  364  372 #> [17128,]  352  364  372 #> [17129,]  352  364  372 #> [17130,]  351  363  371 #> [17131,]  351  363  371 #> [17132,]  351  363  371 #> [17133,]  352  364  372 #> [17134,]  351  363  371 #> [17135,]  351  363  371 #> [17136,]  352  364  372 #> [17137,]  351  363  371 #> [17138,]  352  364  372 #> [17139,]  352  364  372 #> [17140,]  351  363  371 #> [17141,]  352  364  372 #> [17142,]  352  364  372 #> [17143,]  351  363  371 #> [17144,]  351  363  371 #> [17145,]  351  363  371 #> [17146,]  351  363  371 #> [17147,]  351  363  371 #> [17148,]  351  363  371 #> [17149,]  351  363  371 #> [17150,]  352  364  372 #> [17151,]  352  364  372 #> [17152,]  351  363  371 #> [17153,]  352  364  372 #> [17154,]  352  364  372 #> [17155,]  351  363  371 #> [17156,]  352  364  372 #> [17157,]  351  363  371 #> [17158,]  352  364  372 #> [17159,]  351  363  371 #> [17160,]  351  363  371 #> [17161,]  352  364  372 #> [17162,]  352  364  372 #> [17163,]  351  363  371 #> [17164,]  352  364  372 #> [17165,]  352  364  372 #> [17166,]  352  364  372 #> [17167,]  351  363  371 #> [17168,]  351  363  371 #> [17169,]  351  363  371 #> [17170,]  352  364  372 #> [17171,]  351  363  371 #> [17172,]  351  363  371 #> [17173,]  352  364  372 #> [17174,]  351  363  371 #> [17175,]  351  363  371 #> [17176,]  351  363  371 #> [17177,]  352  364  372 #> [17178,]  351  363  371 #> [17179,]  352  364  372 #> [17180,]  351  363  371 #> [17181,]  352  364  372 #> [17182,]  352  364  372 #> [17183,]  352  364  372 #> [17184,]  352  364  372 #> [17185,]  352  364  372 #> [17186,]  351  363  371 #> [17187,]  352  364  372 #> [17188,]  351  363  371 #> [17189,]  352  364  372 #> [17190,]  352  364  372 #> [17191,]  352  364  372 #> [17192,]  351  363  371 #> [17193,]  352  364  372 #> [17194,]  352  364  372 #> [17195,]  351  363  371 #> [17196,]  351  363  371 #> [17197,]  351  363  371 #> [17198,]  351  363  371 #> [17199,]  352  364  372 #> [17200,]  352  364  372 #> [17201,]  353  365  373 #> [17202,]  354  366  374 #> [17203,]  353  365  373 #> [17204,]  354  366  374 #> [17205,]  354  366  374 #> [17206,]  353  365  373 #> [17207,]  354  366  374 #> [17208,]  354  366  374 #> [17209,]  354  366  374 #> [17210,]  354  366  374 #> [17211,]  353  365  373 #> [17212,]  354  366  374 #> [17213,]  354  366  374 #> [17214,]  353  365  373 #> [17215,]  354  366  374 #> [17216,]  353  365  373 #> [17217,]  354  366  374 #> [17218,]  354  366  374 #> [17219,]  353  365  373 #> [17220,]  354  366  374 #> [17221,]  354  366  374 #> [17222,]  354  366  374 #> [17223,]  354  366  374 #> [17224,]  354  366  374 #> [17225,]  354  366  374 #> [17226,]  353  365  373 #> [17227,]  354  366  374 #> [17228,]  353  365  373 #> [17229,]  354  366  374 #> [17230,]  354  366  374 #> [17231,]  354  366  374 #> [17232,]  354  366  374 #> [17233,]  354  366  374 #> [17234,]  353  365  373 #> [17235,]  353  365  373 #> [17236,]  354  366  374 #> [17237,]  353  365  373 #> [17238,]  353  365  373 #> [17239,]  354  366  374 #> [17240,]  354  366  374 #> [17241,]  354  366  374 #> [17242,]  353  365  373 #> [17243,]  354  366  374 #> [17244,]  354  366  374 #> [17245,]  353  365  373 #> [17246,]  354  366  374 #> [17247,]  354  366  374 #> [17248,]  354  366  374 #> [17249,]  353  365  373 #> [17250,]  354  366  374 #> [17251,]  354  366  374 #> [17252,]  353  365  373 #> [17253,]  354  366  374 #> [17254,]  354  366  374 #> [17255,]  354  366  374 #> [17256,]  354  366  374 #> [17257,]  354  366  374 #> [17258,]  354  366  374 #> [17259,]  353  365  373 #> [17260,]  354  366  374 #> [17261,]  354  366  374 #> [17262,]  354  366  374 #> [17263,]  354  366  374 #> [17264,]  353  365  373 #> [17265,]  354  366  374 #> [17266,]  354  366  374 #> [17267,]  354  366  374 #> [17268,]  353  365  373 #> [17269,]  354  366  374 #> [17270,]  354  366  374 #> [17271,]  354  366  374 #> [17272,]  353  365  373 #> [17273,]  353  365  373 #> [17274,]  354  366  374 #> [17275,]  354  366  374 #> [17276,]  354  366  374 #> [17277,]  353  365  373 #> [17278,]  354  366  374 #> [17279,]  354  366  374 #> [17280,]  354  366  374 #> [17281,]  354  366  374 #> [17282,]  354  366  374 #> [17283,]  354  366  374 #> [17284,]  354  366  374 #> [17285,]  354  366  374 #> [17286,]  354  366  374 #> [17287,]  354  366  374 #> [17288,]  354  366  374 #> [17289,]  353  365  373 #> [17290,]  354  366  374 #> [17291,]  354  366  374 #> [17292,]  354  366  374 #> [17293,]  354  366  374 #> [17294,]  353  365  373 #> [17295,]  354  366  374 #> [17296,]  353  365  373 #> [17297,]  353  365  373 #> [17298,]  354  366  374 #> [17299,]  354  366  374 #> [17300,]  353  365  373 #> [17301,]  355  367  375 #> [17302,]  356  368  376 #> [17303,]  356  368  376 #> [17304,]  355  367  375 #> [17305,]  355  367  375 #> [17306,]  356  368  376 #> [17307,]  356  368  376 #> [17308,]  355  367  375 #> [17309,]  355  367  375 #> [17310,]  356  368  376 #> [17311,]  355  367  375 #> [17312,]  356  368  376 #> [17313,]  355  367  375 #> [17314,]  355  367  375 #> [17315,]  355  367  375 #> [17316,]  355  367  375 #> [17317,]  355  367  375 #> [17318,]  356  368  376 #> [17319,]  356  368  376 #> [17320,]  356  368  376 #> [17321,]  355  367  375 #> [17322,]  355  367  375 #> [17323,]  356  368  376 #> [17324,]  355  367  375 #> [17325,]  356  368  376 #> [17326,]  355  367  375 #> [17327,]  355  367  375 #> [17328,]  356  368  376 #> [17329,]  356  368  376 #> [17330,]  355  367  375 #> [17331,]  356  368  376 #> [17332,]  356  368  376 #> [17333,]  356  368  376 #> [17334,]  356  368  376 #> [17335,]  355  367  375 #> [17336,]  355  367  375 #> [17337,]  355  367  375 #> [17338,]  355  367  375 #> [17339,]  356  368  376 #> [17340,]  356  368  376 #> [17341,]  355  367  375 #> [17342,]  356  368  376 #> [17343,]  355  367  375 #> [17344,]  355  367  375 #> [17345,]  355  367  375 #> [17346,]  355  367  375 #> [17347,]  356  368  376 #> [17348,]  356  368  376 #> [17349,]  355  367  375 #> [17350,]  356  368  376 #> [17351,]  355  367  375 #> [17352,]  355  367  375 #> [17353,]  356  368  376 #> [17354,]  355  367  375 #> [17355,]  355  367  375 #> [17356,]  356  368  376 #> [17357,]  356  368  376 #> [17358,]  355  367  375 #> [17359,]  355  367  375 #> [17360,]  356  368  376 #> [17361,]  356  368  376 #> [17362,]  355  367  375 #> [17363,]  356  368  376 #> [17364,]  356  368  376 #> [17365,]  356  368  376 #> [17366,]  355  367  375 #> [17367,]  355  367  375 #> [17368,]  355  367  375 #> [17369,]  355  367  375 #> [17370,]  356  368  376 #> [17371,]  356  368  376 #> [17372,]  356  368  376 #> [17373,]  356  368  376 #> [17374,]  355  367  375 #> [17375,]  356  368  376 #> [17376,]  355  367  375 #> [17377,]  356  368  376 #> [17378,]  356  368  376 #> [17379,]  355  367  375 #> [17380,]  355  367  375 #> [17381,]  355  367  375 #> [17382,]  355  367  375 #> [17383,]  355  367  375 #> [17384,]  356  368  376 #> [17385,]  355  367  375 #> [17386,]  356  368  376 #> [17387,]  355  367  375 #> [17388,]  355  367  375 #> [17389,]  355  367  375 #> [17390,]  355  367  375 #> [17391,]  355  367  375 #> [17392,]  355  367  375 #> [17393,]  356  368  376 #> [17394,]  356  368  376 #> [17395,]  355  367  375 #> [17396,]  355  367  375 #> [17397,]  356  368  376 #> [17398,]  356  368  376 #> [17399,]  355  367  375 #> [17400,]  356  368  376 #> [17401,]  358  370  378 #> [17402,]  358  370  378 #> [17403,]  357  369  377 #> [17404,]  358  370  378 #> [17405,]  357  369  377 #> [17406,]  357  369  377 #> [17407,]  358  370  378 #> [17408,]  358  370  378 #> [17409,]  358  370  378 #> [17410,]  358  370  378 #> [17411,]  357  369  377 #> [17412,]  357  369  377 #> [17413,]  358  370  378 #> [17414,]  357  369  377 #> [17415,]  358  370  378 #> [17416,]  358  370  378 #> [17417,]  358  370  378 #> [17418,]  358  370  378 #> [17419,]  357  369  377 #> [17420,]  357  369  377 #> [17421,]  358  370  378 #> [17422,]  357  369  377 #> [17423,]  358  370  378 #> [17424,]  357  369  377 #> [17425,]  358  370  378 #> [17426,]  357  369  377 #> [17427,]  358  370  378 #> [17428,]  358  370  378 #> [17429,]  357  369  377 #> [17430,]  357  369  377 #> [17431,]  358  370  378 #> [17432,]  357  369  377 #> [17433,]  357  369  377 #> [17434,]  357  369  377 #> [17435,]  357  369  377 #> [17436,]  357  369  377 #> [17437,]  358  370  378 #> [17438,]  358  370  378 #> [17439,]  358  370  378 #> [17440,]  357  369  377 #> [17441,]  357  369  377 #> [17442,]  357  369  377 #> [17443,]  358  370  378 #> [17444,]  358  370  378 #> [17445,]  358  370  378 #> [17446,]  358  370  378 #> [17447,]  358  370  378 #> [17448,]  357  369  377 #> [17449,]  358  370  378 #> [17450,]  358  370  378 #> [17451,]  357  369  377 #> [17452,]  357  369  377 #> [17453,]  358  370  378 #> [17454,]  357  369  377 #> [17455,]  357  369  377 #> [17456,]  358  370  378 #> [17457,]  357  369  377 #> [17458,]  357  369  377 #> [17459,]  358  370  378 #> [17460,]  357  369  377 #> [17461,]  358  370  378 #> [17462,]  357  369  377 #> [17463,]  357  369  377 #> [17464,]  358  370  378 #> [17465,]  357  369  377 #> [17466,]  357  369  377 #> [17467,]  357  369  377 #> [17468,]  357  369  377 #> [17469,]  357  369  377 #> [17470,]  358  370  378 #> [17471,]  358  370  378 #> [17472,]  358  370  378 #> [17473,]  358  370  378 #> [17474,]  358  370  378 #> [17475,]  358  370  378 #> [17476,]  358  370  378 #> [17477,]  358  370  378 #> [17478,]  357  369  377 #> [17479,]  358  370  378 #> [17480,]  357  369  377 #> [17481,]  357  369  377 #> [17482,]  358  370  378 #> [17483,]  357  369  377 #> [17484,]  358  370  378 #> [17485,]  357  369  377 #> [17486,]  358  370  378 #> [17487,]  358  370  378 #> [17488,]  358  370  378 #> [17489,]  357  369  377 #> [17490,]  358  370  378 #> [17491,]  357  369  377 #> [17492,]  358  370  378 #> [17493,]  357  369  377 #> [17494,]  358  370  378 #> [17495,]  358  370  378 #> [17496,]  358  370  378 #> [17497,]  357  369  377 #> [17498,]  357  369  377 #> [17499,]  357  369  377 #> [17500,]  358  370  378 #> [17501,]  360  372  380 #> [17502,]  359  371  379 #> [17503,]  359  371  379 #> [17504,]  360  372  380 #> [17505,]  359  371  379 #> [17506,]  359  371  379 #> [17507,]  360  372  380 #> [17508,]  360  372  380 #> [17509,]  360  372  380 #> [17510,]  360  372  380 #> [17511,]  359  371  379 #> [17512,]  359  371  379 #> [17513,]  360  372  380 #> [17514,]  359  371  379 #> [17515,]  360  372  380 #> [17516,]  360  372  380 #> [17517,]  360  372  380 #> [17518,]  360  372  380 #> [17519,]  359  371  379 #> [17520,]  359  371  379 #> [17521,]  360  372  380 #> [17522,]  359  371  379 #> [17523,]  360  372  380 #> [17524,]  359  371  379 #> [17525,]  360  372  380 #> [17526,]  359  371  379 #> [17527,]  360  372  380 #> [17528,]  360  372  380 #> [17529,]  359  371  379 #> [17530,]  359  371  379 #> [17531,]  359  371  379 #> [17532,]  359  371  379 #> [17533,]  359  371  379 #> [17534,]  359  371  379 #> [17535,]  359  371  379 #> [17536,]  359  371  379 #> [17537,]  359  371  379 #> [17538,]  359  371  379 #> [17539,]  360  372  380 #> [17540,]  359  371  379 #> [17541,]  359  371  379 #> [17542,]  359  371  379 #> [17543,]  360  372  380 #> [17544,]  359  371  379 #> [17545,]  360  372  380 #> [17546,]  360  372  380 #> [17547,]  360  372  380 #> [17548,]  359  371  379 #> [17549,]  359  371  379 #> [17550,]  359  371  379 #> [17551,]  359  371  379 #> [17552,]  359  371  379 #> [17553,]  360  372  380 #> [17554,]  359  371  379 #> [17555,]  359  371  379 #> [17556,]  360  372  380 #> [17557,]  359  371  379 #> [17558,]  359  371  379 #> [17559,]  359  371  379 #> [17560,]  359  371  379 #> [17561,]  360  372  380 #> [17562,]  359  371  379 #> [17563,]  359  371  379 #> [17564,]  360  372  380 #> [17565,]  359  371  379 #> [17566,]  359  371  379 #> [17567,]  359  371  379 #> [17568,]  359  371  379 #> [17569,]  359  371  379 #> [17570,]  360  372  380 #> [17571,]  360  372  380 #> [17572,]  360  372  380 #> [17573,]  360  372  380 #> [17574,]  360  372  380 #> [17575,]  360  372  380 #> [17576,]  360  372  380 #> [17577,]  360  372  380 #> [17578,]  359  371  379 #> [17579,]  359  371  379 #> [17580,]  359  371  379 #> [17581,]  359  371  379 #> [17582,]  360  372  380 #> [17583,]  359  371  379 #> [17584,]  360  372  380 #> [17585,]  359  371  379 #> [17586,]  359  371  379 #> [17587,]  359  371  379 #> [17588,]  360  372  380 #> [17589,]  359  371  379 #> [17590,]  359  371  379 #> [17591,]  359  371  379 #> [17592,]  359  371  379 #> [17593,]  359  371  379 #> [17594,]  360  372  380 #> [17595,]  360  372  380 #> [17596,]  359  371  379 #> [17597,]  359  371  379 #> [17598,]  359  371  379 #> [17599,]  359  371  379 #> [17600,]  360  372  380 #> [17601,]  361  373  381 #> [17602,]  361  373  381 #> [17603,]  362  374  382 #> [17604,]  363  374  382 #> [17605,]  361  373  381 #> [17606,]  361  373  381 #> [17607,]  363  374  382 #> [17608,]  363  374  382 #> [17609,]  361  373  381 #> [17610,]  361  373  381 #> [17611,]  361  373  381 #> [17612,]  362  374  382 #> [17613,]  361  373  381 #> [17614,]  361  373  381 #> [17615,]  361  373  381 #> [17616,]  361  373  381 #> [17617,]  361  373  381 #> [17618,]  361  373  381 #> [17619,]  361  373  381 #> [17620,]  361  373  381 #> [17621,]  361  373  381 #> [17622,]  361  373  381 #> [17623,]  361  373  381 #> [17624,]  361  373  381 #> [17625,]  363  374  382 #> [17626,]  361  373  381 #> [17627,]  361  373  381 #> [17628,]  361  373  381 #> [17629,]  361  373  381 #> [17630,]  361  373  381 #> [17631,]  362  374  382 #> [17632,]  361  373  381 #> [17633,]  361  373  381 #> [17634,]  361  373  381 #> [17635,]  361  373  381 #> [17636,]  361  373  381 #> [17637,]  361  373  381 #> [17638,]  361  373  381 #> [17639,]  361  373  381 #> [17640,]  361  373  381 #> [17641,]  361  373  381 #> [17642,]  361  373  381 #> [17643,]  361  373  381 #> [17644,]  361  373  381 #> [17645,]  361  373  381 #> [17646,]  361  373  381 #> [17647,]  361  373  381 #> [17648,]  361  373  381 #> [17649,]  361  373  381 #> [17650,]  361  373  381 #> [17651,]  361  373  381 #> [17652,]  362  374  382 #> [17653,]  361  373  381 #> [17654,]  361  373  381 #> [17655,]  361  373  381 #> [17656,]  361  373  381 #> [17657,]  362  374  382 #> [17658,]  361  373  381 #> [17659,]  362  374  382 #> [17660,]  362  374  382 #> [17661,]  361  373  381 #> [17662,]  361  373  381 #> [17663,]  361  373  381 #> [17664,]  361  373  381 #> [17665,]  361  373  381 #> [17666,]  361  373  381 #> [17667,]  361  373  381 #> [17668,]  361  373  381 #> [17669,]  361  373  381 #> [17670,]  361  373  381 #> [17671,]  361  373  381 #> [17672,]  361  373  381 #> [17673,]  361  373  381 #> [17674,]  361  373  381 #> [17675,]  361  373  381 #> [17676,]  361  373  381 #> [17677,]  361  373  381 #> [17678,]  361  373  381 #> [17679,]  361  373  381 #> [17680,]  361  373  381 #> [17681,]  361  373  381 #> [17682,]  361  373  381 #> [17683,]  361  373  381 #> [17684,]  361  373  381 #> [17685,]  361  373  381 #> [17686,]  361  373  381 #> [17687,]  361  373  381 #> [17688,]  361  373  381 #> [17689,]  361  373  381 #> [17690,]  361  373  381 #> [17691,]  361  373  381 #> [17692,]  361  373  381 #> [17693,]  361  373  381 #> [17694,]  361  373  381 #> [17695,]  361  373  381 #> [17696,]  363  374  382 #> [17697,]  362  374  382 #> [17698,]  361  373  381 #> [17699,]  361  373  381 #> [17700,]  361  373  381 #> [17701,]  365  376  383 #> [17702,]  365  376  383 #> [17703,]  364  375  383 #> [17704,]  365  376  383 #> [17705,]  365  376  383 #> [17706,]  364  375  383 #> [17707,]  364  375  383 #> [17708,]  365  376  383 #> [17709,]  365  376  383 #> [17710,]  365  376  383 #> [17711,]  365  376  383 #> [17712,]  365  376  383 #> [17713,]  365  376  383 #> [17714,]  365  376  383 #> [17715,]  365  376  383 #> [17716,]  365  376  383 #> [17717,]  365  376  383 #> [17718,]  365  376  383 #> [17719,]  365  376  383 #> [17720,]  364  375  383 #> [17721,]  364  375  383 #> [17722,]  365  376  383 #> [17723,]  364  375  383 #> [17724,]  365  376  383 #> [17725,]  364  375  383 #> [17726,]  365  376  383 #> [17727,]  365  376  383 #> [17728,]  365  376  383 #> [17729,]  364  375  383 #> [17730,]  365  376  383 #> [17731,]  365  376  383 #> [17732,]  365  376  383 #> [17733,]  365  376  383 #> [17734,]  364  375  383 #> [17735,]  364  375  383 #> [17736,]  364  375  383 #> [17737,]  364  375  383 #> [17738,]  365  376  383 #> [17739,]  365  376  383 #> [17740,]  365  376  383 #> [17741,]  364  375  383 #> [17742,]  364  375  383 #> [17743,]  365  376  383 #> [17744,]  364  375  383 #> [17745,]  364  375  383 #> [17746,]  365  376  383 #> [17747,]  365  376  383 #> [17748,]  365  376  383 #> [17749,]  365  376  383 #> [17750,]  364  375  383 #> [17751,]  365  376  383 #> [17752,]  365  376  383 #> [17753,]  364  375  383 #> [17754,]  364  375  383 #> [17755,]  364  375  383 #> [17756,]  364  375  383 #> [17757,]  364  375  383 #> [17758,]  365  376  383 #> [17759,]  365  376  383 #> [17760,]  364  375  383 #> [17761,]  365  376  383 #> [17762,]  365  376  383 #> [17763,]  365  376  383 #> [17764,]  364  375  383 #> [17765,]  364  375  383 #> [17766,]  365  376  383 #> [17767,]  365  376  383 #> [17768,]  365  376  383 #> [17769,]  365  376  383 #> [17770,]  365  376  383 #> [17771,]  365  376  383 #> [17772,]  365  376  383 #> [17773,]  364  375  383 #> [17774,]  364  375  383 #> [17775,]  365  376  383 #> [17776,]  364  375  383 #> [17777,]  365  376  383 #> [17778,]  365  376  383 #> [17779,]  365  376  383 #> [17780,]  364  375  383 #> [17781,]  364  375  383 #> [17782,]  364  375  383 #> [17783,]  365  376  383 #> [17784,]  364  375  383 #> [17785,]  364  375  383 #> [17786,]  364  375  383 #> [17787,]  365  376  383 #> [17788,]  364  375  383 #> [17789,]  364  375  383 #> [17790,]  365  376  383 #> [17791,]  365  376  383 #> [17792,]  365  376  383 #> [17793,]  365  376  383 #> [17794,]  364  375  383 #> [17795,]  365  376  383 #> [17796,]  365  376  383 #> [17797,]  364  375  383 #> [17798,]  364  375  383 #> [17799,]  364  375  383 #> [17800,]  365  376  383 #> [17801,]  367  378  385 #> [17802,]  367  378  385 #> [17803,]  366  377  384 #> [17804,]  366  377  384 #> [17805,]  366  377  384 #> [17806,]  367  378  385 #> [17807,]  367  378  385 #> [17808,]  366  377  384 #> [17809,]  366  377  384 #> [17810,]  366  377  384 #> [17811,]  367  378  385 #> [17812,]  367  378  385 #> [17813,]  367  378  385 #> [17814,]  367  378  385 #> [17815,]  367  378  385 #> [17816,]  367  378  385 #> [17817,]  367  378  385 #> [17818,]  366  377  384 #> [17819,]  367  378  385 #> [17820,]  366  377  384 #> [17821,]  367  378  385 #> [17822,]  367  378  385 #> [17823,]  366  377  384 #> [17824,]  366  377  384 #> [17825,]  367  378  385 #> [17826,]  367  378  385 #> [17827,]  367  378  385 #> [17828,]  367  378  385 #> [17829,]  367  378  385 #> [17830,]  366  377  384 #> [17831,]  366  377  384 #> [17832,]  366  377  384 #> [17833,]  367  378  385 #> [17834,]  366  377  384 #> [17835,]  367  378  385 #> [17836,]  367  378  385 #> [17837,]  367  378  385 #> [17838,]  367  378  385 #> [17839,]  366  377  384 #> [17840,]  367  378  385 #> [17841,]  367  378  385 #> [17842,]  366  377  384 #> [17843,]  366  377  384 #> [17844,]  367  378  385 #> [17845,]  366  377  384 #> [17846,]  367  378  385 #> [17847,]  367  378  385 #> [17848,]  366  377  384 #> [17849,]  366  377  384 #> [17850,]  367  378  385 #> [17851,]  366  377  384 #> [17852,]  367  378  385 #> [17853,]  366  377  384 #> [17854,]  367  378  385 #> [17855,]  367  378  385 #> [17856,]  366  377  384 #> [17857,]  367  378  385 #> [17858,]  367  378  385 #> [17859,]  367  378  385 #> [17860,]  366  377  384 #> [17861,]  367  378  385 #> [17862,]  366  377  384 #> [17863,]  367  378  385 #> [17864,]  366  377  384 #> [17865,]  366  377  384 #> [17866,]  366  377  384 #> [17867,]  366  377  384 #> [17868,]  367  378  385 #> [17869,]  367  378  385 #> [17870,]  367  378  385 #> [17871,]  367  378  385 #> [17872,]  366  377  384 #> [17873,]  367  378  385 #> [17874,]  367  378  385 #> [17875,]  367  378  385 #> [17876,]  367  378  385 #> [17877,]  367  378  385 #> [17878,]  366  377  384 #> [17879,]  367  378  385 #> [17880,]  367  378  385 #> [17881,]  367  378  385 #> [17882,]  367  378  385 #> [17883,]  367  378  385 #> [17884,]  367  378  385 #> [17885,]  366  377  384 #> [17886,]  367  378  385 #> [17887,]  367  378  385 #> [17888,]  366  377  384 #> [17889,]  366  377  384 #> [17890,]  367  378  385 #> [17891,]  366  377  384 #> [17892,]  367  378  385 #> [17893,]  367  378  385 #> [17894,]  367  378  385 #> [17895,]  366  377  384 #> [17896,]  367  378  385 #> [17897,]  367  378  385 #> [17898,]  367  378  385 #> [17899,]  367  378  385 #> [17900,]  367  378  385 #> [17901,]  368  379  386 #> [17902,]  369  380  387 #> [17903,]  369  380  387 #> [17904,]  368  379  386 #> [17905,]  368  379  386 #> [17906,]  369  380  387 #> [17907,]  369  380  387 #> [17908,]  368  379  386 #> [17909,]  368  379  386 #> [17910,]  368  379  386 #> [17911,]  368  379  386 #> [17912,]  369  380  387 #> [17913,]  368  379  386 #> [17914,]  368  379  386 #> [17915,]  368  379  386 #> [17916,]  368  379  386 #> [17917,]  368  379  386 #> [17918,]  369  380  387 #> [17919,]  369  380  387 #> [17920,]  369  380  387 #> [17921,]  368  379  386 #> [17922,]  368  379  386 #> [17923,]  369  380  387 #> [17924,]  368  379  386 #> [17925,]  369  380  387 #> [17926,]  368  379  386 #> [17927,]  368  379  386 #> [17928,]  369  380  387 #> [17929,]  368  379  386 #> [17930,]  368  379  386 #> [17931,]  369  380  387 #> [17932,]  369  380  387 #> [17933,]  369  380  387 #> [17934,]  369  380  387 #> [17935,]  368  379  386 #> [17936,]  368  379  386 #> [17937,]  368  379  386 #> [17938,]  368  379  386 #> [17939,]  368  379  386 #> [17940,]  369  380  387 #> [17941,]  368  379  386 #> [17942,]  369  380  387 #> [17943,]  368  379  386 #> [17944,]  368  379  386 #> [17945,]  368  379  386 #> [17946,]  368  379  386 #> [17947,]  368  379  386 #> [17948,]  369  380  387 #> [17949,]  368  379  386 #> [17950,]  368  379  386 #> [17951,]  368  379  386 #> [17952,]  368  379  386 #> [17953,]  368  379  386 #> [17954,]  368  379  386 #> [17955,]  368  379  386 #> [17956,]  369  380  387 #> [17957,]  368  379  386 #> [17958,]  368  379  386 #> [17959,]  368  379  386 #> [17960,]  369  380  387 #> [17961,]  368  379  386 #> [17962,]  368  379  386 #> [17963,]  368  379  386 #> [17964,]  369  380  387 #> [17965,]  369  380  387 #> [17966,]  368  379  386 #> [17967,]  368  379  386 #> [17968,]  368  379  386 #> [17969,]  368  379  386 #> [17970,]  369  380  387 #> [17971,]  369  380  387 #> [17972,]  368  379  386 #> [17973,]  369  380  387 #> [17974,]  368  379  386 #> [17975,]  368  379  386 #> [17976,]  368  379  386 #> [17977,]  368  379  386 #> [17978,]  368  379  386 #> [17979,]  368  379  386 #> [17980,]  368  379  386 #> [17981,]  368  379  386 #> [17982,]  368  379  386 #> [17983,]  368  379  386 #> [17984,]  369  380  387 #> [17985,]  368  379  386 #> [17986,]  368  379  386 #> [17987,]  368  379  386 #> [17988,]  368  379  386 #> [17989,]  368  379  386 #> [17990,]  368  379  386 #> [17991,]  368  379  386 #> [17992,]  368  379  386 #> [17993,]  369  380  387 #> [17994,]  368  379  386 #> [17995,]  368  379  386 #> [17996,]  368  379  386 #> [17997,]  369  380  387 #> [17998,]  369  380  387 #> [17999,]  368  379  386 #> [18000,]  369  380  387 #> [18001,]  371  381  389 #> [18002,]  371  381  390 #> [18003,]  371  381  389 #> [18004,]  370  381  389 #> [18005,]  371  381  390 #> [18006,]  371  381  388 #> [18007,]  371  381  388 #> [18008,]  370  381  390 #> [18009,]  370  381  390 #> [18010,]  370  381  390 #> [18011,]  371  381  389 #> [18012,]  371  381  390 #> [18013,]  371  381  390 #> [18014,]  371  381  389 #> [18015,]  371  381  390 #> [18016,]  371  381  389 #> [18017,]  371  381  390 #> [18018,]  371  381  390 #> [18019,]  371  381  389 #> [18020,]  371  381  388 #> [18021,]  371  381  388 #> [18022,]  371  381  390 #> [18023,]  371  381  390 #> [18024,]  371  381  390 #> [18025,]  371  381  388 #> [18026,]  371  381  389 #> [18027,]  371  381  390 #> [18028,]  371  381  389 #> [18029,]  371  381  390 #> [18030,]  371  381  390 #> [18031,]  371  381  390 #> [18032,]  371  381  390 #> [18033,]  371  381  390 #> [18034,]  371  381  389 #> [18035,]  371  381  388 #> [18036,]  371  381  390 #> [18037,]  371  381  389 #> [18038,]  371  381  389 #> [18039,]  371  381  390 #> [18040,]  371  381  390 #> [18041,]  371  381  390 #> [18042,]  371  381  388 #> [18043,]  370  381  390 #> [18044,]  371  381  388 #> [18045,]  371  381  389 #> [18046,]  371  381  390 #> [18047,]  371  381  390 #> [18048,]  371  381  390 #> [18049,]  371  381  389 #> [18050,]  371  381  390 #> [18051,]  370  381  390 #> [18052,]  371  381  389 #> [18053,]  371  381  388 #> [18054,]  371  381  390 #> [18055,]  371  381  390 #> [18056,]  371  381  388 #> [18057,]  371  381  390 #> [18058,]  371  381  390 #> [18059,]  371  381  389 #> [18060,]  370  381  390 #> [18061,]  371  381  390 #> [18062,]  371  381  390 #> [18063,]  371  381  390 #> [18064,]  370  381  389 #> [18065,]  371  381  388 #> [18066,]  371  381  390 #> [18067,]  370  381  390 #> [18068,]  371  381  389 #> [18069,]  371  381  389 #> [18070,]  371  381  390 #> [18071,]  371  381  390 #> [18072,]  371  381  389 #> [18073,]  371  381  388 #> [18074,]  371  381  388 #> [18075,]  371  381  390 #> [18076,]  371  381  390 #> [18077,]  371  381  389 #> [18078,]  370  381  390 #> [18079,]  371  381  389 #> [18080,]  371  381  388 #> [18081,]  371  381  390 #> [18082,]  371  381  388 #> [18083,]  371  381  390 #> [18084,]  371  381  388 #> [18085,]  370  381  388 #> [18086,]  371  381  388 #> [18087,]  371  381  390 #> [18088,]  371  381  390 #> [18089,]  370  381  388 #> [18090,]  371  381  390 #> [18091,]  370  381  390 #> [18092,]  371  381  390 #> [18093,]  371  381  390 #> [18094,]  371  381  388 #> [18095,]  370  381  390 #> [18096,]  371  381  389 #> [18097,]  371  381  389 #> [18098,]  371  381  390 #> [18099,]  371  381  388 #> [18100,]  371  381  389 #> [18101,]  373  383  392 #> [18102,]  373  383  391 #> [18103,]  372  382  391 #> [18104,]  372  382  392 #> [18105,]  372  382  392 #> [18106,]  373  383  391 #> [18107,]  372  382  391 #> [18108,]  372  382  391 #> [18109,]  372  382  391 #> [18110,]  372  382  392 #> [18111,]  373  383  392 #> [18112,]  372  382  392 #> [18113,]  373  383  392 #> [18114,]  373  383  392 #> [18115,]  373  383  392 #> [18116,]  373  383  392 #> [18117,]  373  383  392 #> [18118,]  372  382  392 #> [18119,]  373  383  392 #> [18120,]  372  382  391 #> [18121,]  373  383  391 #> [18122,]  373  383  392 #> [18123,]  372  382  391 #> [18124,]  372  382  392 #> [18125,]  372  382  391 #> [18126,]  373  383  392 #> [18127,]  373  383  392 #> [18128,]  372  382  392 #> [18129,]  373  383  391 #> [18130,]  372  382  392 #> [18131,]  372  382  392 #> [18132,]  372  382  392 #> [18133,]  373  383  392 #> [18134,]  372  382  391 #> [18135,]  373  383  391 #> [18136,]  372  382  391 #> [18137,]  373  383  391 #> [18138,]  372  382  392 #> [18139,]  372  382  392 #> [18140,]  372  382  391 #> [18141,]  373  383  391 #> [18142,]  372  382  391 #> [18143,]  372  382  392 #> [18144,]  373  383  391 #> [18145,]  372  382  391 #> [18146,]  372  382  392 #> [18147,]  373  383  392 #> [18148,]  372  382  392 #> [18149,]  372  382  391 #> [18150,]  373  383  391 #> [18151,]  372  382  392 #> [18152,]  373  383  392 #> [18153,]  372  382  391 #> [18154,]  372  382  391 #> [18155,]  373  383  391 #> [18156,]  372  382  391 #> [18157,]  372  382  391 #> [18158,]  373  383  392 #> [18159,]  373  383  392 #> [18160,]  372  382  391 #> [18161,]  373  383  392 #> [18162,]  372  382  391 #> [18163,]  372  382  392 #> [18164,]  372  382  391 #> [18165,]  372  382  391 #> [18166,]  372  382  392 #> [18167,]  372  382  391 #> [18168,]  373  383  392 #> [18169,]  373  383  392 #> [18170,]  373  383  392 #> [18171,]  373  383  392 #> [18172,]  372  382  391 #> [18173,]  373  383  391 #> [18174,]  372  382  391 #> [18175,]  373  383  392 #> [18176,]  373  383  391 #> [18177,]  373  383  392 #> [18178,]  372  382  392 #> [18179,]  373  383  392 #> [18180,]  372  382  391 #> [18181,]  373  383  391 #> [18182,]  372  382  391 #> [18183,]  373  383  392 #> [18184,]  373  383  391 #> [18185,]  372  382  391 #> [18186,]  373  383  391 #> [18187,]  373  383  392 #> [18188,]  372  382  391 #> [18189,]  372  382  391 #> [18190,]  373  383  392 #> [18191,]  372  382  392 #> [18192,]  373  383  392 #> [18193,]  373  383  392 #> [18194,]  373  383  391 #> [18195,]  372  382  392 #> [18196,]  373  383  392 #> [18197,]  373  383  391 #> [18198,]  373  383  391 #> [18199,]  373  383  391 #> [18200,]  373  383  392 #> [18201,]  375  385  394 #> [18202,]  375  385  394 #> [18203,]  375  385  394 #> [18204,]  374  384  393 #> [18205,]  375  385  394 #> [18206,]  375  385  394 #> [18207,]  375  385  394 #> [18208,]  374  384  393 #> [18209,]  374  384  393 #> [18210,]  375  385  394 #> [18211,]  374  384  393 #> [18212,]  375  385  394 #> [18213,]  374  384  393 #> [18214,]  375  385  394 #> [18215,]  375  385  394 #> [18216,]  375  385  394 #> [18217,]  374  384  393 #> [18218,]  375  385  394 #> [18219,]  375  385  394 #> [18220,]  375  385  394 #> [18221,]  375  385  394 #> [18222,]  374  384  393 #> [18223,]  375  385  394 #> [18224,]  375  385  394 #> [18225,]  375  385  394 #> [18226,]  375  385  394 #> [18227,]  374  384  393 #> [18228,]  375  385  394 #> [18229,]  375  385  394 #> [18230,]  374  384  393 #> [18231,]  375  385  394 #> [18232,]  375  385  394 #> [18233,]  375  385  394 #> [18234,]  375  385  394 #> [18235,]  374  384  393 #> [18236,]  375  385  394 #> [18237,]  375  385  394 #> [18238,]  375  385  394 #> [18239,]  375  385  394 #> [18240,]  375  385  394 #> [18241,]  375  385  394 #> [18242,]  375  385  394 #> [18243,]  374  384  393 #> [18244,]  374  384  393 #> [18245,]  375  385  394 #> [18246,]  375  385  394 #> [18247,]  375  385  394 #> [18248,]  375  385  394 #> [18249,]  374  384  393 #> [18250,]  375  385  394 #> [18251,]  375  385  394 #> [18252,]  374  384  393 #> [18253,]  375  385  394 #> [18254,]  374  384  393 #> [18255,]  374  384  393 #> [18256,]  375  385  394 #> [18257,]  375  385  394 #> [18258,]  374  384  393 #> [18259,]  375  385  394 #> [18260,]  375  385  394 #> [18261,]  375  385  394 #> [18262,]  375  385  394 #> [18263,]  375  385  394 #> [18264,]  375  385  394 #> [18265,]  375  385  394 #> [18266,]  374  384  393 #> [18267,]  375  385  394 #> [18268,]  375  385  394 #> [18269,]  374  384  393 #> [18270,]  375  385  394 #> [18271,]  375  385  394 #> [18272,]  375  385  394 #> [18273,]  375  385  394 #> [18274,]  375  385  394 #> [18275,]  375  385  394 #> [18276,]  375  385  394 #> [18277,]  375  385  394 #> [18278,]  375  385  394 #> [18279,]  374  384  393 #> [18280,]  374  384  393 #> [18281,]  374  384  393 #> [18282,]  374  384  393 #> [18283,]  374  384  393 #> [18284,]  375  385  394 #> [18285,]  375  385  394 #> [18286,]  375  385  394 #> [18287,]  374  384  393 #> [18288,]  374  384  393 #> [18289,]  374  384  393 #> [18290,]  374  384  393 #> [18291,]  375  385  394 #> [18292,]  374  384  393 #> [18293,]  375  385  394 #> [18294,]  375  385  394 #> [18295,]  374  384  393 #> [18296,]  375  385  394 #> [18297,]  375  385  394 #> [18298,]  375  385  394 #> [18299,]  374  384  393 #> [18300,]  375  385  394 #> [18301,]  377  387  395 #> [18302,]  377  387  395 #> [18303,]  376  386  396 #> [18304,]  376  386  396 #> [18305,]  377  387  395 #> [18306,]  377  387  395 #> [18307,]  376  386  396 #> [18308,]  376  386  396 #> [18309,]  377  387  395 #> [18310,]  376  386  396 #> [18311,]  377  387  395 #> [18312,]  376  386  396 #> [18313,]  377  387  395 #> [18314,]  376  386  396 #> [18315,]  377  387  395 #> [18316,]  376  386  396 #> [18317,]  377  387  395 #> [18318,]  377  387  395 #> [18319,]  377  387  395 #> [18320,]  377  387  395 #> [18321,]  377  387  395 #> [18322,]  377  387  395 #> [18323,]  376  386  396 #> [18324,]  377  387  395 #> [18325,]  376  386  396 #> [18326,]  376  386  396 #> [18327,]  377  387  395 #> [18328,]  377  387  395 #> [18329,]  377  387  395 #> [18330,]  377  387  395 #> [18331,]  376  386  396 #> [18332,]  376  386  396 #> [18333,]  377  387  395 #> [18334,]  377  387  395 #> [18335,]  376  386  396 #> [18336,]  377  387  395 #> [18337,]  376  386  396 #> [18338,]  377  387  395 #> [18339,]  377  387  395 #> [18340,]  376  386  396 #> [18341,]  377  387  395 #> [18342,]  377  387  395 #> [18343,]  377  387  395 #> [18344,]  376  386  396 #> [18345,]  376  386  396 #> [18346,]  376  386  396 #> [18347,]  376  386  396 #> [18348,]  377  387  395 #> [18349,]  377  387  395 #> [18350,]  377  387  395 #> [18351,]  377  387  395 #> [18352,]  376  386  396 #> [18353,]  377  387  395 #> [18354,]  377  387  395 #> [18355,]  376  386  396 #> [18356,]  377  387  395 #> [18357,]  376  386  396 #> [18358,]  377  387  395 #> [18359,]  376  386  396 #> [18360,]  376  386  396 #> [18361,]  377  387  395 #> [18362,]  377  387  395 #> [18363,]  377  387  395 #> [18364,]  377  387  395 #> [18365,]  377  387  395 #> [18366,]  377  387  395 #> [18367,]  376  386  396 #> [18368,]  376  386  396 #> [18369,]  377  387  395 #> [18370,]  377  387  395 #> [18371,]  377  387  395 #> [18372,]  376  386  396 #> [18373,]  377  387  395 #> [18374,]  376  386  396 #> [18375,]  376  386  396 #> [18376,]  376  386  396 #> [18377,]  377  387  395 #> [18378,]  376  386  396 #> [18379,]  377  387  395 #> [18380,]  376  386  396 #> [18381,]  377  387  395 #> [18382,]  377  387  395 #> [18383,]  377  387  395 #> [18384,]  377  387  395 #> [18385,]  377  387  395 #> [18386,]  376  386  396 #> [18387,]  377  387  395 #> [18388,]  376  386  396 #> [18389,]  377  387  395 #> [18390,]  377  387  395 #> [18391,]  377  387  395 #> [18392,]  376  386  396 #> [18393,]  377  387  395 #> [18394,]  377  387  395 #> [18395,]  376  386  396 #> [18396,]  376  386  396 #> [18397,]  376  386  396 #> [18398,]  376  386  396 #> [18399,]  377  387  395 #> [18400,]  377  387  395 #> [18401,]  378  388  397 #> [18402,]  379  389  397 #> [18403,]  378  388  397 #> [18404,]  378  388  397 #> [18405,]  380  389  397 #> [18406,]  378  388  397 #> [18407,]  378  388  397 #> [18408,]  378  388  397 #> [18409,]  380  389  397 #> [18410,]  380  389  397 #> [18411,]  378  388  397 #> [18412,]  379  389  397 #> [18413,]  380  389  397 #> [18414,]  378  388  397 #> [18415,]  378  388  397 #> [18416,]  378  388  397 #> [18417,]  379  389  397 #> [18418,]  379  389  397 #> [18419,]  378  388  397 #> [18420,]  380  389  397 #> [18421,]  379  389  397 #> [18422,]  380  389  397 #> [18423,]  379  389  397 #> [18424,]  380  389  397 #> [18425,]  378  388  397 #> [18426,]  378  388  397 #> [18427,]  380  389  397 #> [18428,]  378  388  397 #> [18429,]  379  389  397 #> [18430,]  379  389  397 #> [18431,]  379  389  397 #> [18432,]  379  389  397 #> [18433,]  380  389  397 #> [18434,]  378  388  397 #> [18435,]  378  388  397 #> [18436,]  380  389  397 #> [18437,]  378  388  397 #> [18438,]  378  388  397 #> [18439,]  378  388  397 #> [18440,]  380  389  397 #> [18441,]  380  389  397 #> [18442,]  378  388  397 #> [18443,]  378  388  397 #> [18444,]  379  389  397 #> [18445,]  378  388  397 #> [18446,]  378  388  397 #> [18447,]  378  388  397 #> [18448,]  379  389  397 #> [18449,]  378  388  397 #> [18450,]  380  389  397 #> [18451,]  378  388  397 #> [18452,]  378  388  397 #> [18453,]  380  389  397 #> [18454,]  380  389  397 #> [18455,]  378  388  397 #> [18456,]  378  388  397 #> [18457,]  378  388  397 #> [18458,]  378  388  397 #> [18459,]  378  388  397 #> [18460,]  379  389  397 #> [18461,]  379  389  397 #> [18462,]  378  388  397 #> [18463,]  379  389  397 #> [18464,]  378  388  397 #> [18465,]  378  388  397 #> [18466,]  378  388  397 #> [18467,]  378  388  397 #> [18468,]  378  388  397 #> [18469,]  378  388  397 #> [18470,]  379  389  397 #> [18471,]  378  388  397 #> [18472,]  378  388  397 #> [18473,]  378  388  397 #> [18474,]  378  388  397 #> [18475,]  379  389  397 #> [18476,]  378  388  397 #> [18477,]  378  388  397 #> [18478,]  379  389  397 #> [18479,]  378  388  397 #> [18480,]  380  389  397 #> [18481,]  379  389  397 #> [18482,]  378  388  397 #> [18483,]  380  389  397 #> [18484,]  380  389  397 #> [18485,]  378  388  397 #> [18486,]  380  389  397 #> [18487,]  380  389  397 #> [18488,]  380  389  397 #> [18489,]  378  388  397 #> [18490,]  378  388  397 #> [18491,]  378  388  397 #> [18492,]  379  389  397 #> [18493,]  379  389  397 #> [18494,]  378  388  397 #> [18495,]  379  389  397 #> [18496,]  378  388  397 #> [18497,]  378  388  397 #> [18498,]  378  388  397 #> [18499,]  378  388  397 #> [18500,]  378  388  397 #> [18501,]  382  391  399 #> [18502,]  382  391  399 #> [18503,]  382  391  399 #> [18504,]  382  391  399 #> [18505,]  382  391  399 #> [18506,]  381  390  398 #> [18507,]  381  390  398 #> [18508,]  382  391  399 #> [18509,]  382  391  399 #> [18510,]  382  391  399 #> [18511,]  382  391  399 #> [18512,]  382  391  399 #> [18513,]  382  391  399 #> [18514,]  382  391  399 #> [18515,]  382  391  399 #> [18516,]  382  391  399 #> [18517,]  382  391  399 #> [18518,]  382  391  399 #> [18519,]  382  391  399 #> [18520,]  381  390  398 #> [18521,]  381  390  398 #> [18522,]  382  391  399 #> [18523,]  382  391  399 #> [18524,]  382  391  399 #> [18525,]  381  390  398 #> [18526,]  382  391  399 #> [18527,]  382  391  399 #> [18528,]  382  391  399 #> [18529,]  382  391  399 #> [18530,]  382  391  399 #> [18531,]  382  391  399 #> [18532,]  382  391  399 #> [18533,]  382  391  399 #> [18534,]  382  391  399 #> [18535,]  381  390  398 #> [18536,]  382  391  399 #> [18537,]  382  391  399 #> [18538,]  382  391  399 #> [18539,]  382  391  399 #> [18540,]  382  391  399 #> [18541,]  382  391  399 #> [18542,]  381  390  398 #> [18543,]  382  391  399 #> [18544,]  381  390  398 #> [18545,]  382  391  399 #> [18546,]  382  391  399 #> [18547,]  382  391  399 #> [18548,]  382  391  399 #> [18549,]  382  391  399 #> [18550,]  382  391  399 #> [18551,]  382  391  399 #> [18552,]  382  391  399 #> [18553,]  381  390  398 #> [18554,]  382  391  399 #> [18555,]  382  391  399 #> [18556,]  381  390  398 #> [18557,]  382  391  399 #> [18558,]  382  391  399 #> [18559,]  382  391  399 #> [18560,]  382  391  399 #> [18561,]  382  391  399 #> [18562,]  382  391  399 #> [18563,]  382  391  399 #> [18564,]  382  391  399 #> [18565,]  381  390  398 #> [18566,]  382  391  399 #> [18567,]  382  391  399 #> [18568,]  382  391  399 #> [18569,]  382  391  399 #> [18570,]  382  391  399 #> [18571,]  382  391  399 #> [18572,]  382  391  399 #> [18573,]  381  390  398 #> [18574,]  381  390  398 #> [18575,]  382  391  399 #> [18576,]  382  391  399 #> [18577,]  382  391  399 #> [18578,]  382  391  399 #> [18579,]  382  391  399 #> [18580,]  381  390  398 #> [18581,]  382  391  399 #> [18582,]  381  390  398 #> [18583,]  382  391  399 #> [18584,]  381  390  398 #> [18585,]  381  390  398 #> [18586,]  381  390  398 #> [18587,]  382  391  399 #> [18588,]  382  391  399 #> [18589,]  381  390  398 #> [18590,]  382  391  399 #> [18591,]  382  391  399 #> [18592,]  382  391  399 #> [18593,]  382  391  399 #> [18594,]  381  390  398 #> [18595,]  382  391  399 #> [18596,]  382  391  399 #> [18597,]  382  391  399 #> [18598,]  382  391  399 #> [18599,]  381  390  398 #> [18600,]  382  391  399 #> [18601,]  384  393  401 #> [18602,]  384  393  401 #> [18603,]  383  392  400 #> [18604,]  383  392  400 #> [18605,]  383  392  400 #> [18606,]  383  392  400 #> [18607,]  384  393  401 #> [18608,]  384  393  401 #> [18609,]  383  392  400 #> [18610,]  383  392  400 #> [18611,]  383  392  400 #> [18612,]  384  393  401 #> [18613,]  384  393  401 #> [18614,]  383  392  400 #> [18615,]  384  393  401 #> [18616,]  384  393  401 #> [18617,]  384  393  401 #> [18618,]  384  393  401 #> [18619,]  384  393  401 #> [18620,]  384  393  401 #> [18621,]  383  392  400 #> [18622,]  384  393  401 #> [18623,]  384  393  401 #> [18624,]  383  392  400 #> [18625,]  383  392  400 #> [18626,]  384  393  401 #> [18627,]  384  393  401 #> [18628,]  383  392  400 #> [18629,]  384  393  401 #> [18630,]  384  393  401 #> [18631,]  383  392  400 #> [18632,]  383  392  400 #> [18633,]  384  393  401 #> [18634,]  383  392  400 #> [18635,]  383  392  400 #> [18636,]  384  393  401 #> [18637,]  384  393  401 #> [18638,]  384  393  401 #> [18639,]  383  392  400 #> [18640,]  383  392  400 #> [18641,]  384  393  401 #> [18642,]  383  392  400 #> [18643,]  384  393  401 #> [18644,]  384  393  401 #> [18645,]  384  393  401 #> [18646,]  384  393  401 #> [18647,]  383  392  400 #> [18648,]  383  392  400 #> [18649,]  384  393  401 #> [18650,]  384  393  401 #> [18651,]  384  393  401 #> [18652,]  383  392  400 #> [18653,]  384  393  401 #> [18654,]  383  392  400 #> [18655,]  384  393  401 #> [18656,]  384  393  401 #> [18657,]  383  392  400 #> [18658,]  384  393  401 #> [18659,]  384  393  401 #> [18660,]  384  393  401 #> [18661,]  384  393  401 #> [18662,]  383  392  400 #> [18663,]  384  393  401 #> [18664,]  384  393  401 #> [18665,]  383  392  400 #> [18666,]  384  393  401 #> [18667,]  383  392  400 #> [18668,]  384  393  401 #> [18669,]  384  393  401 #> [18670,]  383  392  400 #> [18671,]  384  393  401 #> [18672,]  383  392  400 #> [18673,]  383  392  400 #> [18674,]  383  392  400 #> [18675,]  384  393  401 #> [18676,]  383  392  400 #> [18677,]  384  393  401 #> [18678,]  384  393  401 #> [18679,]  383  392  400 #> [18680,]  384  393  401 #> [18681,]  384  393  401 #> [18682,]  383  392  400 #> [18683,]  384  393  401 #> [18684,]  384  393  401 #> [18685,]  384  393  401 #> [18686,]  383  392  400 #> [18687,]  384  393  401 #> [18688,]  383  392  400 #> [18689,]  383  392  400 #> [18690,]  384  393  401 #> [18691,]  383  392  400 #> [18692,]  383  392  400 #> [18693,]  384  393  401 #> [18694,]  383  392  400 #> [18695,]  384  393  401 #> [18696,]  384  393  401 #> [18697,]  384  393  401 #> [18698,]  383  392  400 #> [18699,]  383  392  400 #> [18700,]  384  393  401 #> [18701,]  385  394  402 #> [18702,]  386  395  403 #> [18703,]  386  395  403 #> [18704,]  385  394  402 #> [18705,]  385  394  402 #> [18706,]  386  395  403 #> [18707,]  385  394  402 #> [18708,]  385  394  402 #> [18709,]  385  394  402 #> [18710,]  385  394  402 #> [18711,]  385  394  402 #> [18712,]  386  395  403 #> [18713,]  385  394  402 #> [18714,]  385  394  402 #> [18715,]  385  394  402 #> [18716,]  385  394  402 #> [18717,]  385  394  402 #> [18718,]  386  395  403 #> [18719,]  386  395  403 #> [18720,]  386  395  403 #> [18721,]  385  394  402 #> [18722,]  385  394  402 #> [18723,]  385  394  402 #> [18724,]  385  394  402 #> [18725,]  386  395  403 #> [18726,]  385  394  402 #> [18727,]  385  394  402 #> [18728,]  386  395  403 #> [18729,]  385  394  402 #> [18730,]  385  394  402 #> [18731,]  386  395  403 #> [18732,]  386  395  403 #> [18733,]  386  395  403 #> [18734,]  386  395  403 #> [18735,]  385  394  402 #> [18736,]  385  394  402 #> [18737,]  385  394  402 #> [18738,]  385  394  402 #> [18739,]  385  394  402 #> [18740,]  385  394  402 #> [18741,]  385  394  402 #> [18742,]  386  395  403 #> [18743,]  385  394  402 #> [18744,]  385  394  402 #> [18745,]  385  394  402 #> [18746,]  385  394  402 #> [18747,]  385  394  402 #> [18748,]  385  394  402 #> [18749,]  385  394  402 #> [18750,]  385  394  402 #> [18751,]  385  394  402 #> [18752,]  385  394  402 #> [18753,]  385  394  402 #> [18754,]  385  394  402 #> [18755,]  385  394  402 #> [18756,]  385  394  402 #> [18757,]  385  394  402 #> [18758,]  385  394  402 #> [18759,]  385  394  402 #> [18760,]  386  395  403 #> [18761,]  385  394  402 #> [18762,]  385  394  402 #> [18763,]  385  394  402 #> [18764,]  386  395  403 #> [18765,]  386  395  403 #> [18766,]  385  394  402 #> [18767,]  385  394  402 #> [18768,]  385  394  402 #> [18769,]  385  394  402 #> [18770,]  386  395  403 #> [18771,]  386  395  403 #> [18772,]  385  394  402 #> [18773,]  386  395  403 #> [18774,]  385  394  402 #> [18775,]  385  394  402 #> [18776,]  385  394  402 #> [18777,]  385  394  402 #> [18778,]  385  394  402 #> [18779,]  385  394  402 #> [18780,]  385  394  402 #> [18781,]  385  394  402 #> [18782,]  385  394  402 #> [18783,]  385  394  402 #> [18784,]  386  395  403 #> [18785,]  385  394  402 #> [18786,]  385  394  402 #> [18787,]  385  394  402 #> [18788,]  385  394  402 #> [18789,]  385  394  402 #> [18790,]  385  394  402 #> [18791,]  385  394  402 #> [18792,]  385  394  402 #> [18793,]  386  395  403 #> [18794,]  385  394  402 #> [18795,]  385  394  402 #> [18796,]  385  394  402 #> [18797,]  386  395  403 #> [18798,]  386  395  403 #> [18799,]  385  394  402 #> [18800,]  386  395  403 #> [18801,]  387  397  405 #> [18802,]  387  396  405 #> [18803,]  387  397  404 #> [18804,]  388  397  405 #> [18805,]  387  397  405 #> [18806,]  387  396  404 #> [18807,]  387  397  404 #> [18808,]  387  397  405 #> [18809,]  387  397  405 #> [18810,]  387  397  405 #> [18811,]  387  396  405 #> [18812,]  387  396  405 #> [18813,]  387  397  405 #> [18814,]  388  397  405 #> [18815,]  387  396  405 #> [18816,]  387  397  405 #> [18817,]  387  396  405 #> [18818,]  387  396  405 #> [18819,]  387  396  405 #> [18820,]  387  397  404 #> [18821,]  387  396  404 #> [18822,]  387  397  405 #> [18823,]  387  396  404 #> [18824,]  387  397  405 #> [18825,]  387  397  404 #> [18826,]  387  396  405 #> [18827,]  388  397  405 #> [18828,]  387  397  405 #> [18829,]  387  396  404 #> [18830,]  387  396  405 #> [18831,]  387  396  405 #> [18832,]  387  396  405 #> [18833,]  387  397  405 #> [18834,]  387  396  404 #> [18835,]  387  396  404 #> [18836,]  387  397  405 #> [18837,]  387  396  404 #> [18838,]  387  396  405 #> [18839,]  387  397  405 #> [18840,]  387  396  405 #> [18841,]  387  397  404 #> [18842,]  387  396  404 #> [18843,]  387  396  405 #> [18844,]  387  396  404 #> [18845,]  387  397  404 #> [18846,]  387  396  405 #> [18847,]  387  396  405 #> [18848,]  387  396  405 #> [18849,]  387  397  405 #> [18850,]  387  397  404 #> [18851,]  387  396  405 #> [18852,]  387  397  405 #> [18853,]  387  397  404 #> [18854,]  387  397  404 #> [18855,]  387  397  404 #> [18856,]  387  396  404 #> [18857,]  387  397  404 #> [18858,]  387  397  405 #> [18859,]  387  397  405 #> [18860,]  387  396  404 #> [18861,]  388  396  405 #> [18862,]  387  396  405 #> [18863,]  387  396  405 #> [18864,]  387  396  404 #> [18865,]  387  396  404 #> [18866,]  387  396  405 #> [18867,]  387  397  405 #> [18868,]  387  396  405 #> [18869,]  388  396  405 #> [18870,]  387  396  405 #> [18871,]  387  397  405 #> [18872,]  387  397  405 #> [18873,]  387  397  404 #> [18874,]  387  397  404 #> [18875,]  387  396  405 #> [18876,]  387  397  405 #> [18877,]  387  397  405 #> [18878,]  387  396  405 #> [18879,]  387  396  405 #> [18880,]  387  397  404 #> [18881,]  387  396  404 #> [18882,]  388  396  404 #> [18883,]  387  396  405 #> [18884,]  387  397  404 #> [18885,]  387  397  404 #> [18886,]  387  397  404 #> [18887,]  387  397  405 #> [18888,]  387  397  404 #> [18889,]  387  396  404 #> [18890,]  387  397  405 #> [18891,]  387  397  405 #> [18892,]  388  396  405 #> [18893,]  388  396  405 #> [18894,]  387  396  404 #> [18895,]  387  396  405 #> [18896,]  388  396  405 #> [18897,]  388  396  404 #> [18898,]  387  396  404 #> [18899,]  387  396  404 #> [18900,]  387  396  405 #> [18901,]  389  398  406 #> [18902,]  390  399  407 #> [18903,]  389  398  406 #> [18904,]  389  398  406 #> [18905,]  389  398  406 #> [18906,]  389  398  406 #> [18907,]  389  398  406 #> [18908,]  389  398  406 #> [18909,]  390  399  407 #> [18910,]  390  399  407 #> [18911,]  389  398  406 #> [18912,]  390  399  407 #> [18913,]  389  398  406 #> [18914,]  389  398  406 #> [18915,]  389  398  406 #> [18916,]  389  398  406 #> [18917,]  389  398  406 #> [18918,]  389  398  406 #> [18919,]  389  398  406 #> [18920,]  389  398  406 #> [18921,]  390  399  407 #> [18922,]  389  398  406 #> [18923,]  389  398  406 #> [18924,]  389  398  406 #> [18925,]  389  398  406 #> [18926,]  389  398  406 #> [18927,]  389  398  406 #> [18928,]  389  398  406 #> [18929,]  390  399  407 #> [18930,]  389  398  406 #> [18931,]  389  398  406 #> [18932,]  389  398  406 #> [18933,]  390  399  407 #> [18934,]  389  398  406 #> [18935,]  389  398  406 #> [18936,]  389  398  406 #> [18937,]  389  398  406 #> [18938,]  389  398  406 #> [18939,]  389  398  406 #> [18940,]  389  398  406 #> [18941,]  389  398  406 #> [18942,]  389  398  406 #> [18943,]  389  398  406 #> [18944,]  389  398  406 #> [18945,]  389  398  406 #> [18946,]  389  398  406 #> [18947,]  389  398  406 #> [18948,]  389  398  406 #> [18949,]  389  398  406 #> [18950,]  389  398  406 #> [18951,]  389  398  406 #> [18952,]  389  398  406 #> [18953,]  389  398  406 #> [18954,]  389  398  406 #> [18955,]  389  398  406 #> [18956,]  389  398  406 #> [18957,]  389  398  406 #> [18958,]  389  398  406 #> [18959,]  389  398  406 #> [18960,]  390  399  407 #> [18961,]  389  398  406 #> [18962,]  389  398  406 #> [18963,]  389  398  406 #> [18964,]  389  398  406 #> [18965,]  389  398  406 #> [18966,]  389  398  406 #> [18967,]  389  398  406 #> [18968,]  389  398  406 #> [18969,]  389  398  406 #> [18970,]  390  399  407 #> [18971,]  389  398  406 #> [18972,]  389  398  406 #> [18973,]  389  398  406 #> [18974,]  389  398  406 #> [18975,]  389  398  406 #> [18976,]  389  398  406 #> [18977,]  389  398  406 #> [18978,]  389  398  406 #> [18979,]  389  398  406 #> [18980,]  389  398  406 #> [18981,]  390  399  407 #> [18982,]  389  398  406 #> [18983,]  389  398  406 #> [18984,]  389  398  406 #> [18985,]  389  398  406 #> [18986,]  390  399  407 #> [18987,]  389  398  406 #> [18988,]  389  398  406 #> [18989,]  389  398  406 #> [18990,]  389  398  406 #> [18991,]  389  398  406 #> [18992,]  389  398  406 #> [18993,]  389  398  406 #> [18994,]  389  398  406 #> [18995,]  389  398  406 #> [18996,]  389  398  406 #> [18997,]  389  398  406 #> [18998,]  389  398  406 #> [18999,]  389  398  406 #> [19000,]  389  398  406 #> [19001,]  392  401  409 #> [19002,]  391  400  408 #> [19003,]  391  400  408 #> [19004,]  392  401  409 #> [19005,]  391  400  408 #> [19006,]  391  400  408 #> [19007,]  392  401  409 #> [19008,]  392  401  409 #> [19009,]  392  401  409 #> [19010,]  392  401  409 #> [19011,]  391  400  408 #> [19012,]  391  400  408 #> [19013,]  392  401  409 #> [19014,]  391  400  408 #> [19015,]  392  401  409 #> [19016,]  392  401  409 #> [19017,]  392  401  409 #> [19018,]  392  401  409 #> [19019,]  391  400  408 #> [19020,]  391  400  408 #> [19021,]  392  401  409 #> [19022,]  391  400  408 #> [19023,]  392  401  409 #> [19024,]  391  400  408 #> [19025,]  392  401  409 #> [19026,]  391  400  408 #> [19027,]  392  401  409 #> [19028,]  392  401  409 #> [19029,]  391  400  408 #> [19030,]  391  400  408 #> [19031,]  391  400  408 #> [19032,]  391  400  408 #> [19033,]  391  400  408 #> [19034,]  391  400  408 #> [19035,]  391  400  408 #> [19036,]  391  400  408 #> [19037,]  392  401  409 #> [19038,]  392  401  409 #> [19039,]  392  401  409 #> [19040,]  391  400  408 #> [19041,]  391  400  408 #> [19042,]  391  400  408 #> [19043,]  392  401  409 #> [19044,]  392  401  409 #> [19045,]  392  401  409 #> [19046,]  392  401  409 #> [19047,]  392  401  409 #> [19048,]  391  400  408 #> [19049,]  391  400  408 #> [19050,]  391  400  408 #> [19051,]  391  400  408 #> [19052,]  391  400  408 #> [19053,]  392  401  409 #> [19054,]  391  400  408 #> [19055,]  391  400  408 #> [19056,]  392  401  409 #> [19057,]  391  400  408 #> [19058,]  391  400  408 #> [19059,]  391  400  408 #> [19060,]  391  400  408 #> [19061,]  392  401  409 #> [19062,]  391  400  408 #> [19063,]  391  400  408 #> [19064,]  392  401  409 #> [19065,]  391  400  408 #> [19066,]  391  400  408 #> [19067,]  391  400  408 #> [19068,]  391  400  408 #> [19069,]  391  400  408 #> [19070,]  392  401  409 #> [19071,]  392  401  409 #> [19072,]  392  401  409 #> [19073,]  392  401  409 #> [19074,]  392  401  409 #> [19075,]  392  401  409 #> [19076,]  392  401  409 #> [19077,]  392  401  409 #> [19078,]  391  400  408 #> [19079,]  392  401  409 #> [19080,]  391  400  408 #> [19081,]  391  400  408 #> [19082,]  392  401  409 #> [19083,]  391  400  408 #> [19084,]  392  401  409 #> [19085,]  391  400  408 #> [19086,]  392  401  409 #> [19087,]  392  401  409 #> [19088,]  392  401  409 #> [19089,]  391  400  408 #> [19090,]  392  401  409 #> [19091,]  391  400  408 #> [19092,]  391  400  408 #> [19093,]  391  400  408 #> [19094,]  392  401  409 #> [19095,]  392  401  409 #> [19096,]  392  401  409 #> [19097,]  391  400  408 #> [19098,]  391  400  408 #> [19099,]  391  400  408 #> [19100,]  392  401  409 #> [19101,]  394  403  411 #> [19102,]  394  403  411 #> [19103,]  393  402  410 #> [19104,]  393  402  410 #> [19105,]  393  402  410 #> [19106,]  394  403  411 #> [19107,]  394  403  411 #> [19108,]  393  402  410 #> [19109,]  393  402  410 #> [19110,]  393  402  410 #> [19111,]  394  403  411 #> [19112,]  393  402  410 #> [19113,]  394  403  411 #> [19114,]  394  403  411 #> [19115,]  394  403  411 #> [19116,]  394  403  411 #> [19117,]  394  403  411 #> [19118,]  393  402  410 #> [19119,]  394  403  411 #> [19120,]  393  402  410 #> [19121,]  394  403  411 #> [19122,]  394  403  411 #> [19123,]  393  402  410 #> [19124,]  393  402  410 #> [19125,]  394  403  411 #> [19126,]  394  403  411 #> [19127,]  394  403  411 #> [19128,]  394  403  411 #> [19129,]  394  403  411 #> [19130,]  393  402  410 #> [19131,]  393  402  410 #> [19132,]  393  402  410 #> [19133,]  394  403  411 #> [19134,]  393  402  410 #> [19135,]  394  403  411 #> [19136,]  393  402  410 #> [19137,]  394  403  411 #> [19138,]  393  402  410 #> [19139,]  393  402  410 #> [19140,]  394  403  411 #> [19141,]  394  403  411 #> [19142,]  393  402  410 #> [19143,]  393  402  410 #> [19144,]  394  403  411 #> [19145,]  393  402  410 #> [19146,]  394  403  411 #> [19147,]  394  403  411 #> [19148,]  393  402  410 #> [19149,]  393  402  410 #> [19150,]  394  403  411 #> [19151,]  393  402  410 #> [19152,]  394  403  411 #> [19153,]  393  402  410 #> [19154,]  394  403  411 #> [19155,]  394  403  411 #> [19156,]  393  402  410 #> [19157,]  394  403  411 #> [19158,]  394  403  411 #> [19159,]  394  403  411 #> [19160,]  393  402  410 #> [19161,]  394  403  411 #> [19162,]  393  402  410 #> [19163,]  394  403  411 #> [19164,]  393  402  410 #> [19165,]  393  402  410 #> [19166,]  393  402  410 #> [19167,]  393  402  410 #> [19168,]  394  403  411 #> [19169,]  394  403  411 #> [19170,]  394  403  411 #> [19171,]  394  403  411 #> [19172,]  393  402  410 #> [19173,]  394  403  411 #> [19174,]  394  403  411 #> [19175,]  394  403  411 #> [19176,]  394  403  411 #> [19177,]  394  403  411 #> [19178,]  393  402  410 #> [19179,]  394  403  411 #> [19180,]  394  403  411 #> [19181,]  394  403  411 #> [19182,]  394  403  411 #> [19183,]  394  403  411 #> [19184,]  394  403  411 #> [19185,]  393  402  410 #> [19186,]  394  403  411 #> [19187,]  394  403  411 #> [19188,]  393  402  410 #> [19189,]  393  402  410 #> [19190,]  394  403  411 #> [19191,]  393  402  410 #> [19192,]  394  403  411 #> [19193,]  394  403  411 #> [19194,]  394  403  411 #> [19195,]  393  402  410 #> [19196,]  394  403  411 #> [19197,]  394  403  411 #> [19198,]  394  403  411 #> [19199,]  394  403  411 #> [19200,]  394  403  411 #> [19201,]  395  404  412 #> [19202,]  395  404  412 #> [19203,]  395  404  412 #> [19204,]  396  405  414 #> [19205,]  395  404  412 #> [19206,]  395  404  412 #> [19207,]  396  405  413 #> [19208,]  395  404  412 #> [19209,]  395  404  412 #> [19210,]  396  405  414 #> [19211,]  395  404  412 #> [19212,]  395  404  412 #> [19213,]  395  404  412 #> [19214,]  395  404  412 #> [19215,]  396  405  413 #> [19216,]  396  405  413 #> [19217,]  396  405  413 #> [19218,]  396  405  414 #> [19219,]  395  404  412 #> [19220,]  395  404  412 #> [19221,]  396  405  414 #> [19222,]  395  404  412 #> [19223,]  396  405  413 #> [19224,]  395  404  412 #> [19225,]  396  405  414 #> [19226,]  395  404  412 #> [19227,]  396  405  413 #> [19228,]  396  405  413 #> [19229,]  395  404  412 #> [19230,]  395  404  412 #> [19231,]  395  404  412 #> [19232,]  395  404  412 #> [19233,]  395  404  412 #> [19234,]  395  404  412 #> [19235,]  395  404  412 #> [19236,]  395  404  412 #> [19237,]  395  404  412 #> [19238,]  395  404  412 #> [19239,]  396  405  414 #> [19240,]  395  404  412 #> [19241,]  395  404  412 #> [19242,]  395  404  412 #> [19243,]  396  405  414 #> [19244,]  395  404  412 #> [19245,]  396  405  414 #> [19246,]  395  404  412 #> [19247,]  396  405  413 #> [19248,]  395  404  412 #> [19249,]  395  404  412 #> [19250,]  395  404  412 #> [19251,]  395  404  412 #> [19252,]  395  404  412 #> [19253,]  396  405  414 #> [19254,]  395  404  412 #> [19255,]  395  404  412 #> [19256,]  395  404  412 #> [19257,]  395  404  412 #> [19258,]  395  404  412 #> [19259,]  395  404  412 #> [19260,]  395  404  412 #> [19261,]  396  405  414 #> [19262,]  395  404  412 #> [19263,]  395  404  412 #> [19264,]  396  405  413 #> [19265,]  395  404  412 #> [19266,]  395  404  412 #> [19267,]  395  404  412 #> [19268,]  395  404  412 #> [19269,]  395  404  412 #> [19270,]  395  404  412 #> [19271,]  396  405  413 #> [19272,]  396  405  414 #> [19273,]  396  405  414 #> [19274,]  396  405  414 #> [19275,]  396  405  414 #> [19276,]  396  405  414 #> [19277,]  396  405  414 #> [19278,]  395  404  412 #> [19279,]  395  404  412 #> [19280,]  395  404  412 #> [19281,]  395  404  412 #> [19282,]  395  404  412 #> [19283,]  395  404  412 #> [19284,]  396  405  414 #> [19285,]  395  404  412 #> [19286,]  395  404  412 #> [19287,]  395  404  412 #> [19288,]  396  405  413 #> [19289,]  395  404  412 #> [19290,]  395  404  412 #> [19291,]  395  404  412 #> [19292,]  395  404  412 #> [19293,]  395  404  412 #> [19294,]  396  405  414 #> [19295,]  396  405  414 #> [19296,]  395  404  412 #> [19297,]  395  404  412 #> [19298,]  395  404  412 #> [19299,]  395  404  412 #> [19300,]  396  405  414 #> [19301,]  398  407  416 #> [19302,]  398  406  415 #> [19303,]  398  407  416 #> [19304,]  397  407  416 #> [19305,]  398  407  416 #> [19306,]  398  406  415 #> [19307,]  398  407  416 #> [19308,]  397  407  416 #> [19309,]  397  407  416 #> [19310,]  398  407  416 #> [19311,]  397  406  415 #> [19312,]  398  406  415 #> [19313,]  397  407  416 #> [19314,]  398  407  416 #> [19315,]  398  406  415 #> [19316,]  398  407  416 #> [19317,]  397  406  415 #> [19318,]  398  406  415 #> [19319,]  398  406  415 #> [19320,]  398  407  416 #> [19321,]  398  406  415 #> [19322,]  397  407  416 #> [19323,]  398  406  415 #> [19324,]  398  407  416 #> [19325,]  398  407  416 #> [19326,]  398  406  415 #> [19327,]  397  407  416 #> [19328,]  398  407  416 #> [19329,]  398  406  415 #> [19330,]  398  406  415 #> [19331,]  398  406  415 #> [19332,]  398  406  415 #> [19333,]  398  407  416 #> [19334,]  398  406  415 #> [19335,]  397  406  415 #> [19336,]  398  407  416 #> [19337,]  398  406  415 #> [19338,]  398  407  416 #> [19339,]  398  407  416 #> [19340,]  398  407  416 #> [19341,]  398  407  416 #> [19342,]  398  406  415 #> [19343,]  397  406  415 #> [19344,]  397  406  415 #> [19345,]  398  407  416 #> [19346,]  398  406  415 #> [19347,]  398  406  415 #> [19348,]  398  406  415 #> [19349,]  397  407  416 #> [19350,]  398  407  416 #> [19351,]  398  406  415 #> [19352,]  397  407  416 #> [19353,]  398  407  416 #> [19354,]  398  407  416 #> [19355,]  397  407  416 #> [19356,]  398  406  415 #> [19357,]  398  407  416 #> [19358,]  397  407  416 #> [19359,]  398  407  416 #> [19360,]  398  406  415 #> [19361,]  398  406  415 #> [19362,]  398  406  415 #> [19363,]  398  406  415 #> [19364,]  398  406  415 #> [19365,]  398  406  415 #> [19366,]  397  406  415 #> [19367,]  398  407  416 #> [19368,]  398  406  415 #> [19369,]  397  406  415 #> [19370,]  398  406  415 #> [19371,]  398  407  416 #> [19372,]  398  407  416 #> [19373,]  398  407  416 #> [19374,]  398  407  416 #> [19375,]  398  406  415 #> [19376,]  398  407  416 #> [19377,]  398  407  416 #> [19378,]  398  406  415 #> [19379,]  397  406  415 #> [19380,]  397  407  416 #> [19381,]  397  406  415 #> [19382,]  397  406  415 #> [19383,]  397  407  416 #> [19384,]  398  407  416 #> [19385,]  398  407  416 #> [19386,]  398  407  416 #> [19387,]  397  407  416 #> [19388,]  397  407  416 #> [19389,]  397  406  415 #> [19390,]  397  407  416 #> [19391,]  398  407  416 #> [19392,]  397  406  415 #> [19393,]  398  406  415 #> [19394,]  398  406  415 #> [19395,]  397  406  415 #> [19396,]  398  406  415 #> [19397,]  398  406  415 #> [19398,]  398  406  415 #> [19399,]  397  407  416 #> [19400,]  398  406  415 #> [19401,]  400  409  418 #> [19402,]  400  409  418 #> [19403,]  399  408  417 #> [19404,]  400  409  418 #> [19405,]  400  409  418 #> [19406,]  400  409  418 #> [19407,]  399  408  417 #> [19408,]  400  409  418 #> [19409,]  400  409  418 #> [19410,]  400  409  418 #> [19411,]  400  409  418 #> [19412,]  400  409  418 #> [19413,]  399  408  417 #> [19414,]  400  409  418 #> [19415,]  400  409  418 #> [19416,]  399  408  417 #> [19417,]  400  409  418 #> [19418,]  400  409  418 #> [19419,]  399  408  417 #> [19420,]  400  409  418 #> [19421,]  399  408  417 #> [19422,]  400  409  418 #> [19423,]  399  408  417 #> [19424,]  400  409  418 #> [19425,]  400  409  418 #> [19426,]  400  409  418 #> [19427,]  400  409  418 #> [19428,]  400  409  418 #> [19429,]  400  409  418 #> [19430,]  399  408  417 #> [19431,]  399  408  417 #> [19432,]  400  409  418 #> [19433,]  400  409  418 #> [19434,]  400  409  418 #> [19435,]  399  408  417 #> [19436,]  399  408  417 #> [19437,]  399  408  417 #> [19438,]  400  409  418 #> [19439,]  399  408  417 #> [19440,]  399  408  417 #> [19441,]  400  409  418 #> [19442,]  400  409  418 #> [19443,]  400  409  418 #> [19444,]  400  409  418 #> [19445,]  400  409  418 #> [19446,]  400  409  418 #> [19447,]  399  408  417 #> [19448,]  400  409  418 #> [19449,]  399  408  417 #> [19450,]  400  409  418 #> [19451,]  400  409  418 #> [19452,]  400  409  418 #> [19453,]  400  409  418 #> [19454,]  399  408  417 #> [19455,]  400  409  418 #> [19456,]  400  409  418 #> [19457,]  400  409  418 #> [19458,]  400  409  418 #> [19459,]  400  409  418 #> [19460,]  400  409  418 #> [19461,]  400  409  418 #> [19462,]  399  408  417 #> [19463,]  400  409  418 #> [19464,]  400  409  418 #> [19465,]  400  409  418 #> [19466,]  400  409  418 #> [19467,]  400  409  418 #> [19468,]  400  409  418 #> [19469,]  400  409  418 #> [19470,]  399  408  417 #> [19471,]  400  409  418 #> [19472,]  400  409  418 #> [19473,]  400  409  418 #> [19474,]  400  409  418 #> [19475,]  400  409  418 #> [19476,]  400  409  418 #> [19477,]  399  408  417 #> [19478,]  400  409  418 #> [19479,]  399  408  417 #> [19480,]  399  408  417 #> [19481,]  400  409  418 #> [19482,]  400  409  418 #> [19483,]  399  408  417 #> [19484,]  400  409  418 #> [19485,]  400  409  418 #> [19486,]  400  409  418 #> [19487,]  400  409  418 #> [19488,]  400  409  418 #> [19489,]  400  409  418 #> [19490,]  400  409  418 #> [19491,]  400  409  418 #> [19492,]  400  409  418 #> [19493,]  399  408  417 #> [19494,]  400  409  418 #> [19495,]  399  408  417 #> [19496,]  400  409  418 #> [19497,]  400  409  418 #> [19498,]  399  408  417 #> [19499,]  400  409  418 #> [19500,]  400  409  418 #> [19501,]  403  411  420 #> [19502,]  402  411  420 #> [19503,]  402  411  420 #> [19504,]  402  411  420 #> [19505,]  403  411  420 #> [19506,]  402  411  420 #> [19507,]  402  411  420 #> [19508,]  401  410  419 #> [19509,]  401  410  419 #> [19510,]  403  411  420 #> [19511,]  403  411  420 #> [19512,]  403  411  420 #> [19513,]  402  411  420 #> [19514,]  403  411  420 #> [19515,]  403  411  420 #> [19516,]  402  411  420 #> [19517,]  403  411  420 #> [19518,]  403  411  420 #> [19519,]  402  411  420 #> [19520,]  402  411  420 #> [19521,]  402  411  420 #> [19522,]  403  411  420 #> [19523,]  402  411  420 #> [19524,]  402  411  420 #> [19525,]  402  411  420 #> [19526,]  401  410  419 #> [19527,]  403  411  420 #> [19528,]  402  411  420 #> [19529,]  402  411  420 #> [19530,]  402  411  420 #> [19531,]  403  411  420 #> [19532,]  403  411  420 #> [19533,]  402  411  420 #> [19534,]  402  411  420 #> [19535,]  402  411  420 #> [19536,]  402  411  420 #> [19537,]  402  411  420 #> [19538,]  403  411  420 #> [19539,]  402  411  420 #> [19540,]  402  411  420 #> [19541,]  402  411  420 #> [19542,]  402  411  420 #> [19543,]  401  410  419 #> [19544,]  402  411  420 #> [19545,]  402  411  420 #> [19546,]  401  410  419 #> [19547,]  403  411  420 #> [19548,]  402  411  420 #> [19549,]  402  411  420 #> [19550,]  402  411  420 #> [19551,]  402  411  420 #> [19552,]  403  411  420 #> [19553,]  402  411  420 #> [19554,]  402  411  420 #> [19555,]  402  411  420 #> [19556,]  401  410  419 #> [19557,]  402  411  420 #> [19558,]  403  411  420 #> [19559,]  403  411  420 #> [19560,]  402  411  420 #> [19561,]  401  410  419 #> [19562,]  402  411  420 #> [19563,]  402  411  420 #> [19564,]  401  410  419 #> [19565,]  402  411  420 #> [19566,]  403  411  420 #> [19567,]  402  411  420 #> [19568,]  402  411  420 #> [19569,]  402  411  420 #> [19570,]  403  411  420 #> [19571,]  403  411  420 #> [19572,]  402  411  420 #> [19573,]  402  411  420 #> [19574,]  402  411  420 #> [19575,]  403  411  420 #> [19576,]  401  410  419 #> [19577,]  403  411  420 #> [19578,]  402  411  420 #> [19579,]  403  411  420 #> [19580,]  402  411  420 #> [19581,]  402  411  420 #> [19582,]  402  411  420 #> [19583,]  402  411  420 #> [19584,]  402  411  420 #> [19585,]  402  411  420 #> [19586,]  402  411  420 #> [19587,]  403  411  420 #> [19588,]  402  411  420 #> [19589,]  402  411  420 #> [19590,]  403  411  420 #> [19591,]  403  411  420 #> [19592,]  403  411  420 #> [19593,]  402  411  420 #> [19594,]  401  410  419 #> [19595,]  403  411  420 #> [19596,]  402  411  420 #> [19597,]  402  411  420 #> [19598,]  402  411  420 #> [19599,]  402  411  420 #> [19600,]  403  411  420 #> [19601,]  406  413  422 #> [19602,]  405  413  422 #> [19603,]  405  413  421 #> [19604,]  406  413  421 #> [19605,]  405  413  421 #> [19606,]  405  413  422 #> [19607,]  406  413  422 #> [19608,]  406  413  421 #> [19609,]  404  412  421 #> [19610,]  406  413  421 #> [19611,]  405  413  422 #> [19612,]  405  413  421 #> [19613,]  404  412  422 #> [19614,]  405  413  422 #> [19615,]  406  413  422 #> [19616,]  406  413  422 #> [19617,]  404  412  422 #> [19618,]  404  412  421 #> [19619,]  405  413  422 #> [19620,]  405  413  421 #> [19621,]  406  413  422 #> [19622,]  405  413  422 #> [19623,]  406  413  421 #> [19624,]  405  413  421 #> [19625,]  406  413  421 #> [19626,]  405  413  422 #> [19627,]  406  413  422 #> [19628,]  406  413  421 #> [19629,]  405  413  422 #> [19630,]  405  413  421 #> [19631,]  405  413  421 #> [19632,]  405  413  421 #> [19633,]  405  413  422 #> [19634,]  405  413  421 #> [19635,]  405  413  422 #> [19636,]  405  413  421 #> [19637,]  406  413  422 #> [19638,]  406  413  421 #> [19639,]  406  413  421 #> [19640,]  405  413  422 #> [19641,]  405  413  422 #> [19642,]  404  412  421 #> [19643,]  406  413  421 #> [19644,]  406  413  422 #> [19645,]  406  413  421 #> [19646,]  406  413  422 #> [19647,]  406  413  422 #> [19648,]  405  413  421 #> [19649,]  405  413  421 #> [19650,]  405  413  422 #> [19651,]  404  412  421 #> [19652,]  405  413  422 #> [19653,]  404  412  421 #> [19654,]  405  413  421 #> [19655,]  405  413  422 #> [19656,]  406  413  421 #> [19657,]  405  413  421 #> [19658,]  405  413  422 #> [19659,]  405  413  422 #> [19660,]  405  413  421 #> [19661,]  406  413  422 #> [19662,]  405  413  421 #> [19663,]  405  413  422 #> [19664,]  406  413  421 #> [19665,]  404  412  421 #> [19666,]  405  413  421 #> [19667,]  405  413  421 #> [19668,]  405  413  422 #> [19669,]  405  413  422 #> [19670,]  406  413  422 #> [19671,]  406  413  422 #> [19672,]  406  413  421 #> [19673,]  406  413  422 #> [19674,]  406  413  422 #> [19675,]  406  413  422 #> [19676,]  406  413  422 #> [19677,]  406  413  422 #> [19678,]  405  413  421 #> [19679,]  404  412  422 #> [19680,]  405  413  421 #> [19681,]  405  413  422 #> [19682,]  404  412  422 #> [19683,]  405  413  422 #> [19684,]  404  412  422 #> [19685,]  405  413  421 #> [19686,]  406  413  422 #> [19687,]  406  413  422 #> [19688,]  406  413  421 #> [19689,]  405  413  421 #> [19690,]  406  413  422 #> [19691,]  404  412  421 #> [19692,]  405  413  422 #> [19693,]  404  412  422 #> [19694,]  404  412  422 #> [19695,]  406  413  421 #> [19696,]  406  413  422 #> [19697,]  405  413  422 #> [19698,]  405  413  422 #> [19699,]  405  413  422 #> [19700,]  406  413  422 #> [19701,]  407  414  423 #> [19702,]  407  414  423 #> [19703,]  407  414  423 #> [19704,]  407  414  423 #> [19705,]  407  414  423 #> [19706,]  408  415  424 #> [19707,]  407  414  423 #> [19708,]  408  415  424 #> [19709,]  408  415  424 #> [19710,]  407  414  423 #> [19711,]  407  414  423 #> [19712,]  408  415  424 #> [19713,]  407  414  423 #> [19714,]  407  414  423 #> [19715,]  408  415  424 #> [19716,]  407  414  423 #> [19717,]  407  414  423 #> [19718,]  407  414  423 #> [19719,]  407  414  423 #> [19720,]  407  414  423 #> [19721,]  407  414  423 #> [19722,]  407  414  423 #> [19723,]  407  414  423 #> [19724,]  407  414  423 #> [19725,]  407  414  423 #> [19726,]  408  415  424 #> [19727,]  407  414  423 #> [19728,]  407  414  423 #> [19729,]  407  414  423 #> [19730,]  407  414  423 #> [19731,]  407  414  423 #> [19732,]  407  414  423 #> [19733,]  408  415  424 #> [19734,]  407  414  423 #> [19735,]  407  414  423 #> [19736,]  407  414  423 #> [19737,]  407  414  423 #> [19738,]  407  414  423 #> [19739,]  407  414  423 #> [19740,]  407  414  423 #> [19741,]  407  414  423 #> [19742,]  407  414  423 #> [19743,]  408  415  424 #> [19744,]  407  414  423 #> [19745,]  407  414  423 #> [19746,]  408  415  424 #> [19747,]  407  414  423 #> [19748,]  407  414  423 #> [19749,]  407  414  423 #> [19750,]  407  414  423 #> [19751,]  408  415  424 #> [19752,]  407  414  423 #> [19753,]  407  414  423 #> [19754,]  407  414  423 #> [19755,]  407  414  423 #> [19756,]  408  415  424 #> [19757,]  407  414  423 #> [19758,]  407  414  423 #> [19759,]  407  414  423 #> [19760,]  407  414  423 #> [19761,]  408  415  424 #> [19762,]  407  414  423 #> [19763,]  407  414  423 #> [19764,]  408  415  424 #> [19765,]  407  414  423 #> [19766,]  408  415  424 #> [19767,]  407  414  423 #> [19768,]  408  415  424 #> [19769,]  407  414  423 #> [19770,]  407  414  423 #> [19771,]  407  414  423 #> [19772,]  407  414  423 #> [19773,]  407  414  423 #> [19774,]  407  414  423 #> [19775,]  407  414  423 #> [19776,]  408  415  424 #> [19777,]  407  414  423 #> [19778,]  407  414  423 #> [19779,]  407  414  423 #> [19780,]  407  414  423 #> [19781,]  407  414  423 #> [19782,]  407  414  423 #> [19783,]  407  414  423 #> [19784,]  407  414  423 #> [19785,]  407  414  423 #> [19786,]  407  414  423 #> [19787,]  407  414  423 #> [19788,]  407  414  423 #> [19789,]  407  414  423 #> [19790,]  407  414  423 #> [19791,]  407  414  423 #> [19792,]  407  414  423 #> [19793,]  407  414  423 #> [19794,]  408  415  424 #> [19795,]  407  414  423 #> [19796,]  407  414  423 #> [19797,]  407  414  423 #> [19798,]  407  414  423 #> [19799,]  407  414  423 #> [19800,]  407  414  423 #> [19801,]  410  417  426 #> [19802,]  410  417  426 #> [19803,]  409  416  425 #> [19804,]  410  416  425 #> [19805,]  410  417  426 #> [19806,]  410  417  426 #> [19807,]  410  416  425 #> [19808,]  410  416  425 #> [19809,]  410  417  426 #> [19810,]  410  417  426 #> [19811,]  410  417  426 #> [19812,]  409  416  425 #> [19813,]  410  417  426 #> [19814,]  409  417  426 #> [19815,]  410  417  426 #> [19816,]  410  417  426 #> [19817,]  410  417  426 #> [19818,]  410  417  426 #> [19819,]  410  417  426 #> [19820,]  410  417  426 #> [19821,]  410  417  426 #> [19822,]  410  417  426 #> [19823,]  410  416  425 #> [19824,]  410  417  426 #> [19825,]  410  416  425 #> [19826,]  409  417  426 #> [19827,]  410  417  426 #> [19828,]  410  417  426 #> [19829,]  410  417  426 #> [19830,]  410  417  426 #> [19831,]  410  416  425 #> [19832,]  409  416  425 #> [19833,]  410  417  426 #> [19834,]  410  417  426 #> [19835,]  410  417  426 #> [19836,]  410  417  426 #> [19837,]  410  416  425 #> [19838,]  410  417  426 #> [19839,]  410  417  426 #> [19840,]  410  416  425 #> [19841,]  410  417  426 #> [19842,]  410  417  426 #> [19843,]  410  417  426 #> [19844,]  410  417  426 #> [19845,]  410  417  426 #> [19846,]  410  416  425 #> [19847,]  410  416  425 #> [19848,]  410  417  426 #> [19849,]  410  417  426 #> [19850,]  410  417  426 #> [19851,]  409  417  426 #> [19852,]  410  416  425 #> [19853,]  410  417  426 #> [19854,]  409  417  426 #> [19855,]  410  416  425 #> [19856,]  410  417  426 #> [19857,]  410  416  425 #> [19858,]  410  417  426 #> [19859,]  410  416  425 #> [19860,]  410  416  425 #> [19861,]  410  417  426 #> [19862,]  410  417  426 #> [19863,]  410  417  426 #> [19864,]  410  417  426 #> [19865,]  410  417  426 #> [19866,]  409  417  426 #> [19867,]  410  417  426 #> [19868,]  410  416  425 #> [19869,]  409  417  426 #> [19870,]  410  417  426 #> [19871,]  410  417  426 #> [19872,]  410  416  425 #> [19873,]  410  417  426 #> [19874,]  410  416  425 #> [19875,]  410  417  426 #> [19876,]  410  416  425 #> [19877,]  410  417  426 #> [19878,]  410  416  425 #> [19879,]  410  417  426 #> [19880,]  409  416  425 #> [19881,]  410  417  426 #> [19882,]  410  417  426 #> [19883,]  410  417  426 #> [19884,]  410  417  426 #> [19885,]  410  417  426 #> [19886,]  410  416  425 #> [19887,]  410  417  426 #> [19888,]  410  417  426 #> [19889,]  410  417  426 #> [19890,]  410  417  426 #> [19891,]  410  417  426 #> [19892,]  410  416  425 #> [19893,]  410  417  426 #> [19894,]  410  417  426 #> [19895,]  410  417  426 #> [19896,]  410  416  425 #> [19897,]  410  416  425 #> [19898,]  410  416  425 #> [19899,]  410  417  426 #> [19900,]  410  417  426 #> [19901,]  411  418  427 #> [19902,]  411  418  427 #> [19903,]  411  418  427 #> [19904,]  411  420  428 #> [19905,]  411  418  427 #> [19906,]  411  418  427 #> [19907,]  411  418  427 #> [19908,]  411  419  428 #> [19909,]  411  419  428 #> [19910,]  411  418  427 #> [19911,]  411  418  427 #> [19912,]  411  418  427 #> [19913,]  411  418  427 #> [19914,]  411  418  427 #> [19915,]  411  418  427 #> [19916,]  411  418  427 #> [19917,]  411  420  428 #> [19918,]  411  418  427 #> [19919,]  411  418  427 #> [19920,]  411  418  427 #> [19921,]  411  418  427 #> [19922,]  411  418  427 #> [19923,]  411  418  427 #> [19924,]  411  418  427 #> [19925,]  411  418  427 #> [19926,]  411  418  427 #> [19927,]  411  420  428 #> [19928,]  411  418  427 #> [19929,]  411  418  427 #> [19930,]  411  418  427 #> [19931,]  411  418  427 #> [19932,]  411  418  427 #> [19933,]  411  418  427 #> [19934,]  411  418  427 #> [19935,]  411  418  427 #> [19936,]  411  418  427 #> [19937,]  411  418  427 #> [19938,]  411  418  427 #> [19939,]  411  418  427 #> [19940,]  411  418  427 #> [19941,]  411  418  427 #> [19942,]  411  418  427 #> [19943,]  411  418  427 #> [19944,]  411  419  428 #> [19945,]  411  418  427 #> [19946,]  411  418  427 #> [19947,]  411  418  427 #> [19948,]  411  418  427 #> [19949,]  411  418  427 #> [19950,]  411  418  427 #> [19951,]  411  418  427 #> [19952,]  411  420  428 #> [19953,]  411  418  427 #> [19954,]  411  418  427 #> [19955,]  411  418  427 #> [19956,]  411  418  427 #> [19957,]  411  418  427 #> [19958,]  411  418  427 #> [19959,]  411  418  427 #> [19960,]  411  418  427 #> [19961,]  411  418  427 #> [19962,]  411  418  427 #> [19963,]  411  418  427 #> [19964,]  411  418  427 #> [19965,]  411  418  427 #> [19966,]  411  418  427 #> [19967,]  411  418  427 #> [19968,]  411  418  427 #> [19969,]  411  418  427 #> [19970,]  411  418  427 #> [19971,]  411  418  427 #> [19972,]  411  418  427 #> [19973,]  411  418  427 #> [19974,]  411  418  427 #> [19975,]  411  418  427 #> [19976,]  411  418  427 #> [19977,]  411  418  427 #> [19978,]  411  418  427 #> [19979,]  411  418  427 #> [19980,]  411  418  427 #> [19981,]  411  419  428 #> [19982,]  411  419  428 #> [19983,]  411  418  427 #> [19984,]  411  418  427 #> [19985,]  411  418  427 #> [19986,]  411  418  427 #> [19987,]  411  418  427 #> [19988,]  411  418  427 #> [19989,]  411  418  427 #> [19990,]  411  420  428 #> [19991,]  411  418  427 #> [19992,]  411  418  427 #> [19993,]  411  418  427 #> [19994,]  411  418  427 #> [19995,]  411  420  428 #> [19996,]  411  418  427 #> [19997,]  411  418  427 #> [19998,]  411  418  427 #> [19999,]  411  418  427 #> [20000,]  411  418  427"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Return forest's leaf node scale parameters. leaf scale sampled forest question, throws error leaf model stochastic scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"computeForestLeafVariances(model_object, forest_type, forest_inds = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"model_object Object type bartmodel bcfmodel corresponding BART / BCF model least one forest sample forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Vector size length(forest_inds) leaf scale parameter requested forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafVariances(bart_model, \"mean\") #>  [1] 0.004291001 0.004087801 0.004575481 0.004989410 0.005320537 0.005277660 #>  [7] 0.004780099 0.004740248 0.004820290 0.004132062 computeForestLeafVariances(bart_model, \"mean\", 0) #> [1] 0.004291001 computeForestLeafVariances(bart_model, \"mean\", c(1,3,5)) #> [1] 0.004087801 0.004989410 0.005277660"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Compute return largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"computeForestMaxLeafIndex(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute max leaf indices. provided, function return max leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Vector containing largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestMaxLeafIndex(bart_model, X, \"mean\") #>  [1] 382 402 421 435 455 452 437 436 431 443 computeForestMaxLeafIndex(bart_model, X, \"mean\", 0) #> [1] 382 computeForestMaxLeafIndex(bart_model, X, \"mean\", c(1,3,9)) #> [1] 402 435 443"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"Convert persistent aspects covariate preprocessor (-memory) C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"convertPreprocessorToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"wrapper around -memory C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Convert list (-memory) JSON representations BART model single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"createBARTModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- list(saveBARTModelToJson(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BART models single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"createBARTModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string_list <- list(saveBARTModelToJsonString(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJsonString(bart_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Convert (-memory) JSON representation BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"createBARTModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"json_object Object type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model) bart_model_roundtrip <- createBARTModelFromJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Convert JSON file containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"createBARTModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) bart_model_roundtrip <- createBARTModelFromJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Convert JSON string containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"createBARTModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJsonString(bart_model) bart_model_roundtrip <- createBARTModelFromJsonString(bart_json) y_hat_mean_roundtrip <- rowMeans(predict(bart_model_roundtrip, X_train)$y_hat) plot(rowMeans(bart_model$y_hat_train), y_hat_mean_roundtrip,       xlab = \"original\", ylab = \"roundtrip\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"createBCFModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_list <- list(saveBCFModelToJson(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJson(bcf_json_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"createBCFModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_string_list <- list(saveBCFModelToJsonString(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJsonString(bcf_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Convert (-memory) JSON representation BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"createBCFModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"json_object Object type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) bcf_json <- saveBCFModelToJson(bcf_model) bcf_model_roundtrip <- createBCFModelFromJson(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Convert JSON file containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"createBCFModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\") # bcf_model_roundtrip <- createBCFModelFromJsonFile(\"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Convert JSON string containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"createBCFModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json <- saveBCFModelToJsonString(bcf_model) # bcf_model_roundtrip <- createBCFModelFromJsonString(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new (empty) C++ Json object — createCppJson","title":"Create a new (empty) C++ Json object — createCppJson","text":"Create new (empty) C++ Json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"createCppJson()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new (empty) C++ Json object — createCppJson","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json file — createCppJsonFile","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"Create C++ Json object Json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"createCppJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"json_filename Name file read. Must end .json.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) tmpjson <- tempfile(fileext = \".json\") example_json$save_file(file.path(tmpjson)) example_json_roundtrip <- createCppJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json string — createCppJsonString","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"Create C++ Json object Json string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"createCppJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) example_json_string <- example_json$return_json_string() example_json_roundtrip <- createCppJsonString(example_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R class that wraps a C++ random number generator — createCppRNG","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"Create R class wraps C++ random number generator","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"createCppRNG(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"CppRng object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"rng <- createCppRNG(1234) rng <- createCppRNG()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest — createForest","title":"Create a forest — createForest","text":"Create forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest — createForest","text":"","code":"createForest(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest — createForest","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest — createForest","text":"Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest — createForest","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest dataset object — createForestDataset","title":"Create a forest dataset object — createForestDataset","text":"Create forest dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest dataset object — createForestDataset","text":"","code":"createForestDataset(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest dataset object — createForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest dataset object — createForestDataset","text":"ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest dataset object — createForestDataset","text":"","code":"covariate_matrix <- matrix(runif(10*100), ncol = 10) basis_matrix <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) forest_dataset <- createForestDataset(covariate_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model object — createForestModel","title":"Create a forest model object — createForestModel","text":"Create forest model object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model object — createForestModel","text":"","code":"createForestModel(forest_dataset, forest_model_config, global_model_config)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model object — createForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures forest_model_config ForestModelConfig object containing forest model parameters settings global_model_config GlobalModelConfig object containing global model parameters settings","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model object — createForestModel","text":"ForestModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model object — createForestModel","text":"","code":"num_trees <- 100 n <- 100 p <- 10 alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) forest_model_config <- createForestModelConfig(feature_types=feature_types,                                                 num_trees=num_trees, num_features=p,                                                 num_observations=n, alpha=alpha, beta=beta,                                                 min_samples_leaf=min_samples_leaf,                                                 max_depth=max_depth, leaf_model_type=1) #> Warning: `variable_weights` not provided, will be assumed to be equal-weighted global_model_config <- createGlobalModelConfig(global_error_variance=1.0) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model config object — createForestModelConfig","title":"Create a forest model config object — createForestModelConfig","text":"Create forest model config object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model config object — createForestModelConfig","text":"","code":"createForestModelConfig(   feature_types = NULL,   num_trees = NULL,   num_features = NULL,   num_observations = NULL,   variable_weights = NULL,   leaf_dimension = 1,   alpha = 0.95,   beta = 2,   min_samples_leaf = 5,   max_depth = -1,   leaf_model_type = 1,   leaf_model_scale = NULL,   variance_forest_shape = 1,   variance_forest_scale = 1,   cutpoint_grid_size = 100 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model config object — createForestModelConfig","text":"feature_types Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled num_features Number features training dataset num_observations Number observations training dataset variable_weights Vector specifying sampling probability p covariates ForestDataset leaf_dimension Dimension leaf model (default: 1) alpha Root node split probability tree prior (default: 0.95) beta Depth prior penalty tree prior (default: 2.0) min_samples_leaf Minimum number samples tree leaf (default: 5) max_depth Maximum depth tree ensemble model. Setting -1 enforce depth limits trees. Default: -1. leaf_model_type Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression). Default: 0. leaf_model_scale Scale parameter used Gaussian leaf models (can either scalar q x q matrix, q dimensionality basis >1 leaf_model_int = 2). Calibrated internally 1/num_trees, propagated along diagonal needed multivariate leaf models. variance_forest_shape Shape parameter IG leaf models (applicable leaf_model_type = 3). Default: 1. variance_forest_scale Scale parameter IG leaf models (applicable leaf_model_type = 3). Default: 1. cutpoint_grid_size Number unique cutpoints consider (default: 100)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model config object — createForestModelConfig","text":"ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model config object — createForestModelConfig","text":"","code":"config <- createForestModelConfig(num_trees = 10, num_features = 5, num_observations = 100) #> Warning: `feature_types` not provided, will be assumed to be numeric #> Warning: `variable_weights` not provided, will be assumed to be equal-weighted"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a container of forest samples — createForestSamples","title":"Create a container of forest samples — createForestSamples","text":"Create container forest samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a container of forest samples — createForestSamples","text":"","code":"createForestSamples(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a container of forest samples — createForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a container of forest samples — createForestSamples","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a container of forest samples — createForestSamples","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a global model config object — createGlobalModelConfig","title":"Create a global model config object — createGlobalModelConfig","text":"Create global model config object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a global model config object — createGlobalModelConfig","text":"","code":"createGlobalModelConfig(global_error_variance = 1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a global model config object — createGlobalModelConfig","text":"global_error_variance Global error variance parameter (default: 1.0)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a global model config object — createGlobalModelConfig","text":"GlobalModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a global model config object — createGlobalModelConfig","text":"","code":"config <- createGlobalModelConfig(global_error_variance = 100)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an outcome object — createOutcome","title":"Create an outcome object — createOutcome","text":"Create outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an outcome object — createOutcome","text":"","code":"createOutcome(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an outcome object — createOutcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an outcome object — createOutcome","text":"Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an outcome object — createOutcome","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) outcome <- createOutcome(y)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"createPreprocessorFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"json_object -memory wrapper around JSON C++ object containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJson(preprocessor_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"createPreprocessorFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"json_string -memory JSON string containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJsonString(preprocessor_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectSamples object — createRandomEffectSamples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"Create RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"createRandomEffectSamples(num_components, num_groups, random_effects_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random effects dataset object — createRandomEffectsDataset","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"Create random effects dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"createRandomEffectsDataset(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"rfx_group_ids <- sample(1:2, size = 100, replace = TRUE) rfx_basis <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsModel object — createRandomEffectsModel","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"Create RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsTracker object — createRandomEffectsTracker","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"Create RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"createRandomEffectsTracker(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"# S3 method for class 'bartmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"object Object type bartmodel containing draws BART model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) snr <- 3 group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) E_y <- f_XW + rfx_term y <- E_y + rnorm(n, 0, 1)*(sd(E_y)/snr) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- group_ids[test_inds] rfx_group_ids_train <- group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     rfx_group_ids_train = rfx_group_ids_train,                     rfx_group_ids_test = rfx_group_ids_test,                     rfx_basis_train = rfx_basis_train,                     rfx_basis_test = rfx_basis_test,                     num_gfr = 100, num_burnin = 0, num_mcmc = 100) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) rfx_samples <- getRandomEffectSamples(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"Generic function extracting random effect samples model object (BCF, BART, etc...)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"object Fitted model object extract random effects ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"List random effect samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"Combine multiple JSON model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"loadForestContainerCombinedJson(json_object_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"json_object_list List objects class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) mean_forest <- loadForestContainerCombinedJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"loadForestContainerCombinedJsonString(json_string_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"json_string_list List strings parse objects type CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) mean_forest <- loadForestContainerCombinedJsonString(bart_json_string, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of forest samples from json — loadForestContainerJson","title":"Load a container of forest samples from json — loadForestContainerJson","text":"Load container forest samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"loadForestContainerJson(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of forest samples from json — loadForestContainerJson","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of forest samples from json — loadForestContainerJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) mean_forest <- loadForestContainerJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"Combine multiple JSON model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"loadRandomEffectSamplesCombinedJson(json_object_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"json_object_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"loadRandomEffectSamplesCombinedJsonString(json_string_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"json_string_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJsonString(bart_json_string, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"Load container random effect samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"loadRandomEffectSamplesJson(json_object, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"json_object Object class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) rfx_samples <- loadRandomEffectSamplesJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a scalar from json — loadScalarJson","title":"Load a scalar from json — loadScalarJson","text":"Load scalar json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a scalar from json — loadScalarJson","text":"","code":"loadScalarJson(json_object, json_scalar_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a scalar from json — loadScalarJson","text":"json_object Object class CppJson json_scalar_label Label referring particular scalar / string value (.e. \"num_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a scalar from json — loadScalarJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a scalar from json — loadScalarJson","text":"","code":"example_scalar <- 5.4 example_json <- createCppJson() example_json$add_scalar(\"myscalar\", example_scalar) roundtrip_scalar <- loadScalarJson(example_json, \"myscalar\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a vector from json — loadVectorJson","title":"Load a vector from json — loadVectorJson","text":"Load vector json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a vector from json — loadVectorJson","text":"","code":"loadVectorJson(json_object, json_vector_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a vector from json — loadVectorJson","text":"json_object Object class CppJson json_vector_label Label referring particular vector (.e. \"sigma2_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a vector from json — loadVectorJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a vector from json — loadVectorJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) roundtrip_vec <- loadVectorJson(example_json, \"myvec\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BART model on new data — predict.bartmodel","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"Predict sampled BART model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"# S3 method for class 'bartmodel' predict(   object,   X,   leaf_basis = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"object Object type bart containing draws regression forest associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. leaf_basis (Optional) Bases used prediction (e.g. dot product leaf values). Default: NULL. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"List prediction matrices. model random effects, list one element – predictions forest. model random effects, list three elements – forest predictions, random effects predictions, sum (y_hat).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) y_hat_test <- predict(bart_model, X_test)$y_hat plot(rowMeans(y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BCF model on new data — predict.bcfmodel","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"Predict sampled BCF model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' predict(   object,   X,   Z,   propensity = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. Z Treatments used prediction. propensity (Optional) Propensities used prediction. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"List 3-5 nrow(X) object$num_samples matrices: prognostic function estimates, treatment effect estimates, (optionally) random effects predictions, (optionally) variance forest predictions, outcome predictions.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train) preds <- predict(bcf_model, X_test, Z_test, pi_test) plot(rowMeans(preds$mu_hat), mu_test, xlab = \"predicted\",      ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(preds$tau_hat), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"preprocessPredictionData(input_data, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"input_data Covariates, provided either dataframe matrix metadata List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocessed data categorical variables appropriately handled","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"cov_df <- data.frame(x1 = 1:5, x2 = 5:1, x3 = 6:10) metadata <- list(num_ordered_cat_vars = 0, num_unordered_cat_vars = 0,                   num_numeric_vars = 3, numeric_vars = c(\"x1\", \"x2\", \"x3\")) X_preprocessed <- preprocessPredictionData(cov_df, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"preprocessTrainData(input_data)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"input_data Covariates, provided either dataframe matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"List preprocessed (unmodified) data details number type variable, unique categories associated categorical variables, vector feature types needed calls BART BCF.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) X <- preprocess_list$X"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"Reset active forest, either specific forest ForestContainer ensemble single-node (.e. root) trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"resetActiveForest(active_forest, forest_samples = NULL, forest_num = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"active_forest Current active forest forest_samples (Optional) Container forest samples re-initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees. forest_num (Optional) Index forest samples initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples$add_forest_with_constant_leaves(0.0) forest_samples$add_numeric_split_tree(0, 0, 0, 0, 0.5, -1.0, 1.0) forest_samples$add_numeric_split_tree(0, 1, 0, 1, 0.75, 3.4, 0.75) active_forest$set_root_leaves(0.1) resetActiveForest(active_forest, forest_samples, 0) resetActiveForest(active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"Re-initialize forest model (tracking data structures) specific forest ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"resetForestModel(forest_model, forest, dataset, residual, is_mean_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"forest_model Forest model tracking data structures forest Forest re-initialize forest model dataset Training dataset object residual Residual also updated is_mean_model Whether model updated conditional mean model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"n <- 100 p <- 10 num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) leaf_model <- 0 sigma2 <- 1.0 leaf_scale <- as.matrix(1.0) variable_weights <- rep(1/p, p) a_forest <- 1 b_forest <- 1 cutpoint_grid_size <- 100 X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) y <- -5 + 10*(X[,1] > 0.5) + rnorm(n) outcome <- createOutcome(y) rng <- createCppRNG(1234) global_model_config <- createGlobalModelConfig(global_error_variance=sigma2) forest_model_config <- createForestModelConfig(feature_types=feature_types,                                                 num_trees=num_trees, num_observations=n,                                                 num_features=p, alpha=alpha, beta=beta,                                                 min_samples_leaf=min_samples_leaf,                                                 max_depth=max_depth,                                                 variable_weights=variable_weights,                                                 cutpoint_grid_size=cutpoint_grid_size,                                                 leaf_model_type=leaf_model,                                                 leaf_model_scale=leaf_scale) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config) active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension,                                        is_leaf_constant, is_exponentiated) active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, 0, 0.) forest_model$sample_one_iteration(     forest_dataset, outcome, forest_samples, active_forest,      rng, forest_model_config, global_model_config,      keep_forest = TRUE, gfr = FALSE ) resetActiveForest(active_forest, forest_samples, 0) resetForestModel(forest_model, active_forest, forest_dataset, outcome, TRUE)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"Reset RandomEffectsModel object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"resetRandomEffectsModel(rfx_model, rfx_samples, sample_num, sigma_alpha_init)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"rfx_model Object type RandomEffectsModel. rfx_samples Object type RandomEffectSamples. sample_num Index sample stored rfx_samples reset state random effects model. Zero-indexed, resetting based first sample require setting sample_num = 0. sigma_alpha_init Initial value \"working parameter\" scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"Reset RandomEffectsTracker object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"resetRandomEffectsTracker(   rfx_tracker,   rfx_model,   rfx_dataset,   residual,   rfx_samples )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome. rfx_samples Object type RandomEffectSamples.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0) resetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome, rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object to its ","title":"Reset a RandomEffectsModel object to its ","text":"Reset RandomEffectsModel object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object to its ","text":"","code":"rootResetRandomEffectsModel(   rfx_model,   alpha_init,   xi_init,   sigma_alpha_init,   sigma_xi_init,   sigma_xi_shape,   sigma_xi_scale )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object to its ","text":"rfx_model Object type RandomEffectsModel. alpha_init Initial value \"working parameter\". xi_init Initial value \"group parameters\". sigma_alpha_init Initial value \"working parameter\" scale parameter. sigma_xi_init Initial value \"group parameters\" scale parameter. sigma_xi_shape Shape parameter inverse gamma variance model group parameters. sigma_xi_scale Scale parameter inverse gamma variance model group parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object to its ","title":"Reset a RandomEffectsTracker object to its ","text":"Reset RandomEffectsTracker object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object to its ","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale) rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"Sample one iteration (inverse gamma) global variance model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"sampleGlobalErrorVarianceOneIteration(residual, dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"residual Outcome class dataset ForestDataset class rng C++ random number generator Global variance shape parameter b Global variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) y_std <- (y-mean(y))/sd(y) forest_dataset <- createForestDataset(X) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 sigma2 <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"Sample one iteration leaf parameter variance model (univariate basis constant leaf!)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"sampleLeafVarianceOneIteration(forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"forest C++ forest rng C++ random number generator Leaf variance shape parameter b Leaf variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 tau <- sampleLeafVarianceOneIteration(active_forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Convert persistent aspects BART model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"saveBARTModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"Convert persistent aspects BART model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"saveBARTModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"object Object type bartmodel containing draws BART model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"Convert persistent aspects BART model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"saveBARTModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string <- saveBARTModelToJsonString(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Convert persistent aspects BCF model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"saveBCFModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # bcf_json <- saveBCFModelToJson(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"Convert persistent aspects BCF model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"saveBCFModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"Convert persistent aspects BCF model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"saveBCFModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonString(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"Convert persistent aspects covariate preprocessor (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"savePreprocessorToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stochtree: Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference — stochtree-package","title":"stochtree: Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference — stochtree-package","text":"Flexible stochastic tree ensemble software. Robust implementations Bayesian Additive Regression Trees (Chipman, George, McCulloch (2010) doi:10.1214/09-AOAS285 ) supervised learning (Bayesian Causal Forests (BCF) Hahn, Murray, Carvalho (2020) doi:10.1214/19-BA1195 ) causal inference. Enables model serialization parallel sampling provides low-level interface custom stochastic forest samplers.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stochtree: Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference — stochtree-package","text":"Maintainer: Drew Herren drewherrenopensource@gmail.com (ORCID) Authors: Richard Hahn Jared Murray Carlos Carvalho Jingyu contributors: stochtree contributors [copyright holder]","code":""},{"path":"https://stochastictree.github.io/stochtree-r/news/index.html","id":"stochtree-010","dir":"Changelog","previous_headings":"","what":"stochtree 0.1.0","title":"stochtree 0.1.0","text":"Initial release CRAN. Support sampling stochastic tree ensembles using two algorithms: MCMC Grow--Root (GFR) Supervised learning constant leaves user-specified leaf regression models Causal effect estimation binary, continuous, multivariate treatments Forest-based variance function estimation (heteroskedasticity) Additive (univariate multivariate) group random effects Multi-chain sampling support parallelism “Warm-start” initialization MCMC forest samplers via Grow--Root (GFR) algorithm Automated preprocessing / handling categorical variables Ability combine forest sampler (additive) model terms, without using C++ Combine sample arbitrary number forests random effects terms","code":""}]
