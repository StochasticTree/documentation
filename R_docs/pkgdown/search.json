[{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Step Function","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple step function.","code":"# Generate the data n <- 500 p_x <- 10 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,     general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect BART samples burnin.","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model additive random effect structure.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) noise_sd <- sd(f_XW) / snr y <- f_XW + rfx_term + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, rfx_group_ids_train = rfx_group_ids_train,      rfx_basis_train = rfx_basis_train, X_test = X_test, leaf_basis_test = leaf_basis_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6|X3−1|τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 \\lvert X_3 - 1 \\rvert\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.97"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-2-linear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.8"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.72"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-3-linear-outcome-model-homogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=3g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 3\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau1(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.97"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.81"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-4-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)={−1.1 ifX1>X20.9 ifX1≤X2τ(X)=11+exp(−X3)+X210π(X)=Φ(μ(X))Z∼Bernoulli(π(X))X1,X2,X3∼N(0,1)X4∼N(X2,1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= \\begin{cases} -1.1 & \\text{ } X_1 > X_2\\\\ 0.9 & \\text{ } X_1 \\leq X_2 \\end{cases}\\\\ \\tau(X) &= \\frac{1}{1+\\exp(-X_3)} + \\frac{X_2}{10}\\\\ \\pi(X) &= \\Phi\\left(\\mu(X)\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right)\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim N\\left(X_2,1\\right)\\\\ \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 1000 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n,x2,1) X <- cbind(x1,x2,x3,x4) p <- ncol(X) mu <- function(x) {-1*(x[,1]>(x[,2])) + 1*(x[,1]<(x[,2])) - 0.1} tau <- function(x) {1/(1 + exp(-x[,3])) + x[,2]/10} mu_x <- mu(X) tau_x <- tau(X) pi_x <- pnorm(mu_x) Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x sigma <- diff(range(mu_x + tau_x*pi))/8 y <- E_XZ + sigma*rnorm(n) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 1"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.955"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-5-nonlinear-outcome-model-heterogeneous-treatment-effect-with-additive-random-effects","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","title":"Causal Machine Learning in StochTree","text":"augment simulated example Demo 1 additive random effect structure show bcf() function can estimate incorporate effects forest sampling procedure.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw augmented “demo 1” DGP","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"simulate “warm-start” model (running root-MCMC BART random effects simply matter modifying code snippet setting num_gfr <- 0 num_mcmc > 0). Inspect BART samples initialized XBART warm-start      Examine test set interval coverage clear causal inference much difficult presence strong covariate-dependent prognostic effects strong group-level random effects. sense, proper prior calibration three μ\\mu, τ\\tau random effects models crucial.","code":"num_gfr <- 100 num_burnin <- 0 num_mcmc <- 500 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$rfx_preds_test), rfx_term_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Random effects terms\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ-rfx_term) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.95"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-6-nonlinear-outcome-model-heterogeneous-treatment-effect-using-different-features-in-the-prognostic-and-treatment-forests","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","title":"Causal Machine Learning in StochTree","text":", consider case might prefer use subset covariates treatment effect forest. might want ? Well, many cases plausible covariates (example age, income, etc…) influence outcome interest causal problem, moderate treatment effect. case, ’d need include variables prognostic forest deconfounding don’t necessarily need include treatment effect forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-5","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw modified “demo 1” DGP","code":"mu <- function(x) {1+g(x)+x[,1]*x[,3]-x[,2]+3*x[,3]} tau <- function(x) {1 - 2*x[,1] + 2*x[,2] + 1*x[,1]*x[,2]} n <- 500 snr <- 4 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) x6 <- rnorm(n) x7 <- rnorm(n) x8 <- rnorm(n) x9 <- rnorm(n) x10 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) p <- ncol(X) mu_x <- mu(X) tau_x <- tau(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.5 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect burned-samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.956 test_tau_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_tau_mean - tau_test)^2)) #> [1] 1.652191 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 2.010456"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.956 test_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_mean - tau_test)^2)) #> [1] 1.334941 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 1.906855"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.60452 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.976424"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.972 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.275469 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.929484"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect-1","dir":"Articles","previous_headings":"Continuous Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+2X1−𝟙(X2<0)×4+𝟙(X2≥0)×4+3(|X3|−2π)τ(X)=1+2X4X1,X2,X3,X4,X5∼N(0,1)U∼Uniform(0,1)π(X)=μ(X)−12+4(U−12)Z∼𝒩(π(X),1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + 2 X_1 - \\mathbb{1}\\left(X_2 < 0\\right) \\times 4 + \\mathbb{1}\\left(X_2 \\geq 0\\right) \\times 4 + 3 \\left(\\lvert X_3 \\rvert - \\sqrt{\\frac{2}{\\pi}} \\right)\\\\ \\tau(X) &= 1 + 2 X_4\\\\ X_1,X_2,X_3,X_4,X_5 &\\sim N\\left(0,1\\right)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ \\pi(X) &= \\frac{\\mu(X) - 1}{2} + 4 \\left(U - \\frac{1}{2}\\right)\\\\ Z &\\sim \\mathcal{N}\\left(\\pi(X), 1\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-6","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- 1 + 2*x1 - 4*(x2 < 0) + 4*(x2 >= 0) + 3*(abs(x3) - sqrt(2/pi)) tau_x <- 1 + 2*x4 u <- runif(n) pi_x <- ((mu_x-1)/4) + 4*(u-0.5) Z <- pi_x + rnorm(n,0,1) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-5","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-4","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Custom Sampling Routines in StochTree","text":"functions bart() bcf() provide simple performant interfaces supervised learning / causal inference, stochtree also offers access many “low-level” data structures typically implemented C++. low-level interface designed performance even simplicity — rather intent provide “prototype” interface C++ code doesn’t require modifying C++. illustrate prototype interface might useful, consider classic BART algorithm:    INPUT: yy, XX, τ\\tau, ν\\nu, λ\\lambda, α\\alpha, β\\beta    OUTPUT: mm samples decision forest kk trees global variance parameter σ2\\sigma^2    Initialize σ2\\sigma^2 via default data-dependent calibration exercise    Initialize “forest 0” kk trees single root node, referring tree jj’s prediction vector f0,jf_{0,j}    Compute residual r=y−∑j=1kf0,jr = y - \\sum_{j=1}^k f_{0,j}    iiIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Initialize forest ii forest −1i-1       jjIN {1,…,k}\\left\\{1,\\dots,k\\right\\}:          Add predictions tree jj residual: r=r+fi,jr = r + f_{,j}          Update tree jj via Metropolis-Hastings rr XX data tree priors depending (τ\\tau, σ2\\sigma^2, α\\alpha, β\\beta)          Sample leaf node parameters tree jj via Gibbs (leaf node prior N(0,τ)N\\left(0,\\tau\\right))          Subtract (updated) predictions tree jj residual: r=r−fi,jr = r - f_{,j}       Sample σ2\\sigma^2 via Gibbs (prior IG(ν/2,νλ/2)IG(\\nu/2,\\nu\\lambda/2)) algorithm conceptually simple, much core computation carried low-level languages C C++ tree data structure. result, changes algorithm, supporting heteroskedasticity (Pratola et al. (2020)), categorical outcomes (Murray (2021)) causal effect estimation (Hahn, Murray, Carvalho (2020)) require modifying low-level code. prototype interface exposes core components loop R level, thus making possible interchange C++ computation steps like “update tree jj via Metropolis-Hastings” R computation custom variance model, user-specified additive mean model components, . begin, load stochtree package","code":"library(stochtree)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) y <- f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } # Forest predictions preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via “grow--root” (Hahn (2023))   Inspect BART samples obtained “warm-starting”","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-2-supervised-learning-with-additive-random-effects","dir":"Articles","previous_headings":"","what":"Demo 2: Supervised Learning with Additive Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example add simple “random effects” structure: every observation either group 1 group 2 random group intercept (simulated quite strong, underscoring need random effects modeling).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- c(-5, 5) rfx_basis <- rep(1, n) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rfx_coefs[group_ids] * rfx_basis y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1) xi_init <- matrix(c(1,1),1,2) sigma_alpha_init <- matrix(c(1),1,1) sigma_xi_init <- matrix(c(1),1,1) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-3-supervised-learning-with-additive-multi-component-random-effects","dir":"Articles","previous_headings":"","what":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example, case allowing random intercept regression coefficient (pre-specified basis) group (1 2).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1,0) xi_init <- matrix(c(1,0,1,0),2,2) sigma_alpha_init <- diag(1,2,2) sigma_xi_init <- diag(1,2,2) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-4-supervised-learning-with-additive-linear-model","dir":"Articles","previous_headings":"","what":"Demo 4: Supervised Learning with Additive Linear Model","title":"Custom Sampling Routines in StochTree","text":"Instead group random effects, show combine stochastic forest additive linear regression term. model corresponds broadly y=Wβ+f(X)+ϵf(X)∼BART(c,d)β∼𝒩(0,τ)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= W\\beta + f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}(c,d)\\\\ \\beta &\\sim \\mathcal{N}(0, \\tau)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}(,b) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) beta_W <- c(5) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) lm_term <- W %*% beta_W y <- lm_term + f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha_bart <- 0.9 beta_bart <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- F feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) beta_tau <- 20 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha_bart, beta_bart,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 20 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc beta_init <- 0 global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) beta_samples <- c(beta_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, sigma2, cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } for (i in (num_warmstart+1):num_samples) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } # Linear model predictions lm_preds <- (sapply(1:num_samples, function(x) W[,1]*beta_samples[x+1]))*y_std  # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Overall predictions preds <- forest_preds + lm_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std  # Regression parameter beta_samples <- beta_samples*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model    Inspect BART samples obtained “warm-starting” plus additive random effects model    Now inspect samples BART forest alone (without considering additive linear model predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(beta_samples[1:num_warmstart], ylab=\"beta\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(beta_samples[(num_warmstart+1):num_samples], ylab=\"beta\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-5-causal-inference","dir":"Articles","previous_headings":"","what":"Demo 5: Causal Inference","title":"Custom Sampling Routines in StochTree","text":"show implement Bayesian Causal Forest (BCF) model Hahn, Murray, Carvalho (2020) using stochtree’s prototype API, including demoing non-trivial sampling step done R level.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"background","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Background","title":"Custom Sampling Routines in StochTree","text":"supervised learning case previous demo conceptually simple, motivate causal effect estimation task additional notation. Let yy refer continuous outcome interest, ZZ refer binary treatment, XX set covariates may influence YY, ZZ, . XX exhaustive set covariates influence ZZ YY, can specific YY terms causal model (see example Pearl (2009)) Y=F(Z,X,ϵY)\\begin{equation*} \\begin{aligned} Y &= F(Z, X, \\epsilon_Y) \\end{aligned} \\end{equation*} ϵY\\epsilon_Y outcome specific random noise FF function generates YY (many cases, FF can thought inverse CDF conditional XX ZZ). “potential outcomes” (see Imbens Rubin (2015)) can recovered Y1=F(1,X,ϵY)Y^1 = F(1, X, \\epsilon_Y) Y0=F(0,X,ϵY)Y^0 = F(0, X, \\epsilon_Y). causal outcome model can decomposed “mean” “error” terms Y=μ(X)+Zτ(X)+[η(X)+Zδ(X)]μ(X)=𝔼ϵY[F(0,X,ϵY)]τ(X)=𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]η(X)=F(0,X,ϵY)−𝔼ϵY[F(0,X,ϵY)]δ(X)=F(1,X,ϵY)−F(0,X,ϵY)−𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]\\begin{equation*} \\begin{aligned} Y &= \\mu(X) + Z\\tau(X) + \\left[\\eta(X) + Z\\delta(X)\\right]\\\\ \\mu(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\tau(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right]\\\\ \\eta(X) &= F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\delta(X) &= F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right] \\end{aligned} \\end{equation*} τ(X)\\tau(X) precisely conditional average treatment effect (CATE) estimand. Unfortunately, functional form FF unavailable analysis, τ(X)\\tau(X) derived. flexible, regularized nonparametrics enter picture, aim estimate μ(X)\\mu(X) τ(X)\\tau(X) data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"Demo 5: Causal Inference > Background","what":"Bayesian Causal Forest (BCF)","title":"Custom Sampling Routines in StochTree","text":"BCF estimates μ(X)\\mu(X) τ(X)\\tau(X) using separate BART forests term. Furthermore, rather rely common implicit coding ZZ 0 control observations 1 treated observations, consider coding control observations parameter b0b_0 treated observations parameter b1b_1. Placing N(0,1/2)N(0,1/2) prior bzb_z, essentially redefines outcome model y=μ(X)+τ(X)f(Z)+ϵf(Z)=b0(1−Z)+b1Zϵ∼N(0,σ2)b0,b1∼N(0,1/2)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) f(Z) + \\epsilon\\\\ f(Z) &= b_0(1-Z) + b_1 Z\\\\ \\epsilon &\\sim N\\left(0, \\sigma^2\\right)\\\\ b_0, b_1 &\\sim N\\left(0, 1/2\\right) \\end{aligned} \\end{equation*} Updating bzb_z requires additional Gibbs step, derive . Conditioning sampled forests μ\\mu τ\\tau, essentially regressing y−μ(Z)y - \\mu(Z) [(1−Z)τ(X),Zτ(X)]\\left[(1-Z)\\tau(X), Z\\tau(X)\\right] closed form posterior b0∣y,X,μ,τ∼N(syτ,0sττ,0+2σ2,σ2sττ,0+2σ2)b1∣y,X,μ,τ∼N(syτ,1sττ,1+2σ2,σ2sττ,1+2σ2)\\begin{equation*} \\begin{aligned} b_0 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,0}}{s_{\\tau\\tau,0} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,0} + 2\\sigma^2}\\right)\\\\ b_1 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,1}}{s_{\\tau\\tau,1} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,1} + 2\\sigma^2}\\right) \\end{aligned} \\end{equation*} syτ,z=∑:Zi=z(yi−μ(Xi))τ(Xi)s_{y\\tau,z} = \\sum_{: Z_i = z} (y_i - \\mu(X_i))\\tau(X_i) sττ,z=∑:Zi=zτ(Xi)τ(Xi)s_{\\tau\\tau,z} = \\sum_{: Z_i = z} \\tau(X_i)\\tau(X_i).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"simulated causal DGP mirrors nonlinear, heterogeneous treatment effect DGP presented Hahn, Murray, Carvalho (2020).","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Prepare run sampler (now must specify initial values b0b_0 b1b_1, choose -1/2 1/2 instead 0 1). Initialize R-level access C++ classes needed sample model Run grow--root sampler “warm-start” BART, also updating adaptive coding parameter b0b_0 b1b_1 Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"# Mu forest alpha_mu <- 0.95 beta_mu <- 2.0 min_samples_leaf_mu <- 5 max_depth_mu <- 10 num_trees_mu <- 250 cutpoint_grid_size_mu = 100 tau_init_mu = 1/num_trees_mu leaf_prior_scale_mu = matrix(c(tau_init_mu), ncol = 1) a_leaf_mu <- 3. b_leaf_mu <- var(resid)/(num_trees_mu) leaf_regression_mu <- F sigma_leaf_mu <- var(resid)/(num_trees_mu) current_leaf_scale_mu <- as.matrix(sigma_leaf_mu)  # Tau forest alpha_tau <- 0.25 beta_tau <- 3.0 min_samples_leaf_tau <- 5 max_depth_tau <- 10 num_trees_tau <- 50 cutpoint_grid_size_tau = 100 a_leaf_tau <- 3. b_leaf_tau <- var(resid)/(2*num_trees_tau) leaf_regression_tau <- T sigma_leaf_tau <- var(resid)/(2*num_trees_tau) current_leaf_scale_tau <- as.matrix(sigma_leaf_tau)  # Common parameters nu <- 3 sigma2hat <- (sigma(lm(resid~X)))^2 quantile_cutoff <- 0.9 if (is.null(lambda)) {     lambda <- (sigma2hat*qgamma(1-quantile_cutoff,nu))/nu } sigma2 <- sigma2hat current_sigma2 <- sigma2 # Sampling composition num_gfr <- 20 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc  # Sigma^2 samples global_var_samples <- rep(0, num_samples)  # Adaptive coding parameter samples b_0_samples <- rep(0, num_samples) b_1_samples <- rep(0, num_samples) b_0 <- -0.5 b_1 <- 0.5 current_b_0 <- b_0 current_b_1 <- b_1 tau_basis <- (1-Z)*current_b_0 + Z*current_b_1 # Data X_mu <- cbind(X, pi_x) X_tau <- X feature_types <- c(0,0,0,1,1) feature_types_mu <- as.integer(c(feature_types,0)) feature_types_tau <- as.integer(feature_types) variable_weights_mu = rep(1/ncol(X_mu), ncol(X_mu)) variable_weights_tau = rep(1/ncol(X_tau), ncol(X_tau)) forest_dataset_mu <- createForestDataset(X_mu) forest_dataset_tau <- createForestDataset(X_tau, tau_basis) outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_mu <- createForestModel(     forest_dataset_mu, feature_types_mu, num_trees_mu, nrow(X_mu),      alpha_mu, beta_mu, min_samples_leaf_mu, max_depth_mu ) forest_model_tau <- createForestModel(     forest_dataset_tau, feature_types_tau, num_trees_tau, nrow(X_tau),      alpha_tau, beta_tau, min_samples_leaf_tau, max_depth_tau )  # Container of forest samples forest_samples_mu <- createForestSamples(num_trees_mu, 1, T) active_forest_mu <- createForest(num_trees_mu, 1, T) forest_samples_tau <- createForestSamples(num_trees_tau, 1, F) active_forest_tau <- createForest(num_trees_tau, 1, F)  # Initialize the leaves of each tree in the prognostic forest active_forest_mu$prepare_for_sampler(forest_dataset_mu, outcome, forest_model_mu, 0, mean(resid)) active_forest_mu$adjust_residual(forest_dataset_mu, outcome, forest_model_mu, F, F)  # Initialize the leaves of each tree in the treatment effect forest active_forest_tau$prepare_for_sampler(forest_dataset_tau, outcome, forest_model_tau, 1, 0.) active_forest_tau$adjust_residual(forest_dataset_tau, outcome, forest_model_tau, T, F) if (num_gfr > 0){     for (i in 1:num_gfr) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              feature_types_mu, 0, current_leaf_scale_mu, variable_weights_mu,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              feature_types_tau, 1, current_leaf_scale_tau, variable_weights_tau,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } if (num_burnin + num_mcmc > 0) {     for (i in (num_gfr+1):num_samples) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng, feature_types_mu,              0, current_leaf_scale_mu, variable_weights_mu, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_mu, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng, feature_types_tau,              1, current_leaf_scale_tau, variable_weights_tau, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1          # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } # Forest predictions mu_hat <- forest_samples_mu$predict(forest_dataset_mu)*y_std + y_bar tau_hat_raw <- forest_samples_tau$predict_raw(forest_dataset_tau) tau_hat <- t(t(tau_hat_raw) * (b_1_samples - b_0_samples))*y_std y_hat <- mu_hat + tau_hat * as.numeric(Z)  # Global error variance sigma2_samples <- global_var_samples*(y_std^2)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect XBART results    Inspect warm start BART results    Inspect “adaptive coding” parameters b0b_0 b1b_1.","code":"plot(sigma2_samples[1:num_gfr], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,1:num_gfr]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,1:num_gfr]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,1:num_gfr]) - tau_x)^2) #> [1] 0.3402957 plot(sigma2_samples[(num_gfr+1):num_samples], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,(num_gfr+1):num_samples]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,(num_gfr+1):num_samples]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,(num_gfr+1):num_samples]) - tau_x)^2) #> [1] 0.3595855 plot(b_0_samples, col = \"blue\", ylab = \"Coding parameter draws\",       ylim = c(min(min(b_0_samples), min(b_1_samples)), max(max(b_0_samples), max(b_1_samples)))) points(b_1_samples, col = \"orange\") legend(\"topleft\", legend = c(\"b_0\", \"b_1\"), col = c(\"blue\", \"orange\"), pch = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Kernel Methods from Tree Ensembles in StochTree","text":"trained tree ensemble strong --sample performance admits natural motivation “distance” two samples: shared leaf membership. number leaves ensemble 1 ss (, tree 1 3 leaves, reserves numbers 1 - 3, turn tree 2 5 leaves, reserves numbers 4 - 8 label leaves, ). dataset nn observations, construct matrix WW follows:    Initialize WW matrix zeroes nn rows many columns leaves ensemble    Let s = 0    jjIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Let num_leaves number leaves tree jj       iiIN {1,…,n}\\left\\{1,\\dots,n\\right\\}:          Let k leaf tree jj maps observation ii          Set element Wi,k+s=1W_{,k+s} = 1       Let s = s + num_leaves sparse matrix WW matrix representation basis predictions ensemble (.e. integrating leaf parameters just analyzing leaf indices). ensemble mm trees, can determine proportion trees map observation leaf computing WWT/mW W^T / m. can form basis kernel function used Gaussian process regression, demonstrate . begin, load stochtree package tgp package serve point reference.","code":"library(stochtree) library(tgp) library(MASS) library(Matrix) library(mvtnorm)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-1-univariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Univariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"begin simulated example tgp package (Gramacy Taddy (2010)). data generating process (DGP) non-stationary single numeric covariate. define training set test set evaluate various approaches modeling sample outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data X_train <- seq(0,20,length=100) X_test <- seq(0,20,length=99) y_train <- (sin(pi*X_train/5) + 0.2*cos(4*pi*X_train/5)) * (X_train <= 9.6) lin_train <- X_train>9.6;  y_train[lin_train] <- -1 + X_train[lin_train]/10 y_train <- y_train + rnorm(length(y_train), sd=0.1) y_test <- (sin(pi*X_test/5) + 0.2*cos(4*pi*X_test/5)) * (X_test <= 9.6) lin_test <- X_test>9.6;  y_test[lin_test] <- -1 + X_test[lin_test]/10  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 0.0466081"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) colnames(X_train) <- colnames(X_test) <- \"x1\" mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 0.08792636"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-2-multivariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 2: Multivariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"proceed simulated “Friedman” dataset, implemented tgp.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data, add many \"noise variables\" n <- 100 friedman.df <- friedman.1.data(n=n) train_inds <- sort(sample(1:n, floor(0.8*n), replace = FALSE)) test_inds <- (1:n)[!((1:n) %in% train_inds)] X <- as.matrix(friedman.df)[,1:10] X <- cbind(X, matrix(runif(n*10), ncol = 10)) y <- as.matrix(friedman.df)[,12] + rnorm(n,0,1)*(sd(as.matrix(friedman.df)[,11])/2) X_train <- X[train_inds,] X_test <- X[test_inds,] y_train <- y[train_inds] y_test <- y[test_inds]  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 5.023593"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE use case BART kernel classical kriging perhaps unclear without empirical investigation, see later vignette kernel approach can beneficial causal inference applications.","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 5.752779"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean relatively simple covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 20 a_0 <- 1.5 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean complex covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_trees <- 20 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data (relatively simple) covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X2≥0 X2<0.25−2X2≥0.25 X2<0.52X2≥0.5 X2<0.756X2≥0.75 X2<1σ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data complex covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X4X2≥0 X2<0.25−2X4X2≥0.25 X2<0.52X4X2≥0.5 X2<0.756X4X2≥0.75 X2<1σ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6X_4 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2X_4 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2X_4 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6X_4 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6*X[,4]) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2*X[,4]) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2*X[,4]) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6*X[,4]) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-1-bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"","what":"Demo 1: Bayesian Causal Forest (BCF)","title":"Model Serialization in StochTree","text":"BCF models initially sampled constructed using bcf() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw modified version data generating process defined Hahn, Murray, Carvalho (2020). Sample BCF model.","code":"# Generate synthetic data n <- 1000 snr <- 2 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      mu_forest_params = mu_forest_params, tau_forest_params = tau_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BCF model disk.","code":"saveBCFModelToJsonFile(bcf_model, \"bcf.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BCF model disk. Check predictions align original model.","code":"bcf_model_reload <- createBCFModelFromJsonFile(\"bcf.json\") bcf_preds_reload <- predict(bcf_model_reload, X_train, Z_train, pi_train, rfx_group_ids_train, rfx_basis_train) plot(rowMeans(bcf_model$mu_hat_train), rowMeans(bcf_preds_reload$mu_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Prognostic forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$tau_hat_train), rowMeans(bcf_preds_reload$tau_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Treatment forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$y_hat_train), rowMeans(bcf_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Overall outcome\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-2-bart","dir":"Articles","previous_headings":"","what":"Demo 2: BART","title":"Model Serialization in StochTree","text":"BART models initially sampled constructed using bart() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw relatively straightforward heteroskedastic supervised learning DGP. Sample BART model.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 100,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BART model disk.","code":"saveBARTModelToJsonFile(bart_model, \"bart.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BART model disk. Check predictions align original model.","code":"bart_model_reload <- createBARTModelFromJsonFile(\"bart.json\") bart_preds_reload <- predict(bart_model_reload, X_train) plot(rowMeans(bart_model$y_hat_train), rowMeans(bart_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Mean Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bart_model$sigma_x_hat_train), rowMeans(bart_preds_reload$variance_forest_predictions),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Variance Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Mixing MCMC sampler perennial concern complex Bayesian models, BART exception. common way address concerns run multiple independent “chains” MCMC sampler, chain gets stuck different region posterior, combined samples attain better coverage full posterior. idea works classic “-root” MCMC sampler Chipman, George, McCulloch (2010), key insight Hahn (2023) XBART algorithm may used warm-start initialize multiple chains BART MCMC sampler. Operationally, two approaches implementation (setting num_gfr > 0 warm-start initialization desired), vignette demonstrate run multi-chain sampler sequentially parallel. begin, load stochtree necessary packages","code":"library(stochtree) library(foreach) library(doParallel) #> Loading required package: iterators #> Loading required package: parallel"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"data-simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Data Simulation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-sequentially","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains Sequentially","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Define high-level parameters, including number chains run number samples per chain. run 4 independent chains 5 warm-start iterations 100 MCMC iterations . Run sampler, storing resulting BART objects list Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare original ŷ\\hat{y} values","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 bart_models <- list() general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) for (i in 1:num_chains) {     bart_models[[i]] <- stochtree::bart(         X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, X_test = X_test,          leaf_basis_test = leaf_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,          general_params = general_params, mean_forest_params = mean_forest_params     ) } json_string_list <- list() for (i in 1:num_chains) {     json_string_list[[i]] <- saveBARTModelToJsonString(bart_models[[i]]) } combined_bart <- createBARTModelFromCombinedJsonString(json_string_list) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(bart_models[[i]]$y_hat_test),           rowMeans(yhat_combined[,inds_start:inds_end]),          xlab = \"original\", ylab = \"deserialized\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"use high-level parameters sequential demo. order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params   )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } #> Warning: executing %dopar% sequentially: no parallel backend registered stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"warmstarting-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Warmstarting Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"example, ran multiple parallel chains MCMC sampler starting “root” forest. Consider instead “warmstart” approach Hahn (2023), forests sampled using fast “grow--root” (GFR) algorithm several MCMC chains run using different GFR forests. use high-level parameters parallel demo. First, sample model using grow--root algorithm main R session several iterations (use forests see independent parallel chains moment). order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) xbart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = 0, num_mcmc = 0,      general_params = general_params, mean_forest_params = mean_forest_params ) xbart_model_string <- stochtree::saveBARTModelToJsonString(xbart_model) ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   bart_params <- list(sample_sigma_global = T, sample_sigma_leaf = T,                        num_trees_mean = num_trees, random_seed = random_seed)   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(       X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,        X_test = X_test, leaf_basis_test = leaf_basis_test,        num_gfr = 0, num_burnin = num_burnin, num_mcmc = num_mcmc,        general_params = general_params, mean_forest_params = mean_forest_params,        previous_model_json = xbart_model_string, previous_model_warmstart_sample_num = num_gfr - i + 1,    )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"“classic” BART model Chipman, George, McCulloch (2010) y=f(X)+ϵf(X)∼BART(α,β)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}\\left(\\alpha, \\beta\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}\\left(,b\\right) \\end{aligned} \\end{equation*} semiparametric, nonparametric tree ensemble f(X)f(X) homoskedastic error variance parameter σ2\\sigma^2. Note Chipman, George, McCulloch (2010), aa bb parameterized =ν2a = \\frac{\\nu}{2} b=νλ2b = \\frac{\\nu\\lambda}{2}.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"setting-priors-on-variance-parameters-in-stochtree","dir":"Articles","previous_headings":"","what":"Setting Priors on Variance Parameters in stochtree","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"default, stochtree employs Jeffreys’ prior σ2\\sigma^2σ2∝1σ2\\begin{equation*} \\begin{aligned} \\sigma^2 &\\propto \\frac{1}{\\sigma^2} \\end{aligned} \\end{equation*} corresponds improper prior =0a = 0 b=0b = 0. provide convenience functions users wishing set σ2\\sigma^2 prior Chipman, George, McCulloch (2010). case, ν\\nu set default 3 λ\\lambda calibrated follows: “overestimate,” σ̂2\\hat{\\sigma}^2, σ2\\sigma^2 obtained via simple linear regression yy XX λ\\lambda chosen ensure p(σ2<σ̂2)=qp(\\sigma^2 < \\hat{\\sigma}^2) = q value qq, typically set default value 0.9. done stochtree via calibrateInverseGammaErrorVariance function. Now run BART model variance parameterization Inspect --sample predictions model  Inspect posterior samples σ2\\sigma^2","code":"# Load library library(stochtree)  # Generate data n <- 500 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd)  # Test/train split test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]  # Calibrate the scale parameter for the variance term as in Chipman et al (2010) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y_train, X_train, nu = nu) general_params <- list(sigma2_global_shape = nu/2, sigma2_global_scale = (nu*lambda)/2) bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     num_gfr = 0, num_burnin = 1000, num_mcmc = 100,                     general_params = general_params) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(bart_model$sigma2_global_samples, ylab = \"sigma^2\", xlab = \"iteration\") abline(h = noise_sd^2, col = \"red\", lty = 3, lwd = 3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"demo-1-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Supervised Learning","title":"Deeper Dive on Sampled Forests in StochTree","text":"Generate sample data feature 10 “important” feature.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,10]) & (0.25 > X[,10])) * (-7.5) +      ((0.25 <= X[,10]) & (0.5 > X[,10])) * (-2.5) +      ((0.5 <= X[,10]) & (0.75 > X[,10])) * (2.5) +      ((0.75 <= X[,10]) & (1 > X[,10])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"sampling-and-analysis","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling and Analysis","title":"Deeper Dive on Sampled Forests in StochTree","text":"Run BART. Inspect MCMC samples   Check variable split count last GFR sample split counts appear relatively uniform across features, let’s dig deeper look individual trees, starting first tree last “grow--root” sample. tree single split “important” feature. Now, let’s look second tree. tree also splits important feature. see “later” trees splitting features, also note trees fitting outcome already residualized many “relevant splits” made trees 1 2. Now, let’s inspect first tree last GFR sample depth, following scikit-learn vignette","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 general_params <- list(keep_gfr = T) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params ) plot(bart_model$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) bart_model$mean_forests$get_forest_split_counts(10, p_x) #>  [1] 17 30 31 25 24 32 31 32 23 27 bart_model$mean_forests$get_aggregate_split_counts(p_x) #>  [1] 2212 2437 2739 3330 2586 2812 2351 3141 2449 2966 splits = bart_model$mean_forests$get_granular_split_counts(p_x) splits[10,1,] #>  [1] 0 0 0 0 0 0 0 0 0 2 splits[10,2,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,20,] #>  [1] 0 0 0 0 0 0 0 1 0 0 splits[10,30,] #>  [1] 0 0 1 1 0 0 0 0 0 0 forest_num <- 9 tree_num <- 0 nodes <- sort(bart_model$mean_forests$nodes(forest_num, tree_num)) for (nid in nodes) {     if (bart_model$mean_forests$is_leaf_node(forest_num, tree_num, nid)) {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         leaf_values <- bart_model$mean_forests$node_leaf_values(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a leaf node with value=\",              format(leaf_values, digits = 3), \"\\n\", sep = \"\")     } else {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         left <- bart_model$mean_forests$left_child_node(forest_num, tree_num, nid)         feature <- bart_model$mean_forests$node_split_index(forest_num, tree_num, nid)         threshold <- bart_model$mean_forests$node_split_threshold(forest_num, tree_num, nid)         right <- bart_model$mean_forests$right_child_node(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a split node, which tells us to go to node \",              left, \" if X[:, \", feature, \"] <= \", format(threshold, digits = 3),              \" else to node \", right, \"\\n\", sep = \"\")     } } #> node=0 is a split node, which tells us to go to node 1 if X[:, 9] <= 0.496 else to node 2 #>  node=1 is a split node, which tells us to go to node 3 if X[:, 9] <= 0.249 else to node 4 #>  node=2 is a leaf node with value=0.395 #>      node=3 is a leaf node with value=-0.452 #>      node=4 is a leaf node with value=-0.119"},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Drew Herren. Author, maintainer. Richard Hahn. Author. Jared Murray. Author. Carlos Carvalho. Author. Jingyu . Author. stochtree contributors. Copyright holder.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herren D, Hahn R, Murray J, Carvalho C, J (2025). stochtree: Stochastic tree ensembles (XBART BART) supervised learning causal inference. R package version 0.1.0, https://stochtree.ai.","code":"@Manual{,   title = {stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference},   author = {Drew Herren and Richard Hahn and Jared Murray and Carlos Carvalho and Jingyu He},   year = {2025},   note = {R package version 0.1.0},   url = {https://stochtree.ai}, }"},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"stochtree-r-package","dir":"","previous_headings":"","what":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"Software building stochastic tree ensembles (.e. BART, XBART) supervised learning causal inference.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"stochtree can installed CRAN via development version stochtree can installed github via","code":"install.package(\"stochtree\") remotes::install_github(\"StochasticTree/stochtree\", ref=\"r-dev\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — CppJson","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_ptr External pointer C++ nlohmann::json object num_forests Number forests nlohmann::json object forest_labels Names forest objects overall nlohmann::json object num_rfx Number random effects terms nlohman::json object rfx_container_labels Names rfx container objects overall nlohmann::json object rfx_mapper_labels Names rfx label mapper objects overall nlohmann::json object rfx_groupid_labels Names rfx group id objects overall nlohmann::json object","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"CppJson$new() CppJson$add_forest() CppJson$add_random_effects() CppJson$add_scalar() CppJson$add_integer() CppJson$add_boolean() CppJson$add_string() CppJson$add_vector() CppJson$add_integer_vector() CppJson$add_string_vector() CppJson$add_list() CppJson$add_string_list() CppJson$get_scalar() CppJson$get_integer() CppJson$get_boolean() CppJson$get_string() CppJson$get_vector() CppJson$get_integer_vector() CppJson$get_string_vector() CppJson$get_numeric_list() CppJson$get_string_list() CppJson$return_json_string() CppJson$save_file() CppJson$load_from_file() CppJson$load_from_string()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Create new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-forest-","dir":"Reference","previous_headings":"","what":"Method add_forest()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert forest container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_forest(forest_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"forest_samples ForestSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-random-effects-","dir":"Reference","previous_headings":"","what":"Method add_random_effects()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert random effects container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_random_effects(rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"rfx_samples RandomEffectSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-scalar-","dir":"Reference","previous_headings":"","what":"Method add_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_scalar(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-","dir":"Reference","previous_headings":"","what":"Method add_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Integer value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-boolean-","dir":"Reference","previous_headings":"","what":"Method add_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_boolean(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-","dir":"Reference","previous_headings":"","what":"Method add_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-vector-","dir":"Reference","previous_headings":"","what":"Method add_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-vector-","dir":"Reference","previous_headings":"","what":"Method add_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add array json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Character vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-list-","dir":"Reference","previous_headings":"","what":"Method add_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-list-","dir":"Reference","previous_headings":"","what":"Method add_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-scalar-","dir":"Reference","previous_headings":"","what":"Method get_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve scalar value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_scalar(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-","dir":"Reference","previous_headings":"","what":"Method get_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-boolean-","dir":"Reference","previous_headings":"","what":"Method get_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_boolean(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-","dir":"Reference","previous_headings":"","what":"Method get_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-vector-","dir":"Reference","previous_headings":"","what":"Method get_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-vector-","dir":"Reference","previous_headings":"","what":"Method get_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-vector-","dir":"Reference","previous_headings":"","what":"Method get_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve character vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-numeric-list-","dir":"Reference","previous_headings":"","what":"Method get_numeric_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list numeric vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_numeric_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-list-","dir":"Reference","previous_headings":"","what":"Method get_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list string vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-return-json-string-","dir":"Reference","previous_headings":"","what":"Method return_json_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert JSON object -memory string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$return_json_string()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-save-file-","dir":"Reference","previous_headings":"","what":"Method save_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Save json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$save_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-file-","dir":"Reference","previous_headings":"","what":"Method load_from_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-string-","dir":"Reference","previous_headings":"","what":"Method load_from_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_string(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Persists C++ random number generator throughout R session ensure reproducibility given random seed. seed provided, C++ random number generator initialized using std::random_device.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"rng_ptr External pointer C++ std::mt19937 class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"CppRNG$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Create new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"","code":"CppRNG$new(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores a single ensemble of decision trees (often treated as the ","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Wrapper around C++ tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_ptr External pointer C++ TreeEnsemble class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Forest$new() Forest$predict() Forest$predict_raw() Forest$set_root_leaves() Forest$prepare_for_sampler() Forest$adjust_residual() Forest$num_trees() Forest$leaf_dimension() Forest$is_constant_leaf() Forest$is_exponentiated() Forest$add_numeric_split_tree() Forest$get_tree_leaves() Forest$get_tree_split_counts() Forest$get_forest_split_counts() Forest$tree_max_depth() Forest$average_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Create new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"vector predictions many rows forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict \"raw\" leaf values (without multiplied basis) every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array vector (length number observations). case multivariate leaf regression, array matrix (number observations leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$set_root_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$adjust_residual(dataset, outcome, forest_model, requires_basis, add)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return number trees ensemble Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return output dimension trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return constant leaf status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return exponentiation status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$add_numeric_split_tree(   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_leaves(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable given tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_split_counts(tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_forest_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method tree_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum depth specific tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$tree_max_depth(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Tree index within forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a forest — ForestDataset","title":"Dataset used to sample a forest — ForestDataset","text":"dataset consists three matrices / vectors: covariates, bases, variance weights. basis vector variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a forest — ForestDataset","text":"data_ptr External pointer C++ ForestDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a forest — ForestDataset","text":"ForestDataset$new() ForestDataset$update_basis() ForestDataset$num_observations() ForestDataset$num_covariates() ForestDataset$num_basis() ForestDataset$has_basis() ForestDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a forest — ForestDataset","text":"Create new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$new(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-update-basis-","dir":"Reference","previous_headings":"","what":"Method update_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Update basis matrix dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$update_basis(basis)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"basis Updated matrix bases used define leaf regression","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number observations ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-covariates-","dir":"Reference","previous_headings":"","what":"Method num_covariates()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number covariates ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_covariates()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Covariate count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-basis-","dir":"Reference","previous_headings":"","what":"Method num_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number bases ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Basis count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines and samples a forest model — ForestModel","title":"Class that defines and samples a forest model — ForestModel","text":"Hosts C++ data structures needed sample ensemble decision trees, exposes functionality run forest sampler (using either MCMC grow--root algorithm).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines and samples a forest model — ForestModel","text":"tracker_ptr External pointer C++ ForestTracker class tree_prior_ptr External pointer C++ TreePrior class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines and samples a forest model — ForestModel","text":"ForestModel$new() ForestModel$sample_one_iteration() ForestModel$propagate_basis_update() ForestModel$propagate_residual_update() ForestModel$update_alpha() ForestModel$update_beta() ForestModel$update_min_samples_leaf() ForestModel$update_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines and samples a forest model — ForestModel","text":"Create new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$new(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth = -1 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree can reach","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-sample-one-iteration-","dir":"Reference","previous_headings":"","what":"Method sample_one_iteration()","title":"Class that defines and samples a forest model — ForestModel","text":"Run single iteration forest sampling algorithm (MCMC GFR)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$sample_one_iteration(   forest_dataset,   residual,   forest_samples,   active_forest,   rng,   feature_types,   leaf_model_int,   leaf_model_scale,   variable_weights,   a_forest,   b_forest,   global_scale,   cutpoint_grid_size = 500,   keep_forest = T,   gfr = T,   pre_initialized = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset Dataset used sample forest residual Outcome used sample forest forest_samples Container forest samples active_forest \"Active\" forest updated sampler iteration rng Wrapper around C++ random number generator feature_types Vector specifying type p covariates forest_dataset (0 = numeric, 1 = ordered categorical, 2 = unordered categorical) leaf_model_int Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression) leaf_model_scale Scale parameter used leaf node model (q x q matrix q dimensionality basis >1 leaf_model_int = 2) variable_weights Vector specifying sampling probability p covariates forest_dataset a_forest Shape parameter variance forest model (applicable) b_forest Scale parameter variance forest model (applicable) global_scale Global variance parameter cutpoint_grid_size (Optional) Number unique cutpoints consider (default: 500, currently used GFR = TRUE) keep_forest (Optional) Whether updated forest sample saved forest_samples. Default: T. gfr (Optional) Whether forest sampled using \"grow--root\" (GFR) algorithm. Default: T. pre_initialized (Optional) Whether leaves pre-initialized outside sampling loop (samples drawn). multi-forest implementations like BCF, true, though single-forest supervised learning implementation, can let C++ initialization. Default: F.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-basis-update-","dir":"Reference","previous_headings":"","what":"Method propagate_basis_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Propagates basis update (full/partial) residual iteratively () adding back previous prediction tree, (b) recomputing predictions tree (caching C++ side), (c) subtracting new predictions residual. useful cases basis (e.g. leaf regression) updated outside tree sampler (e.g. adaptive coding binary treatment BCF). basis updated, overall \"function\" represented tree model changed reflected residual next sampling loop run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_basis_update(dataset, outcome, active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions active_forest \"Active\" forest updated sampler iteration","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-residual-update-","dir":"Reference","previous_headings":"","what":"Method propagate_residual_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Update current state outcome (.e. partial residual) data subtracting current predictions tree. function run Outcome class's update_data method, overwrites partial residual entirely new stream outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_residual_update(residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"residual Outcome used sample forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Class that defines and samples a forest model — ForestModel","text":"Update alpha tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"alpha New value alpha used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Class that defines and samples a forest model — ForestModel","text":"Update beta tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"beta New value beta used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Class that defines and samples a forest model — ForestModel","text":"Update min_samples_leaf tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"min_samples_leaf New value min_samples_leaf used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Class that defines and samples a forest model — ForestModel","text":"Update max_depth tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"max_depth New value max_depth used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — ForestSamples","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_container_ptr External pointer C++ ForestContainer class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ForestSamples$new() ForestSamples$load_from_json() ForestSamples$append_from_json() ForestSamples$load_from_json_string() ForestSamples$append_from_json_string() ForestSamples$predict() ForestSamples$predict_raw() ForestSamples$predict_raw_single_forest() ForestSamples$predict_raw_single_tree() ForestSamples$set_root_leaves() ForestSamples$prepare_for_sampler() ForestSamples$adjust_residual() ForestSamples$save_json() ForestSamples$load_json() ForestSamples$num_samples() ForestSamples$num_trees() ForestSamples$leaf_dimension() ForestSamples$is_constant_leaf() ForestSamples$is_exponentiated() ForestSamples$add_forest_with_constant_leaves() ForestSamples$add_numeric_split_tree() ForestSamples$get_tree_leaves() ForestSamples$get_tree_split_counts() ForestSamples$get_forest_split_counts() ForestSamples$get_aggregate_split_counts() ForestSamples$get_granular_split_counts() ForestSamples$ensemble_tree_max_depth() ForestSamples$average_ensemble_max_depth() ForestSamples$average_max_depth() ForestSamples$num_forest_leaves() ForestSamples$sum_leaves_squared() ForestSamples$is_leaf_node() ForestSamples$is_numeric_split_node() ForestSamples$is_categorical_split_node() ForestSamples$parent_node() ForestSamples$left_child_node() ForestSamples$right_child_node() ForestSamples$node_depth() ForestSamples$node_split_index() ForestSamples$node_split_threshold() ForestSamples$node_split_categories() ForestSamples$node_leaf_values() ForestSamples$num_nodes() ForestSamples$num_leaves() ForestSamples$num_leaf_parents() ForestSamples$num_split_nodes() ForestSamples$nodes() ForestSamples$leaves() ForestSamples$delete_sample()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns samples ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array two-dimensional (number observations, number forest samples). case multivariate leaf regression, array three-dimension (number observations, leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-forest-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_forest()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_forest(forest_dataset, forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-tree-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific tree specific forest every observation forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_tree(forest_dataset, forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$set_root_leaves(forest_num, leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest sample within container. leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$adjust_residual(   dataset,   outcome,   forest_model,   requires_basis,   forest_num,   add )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction forest_num Index forest used update residuals add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-save-json-","dir":"Reference","previous_headings":"","what":"Method save_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Store trees metadata ForestDataset class json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$save_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name output json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-json-","dir":"Reference","previous_headings":"","what":"Method load_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Load trees metadata ensemble json file. Note trees metadata already present ForestDataset class overwritten.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name model input json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-samples-","dir":"Reference","previous_headings":"","what":"Method num_samples()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number samples ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sample count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number trees ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return output dimension trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return constant leaf status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return exponentiation status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-forest-with-constant-leaves-","dir":"Reference","previous_headings":"","what":"Method add_forest_with_constant_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add new -root ensemble container, leaves set value / vector provided","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_forest_with_constant_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"leaf_value Value (vector values) initialize root nodes tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_numeric_split_tree(   forest_num,   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree split tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_split_counts(forest_num, tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_forest_split_counts(forest_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-aggregate-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_aggregate_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, aggregated across ensembles trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_aggregate_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-granular-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_granular_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, reported separately ensemble tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_granular_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-ensemble-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method ensemble_tree_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum depth specific tree specific ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$ensemble_tree_max_depth(ensemble_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number tree_num Tree index within ensemble ensemble_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-ensemble-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_ensemble_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_ensemble_max_depth(ensemble_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-forest-leaves-","dir":"Reference","previous_headings":"","what":"Method num_forest_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_forest_leaves(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count leaves ensemble stored forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-sum-leaves-squared-","dir":"Reference","previous_headings":"","what":"Method sum_leaves_squared()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sum squared (raw) leaf values given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$sum_leaves_squared(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-leaf-node-","dir":"Reference","previous_headings":"","what":"Method is_leaf_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_leaf_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node leaf, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-numeric-split-node-","dir":"Reference","previous_headings":"","what":"Method is_numeric_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples numeric split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_numeric_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node numeric split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-categorical-split-node-","dir":"Reference","previous_headings":"","what":"Method is_categorical_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples categorical split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_categorical_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node categorical split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-parent-node-","dir":"Reference","previous_headings":"","what":"Method parent_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Parent node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$parent_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID parent node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-left-child-node-","dir":"Reference","previous_headings":"","what":"Method left_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Left child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$left_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID left child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-right-child-node-","dir":"Reference","previous_headings":"","what":"Method right_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Right child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$right_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID right child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-depth-","dir":"Reference","previous_headings":"","what":"Method node_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Depth given node given tree given forest ForestSamples object, 0 depth root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_depth(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-index-","dir":"Reference","previous_headings":"","what":"Method node_split_index()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Split index given node given tree given forest ForestSamples object. Returns -1 node leaf.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_index(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-threshold-","dir":"Reference","previous_headings":"","what":"Method node_split_threshold()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defines numeric split given node given tree given forest ForestSamples object. Returns Inf node leaf categorical split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_threshold(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-categories-","dir":"Reference","previous_headings":"","what":"Method node_split_categories()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array category indices define categorical split given node given tree given forest ForestSamples object. Returns c(Inf) node leaf numeric split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_categories(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Categories defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-leaf-values-","dir":"Reference","previous_headings":"","what":"Method node_leaf_values()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node value(s) given node given tree given forest ForestSamples object. Values stale node split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_leaf_values(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Vector (often univariate) leaf values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-nodes-","dir":"Reference","previous_headings":"","what":"Method num_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaves-","dir":"Reference","previous_headings":"","what":"Method num_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaves","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaf-parents-","dir":"Reference","previous_headings":"","what":"Method num_leaf_parents()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaf parents (split nodes two leaves children) given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaf_parents(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaf parents","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-split-nodes-","dir":"Reference","previous_headings":"","what":"Method num_split_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number split nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_split_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree split nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-nodes-","dir":"Reference","previous_headings":"","what":"Method nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array node indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaves-","dir":"Reference","previous_headings":"","what":"Method leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array leaf indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices leaf nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Modify ForestSamples object removing forest sample indexed `forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$delete_sample(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome / partial residual used to sample an additive model. — Outcome","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome class wrapper around vector (mutable) outcomes ML tasks (supervised learning, causal inference). additive tree ensemble sampled, outcome used sample specific model term \"partial residual\" consisting outcome minus predictions every model term (trees, group random effects, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"data_ptr External pointer C++ Outcome class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Outcome$new() Outcome$get_data() Outcome$add_vector() Outcome$subtract_vector() Outcome$update_data()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Create new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$new(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Extract raw data R underlying C++ object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$get_data()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"R vector containing (copy ) values Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data adding values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$add_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector added outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-subtract-vector-","dir":"Reference","previous_headings":"","what":"Method subtract_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data subtracting values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$subtract_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector subtracted outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-update-data-","dir":"Reference","previous_headings":"","what":"Method update_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data replacing element elements new_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$update_data(new_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new_vector Vector overwrite current data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps the ","title":"Class that wraps the ","text":"Coordinates various C++ random effects classes persists needed prediction / serialization","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps the ","text":"rfx_container_ptr External pointer C++ StochTree::RandomEffectsContainer class label_mapper_ptr External pointer C++ StochTree::LabelMapper class training_group_ids Unique vector group IDs training dataset","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps the ","text":"RandomEffectSamples$new() RandomEffectSamples$load_in_session() RandomEffectSamples$load_from_json() RandomEffectSamples$append_from_json() RandomEffectSamples$load_from_json_string() RandomEffectSamples$append_from_json_string() RandomEffectSamples$predict() RandomEffectSamples$extract_parameter_samples() RandomEffectSamples$delete_sample() RandomEffectSamples$extract_label_mapping()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps the ","text":"Create new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-in-session-","dir":"Reference","previous_headings":"","what":"Method load_in_session()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object \"-session\" R objects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_in_session(   num_components,   num_groups,   random_effects_tracker )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that wraps the ","text":"Predict random effects observation implied rfx_group_ids rfx_basis. random effects model \"intercept-\" rfx_basis vector ones size length(rfx_group_ids).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$predict(rfx_group_ids, rfx_basis = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"rfx_group_ids Indices random effects groups prediction set rfx_basis (Optional ) Basis used random effects prediction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"Matrix many rows observations provided many columns samples drawn model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-parameter-samples-","dir":"Reference","previous_headings":"","what":"Method extract_parameter_samples()","title":"Class that wraps the ","text":"Extract random effects parameters sampled. \"redundant parameterization\" Gelman et al (2008), includes four parameters: alpha (\"working parameter\" shared across every group), xi (\"group parameter\" sampled separately group), beta (product alpha xi, corresponds overall group-level random effects), sigma (group-independent prior variance component xi).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_parameter_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that wraps the ","text":"Modify RandomEffectsSamples object removing parameter samples index sample_num.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$delete_sample(sample_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"sample_num Index RFX sample removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-label-mapping-","dir":"Reference","previous_headings":"","what":"Method extract_label_mapping()","title":"Class that wraps the ","text":"Convert mapping group IDs random effect components indices C++ R native format","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_label_mapping()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List mapping group ID random effect components.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a random effects model — RandomEffectsDataset","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"dataset consists three matrices / vectors: group labels, bases, variance weights. Variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"data_ptr External pointer C++ RandomEffectsDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"RandomEffectsDataset$new() RandomEffectsDataset$num_observations() RandomEffectsDataset$has_group_labels() RandomEffectsDataset$has_basis() RandomEffectsDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Create new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$new(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Return number observations RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-group-labels-","dir":"Reference","previous_headings":"","what":"Method has_group_labels()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset group label indices","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_group_labels()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True group label vector loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"The core ","title":"The core ","text":"Stores current model state, prior parameters, procedures sampling conditional posterior parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The core ","text":"rfx_model_ptr External pointer C++ StochTree::RandomEffectsModel class num_groups Number groups random effects model num_components Number components (.e. dimension basis) random effects model","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The core ","text":"RandomEffectsModel$new() RandomEffectsModel$sample_random_effect() RandomEffectsModel$predict() RandomEffectsModel$set_working_parameter() RandomEffectsModel$set_group_parameters() RandomEffectsModel$set_working_parameter_cov() RandomEffectsModel$set_group_parameter_cov() RandomEffectsModel$set_variance_prior_shape() RandomEffectsModel$set_variance_prior_scale()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The core ","text":"Create new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$new(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-sample-random-effect-","dir":"Reference","previous_headings":"","what":"Method sample_random_effect()","title":"The core ","text":"Sample random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$sample_random_effect(   rfx_dataset,   residual,   rfx_tracker,   rfx_samples,   keep_sample,   global_variance,   rng )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset residual Object type Outcome rfx_tracker Object type RandomEffectsTracker rfx_samples Object type RandomEffectSamples keep_sample Whether sample retained rfx_samples. FALSE, state rfx_tracker updated, parameter values added sample container. Samples commonly discarded due burn-thinning. global_variance Scalar global variance parameter rng Object type CppRNG","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"The core ","text":"Predict (single sample ) random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$predict(rfx_dataset, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset rfx_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"Vector predictions size matching number observations rfx_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter()","title":"The core ","text":"Set value \"working parameter.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameters-","dir":"Reference","previous_headings":"","what":"Method set_group_parameters()","title":"The core ","text":"Set value \"group parameters.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameters(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter_cov()","title":"The core ","text":"Set value working parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_group_parameter_cov()","title":"The core ","text":"Set value group parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-shape-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_shape()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_shape(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-scale-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_scale()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_scale(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines a ","title":"Class that defines a ","text":"Stores mapping every observation group index, mapping group indices training sample observations available group, predictions observation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines a ","text":"rfx_tracker_ptr External pointer C++ StochTree::RandomEffectsTracker class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines a ","text":"RandomEffectsTracker$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines a ","text":"Create new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines a ","text":"","code":"RandomEffectsTracker$new(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines a ","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines a ","text":"new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the BART algorithm for supervised learning. — bart","title":"Run the BART algorithm for supervised learning. — bart","text":"Run BART algorithm supervised learning.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"bart(   X_train,   y_train,   leaf_basis_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   leaf_basis_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mean_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the BART algorithm for supervised learning. — bart","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). y_train Outcome modeled ensemble. leaf_basis_train (Optional) Bases used define regression model y ~ W leaf regression tree. default, BART assumes constant leaf node parameters, implicitly regressing constant basis ones (.e. y ~ 1). rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. leaf_basis_test (Optional) Test set bases used define \"sample\" evaluation data. test set optional, structure provided test set must match training set (.e. X_train leaf_basis_train provided, test set must consist X_test leaf_basis_test number columns). rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BART model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BART sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var(y_train), y_train possibly standardized outcome, set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mean_forest_params (Optional) list mean forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional mean model. Default: 200. num_trees = 0, conditional mean modeled using forest, function proceed num_trees > 0 variance forest. alpha Prior probability splitting tree depth 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, mean model. Default: 5. max_depth Maximum depth tree ensemble mean model. Default: 10. Can overridden -1 enforce depth limits trees. sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(leaf_basis_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. var_forest_leaf_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var(y_train))/num_trees, y_train possibly standardized outcome, set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the BART algorithm for supervised learning. — bart","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"Run Bayesian Causal Forest (BCF) algorithm regularized causal effect estimation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"bcf(   X_train,   Z_train,   y_train,   propensity_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   Z_test = NULL,   propensity_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mu_forest_params = list(),   tau_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). Z_train Vector (continuous binary) treatment assignments. y_train Outcome modeled ensemble. propensity_train (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. Z_test (Optional) Test set (continuous binary) treatment assignments. propensity_test (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BCF model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BCF sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var((y_train-mean(y_train))/sd(y_train)) set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). workaround wish provide custom weight propensity score include column X_train set propensity_covariate 'none' adjust keep_vars accordingly mu tau forests. propensity_covariate Whether include propensity score covariate either forests. Enter \"none\" neither, \"mu\" prognostic forest, \"tau\" treatment forest, \"\" forests. \"none\" propensity score provided, estimated (X_train, Z_train) using stochtree::bart(). Default: \"mu\". adaptive_coding Whether use \"adaptive coding\" scheme binary treatment variable coded manually (0,1) (-1,1) learned via parameters b_0 b_1 attach outcome model [b_0 (1-Z) + b_1 Z] tau(X). ignored Z binary. Default: TRUE. control_coding_init Initial value \"control\" group coding parameter. ignored Z binary. Default: -0.5. treated_coding_init Initial value \"treatment\" group coding parameter. ignored Z binary. Default: 0.5. rfx_prior_var Prior (diagonals ) covariance additive group-level random regression coefficients. Must vector length ncol(rfx_basis_train). Default: rep(1, ncol(rfx_basis_train)) random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mu_forest_params (Optional) list prognostic forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble prognostic forest. Default: 250. Must positive integer. alpha Prior probability splitting tree depth 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, prognostic forest. Default: 5. max_depth Maximum depth tree ensemble prognostic forest. Default: 10. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable prognostic forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. tau_forest_params (Optional) list treatment effect forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble treatment effect forest. Default: 50. Must positive integer. alpha Prior probability splitting tree depth 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.25. beta Exponent decreases split probabilities nodes depth > 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 3. min_samples_leaf Minimum allowable size leaf, terms training samples, treatment effect forest. Default: 5. max_depth Maximum depth tree ensemble treatment effect forest. Default: 5. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable treatment effect forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(Z_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. variance_forest_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var((y_train-mean(y_train))/sd(y_train)))/num_trees set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, X_test = X_test, Z_test = Z_test,                   propensity_test = pi_test) plot(rowMeans(bcf_model$mu_hat_test), mu_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(bcf_model$tau_hat_test), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Chipman, H., George, E., Hahn, R., McCulloch, R., Pratola, M. Sparapani, R. (2022). Bayesian Additive Regression Trees, Computational Approaches. Wiley StatsRef: Statistics Reference Online (eds N. Balakrishnan, T. Colton, B. Everitt, W. Piegorsch, F. Ruggeri J.L. Teugels). https://doi.org/10.1002/9781118445112.stat08288","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"calibrateInverseGammaErrorVariance(   y,   X,   W = NULL,   nu = 3,   quant = 0.9,   standardize = TRUE )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"y Outcome modeled using BART, BCF another nonparametric ensemble method. X Covariates used partition trees ensemble series ensemble. W (Optional) Basis used define \"leaf regression\" model decision tree. \"classic\" BART model assumes constant leaf parameter, equivalent \"leaf regression\" basis ones, though necessary pass vector ones, BART function. Default: NULL. nu shape parameter global error variance's IG prior. scale parameter Sparapani et al (2021) parameterization defined nu*lambda lambda output function. Default: 3. quant (Optional) Quantile inverse gamma prior distribution represented linear-regression-based overestimate sigma^2. Default: 0.9. standardize (Optional) Whether outcome standardized ((y-mean(y))/sd(y)) calibration lambda. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Value lambda determines scale parameter global error variance prior (sigma^2 ~ IG(nu,nu*lambda))","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) y <- 10*X[,1] - 20*X[,2] + rnorm(n) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y, X, nu = nu) sigma2hat <- mean(resid(lm(y~X))^2) mean(var(y)/rgamma(100000, nu, rate = nu*lambda) < sigma2hat) #> [1] 0.90021"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf indices — computeForestLeafIndices","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"Compute return vector representation forest's leaf predictions every observation dataset. vector \"row-major\" format can easily re-represented CSR sparse matrix: elements organized first n elements correspond leaf predictions n observations dataset first tree ensemble, next n elements correspond predictions second tree . \"data\" element corresponds uniquely mapped column index corresponds single leaf single tree (.e. tree 1 3 leaves, column indices range 0 2, tree 2's leaf indices begin 3, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"computeForestLeafIndices(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"List vectors. vector size num_obs * num_trees, num_obs = nrow(covariates) num_trees number trees relevant forest model_object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafIndices(bart_model, X, \"mean\") #>          [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>     [1,]    1    1    0    0    3    2    2    0    0     0 #>     [2,]    0    0    2    2    1    1    1    1    1     1 #>     [3,]    0    0    2    2    1    1    1    1    1     1 #>     [4,]    0    0    1    1    0    0    0    1    1     1 #>     [5,]    1    1    0    0    3    2    2    0    0     0 #>     [6,]    1    1    0    0    2    2    2    0    0     0 #>     [7,]    0    0    2    2    1    1    1    1    1     1 #>     [8,]    1    1    0    0    3    2    2    0    0     0 #>     [9,]    1    1    0    0    3    2    2    0    0     0 #>    [10,]    0    0    2    2    1    1    1    1    1     1 #>    [11,]    0    0    1    1    0    0    0    1    1     1 #>    [12,]    1    1    0    0    3    2    2    0    0     0 #>    [13,]    0    0    1    1    0    0    0    1    1     1 #>    [14,]    1    1    0    0    3    2    2    0    0     0 #>    [15,]    1    1    0    0    3    2    2    0    0     0 #>    [16,]    0    0    2    2    1    1    1    1    1     1 #>    [17,]    0    0    1    1    0    0    0    1    1     1 #>    [18,]    0    0    2    2    1    1    1    1    1     1 #>    [19,]    0    0    2    2    1    1    1    1    1     1 #>    [20,]    1    1    0    0    3    2    2    0    0     0 #>    [21,]    0    0    1    1    0    0    0    1    1     1 #>    [22,]    0    0    1    1    0    0    0    1    1     1 #>    [23,]    0    0    2    2    1    1    1    1    1     1 #>    [24,]    0    0    2    2    1    1    1    1    1     1 #>    [25,]    0    0    2    2    1    1    1    1    1     1 #>    [26,]    1    1    0    0    3    2    2    0    0     0 #>    [27,]    0    0    1    1    0    0    0    1    1     1 #>    [28,]    1    1    0    0    3    2    2    0    0     0 #>    [29,]    0    0    2    2    1    1    1    1    1     1 #>    [30,]    0    0    1    1    0    0    0    1    1     1 #>    [31,]    0    0    2    2    1    1    1    1    1     1 #>    [32,]    0    0    2    2    1    1    1    1    1     1 #>    [33,]    1    1    0    0    3    2    2    0    0     0 #>    [34,]    0    0    2    2    1    1    1    1    1     1 #>    [35,]    0    0    1    1    0    0    0    1    1     1 #>    [36,]    0    0    2    2    1    1    1    1    1     1 #>    [37,]    0    0    2    2    1    1    1    1    1     1 #>    [38,]    1    1    0    0    2    2    2    0    0     0 #>    [39,]    0    0    2    2    1    1    1    1    1     1 #>    [40,]    0    0    2    2    1    1    1    1    1     1 #>    [41,]    1    1    0    0    3    2    2    0    0     0 #>    [42,]    0    0    2    2    1    1    1    1    1     1 #>    [43,]    1    1    0    0    3    2    2    0    0     0 #>    [44,]    0    0    1    1    0    0    0    1    1     1 #>    [45,]    1    1    0    0    2    2    2    0    0     0 #>    [46,]    1    1    0    0    3    2    2    0    0     0 #>    [47,]    0    0    2    2    1    1    1    1    1     1 #>    [48,]    0    0    2    2    1    1    1    1    1     1 #>    [49,]    0    0    1    1    0    0    0    1    1     1 #>    [50,]    1    1    0    0    3    2    2    0    0     0 #>    [51,]    1    1    0    0    3    2    2    0    0     0 #>    [52,]    0    0    1    1    0    0    0    1    1     1 #>    [53,]    1    1    0    0    3    2    2    0    0     0 #>    [54,]    0    0    1    1    0    0    0    1    1     1 #>    [55,]    1    1    0    0    3    2    2    0    0     0 #>    [56,]    1    1    0    0    3    2    2    0    0     0 #>    [57,]    1    1    0    0    3    2    2    0    0     0 #>    [58,]    1    1    0    0    3    2    2    0    0     0 #>    [59,]    0    0    2    2    1    1    1    1    1     1 #>    [60,]    1    1    0    0    3    2    2    0    0     0 #>    [61,]    1    1    0    0    3    2    2    0    0     0 #>    [62,]    0    0    2    2    1    1    1    1    1     1 #>    [63,]    0    0    2    2    1    1    1    1    1     1 #>    [64,]    1    1    0    0    2    2    2    0    0     0 #>    [65,]    1    1    0    0    3    2    2    0    0     0 #>    [66,]    1    1    0    0    3    2    2    0    0     0 #>    [67,]    0    0    2    2    1    1    1    1    1     1 #>    [68,]    1    1    0    0    2    2    2    0    0     0 #>    [69,]    0    0    1    1    0    0    0    1    1     1 #>    [70,]    0    0    2    2    1    1    1    1    1     1 #>    [71,]    1    1    0    0    3    2    2    0    0     0 #>    [72,]    1    1    0    0    2    2    2    0    0     0 #>    [73,]    1    1    0    0    3    2    2    0    0     0 #>    [74,]    1    1    0    0    3    2    2    0    0     0 #>    [75,]    1    1    0    0    3    2    2    0    0     0 #>    [76,]    1    1    0    0    3    2    2    0    0     0 #>    [77,]    0    0    2    2    1    1    1    1    1     1 #>    [78,]    1    1    0    0    3    2    2    0    0     0 #>    [79,]    0    0    1    1    0    0    0    1    1     1 #>    [80,]    0    0    1    1    0    0    0    1    1     1 #>    [81,]    1    1    0    0    3    2    2    0    0     0 #>    [82,]    0    0    1    1    0    0    0    1    1     1 #>    [83,]    0    0    1    1    0    0    0    1    1     1 #>    [84,]    0    0    2    2    1    1    1    1    1     1 #>    [85,]    0    0    2    2    1    1    1    1    1     1 #>    [86,]    0    0    2    2    1    1    1    1    1     1 #>    [87,]    1    1    0    0    3    2    2    0    0     0 #>    [88,]    0    0    1    1    0    0    0    1    1     1 #>    [89,]    0    0    1    1    0    0    0    1    1     1 #>    [90,]    0    0    1    1    0    0    0    1    1     1 #>    [91,]    0    0    1    1    0    0    0    1    1     1 #>    [92,]    1    1    0    0    3    2    2    0    0     0 #>    [93,]    0    0    2    2    1    1    1    1    1     1 #>    [94,]    1    1    0    0    3    2    2    0    0     0 #>    [95,]    0    0    1    1    0    0    0    1    1     1 #>    [96,]    1    1    0    0    2    2    2    0    0     0 #>    [97,]    1    1    0    0    2    2    2    0    0     0 #>    [98,]    0    0    2    2    1    1    1    1    1     1 #>    [99,]    0    0    1    1    0    0    0    1    1     1 #>   [100,]    0    0    2    2    1    1    1    1    1     1 #>   [101,]    2    2    3    3    4    3    3    2    2     2 #>   [102,]    2    3    4    4    5    4    4    3    3     3 #>   [103,]    2    2    3    3    4    3    3    2    2     2 #>   [104,]    2    3    4    4    5    4    4    3    3     3 #>   [105,]    2    3    4    4    5    4    4    3    3     3 #>   [106,]    2    2    3    3    4    3    3    2    2     2 #>   [107,]    2    3    4    4    5    4    4    3    3     3 #>   [108,]    2    3    4    4    5    4    4    3    3     3 #>   [109,]    2    3    4    4    5    4    4    3    3     3 #>   [110,]    2    3    4    4    5    4    4    3    3     3 #>   [111,]    2    2    3    3    4    3    3    2    2     2 #>   [112,]    2    3    4    4    5    4    4    3    3     3 #>   [113,]    2    3    4    4    5    4    4    3    3     3 #>   [114,]    2    2    3    3    4    3    3    2    2     2 #>   [115,]    2    3    4    4    5    4    4    3    3     3 #>   [116,]    2    2    3    3    4    3    3    2    2     2 #>   [117,]    2    3    4    4    5    4    4    3    3     3 #>   [118,]    2    3    4    4    5    4    4    3    3     3 #>   [119,]    2    2    3    3    4    3    3    2    2     2 #>   [120,]    2    3    4    4    5    4    4    3    3     3 #>   [121,]    2    3    4    4    5    4    4    3    3     3 #>   [122,]    2    3    4    4    5    4    4    3    3     3 #>   [123,]    2    3    4    4    5    4    4    3    3     3 #>   [124,]    2    3    4    4    5    4    4    3    3     3 #>   [125,]    2    3    4    4    5    4    4    3    3     3 #>   [126,]    2    2    3    3    4    3    3    2    2     2 #>   [127,]    2    3    4    4    5    4    4    3    3     3 #>   [128,]    2    2    3    3    4    3    3    2    2     2 #>   [129,]    2    3    4    4    5    4    4    3    3     3 #>   [130,]    2    3    4    4    5    4    4    3    3     3 #>   [131,]    2    3    4    4    5    4    4    3    3     3 #>   [132,]    2    3    4    4    5    4    4    3    3     3 #>   [133,]    2    3    4    4    5    4    4    3    3     3 #>   [134,]    2    2    3    3    4    3    3    2    2     2 #>   [135,]    2    2    3    3    4    3    3    2    2     2 #>   [136,]    2    3    4    4    5    4    4    3    3     3 #>   [137,]    2    2    3    3    4    3    3    2    2     2 #>   [138,]    2    2    3    3    4    3    3    2    2     2 #>   [139,]    2    3    4    4    5    4    4    3    3     3 #>   [140,]    2    3    4    4    5    4    4    3    3     3 #>   [141,]    2    3    4    4    5    4    4    3    3     3 #>   [142,]    2    2    3    3    4    3    3    2    2     2 #>   [143,]    2    3    4    4    5    4    4    3    3     3 #>   [144,]    2    3    4    4    5    4    4    3    3     3 #>   [145,]    2    2    3    3    4    3    3    2    2     2 #>   [146,]    2    3    4    4    5    4    4    3    3     3 #>   [147,]    2    3    4    4    5    4    4    3    3     3 #>   [148,]    2    3    4    4    5    4    4    3    3     3 #>   [149,]    2    2    3    3    4    3    3    2    2     2 #>   [150,]    2    3    4    4    5    4    4    3    3     3 #>   [151,]    2    3    4    4    5    4    4    3    3     3 #>   [152,]    2    2    3    3    4    3    3    2    2     2 #>   [153,]    2    3    4    4    5    4    4    3    3     3 #>   [154,]    2    3    4    4    5    4    4    3    3     3 #>   [155,]    2    3    4    4    5    4    4    3    3     3 #>   [156,]    2    2    3    3    4    3    3    2    2     2 #>   [157,]    2    3    4    4    5    4    4    3    3     3 #>   [158,]    2    3    4    4    5    4    4    3    3     3 #>   [159,]    2    2    3    3    4    3    3    2    2     2 #>   [160,]    2    3    4    4    5    4    4    3    3     3 #>   [161,]    2    3    4    4    5    4    4    3    3     3 #>   [162,]    2    3    4    4    5    4    4    3    3     3 #>   [163,]    2    3    4    4    5    4    4    3    3     3 #>   [164,]    2    2    3    3    4    3    3    2    2     2 #>   [165,]    2    2    3    3    4    3    3    2    2     2 #>   [166,]    2    3    4    4    5    4    4    3    3     3 #>   [167,]    2    3    4    4    5    4    4    3    3     3 #>   [168,]    2    2    3    3    4    3    3    2    2     2 #>   [169,]    2    2    3    3    4    3    3    2    2     2 #>   [170,]    2    3    4    4    5    4    4    3    3     3 #>   [171,]    2    3    4    4    5    4    4    3    3     3 #>   [172,]    2    2    3    3    4    3    3    2    2     2 #>   [173,]    2    2    3    3    4    3    3    2    2     2 #>   [174,]    2    3    4    4    5    4    4    3    3     3 #>   [175,]    2    3    4    4    5    4    4    3    3     3 #>   [176,]    2    3    4    4    5    4    4    3    3     3 #>   [177,]    2    2    3    3    4    3    3    2    2     2 #>   [178,]    2    3    4    4    5    4    4    3    3     3 #>   [179,]    2    2    3    3    4    3    3    2    2     2 #>   [180,]    2    3    4    4    5    4    4    3    3     3 #>   [181,]    2    3    4    4    5    4    4    3    3     3 #>   [182,]    2    3    4    4    5    4    4    3    3     3 #>   [183,]    2    3    4    4    5    4    4    3    3     3 #>   [184,]    2    3    4    4    5    4    4    3    3     3 #>   [185,]    2    3    4    4    5    4    4    3    3     3 #>   [186,]    2    3    4    4    5    4    4    3    3     3 #>   [187,]    2    3    4    4    5    4    4    3    3     3 #>   [188,]    2    3    4    4    5    4    4    3    3     3 #>   [189,]    2    2    3    3    4    3    3    2    2     2 #>   [190,]    2    3    4    4    5    4    4    3    3     3 #>   [191,]    2    3    4    4    5    4    4    3    3     3 #>   [192,]    2    3    4    4    5    4    4    3    3     3 #>   [193,]    2    3    4    4    5    4    4    3    3     3 #>   [194,]    2    2    3    3    4    3    3    2    2     2 #>   [195,]    2    3    4    4    5    4    4    3    3     3 #>   [196,]    2    2    3    3    4    3    3    2    2     2 #>   [197,]    2    2    3    3    4    3    3    2    2     2 #>   [198,]    2    3    4    4    5    4    4    3    3     3 #>   [199,]    2    3    4    4    5    4    4    3    3     3 #>   [200,]    2    2    3    3    4    3    3    2    2     2 #>   [201,]    4    5    6    6    7    6    5    4    4     4 #>   [202,]    3    4    5    5    6    5    6    5    5     5 #>   [203,]    4    5    6    6    7    6    5    4    4     4 #>   [204,]    4    5    6    6    7    6    5    4    4     4 #>   [205,]    4    5    6    6    7    6    5    4    4     4 #>   [206,]    3    4    5    5    6    5    6    5    5     5 #>   [207,]    4    5    6    6    7    6    5    4    4     4 #>   [208,]    4    5    6    6    7    6    5    4    4     4 #>   [209,]    4    5    6    6    7    6    5    4    4     4 #>   [210,]    4    5    6    6    7    6    5    4    4     4 #>   [211,]    3    4    5    5    6    5    7    5    5     5 #>   [212,]    3    4    5    5    6    5    7    5    5     5 #>   [213,]    4    5    6    6    7    6    5    4    4     4 #>   [214,]    4    5    6    6    7    6    5    4    4     4 #>   [215,]    3    4    5    5    6    5    7    5    5     5 #>   [216,]    4    5    6    6    7    6    5    4    4     4 #>   [217,]    3    4    5    5    6    5    7    5    5     5 #>   [218,]    3    4    5    5    6    5    7    5    5     5 #>   [219,]    3    4    5    5    6    5    7    5    5     5 #>   [220,]    4    5    6    6    7    6    5    4    4     4 #>   [221,]    3    4    5    5    6    5    6    5    5     5 #>   [222,]    4    5    6    6    7    6    5    4    4     4 #>   [223,]    3    4    5    5    6    5    6    5    5     5 #>   [224,]    4    5    6    6    7    6    5    4    4     4 #>   [225,]    4    5    6    6    7    6    5    4    4     4 #>   [226,]    3    4    5    5    6    5    7    5    5     5 #>   [227,]    4    5    6    6    7    6    5    4    4     4 #>   [228,]    4    5    6    6    7    6    5    4    4     4 #>   [229,]    3    4    5    5    6    5    6    5    5     5 #>   [230,]    3    4    5    5    6    5    6    5    5     5 #>   [231,]    3    4    5    5    6    5    7    5    5     5 #>   [232,]    3    4    5    5    6    5    7    5    5     5 #>   [233,]    4    5    6    6    7    6    5    4    4     4 #>   [234,]    3    4    5    5    6    5    6    5    5     5 #>   [235,]    3    4    5    5    6    5    6    5    5     5 #>   [236,]    4    5    6    6    7    6    5    4    4     4 #>   [237,]    3    4    5    5    6    5    6    5    5     5 #>   [238,]    3    4    5    5    6    5    7    5    5     5 #>   [239,]    4    5    6    6    7    6    5    4    4     4 #>   [240,]    4    5    6    6    7    6    5    4    4     4 #>   [241,]    4    5    6    6    7    6    5    4    4     4 #>   [242,]    3    4    5    5    6    5    6    5    5     5 #>   [243,]    3    4    5    5    6    5    7    5    5     5 #>   [244,]    3    4    5    5    6    5    6    5    5     5 #>   [245,]    4    5    6    6    7    6    5    4    4     4 #>   [246,]    3    4    5    5    6    5    7    5    5     5 #>   [247,]    3    4    5    5    6    5    7    5    5     5 #>   [248,]    3    4    5    5    6    5    7    5    5     5 #>   [249,]    4    5    6    6    7    6    5    4    4     4 #>   [250,]    4    5    6    6    7    6    5    4    4     4 #>   [251,]    3    4    5    5    6    5    7    5    5     5 #>   [252,]    4    5    6    6    7    6    5    4    4     4 #>   [253,]    4    5    6    6    7    6    5    4    4     4 #>   [254,]    4    5    6    6    7    6    5    4    4     4 #>   [255,]    4    5    6    6    7    6    5    4    4     4 #>   [256,]    3    4    5    5    6    5    6    5    5     5 #>   [257,]    4    5    6    6    7    6    5    4    4     4 #>   [258,]    4    5    6    6    7    6    5    4    4     4 #>   [259,]    4    5    6    6    7    6    5    4    4     4 #>   [260,]    3    4    5    5    6    5    6    5    5     5 #>   [261,]    3    4    5    5    6    5    7    5    5     5 #>   [262,]    3    4    5    5    6    5    6    5    5     5 #>   [263,]    3    4    5    5    6    5    7    5    5     5 #>   [264,]    3    4    5    5    6    5    6    5    5     5 #>   [265,]    3    4    5    5    6    5    6    5    5     5 #>   [266,]    3    4    5    5    6    5    7    5    5     5 #>   [267,]    4    5    6    6    7    6    5    4    4     4 #>   [268,]    3    4    5    5    6    5    7    5    5     5 #>   [269,]    3    4    5    5    6    5    7    5    5     5 #>   [270,]    3    4    5    5    6    5    7    5    5     5 #>   [271,]    4    5    6    6    7    6    5    4    4     4 #>   [272,]    4    5    6    6    7    6    5    4    4     4 #>   [273,]    4    5    6    6    7    6    5    4    4     4 #>   [274,]    4    5    6    6    7    6    5    4    4     4 #>   [275,]    3    4    5    5    6    5    7    5    5     5 #>   [276,]    4    5    6    6    7    6    5    4    4     4 #>   [277,]    4    5    6    6    7    6    5    4    4     4 #>   [278,]    3    4    5    5    6    5    6    5    5     5 #>   [279,]    3    4    5    5    6    5    7    5    5     5 #>   [280,]    4    5    6    6    7    6    5    4    4     4 #>   [281,]    3    4    5    5    6    5    6    5    5     5 #>   [282,]    3    4    5    5    6    5    6    5    5     5 #>   [283,]    3    4    5    5    6    5    7    5    5     5 #>   [284,]    4    5    6    6    7    6    5    4    4     4 #>   [285,]    4    5    6    6    7    6    5    4    4     4 #>   [286,]    4    5    6    6    7    6    5    4    4     4 #>   [287,]    4    5    6    6    7    6    5    4    4     4 #>   [288,]    4    5    6    6    7    6    5    4    4     4 #>   [289,]    3    4    5    5    6    5    6    5    5     5 #>   [290,]    4    5    6    6    7    6    5    4    4     4 #>   [291,]    4    5    6    6    7    6    5    4    4     4 #>   [292,]    3    4    5    5    6    5    7    5    5     5 #>   [293,]    3    4    5    5    6    5    6    5    5     5 #>   [294,]    3    4    5    5    6    5    6    5    5     5 #>   [295,]    3    4    5    5    6    5    7    5    5     5 #>   [296,]    3    4    5    5    6    5    7    5    5     5 #>   [297,]    3    4    5    5    6    5    6    5    5     5 #>   [298,]    3    4    5    5    6    5    6    5    5     5 #>   [299,]    4    5    6    6    7    6    5    4    4     4 #>   [300,]    3    4    5    5    6    5    7    5    5     5 #>   [301,]    6    6    8    8    9    8    9    7    7     7 #>   [302,]    6    6    8    8    9    8    9    7    7     7 #>   [303,]    5    6    7    7    8    7    8    6    6     6 #>   [304,]    6    6    8    8    9    8    9    7    7     7 #>   [305,]    6    6    8    8    9    8    9    7    7     7 #>   [306,]    5    6    8    8    9    8    9    7    7     7 #>   [307,]    5    6    8    8    9    8    9    7    7     7 #>   [308,]    6    6    8    8    9    8    9    7    7     7 #>   [309,]    6    6    8    8    9    8    9    7    7     7 #>   [310,]    6    6    8    8    9    8    9    7    7     7 #>   [311,]    6    6    8    8    9    8    9    7    7     7 #>   [312,]    6    6    7    7    8    7    8    6    6     6 #>   [313,]    6    6    8    8    9    8    9    7    7     7 #>   [314,]    6    6    7    7    8    7    8    6    6     6 #>   [315,]    6    6    8    8    9    8    9    7    7     7 #>   [316,]    6    6    8    8    9    8    9    7    7     7 #>   [317,]    6    6    8    8    9    8    9    7    7     7 #>   [318,]    6    6    8    8    9    8    9    7    7     7 #>   [319,]    6    6    8    8    9    8    9    7    7     7 #>   [320,]    5    6    8    8    9    8    9    7    7     7 #>   [321,]    5    6    8    8    9    8    9    7    7     7 #>   [322,]    6    6    8    8    9    8    9    7    7     7 #>   [323,]    5    6    8    8    9    8    9    7    7     7 #>   [324,]    6    6    8    8    9    8    9    7    7     7 #>   [325,]    5    6    8    8    9    8    9    7    7     7 #>   [326,]    6    6    7    7    8    7    8    6    6     6 #>   [327,]    6    6    8    8    9    8    9    7    7     7 #>   [328,]    6    6    8    8    9    8    9    7    7     7 #>   [329,]    6    6    8    8    9    8    9    7    7     7 #>   [330,]    6    6    8    8    9    8    9    7    7     7 #>   [331,]    6    6    8    8    9    8    9    7    7     7 #>   [332,]    6    6    7    7    8    7    8    6    6     6 #>   [333,]    6    6    8    8    9    8    9    7    7     7 #>   [334,]    5    6    8    8    9    8    9    7    7     7 #>   [335,]    5    6    8    8    9    8    9    7    7     7 #>   [336,]    6    6    8    8    9    8    9    7    7     7 #>   [337,]    5    6    8    8    9    8    9    7    7     7 #>   [338,]    6    6    8    8    9    8    9    7    7     7 #>   [339,]    6    6    8    8    9    8    9    7    7     7 #>   [340,]    6    6    8    8    9    8    9    7    7     7 #>   [341,]    6    6    8    8    9    8    9    7    7     7 #>   [342,]    5    6    7    7    8    7    8    6    6     6 #>   [343,]    6    6    8    8    9    8    9    7    7     7 #>   [344,]    5    6    8    8    9    8    9    7    7     7 #>   [345,]    6    6    8    8    9    8    9    7    7     7 #>   [346,]    6    6    8    8    9    8    9    7    7     7 #>   [347,]    6    6    8    8    9    8    9    7    7     7 #>   [348,]    6    6    7    7    8    7    8    6    6     6 #>   [349,]    6    6    8    8    9    8    9    7    7     7 #>   [350,]    5    6    8    8    9    8    9    7    7     7 #>   [351,]    6    6    7    7    8    7    8    6    6     6 #>   [352,]    6    6    8    8    9    8    9    7    7     7 #>   [353,]    5    6    8    8    9    8    9    7    7     7 #>   [354,]    5    6    7    7    8    7    8    6    6     6 #>   [355,]    5    6    8    8    9    8    9    7    7     7 #>   [356,]    5    6    8    8    9    8    9    7    7     7 #>   [357,]    5    6    8    8    9    8    9    7    7     7 #>   [358,]    6    6    8    8    9    8    9    7    7     7 #>   [359,]    6    6    8    8    9    8    9    7    7     7 #>   [360,]    6    6    8    8    9    8    9    7    7     7 #>   [361,]    6    6    8    8    9    8    9    7    7     7 #>   [362,]    6    6    7    7    8    7    8    6    6     6 #>   [363,]    6    6    8    8    9    8    9    7    7     7 #>   [364,]    5    6    8    8    9    8    9    7    7     7 #>   [365,]    5    6    8    8    9    8    9    7    7     7 #>   [366,]    6    6    7    7    8    7    8    6    6     6 #>   [367,]    6    6    8    8    9    8    9    7    7     7 #>   [368,]    6    6    8    8    9    8    9    7    7     7 #>   [369,]    6    6    7    7    8    7    8    6    6     6 #>   [370,]    6    6    8    8    9    8    9    7    7     7 #>   [371,]    6    6    8    8    9    8    9    7    7     7 #>   [372,]    6    6    8    8    9    8    9    7    7     7 #>   [373,]    5    6    8    8    9    8    9    7    7     7 #>   [374,]    5    6    8    8    9    8    9    7    7     7 #>   [375,]    6    6    8    8    9    8    9    7    7     7 #>   [376,]    6    6    8    8    9    8    9    7    7     7 #>   [377,]    6    6    8    8    9    8    9    7    7     7 #>   [378,]    6    6    8    8    9    8    9    7    7     7 #>   [379,]    6    6    8    8    9    8    9    7    7     7 #>   [380,]    5    6    7    7    8    7    8    6    6     6 #>   [381,]    5    6    7    7    8    7    8    6    6     6 #>   [382,]    5    6    8    8    9    8    9    7    7     7 #>   [383,]    6    6    8    8    9    8    9    7    7     7 #>   [384,]    5    6    8    8    9    8    9    7    7     7 #>   [385,]    5    6    8    8    9    8    9    7    7     7 #>   [386,]    5    6    8    8    9    8    9    7    7     7 #>   [387,]    6    6    8    8    9    8    9    7    7     7 #>   [388,]    5    6    8    8    9    8    9    7    7     7 #>   [389,]    5    6    7    7    8    7    8    6    6     6 #>   [390,]    6    6    8    8    9    8    9    7    7     7 #>   [391,]    6    6    8    8    9    8    9    7    7     7 #>   [392,]    6    6    8    8    9    8    9    7    7     7 #>   [393,]    6    6    8    8    9    8    9    7    7     7 #>   [394,]    5    6    8    8    9    8    9    7    7     7 #>   [395,]    6    6    8    8    9    8    9    7    7     7 #>   [396,]    6    6    8    8    9    8    9    7    7     7 #>   [397,]    5    6    8    8    9    8    9    7    7     7 #>   [398,]    5    6    8    8    9    8    9    7    7     7 #>   [399,]    5    6    8    8    9    8    9    7    7     7 #>   [400,]    6    6    8    8    9    8    9    7    7     7 #>   [401,]    8    8   10   10   11    9   11    9    9     9 #>   [402,]    7    7    9    9   10    9   11    9    9     9 #>   [403,]    8    8   10   10   11    9   11    9    9     9 #>   [404,]    8    8   10   10   11    9   11    9    9     9 #>   [405,]    7    7    9    9   10    9   11    9    9     9 #>   [406,]    7    7    9    9   10    9   11    9    9     9 #>   [407,]    8    8   10   10   11    9   11    9    9     9 #>   [408,]    7    7    9    9   10    9   11    9    9     9 #>   [409,]    8    8   10   10   11    9   11    9    9     9 #>   [410,]    8    8   10   10   11    9   11    9    9     9 #>   [411,]    7    7    9    9   10    9   11    9    9     9 #>   [412,]    7    7    9    9   10    9   11    9    9     9 #>   [413,]    8    8   10   10   11    9   11    9    9     9 #>   [414,]    8    8   10   10   11    9   11    9    9     9 #>   [415,]    7    7    9    9   10    9   10    8    8     8 #>   [416,]    8    8   10   10   11    9   11    9    9     9 #>   [417,]    7    7    9    9   10    9   10    8    8     8 #>   [418,]    7    7    9    9   10    9   11    9    9     9 #>   [419,]    7    7    9    9   10    9   11    9    9     9 #>   [420,]    8    8   10   10   11    9   11    9    9     9 #>   [421,]    7    7    9    9   10    9   11    9    9     9 #>   [422,]    8    8   10   10   11    9   11    9    9     9 #>   [423,]    7    7    9    9   10    9   11    9    9     9 #>   [424,]    8    8   10   10   11    9   11    9    9     9 #>   [425,]    8    8   10   10   11    9   11    9    9     9 #>   [426,]    7    7    9    9   10    9   11    9    9     9 #>   [427,]    8    8   10   10   11    9   11    9    9     9 #>   [428,]    8    8   10   10   11    9   11    9    9     9 #>   [429,]    7    7    9    9   10    9   11    9    9     9 #>   [430,]    7    7    9    9   10    9   11    9    9     9 #>   [431,]    7    7    9    9   10    9   10    8    8     8 #>   [432,]    7    7    9    9   10    9   11    9    9     9 #>   [433,]    8    8   10   10   11    9   11    9    9     9 #>   [434,]    7    7    9    9   10    9   10    8    8     8 #>   [435,]    7    7    9    9   10    9   11    9    9     9 #>   [436,]    8    8   10   10   11    9   11    9    9     9 #>   [437,]    7    7    9    9   10    9   10    8    8     8 #>   [438,]    7    7    9    9   10    9   11    9    9     9 #>   [439,]    8    8   10   10   11    9   11    9    9     9 #>   [440,]    7    7    9    9   10    9   11    9    9     9 #>   [441,]    8    8   10   10   11    9   11    9    9     9 #>   [442,]    7    7    9    9   10    9   10    8    8     8 #>   [443,]    7    7    9    9   10    9   10    8    8     8 #>   [444,]    7    7    9    9   10    9   10    8    8     8 #>   [445,]    8    8   10   10   11    9   11    9    9     9 #>   [446,]    7    7    9    9   10    9   11    9    9     9 #>   [447,]    7    7    9    9   10    9   11    9    9     9 #>   [448,]    7    7    9    9   10    9   11    9    9     9 #>   [449,]    8    8   10   10   11    9   11    9    9     9 #>   [450,]    8    8   10   10   11    9   11    9    9     9 #>   [451,]    7    7    9    9   10    9   11    9    9     9 #>   [452,]    8    8   10   10   11    9   11    9    9     9 #>   [453,]    8    8   10   10   11    9   11    9    9     9 #>   [454,]    8    8   10   10   11    9   11    9    9     9 #>   [455,]    8    8   10   10   11    9   11    9    9     9 #>   [456,]    7    7    9    9   10    9   11    9    9     9 #>   [457,]    8    8   10   10   11    9   11    9    9     9 #>   [458,]    8    8   10   10   11    9   11    9    9     9 #>   [459,]    8    8   10   10   11    9   11    9    9     9 #>   [460,]    7    7    9    9   10    9   11    9    9     9 #>   [461,]    7    7    9    9   10    9   11    9    9     9 #>   [462,]    7    7    9    9   10    9   11    9    9     9 #>   [463,]    7    7    9    9   10    9   10    8    8     8 #>   [464,]    7    7    9    9   10    9   11    9    9     9 #>   [465,]    7    7    9    9   10    9   11    9    9     9 #>   [466,]    7    7    9    9   10    9   11    9    9     9 #>   [467,]    8    8   10   10   11    9   11    9    9     9 #>   [468,]    7    7    9    9   10    9   11    9    9     9 #>   [469,]    7    7    9    9   10    9   11    9    9     9 #>   [470,]    7    7    9    9   10    9   11    9    9     9 #>   [471,]    8    8   10   10   11    9   11    9    9     9 #>   [472,]    8    8   10   10   11    9   11    9    9     9 #>   [473,]    8    8   10   10   11    9   11    9    9     9 #>   [474,]    8    8   10   10   11    9   11    9    9     9 #>   [475,]    7    7    9    9   10    9   10    8    8     8 #>   [476,]    8    8   10   10   11    9   11    9    9     9 #>   [477,]    8    8   10   10   11    9   11    9    9     9 #>   [478,]    7    7    9    9   10    9   10    8    8     8 #>   [479,]    7    7    9    9   10    9   10    8    8     8 #>   [480,]    8    8   10   10   11    9   11    9    9     9 #>   [481,]    7    7    9    9   10    9   11    9    9     9 #>   [482,]    7    7    9    9   10    9   11    9    9     9 #>   [483,]    7    7    9    9   10    9   11    9    9     9 #>   [484,]    8    8   10   10   11    9   11    9    9     9 #>   [485,]    8    8   10   10   11    9   11    9    9     9 #>   [486,]    8    8   10   10   11    9   11    9    9     9 #>   [487,]    8    8   10   10   11    9   11    9    9     9 #>   [488,]    8    8   10   10   11    9   11    9    9     9 #>   [489,]    7    7    9    9   10    9   11    9    9     9 #>   [490,]    8    8   10   10   11    9   11    9    9     9 #>   [491,]    8    8   10   10   11    9   11    9    9     9 #>   [492,]    7    7    9    9   10    9   11    9    9     9 #>   [493,]    7    7    9    9   10    9   11    9    9     9 #>   [494,]    7    7    9    9   10    9   11    9    9     9 #>   [495,]    7    7    9    9   10    9   10    8    8     8 #>   [496,]    7    7    9    9   10    9   11    9    9     9 #>   [497,]    7    7    9    9   10    9   11    9    9     9 #>   [498,]    7    7    9    9   10    9   11    9    9     9 #>   [499,]    7    7    9    9   10    9   11    9    9     9 #>   [500,]    7    7    9    9   10    9   10    8    8     8 #>   [501,]    9    9   11   11   12   12   14   11   11    10 #>   [502,]    9    9   11   11   12   11   13   11   11    10 #>   [503,]    9    9   11   11   12   11   13   11   11    10 #>   [504,]   10   10   12   12   13   10   12   10   10    10 #>   [505,]    9    9   11   11   12   11   13   11   11    10 #>   [506,]    9    9   11   11   12   11   13   11   11    10 #>   [507,]    9    9   11   11   12   11   13   11   11    10 #>   [508,]    9    9   11   11   12   11   13   11   11    10 #>   [509,]    9    9   11   11   12   11   13   11   11    10 #>   [510,]    9    9   11   11   12   11   13   11   11    10 #>   [511,]   10   10   12   12   13   10   12   10   10    10 #>   [512,]   10   10   12   12   13   10   12   10   10    10 #>   [513,]    9    9   11   11   12   11   13   11   11    10 #>   [514,]   10   10   12   12   13   10   12   10   10    10 #>   [515,]   10   10   12   12   13   10   12   10   10    10 #>   [516,]    9    9   11   11   12   12   14   11   11    10 #>   [517,]    9    9   11   11   12   11   13   11   11    10 #>   [518,]    9    9   11   11   12   11   13   11   11    10 #>   [519,]   10   10   12   12   13   10   12   10   10    10 #>   [520,]    9    9   11   11   12   11   13   11   11    10 #>   [521,]   10   10   12   12   13   10   12   10   10    10 #>   [522,]    9    9   11   11   12   11   13   11   11    10 #>   [523,]    9    9   11   11   12   11   13   11   11    10 #>   [524,]    9    9   11   11   12   11   13   11   11    10 #>   [525,]    9    9   11   11   12   11   13   11   11    10 #>   [526,]    9    9   11   11   12   11   13   11   11    10 #>   [527,]   10   10   12   12   13   10   12   10   10    10 #>   [528,]    9    9   11   11   12   11   13   11   11    10 #>   [529,]    9    9   11   11   12   11   13   11   11    10 #>   [530,]    9    9   11   11   12   11   13   11   11    10 #>   [531,]    9    9   11   11   12   11   13   11   11    10 #>   [532,]    9    9   11   11   12   11   13   11   11    10 #>   [533,]    9    9   11   11   12   11   13   11   11    10 #>   [534,]    9    9   11   11   12   11   13   11   11    10 #>   [535,]    9    9   11   11   12   11   13   11   11    10 #>   [536,]    9    9   11   11   12   11   13   11   11    10 #>   [537,]    9    9   11   11   12   11   13   11   11    10 #>   [538,]   10   10   12   12   13   10   12   10   10    10 #>   [539,]    9    9   11   11   12   11   13   11   11    10 #>   [540,]    9    9   11   11   12   11   13   11   11    10 #>   [541,]   10   10   12   12   13   10   12   10   10    10 #>   [542,]   10   10   12   12   13   10   12   10   10    10 #>   [543,]    9    9   11   11   12   11   13   11   11    10 #>   [544,]    9    9   11   11   12   12   14   11   11    10 #>   [545,]    9    9   11   11   12   11   13   11   11    10 #>   [546,]    9    9   11   11   12   11   13   11   11    10 #>   [547,]    9    9   11   11   12   11   13   11   11    10 #>   [548,]   10   10   12   12   13   10   12   10   10    10 #>   [549,]    9    9   11   11   12   11   13   11   11    10 #>   [550,]    9    9   11   11   12   12   14   11   11    10 #>   [551,]    9    9   11   11   12   11   13   11   11    10 #>   [552,]    9    9   11   11   12   11   13   11   11    10 #>   [553,]    9    9   11   11   12   11   13   11   11    10 #>   [554,]    9    9   11   11   12   11   13   11   11    10 #>   [555,]    9    9   11   11   12   11   13   11   11    10 #>   [556,]    9    9   11   11   12   11   13   11   11    10 #>   [557,]    9    9   11   11   12   11   13   11   11    10 #>   [558,]   10   10   12   12   13   10   12   10   10    10 #>   [559,]    9    9   11   11   12   12   14   11   11    10 #>   [560,]    9    9   11   11   12   11   13   11   11    10 #>   [561,]   10   10   12   12   13   10   12   10   10    10 #>   [562,]    9    9   11   11   12   11   13   11   11    10 #>   [563,]    9    9   11   11   12   11   13   11   11    10 #>   [564,]    9    9   11   11   12   11   13   11   11    10 #>   [565,]    9    9   11   11   12   11   13   11   11    10 #>   [566,]    9    9   11   11   12   11   13   11   11    10 #>   [567,]    9    9   11   11   12   11   13   11   11    10 #>   [568,]   10   10   12   12   13   10   12   10   10    10 #>   [569,]   10   10   12   12   13   10   12   10   10    10 #>   [570,]    9    9   11   11   12   12   14   11   11    10 #>   [571,]    9    9   11   11   12   11   13   11   11    10 #>   [572,]    9    9   11   11   12   11   13   11   11    10 #>   [573,]    9    9   11   11   12   12   14   11   11    10 #>   [574,]   10   10   12   12   13   10   12   10   10    10 #>   [575,]   10   10   12   12   13   10   12   10   10    10 #>   [576,]    9    9   11   11   12   11   13   11   11    10 #>   [577,]    9    9   11   11   12   11   13   11   11    10 #>   [578,]    9    9   11   11   12   11   13   11   11    10 #>   [579,]    9    9   11   11   12   11   13   11   11    10 #>   [580,]    9    9   11   11   12   11   13   11   11    10 #>   [581,]    9    9   11   11   12   11   13   11   11    10 #>   [582,]   10   10   12   12   13   10   12   10   10    10 #>   [583,]    9    9   11   11   12   11   13   11   11    10 #>   [584,]    9    9   11   11   12   11   13   11   11    10 #>   [585,]    9    9   11   11   12   11   13   11   11    10 #>   [586,]    9    9   11   11   12   11   13   11   11    10 #>   [587,]    9    9   11   11   12   11   13   11   11    10 #>   [588,]    9    9   11   11   12   11   13   11   11    10 #>   [589,]    9    9   11   11   12   11   13   11   11    10 #>   [590,]    9    9   11   11   12   11   13   11   11    10 #>   [591,]    9    9   11   11   12   11   13   11   11    10 #>   [592,]   10   10   12   12   13   10   12   10   10    10 #>   [593,]   10   10   12   12   13   10   12   10   10    10 #>   [594,]    9    9   11   11   12   11   13   11   11    10 #>   [595,]    9    9   11   11   12   11   13   11   11    10 #>   [596,]   10   10   12   12   13   10   12   10   10    10 #>   [597,]   10   10   12   12   13   10   12   10   10    10 #>   [598,]    9    9   11   11   12   11   13   11   11    10 #>   [599,]    9    9   11   11   12   12   14   11   11    10 #>   [600,]    9    9   11   11   12   11   13   11   11    10 #>   [601,]   12   12   14   14   14   14   16   13   13    12 #>   [602,]   11   11   13   13   14   13   15   12   12    11 #>   [603,]   12   12   14   14   14   13   15   12   12    11 #>   [604,]   12   12   14   14   14   14   16   13   13    12 #>   [605,]   12   12   14   14   14   13   15   12   12    11 #>   [606,]   11   11   13   13   14   13   15   12   12    11 #>   [607,]   12   12   14   14   14   14   16   13   13    12 #>   [608,]   12   12   14   14   14   13   15   12   12    11 #>   [609,]   12   12   14   14   14   14   16   13   13    12 #>   [610,]   12   12   14   14   14   14   16   13   13    12 #>   [611,]   11   11   13   13   14   13   15   12   12    11 #>   [612,]   11   11   13   13   14   13   15   12   12    11 #>   [613,]   12   12   14   14   14   14   16   13   13    12 #>   [614,]   12   12   14   14   14   14   16   13   13    12 #>   [615,]   11   11   13   13   14   13   15   12   12    11 #>   [616,]   12   12   14   14   14   14   16   13   13    12 #>   [617,]   11   11   13   13   14   13   15   12   12    11 #>   [618,]   11   11   13   13   14   13   15   12   12    11 #>   [619,]   11   11   13   13   14   13   15   12   12    11 #>   [620,]   12   12   14   14   14   14   16   13   13    12 #>   [621,]   11   11   13   13   14   13   15   12   12    11 #>   [622,]   12   12   14   14   14   14   16   13   13    12 #>   [623,]   11   11   13   13   14   13   15   12   12    11 #>   [624,]   12   12   14   14   14   14   16   13   13    12 #>   [625,]   12   12   14   14   14   14   16   13   13    12 #>   [626,]   11   11   13   13   14   13   15   12   12    11 #>   [627,]   12   12   14   14   14   13   15   12   12    11 #>   [628,]   12   12   14   14   14   14   16   13   13    12 #>   [629,]   11   11   13   13   14   13   15   12   12    11 #>   [630,]   11   11   13   13   14   13   15   12   12    11 #>   [631,]   11   11   13   13   14   13   15   12   12    11 #>   [632,]   11   11   13   13   14   13   15   12   12    11 #>   [633,]   12   12   14   14   14   13   15   12   12    11 #>   [634,]   11   11   13   13   14   13   15   12   12    11 #>   [635,]   11   11   13   13   14   13   15   12   12    11 #>   [636,]   12   12   14   14   14   14   16   13   13    12 #>   [637,]   11   11   13   13   14   13   15   12   12    11 #>   [638,]   11   11   13   13   14   13   15   12   12    11 #>   [639,]   12   12   14   14   14   14   16   13   13    12 #>   [640,]   11   11   13   13   14   13   15   12   12    11 #>   [641,]   12   12   14   14   14   13   15   12   12    11 #>   [642,]   11   11   13   13   14   13   15   12   12    11 #>   [643,]   11   11   13   13   14   13   15   12   12    11 #>   [644,]   11   11   13   13   14   13   15   12   12    11 #>   [645,]   12   12   14   14   14   14   16   13   13    12 #>   [646,]   11   11   13   13   14   13   15   12   12    11 #>   [647,]   11   11   13   13   14   13   15   12   12    11 #>   [648,]   11   11   13   13   14   13   15   12   12    11 #>   [649,]   12   12   14   14   14   14   16   13   13    12 #>   [650,]   12   12   14   14   14   14   16   13   13    12 #>   [651,]   11   11   13   13   14   13   15   12   12    11 #>   [652,]   12   12   14   14   14   14   16   13   13    12 #>   [653,]   12   12   14   14   14   14   16   13   13    12 #>   [654,]   12   12   14   14   14   14   16   13   13    12 #>   [655,]   12   12   14   14   14   14   16   13   13    12 #>   [656,]   11   11   13   13   14   13   15   12   12    11 #>   [657,]   12   12   14   14   14   14   16   13   13    12 #>   [658,]   12   12   14   14   14   14   16   13   13    12 #>   [659,]   12   12   14   14   14   14   16   13   13    12 #>   [660,]   11   11   13   13   14   13   15   12   12    11 #>   [661,]   11   11   13   13   14   13   15   12   12    11 #>   [662,]   11   11   13   13   14   13   15   12   12    11 #>   [663,]   11   11   13   13   14   13   15   12   12    11 #>   [664,]   11   11   13   13   14   13   15   12   12    11 #>   [665,]   11   11   13   13   14   13   15   12   12    11 #>   [666,]   11   11   13   13   14   13   15   12   12    11 #>   [667,]   12   12   14   14   14   14   16   13   13    12 #>   [668,]   11   11   13   13   14   13   15   12   12    11 #>   [669,]   11   11   13   13   14   13   15   12   12    11 #>   [670,]   11   11   13   13   14   13   15   12   12    11 #>   [671,]   12   12   14   14   14   13   15   12   12    11 #>   [672,]   12   12   14   14   14   14   16   13   13    12 #>   [673,]   12   12   14   14   14   14   16   13   13    12 #>   [674,]   12   12   14   14   14   13   15   12   12    11 #>   [675,]   11   11   13   13   14   13   15   12   12    11 #>   [676,]   12   12   14   14   14   14   16   13   13    12 #>   [677,]   12   12   14   14   14   13   15   12   12    11 #>   [678,]   11   11   13   13   14   13   15   12   12    11 #>   [679,]   11   11   13   13   14   13   15   12   12    11 #>   [680,]   12   12   14   14   14   13   15   12   12    11 #>   [681,]   11   11   13   13   14   13   15   12   12    11 #>   [682,]   11   11   13   13   14   13   15   12   12    11 #>   [683,]   11   11   13   13   14   13   15   12   12    11 #>   [684,]   12   12   14   14   14   13   15   12   12    11 #>   [685,]   12   12   14   14   14   14   16   13   13    12 #>   [686,]   12   12   14   14   14   14   16   13   13    12 #>   [687,]   12   12   14   14   14   14   16   13   13    12 #>   [688,]   12   12   14   14   14   14   16   13   13    12 #>   [689,]   11   11   13   13   14   13   15   12   12    11 #>   [690,]   12   12   14   14   14   14   16   13   13    12 #>   [691,]   12   12   14   14   14   14   16   13   13    12 #>   [692,]   11   11   13   13   14   13   15   12   12    11 #>   [693,]   11   11   13   13   14   13   15   12   12    11 #>   [694,]   11   11   13   13   14   13   15   12   12    11 #>   [695,]   11   11   13   13   14   13   15   12   12    11 #>   [696,]   11   11   13   13   14   13   15   12   12    11 #>   [697,]   11   11   13   13   14   13   15   12   12    11 #>   [698,]   11   11   13   13   14   13   15   12   12    11 #>   [699,]   11   11   13   13   14   13   15   12   12    11 #>   [700,]   11   11   13   13   14   13   15   12   12    11 #>   [701,]   14   13   15   15   15   17   18   16   16    14 #>   [702,]   14   13   15   15   15   16   18   16   16    14 #>   [703,]   13   14   16   16   16   15   17   14   14    13 #>   [704,]   13   15   16   16   16   15   17   14   14    13 #>   [705,]   14   13   15   15   15   17   18   15   15    14 #>   [706,]   14   13   15   15   15   16   18   15   15    14 #>   [707,]   13   14   16   16   16   15   17   14   14    13 #>   [708,]   13   14   16   16   16   15   17   14   14    13 #>   [709,]   14   13   15   15   15   17   18   15   15    14 #>   [710,]   13   15   16   16   16   15   17   14   14    13 #>   [711,]   14   13   15   15   15   16   18   15   15    14 #>   [712,]   13   15   16   16   16   15   17   14   14    13 #>   [713,]   14   13   15   15   15   17   18   16   16    14 #>   [714,]   13   15   16   16   16   15   17   14   14    13 #>   [715,]   14   13   15   15   15   16   18   16   16    14 #>   [716,]   13   14   16   16   16   15   17   14   14    13 #>   [717,]   14   13   15   15   15   16   18   16   16    14 #>   [718,]   14   13   15   15   15   17   18   16   16    14 #>   [719,]   14   13   15   15   15   17   18   16   16    14 #>   [720,]   14   13   15   15   15   17   18   16   16    14 #>   [721,]   14   13   15   15   15   17   18   15   15    14 #>   [722,]   14   13   15   15   15   17   18   16   16    14 #>   [723,]   13   14   16   16   16   15   17   14   14    13 #>   [724,]   14   13   15   15   15   17   18   15   15    14 #>   [725,]   13   14   16   16   16   15   17   14   14    13 #>   [726,]   14   13   15   15   15   17   18   16   16    14 #>   [727,]   14   13   15   15   15   17   18   16   16    14 #>   [728,]   14   13   15   15   15   17   18   15   15    14 #>   [729,]   14   13   15   15   15   16   18   16   16    14 #>   [730,]   14   13   15   15   15   17   18   16   16    14 #>   [731,]   13   15   16   16   16   15   17   14   14    13 #>   [732,]   13   15   16   16   16   15   17   14   14    13 #>   [733,]   14   13   15   15   15   17   18   16   16    14 #>   [734,]   14   13   15   15   15   16   18   15   15    14 #>   [735,]   13   14   16   16   16   15   17   14   14    13 #>   [736,]   14   13   15   15   15   17   18   16   16    14 #>   [737,]   13   14   16   16   16   15   17   14   14    13 #>   [738,]   14   13   15   15   15   17   18   16   16    14 #>   [739,]   14   13   15   15   15   17   18   15   15    14 #>   [740,]   13   14   16   16   16   15   17   14   14    13 #>   [741,]   14   13   15   15   15   17   18   16   16    14 #>   [742,]   14   13   15   15   15   16   18   15   15    14 #>   [743,]   14   13   15   15   15   16   18   16   16    14 #>   [744,]   13   14   16   16   16   15   17   14   14    13 #>   [745,]   14   13   15   15   15   17   18   16   16    14 #>   [746,]   13   14   16   16   16   15   17   14   14    13 #>   [747,]   13   14   16   16   16   15   17   14   14    13 #>   [748,]   14   13   15   15   15   16   18   15   15    14 #>   [749,]   14   13   15   15   15   17   18   16   16    14 #>   [750,]   14   13   15   15   15   17   18   16   16    14 #>   [751,]   14   13   15   15   15   17   18   16   16    14 #>   [752,]   13   14   16   16   16   15   17   14   14    13 #>   [753,]   14   13   15   15   15   17   18   16   16    14 #>   [754,]   14   13   15   15   15   17   18   15   15    14 #>   [755,]   13   14   16   16   16   15   17   14   14    13 #>   [756,]   14   13   15   15   15   16   18   16   16    14 #>   [757,]   13   14   16   16   16   15   17   14   14    13 #>   [758,]   14   13   15   15   15   17   18   16   16    14 #>   [759,]   13   14   16   16   16   15   17   14   14    13 #>   [760,]   13   15   16   16   16   15   17   14   14    13 #>   [761,]   14   13   15   15   15   16   18   16   16    14 #>   [762,]   14   13   15   15   15   17   18   15   15    14 #>   [763,]   14   13   15   15   15   16   18   16   16    14 #>   [764,]   14   13   15   15   15   16   18   16   16    14 #>   [765,]   14   13   15   15   15   17   18   15   15    14 #>   [766,]   14   13   15   15   15   17   18   16   16    14 #>   [767,]   13   14   16   16   16   15   17   14   14    13 #>   [768,]   13   15   16   16   16   15   17   14   14    13 #>   [769,]   14   13   15   15   15   17   18   16   16    14 #>   [770,]   14   13   15   15   15   16   18   15   15    14 #>   [771,]   14   13   15   15   15   17   18   16   16    14 #>   [772,]   13   14   16   16   16   15   17   14   14    13 #>   [773,]   14   13   15   15   15   17   18   15   15    14 #>   [774,]   13   15   16   16   16   15   17   14   14    13 #>   [775,]   13   15   16   16   16   15   17   14   14    13 #>   [776,]   13   14   16   16   16   15   17   14   14    13 #>   [777,]   14   13   15   15   15   17   18   16   16    14 #>   [778,]   13   14   16   16   16   15   17   14   14    13 #>   [779,]   14   13   15   15   15   16   18   15   15    14 #>   [780,]   13   14   16   16   16   15   17   14   14    13 #>   [781,]   14   13   15   15   15   16   18   16   16    14 #>   [782,]   14   13   15   15   15   17   18   15   15    14 #>   [783,]   14   13   15   15   15   17   18   16   16    14 #>   [784,]   14   13   15   15   15   17   18   16   16    14 #>   [785,]   14   13   15   15   15   17   18   16   16    14 #>   [786,]   13   14   16   16   16   15   17   14   14    13 #>   [787,]   14   13   15   15   15   17   18   16   16    14 #>   [788,]   13   14   16   16   16   15   17   14   14    13 #>   [789,]   14   13   15   15   15   17   18   15   15    14 #>   [790,]   14   13   15   15   15   17   18   16   16    14 #>   [791,]   14   13   15   15   15   17   18   15   15    14 #>   [792,]   13   15   16   16   16   15   17   14   14    13 #>   [793,]   14   13   15   15   15   17   18   16   16    14 #>   [794,]   14   13   15   15   15   16   18   15   15    14 #>   [795,]   13   14   16   16   16   15   17   14   14    13 #>   [796,]   13   15   16   16   16   15   17   14   14    13 #>   [797,]   13   15   16   16   16   15   17   14   14    13 #>   [798,]   13   14   16   16   16   15   17   14   14    13 #>   [799,]   14   13   15   15   15   17   18   15   15    14 #>   [800,]   14   13   15   15   15   16   18   16   16    14 #>   [801,]   15   16   17   17   17   20   20   18   18    16 #>   [802,]   16   17   18   18   18   18   19   17   17    15 #>   [803,]   16   17   18   18   18   18   19   17   17    15 #>   [804,]   15   16   17   17   17   19   20   18   18    16 #>   [805,]   15   16   17   17   17   19   20   18   18    16 #>   [806,]   16   17   18   18   18   18   19   17   17    15 #>   [807,]   16   17   18   18   18   18   19   17   17    15 #>   [808,]   15   16   17   17   17   19   20   18   18    16 #>   [809,]   15   16   17   17   17   20   20   18   18    16 #>   [810,]   16   17   18   18   18   18   19   17   17    15 #>   [811,]   15   16   17   17   17   20   20   18   18    16 #>   [812,]   16   17   18   18   18   18   19   17   17    15 #>   [813,]   15   16   17   17   17   20   20   18   18    16 #>   [814,]   15   16   17   17   17   19   20   18   18    16 #>   [815,]   15   16   17   17   17   19   20   18   18    16 #>   [816,]   15   16   17   17   17   19   20   18   18    16 #>   [817,]   15   16   17   17   17   20   20   18   18    16 #>   [818,]   16   17   18   18   18   18   19   17   17    15 #>   [819,]   16   17   18   18   18   18   19   17   17    15 #>   [820,]   16   17   18   18   18   18   19   17   17    15 #>   [821,]   15   16   17   17   17   19   20   18   18    16 #>   [822,]   15   16   17   17   17   19   20   18   18    16 #>   [823,]   16   17   18   18   18   18   19   17   17    15 #>   [824,]   15   16   17   17   17   19   20   18   18    16 #>   [825,]   16   17   18   18   18   18   19   17   17    15 #>   [826,]   15   16   17   17   17   19   20   18   18    16 #>   [827,]   15   16   17   17   17   20   20   18   18    16 #>   [828,]   16   17   18   18   18   18   19   17   17    15 #>   [829,]   16   17   18   18   18   18   19   17   17    15 #>   [830,]   15   16   17   17   17   19   20   18   18    16 #>   [831,]   16   17   18   18   18   18   19   17   17    15 #>   [832,]   16   17   18   18   18   18   19   17   17    15 #>   [833,]   16   17   18   18   18   18   19   17   17    15 #>   [834,]   16   17   18   18   18   18   19   17   17    15 #>   [835,]   15   16   17   17   17   19   20   18   18    16 #>   [836,]   15   16   17   17   17   20   20   18   18    16 #>   [837,]   15   16   17   17   17   19   20   18   18    16 #>   [838,]   15   16   17   17   17   20   20   18   18    16 #>   [839,]   16   17   18   18   18   18   19   17   17    15 #>   [840,]   16   17   18   18   18   18   19   17   17    15 #>   [841,]   15   16   17   17   17   19   20   18   18    16 #>   [842,]   16   17   18   18   18   18   19   17   17    15 #>   [843,]   15   16   17   17   17   19   20   18   18    16 #>   [844,]   15   16   17   17   17   19   20   18   18    16 #>   [845,]   15   16   17   17   17   19   20   18   18    16 #>   [846,]   15   16   17   17   17   19   20   18   18    16 #>   [847,]   16   17   18   18   18   18   19   17   17    15 #>   [848,]   16   17   18   18   18   18   19   17   17    15 #>   [849,]   15   16   17   17   17   19   20   18   18    16 #>   [850,]   16   17   18   18   18   18   19   17   17    15 #>   [851,]   15   16   17   17   17   20   20   18   18    16 #>   [852,]   15   16   17   17   17   19   20   18   18    16 #>   [853,]   15   16   17   17   17   20   20   18   18    16 #>   [854,]   15   16   17   17   17   20   20   18   18    16 #>   [855,]   15   16   17   17   17   19   20   18   18    16 #>   [856,]   16   17   18   18   18   18   19   17   17    15 #>   [857,]   16   17   18   18   18   18   19   17   17    15 #>   [858,]   15   16   17   17   17   20   20   18   18    16 #>   [859,]   15   16   17   17   17   19   20   18   18    16 #>   [860,]   16   17   18   18   18   18   19   17   17    15 #>   [861,]   16   17   18   18   18   18   19   17   17    15 #>   [862,]   15   16   17   17   17   20   20   18   18    16 #>   [863,]   15   16   17   17   17   19   20   18   18    16 #>   [864,]   16   17   18   18   18   18   19   17   17    15 #>   [865,]   16   17   18   18   18   18   19   17   17    15 #>   [866,]   15   16   17   17   17   20   20   18   18    16 #>   [867,]   15   16   17   17   17   19   20   18   18    16 #>   [868,]   15   16   17   17   17   19   20   18   18    16 #>   [869,]   15   16   17   17   17   19   20   18   18    16 #>   [870,]   16   17   18   18   18   18   19   17   17    15 #>   [871,]   16   17   18   18   18   18   19   17   17    15 #>   [872,]   15   16   17   17   17   19   20   18   18    16 #>   [873,]   16   17   18   18   18   18   19   17   17    15 #>   [874,]   15   16   17   17   17   19   20   18   18    16 #>   [875,]   16   17   18   18   18   18   19   17   17    15 #>   [876,]   15   16   17   17   17   19   20   18   18    16 #>   [877,]   16   17   18   18   18   18   19   17   17    15 #>   [878,]   16   17   18   18   18   18   19   17   17    15 #>   [879,]   15   16   17   17   17   20   20   18   18    16 #>   [880,]   15   16   17   17   17   19   20   18   18    16 #>   [881,]   15   16   17   17   17   19   20   18   18    16 #>   [882,]   15   16   17   17   17   20   20   18   18    16 #>   [883,]   15   16   17   17   17   20   20   18   18    16 #>   [884,]   16   17   18   18   18   18   19   17   17    15 #>   [885,]   15   16   17   17   17   20   20   18   18    16 #>   [886,]   16   17   18   18   18   18   19   17   17    15 #>   [887,]   15   16   17   17   17   20   20   18   18    16 #>   [888,]   15   16   17   17   17   19   20   18   18    16 #>   [889,]   15   16   17   17   17   20   20   18   18    16 #>   [890,]   15   16   17   17   17   20   20   18   18    16 #>   [891,]   15   16   17   17   17   20   20   18   18    16 #>   [892,]   15   16   17   17   17   19   20   18   18    16 #>   [893,]   16   17   18   18   18   18   19   17   17    15 #>   [894,]   16   17   18   18   18   18   19   17   17    15 #>   [895,]   15   16   17   17   17   19   20   18   18    16 #>   [896,]   15   16   17   17   17   19   20   18   18    16 #>   [897,]   16   17   18   18   18   18   19   17   17    15 #>   [898,]   16   17   18   18   18   18   19   17   17    15 #>   [899,]   15   16   17   17   17   19   20   18   18    16 #>   [900,]   16   17   18   18   18   18   19   17   17    15 #>   [901,]   17   18   19   19   19   21   21   19   19    17 #>   [902,]   18   19   20   20   20   22   22   20   19    17 #>   [903,]   17   18   19   19   19   21   21   19   19    17 #>   [904,]   17   18   19   19   19   21   21   19   19    17 #>   [905,]   17   18   19   19   19   21   21   19   19    17 #>   [906,]   17   18   19   19   19   21   21   19   19    18 #>   [907,]   17   18   19   19   19   21   21   19   19    17 #>   [908,]   17   18   19   19   19   21   21   19   19    18 #>   [909,]   18   19   20   20   20   22   22   20   19    18 #>   [910,]   18   19   20   20   20   22   22   20   19    17 #>   [911,]   17   18   19   19   19   21   21   19   19    17 #>   [912,]   18   19   20   20   20   22   22   20   19    18 #>   [913,]   18   19   20   20   20   22   22   20   19    17 #>   [914,]   17   18   19   19   19   21   21   19   19    17 #>   [915,]   17   18   19   19   19   21   21   19   19    18 #>   [916,]   17   18   19   19   19   21   21   19   19    17 #>   [917,]   18   19   20   20   20   22   22   20   19    17 #>   [918,]   18   19   20   20   20   22   22   20   19    17 #>   [919,]   17   18   19   19   19   21   21   19   19    17 #>   [920,]   18   19   20   20   20   22   22   20   19    17 #>   [921,]   18   19   20   20   20   22   22   20   19    17 #>   [922,]   17   18   19   19   19   21   21   19   19    17 #>   [923,]   18   19   20   20   20   22   22   20   19    17 #>   [924,]   18   19   20   20   20   22   22   20   19    17 #>   [925,]   17   18   19   19   19   21   21   19   19    17 #>   [926,]   17   18   19   19   19   21   21   19   19    18 #>   [927,]   18   19   20   20   20   22   22   20   19    17 #>   [928,]   17   18   19   19   19   21   21   19   19    17 #>   [929,]   18   19   20   20   20   22   22   20   19    17 #>   [930,]   17   18   19   19   19   21   21   19   19    17 #>   [931,]   18   19   20   20   20   22   22   20   19    17 #>   [932,]   18   19   20   20   20   22   22   20   19    17 #>   [933,]   18   19   20   20   20   22   22   20   19    18 #>   [934,]   17   18   19   19   19   21   21   19   19    17 #>   [935,]   17   18   19   19   19   21   21   19   19    17 #>   [936,]   18   19   20   20   20   22   22   20   19    17 #>   [937,]   17   18   19   19   19   21   21   19   19    17 #>   [938,]   17   18   19   19   19   21   21   19   19    17 #>   [939,]   17   18   19   19   19   21   21   19   19    17 #>   [940,]   18   19   20   20   20   22   22   20   19    17 #>   [941,]   17   18   19   19   19   21   21   19   19    17 #>   [942,]   17   18   19   19   19   21   21   19   19    17 #>   [943,]   17   18   19   19   19   21   21   19   19    18 #>   [944,]   17   18   19   19   19   21   21   19   19    17 #>   [945,]   17   18   19   19   19   21   21   19   19    18 #>   [946,]   17   18   19   19   19   21   21   19   19    18 #>   [947,]   17   18   19   19   19   21   21   19   19    17 #>   [948,]   17   18   19   19   19   21   21   19   19    17 #>   [949,]   17   18   19   19   19   21   21   19   19    17 #>   [950,]   17   18   19   19   19   21   21   19   19    17 #>   [951,]   17   18   19   19   19   21   21   19   19    18 #>   [952,]   17   18   19   19   19   21   21   19   19    17 #>   [953,]   18   19   20   20   20   22   22   20   19    17 #>   [954,]   17   18   19   19   19   21   21   19   19    17 #>   [955,]   17   18   19   19   19   21   21   19   19    17 #>   [956,]   17   18   19   19   19   21   21   19   19    18 #>   [957,]   17   18   19   19   19   21   21   19   19    18 #>   [958,]   17   18   19   19   19   21   21   19   19    17 #>   [959,]   17   18   19   19   19   21   21   19   19    17 #>   [960,]   18   19   20   20   20   22   22   20   19    17 #>   [961,]   18   19   20   20   20   22   22   20   19    18 #>   [962,]   17   18   19   19   19   21   21   19   19    17 #>   [963,]   18   19   20   20   20   22   22   20   19    17 #>   [964,]   17   18   19   19   19   21   21   19   19    18 #>   [965,]   17   18   19   19   19   21   21   19   19    17 #>   [966,]   17   18   19   19   19   21   21   19   19    18 #>   [967,]   17   18   19   19   19   21   21   19   19    17 #>   [968,]   17   18   19   19   19   21   21   19   19    18 #>   [969,]   17   18   19   19   19   21   21   19   19    17 #>   [970,]   18   19   20   20   20   22   22   20   19    17 #>   [971,]   17   18   19   19   19   21   21   19   19    17 #>   [972,]   17   18   19   19   19   21   21   19   19    17 #>   [973,]   17   18   19   19   19   21   21   19   19    17 #>   [974,]   17   18   19   19   19   21   21   19   19    17 #>   [975,]   18   19   20   20   20   22   22   20   19    17 #>   [976,]   17   18   19   19   19   21   21   19   19    18 #>   [977,]   17   18   19   19   19   21   21   19   19    17 #>   [978,]   17   18   19   19   19   21   21   19   19    17 #>   [979,]   17   18   19   19   19   21   21   19   19    17 #>   [980,]   18   19   20   20   20   22   22   20   19    17 #>   [981,]   18   19   20   20   20   22   22   20   19    17 #>   [982,]   17   18   19   19   19   21   21   19   19    17 #>   [983,]   18   19   20   20   20   22   22   20   19    17 #>   [984,]   18   19   20   20   20   22   22   20   19    17 #>   [985,]   17   18   19   19   19   21   21   19   19    17 #>   [986,]   18   19   20   20   20   22   22   20   19    17 #>   [987,]   17   18   19   19   19   21   21   19   19    17 #>   [988,]   18   19   20   20   20   22   22   20   19    17 #>   [989,]   17   18   19   19   19   21   21   19   19    17 #>   [990,]   17   18   19   19   19   21   21   19   19    17 #>   [991,]   17   18   19   19   19   21   21   19   19    17 #>   [992,]   17   18   19   19   19   21   21   19   19    17 #>   [993,]   17   18   19   19   19   21   21   19   19    17 #>   [994,]   17   18   19   19   19   21   21   19   19    18 #>   [995,]   17   18   19   19   19   21   21   19   19    17 #>   [996,]   17   18   19   19   19   21   21   19   19    18 #>   [997,]   17   18   19   19   19   21   21   19   19    17 #>   [998,]   17   18   19   19   19   21   21   19   19    17 #>   [999,]   17   18   19   19   19   21   21   19   19    17 #>  [1000,]   17   18   19   19   19   21   21   19   19    17 #>  [1001,]   19   21   22   22   22   24   24   22   21    19 #>  [1002,]   19   20   21   21   21   23   23   21   20    19 #>  [1003,]   19   20   21   21   21   23   23   21   20    19 #>  [1004,]   19   20   21   21   21   23   23   21   20    19 #>  [1005,]   19   21   22   22   22   24   24   22   21    19 #>  [1006,]   19   20   21   21   21   23   23   21   20    19 #>  [1007,]   19   20   21   21   21   23   23   21   20    19 #>  [1008,]   19   20   21   21   21   23   23   21   20    19 #>  [1009,]   19   21   22   22   22   24   24   22   21    19 #>  [1010,]   19   20   21   21   21   23   23   21   20    19 #>  [1011,]   19   21   22   22   22   24   24   22   21    19 #>  [1012,]   19   20   21   21   21   23   23   21   20    19 #>  [1013,]   19   21   22   22   22   24   24   22   21    19 #>  [1014,]   19   20   21   21   21   23   23   21   20    19 #>  [1015,]   19   20   21   21   21   23   23   21   20    19 #>  [1016,]   19   20   21   21   21   23   23   21   20    19 #>  [1017,]   19   21   22   22   22   24   24   22   21    19 #>  [1018,]   19   21   22   22   22   24   24   22   21    19 #>  [1019,]   19   20   21   21   21   23   23   21   20    19 #>  [1020,]   19   21   22   22   22   24   24   22   21    19 #>  [1021,]   19   21   22   22   22   24   24   22   21    19 #>  [1022,]   19   20   21   21   21   23   23   21   20    19 #>  [1023,]   19   20   21   21   21   23   23   21   20    19 #>  [1024,]   19   21   22   22   22   24   24   22   21    19 #>  [1025,]   19   20   21   21   21   23   23   21   20    19 #>  [1026,]   19   20   21   21   21   23   23   21   20    19 #>  [1027,]   19   21   22   22   22   24   24   22   21    19 #>  [1028,]   19   21   22   22   22   24   24   22   21    19 #>  [1029,]   19   21   22   22   22   24   24   22   21    19 #>  [1030,]   19   20   21   21   21   23   23   21   20    19 #>  [1031,]   19   20   21   21   21   23   23   21   20    19 #>  [1032,]   19   20   21   21   21   23   23   21   20    19 #>  [1033,]   19   21   22   22   22   24   24   22   21    19 #>  [1034,]   19   20   21   21   21   23   23   21   20    19 #>  [1035,]   19   20   21   21   21   23   23   21   20    19 #>  [1036,]   19   21   22   22   22   24   24   22   21    19 #>  [1037,]   19   20   21   21   21   23   23   21   20    19 #>  [1038,]   19   21   22   22   22   24   24   22   21    19 #>  [1039,]   19   21   22   22   22   24   24   22   21    19 #>  [1040,]   19   20   21   21   21   23   23   21   20    19 #>  [1041,]   19   21   22   22   22   24   24   22   21    19 #>  [1042,]   19   21   22   22   22   24   24   22   21    19 #>  [1043,]   19   20   21   21   21   23   23   21   20    19 #>  [1044,]   19   20   21   21   21   23   23   21   20    19 #>  [1045,]   19   20   21   21   21   23   23   21   20    19 #>  [1046,]   19   20   21   21   21   23   23   21   20    19 #>  [1047,]   19   20   21   21   21   23   23   21   20    19 #>  [1048,]   19   20   21   21   21   23   23   21   20    19 #>  [1049,]   19   20   21   21   21   23   23   21   20    19 #>  [1050,]   19   20   21   21   21   23   23   21   20    19 #>  [1051,]   19   21   22   22   22   24   24   22   21    19 #>  [1052,]   19   20   21   21   21   23   23   21   20    19 #>  [1053,]   19   21   22   22   22   24   24   22   21    19 #>  [1054,]   19   21   22   22   22   24   24   22   21    19 #>  [1055,]   19   20   21   21   21   23   23   21   20    19 #>  [1056,]   19   21   22   22   22   24   24   22   21    19 #>  [1057,]   19   20   21   21   21   23   23   21   20    19 #>  [1058,]   19   21   22   22   22   24   24   22   21    19 #>  [1059,]   19   20   21   21   21   23   23   21   20    19 #>  [1060,]   19   20   21   21   21   23   23   21   20    19 #>  [1061,]   19   21   22   22   22   24   24   22   21    19 #>  [1062,]   19   21   22   22   22   24   24   22   21    19 #>  [1063,]   19   20   21   21   21   23   23   21   20    19 #>  [1064,]   19   21   22   22   22   24   24   22   21    19 #>  [1065,]   19   21   22   22   22   24   24   22   21    19 #>  [1066,]   19   21   22   22   22   24   24   22   21    19 #>  [1067,]   19   20   21   21   21   23   23   21   20    19 #>  [1068,]   19   20   21   21   21   23   23   21   20    19 #>  [1069,]   19   20   21   21   21   23   23   21   20    19 #>  [1070,]   19   21   22   22   22   24   24   22   21    19 #>  [1071,]   19   20   21   21   21   23   23   21   20    19 #>  [1072,]   19   20   21   21   21   23   23   21   20    19 #>  [1073,]   19   20   21   21   21   23   23   21   20    19 #>  [1074,]   19   20   21   21   21   23   23   21   20    19 #>  [1075,]   19   20   21   21   21   23   23   21   20    19 #>  [1076,]   19   20   21   21   21   23   23   21   20    19 #>  [1077,]   19   21   22   22   22   24   24   22   21    19 #>  [1078,]   19   20   21   21   21   23   23   21   20    19 #>  [1079,]   19   21   22   22   22   24   24   22   21    19 #>  [1080,]   19   20   21   21   21   23   23   21   20    19 #>  [1081,]   19   20   21   21   21   23   23   21   20    19 #>  [1082,]   19   21   22   22   22   24   24   22   21    19 #>  [1083,]   19   21   22   22   22   24   24   22   21    19 #>  [1084,]   19   21   22   22   22   24   24   22   21    19 #>  [1085,]   19   21   22   22   22   24   24   22   21    19 #>  [1086,]   19   20   21   21   21   23   23   21   20    19 #>  [1087,]   19   21   22   22   22   24   24   22   21    19 #>  [1088,]   19   20   21   21   21   23   23   21   20    19 #>  [1089,]   19   21   22   22   22   24   24   22   21    19 #>  [1090,]   19   21   22   22   22   24   24   22   21    19 #>  [1091,]   19   21   22   22   22   24   24   22   21    19 #>  [1092,]   19   20   21   21   21   23   23   21   20    19 #>  [1093,]   19   21   22   22   22   24   24   22   21    19 #>  [1094,]   19   21   22   22   22   24   24   22   21    19 #>  [1095,]   19   20   21   21   21   23   23   21   20    19 #>  [1096,]   19   20   21   21   21   23   23   21   20    19 #>  [1097,]   19   20   21   21   21   23   23   21   20    19 #>  [1098,]   19   20   21   21   21   23   23   21   20    19 #>  [1099,]   19   21   22   22   22   24   24   22   21    19 #>  [1100,]   19   20   21   21   21   23   23   21   20    19 #>  [1101,]   21   23   24   24   24   26   26   23   22    20 #>  [1102,]   20   22   23   23   23   25   25   25   24    22 #>  [1103,]   20   22   23   23   23   25   25   25   24    22 #>  [1104,]   20   22   23   23   23   25   25   24   23    21 #>  [1105,]   21   23   24   24   24   26   26   23   22    20 #>  [1106,]   20   22   23   23   23   25   25   25   24    22 #>  [1107,]   20   22   23   23   23   25   25   25   24    22 #>  [1108,]   20   22   23   23   23   25   25   24   23    21 #>  [1109,]   20   22   23   23   23   25   25   24   23    21 #>  [1110,]   21   23   24   24   24   26   26   23   22    20 #>  [1111,]   21   23   24   24   24   26   26   23   22    20 #>  [1112,]   21   23   24   24   24   26   26   23   22    20 #>  [1113,]   20   22   23   23   23   25   25   24   23    21 #>  [1114,]   21   23   24   24   24   26   26   23   22    20 #>  [1115,]   21   23   24   24   24   26   26   23   22    20 #>  [1116,]   20   22   23   23   23   25   25   25   24    22 #>  [1117,]   21   23   24   24   24   26   26   23   22    20 #>  [1118,]   21   23   24   24   24   26   26   23   22    20 #>  [1119,]   20   22   23   23   23   25   25   25   24    22 #>  [1120,]   20   22   23   23   23   25   25   25   24    22 #>  [1121,]   20   22   23   23   23   25   25   24   23    21 #>  [1122,]   21   23   24   24   24   26   26   23   22    20 #>  [1123,]   20   22   23   23   23   25   25   25   24    22 #>  [1124,]   20   22   23   23   23   25   25   25   24    22 #>  [1125,]   20   22   23   23   23   25   25   25   24    22 #>  [1126,]   21   23   24   24   24   26   26   23   22    20 #>  [1127,]   21   23   24   24   24   26   26   23   22    20 #>  [1128,]   20   22   23   23   23   25   25   25   24    22 #>  [1129,]   20   22   23   23   23   25   25   25   24    22 #>  [1130,]   20   22   23   23   23   25   25   24   23    21 #>  [1131,]   21   23   24   24   24   26   26   23   22    20 #>  [1132,]   21   23   24   24   24   26   26   23   22    20 #>  [1133,]   20   22   23   23   23   25   25   25   24    22 #>  [1134,]   20   22   23   23   23   25   25   25   24    22 #>  [1135,]   20   22   23   23   23   25   25   24   23    21 #>  [1136,]   20   22   23   23   23   25   25   25   24    22 #>  [1137,]   20   22   23   23   23   25   25   25   24    22 #>  [1138,]   21   23   24   24   24   26   26   23   22    20 #>  [1139,]   20   22   23   23   23   25   25   25   24    22 #>  [1140,]   20   22   23   23   23   25   25   25   24    22 #>  [1141,]   20   22   23   23   23   25   25   25   24    22 #>  [1142,]   20   22   23   23   23   25   25   25   24    22 #>  [1143,]   21   23   24   24   24   26   26   23   22    20 #>  [1144,]   20   22   23   23   23   25   25   24   23    21 #>  [1145,]   20   22   23   23   23   25   25   24   23    21 #>  [1146,]   20   22   23   23   23   25   25   24   23    21 #>  [1147,]   21   23   24   24   24   26   26   23   22    20 #>  [1148,]   20   22   23   23   23   25   25   25   24    22 #>  [1149,]   20   22   23   23   23   25   25   24   23    21 #>  [1150,]   20   22   23   23   23   25   25   25   24    22 #>  [1151,]   20   22   23   23   23   25   25   25   24    22 #>  [1152,]   21   23   24   24   24   26   26   23   22    20 #>  [1153,]   20   22   23   23   23   25   25   25   24    22 #>  [1154,]   20   22   23   23   23   25   25   24   23    21 #>  [1155,]   20   22   23   23   23   25   25   24   23    21 #>  [1156,]   20   22   23   23   23   25   25   25   24    22 #>  [1157,]   20   22   23   23   23   25   25   25   24    22 #>  [1158,]   21   23   24   24   24   26   26   23   22    20 #>  [1159,]   21   23   24   24   24   26   26   23   22    20 #>  [1160,]   20   22   23   23   23   25   25   25   24    22 #>  [1161,]   21   23   24   24   24   26   26   23   22    20 #>  [1162,]   20   22   23   23   23   25   25   24   23    21 #>  [1163,]   20   22   23   23   23   25   25   25   24    22 #>  [1164,]   20   22   23   23   23   25   25   25   24    22 #>  [1165,]   20   22   23   23   23   25   25   25   24    22 #>  [1166,]   21   23   24   24   24   26   26   23   22    20 #>  [1167,]   20   22   23   23   23   25   25   24   23    21 #>  [1168,]   20   22   23   23   23   25   25   24   23    21 #>  [1169,]   20   22   23   23   23   25   25   24   23    21 #>  [1170,]   21   23   24   24   24   26   26   23   22    20 #>  [1171,]   21   23   24   24   24   26   26   23   22    20 #>  [1172,]   20   22   23   23   23   25   25   25   24    22 #>  [1173,]   20   22   23   23   23   25   25   25   24    22 #>  [1174,]   20   22   23   23   23   25   25   24   23    21 #>  [1175,]   21   23   24   24   24   26   26   23   22    20 #>  [1176,]   20   22   23   23   23   25   25   25   24    22 #>  [1177,]   21   23   24   24   24   26   26   23   22    20 #>  [1178,]   20   22   23   23   23   25   25   25   24    22 #>  [1179,]   21   23   24   24   24   26   26   23   22    20 #>  [1180,]   20   22   23   23   23   25   25   24   23    21 #>  [1181,]   20   22   23   23   23   25   25   24   23    21 #>  [1182,]   20   22   23   23   23   25   25   24   23    21 #>  [1183,]   20   22   23   23   23   25   25   24   23    21 #>  [1184,]   20   22   23   23   23   25   25   25   24    22 #>  [1185,]   20   22   23   23   23   25   25   24   23    21 #>  [1186,]   20   22   23   23   23   25   25   25   24    22 #>  [1187,]   21   23   24   24   24   26   26   23   22    20 #>  [1188,]   20   22   23   23   23   25   25   24   23    21 #>  [1189,]   20   22   23   23   23   25   25   24   23    21 #>  [1190,]   21   23   24   24   24   26   26   23   22    20 #>  [1191,]   21   23   24   24   24   26   26   23   22    20 #>  [1192,]   21   23   24   24   24   26   26   23   22    20 #>  [1193,]   20   22   23   23   23   25   25   25   24    22 #>  [1194,]   20   22   23   23   23   25   25   25   24    22 #>  [1195,]   21   23   24   24   24   26   26   23   22    20 #>  [1196,]   20   22   23   23   23   25   25   24   23    21 #>  [1197,]   20   22   23   23   23   25   25   25   24    22 #>  [1198,]   20   22   23   23   23   25   25   25   24    22 #>  [1199,]   20   22   23   23   23   25   25   24   23    21 #>  [1200,]   21   23   24   24   24   26   26   23   22    20 #>  [1201,]   23   25   26   26   27   29   29   27   26    23 #>  [1202,]   23   25   26   26   27   29   29   27   26    23 #>  [1203,]   23   25   26   26   27   29   29   27   26    23 #>  [1204,]   22   24   25   25   25   27   27   26   25    25 #>  [1205,]   23   25   26   26   27   29   29   27   26    23 #>  [1206,]   23   25   26   26   27   29   29   27   26    23 #>  [1207,]   23   25   26   26   27   29   29   27   26    23 #>  [1208,]   22   24   25   25   25   27   27   26   25    24 #>  [1209,]   22   24   25   25   25   27   27   26   25    25 #>  [1210,]   22   24   25   25   25   27   27   26   25    25 #>  [1211,]   23   25   26   26   27   29   29   27   26    23 #>  [1212,]   23   25   26   26   27   29   29   27   26    23 #>  [1213,]   23   25   26   26   27   29   29   27   26    23 #>  [1214,]   23   25   26   26   27   29   29   27   26    23 #>  [1215,]   23   25   26   26   27   29   29   27   26    23 #>  [1216,]   23   25   26   26   27   29   29   27   26    23 #>  [1217,]   23   25   26   26   26   28   28   27   26    23 #>  [1218,]   23   25   26   26   27   29   29   27   26    23 #>  [1219,]   23   25   26   26   27   29   29   27   26    23 #>  [1220,]   23   25   26   26   27   29   29   27   26    23 #>  [1221,]   23   25   26   26   27   29   29   27   26    23 #>  [1222,]   23   25   26   26   27   29   29   27   26    23 #>  [1223,]   23   25   26   26   27   29   29   27   26    23 #>  [1224,]   23   25   26   26   27   29   29   27   26    23 #>  [1225,]   23   25   26   26   27   29   29   27   26    23 #>  [1226,]   23   25   26   26   27   29   29   27   26    23 #>  [1227,]   23   25   26   26   26   28   28   27   26    23 #>  [1228,]   23   25   26   26   27   29   29   27   26    23 #>  [1229,]   23   25   26   26   27   29   29   27   26    23 #>  [1230,]   23   25   26   26   27   29   29   27   26    23 #>  [1231,]   23   25   26   26   27   29   29   27   26    23 #>  [1232,]   23   25   26   26   27   29   29   27   26    23 #>  [1233,]   23   25   26   26   27   29   29   27   26    23 #>  [1234,]   23   25   26   26   27   29   29   27   26    23 #>  [1235,]   23   25   26   26   27   29   29   27   26    23 #>  [1236,]   23   25   26   26   27   29   29   27   26    23 #>  [1237,]   23   25   26   26   27   29   29   27   26    23 #>  [1238,]   23   25   26   26   27   29   29   27   26    23 #>  [1239,]   23   25   26   26   27   29   29   27   26    23 #>  [1240,]   23   25   26   26   27   29   29   27   26    23 #>  [1241,]   23   25   26   26   27   29   29   27   26    23 #>  [1242,]   23   25   26   26   27   29   29   27   26    23 #>  [1243,]   22   24   25   25   25   27   27   26   25    24 #>  [1244,]   23   25   26   26   26   28   28   27   26    23 #>  [1245,]   23   25   26   26   27   29   29   27   26    23 #>  [1246,]   23   25   26   26   27   29   29   27   26    23 #>  [1247,]   23   25   26   26   27   29   29   27   26    23 #>  [1248,]   23   25   26   26   27   29   29   27   26    23 #>  [1249,]   23   25   26   26   27   29   29   27   26    23 #>  [1250,]   23   25   26   26   27   29   29   27   26    23 #>  [1251,]   22   24   25   25   25   27   27   26   25    24 #>  [1252,]   23   25   26   26   26   28   28   27   26    23 #>  [1253,]   23   25   26   26   27   29   29   27   26    23 #>  [1254,]   23   25   26   26   27   29   29   27   26    23 #>  [1255,]   23   25   26   26   27   29   29   27   26    23 #>  [1256,]   23   25   26   26   27   29   29   27   26    23 #>  [1257,]   23   25   26   26   27   29   29   27   26    23 #>  [1258,]   23   25   26   26   26   28   28   27   26    23 #>  [1259,]   23   25   26   26   27   29   29   27   26    23 #>  [1260,]   22   24   25   25   25   27   27   26   25    25 #>  [1261,]   23   25   26   26   27   29   29   27   26    23 #>  [1262,]   23   25   26   26   27   29   29   27   26    23 #>  [1263,]   23   25   26   26   27   29   29   27   26    23 #>  [1264,]   22   24   25   25   25   27   27   26   25    25 #>  [1265,]   23   25   26   26   27   29   29   27   26    23 #>  [1266,]   23   25   26   26   26   28   28   27   26    23 #>  [1267,]   22   24   25   25   25   27   27   26   25    25 #>  [1268,]   23   25   26   26   27   29   29   27   26    23 #>  [1269,]   23   25   26   26   27   29   29   27   26    23 #>  [1270,]   23   25   26   26   27   29   29   27   26    23 #>  [1271,]   23   25   26   26   27   29   29   27   26    23 #>  [1272,]   23   25   26   26   27   29   29   27   26    23 #>  [1273,]   23   25   26   26   27   29   29   27   26    23 #>  [1274,]   23   25   26   26   27   29   29   27   26    23 #>  [1275,]   23   25   26   26   27   29   29   27   26    23 #>  [1276,]   23   25   26   26   27   29   29   27   26    23 #>  [1277,]   23   25   26   26   27   29   29   27   26    23 #>  [1278,]   22   24   25   25   25   27   27   26   25    24 #>  [1279,]   23   25   26   26   27   29   29   27   26    23 #>  [1280,]   23   25   26   26   27   29   29   27   26    23 #>  [1281,]   23   25   26   26   26   28   28   27   26    23 #>  [1282,]   23   25   26   26   26   28   28   27   26    23 #>  [1283,]   23   25   26   26   27   29   29   27   26    23 #>  [1284,]   23   25   26   26   27   29   29   27   26    23 #>  [1285,]   22   24   25   25   25   27   27   26   25    25 #>  [1286,]   23   25   26   26   27   29   29   27   26    23 #>  [1287,]   23   25   26   26   26   28   28   27   26    23 #>  [1288,]   23   25   26   26   27   29   29   27   26    23 #>  [1289,]   22   24   25   25   25   27   27   26   25    24 #>  [1290,]   23   25   26   26   26   28   28   27   26    23 #>  [1291,]   22   24   25   25   25   27   27   26   25    24 #>  [1292,]   23   25   26   26   26   28   28   27   26    23 #>  [1293,]   23   25   26   26   27   29   29   27   26    23 #>  [1294,]   23   25   26   26   27   29   29   27   26    23 #>  [1295,]   22   24   25   25   25   27   27   26   25    24 #>  [1296,]   23   25   26   26   27   29   29   27   26    23 #>  [1297,]   23   25   26   26   27   29   29   27   26    23 #>  [1298,]   23   25   26   26   27   29   29   27   26    23 #>  [1299,]   23   25   26   26   26   28   28   27   26    23 #>  [1300,]   23   25   26   26   27   29   29   27   26    23 #>  [1301,]   25   26   27   27   30   31   31   29   28    27 #>  [1302,]   24   27   28   28   28   30   30   28   27    26 #>  [1303,]   24   27   28   28   28   30   30   28   27    26 #>  [1304,]   24   28   28   28   28   30   30   28   27    26 #>  [1305,]   25   26   27   27   30   31   31   29   28    27 #>  [1306,]   24   27   28   28   28   30   30   28   27    26 #>  [1307,]   24   27   28   28   28   30   30   28   27    26 #>  [1308,]   24   27   28   28   28   30   30   28   27    26 #>  [1309,]   24   27   28   28   28   30   30   28   27    26 #>  [1310,]   25   26   27   27   29   31   31   29   28    27 #>  [1311,]   25   26   27   27   30   31   31   29   28    27 #>  [1312,]   25   26   27   27   29   31   31   29   28    27 #>  [1313,]   24   27   28   28   28   30   30   28   27    26 #>  [1314,]   25   26   27   27   29   31   31   29   28    27 #>  [1315,]   25   26   27   27   30   31   31   29   28    27 #>  [1316,]   25   26   27   27   29   31   31   29   28    27 #>  [1317,]   25   26   27   27   30   31   31   29   28    27 #>  [1318,]   25   26   27   27   30   31   31   29   28    27 #>  [1319,]   25   26   27   27   30   31   31   29   28    27 #>  [1320,]   24   27   28   28   28   30   30   28   27    26 #>  [1321,]   24   28   28   28   28   30   30   28   27    26 #>  [1322,]   25   26   27   27   30   31   31   29   28    27 #>  [1323,]   24   28   28   28   28   30   30   28   27    26 #>  [1324,]   25   26   27   27   30   31   31   29   28    27 #>  [1325,]   24   28   28   28   28   30   30   28   27    26 #>  [1326,]   25   26   27   27   29   31   31   29   28    27 #>  [1327,]   25   26   27   27   30   31   31   29   28    27 #>  [1328,]   24   27   28   28   28   30   30   28   27    26 #>  [1329,]   24   27   28   28   28   30   30   28   27    26 #>  [1330,]   24   27   28   28   28   30   30   28   27    26 #>  [1331,]   25   26   27   27   29   31   31   29   28    27 #>  [1332,]   25   26   27   27   29   31   31   29   28    27 #>  [1333,]   24   27   28   28   28   30   30   28   27    26 #>  [1334,]   24   27   28   28   28   30   30   28   27    26 #>  [1335,]   24   27   28   28   28   30   30   28   27    26 #>  [1336,]   24   27   28   28   28   30   30   28   27    26 #>  [1337,]   24   27   28   28   28   30   30   28   27    26 #>  [1338,]   25   26   27   27   30   31   31   29   28    27 #>  [1339,]   25   26   27   27   30   31   31   29   28    27 #>  [1340,]   24   27   28   28   28   30   30   28   27    26 #>  [1341,]   24   27   28   28   28   30   30   28   27    26 #>  [1342,]   24   27   28   28   28   30   30   28   27    26 #>  [1343,]   25   26   27   27   30   31   31   29   28    27 #>  [1344,]   24   27   28   28   28   30   30   28   27    26 #>  [1345,]   24   28   28   28   28   30   30   28   27    26 #>  [1346,]   24   27   28   28   28   30   30   28   27    26 #>  [1347,]   25   26   27   27   29   31   31   29   28    27 #>  [1348,]   24   27   28   28   28   30   30   28   27    26 #>  [1349,]   24   27   28   28   28   30   30   28   27    26 #>  [1350,]   24   27   28   28   28   30   30   28   27    26 #>  [1351,]   25   26   27   27   30   31   31   29   28    27 #>  [1352,]   25   26   27   27   29   31   31   29   28    27 #>  [1353,]   24   28   28   28   28   30   30   28   27    26 #>  [1354,]   24   27   28   28   28   30   30   28   27    26 #>  [1355,]   24   27   28   28   28   30   30   28   27    26 #>  [1356,]   24   27   28   28   28   30   30   28   27    26 #>  [1357,]   24   27   28   28   28   30   30   28   27    26 #>  [1358,]   25   26   27   27   30   31   31   29   28    27 #>  [1359,]   25   26   27   27   29   31   31   29   28    27 #>  [1360,]   24   27   28   28   28   30   30   28   27    26 #>  [1361,]   25   26   27   27   30   31   31   29   28    27 #>  [1362,]   24   27   28   28   28   30   30   28   27    26 #>  [1363,]   24   27   28   28   28   30   30   28   27    26 #>  [1364,]   24   27   28   28   28   30   30   28   27    26 #>  [1365,]   24   27   28   28   28   30   30   28   27    26 #>  [1366,]   25   26   27   27   30   31   31   29   28    27 #>  [1367,]   24   27   28   28   28   30   30   28   27    26 #>  [1368,]   25   26   27   27   29   31   31   29   28    27 #>  [1369,]   24   27   28   28   28   30   30   28   27    26 #>  [1370,]   25   26   27   27   30   31   31   29   28    27 #>  [1371,]   25   26   27   27   29   31   31   29   28    27 #>  [1372,]   24   28   28   28   28   30   30   28   27    26 #>  [1373,]   24   28   28   28   28   30   30   28   27    26 #>  [1374,]   24   28   28   28   28   30   30   28   27    26 #>  [1375,]   25   26   27   27   29   31   31   29   28    27 #>  [1376,]   24   28   28   28   28   30   30   28   27    26 #>  [1377,]   25   26   27   27   30   31   31   29   28    27 #>  [1378,]   24   27   28   28   28   30   30   28   27    26 #>  [1379,]   25   26   27   27   30   31   31   29   28    27 #>  [1380,]   24   27   28   28   28   30   30   28   27    26 #>  [1381,]   24   27   28   28   28   30   30   28   27    26 #>  [1382,]   24   27   28   28   28   30   30   28   27    26 #>  [1383,]   25   26   27   27   30   31   31   29   28    27 #>  [1384,]   24   28   28   28   28   30   30   28   27    26 #>  [1385,]   24   27   28   28   28   30   30   28   27    26 #>  [1386,]   24   27   28   28   28   30   30   28   27    26 #>  [1387,]   25   26   27   27   30   31   31   29   28    27 #>  [1388,]   24   27   28   28   28   30   30   28   27    26 #>  [1389,]   24   27   28   28   28   30   30   28   27    26 #>  [1390,]   25   26   27   27   30   31   31   29   28    27 #>  [1391,]   25   26   27   27   30   31   31   29   28    27 #>  [1392,]   25   26   27   27   29   31   31   29   28    27 #>  [1393,]   24   27   28   28   28   30   30   28   27    26 #>  [1394,]   24   28   28   28   28   30   30   28   27    26 #>  [1395,]   25   26   27   27   29   31   31   29   28    27 #>  [1396,]   25   26   27   27   29   31   31   29   28    27 #>  [1397,]   24   27   28   28   28   30   30   28   27    26 #>  [1398,]   24   27   28   28   28   30   30   28   27    26 #>  [1399,]   24   27   28   28   28   30   30   28   27    26 #>  [1400,]   25   26   27   27   30   31   31   29   28    27 #>  [1401,]   27   30   30   30   32   33   33   31   30    29 #>  [1402,]   27   30   30   30   32   33   33   31   30    29 #>  [1403,]   26   29   29   29   31   32   32   30   29    28 #>  [1404,]   26   29   29   29   31   32   32   30   29    28 #>  [1405,]   27   30   30   30   32   33   33   31   30    29 #>  [1406,]   27   30   30   30   32   33   33   31   30    29 #>  [1407,]   26   29   29   29   31   32   32   30   29    28 #>  [1408,]   26   29   29   29   31   32   32   30   29    28 #>  [1409,]   27   30   30   30   32   33   33   31   30    29 #>  [1410,]   27   30   30   30   32   33   33   31   30    29 #>  [1411,]   27   30   30   30   32   33   33   31   30    29 #>  [1412,]   26   29   29   29   31   32   32   30   29    28 #>  [1413,]   27   30   30   30   32   33   33   31   30    29 #>  [1414,]   27   30   30   30   32   33   33   31   30    29 #>  [1415,]   27   30   30   30   32   33   33   31   30    29 #>  [1416,]   27   30   30   30   32   33   33   31   30    29 #>  [1417,]   27   30   30   30   32   33   33   31   30    29 #>  [1418,]   27   30   30   30   32   33   33   31   30    29 #>  [1419,]   27   30   30   30   32   33   33   31   30    29 #>  [1420,]   27   30   30   30   32   33   33   31   30    29 #>  [1421,]   27   30   30   30   32   33   33   31   30    29 #>  [1422,]   27   30   30   30   32   33   33   31   30    29 #>  [1423,]   27   30   30   30   32   33   33   31   30    29 #>  [1424,]   27   30   30   30   32   33   33   31   30    29 #>  [1425,]   26   29   29   29   31   32   32   30   29    28 #>  [1426,]   27   30   30   30   32   33   33   31   30    29 #>  [1427,]   27   30   30   30   32   33   33   31   30    29 #>  [1428,]   27   30   30   30   32   33   33   31   30    29 #>  [1429,]   27   30   30   30   32   33   33   31   30    29 #>  [1430,]   27   30   30   30   32   33   33   31   30    29 #>  [1431,]   26   29   29   29   31   32   32   30   29    28 #>  [1432,]   27   30   30   30   32   33   33   31   30    29 #>  [1433,]   27   30   30   30   32   33   33   31   30    29 #>  [1434,]   27   30   30   30   32   33   33   31   30    29 #>  [1435,]   27   30   30   30   32   33   33   31   30    29 #>  [1436,]   27   30   30   30   32   33   33   31   30    29 #>  [1437,]   27   30   30   30   32   33   33   31   30    29 #>  [1438,]   27   30   30   30   32   33   33   31   30    29 #>  [1439,]   27   30   30   30   32   33   33   31   30    29 #>  [1440,]   27   30   30   30   32   33   33   31   30    29 #>  [1441,]   27   30   30   30   32   33   33   31   30    29 #>  [1442,]   27   30   30   30   32   33   33   31   30    29 #>  [1443,]   27   30   30   30   32   33   33   31   30    29 #>  [1444,]   27   30   30   30   32   33   33   31   30    29 #>  [1445,]   27   30   30   30   32   33   33   31   30    29 #>  [1446,]   27   30   30   30   32   33   33   31   30    29 #>  [1447,]   27   30   30   30   32   33   33   31   30    29 #>  [1448,]   27   30   30   30   32   33   33   31   30    29 #>  [1449,]   27   30   30   30   32   33   33   31   30    29 #>  [1450,]   27   30   30   30   32   33   33   31   30    29 #>  [1451,]   27   30   30   30   32   33   33   31   30    29 #>  [1452,]   26   29   29   29   31   32   32   30   29    28 #>  [1453,]   27   30   30   30   32   33   33   31   30    29 #>  [1454,]   27   30   30   30   32   33   33   31   30    29 #>  [1455,]   27   30   30   30   32   33   33   31   30    29 #>  [1456,]   27   30   30   30   32   33   33   31   30    29 #>  [1457,]   26   29   29   29   31   32   32   30   29    28 #>  [1458,]   27   30   30   30   32   33   33   31   30    29 #>  [1459,]   26   29   29   29   31   32   32   30   29    28 #>  [1460,]   26   29   29   29   31   32   32   30   29    28 #>  [1461,]   27   30   30   30   32   33   33   31   30    29 #>  [1462,]   27   30   30   30   32   33   33   31   30    29 #>  [1463,]   27   30   30   30   32   33   33   31   30    29 #>  [1464,]   27   30   30   30   32   33   33   31   30    29 #>  [1465,]   27   30   30   30   32   33   33   31   30    29 #>  [1466,]   27   30   30   30   32   33   33   31   30    29 #>  [1467,]   27   30   30   30   32   33   33   31   30    29 #>  [1468,]   26   29   29   29   31   32   32   30   29    28 #>  [1469,]   27   30   30   30   32   33   33   31   30    29 #>  [1470,]   27   30   30   30   32   33   33   31   30    29 #>  [1471,]   27   30   30   30   32   33   33   31   30    29 #>  [1472,]   27   30   30   30   32   33   33   31   30    29 #>  [1473,]   27   30   30   30   32   33   33   31   30    29 #>  [1474,]   27   30   30   30   32   33   33   31   30    29 #>  [1475,]   27   30   30   30   32   33   33   31   30    29 #>  [1476,]   27   30   30   30   32   33   33   31   30    29 #>  [1477,]   27   30   30   30   32   33   33   31   30    29 #>  [1478,]   27   30   30   30   32   33   33   31   30    29 #>  [1479,]   27   30   30   30   32   33   33   31   30    29 #>  [1480,]   27   30   30   30   32   33   33   31   30    29 #>  [1481,]   27   30   30   30   32   33   33   31   30    29 #>  [1482,]   27   30   30   30   32   33   33   31   30    29 #>  [1483,]   27   30   30   30   32   33   33   31   30    29 #>  [1484,]   27   30   30   30   32   33   33   31   30    29 #>  [1485,]   27   30   30   30   32   33   33   31   30    29 #>  [1486,]   27   30   30   30   32   33   33   31   30    29 #>  [1487,]   27   30   30   30   32   33   33   31   30    29 #>  [1488,]   27   30   30   30   32   33   33   31   30    29 #>  [1489,]   27   30   30   30   32   33   33   31   30    29 #>  [1490,]   27   30   30   30   32   33   33   31   30    29 #>  [1491,]   27   30   30   30   32   33   33   31   30    29 #>  [1492,]   27   30   30   30   32   33   33   31   30    29 #>  [1493,]   27   30   30   30   32   33   33   31   30    29 #>  [1494,]   27   30   30   30   32   33   33   31   30    29 #>  [1495,]   27   30   30   30   32   33   33   31   30    29 #>  [1496,]   26   29   29   29   31   32   32   30   29    28 #>  [1497,]   26   29   29   29   31   32   32   30   29    28 #>  [1498,]   27   30   30   30   32   33   33   31   30    29 #>  [1499,]   27   30   30   30   32   33   33   31   30    29 #>  [1500,]   27   30   30   30   32   33   33   31   30    29 #>  [1501,]   29   32   32   32   34   35   35   33   32    30 #>  [1502,]   28   31   31   31   33   34   34   32   31    30 #>  [1503,]   28   31   31   31   33   34   34   32   31    30 #>  [1504,]   28   31   31   31   33   34   34   32   31    30 #>  [1505,]   29   32   32   32   34   36   35   33   32    30 #>  [1506,]   28   31   31   31   33   34   34   32   31    30 #>  [1507,]   28   31   31   31   33   34   34   32   31    30 #>  [1508,]   28   31   31   31   33   34   34   32   31    30 #>  [1509,]   28   31   31   31   33   34   34   32   31    30 #>  [1510,]   28   31   31   31   33   34   34   32   31    30 #>  [1511,]   28   31   31   31   33   34   34   32   31    30 #>  [1512,]   28   31   31   31   33   34   34   32   31    30 #>  [1513,]   28   31   31   31   33   34   34   32   31    30 #>  [1514,]   29   32   32   32   34   35   35   33   32    30 #>  [1515,]   29   32   32   32   34   35   35   33   32    30 #>  [1516,]   28   31   31   31   33   34   34   32   31    30 #>  [1517,]   28   31   31   31   33   34   34   32   31    30 #>  [1518,]   29   32   32   32   34   36   35   33   32    30 #>  [1519,]   28   31   31   31   33   34   34   32   31    30 #>  [1520,]   28   31   31   31   33   34   34   32   31    30 #>  [1521,]   28   31   31   31   33   34   34   32   31    30 #>  [1522,]   28   31   31   31   33   34   34   32   31    30 #>  [1523,]   28   31   31   31   33   34   34   32   31    30 #>  [1524,]   28   31   31   31   33   34   34   32   31    30 #>  [1525,]   28   31   31   31   33   34   34   32   31    30 #>  [1526,]   28   31   31   31   33   34   34   32   31    30 #>  [1527,]   29   32   32   32   34   35   35   33   32    30 #>  [1528,]   28   31   31   31   33   34   34   32   31    30 #>  [1529,]   28   31   31   31   33   34   34   32   31    30 #>  [1530,]   28   31   31   31   33   34   34   32   31    30 #>  [1531,]   28   31   31   31   33   34   34   32   31    30 #>  [1532,]   29   32   32   32   34   36   35   33   32    30 #>  [1533,]   28   31   31   31   33   34   34   32   31    30 #>  [1534,]   28   31   31   31   33   34   34   32   31    30 #>  [1535,]   28   31   31   31   33   34   34   32   31    30 #>  [1536,]   28   31   31   31   33   34   34   32   31    30 #>  [1537,]   28   31   31   31   33   34   34   32   31    30 #>  [1538,]   28   31   31   31   33   34   34   32   31    30 #>  [1539,]   28   31   31   31   33   34   34   32   31    30 #>  [1540,]   28   31   31   31   33   34   34   32   31    30 #>  [1541,]   28   31   31   31   33   34   34   32   31    30 #>  [1542,]   28   31   31   31   33   34   34   32   31    30 #>  [1543,]   28   31   31   31   33   34   34   32   31    30 #>  [1544,]   28   31   31   31   33   34   34   32   31    30 #>  [1545,]   28   31   31   31   33   34   34   32   31    30 #>  [1546,]   28   31   31   31   33   34   34   32   31    30 #>  [1547,]   28   31   31   31   33   34   34   32   31    30 #>  [1548,]   28   31   31   31   33   34   34   32   31    30 #>  [1549,]   28   31   31   31   33   34   34   32   31    30 #>  [1550,]   28   31   31   31   33   34   34   32   31    30 #>  [1551,]   28   31   31   31   33   34   34   32   31    30 #>  [1552,]   28   31   31   31   33   34   34   32   31    30 #>  [1553,]   28   31   31   31   33   34   34   32   31    30 #>  [1554,]   28   31   31   31   33   34   34   32   31    30 #>  [1555,]   28   31   31   31   33   34   34   32   31    30 #>  [1556,]   28   31   31   31   33   34   34   32   31    30 #>  [1557,]   28   31   31   31   33   34   34   32   31    30 #>  [1558,]   28   31   31   31   33   34   34   32   31    30 #>  [1559,]   28   31   31   31   33   34   34   32   31    30 #>  [1560,]   28   31   31   31   33   34   34   32   31    30 #>  [1561,]   28   31   31   31   33   34   34   32   31    30 #>  [1562,]   28   31   31   31   33   34   34   32   31    30 #>  [1563,]   28   31   31   31   33   34   34   32   31    30 #>  [1564,]   28   31   31   31   33   34   34   32   31    30 #>  [1565,]   28   31   31   31   33   34   34   32   31    30 #>  [1566,]   28   31   31   31   33   34   34   32   31    30 #>  [1567,]   28   31   31   31   33   34   34   32   31    30 #>  [1568,]   28   31   31   31   33   34   34   32   31    30 #>  [1569,]   28   31   31   31   33   34   34   32   31    30 #>  [1570,]   28   31   31   31   33   34   34   32   31    30 #>  [1571,]   29   32   32   32   34   36   35   33   32    30 #>  [1572,]   28   31   31   31   33   34   34   32   31    30 #>  [1573,]   28   31   31   31   33   34   34   32   31    30 #>  [1574,]   28   31   31   31   33   34   34   32   31    30 #>  [1575,]   29   32   32   32   34   36   35   33   32    30 #>  [1576,]   28   31   31   31   33   34   34   32   31    30 #>  [1577,]   28   31   31   31   33   34   34   32   31    30 #>  [1578,]   28   31   31   31   33   34   34   32   31    30 #>  [1579,]   28   31   31   31   33   34   34   32   31    30 #>  [1580,]   28   31   31   31   33   34   34   32   31    30 #>  [1581,]   28   31   31   31   33   34   34   32   31    30 #>  [1582,]   28   31   31   31   33   34   34   32   31    30 #>  [1583,]   28   31   31   31   33   34   34   32   31    30 #>  [1584,]   28   31   31   31   33   34   34   32   31    30 #>  [1585,]   28   31   31   31   33   34   34   32   31    30 #>  [1586,]   28   31   31   31   33   34   34   32   31    30 #>  [1587,]   28   31   31   31   33   34   34   32   31    30 #>  [1588,]   28   31   31   31   33   34   34   32   31    30 #>  [1589,]   28   31   31   31   33   34   34   32   31    30 #>  [1590,]   28   31   31   31   33   34   34   32   31    30 #>  [1591,]   29   32   32   32   34   35   35   33   32    30 #>  [1592,]   28   31   31   31   33   34   34   32   31    30 #>  [1593,]   28   31   31   31   33   34   34   32   31    30 #>  [1594,]   28   31   31   31   33   34   34   32   31    30 #>  [1595,]   29   32   32   32   34   35   35   33   32    30 #>  [1596,]   28   31   31   31   33   34   34   32   31    30 #>  [1597,]   28   31   31   31   33   34   34   32   31    30 #>  [1598,]   28   31   31   31   33   34   34   32   31    30 #>  [1599,]   28   31   31   31   33   34   34   32   31    30 #>  [1600,]   29   32   32   32   34   36   35   33   32    30 #>  [1601,]   31   34   34   34   36   38   37   35   34    32 #>  [1602,]   31   34   34   34   36   38   37   35   34    32 #>  [1603,]   30   33   33   33   35   37   36   34   33    31 #>  [1604,]   31   34   34   34   36   38   37   35   34    32 #>  [1605,]   30   33   33   33   35   37   36   34   33    31 #>  [1606,]   31   34   34   34   36   38   37   35   34    32 #>  [1607,]   30   33   33   33   35   37   36   34   33    31 #>  [1608,]   30   33   33   33   35   37   36   34   33    31 #>  [1609,]   31   34   34   34   36   38   37   35   34    32 #>  [1610,]   31   34   34   34   36   38   37   35   34    32 #>  [1611,]   31   34   34   34   36   38   37   35   34    32 #>  [1612,]   31   34   34   34   36   38   37   35   34    32 #>  [1613,]   30   33   33   33   35   37   36   34   33    31 #>  [1614,]   31   34   34   34   36   38   37   35   34    32 #>  [1615,]   31   34   34   34   36   38   37   35   34    32 #>  [1616,]   30   33   33   33   35   37   36   34   33    31 #>  [1617,]   30   33   33   33   35   37   36   34   33    31 #>  [1618,]   31   34   34   34   36   38   37   35   34    32 #>  [1619,]   31   34   34   34   36   38   37   35   34    32 #>  [1620,]   30   33   33   33   35   37   36   34   33    31 #>  [1621,]   31   34   34   34   36   38   37   35   34    32 #>  [1622,]   30   33   33   33   35   37   36   34   33    31 #>  [1623,]   31   34   34   34   36   38   37   35   34    32 #>  [1624,]   30   33   33   33   35   37   36   34   33    31 #>  [1625,]   30   33   33   33   35   37   36   34   33    31 #>  [1626,]   31   34   34   34   36   38   37   35   34    32 #>  [1627,]   31   34   34   34   36   38   37   35   34    32 #>  [1628,]   31   34   34   34   36   38   37   35   34    32 #>  [1629,]   30   33   33   33   35   37   36   34   33    31 #>  [1630,]   31   34   34   34   36   38   37   35   34    32 #>  [1631,]   31   34   34   34   36   38   37   35   34    32 #>  [1632,]   31   34   34   34   36   38   37   35   34    32 #>  [1633,]   31   34   34   34   36   38   37   35   34    32 #>  [1634,]   31   34   34   34   36   38   37   35   34    32 #>  [1635,]   31   34   34   34   36   38   37   35   34    32 #>  [1636,]   31   34   34   34   36   38   37   35   34    32 #>  [1637,]   31   34   34   34   36   38   37   35   34    32 #>  [1638,]   31   34   34   34   36   38   37   35   34    32 #>  [1639,]   30   33   33   33   35   37   36   34   33    31 #>  [1640,]   30   33   33   33   35   37   36   34   33    31 #>  [1641,]   31   34   34   34   36   38   37   35   34    32 #>  [1642,]   31   34   34   34   36   38   37   35   34    32 #>  [1643,]   30   33   33   33   35   37   36   34   33    31 #>  [1644,]   30   33   33   33   35   37   36   34   33    31 #>  [1645,]   30   33   33   33   35   37   36   34   33    31 #>  [1646,]   30   33   33   33   35   37   36   34   33    31 #>  [1647,]   30   33   33   33   35   37   36   34   33    31 #>  [1648,]   31   34   34   34   36   38   37   35   34    32 #>  [1649,]   30   33   33   33   35   37   36   34   33    31 #>  [1650,]   30   33   33   33   35   37   36   34   33    31 #>  [1651,]   30   33   33   33   35   37   36   34   33    31 #>  [1652,]   31   34   34   34   36   38   37   35   34    32 #>  [1653,]   30   33   33   33   35   37   36   34   33    31 #>  [1654,]   30   33   33   33   35   37   36   34   33    31 #>  [1655,]   30   33   33   33   35   37   36   34   33    31 #>  [1656,]   30   33   33   33   35   37   36   34   33    31 #>  [1657,]   31   34   34   34   36   38   37   35   34    32 #>  [1658,]   31   34   34   34   36   38   37   35   34    32 #>  [1659,]   30   33   33   33   35   37   36   34   33    31 #>  [1660,]   31   34   34   34   36   38   37   35   34    32 #>  [1661,]   31   34   34   34   36   38   37   35   34    32 #>  [1662,]   31   34   34   34   36   38   37   35   34    32 #>  [1663,]   30   33   33   33   35   37   36   34   33    31 #>  [1664,]   31   34   34   34   36   38   37   35   34    32 #>  [1665,]   30   33   33   33   35   37   36   34   33    31 #>  [1666,]   30   33   33   33   35   37   36   34   33    31 #>  [1667,]   31   34   34   34   36   38   37   35   34    32 #>  [1668,]   31   34   34   34   36   38   37   35   34    32 #>  [1669,]   31   34   34   34   36   38   37   35   34    32 #>  [1670,]   30   33   33   33   35   37   36   34   33    31 #>  [1671,]   30   33   33   33   35   37   36   34   33    31 #>  [1672,]   30   33   33   33   35   37   36   34   33    31 #>  [1673,]   31   34   34   34   36   38   37   35   34    32 #>  [1674,]   31   34   34   34   36   38   37   35   34    32 #>  [1675,]   31   34   34   34   36   38   37   35   34    32 #>  [1676,]   30   33   33   33   35   37   36   34   33    31 #>  [1677,]   30   33   33   33   35   37   36   34   33    31 #>  [1678,]   30   33   33   33   35   37   36   34   33    31 #>  [1679,]   30   33   33   33   35   37   36   34   33    31 #>  [1680,]   31   34   34   34   36   38   37   35   34    32 #>  [1681,]   31   34   34   34   36   38   37   35   34    32 #>  [1682,]   31   34   34   34   36   38   37   35   34    32 #>  [1683,]   30   33   33   33   35   37   36   34   33    31 #>  [1684,]   30   33   33   33   35   37   36   34   33    31 #>  [1685,]   31   34   34   34   36   38   37   35   34    32 #>  [1686,]   30   33   33   33   35   37   36   34   33    31 #>  [1687,]   31   34   34   34   36   38   37   35   34    32 #>  [1688,]   31   34   34   34   36   38   37   35   34    32 #>  [1689,]   30   33   33   33   35   37   36   34   33    31 #>  [1690,]   30   33   33   33   35   37   36   34   33    31 #>  [1691,]   31   34   34   34   36   38   37   35   34    32 #>  [1692,]   31   34   34   34   36   38   37   35   34    32 #>  [1693,]   31   34   34   34   36   38   37   35   34    32 #>  [1694,]   30   33   33   33   35   37   36   34   33    31 #>  [1695,]   31   34   34   34   36   38   37   35   34    32 #>  [1696,]   31   34   34   34   36   38   37   35   34    32 #>  [1697,]   31   34   34   34   36   38   37   35   34    32 #>  [1698,]   30   33   33   33   35   37   36   34   33    31 #>  [1699,]   31   34   34   34   36   38   37   35   34    32 #>  [1700,]   30   33   33   33   35   37   36   34   33    31 #>  [1701,]   32   36   36   36   38   40   39   37   36    34 #>  [1702,]   32   37   36   36   38   40   39   37   36    34 #>  [1703,]   32   36   36   36   38   40   39   37   36    34 #>  [1704,]   32   36   36   36   38   40   39   37   36    34 #>  [1705,]   32   37   36   36   38   40   39   37   36    34 #>  [1706,]   32   36   36   36   38   40   39   37   36    34 #>  [1707,]   32   37   36   36   38   40   39   37   36    34 #>  [1708,]   32   37   36   36   38   40   39   37   36    34 #>  [1709,]   32   37   36   36   38   40   39   37   36    34 #>  [1710,]   33   35   35   35   37   39   38   36   35    33 #>  [1711,]   32   36   36   36   38   40   39   37   36    34 #>  [1712,]   32   37   36   36   38   40   39   37   36    34 #>  [1713,]   32   37   36   36   38   40   39   37   36    34 #>  [1714,]   32   36   36   36   38   40   39   37   36    34 #>  [1715,]   32   37   36   36   38   40   39   37   36    34 #>  [1716,]   32   36   36   36   38   40   39   37   36    34 #>  [1717,]   32   37   36   36   38   40   39   37   36    34 #>  [1718,]   33   35   35   35   37   39   38   36   35    33 #>  [1719,]   32   36   36   36   38   40   39   37   36    34 #>  [1720,]   32   37   36   36   38   40   39   37   36    34 #>  [1721,]   32   37   36   36   38   40   39   37   36    34 #>  [1722,]   32   37   36   36   38   40   39   37   36    34 #>  [1723,]   32   37   36   36   38   40   39   37   36    34 #>  [1724,]   32   37   36   36   38   40   39   37   36    34 #>  [1725,]   33   35   35   35   37   39   38   36   35    33 #>  [1726,]   32   36   36   36   38   40   39   37   36    34 #>  [1727,]   32   37   36   36   38   40   39   37   36    34 #>  [1728,]   32   36   36   36   38   40   39   37   36    34 #>  [1729,]   32   37   36   36   38   40   39   37   36    34 #>  [1730,]   32   37   36   36   38   40   39   37   36    34 #>  [1731,]   32   37   36   36   38   40   39   37   36    34 #>  [1732,]   32   37   36   36   38   40   39   37   36    34 #>  [1733,]   32   37   36   36   38   40   39   37   36    34 #>  [1734,]   32   36   36   36   38   40   39   37   36    34 #>  [1735,]   32   36   36   36   38   40   39   37   36    34 #>  [1736,]   32   37   36   36   38   40   39   37   36    34 #>  [1737,]   32   36   36   36   38   40   39   37   36    34 #>  [1738,]   32   36   36   36   38   40   39   37   36    34 #>  [1739,]   33   35   35   35   37   39   38   36   35    33 #>  [1740,]   32   37   36   36   38   40   39   37   36    34 #>  [1741,]   32   37   36   36   38   40   39   37   36    34 #>  [1742,]   32   36   36   36   38   40   39   37   36    34 #>  [1743,]   33   35   35   35   37   39   38   36   35    33 #>  [1744,]   32   37   36   36   38   40   39   37   36    34 #>  [1745,]   33   35   35   35   37   39   38   36   35    33 #>  [1746,]   32   37   36   36   38   40   39   37   36    34 #>  [1747,]   32   37   36   36   38   40   39   37   36    34 #>  [1748,]   32   37   36   36   38   40   39   37   36    34 #>  [1749,]   32   36   36   36   38   40   39   37   36    34 #>  [1750,]   32   37   36   36   38   40   39   37   36    34 #>  [1751,]   32   37   36   36   38   40   39   37   36    34 #>  [1752,]   32   36   36   36   38   40   39   37   36    34 #>  [1753,]   32   37   36   36   38   40   39   37   36    34 #>  [1754,]   32   37   36   36   38   40   39   37   36    34 #>  [1755,]   32   37   36   36   38   40   39   37   36    34 #>  [1756,]   32   36   36   36   38   40   39   37   36    34 #>  [1757,]   32   37   36   36   38   40   39   37   36    34 #>  [1758,]   32   37   36   36   38   40   39   37   36    34 #>  [1759,]   32   36   36   36   38   40   39   37   36    34 #>  [1760,]   32   37   36   36   38   40   39   37   36    34 #>  [1761,]   32   37   36   36   38   40   39   37   36    34 #>  [1762,]   32   37   36   36   38   40   39   37   36    34 #>  [1763,]   32   37   36   36   38   40   39   37   36    34 #>  [1764,]   32   36   36   36   38   40   39   37   36    34 #>  [1765,]   32   36   36   36   38   40   39   37   36    34 #>  [1766,]   32   37   36   36   38   40   39   37   36    34 #>  [1767,]   32   37   36   36   38   40   39   37   36    34 #>  [1768,]   32   36   36   36   38   40   39   37   36    34 #>  [1769,]   32   36   36   36   38   40   39   37   36    34 #>  [1770,]   32   37   36   36   38   40   39   37   36    34 #>  [1771,]   32   37   36   36   38   40   39   37   36    34 #>  [1772,]   32   36   36   36   38   40   39   37   36    34 #>  [1773,]   33   35   35   35   37   39   38   36   35    33 #>  [1774,]   32   37   36   36   38   40   39   37   36    34 #>  [1775,]   33   35   35   35   37   39   38   36   35    33 #>  [1776,]   32   37   36   36   38   40   39   37   36    34 #>  [1777,]   33   35   35   35   37   39   38   36   35    33 #>  [1778,]   32   37   36   36   38   40   39   37   36    34 #>  [1779,]   32   36   36   36   38   40   39   37   36    34 #>  [1780,]   32   37   36   36   38   40   39   37   36    34 #>  [1781,]   32   37   36   36   38   40   39   37   36    34 #>  [1782,]   32   37   36   36   38   40   39   37   36    34 #>  [1783,]   32   37   36   36   38   40   39   37   36    34 #>  [1784,]   32   37   36   36   38   40   39   37   36    34 #>  [1785,]   32   37   36   36   38   40   39   37   36    34 #>  [1786,]   32   37   36   36   38   40   39   37   36    34 #>  [1787,]   32   37   36   36   38   40   39   37   36    34 #>  [1788,]   32   37   36   36   38   40   39   37   36    34 #>  [1789,]   32   36   36   36   38   40   39   37   36    34 #>  [1790,]   32   37   36   36   38   40   39   37   36    34 #>  [1791,]   32   37   36   36   38   40   39   37   36    34 #>  [1792,]   32   37   36   36   38   40   39   37   36    34 #>  [1793,]   32   37   36   36   38   40   39   37   36    34 #>  [1794,]   32   36   36   36   38   40   39   37   36    34 #>  [1795,]   32   37   36   36   38   40   39   37   36    34 #>  [1796,]   32   36   36   36   38   40   39   37   36    34 #>  [1797,]   32   36   36   36   38   40   39   37   36    34 #>  [1798,]   32   37   36   36   38   40   39   37   36    34 #>  [1799,]   32   37   36   36   38   40   39   37   36    34 #>  [1800,]   32   36   36   36   38   40   39   37   36    34 #>  [1801,]   35   39   38   38   40   42   40   38   37    35 #>  [1802,]   34   38   37   37   39   41   42   40   39    37 #>  [1803,]   35   39   38   38   40   42   40   38   37    35 #>  [1804,]   35   39   38   38   40   42   40   38   37    35 #>  [1805,]   35   39   38   38   40   42   40   38   37    35 #>  [1806,]   34   38   37   37   39   41   41   39   38    36 #>  [1807,]   35   39   38   38   40   42   40   38   37    35 #>  [1808,]   35   39   38   38   40   42   40   38   37    35 #>  [1809,]   35   39   38   38   40   42   40   38   37    35 #>  [1810,]   35   39   38   38   40   42   40   38   37    35 #>  [1811,]   34   38   37   37   39   41   41   39   38    36 #>  [1812,]   34   38   37   37   39   41   42   40   39    37 #>  [1813,]   35   39   38   38   40   42   40   38   37    35 #>  [1814,]   35   39   38   38   40   42   40   38   37    35 #>  [1815,]   34   38   37   37   39   41   41   39   38    36 #>  [1816,]   35   39   38   38   40   42   40   38   37    35 #>  [1817,]   34   38   37   37   39   41   42   40   39    37 #>  [1818,]   35   39   38   38   40   42   40   38   37    35 #>  [1819,]   34   38   37   37   39   41   41   39   38    36 #>  [1820,]   35   39   38   38   40   42   40   38   37    35 #>  [1821,]   35   39   38   38   40   42   40   38   37    35 #>  [1822,]   35   39   38   38   40   42   40   38   37    35 #>  [1823,]   34   38   37   37   39   41   41   39   38    36 #>  [1824,]   35   39   38   38   40   42   40   38   37    35 #>  [1825,]   35   39   38   38   40   42   40   38   37    35 #>  [1826,]   34   38   37   37   39   41   41   39   38    36 #>  [1827,]   35   39   38   38   40   42   40   38   37    35 #>  [1828,]   35   39   38   38   40   42   40   38   37    35 #>  [1829,]   34   38   37   37   39   41   42   40   39    37 #>  [1830,]   34   38   37   37   39   41   41   39   38    36 #>  [1831,]   34   38   37   37   39   41   41   39   38    36 #>  [1832,]   35   39   38   38   40   42   40   38   37    35 #>  [1833,]   35   39   38   38   40   42   40   38   37    35 #>  [1834,]   34   38   37   37   39   41   41   39   38    36 #>  [1835,]   34   38   37   37   39   41   41   39   38    36 #>  [1836,]   35   39   38   38   40   42   40   38   37    35 #>  [1837,]   34   38   37   37   39   41   41   39   38    36 #>  [1838,]   35   39   38   38   40   42   40   38   37    35 #>  [1839,]   35   39   38   38   40   42   40   38   37    35 #>  [1840,]   35   39   38   38   40   42   40   38   37    35 #>  [1841,]   35   39   38   38   40   42   40   38   37    35 #>  [1842,]   34   38   37   37   39   41   41   39   38    36 #>  [1843,]   34   38   37   37   39   41   41   39   38    36 #>  [1844,]   34   38   37   37   39   41   41   39   38    36 #>  [1845,]   35   39   38   38   40   42   40   38   37    35 #>  [1846,]   34   38   37   37   39   41   41   39   38    36 #>  [1847,]   34   38   37   37   39   41   41   39   38    36 #>  [1848,]   34   38   37   37   39   41   41   39   38    36 #>  [1849,]   35   39   38   38   40   42   40   38   37    35 #>  [1850,]   35   39   38   38   40   42   40   38   37    35 #>  [1851,]   35   39   38   38   40   42   40   38   37    35 #>  [1852,]   35   39   38   38   40   42   40   38   37    35 #>  [1853,]   35   39   38   38   40   42   40   38   37    35 #>  [1854,]   35   39   38   38   40   42   40   38   37    35 #>  [1855,]   35   39   38   38   40   42   40   38   37    35 #>  [1856,]   34   38   37   37   39   41   41   39   38    36 #>  [1857,]   35   39   38   38   40   42   40   38   37    35 #>  [1858,]   35   39   38   38   40   42   40   38   37    35 #>  [1859,]   35   39   38   38   40   42   40   38   37    35 #>  [1860,]   34   38   37   37   39   41   42   40   39    37 #>  [1861,]   34   38   37   37   39   41   41   39   38    36 #>  [1862,]   35   39   38   38   40   42   40   38   37    35 #>  [1863,]   34   38   37   37   39   41   42   40   39    37 #>  [1864,]   34   38   37   37   39   41   41   39   38    36 #>  [1865,]   34   38   37   37   39   41   41   39   38    36 #>  [1866,]   34   38   37   37   39   41   41   39   38    36 #>  [1867,]   35   39   38   38   40   42   40   38   37    35 #>  [1868,]   34   38   37   37   39   41   41   39   38    36 #>  [1869,]   35   39   38   38   40   42   40   38   37    35 #>  [1870,]   34   38   37   37   39   41   42   40   39    37 #>  [1871,]   35   39   38   38   40   42   40   38   37    35 #>  [1872,]   35   39   38   38   40   42   40   38   37    35 #>  [1873,]   35   39   38   38   40   42   40   38   37    35 #>  [1874,]   35   39   38   38   40   42   40   38   37    35 #>  [1875,]   34   38   37   37   39   41   41   39   38    36 #>  [1876,]   35   39   38   38   40   42   40   38   37    35 #>  [1877,]   35   39   38   38   40   42   40   38   37    35 #>  [1878,]   34   38   37   37   39   41   41   39   38    36 #>  [1879,]   34   38   37   37   39   41   41   39   38    36 #>  [1880,]   35   39   38   38   40   42   40   38   37    35 #>  [1881,]   34   38   37   37   39   41   42   40   39    37 #>  [1882,]   35   39   38   38   40   42   40   38   37    35 #>  [1883,]   35   39   38   38   40   42   40   38   37    35 #>  [1884,]   35   39   38   38   40   42   40   38   37    35 #>  [1885,]   35   39   38   38   40   42   40   38   37    35 #>  [1886,]   35   39   38   38   40   42   40   38   37    35 #>  [1887,]   35   39   38   38   40   42   40   38   37    35 #>  [1888,]   35   39   38   38   40   42   40   38   37    35 #>  [1889,]   35   39   38   38   40   42   40   38   37    35 #>  [1890,]   35   39   38   38   40   42   40   38   37    35 #>  [1891,]   35   39   38   38   40   42   40   38   37    35 #>  [1892,]   34   38   37   37   39   41   41   39   38    36 #>  [1893,]   34   38   37   37   39   41   41   39   38    36 #>  [1894,]   34   38   37   37   39   41   41   39   38    36 #>  [1895,]   34   38   37   37   39   41   41   39   38    36 #>  [1896,]   34   38   37   37   39   41   41   39   38    36 #>  [1897,]   35   39   38   38   40   42   40   38   37    35 #>  [1898,]   35   39   38   38   40   42   40   38   37    35 #>  [1899,]   35   39   38   38   40   42   40   38   37    35 #>  [1900,]   34   38   37   37   39   41   41   39   38    36 #>  [1901,]   37   41   40   40   41   43   43   41   42    39 #>  [1902,]   36   40   39   39   42   44   44   42   40    38 #>  [1903,]   36   40   39   39   42   44   44   42   40    38 #>  [1904,]   37   41   40   40   41   43   43   41   42    39 #>  [1905,]   37   41   40   40   41   43   43   41   42    39 #>  [1906,]   37   41   40   40   41   43   43   41   41    39 #>  [1907,]   36   40   39   39   42   44   44   42   40    38 #>  [1908,]   37   41   40   40   41   43   43   41   41    39 #>  [1909,]   37   41   40   40   41   43   43   41   41    39 #>  [1910,]   37   41   40   40   41   43   43   41   42    39 #>  [1911,]   37   41   40   40   41   43   43   41   42    39 #>  [1912,]   37   41   40   40   41   43   43   41   42    39 #>  [1913,]   36   40   39   39   42   44   44   42   40    38 #>  [1914,]   37   41   40   40   41   43   43   41   42    39 #>  [1915,]   37   41   40   40   41   43   43   41   42    39 #>  [1916,]   36   40   39   39   42   44   44   42   40    38 #>  [1917,]   37   41   40   40   41   43   43   41   42    39 #>  [1918,]   36   40   39   39   42   44   44   42   40    38 #>  [1919,]   36   40   39   39   42   44   44   42   40    38 #>  [1920,]   37   41   40   40   41   43   43   41   41    39 #>  [1921,]   36   40   39   39   42   44   44   42   40    38 #>  [1922,]   36   40   39   39   42   44   44   42   40    38 #>  [1923,]   36   40   39   39   42   44   44   42   40    38 #>  [1924,]   36   40   39   39   42   44   44   42   40    38 #>  [1925,]   37   41   40   40   41   43   43   41   41    39 #>  [1926,]   37   41   40   40   41   43   43   41   42    39 #>  [1927,]   37   41   40   40   41   43   43   41   42    39 #>  [1928,]   37   41   40   40   41   43   43   41   42    39 #>  [1929,]   36   40   39   39   43   45   45   42   40    38 #>  [1930,]   36   40   39   39   42   44   44   42   40    38 #>  [1931,]   36   40   39   39   42   44   44   42   40    38 #>  [1932,]   36   40   39   39   43   45   45   42   40    38 #>  [1933,]   37   41   40   40   41   43   43   41   42    39 #>  [1934,]   36   40   39   39   42   44   44   42   40    38 #>  [1935,]   36   40   39   39   42   44   44   42   40    38 #>  [1936,]   36   40   39   39   42   44   44   42   40    38 #>  [1937,]   36   40   39   39   42   44   44   42   40    38 #>  [1938,]   37   41   40   40   41   43   43   41   42    39 #>  [1939,]   36   40   39   39   42   44   44   42   40    38 #>  [1940,]   36   40   39   39   42   44   44   42   40    38 #>  [1941,]   37   41   40   40   41   43   43   41   41    39 #>  [1942,]   37   41   40   40   41   43   43   41   41    39 #>  [1943,]   37   41   40   40   41   43   43   41   42    39 #>  [1944,]   36   40   39   39   42   44   44   42   40    38 #>  [1945,]   37   41   40   40   41   43   43   41   41    39 #>  [1946,]   37   41   40   40   41   43   43   41   42    39 #>  [1947,]   36   40   39   39   42   44   44   42   40    38 #>  [1948,]   36   40   39   39   43   45   45   42   40    38 #>  [1949,]   36   40   39   39   42   44   44   42   40    38 #>  [1950,]   37   41   40   40   41   43   43   41   41    39 #>  [1951,]   37   41   40   40   41   43   43   41   42    39 #>  [1952,]   37   41   40   40   41   43   43   41   42    39 #>  [1953,]   37   41   40   40   41   43   43   41   41    39 #>  [1954,]   36   40   39   39   42   44   44   42   40    38 #>  [1955,]   37   41   40   40   41   43   43   41   41    39 #>  [1956,]   37   41   40   40   41   43   43   41   41    39 #>  [1957,]   37   41   40   40   41   43   43   41   41    39 #>  [1958,]   37   41   40   40   41   43   43   41   42    39 #>  [1959,]   36   40   39   39   42   44   44   42   40    38 #>  [1960,]   37   41   40   40   41   43   43   41   41    39 #>  [1961,]   37   41   40   40   41   43   43   41   42    39 #>  [1962,]   36   40   39   39   42   44   44   42   40    38 #>  [1963,]   37   41   40   40   41   43   43   41   42    39 #>  [1964,]   37   41   40   40   41   43   43   41   41    39 #>  [1965,]   37   41   40   40   41   43   43   41   41    39 #>  [1966,]   37   41   40   40   41   43   43   41   42    39 #>  [1967,]   37   41   40   40   41   43   43   41   41    39 #>  [1968,]   37   41   40   40   41   43   43   41   42    39 #>  [1969,]   37   41   40   40   41   43   43   41   42    39 #>  [1970,]   36   40   39   39   42   44   44   42   40    38 #>  [1971,]   37   41   40   40   41   43   43   41   42    39 #>  [1972,]   37   41   40   40   41   43   43   41   41    39 #>  [1973,]   37   41   40   40   41   43   43   41   41    39 #>  [1974,]   37   41   40   40   41   43   43   41   41    39 #>  [1975,]   37   41   40   40   41   43   43   41   42    39 #>  [1976,]   37   41   40   40   41   43   43   41   41    39 #>  [1977,]   36   40   39   39   42   44   44   42   40    38 #>  [1978,]   37   41   40   40   41   43   43   41   41    39 #>  [1979,]   36   40   39   39   42   44   44   42   40    38 #>  [1980,]   36   40   39   39   42   44   44   42   40    38 #>  [1981,]   37   41   40   40   41   43   43   41   41    39 #>  [1982,]   37   41   40   40   41   43   43   41   41    39 #>  [1983,]   36   40   39   39   42   44   44   42   40    38 #>  [1984,]   37   41   40   40   41   43   43   41   41    39 #>  [1985,]   36   40   39   39   43   45   45   42   40    38 #>  [1986,]   36   40   39   39   43   45   45   42   40    38 #>  [1987,]   37   41   40   40   41   43   43   41   42    39 #>  [1988,]   37   41   40   40   41   43   43   41   41    39 #>  [1989,]   37   41   40   40   41   43   43   41   41    39 #>  [1990,]   37   41   40   40   41   43   43   41   42    39 #>  [1991,]   37   41   40   40   41   43   43   41   42    39 #>  [1992,]   37   41   40   40   41   43   43   41   42    39 #>  [1993,]   36   40   39   39   42   44   44   42   40    38 #>  [1994,]   37   41   40   40   41   43   43   41   41    39 #>  [1995,]   36   40   39   39   42   44   44   42   40    38 #>  [1996,]   37   41   40   40   41   43   43   41   42    39 #>  [1997,]   37   41   40   40   41   43   43   41   41    39 #>  [1998,]   36   40   39   39   42   44   44   42   40    38 #>  [1999,]   37   41   40   40   41   43   43   41   41    39 #>  [2000,]   36   40   39   39   42   44   44   42   40    38 #>  [2001,]   38   42   41   43   45   47   46   43   44    41 #>  [2002,]   38   42   41   43   45   47   46   43   43    40 #>  [2003,]   38   42   41   42   45   47   46   43   43    40 #>  [2004,]   38   42   41   42   45   47   46   43   43    40 #>  [2005,]   38   42   41   42   45   47   46   43   43    40 #>  [2006,]   39   43   42   41   44   46   46   43   43    40 #>  [2007,]   38   42   41   43   45   47   46   43   43    40 #>  [2008,]   39   43   42   41   44   46   46   43   43    40 #>  [2009,]   39   43   42   41   44   46   46   43   43    40 #>  [2010,]   38   42   41   42   45   47   46   43   43    40 #>  [2011,]   38   42   41   42   45   47   46   43   43    40 #>  [2012,]   39   43   42   41   44   46   46   43   43    40 #>  [2013,]   38   42   41   43   45   47   46   43   44    41 #>  [2014,]   38   42   41   42   45   47   46   43   44    41 #>  [2015,]   39   43   42   41   44   46   46   43   44    41 #>  [2016,]   38   42   41   43   45   47   46   43   44    41 #>  [2017,]   38   42   41   43   45   47   46   43   43    40 #>  [2018,]   38   42   41   43   45   47   46   43   43    40 #>  [2019,]   38   42   41   43   45   47   46   43   43    40 #>  [2020,]   39   43   42   41   44   46   46   43   43    40 #>  [2021,]   38   42   41   42   45   47   46   43   44    41 #>  [2022,]   38   42   41   43   45   47   46   43   43    40 #>  [2023,]   38   42   41   43   45   47   46   43   43    40 #>  [2024,]   38   42   41   42   45   47   46   43   43    40 #>  [2025,]   38   42   41   42   45   47   46   43   43    40 #>  [2026,]   39   43   42   41   44   46   46   43   43    40 #>  [2027,]   38   42   41   43   45   47   46   43   43    40 #>  [2028,]   38   42   41   42   45   47   46   43   43    40 #>  [2029,]   38   42   41   43   45   47   46   43   44    41 #>  [2030,]   38   42   41   43   45   47   46   43   43    40 #>  [2031,]   38   42   41   42   45   47   46   43   43    40 #>  [2032,]   38   42   41   42   45   47   46   43   43    40 #>  [2033,]   39   43   42   41   44   46   46   43   44    41 #>  [2034,]   38   42   41   42   45   47   46   43   43    40 #>  [2035,]   38   42   41   42   45   47   46   43   43    40 #>  [2036,]   38   42   41   43   45   47   46   43   43    40 #>  [2037,]   38   42   41   43   45   47   46   43   43    40 #>  [2038,]   38   42   41   43   45   47   46   43   43    40 #>  [2039,]   38   42   41   42   45   47   46   43   43    40 #>  [2040,]   38   42   41   42   45   47   46   43   43    40 #>  [2041,]   38   42   41   43   45   47   46   43   44    41 #>  [2042,]   38   42   41   42   45   47   46   43   43    40 #>  [2043,]   39   43   42   41   44   46   46   43   43    40 #>  [2044,]   38   42   41   43   45   47   46   43   44    41 #>  [2045,]   39   43   42   41   44   46   46   43   43    40 #>  [2046,]   39   43   42   41   44   46   46   43   43    40 #>  [2047,]   38   42   41   42   45   47   46   43   43    40 #>  [2048,]   38   42   41   42   45   47   46   43   43    40 #>  [2049,]   38   42   41   43   45   47   46   43   43    40 #>  [2050,]   39   43   42   41   44   46   46   43   44    41 #>  [2051,]   39   43   42   41   44   46   46   43   43    40 #>  [2052,]   38   42   41   42   45   47   46   43   43    40 #>  [2053,]   39   43   42   41   44   46   46   43   43    40 #>  [2054,]   38   42   41   42   45   47   46   43   43    40 #>  [2055,]   38   42   41   43   45   47   46   43   43    40 #>  [2056,]   39   43   42   41   44   46   46   43   43    40 #>  [2057,]   39   43   42   41   44   46   46   43   43    40 #>  [2058,]   39   43   42   41   44   46   46   43   43    40 #>  [2059,]   38   42   41   43   45   47   46   43   44    41 #>  [2060,]   38   42   41   43   45   47   46   43   43    40 #>  [2061,]   39   43   42   41   44   46   46   43   43    40 #>  [2062,]   38   42   41   42   45   47   46   43   43    40 #>  [2063,]   38   42   41   43   45   47   46   43   43    40 #>  [2064,]   39   43   42   41   44   46   46   43   43    40 #>  [2065,]   39   43   42   41   44   46   46   43   43    40 #>  [2066,]   39   43   42   41   44   46   46   43   43    40 #>  [2067,]   38   42   41   42   45   47   46   43   43    40 #>  [2068,]   39   43   42   41   44   46   46   43   44    41 #>  [2069,]   38   42   41   43   45   47   46   43   43    40 #>  [2070,]   38   42   41   42   45   47   46   43   44    41 #>  [2071,]   38   42   41   43   45   47   46   43   43    40 #>  [2072,]   39   43   42   41   44   46   46   43   43    40 #>  [2073,]   38   42   41   42   45   47   46   43   44    41 #>  [2074,]   38   42   41   42   45   47   46   43   43    40 #>  [2075,]   38   42   41   43   45   47   46   43   43    40 #>  [2076,]   39   43   42   41   44   46   46   43   43    40 #>  [2077,]   38   42   41   43   45   47   46   43   43    40 #>  [2078,]   39   43   42   41   44   46   46   43   43    40 #>  [2079,]   38   42   41   42   45   47   46   43   43    40 #>  [2080,]   38   42   41   43   45   47   46   43   43    40 #>  [2081,]   39   43   42   41   44   46   46   43   43    40 #>  [2082,]   38   42   41   42   45   47   46   43   43    40 #>  [2083,]   38   42   41   43   45   47   46   43   43    40 #>  [2084,]   38   42   41   43   45   47   46   43   43    40 #>  [2085,]   38   42   41   43   45   47   46   43   43    40 #>  [2086,]   38   42   41   42   45   47   46   43   43    40 #>  [2087,]   38   42   41   43   45   47   46   43   43    40 #>  [2088,]   38   42   41   42   45   47   46   43   43    40 #>  [2089,]   38   42   41   42   45   47   46   43   43    40 #>  [2090,]   38   42   41   43   45   47   46   43   43    40 #>  [2091,]   38   42   41   42   45   47   46   43   43    40 #>  [2092,]   39   43   42   41   44   46   46   43   43    40 #>  [2093,]   38   42   41   43   45   47   46   43   43    40 #>  [2094,]   39   43   42   41   44   46   46   43   43    40 #>  [2095,]   38   42   41   43   45   47   46   43   43    40 #>  [2096,]   39   43   42   41   44   46   46   43   44    41 #>  [2097,]   39   43   42   41   44   46   46   43   43    40 #>  [2098,]   38   42   41   42   45   47   46   43   43    40 #>  [2099,]   38   42   41   43   45   47   46   43   44    41 #>  [2100,]   38   42   41   43   45   47   46   43   43    40 #>  [2101,]   40   44   43   44   46   48   47   44   46    43 #>  [2102,]   41   45   44   45   47   49   48   44   45    42 #>  [2103,]   40   44   43   44   46   48   47   44   45    42 #>  [2104,]   40   44   43   44   46   48   47   44   46    43 #>  [2105,]   40   44   43   44   46   48   47   44   46    43 #>  [2106,]   40   44   43   44   46   48   47   44   46    43 #>  [2107,]   40   44   43   44   46   48   47   44   45    42 #>  [2108,]   40   44   43   44   46   48   47   44   46    43 #>  [2109,]   41   45   44   45   47   49   48   44   46    43 #>  [2110,]   41   45   44   45   47   49   48   44   46    43 #>  [2111,]   40   44   43   44   46   48   47   44   46    43 #>  [2112,]   41   45   44   45   47   49   48   44   46    43 #>  [2113,]   40   44   43   44   46   48   47   44   45    42 #>  [2114,]   40   44   43   44   46   48   47   44   46    43 #>  [2115,]   40   44   43   44   46   48   47   44   46    43 #>  [2116,]   40   44   43   44   46   48   47   44   45    42 #>  [2117,]   40   44   43   44   46   48   47   44   46    43 #>  [2118,]   40   44   43   44   46   48   47   44   45    42 #>  [2119,]   40   44   43   44   46   48   47   44   45    42 #>  [2120,]   40   44   43   44   46   48   47   44   46    43 #>  [2121,]   41   45   44   45   47   49   48   44   45    42 #>  [2122,]   40   44   43   44   46   48   47   44   45    42 #>  [2123,]   40   44   43   44   46   48   47   44   45    42 #>  [2124,]   40   44   43   44   46   48   47   44   45    42 #>  [2125,]   40   44   43   44   46   48   47   44   46    43 #>  [2126,]   40   44   43   44   46   48   47   44   46    43 #>  [2127,]   40   44   43   44   46   48   47   44   46    43 #>  [2128,]   40   44   43   44   46   48   47   44   46    43 #>  [2129,]   41   45   44   45   47   49   48   44   45    42 #>  [2130,]   40   44   43   44   46   48   47   44   45    42 #>  [2131,]   40   44   43   44   46   48   47   44   45    42 #>  [2132,]   40   44   43   44   46   48   47   44   45    42 #>  [2133,]   41   45   44   45   47   49   48   44   46    43 #>  [2134,]   40   44   43   44   46   48   47   44   45    42 #>  [2135,]   40   44   43   44   46   48   47   44   45    42 #>  [2136,]   40   44   43   44   46   48   47   44   45    42 #>  [2137,]   40   44   43   44   46   48   47   44   45    42 #>  [2138,]   40   44   43   44   46   48   47   44   46    43 #>  [2139,]   40   44   43   44   46   48   47   44   45    42 #>  [2140,]   40   44   43   44   46   48   47   44   45    42 #>  [2141,]   40   44   43   44   46   48   47   44   46    43 #>  [2142,]   40   44   43   44   46   48   47   44   46    43 #>  [2143,]   40   44   43   44   46   48   47   44   46    43 #>  [2144,]   40   44   43   44   46   48   47   44   45    42 #>  [2145,]   40   44   43   44   46   48   47   44   46    43 #>  [2146,]   40   44   43   44   46   48   47   44   46    43 #>  [2147,]   40   44   43   44   46   48   47   44   45    42 #>  [2148,]   40   44   43   44   46   48   47   44   46    43 #>  [2149,]   40   44   43   44   46   48   47   44   45    42 #>  [2150,]   40   44   43   44   46   48   47   44   46    43 #>  [2151,]   40   44   43   44   46   48   47   44   46    43 #>  [2152,]   40   44   43   44   46   48   47   44   46    43 #>  [2153,]   40   44   43   44   46   48   47   44   46    43 #>  [2154,]   40   44   43   44   46   48   47   44   45    42 #>  [2155,]   40   44   43   44   46   48   47   44   46    43 #>  [2156,]   40   44   43   44   46   48   47   44   46    43 #>  [2157,]   40   44   43   44   46   48   47   44   46    43 #>  [2158,]   40   44   43   44   46   48   47   44   46    43 #>  [2159,]   40   44   43   44   46   48   47   44   45    42 #>  [2160,]   41   45   44   45   47   49   48   44   46    43 #>  [2161,]   40   44   43   44   46   48   47   44   46    43 #>  [2162,]   40   44   43   44   46   48   47   44   45    42 #>  [2163,]   41   45   44   45   47   49   48   44   46    43 #>  [2164,]   40   44   43   44   46   48   47   44   46    43 #>  [2165,]   40   44   43   44   46   48   47   44   46    43 #>  [2166,]   40   44   43   44   46   48   47   44   46    43 #>  [2167,]   40   44   43   44   46   48   47   44   46    43 #>  [2168,]   40   44   43   44   46   48   47   44   46    43 #>  [2169,]   40   44   43   44   46   48   47   44   46    43 #>  [2170,]   41   45   44   45   47   49   48   44   45    42 #>  [2171,]   40   44   43   44   46   48   47   44   46    43 #>  [2172,]   40   44   43   44   46   48   47   44   46    43 #>  [2173,]   40   44   43   44   46   48   47   44   46    43 #>  [2174,]   40   44   43   44   46   48   47   44   46    43 #>  [2175,]   40   44   43   44   46   48   47   44   46    43 #>  [2176,]   40   44   43   44   46   48   47   44   46    43 #>  [2177,]   40   44   43   44   46   48   47   44   45    42 #>  [2178,]   40   44   43   44   46   48   47   44   46    43 #>  [2179,]   40   44   43   44   46   48   47   44   45    42 #>  [2180,]   40   44   43   44   46   48   47   44   45    42 #>  [2181,]   41   45   44   45   47   49   48   44   46    43 #>  [2182,]   40   44   43   44   46   48   47   44   46    43 #>  [2183,]   40   44   43   44   46   48   47   44   45    42 #>  [2184,]   40   44   43   44   46   48   47   44   46    43 #>  [2185,]   40   44   43   44   46   48   47   44   45    42 #>  [2186,]   41   45   44   45   47   49   48   44   45    42 #>  [2187,]   40   44   43   44   46   48   47   44   46    43 #>  [2188,]   40   44   43   44   46   48   47   44   46    43 #>  [2189,]   40   44   43   44   46   48   47   44   46    43 #>  [2190,]   40   44   43   44   46   48   47   44   46    43 #>  [2191,]   40   44   43   44   46   48   47   44   46    43 #>  [2192,]   40   44   43   44   46   48   47   44   46    43 #>  [2193,]   40   44   43   44   46   48   47   44   45    42 #>  [2194,]   40   44   43   44   46   48   47   44   46    43 #>  [2195,]   40   44   43   44   46   48   47   44   45    42 #>  [2196,]   40   44   43   44   46   48   47   44   46    43 #>  [2197,]   40   44   43   44   46   48   47   44   46    43 #>  [2198,]   40   44   43   44   46   48   47   44   45    42 #>  [2199,]   40   44   43   44   46   48   47   44   46    43 #>  [2200,]   40   44   43   44   46   48   47   44   45    42 #>  [2201,]   43   47   46   47   49   51   50   46   47    44 #>  [2202,]   42   46   45   46   48   50   49   45   49    46 #>  [2203,]   42   46   45   46   48   50   49   45   49    46 #>  [2204,]   43   47   46   47   49   51   50   47   48    45 #>  [2205,]   42   46   45   46   48   50   49   45   49    46 #>  [2206,]   42   46   45   46   48   50   49   45   49    46 #>  [2207,]   43   47   46   47   49   51   50   46   47    44 #>  [2208,]   43   47   46   47   49   51   50   46   47    44 #>  [2209,]   43   47   46   47   49   51   50   47   48    45 #>  [2210,]   43   47   46   47   49   51   50   47   48    45 #>  [2211,]   42   46   45   46   48   50   49   45   49    46 #>  [2212,]   42   46   45   46   48   50   49   45   49    46 #>  [2213,]   43   47   46   47   49   51   50   46   47    44 #>  [2214,]   42   46   45   46   48   50   49   45   49    46 #>  [2215,]   43   47   46   47   49   51   50   47   48    45 #>  [2216,]   43   47   46   47   49   51   50   46   47    44 #>  [2217,]   43   47   46   47   49   51   50   46   47    44 #>  [2218,]   43   47   46   47   49   51   50   47   48    45 #>  [2219,]   42   46   45   46   48   50   49   45   50    47 #>  [2220,]   42   46   45   46   48   50   49   45   50    47 #>  [2221,]   43   47   46   47   49   51   50   47   48    45 #>  [2222,]   42   46   45   46   48   50   49   45   50    47 #>  [2223,]   43   47   46   47   49   51   50   47   48    45 #>  [2224,]   42   46   45   46   48   50   49   45   49    46 #>  [2225,]   43   47   46   47   49   51   50   46   47    44 #>  [2226,]   42   46   45   46   48   50   49   45   50    47 #>  [2227,]   43   47   46   47   49   51   50   47   48    45 #>  [2228,]   43   47   46   47   49   51   50   46   47    44 #>  [2229,]   42   46   45   46   48   50   49   45   50    47 #>  [2230,]   42   46   45   46   48   50   49   45   50    47 #>  [2231,]   42   46   45   46   48   50   49   45   49    46 #>  [2232,]   42   46   45   46   48   50   49   45   49    46 #>  [2233,]   42   46   45   46   48   50   49   45   49    46 #>  [2234,]   42   46   45   46   48   50   49   45   49    46 #>  [2235,]   42   46   45   46   48   50   49   45   49    46 #>  [2236,]   42   46   45   46   48   50   49   45   50    47 #>  [2237,]   43   47   46   47   49   51   50   46   47    44 #>  [2238,]   43   47   46   47   49   51   50   47   48    45 #>  [2239,]   43   47   46   47   49   51   50   46   47    44 #>  [2240,]   42   46   45   46   48   50   49   45   49    46 #>  [2241,]   42   46   45   46   48   50   49   45   50    47 #>  [2242,]   42   46   45   46   48   50   49   45   49    46 #>  [2243,]   43   47   46   47   49   51   50   46   47    44 #>  [2244,]   43   47   46   47   49   51   50   46   47    44 #>  [2245,]   43   47   46   47   49   51   50   46   47    44 #>  [2246,]   43   47   46   47   49   51   50   46   47    44 #>  [2247,]   43   47   46   47   49   51   50   46   47    44 #>  [2248,]   42   46   45   46   48   50   49   45   49    46 #>  [2249,]   42   46   45   46   48   50   49   45   49    46 #>  [2250,]   42   46   45   46   48   50   49   45   50    47 #>  [2251,]   42   46   45   46   48   50   49   45   50    47 #>  [2252,]   42   46   45   46   48   50   49   45   49    46 #>  [2253,]   43   47   46   47   49   51   50   46   47    44 #>  [2254,]   42   46   45   46   48   50   49   45   49    46 #>  [2255,]   42   46   45   46   48   50   49   45   50    47 #>  [2256,]   43   47   46   47   49   51   50   46   47    44 #>  [2257,]   42   46   45   46   48   50   49   45   49    46 #>  [2258,]   42   46   45   46   48   50   49   45   50    47 #>  [2259,]   42   46   45   46   48   50   49   45   50    47 #>  [2260,]   42   46   45   46   48   50   49   45   50    47 #>  [2261,]   43   47   46   47   49   51   50   47   48    45 #>  [2262,]   42   46   45   46   48   50   49   45   49    46 #>  [2263,]   42   46   45   46   48   50   49   45   49    46 #>  [2264,]   43   47   46   47   49   51   50   47   48    45 #>  [2265,]   42   46   45   46   48   50   49   45   49    46 #>  [2266,]   42   46   45   46   48   50   49   45   50    47 #>  [2267,]   42   46   45   46   48   50   49   45   49    46 #>  [2268,]   42   46   45   46   48   50   49   45   49    46 #>  [2269,]   42   46   45   46   48   50   49   45   50    47 #>  [2270,]   43   47   46   47   49   51   50   46   47    44 #>  [2271,]   43   47   46   47   49   51   50   46   47    44 #>  [2272,]   43   47   46   47   49   51   50   46   47    44 #>  [2273,]   43   47   46   47   49   51   50   47   48    45 #>  [2274,]   43   47   46   47   49   51   50   47   48    45 #>  [2275,]   43   47   46   47   49   51   50   47   48    45 #>  [2276,]   43   47   46   47   49   51   50   46   47    44 #>  [2277,]   43   47   46   47   49   51   50   46   47    44 #>  [2278,]   42   46   45   46   48   50   49   45   49    46 #>  [2279,]   43   47   46   47   49   51   50   46   47    44 #>  [2280,]   42   46   45   46   48   50   49   45   50    47 #>  [2281,]   42   46   45   46   48   50   49   45   50    47 #>  [2282,]   43   47   46   47   49   51   50   47   48    45 #>  [2283,]   42   46   45   46   48   50   49   45   50    47 #>  [2284,]   43   47   46   47   49   51   50   46   47    44 #>  [2285,]   42   46   45   46   48   50   49   45   50    47 #>  [2286,]   43   47   46   47   49   51   50   46   47    44 #>  [2287,]   43   47   46   47   49   51   50   46   47    44 #>  [2288,]   43   47   46   47   49   51   50   46   47    44 #>  [2289,]   42   46   45   46   48   50   49   45   49    46 #>  [2290,]   43   47   46   47   49   51   50   46   47    44 #>  [2291,]   42   46   45   46   48   50   49   45   49    46 #>  [2292,]   42   46   45   46   48   50   49   45   49    46 #>  [2293,]   42   46   45   46   48   50   49   45   49    46 #>  [2294,]   43   47   46   47   49   51   50   46   47    44 #>  [2295,]   43   47   46   47   49   51   50   46   47    44 #>  [2296,]   43   47   46   47   49   51   50   47   48    45 #>  [2297,]   42   46   45   46   48   50   49   45   50    47 #>  [2298,]   42   46   45   46   48   50   49   45   49    46 #>  [2299,]   42   46   45   46   48   50   49   45   49    46 #>  [2300,]   43   47   46   47   49   51   50   46   47    44 #>  [2301,]   45   49   47   48   50   52   51   48   51    48 #>  [2302,]   45   49   47   48   50   52   51   48   51    48 #>  [2303,]   44   48   48   49   51   53   52   49   52    49 #>  [2304,]   45   49   47   48   50   52   51   48   51    48 #>  [2305,]   45   49   47   48   50   52   51   48   51    48 #>  [2306,]   44   48   48   49   51   53   52   49   52    49 #>  [2307,]   45   49   47   48   50   52   51   48   51    48 #>  [2308,]   45   49   47   48   50   52   51   48   51    48 #>  [2309,]   45   49   47   48   50   52   51   48   51    48 #>  [2310,]   45   49   47   48   50   52   51   48   51    48 #>  [2311,]   44   48   49   50   51   53   52   49   52    49 #>  [2312,]   45   49   47   48   50   52   51   48   51    48 #>  [2313,]   45   49   47   48   50   52   51   48   51    48 #>  [2314,]   45   49   47   48   50   52   51   48   51    48 #>  [2315,]   45   49   47   48   50   52   51   48   51    48 #>  [2316,]   44   48   48   49   51   53   52   49   52    49 #>  [2317,]   45   49   47   48   50   52   51   48   51    48 #>  [2318,]   45   49   47   48   50   52   51   48   51    48 #>  [2319,]   44   48   49   50   51   53   52   49   52    49 #>  [2320,]   45   49   47   48   50   52   51   48   51    48 #>  [2321,]   45   49   47   48   50   52   51   48   51    48 #>  [2322,]   45   49   47   48   50   52   51   48   51    48 #>  [2323,]   45   49   47   48   50   52   51   48   51    48 #>  [2324,]   45   49   47   48   50   52   51   48   51    48 #>  [2325,]   45   49   47   48   50   52   51   48   51    48 #>  [2326,]   45   49   47   48   50   52   51   48   51    48 #>  [2327,]   45   49   47   48   50   52   51   48   51    48 #>  [2328,]   45   49   47   48   50   52   51   48   51    48 #>  [2329,]   45   49   47   48   50   52   51   48   51    48 #>  [2330,]   45   49   47   48   50   52   51   48   51    48 #>  [2331,]   45   49   47   48   50   52   51   48   51    48 #>  [2332,]   45   49   47   48   50   52   51   48   51    48 #>  [2333,]   45   49   47   48   50   52   51   48   51    48 #>  [2334,]   44   48   48   49   51   53   52   49   52    49 #>  [2335,]   44   48   48   49   51   53   52   49   52    49 #>  [2336,]   45   49   47   48   50   52   51   48   51    48 #>  [2337,]   44   48   48   49   51   53   52   49   52    49 #>  [2338,]   44   48   49   50   51   53   52   49   52    49 #>  [2339,]   45   49   47   48   50   52   51   48   51    48 #>  [2340,]   45   49   47   48   50   52   51   48   51    48 #>  [2341,]   45   49   47   48   50   52   51   48   51    48 #>  [2342,]   45   49   47   48   50   52   51   48   51    48 #>  [2343,]   45   49   47   48   50   52   51   48   51    48 #>  [2344,]   45   49   47   48   50   52   51   48   51    48 #>  [2345,]   44   48   48   49   51   53   52   49   52    49 #>  [2346,]   45   49   47   48   50   52   51   48   51    48 #>  [2347,]   45   49   47   48   50   52   51   48   51    48 #>  [2348,]   45   49   47   48   50   52   51   48   51    48 #>  [2349,]   44   48   48   49   51   53   52   49   52    49 #>  [2350,]   45   49   47   48   50   52   51   48   51    48 #>  [2351,]   45   49   47   48   50   52   51   48   51    48 #>  [2352,]   44   48   48   49   51   53   52   49   52    49 #>  [2353,]   45   49   47   48   50   52   51   48   51    48 #>  [2354,]   45   49   47   48   50   52   51   48   51    48 #>  [2355,]   45   49   47   48   50   52   51   48   51    48 #>  [2356,]   45   49   47   48   50   52   51   48   51    48 #>  [2357,]   45   49   47   48   50   52   51   48   51    48 #>  [2358,]   45   49   47   48   50   52   51   48   51    48 #>  [2359,]   45   49   47   48   50   52   51   48   51    48 #>  [2360,]   45   49   47   48   50   52   51   48   51    48 #>  [2361,]   45   49   47   48   50   52   51   48   51    48 #>  [2362,]   45   49   47   48   50   52   51   48   51    48 #>  [2363,]   45   49   47   48   50   52   51   48   51    48 #>  [2364,]   44   48   48   49   51   53   52   49   52    49 #>  [2365,]   45   49   47   48   50   52   51   48   51    48 #>  [2366,]   45   49   47   48   50   52   51   48   51    48 #>  [2367,]   45   49   47   48   50   52   51   48   51    48 #>  [2368,]   44   48   49   50   51   53   52   49   52    49 #>  [2369,]   45   49   47   48   50   52   51   48   51    48 #>  [2370,]   45   49   47   48   50   52   51   48   51    48 #>  [2371,]   45   49   47   48   50   52   51   48   51    48 #>  [2372,]   44   48   48   49   51   53   52   49   52    49 #>  [2373,]   45   49   47   48   50   52   51   48   51    48 #>  [2374,]   45   49   47   48   50   52   51   48   51    48 #>  [2375,]   45   49   47   48   50   52   51   48   51    48 #>  [2376,]   45   49   47   48   50   52   51   48   51    48 #>  [2377,]   45   49   47   48   50   52   51   48   51    48 #>  [2378,]   45   49   47   48   50   52   51   48   51    48 #>  [2379,]   45   49   47   48   50   52   51   48   51    48 #>  [2380,]   45   49   47   48   50   52   51   48   51    48 #>  [2381,]   45   49   47   48   50   52   51   48   51    48 #>  [2382,]   45   49   47   48   50   52   51   48   51    48 #>  [2383,]   45   49   47   48   50   52   51   48   51    48 #>  [2384,]   45   49   47   48   50   52   51   48   51    48 #>  [2385,]   45   49   47   48   50   52   51   48   51    48 #>  [2386,]   45   49   47   48   50   52   51   48   51    48 #>  [2387,]   45   49   47   48   50   52   51   48   51    48 #>  [2388,]   45   49   47   48   50   52   51   48   51    48 #>  [2389,]   45   49   47   48   50   52   51   48   51    48 #>  [2390,]   45   49   47   48   50   52   51   48   51    48 #>  [2391,]   45   49   47   48   50   52   51   48   51    48 #>  [2392,]   45   49   47   48   50   52   51   48   51    48 #>  [2393,]   45   49   47   48   50   52   51   48   51    48 #>  [2394,]   45   49   47   48   50   52   51   48   51    48 #>  [2395,]   45   49   47   48   50   52   51   48   51    48 #>  [2396,]   44   48   49   50   51   53   52   49   52    49 #>  [2397,]   44   48   49   50   51   53   52   49   52    49 #>  [2398,]   45   49   47   48   50   52   51   48   51    48 #>  [2399,]   45   49   47   48   50   52   51   48   51    48 #>  [2400,]   45   49   47   48   50   52   51   48   51    48 #>  [2401,]   46   50   50   51   52   54   53   50   53    50 #>  [2402,]   47   51   51   52   53   55   54   51   54    51 #>  [2403,]   47   51   51   52   53   55   54   51   54    51 #>  [2404,]   46   50   50   51   52   54   53   50   53    50 #>  [2405,]   47   51   51   52   53   55   54   51   54    51 #>  [2406,]   47   51   51   52   53   55   54   51   54    51 #>  [2407,]   47   51   51   52   53   55   54   51   54    51 #>  [2408,]   46   50   50   51   52   54   53   50   53    50 #>  [2409,]   46   50   50   51   52   54   53   50   53    50 #>  [2410,]   47   51   51   52   53   55   54   51   54    51 #>  [2411,]   46   50   50   51   52   54   53   50   53    50 #>  [2412,]   47   51   51   52   53   55   54   51   54    51 #>  [2413,]   46   50   50   51   52   54   53   50   53    50 #>  [2414,]   46   50   50   51   52   54   53   50   53    50 #>  [2415,]   46   50   50   51   52   54   53   50   53    50 #>  [2416,]   46   50   50   51   52   54   53   50   53    50 #>  [2417,]   46   50   50   51   52   54   53   50   53    50 #>  [2418,]   47   51   52   53   54   55   54   51   54    51 #>  [2419,]   47   51   51   52   53   55   54   51   54    51 #>  [2420,]   47   51   52   53   54   55   54   51   54    51 #>  [2421,]   46   50   50   51   52   54   53   50   53    50 #>  [2422,]   46   50   50   51   52   54   53   50   53    50 #>  [2423,]   47   51   51   52   53   55   54   51   54    51 #>  [2424,]   46   50   50   51   52   54   53   50   53    50 #>  [2425,]   47   51   51   52   53   55   54   51   54    51 #>  [2426,]   47   51   51   52   53   55   54   51   54    51 #>  [2427,]   46   50   50   51   52   54   53   50   53    50 #>  [2428,]   47   51   52   53   54   55   54   51   54    51 #>  [2429,]   47   51   52   53   54   55   54   51   54    51 #>  [2430,]   46   50   50   51   52   54   53   50   53    50 #>  [2431,]   47   51   51   52   53   55   54   51   54    51 #>  [2432,]   47   51   51   52   53   55   54   51   54    51 #>  [2433,]   47   51   52   53   54   55   54   51   54    51 #>  [2434,]   47   51   51   52   53   55   54   51   54    51 #>  [2435,]   46   50   50   51   52   54   53   50   53    50 #>  [2436,]   47   51   52   53   54   55   54   51   54    51 #>  [2437,]   46   50   50   51   52   54   53   50   53    50 #>  [2438,]   46   50   50   51   52   54   53   50   53    50 #>  [2439,]   47   51   52   53   54   55   54   51   54    51 #>  [2440,]   47   51   51   52   53   55   54   51   54    51 #>  [2441,]   46   50   50   51   52   54   53   50   53    50 #>  [2442,]   47   51   52   53   54   55   54   51   54    51 #>  [2443,]   46   50   50   51   52   54   53   50   53    50 #>  [2444,]   46   50   50   51   52   54   53   50   53    50 #>  [2445,]   46   50   50   51   52   54   53   50   53    50 #>  [2446,]   46   50   50   51   52   54   53   50   53    50 #>  [2447,]   47   51   51   52   53   55   54   51   54    51 #>  [2448,]   47   51   51   52   53   55   54   51   54    51 #>  [2449,]   46   50   50   51   52   54   53   50   53    50 #>  [2450,]   47   51   51   52   53   55   54   51   54    51 #>  [2451,]   46   50   50   51   52   54   53   50   53    50 #>  [2452,]   46   50   50   51   52   54   53   50   53    50 #>  [2453,]   47   51   52   53   54   55   54   51   54    51 #>  [2454,]   46   50   50   51   52   54   53   50   53    50 #>  [2455,]   46   50   50   51   52   54   53   50   53    50 #>  [2456,]   47   51   52   53   54   55   54   51   54    51 #>  [2457,]   47   51   51   52   53   55   54   51   54    51 #>  [2458,]   46   50   50   51   52   54   53   50   53    50 #>  [2459,]   46   50   50   51   52   54   53   50   53    50 #>  [2460,]   47   51   51   52   53   55   54   51   54    51 #>  [2461,]   47   51   51   52   53   55   54   51   54    51 #>  [2462,]   46   50   50   51   52   54   53   50   53    50 #>  [2463,]   47   51   51   52   53   55   54   51   54    51 #>  [2464,]   47   51   51   52   53   55   54   51   54    51 #>  [2465,]   47   51   52   53   54   55   54   51   54    51 #>  [2466,]   46   50   50   51   52   54   53   50   53    50 #>  [2467,]   46   50   50   51   52   54   53   50   53    50 #>  [2468,]   46   50   50   51   52   54   53   50   53    50 #>  [2469,]   46   50   50   51   52   54   53   50   53    50 #>  [2470,]   47   51   52   53   54   55   54   51   54    51 #>  [2471,]   47   51   51   52   53   55   54   51   54    51 #>  [2472,]   47   51   51   52   53   55   54   51   54    51 #>  [2473,]   47   51   51   52   53   55   54   51   54    51 #>  [2474,]   46   50   50   51   52   54   53   50   53    50 #>  [2475,]   47   51   51   52   53   55   54   51   54    51 #>  [2476,]   47   51   51   52   53   55   54   51   54    51 #>  [2477,]   47   51   52   53   54   55   54   51   54    51 #>  [2478,]   47   51   51   52   53   55   54   51   54    51 #>  [2479,]   46   50   50   51   52   54   53   50   53    50 #>  [2480,]   46   50   50   51   52   54   53   50   53    50 #>  [2481,]   46   50   50   51   52   54   53   50   53    50 #>  [2482,]   46   50   50   51   52   54   53   50   53    50 #>  [2483,]   46   50   50   51   52   54   53   50   53    50 #>  [2484,]   47   51   52   53   54   55   54   51   54    51 #>  [2485,]   46   50   50   51   52   54   53   50   53    50 #>  [2486,]   47   51   51   52   53   55   54   51   54    51 #>  [2487,]   46   50   50   51   52   54   53   50   53    50 #>  [2488,]   46   50   50   51   52   54   53   50   53    50 #>  [2489,]   46   50   50   51   52   54   53   50   53    50 #>  [2490,]   46   50   50   51   52   54   53   50   53    50 #>  [2491,]   46   50   50   51   52   54   53   50   53    50 #>  [2492,]   46   50   50   51   52   54   53   50   53    50 #>  [2493,]   47   51   52   53   54   55   54   51   54    51 #>  [2494,]   47   51   52   53   54   55   54   51   54    51 #>  [2495,]   46   50   50   51   52   54   53   50   53    50 #>  [2496,]   46   50   50   51   52   54   53   50   53    50 #>  [2497,]   47   51   51   52   53   55   54   51   54    51 #>  [2498,]   47   51   51   52   53   55   54   51   54    51 #>  [2499,]   46   50   50   51   52   54   53   50   53    50 #>  [2500,]   47   51   51   52   53   55   54   51   54    51 #>  [2501,]   48   52   53   54   55   56   55   52   56    52 #>  [2502,]   49   53   55   56   57   58   56   52   56    52 #>  [2503,]   48   52   53   54   55   56   55   52   56    52 #>  [2504,]   48   52   53   54   55   56   55   52   55    52 #>  [2505,]   49   53   54   55   56   57   56   52   56    52 #>  [2506,]   48   52   53   54   55   56   55   52   56    52 #>  [2507,]   49   53   54   55   56   57   56   52   56    52 #>  [2508,]   48   52   53   54   55   56   55   52   55    52 #>  [2509,]   49   53   55   56   57   58   56   52   55    52 #>  [2510,]   49   53   55   56   57   58   56   52   55    52 #>  [2511,]   48   52   53   54   55   56   55   52   56    52 #>  [2512,]   49   53   55   56   57   58   56   52   56    52 #>  [2513,]   49   53   54   55   56   57   56   52   56    52 #>  [2514,]   48   52   53   54   55   56   55   52   56    52 #>  [2515,]   48   52   53   54   55   56   55   52   56    52 #>  [2516,]   48   52   53   54   55   56   55   52   56    52 #>  [2517,]   49   53   54   55   56   57   56   52   56    52 #>  [2518,]   49   53   55   56   57   58   56   52   56    52 #>  [2519,]   48   52   53   54   55   56   55   52   56    52 #>  [2520,]   49   53   54   55   56   57   56   52   56    52 #>  [2521,]   49   53   55   56   57   58   56   52   56    52 #>  [2522,]   49   53   54   55   56   57   56   52   56    52 #>  [2523,]   49   53   55   56   57   58   56   52   56    52 #>  [2524,]   49   53   54   55   56   57   56   52   56    52 #>  [2525,]   49   53   54   55   56   57   56   52   56    52 #>  [2526,]   48   52   53   54   55   56   55   52   56    52 #>  [2527,]   49   53   55   56   57   58   56   52   56    52 #>  [2528,]   48   52   53   54   55   56   55   52   56    52 #>  [2529,]   49   53   54   55   56   57   56   52   56    52 #>  [2530,]   49   53   55   56   57   58   56   52   56    52 #>  [2531,]   49   53   55   56   57   58   56   52   56    52 #>  [2532,]   49   53   55   56   57   58   56   52   56    52 #>  [2533,]   49   53   55   56   57   58   56   52   56    52 #>  [2534,]   48   52   53   54   55   56   55   52   56    52 #>  [2535,]   48   52   53   54   55   56   55   52   56    52 #>  [2536,]   49   53   55   56   57   58   56   52   56    52 #>  [2537,]   48   52   53   54   55   56   55   52   56    52 #>  [2538,]   48   52   53   54   55   56   55   52   56    52 #>  [2539,]   49   53   54   55   56   57   56   52   56    52 #>  [2540,]   49   53   54   55   56   57   56   52   56    52 #>  [2541,]   49   53   55   56   57   58   56   52   56    52 #>  [2542,]   48   52   53   54   55   56   55   52   56    52 #>  [2543,]   49   53   54   55   56   57   56   52   55    52 #>  [2544,]   49   53   54   55   56   57   56   52   56    52 #>  [2545,]   48   52   53   54   55   56   55   52   56    52 #>  [2546,]   48   52   53   54   55   56   55   52   56    52 #>  [2547,]   49   53   54   55   56   57   56   52   56    52 #>  [2548,]   49   53   55   56   57   58   56   52   56    52 #>  [2549,]   48   52   53   54   55   56   55   52   56    52 #>  [2550,]   49   53   54   55   56   57   56   52   56    52 #>  [2551,]   49   53   54   55   56   57   56   52   55    52 #>  [2552,]   48   52   53   54   55   56   55   52   56    52 #>  [2553,]   49   53   54   55   56   57   56   52   56    52 #>  [2554,]   49   53   54   55   56   57   56   52   56    52 #>  [2555,]   48   52   53   54   55   56   55   52   56    52 #>  [2556,]   48   52   53   54   55   56   55   52   56    52 #>  [2557,]   48   52   53   54   55   56   55   52   56    52 #>  [2558,]   49   53   55   56   57   58   56   52   56    52 #>  [2559,]   48   52   53   54   55   56   55   52   56    52 #>  [2560,]   49   53   55   56   57   58   56   52   55    52 #>  [2561,]   49   53   55   56   57   58   56   52   56    52 #>  [2562,]   48   52   53   54   55   56   55   52   56    52 #>  [2563,]   49   53   54   55   56   57   56   52   56    52 #>  [2564,]   48   52   53   54   55   56   55   52   55    52 #>  [2565,]   48   52   53   54   55   56   55   52   56    52 #>  [2566,]   49   53   54   55   56   57   56   52   56    52 #>  [2567,]   48   52   53   54   55   56   55   52   55    52 #>  [2568,]   48   52   53   54   55   56   55   52   56    52 #>  [2569,]   48   52   53   54   55   56   55   52   56    52 #>  [2570,]   49   53   54   55   56   57   56   52   56    52 #>  [2571,]   49   53   54   55   56   57   56   52   56    52 #>  [2572,]   48   52   53   54   55   56   55   52   56    52 #>  [2573,]   48   52   53   54   55   56   55   52   56    52 #>  [2574,]   49   53   55   56   57   58   56   52   56    52 #>  [2575,]   49   53   55   56   57   58   56   52   56    52 #>  [2576,]   49   53   54   55   56   57   56   52   56    52 #>  [2577,]   48   52   53   54   55   56   55   52   56    52 #>  [2578,]   49   53   54   55   56   57   56   52   56    52 #>  [2579,]   48   52   53   54   55   56   55   52   56    52 #>  [2580,]   49   53   55   56   57   58   56   52   56    52 #>  [2581,]   49   53   55   56   57   58   56   52   56    52 #>  [2582,]   48   52   53   54   55   56   55   52   56    52 #>  [2583,]   49   53   54   55   56   57   56   52   56    52 #>  [2584,]   49   53   54   55   56   57   56   52   56    52 #>  [2585,]   48   52   53   54   55   56   55   52   55    52 #>  [2586,]   49   53   54   55   56   57   56   52   56    52 #>  [2587,]   49   53   55   56   57   58   56   52   56    52 #>  [2588,]   49   53   55   56   57   58   56   52   56    52 #>  [2589,]   48   52   53   54   55   56   55   52   56    52 #>  [2590,]   49   53   54   55   56   57   56   52   56    52 #>  [2591,]   48   52   53   54   55   56   55   52   55    52 #>  [2592,]   49   53   55   56   57   58   56   52   56    52 #>  [2593,]   49   53   55   56   57   58   56   52   56    52 #>  [2594,]   48   52   53   54   55   56   55   52   56    52 #>  [2595,]   49   53   55   56   57   58   56   52   55    52 #>  [2596,]   48   52   53   54   55   56   55   52   56    52 #>  [2597,]   48   52   53   54   55   56   55   52   56    52 #>  [2598,]   48   52   53   54   55   56   55   52   56    52 #>  [2599,]   49   53   55   56   57   58   56   52   56    52 #>  [2600,]   48   52   53   54   55   56   55   52   56    52 #>  [2601,]   50   54   56   57   58   60   58   56   60    56 #>  [2602,]   51   55   57   58   59   59   57   53   57    53 #>  [2603,]   51   55   57   58   59   59   57   53   57    53 #>  [2604,]   50   54   56   57   58   60   58   56   60    56 #>  [2605,]   50   54   56   57   58   60   58   56   60    56 #>  [2606,]   51   55   57   58   59   59   57   53   57    53 #>  [2607,]   51   55   57   58   59   59   57   53   57    53 #>  [2608,]   50   54   56   57   58   60   58   56   60    56 #>  [2609,]   50   54   56   57   58   61   59   54   58    54 #>  [2610,]   51   55   57   58   59   59   57   53   57    53 #>  [2611,]   50   54   56   57   58   60   58   56   60    56 #>  [2612,]   51   55   57   58   59   59   57   53   57    53 #>  [2613,]   50   54   56   57   58   60   58   56   60    56 #>  [2614,]   50   54   56   57   58   60   58   56   60    56 #>  [2615,]   50   54   56   57   58   60   58   56   60    56 #>  [2616,]   50   54   56   57   58   60   58   56   60    56 #>  [2617,]   50   54   56   57   58   61   59   54   58    54 #>  [2618,]   51   55   57   58   59   59   57   53   57    53 #>  [2619,]   51   55   57   58   59   59   57   53   57    53 #>  [2620,]   51   55   57   58   59   59   57   53   57    53 #>  [2621,]   50   54   56   57   58   61   59   54   58    54 #>  [2622,]   50   54   56   57   58   60   58   56   60    56 #>  [2623,]   51   55   57   58   59   59   57   53   57    53 #>  [2624,]   50   54   56   57   58   60   58   56   60    56 #>  [2625,]   51   55   57   58   59   59   57   53   57    53 #>  [2626,]   50   54   56   57   58   60   58   56   60    56 #>  [2627,]   50   54   56   57   58   60   58   56   60    56 #>  [2628,]   51   55   57   58   59   59   57   53   57    53 #>  [2629,]   51   55   57   58   59   59   57   53   57    53 #>  [2630,]   50   54   56   57   58   60   58   56   60    56 #>  [2631,]   51   55   57   58   59   59   57   53   57    53 #>  [2632,]   51   55   57   58   59   59   57   53   57    53 #>  [2633,]   51   55   57   58   59   59   57   53   57    53 #>  [2634,]   51   55   57   58   59   59   57   53   57    53 #>  [2635,]   50   54   56   57   58   60   58   55   59    55 #>  [2636,]   50   54   56   57   58   60   58   56   60    56 #>  [2637,]   50   54   56   57   58   60   58   56   60    56 #>  [2638,]   50   54   56   57   58   60   58   56   60    56 #>  [2639,]   51   55   57   58   59   59   57   53   57    53 #>  [2640,]   51   55   57   58   59   59   57   53   57    53 #>  [2641,]   50   54   56   57   58   60   58   56   60    56 #>  [2642,]   51   55   57   58   59   59   57   53   57    53 #>  [2643,]   50   54   56   57   58   60   58   56   60    56 #>  [2644,]   50   54   56   57   58   60   58   55   59    55 #>  [2645,]   50   54   56   57   58   60   58   56   60    56 #>  [2646,]   50   54   56   57   58   60   58   56   60    56 #>  [2647,]   51   55   57   58   59   59   57   53   57    53 #>  [2648,]   51   55   57   58   59   59   57   53   57    53 #>  [2649,]   50   54   56   57   58   60   58   56   60    56 #>  [2650,]   51   55   57   58   59   59   57   53   57    53 #>  [2651,]   50   54   56   57   58   60   58   56   60    56 #>  [2652,]   50   54   56   57   58   60   58   56   60    56 #>  [2653,]   50   54   56   57   58   60   58   55   59    55 #>  [2654,]   50   54   56   57   58   60   58   56   60    56 #>  [2655,]   50   54   56   57   58   60   58   56   60    56 #>  [2656,]   51   55   57   58   59   59   57   53   57    53 #>  [2657,]   51   55   57   58   59   59   57   53   57    53 #>  [2658,]   50   54   56   57   58   60   58   56   60    56 #>  [2659,]   50   54   56   57   58   60   58   56   60    56 #>  [2660,]   51   55   57   58   59   59   57   53   57    53 #>  [2661,]   51   55   57   58   59   59   57   53   57    53 #>  [2662,]   50   54   56   57   58   60   58   56   60    56 #>  [2663,]   50   54   56   57   58   61   59   54   58    54 #>  [2664,]   51   55   57   58   59   59   57   53   57    53 #>  [2665,]   51   55   57   58   59   59   57   53   57    53 #>  [2666,]   50   54   56   57   58   60   58   56   60    56 #>  [2667,]   50   54   56   57   58   60   58   56   60    56 #>  [2668,]   50   54   56   57   58   60   58   56   60    56 #>  [2669,]   50   54   56   57   58   60   58   56   60    56 #>  [2670,]   51   55   57   58   59   59   57   53   57    53 #>  [2671,]   51   55   57   58   59   59   57   53   57    53 #>  [2672,]   50   54   56   57   58   60   58   56   60    56 #>  [2673,]   51   55   57   58   59   59   57   53   57    53 #>  [2674,]   50   54   56   57   58   60   58   55   59    55 #>  [2675,]   51   55   57   58   59   59   57   53   57    53 #>  [2676,]   50   54   56   57   58   60   58   56   60    56 #>  [2677,]   51   55   57   58   59   59   57   53   57    53 #>  [2678,]   51   55   57   58   59   59   57   53   57    53 #>  [2679,]   50   54   56   57   58   60   58   56   60    56 #>  [2680,]   50   54   56   57   58   61   59   54   58    54 #>  [2681,]   50   54   56   57   58   61   59   54   58    54 #>  [2682,]   50   54   56   57   58   60   58   56   60    56 #>  [2683,]   50   54   56   57   58   60   58   56   60    56 #>  [2684,]   51   55   57   58   59   59   57   53   57    53 #>  [2685,]   50   54   56   57   58   60   58   55   59    55 #>  [2686,]   51   55   57   58   59   59   57   53   57    53 #>  [2687,]   50   54   56   57   58   60   58   56   60    56 #>  [2688,]   50   54   56   57   58   60   58   56   60    56 #>  [2689,]   50   54   56   57   58   60   58   55   59    55 #>  [2690,]   50   54   56   57   58   60   58   56   60    56 #>  [2691,]   50   54   56   57   58   60   58   56   60    56 #>  [2692,]   50   54   56   57   58   60   58   56   60    56 #>  [2693,]   51   55   57   58   59   59   57   53   57    53 #>  [2694,]   51   55   57   58   59   59   57   53   57    53 #>  [2695,]   50   54   56   57   58   60   58   56   60    56 #>  [2696,]   50   54   56   57   58   60   58   56   60    56 #>  [2697,]   51   55   57   58   59   59   57   53   57    53 #>  [2698,]   51   55   57   58   59   59   57   53   57    53 #>  [2699,]   50   54   56   57   58   60   58   55   59    55 #>  [2700,]   51   55   57   58   59   59   57   53   57    53 #>  [2701,]   52   56   58   59   60   62   60   57   61    57 #>  [2702,]   52   56   58   59   60   62   60   57   61    57 #>  [2703,]   52   56   58   59   60   62   60   57   61    57 #>  [2704,]   53   57   59   59   60   62   60   57   61    57 #>  [2705,]   52   56   58   59   60   62   60   57   61    57 #>  [2706,]   52   56   58   59   60   62   60   57   61    57 #>  [2707,]   52   56   58   59   60   62   60   57   61    57 #>  [2708,]   52   56   58   59   60   63   61   58   62    58 #>  [2709,]   52   56   58   59   60   62   60   57   61    57 #>  [2710,]   52   56   58   59   60   62   60   57   61    57 #>  [2711,]   52   56   58   59   60   62   60   57   61    57 #>  [2712,]   53   57   59   59   60   62   60   57   61    57 #>  [2713,]   52   56   58   59   60   63   61   58   62    58 #>  [2714,]   53   57   59   59   60   62   60   57   61    57 #>  [2715,]   53   57   59   59   60   63   61   58   62    58 #>  [2716,]   52   56   58   59   60   62   60   57   61    57 #>  [2717,]   52   56   58   59   60   62   60   57   61    57 #>  [2718,]   52   56   58   59   60   62   60   57   61    57 #>  [2719,]   53   57   59   59   60   63   61   58   62    58 #>  [2720,]   52   56   58   59   60   63   61   58   62    58 #>  [2721,]   52   56   58   59   60   62   60   57   61    57 #>  [2722,]   52   56   58   59   60   63   61   58   62    58 #>  [2723,]   52   56   58   59   60   62   60   57   61    57 #>  [2724,]   52   56   58   59   60   62   60   57   61    57 #>  [2725,]   52   56   58   59   60   62   60   57   61    57 #>  [2726,]   52   56   58   59   60   62   60   57   61    57 #>  [2727,]   53   57   59   59   60   63   61   58   62    58 #>  [2728,]   52   56   58   59   60   62   60   57   61    57 #>  [2729,]   52   56   58   59   60   63   61   58   62    58 #>  [2730,]   52   56   58   59   60   62   60   57   61    57 #>  [2731,]   52   56   58   59   60   62   60   57   61    57 #>  [2732,]   52   56   58   59   60   62   60   57   61    57 #>  [2733,]   52   56   58   59   60   62   60   57   61    57 #>  [2734,]   52   56   58   59   60   62   60   57   61    57 #>  [2735,]   52   56   58   59   60   62   60   57   61    57 #>  [2736,]   52   56   58   59   60   63   61   58   62    58 #>  [2737,]   52   56   58   59   60   63   61   58   62    58 #>  [2738,]   53   57   59   59   60   63   61   58   62    58 #>  [2739,]   52   56   58   59   60   62   60   57   61    57 #>  [2740,]   52   56   58   59   60   62   60   57   61    57 #>  [2741,]   53   57   59   59   60   63   61   58   62    58 #>  [2742,]   53   57   59   59   60   62   60   57   61    57 #>  [2743,]   52   56   58   59   60   63   61   58   62    58 #>  [2744,]   52   56   58   59   60   62   60   57   61    57 #>  [2745,]   52   56   58   59   60   62   60   57   61    57 #>  [2746,]   52   56   58   59   60   63   61   58   62    58 #>  [2747,]   52   56   58   59   60   62   60   57   61    57 #>  [2748,]   53   57   59   59   60   62   60   57   61    57 #>  [2749,]   52   56   58   59   60   62   60   57   61    57 #>  [2750,]   52   56   58   59   60   63   61   58   62    58 #>  [2751,]   52   56   58   59   60   63   61   58   62    58 #>  [2752,]   52   56   58   59   60   62   60   57   61    57 #>  [2753,]   52   56   58   59   60   63   61   58   62    58 #>  [2754,]   52   56   58   59   60   62   60   57   61    57 #>  [2755,]   52   56   58   59   60   63   61   58   62    58 #>  [2756,]   52   56   58   59   60   62   60   57   61    57 #>  [2757,]   52   56   58   59   60   62   60   57   61    57 #>  [2758,]   52   56   58   59   60   63   61   58   62    58 #>  [2759,]   52   56   58   59   60   63   61   58   62    58 #>  [2760,]   52   56   58   59   60   63   61   58   62    58 #>  [2761,]   53   57   59   59   60   62   60   57   61    57 #>  [2762,]   52   56   58   59   60   62   60   57   61    57 #>  [2763,]   52   56   58   59   60   62   60   57   61    57 #>  [2764,]   52   56   58   59   60   63   61   58   62    58 #>  [2765,]   52   56   58   59   60   62   60   57   61    57 #>  [2766,]   52   56   58   59   60   63   61   58   62    58 #>  [2767,]   52   56   58   59   60   62   60   57   61    57 #>  [2768,]   52   56   58   59   60   62   60   57   61    57 #>  [2769,]   53   57   59   59   60   63   61   58   62    58 #>  [2770,]   52   56   58   59   60   62   60   57   61    57 #>  [2771,]   52   56   58   59   60   63   61   58   62    58 #>  [2772,]   52   56   58   59   60   62   60   57   61    57 #>  [2773,]   52   56   58   59   60   62   60   57   61    57 #>  [2774,]   53   57   59   59   60   62   60   57   61    57 #>  [2775,]   53   57   59   59   60   62   60   57   61    57 #>  [2776,]   52   56   58   59   60   62   60   57   61    57 #>  [2777,]   52   56   58   59   60   63   61   58   62    58 #>  [2778,]   52   56   58   59   60   62   60   57   61    57 #>  [2779,]   52   56   58   59   60   62   60   57   61    57 #>  [2780,]   52   56   58   59   60   63   61   58   62    58 #>  [2781,]   52   56   58   59   60   63   61   58   62    58 #>  [2782,]   53   57   59   59   60   62   60   57   61    57 #>  [2783,]   52   56   58   59   60   63   61   58   62    58 #>  [2784,]   52   56   58   59   60   63   61   58   62    58 #>  [2785,]   52   56   58   59   60   63   61   58   62    58 #>  [2786,]   52   56   58   59   60   62   60   57   61    57 #>  [2787,]   52   56   58   59   60   63   61   58   62    58 #>  [2788,]   52   56   58   59   60   62   60   57   61    57 #>  [2789,]   52   56   58   59   60   62   60   57   61    57 #>  [2790,]   52   56   58   59   60   63   61   58   62    58 #>  [2791,]   52   56   58   59   60   62   60   57   61    57 #>  [2792,]   53   57   59   59   60   62   60   57   61    57 #>  [2793,]   53   57   59   59   60   62   60   57   61    57 #>  [2794,]   52   56   58   59   60   62   60   57   61    57 #>  [2795,]   52   56   58   59   60   63   61   58   62    58 #>  [2796,]   53   57   59   59   60   63   61   58   62    58 #>  [2797,]   53   57   59   59   60   63   61   58   62    58 #>  [2798,]   52   56   58   59   60   62   60   57   61    57 #>  [2799,]   52   56   58   59   60   62   60   57   61    57 #>  [2800,]   52   56   58   59   60   63   61   58   62    58 #>  [2801,]   54   58   62   62   63   66   64   61   65    61 #>  [2802,]   54   58   62   62   63   66   64   61   65    61 #>  [2803,]   54   58   61   61   62   65   63   60   64    60 #>  [2804,]   54   59   60   60   61   64   62   59   63    59 #>  [2805,]   54   58   62   62   63   66   64   61   65    61 #>  [2806,]   54   58   62   62   63   66   64   61   65    61 #>  [2807,]   54   59   60   60   61   64   62   59   63    59 #>  [2808,]   54   58   61   61   62   65   63   60   64    60 #>  [2809,]   54   59   60   60   61   64   62   59   63    59 #>  [2810,]   54   59   60   60   61   64   62   59   63    59 #>  [2811,]   54   58   62   62   63   66   64   61   65    61 #>  [2812,]   54   58   62   62   63   66   64   61   65    61 #>  [2813,]   54   58   61   61   62   65   63   60   64    60 #>  [2814,]   54   59   60   60   61   64   62   59   63    59 #>  [2815,]   54   58   62   62   63   66   64   61   65    61 #>  [2816,]   54   59   60   60   61   64   62   59   63    59 #>  [2817,]   54   58   61   61   62   65   63   60   64    60 #>  [2818,]   54   58   62   62   63   66   64   61   65    61 #>  [2819,]   54   58   62   62   63   66   64   61   65    61 #>  [2820,]   54   59   60   60   61   64   62   59   63    59 #>  [2821,]   54   58   62   62   63   66   64   61   65    61 #>  [2822,]   54   58   61   61   62   65   63   60   64    60 #>  [2823,]   54   58   62   62   63   66   64   61   65    61 #>  [2824,]   54   59   60   60   61   64   62   59   63    59 #>  [2825,]   54   59   60   60   61   64   62   59   63    59 #>  [2826,]   54   58   62   62   63   66   64   61   65    61 #>  [2827,]   54   58   62   62   63   66   64   61   65    61 #>  [2828,]   54   59   60   60   61   64   62   59   63    59 #>  [2829,]   54   58   62   62   63   66   64   61   65    61 #>  [2830,]   54   58   62   62   63   66   64   61   65    61 #>  [2831,]   54   58   62   62   63   66   64   61   65    61 #>  [2832,]   54   58   62   62   63   66   64   61   65    61 #>  [2833,]   54   58   62   62   63   66   64   61   65    61 #>  [2834,]   54   58   62   62   63   66   64   61   65    61 #>  [2835,]   54   58   62   62   63   66   64   61   65    61 #>  [2836,]   54   59   60   60   61   64   62   59   63    59 #>  [2837,]   54   58   62   62   63   66   64   61   65    61 #>  [2838,]   54   58   62   62   63   66   64   61   65    61 #>  [2839,]   54   59   60   60   61   64   62   59   63    59 #>  [2840,]   54   58   61   61   62   65   63   60   64    60 #>  [2841,]   54   58   62   62   63   66   64   61   65    61 #>  [2842,]   54   58   62   62   63   66   64   61   65    61 #>  [2843,]   54   58   61   61   62   65   63   60   64    60 #>  [2844,]   54   58   61   61   62   65   63   60   64    60 #>  [2845,]   54   58   61   61   62   65   63   60   64    60 #>  [2846,]   54   58   61   61   62   65   63   60   64    60 #>  [2847,]   54   58   61   61   62   65   63   60   64    60 #>  [2848,]   54   58   62   62   63   66   64   61   65    61 #>  [2849,]   54   58   61   61   62   65   63   60   64    60 #>  [2850,]   54   59   60   60   61   64   62   59   63    59 #>  [2851,]   54   58   61   61   62   65   63   60   64    60 #>  [2852,]   54   59   60   60   61   64   62   59   63    59 #>  [2853,]   54   58   61   61   62   65   63   60   64    60 #>  [2854,]   54   59   60   60   61   64   62   59   63    59 #>  [2855,]   54   58   61   61   62   65   63   60   64    60 #>  [2856,]   54   58   61   61   62   65   63   60   64    60 #>  [2857,]   54   59   60   60   61   64   62   59   63    59 #>  [2858,]   54   58   62   62   63   66   64   61   65    61 #>  [2859,]   54   59   60   60   61   64   62   59   63    59 #>  [2860,]   54   58   62   62   63   66   64   61   65    61 #>  [2861,]   54   58   62   62   63   66   64   61   65    61 #>  [2862,]   54   58   62   62   63   66   64   61   65    61 #>  [2863,]   54   58   61   61   62   65   63   60   64    60 #>  [2864,]   54   58   62   62   63   66   64   61   65    61 #>  [2865,]   54   58   61   61   62   65   63   60   64    60 #>  [2866,]   54   58   61   61   62   65   63   60   64    60 #>  [2867,]   54   59   60   60   61   64   62   59   63    59 #>  [2868,]   54   58   62   62   63   66   64   61   65    61 #>  [2869,]   54   58   62   62   63   66   64   61   65    61 #>  [2870,]   54   58   61   61   62   65   63   60   64    60 #>  [2871,]   54   58   62   62   63   66   64   61   65    61 #>  [2872,]   54   58   61   61   62   65   63   60   64    60 #>  [2873,]   54   59   60   60   61   64   62   59   63    59 #>  [2874,]   54   58   62   62   63   66   64   61   65    61 #>  [2875,]   54   58   62   62   63   66   64   61   65    61 #>  [2876,]   54   59   60   60   61   64   62   59   63    59 #>  [2877,]   54   58   61   61   62   65   63   60   64    60 #>  [2878,]   54   58   61   61   62   65   63   60   64    60 #>  [2879,]   54   58   61   61   62   65   63   60   64    60 #>  [2880,]   54   58   62   62   63   66   64   61   65    61 #>  [2881,]   54   58   62   62   63   66   64   61   65    61 #>  [2882,]   54   58   62   62   63   66   64   61   65    61 #>  [2883,]   54   58   61   61   62   65   63   60   64    60 #>  [2884,]   54   58   61   61   62   65   63   60   64    60 #>  [2885,]   54   58   62   62   63   66   64   61   65    61 #>  [2886,]   54   59   60   60   61   64   62   59   63    59 #>  [2887,]   54   58   62   62   63   66   64   61   65    61 #>  [2888,]   54   58   62   62   63   66   64   61   65    61 #>  [2889,]   54   58   61   61   62   65   63   60   64    60 #>  [2890,]   54   59   60   60   61   64   62   59   63    59 #>  [2891,]   54   59   60   60   61   64   62   59   63    59 #>  [2892,]   54   58   62   62   63   66   64   61   65    61 #>  [2893,]   54   58   62   62   63   66   64   61   65    61 #>  [2894,]   54   58   61   61   62   65   63   60   64    60 #>  [2895,]   54   58   62   62   63   66   64   61   65    61 #>  [2896,]   54   58   62   62   63   66   64   61   65    61 #>  [2897,]   54   58   62   62   63   66   64   61   65    61 #>  [2898,]   54   58   61   61   62   65   63   60   64    60 #>  [2899,]   54   58   62   62   63   66   64   61   65    61 #>  [2900,]   54   58   61   61   62   65   63   60   64    60 #>  [2901,]   55   61   64   64   65   68   66   63   67    63 #>  [2902,]   55   60   63   63   64   67   65   62   66    62 #>  [2903,]   55   61   64   64   65   68   66   63   67    63 #>  [2904,]   55   61   64   64   65   68   66   63   67    63 #>  [2905,]   55   61   64   64   65   68   66   63   67    63 #>  [2906,]   55   60   63   63   64   67   65   62   66    62 #>  [2907,]   55   61   64   64   65   68   66   63   67    63 #>  [2908,]   55   61   64   64   65   68   66   63   67    63 #>  [2909,]   55   61   64   64   65   68   66   63   67    63 #>  [2910,]   55   61   64   64   65   68   66   63   67    63 #>  [2911,]   55   60   63   63   64   67   65   62   66    62 #>  [2912,]   55   60   63   63   64   67   65   62   66    62 #>  [2913,]   55   61   64   64   65   68   66   63   67    63 #>  [2914,]   55   61   64   64   65   68   66   63   67    63 #>  [2915,]   55   60   63   63   64   67   65   62   66    62 #>  [2916,]   55   61   64   64   65   68   66   63   67    63 #>  [2917,]   55   60   63   63   64   67   65   62   66    62 #>  [2918,]   55   61   64   64   65   68   66   63   67    63 #>  [2919,]   55   61   64   64   65   68   66   63   67    63 #>  [2920,]   55   61   64   64   65   68   66   63   67    63 #>  [2921,]   55   61   64   64   65   68   66   63   67    63 #>  [2922,]   55   61   64   64   65   68   66   63   67    63 #>  [2923,]   55   60   63   63   64   67   65   62   66    62 #>  [2924,]   55   61   64   64   65   68   66   63   67    63 #>  [2925,]   55   61   64   64   65   68   66   63   67    63 #>  [2926,]   55   61   64   64   65   68   66   63   67    63 #>  [2927,]   55   61   64   64   65   68   66   63   67    63 #>  [2928,]   55   61   64   64   65   68   66   63   67    63 #>  [2929,]   55   60   63   63   64   67   65   62   66    62 #>  [2930,]   55   60   63   63   64   67   65   62   66    62 #>  [2931,]   55   60   63   63   64   67   65   62   66    62 #>  [2932,]   55   61   64   64   65   68   66   63   67    63 #>  [2933,]   55   61   64   64   65   68   66   63   67    63 #>  [2934,]   55   60   63   63   64   67   65   62   66    62 #>  [2935,]   55   60   63   63   64   67   65   62   66    62 #>  [2936,]   55   61   64   64   65   68   66   63   67    63 #>  [2937,]   55   60   63   63   64   67   65   62   66    62 #>  [2938,]   55   61   64   64   65   68   66   63   67    63 #>  [2939,]   55   61   64   64   65   68   66   63   67    63 #>  [2940,]   55   61   64   64   65   68   66   63   67    63 #>  [2941,]   55   61   64   64   65   68   66   63   67    63 #>  [2942,]   55   60   63   63   64   67   65   62   66    62 #>  [2943,]   55   60   63   63   64   67   65   62   66    62 #>  [2944,]   55   60   63   63   64   67   65   62   66    62 #>  [2945,]   55   61   64   64   65   68   66   63   67    63 #>  [2946,]   55   61   64   64   65   68   66   63   67    63 #>  [2947,]   55   60   63   63   64   67   65   62   66    62 #>  [2948,]   55   60   63   63   64   67   65   62   66    62 #>  [2949,]   55   61   64   64   65   68   66   63   67    63 #>  [2950,]   55   61   64   64   65   68   66   63   67    63 #>  [2951,]   55   61   64   64   65   68   66   63   67    63 #>  [2952,]   55   61   64   64   65   68   66   63   67    63 #>  [2953,]   55   61   64   64   65   68   66   63   67    63 #>  [2954,]   55   61   64   64   65   68   66   63   67    63 #>  [2955,]   55   61   64   64   65   68   66   63   67    63 #>  [2956,]   55   60   63   63   64   67   65   62   66    62 #>  [2957,]   55   61   64   64   65   68   66   63   67    63 #>  [2958,]   55   61   64   64   65   68   66   63   67    63 #>  [2959,]   55   61   64   64   65   68   66   63   67    63 #>  [2960,]   55   60   63   63   64   67   65   62   66    62 #>  [2961,]   55   60   63   63   64   67   65   62   66    62 #>  [2962,]   55   61   64   64   65   68   66   63   67    63 #>  [2963,]   55   60   63   63   64   67   65   62   66    62 #>  [2964,]   55   60   63   63   64   67   65   62   66    62 #>  [2965,]   55   60   63   63   64   67   65   62   66    62 #>  [2966,]   55   60   63   63   64   67   65   62   66    62 #>  [2967,]   55   61   64   64   65   68   66   63   67    63 #>  [2968,]   55   61   64   64   65   68   66   63   67    63 #>  [2969,]   55   61   64   64   65   68   66   63   67    63 #>  [2970,]   55   60   63   63   64   67   65   62   66    62 #>  [2971,]   55   61   64   64   65   68   66   63   67    63 #>  [2972,]   55   61   64   64   65   68   66   63   67    63 #>  [2973,]   55   61   64   64   65   68   66   63   67    63 #>  [2974,]   55   61   64   64   65   68   66   63   67    63 #>  [2975,]   55   60   63   63   64   67   65   62   66    62 #>  [2976,]   55   61   64   64   65   68   66   63   67    63 #>  [2977,]   55   61   64   64   65   68   66   63   67    63 #>  [2978,]   55   60   63   63   64   67   65   62   66    62 #>  [2979,]   55   60   63   63   64   67   65   62   66    62 #>  [2980,]   55   61   64   64   65   68   66   63   67    63 #>  [2981,]   55   60   63   63   64   67   65   62   66    62 #>  [2982,]   55   61   64   64   65   68   66   63   67    63 #>  [2983,]   55   61   64   64   65   68   66   63   67    63 #>  [2984,]   55   61   64   64   65   68   66   63   67    63 #>  [2985,]   55   61   64   64   65   68   66   63   67    63 #>  [2986,]   55   61   64   64   65   68   66   63   67    63 #>  [2987,]   55   61   64   64   65   68   66   63   67    63 #>  [2988,]   55   61   64   64   65   68   66   63   67    63 #>  [2989,]   55   61   64   64   65   68   66   63   67    63 #>  [2990,]   55   61   64   64   65   68   66   63   67    63 #>  [2991,]   55   61   64   64   65   68   66   63   67    63 #>  [2992,]   55   60   63   63   64   67   65   62   66    62 #>  [2993,]   55   61   64   64   65   68   66   63   67    63 #>  [2994,]   55   60   63   63   64   67   65   62   66    62 #>  [2995,]   55   60   63   63   64   67   65   62   66    62 #>  [2996,]   55   61   64   64   65   68   66   63   67    63 #>  [2997,]   55   61   64   64   65   68   66   63   67    63 #>  [2998,]   55   61   64   64   65   68   66   63   67    63 #>  [2999,]   55   61   64   64   65   68   66   63   67    63 #>  [3000,]   55   60   63   63   64   67   65   62   66    62 #>  [3001,]   56   62   65   65   66   69   67   64   68    64 #>  [3002,]   56   62   65   65   66   69   67   64   68    64 #>  [3003,]   57   63   66   66   67   70   68   65   69    65 #>  [3004,]   56   62   65   65   66   69   67   64   68    64 #>  [3005,]   56   62   65   65   66   69   67   64   68    64 #>  [3006,]   57   63   66   66   67   70   68   65   69    65 #>  [3007,]   56   62   65   65   66   69   67   64   68    64 #>  [3008,]   56   62   65   65   66   69   67   64   68    64 #>  [3009,]   56   62   65   65   66   69   67   64   68    64 #>  [3010,]   56   62   65   65   66   69   67   64   68    64 #>  [3011,]   56   62   65   65   66   69   67   64   68    64 #>  [3012,]   57   63   66   66   67   70   68   65   69    65 #>  [3013,]   56   62   65   65   66   69   67   64   68    64 #>  [3014,]   56   62   65   65   66   69   67   64   68    64 #>  [3015,]   56   62   65   65   66   69   67   64   68    64 #>  [3016,]   56   62   65   65   66   69   67   64   68    64 #>  [3017,]   56   62   65   65   66   69   67   64   68    64 #>  [3018,]   56   62   65   65   66   69   67   64   68    64 #>  [3019,]   57   63   66   66   67   70   68   65   69    65 #>  [3020,]   57   63   66   66   67   70   68   65   69    65 #>  [3021,]   56   62   65   65   66   69   67   64   68    64 #>  [3022,]   56   62   65   65   66   69   67   64   68    64 #>  [3023,]   56   62   65   65   66   69   67   64   68    64 #>  [3024,]   56   62   65   65   66   69   67   64   68    64 #>  [3025,]   57   63   66   66   67   70   68   65   69    65 #>  [3026,]   56   62   65   65   66   69   67   64   68    64 #>  [3027,]   56   62   65   65   66   69   67   64   68    64 #>  [3028,]   57   63   66   66   67   70   68   65   69    65 #>  [3029,]   56   62   65   65   66   69   67   64   68    64 #>  [3030,]   56   62   65   65   66   69   67   64   68    64 #>  [3031,]   56   62   65   65   66   69   67   64   68    64 #>  [3032,]   56   62   65   65   66   69   67   64   68    64 #>  [3033,]   57   63   66   66   67   70   68   65   69    65 #>  [3034,]   57   63   66   66   67   70   68   65   69    65 #>  [3035,]   56   62   65   65   66   69   67   64   68    64 #>  [3036,]   56   62   65   65   66   69   67   64   68    64 #>  [3037,]   56   62   65   65   66   69   67   64   68    64 #>  [3038,]   56   62   65   65   66   69   67   64   68    64 #>  [3039,]   56   62   65   65   66   69   67   64   68    64 #>  [3040,]   56   62   65   65   66   69   67   64   68    64 #>  [3041,]   56   62   65   65   66   69   67   64   68    64 #>  [3042,]   56   62   65   65   66   69   67   64   68    64 #>  [3043,]   56   62   65   65   66   69   67   64   68    64 #>  [3044,]   56   62   65   65   66   69   67   64   68    64 #>  [3045,]   56   62   65   65   66   69   67   64   68    64 #>  [3046,]   56   62   65   65   66   69   67   64   68    64 #>  [3047,]   56   62   65   65   66   69   67   64   68    64 #>  [3048,]   56   62   65   65   66   69   67   64   68    64 #>  [3049,]   56   62   65   65   66   69   67   64   68    64 #>  [3050,]   56   62   65   65   66   69   67   64   68    64 #>  [3051,]   56   62   65   65   66   69   67   64   68    64 #>  [3052,]   56   62   65   65   66   69   67   64   68    64 #>  [3053,]   56   62   65   65   66   69   67   64   68    64 #>  [3054,]   56   62   65   65   66   69   67   64   68    64 #>  [3055,]   56   62   65   65   66   69   67   64   68    64 #>  [3056,]   56   62   65   65   66   69   67   64   68    64 #>  [3057,]   56   62   65   65   66   69   67   64   68    64 #>  [3058,]   56   62   65   65   66   69   67   64   68    64 #>  [3059,]   56   62   65   65   66   69   67   64   68    64 #>  [3060,]   57   63   66   66   67   70   68   65   69    65 #>  [3061,]   56   62   65   65   66   69   67   64   68    64 #>  [3062,]   56   62   65   65   66   69   67   64   68    64 #>  [3063,]   56   62   65   65   66   69   67   64   68    64 #>  [3064,]   56   62   65   65   66   69   67   64   68    64 #>  [3065,]   57   63   66   66   67   70   68   65   69    65 #>  [3066,]   56   62   65   65   66   69   67   64   68    64 #>  [3067,]   56   62   65   65   66   69   67   64   68    64 #>  [3068,]   56   62   65   65   66   69   67   64   68    64 #>  [3069,]   56   62   65   65   66   69   67   64   68    64 #>  [3070,]   57   63   66   66   67   70   68   65   69    65 #>  [3071,]   56   62   65   65   66   69   67   64   68    64 #>  [3072,]   56   62   65   65   66   69   67   64   68    64 #>  [3073,]   57   63   66   66   67   70   68   65   69    65 #>  [3074,]   56   62   65   65   66   69   67   64   68    64 #>  [3075,]   56   62   65   65   66   69   67   64   68    64 #>  [3076,]   56   62   65   65   66   69   67   64   68    64 #>  [3077,]   56   62   65   65   66   69   67   64   68    64 #>  [3078,]   56   62   65   65   66   69   67   64   68    64 #>  [3079,]   56   62   65   65   66   69   67   64   68    64 #>  [3080,]   56   62   65   65   66   69   67   64   68    64 #>  [3081,]   56   62   65   65   66   69   67   64   68    64 #>  [3082,]   56   62   65   65   66   69   67   64   68    64 #>  [3083,]   56   62   65   65   66   69   67   64   68    64 #>  [3084,]   56   62   65   65   66   69   67   64   68    64 #>  [3085,]   56   62   65   65   66   69   67   64   68    64 #>  [3086,]   56   62   65   65   66   69   67   64   68    64 #>  [3087,]   56   62   65   65   66   69   67   64   68    64 #>  [3088,]   56   62   65   65   66   69   67   64   68    64 #>  [3089,]   56   62   65   65   66   69   67   64   68    64 #>  [3090,]   56   62   65   65   66   69   67   64   68    64 #>  [3091,]   56   62   65   65   66   69   67   64   68    64 #>  [3092,]   56   62   65   65   66   69   67   64   68    64 #>  [3093,]   57   63   66   66   67   70   68   65   69    65 #>  [3094,]   56   62   65   65   66   69   67   64   68    64 #>  [3095,]   56   62   65   65   66   69   67   64   68    64 #>  [3096,]   56   62   65   65   66   69   67   64   68    64 #>  [3097,]   57   63   66   66   67   70   68   65   69    65 #>  [3098,]   57   63   66   66   67   70   68   65   69    65 #>  [3099,]   56   62   65   65   66   69   67   64   68    64 #>  [3100,]   56   62   65   65   66   69   67   64   68    64 #>  [3101,]   58   64   67   67   68   71   69   66   70    66 #>  [3102,]   59   65   67   67   68   71   69   66   70    66 #>  [3103,]   58   64   67   67   68   71   69   66   70    66 #>  [3104,]   58   64   67   68   69   72   70   67   71    67 #>  [3105,]   58   64   67   67   68   71   69   66   70    66 #>  [3106,]   58   64   67   67   68   71   69   66   70    66 #>  [3107,]   58   64   67   67   68   71   69   66   70    66 #>  [3108,]   58   64   67   67   68   71   69   66   70    66 #>  [3109,]   59   65   67   67   68   71   69   66   70    66 #>  [3110,]   59   65   67   67   68   71   69   66   70    66 #>  [3111,]   58   64   67   67   68   71   69   66   70    66 #>  [3112,]   59   65   67   67   68   71   69   66   70    66 #>  [3113,]   58   64   67   67   68   71   69   66   70    66 #>  [3114,]   58   64   67   68   69   72   70   67   71    67 #>  [3115,]   58   64   67   67   68   71   69   66   70    66 #>  [3116,]   58   64   67   67   68   71   69   66   70    66 #>  [3117,]   58   64   67   67   68   71   69   66   70    66 #>  [3118,]   58   64   67   67   68   71   69   66   70    66 #>  [3119,]   58   64   67   67   68   71   69   66   70    66 #>  [3120,]   58   64   67   67   68   71   69   66   70    66 #>  [3121,]   59   65   67   67   68   71   69   66   70    66 #>  [3122,]   58   64   67   67   68   71   69   66   70    66 #>  [3123,]   58   64   67   67   68   71   69   66   70    66 #>  [3124,]   58   64   67   67   68   71   69   66   70    66 #>  [3125,]   58   64   67   67   68   71   69   66   70    66 #>  [3126,]   58   64   67   67   68   71   69   66   70    66 #>  [3127,]   58   64   67   68   69   72   70   67   71    67 #>  [3128,]   58   64   67   67   68   71   69   66   70    66 #>  [3129,]   59   65   67   67   68   71   69   66   70    66 #>  [3130,]   58   64   67   67   68   71   69   66   70    66 #>  [3131,]   58   64   67   67   68   71   69   66   70    66 #>  [3132,]   58   64   67   67   68   71   69   66   70    66 #>  [3133,]   59   65   67   67   68   71   69   66   70    66 #>  [3134,]   58   64   67   67   68   71   69   66   70    66 #>  [3135,]   58   64   67   67   68   71   69   66   70    66 #>  [3136,]   58   64   67   67   68   71   69   66   70    66 #>  [3137,]   58   64   67   67   68   71   69   66   70    66 #>  [3138,]   58   64   67   67   68   71   69   66   70    66 #>  [3139,]   58   64   67   67   68   71   69   66   70    66 #>  [3140,]   58   64   67   67   68   71   69   66   70    66 #>  [3141,]   58   64   67   67   68   71   69   66   70    66 #>  [3142,]   58   64   67   67   68   71   69   66   70    66 #>  [3143,]   58   64   67   67   68   71   69   66   70    66 #>  [3144,]   58   64   67   67   68   71   69   66   70    66 #>  [3145,]   58   64   67   67   68   71   69   66   70    66 #>  [3146,]   58   64   67   67   68   71   69   66   70    66 #>  [3147,]   58   64   67   67   68   71   69   66   70    66 #>  [3148,]   58   64   67   67   68   71   69   66   70    66 #>  [3149,]   58   64   67   67   68   71   69   66   70    66 #>  [3150,]   58   64   67   67   68   71   69   66   70    66 #>  [3151,]   58   64   67   67   68   71   69   66   70    66 #>  [3152,]   58   64   67   67   68   71   69   66   70    66 #>  [3153,]   58   64   67   67   68   71   69   66   70    66 #>  [3154,]   58   64   67   67   68   71   69   66   70    66 #>  [3155,]   58   64   67   67   68   71   69   66   70    66 #>  [3156,]   58   64   67   67   68   71   69   66   70    66 #>  [3157,]   58   64   67   67   68   71   69   66   70    66 #>  [3158,]   58   64   67   67   68   71   69   66   70    66 #>  [3159,]   58   64   67   67   68   71   69   66   70    66 #>  [3160,]   58   64   67   67   68   71   69   66   70    66 #>  [3161,]   58   64   67   68   69   72   70   67   71    67 #>  [3162,]   58   64   67   67   68   71   69   66   70    66 #>  [3163,]   58   64   67   67   68   71   69   66   70    66 #>  [3164,]   58   64   67   67   68   71   69   66   70    66 #>  [3165,]   58   64   67   67   68   71   69   66   70    66 #>  [3166,]   58   64   67   67   68   71   69   66   70    66 #>  [3167,]   58   64   67   67   68   71   69   66   70    66 #>  [3168,]   58   64   67   67   68   71   69   66   70    66 #>  [3169,]   58   64   67   67   68   71   69   66   70    66 #>  [3170,]   59   65   67   67   68   71   69   66   70    66 #>  [3171,]   58   64   67   67   68   71   69   66   70    66 #>  [3172,]   58   64   67   67   68   71   69   66   70    66 #>  [3173,]   58   64   67   67   68   71   69   66   70    66 #>  [3174,]   58   64   67   67   68   71   69   66   70    66 #>  [3175,]   58   64   67   67   68   71   69   66   70    66 #>  [3176,]   58   64   67   67   68   71   69   66   70    66 #>  [3177,]   58   64   67   67   68   71   69   66   70    66 #>  [3178,]   58   64   67   67   68   71   69   66   70    66 #>  [3179,]   58   64   67   67   68   71   69   66   70    66 #>  [3180,]   58   64   67   67   68   71   69   66   70    66 #>  [3181,]   58   64   67   67   68   71   69   66   70    66 #>  [3182,]   58   64   67   68   69   72   70   67   71    67 #>  [3183,]   58   64   67   67   68   71   69   66   70    66 #>  [3184,]   58   64   67   67   68   71   69   66   70    66 #>  [3185,]   58   64   67   67   68   71   69   66   70    66 #>  [3186,]   59   65   67   67   68   71   69   66   70    66 #>  [3187,]   58   64   67   67   68   71   69   66   70    66 #>  [3188,]   58   64   67   67   68   71   69   66   70    66 #>  [3189,]   58   64   67   67   68   71   69   66   70    66 #>  [3190,]   58   64   67   67   68   71   69   66   70    66 #>  [3191,]   58   64   67   67   68   71   69   66   70    66 #>  [3192,]   58   64   67   68   69   72   70   67   71    67 #>  [3193,]   58   64   67   68   69   72   70   67   71    67 #>  [3194,]   58   64   67   67   68   71   69   66   70    66 #>  [3195,]   58   64   67   67   68   71   69   66   70    66 #>  [3196,]   58   64   67   68   69   72   70   67   71    67 #>  [3197,]   58   64   67   68   69   72   70   67   71    67 #>  [3198,]   58   64   67   67   68   71   69   66   70    66 #>  [3199,]   58   64   67   67   68   71   69   66   70    66 #>  [3200,]   58   64   67   67   68   71   69   66   70    66 #>  [3201,]   60   66   68   71   72   75   73   70   74    70 #>  [3202,]   61   67   69   69   70   73   71   68   72    68 #>  [3203,]   60   66   68   70   71   74   72   69   73    69 #>  [3204,]   60   66   68   71   72   75   73   70   74    70 #>  [3205,]   61   67   69   69   70   73   71   68   72    68 #>  [3206,]   60   66   68   71   72   75   73   70   74    70 #>  [3207,]   61   67   69   69   70   73   71   68   72    68 #>  [3208,]   60   66   68   70   71   74   72   69   73    69 #>  [3209,]   61   67   69   69   70   73   71   68   72    68 #>  [3210,]   61   67   69   69   70   73   71   68   72    68 #>  [3211,]   60   66   68   71   72   75   73   70   74    70 #>  [3212,]   61   67   69   69   70   73   71   68   72    68 #>  [3213,]   61   67   69   69   70   73   71   68   72    68 #>  [3214,]   60   66   68   71   72   75   73   70   74    70 #>  [3215,]   60   66   68   71   72   75   73   70   74    70 #>  [3216,]   60   66   68   70   71   74   72   69   73    69 #>  [3217,]   61   67   69   69   70   73   71   68   72    68 #>  [3218,]   61   67   69   69   70   73   71   68   72    68 #>  [3219,]   60   66   68   71   72   75   73   70   74    70 #>  [3220,]   61   67   69   69   70   73   71   68   72    68 #>  [3221,]   61   67   69   69   70   73   71   68   72    68 #>  [3222,]   61   67   69   69   70   73   71   68   72    68 #>  [3223,]   61   67   69   69   70   73   71   68   72    68 #>  [3224,]   61   67   69   69   70   73   71   68   72    68 #>  [3225,]   61   67   69   69   70   73   71   68   72    68 #>  [3226,]   60   66   68   71   72   75   73   70   74    70 #>  [3227,]   61   67   69   69   70   73   71   68   72    68 #>  [3228,]   60   66   68   70   71   74   72   69   73    69 #>  [3229,]   61   67   69   69   70   73   71   68   72    68 #>  [3230,]   61   67   69   69   70   73   71   68   72    68 #>  [3231,]   61   67   69   69   70   73   71   68   72    68 #>  [3232,]   61   67   69   69   70   73   71   68   72    68 #>  [3233,]   61   67   69   69   70   73   71   68   72    68 #>  [3234,]   60   66   68   71   72   75   73   70   74    70 #>  [3235,]   60   66   68   71   72   75   73   70   74    70 #>  [3236,]   61   67   69   69   70   73   71   68   72    68 #>  [3237,]   60   66   68   71   72   75   73   70   74    70 #>  [3238,]   60   66   68   71   72   75   73   70   74    70 #>  [3239,]   61   67   69   69   70   73   71   68   72    68 #>  [3240,]   61   67   69   69   70   73   71   68   72    68 #>  [3241,]   61   67   69   69   70   73   71   68   72    68 #>  [3242,]   60   66   68   71   72   75   73   70   74    70 #>  [3243,]   61   67   69   69   70   73   71   68   72    68 #>  [3244,]   61   67   69   69   70   73   71   68   72    68 #>  [3245,]   60   66   68   70   71   74   72   69   73    69 #>  [3246,]   60   66   68   70   71   74   72   69   73    69 #>  [3247,]   61   67   69   69   70   73   71   68   72    68 #>  [3248,]   61   67   69   69   70   73   71   68   72    68 #>  [3249,]   60   66   68   70   71   74   72   69   73    69 #>  [3250,]   61   67   69   69   70   73   71   68   72    68 #>  [3251,]   61   67   69   69   70   73   71   68   72    68 #>  [3252,]   60   66   68   71   72   75   73   70   74    70 #>  [3253,]   61   67   69   69   70   73   71   68   72    68 #>  [3254,]   61   67   69   69   70   73   71   68   72    68 #>  [3255,]   60   66   68   70   71   74   72   69   73    69 #>  [3256,]   60   66   68   70   71   74   72   69   73    69 #>  [3257,]   60   66   68   71   72   75   73   70   74    70 #>  [3258,]   61   67   69   69   70   73   71   68   72    68 #>  [3259,]   60   66   68   70   71   74   72   69   73    69 #>  [3260,]   61   67   69   69   70   73   71   68   72    68 #>  [3261,]   61   67   69   69   70   73   71   68   72    68 #>  [3262,]   60   66   68   71   72   75   73   70   74    70 #>  [3263,]   61   67   69   69   70   73   71   68   72    68 #>  [3264,]   60   66   68   71   72   75   73   70   74    70 #>  [3265,]   60   66   68   70   71   74   72   69   73    69 #>  [3266,]   61   67   69   69   70   73   71   68   72    68 #>  [3267,]   60   66   68   71   72   75   73   70   74    70 #>  [3268,]   60   66   68   71   72   75   73   70   74    70 #>  [3269,]   60   66   68   71   72   75   73   70   74    70 #>  [3270,]   61   67   69   69   70   73   71   68   72    68 #>  [3271,]   61   67   69   69   70   73   71   68   72    68 #>  [3272,]   60   66   68   70   71   74   72   69   73    69 #>  [3273,]   60   66   68   71   72   75   73   70   74    70 #>  [3274,]   61   67   69   69   70   73   71   68   72    68 #>  [3275,]   61   67   69   69   70   73   71   68   72    68 #>  [3276,]   61   67   69   69   70   73   71   68   72    68 #>  [3277,]   60   66   68   70   71   74   72   69   73    69 #>  [3278,]   61   67   69   69   70   73   71   68   72    68 #>  [3279,]   60   66   68   70   71   74   72   69   73    69 #>  [3280,]   61   67   69   69   70   73   71   68   72    68 #>  [3281,]   61   67   69   69   70   73   71   68   72    68 #>  [3282,]   60   66   68   71   72   75   73   70   74    70 #>  [3283,]   61   67   69   69   70   73   71   68   72    68 #>  [3284,]   61   67   69   69   70   73   71   68   72    68 #>  [3285,]   60   66   68   71   72   75   73   70   74    70 #>  [3286,]   61   67   69   69   70   73   71   68   72    68 #>  [3287,]   61   67   69   69   70   73   71   68   72    68 #>  [3288,]   61   67   69   69   70   73   71   68   72    68 #>  [3289,]   60   66   68   70   71   74   72   69   73    69 #>  [3290,]   61   67   69   69   70   73   71   68   72    68 #>  [3291,]   60   66   68   71   72   75   73   70   74    70 #>  [3292,]   61   67   69   69   70   73   71   68   72    68 #>  [3293,]   61   67   69   69   70   73   71   68   72    68 #>  [3294,]   60   66   68   70   71   74   72   69   73    69 #>  [3295,]   61   67   69   69   70   73   71   68   72    68 #>  [3296,]   60   66   68   71   72   75   73   70   74    70 #>  [3297,]   60   66   68   71   72   75   73   70   74    70 #>  [3298,]   60   66   68   70   71   74   72   69   73    69 #>  [3299,]   61   67   69   69   70   73   71   68   72    68 #>  [3300,]   60   66   68   70   71   74   72   69   73    69 #>  [3301,]   62   68   70   72   73   76   74   71   75    71 #>  [3302,]   62   68   70   72   73   76   74   71   75    71 #>  [3303,]   62   68   70   72   73   76   74   71   75    71 #>  [3304,]   62   68   70   72   73   76   74   71   75    71 #>  [3305,]   62   68   70   72   73   76   74   71   75    71 #>  [3306,]   62   68   70   72   73   76   74   71   75    71 #>  [3307,]   62   68   70   72   73   76   74   71   75    71 #>  [3308,]   62   68   70   72   73   76   74   71   75    71 #>  [3309,]   62   68   70   72   73   76   74   71   75    71 #>  [3310,]   62   68   70   72   73   76   74   71   75    71 #>  [3311,]   62   68   70   72   73   76   74   71   75    71 #>  [3312,]   62   68   70   72   73   76   74   71   75    71 #>  [3313,]   62   68   70   72   73   76   74   71   75    71 #>  [3314,]   62   68   70   72   73   76   74   71   75    71 #>  [3315,]   62   68   70   72   73   76   74   71   75    71 #>  [3316,]   62   68   70   72   73   76   74   71   75    71 #>  [3317,]   62   68   70   72   73   76   74   71   75    71 #>  [3318,]   62   68   70   72   73   76   74   71   75    71 #>  [3319,]   63   69   71   73   74   77   75   72   76    72 #>  [3320,]   63   69   71   73   75   78   76   73   77    73 #>  [3321,]   62   68   70   72   73   76   74   71   75    71 #>  [3322,]   63   69   71   73   74   77   75   72   76    72 #>  [3323,]   62   68   70   72   73   76   74   71   75    71 #>  [3324,]   62   68   70   72   73   76   74   71   75    71 #>  [3325,]   62   68   70   72   73   76   74   71   75    71 #>  [3326,]   62   68   70   72   73   76   74   71   75    71 #>  [3327,]   63   69   71   73   75   78   76   73   77    73 #>  [3328,]   62   68   70   72   73   76   74   71   75    71 #>  [3329,]   63   69   71   73   75   78   76   73   77    73 #>  [3330,]   62   68   70   72   73   76   74   71   75    71 #>  [3331,]   62   68   70   72   73   76   74   71   75    71 #>  [3332,]   62   68   70   72   73   76   74   71   75    71 #>  [3333,]   62   68   70   72   73   76   74   71   75    71 #>  [3334,]   62   68   70   72   73   76   74   71   75    71 #>  [3335,]   62   68   70   72   73   76   74   71   75    71 #>  [3336,]   63   69   71   73   75   78   76   73   77    73 #>  [3337,]   62   68   70   72   73   76   74   71   75    71 #>  [3338,]   62   68   70   72   73   76   74   71   75    71 #>  [3339,]   62   68   70   72   73   76   74   71   75    71 #>  [3340,]   62   68   70   72   73   76   74   71   75    71 #>  [3341,]   62   68   70   72   73   76   74   71   75    71 #>  [3342,]   62   68   70   72   73   76   74   71   75    71 #>  [3343,]   62   68   70   72   73   76   74   71   75    71 #>  [3344,]   62   68   70   72   73   76   74   71   75    71 #>  [3345,]   62   68   70   72   73   76   74   71   75    71 #>  [3346,]   62   68   70   72   73   76   74   71   75    71 #>  [3347,]   62   68   70   72   73   76   74   71   75    71 #>  [3348,]   62   68   70   72   73   76   74   71   75    71 #>  [3349,]   62   68   70   72   73   76   74   71   75    71 #>  [3350,]   62   68   70   72   73   76   74   71   75    71 #>  [3351,]   62   68   70   72   73   76   74   71   75    71 #>  [3352,]   62   68   70   72   73   76   74   71   75    71 #>  [3353,]   62   68   70   72   73   76   74   71   75    71 #>  [3354,]   62   68   70   72   73   76   74   71   75    71 #>  [3355,]   62   68   70   72   73   76   74   71   75    71 #>  [3356,]   62   68   70   72   73   76   74   71   75    71 #>  [3357,]   62   68   70   72   73   76   74   71   75    71 #>  [3358,]   63   69   71   73   75   78   76   73   77    73 #>  [3359,]   62   68   70   72   73   76   74   71   75    71 #>  [3360,]   62   68   70   72   73   76   74   71   75    71 #>  [3361,]   62   68   70   72   73   76   74   71   75    71 #>  [3362,]   62   68   70   72   73   76   74   71   75    71 #>  [3363,]   62   68   70   72   73   76   74   71   75    71 #>  [3364,]   63   69   71   73   74   77   75   72   76    72 #>  [3365,]   62   68   70   72   73   76   74   71   75    71 #>  [3366,]   63   69   71   73   75   78   76   73   77    73 #>  [3367,]   62   68   70   72   73   76   74   71   75    71 #>  [3368,]   62   68   70   72   73   76   74   71   75    71 #>  [3369,]   62   68   70   72   73   76   74   71   75    71 #>  [3370,]   62   68   70   72   73   76   74   71   75    71 #>  [3371,]   62   68   70   72   73   76   74   71   75    71 #>  [3372,]   62   68   70   72   73   76   74   71   75    71 #>  [3373,]   62   68   70   72   73   76   74   71   75    71 #>  [3374,]   62   68   70   72   73   76   74   71   75    71 #>  [3375,]   62   68   70   72   73   76   74   71   75    71 #>  [3376,]   62   68   70   72   73   76   74   71   75    71 #>  [3377,]   63   69   71   73   75   78   76   73   77    73 #>  [3378,]   62   68   70   72   73   76   74   71   75    71 #>  [3379,]   62   68   70   72   73   76   74   71   75    71 #>  [3380,]   62   68   70   72   73   76   74   71   75    71 #>  [3381,]   63   69   71   73   74   77   75   72   76    72 #>  [3382,]   62   68   70   72   73   76   74   71   75    71 #>  [3383,]   62   68   70   72   73   76   74   71   75    71 #>  [3384,]   62   68   70   72   73   76   74   71   75    71 #>  [3385,]   62   68   70   72   73   76   74   71   75    71 #>  [3386,]   62   68   70   72   73   76   74   71   75    71 #>  [3387,]   63   69   71   73   75   78   76   73   77    73 #>  [3388,]   62   68   70   72   73   76   74   71   75    71 #>  [3389,]   62   68   70   72   73   76   74   71   75    71 #>  [3390,]   62   68   70   72   73   76   74   71   75    71 #>  [3391,]   62   68   70   72   73   76   74   71   75    71 #>  [3392,]   62   68   70   72   73   76   74   71   75    71 #>  [3393,]   62   68   70   72   73   76   74   71   75    71 #>  [3394,]   62   68   70   72   73   76   74   71   75    71 #>  [3395,]   62   68   70   72   73   76   74   71   75    71 #>  [3396,]   62   68   70   72   73   76   74   71   75    71 #>  [3397,]   63   69   71   73   74   77   75   72   76    72 #>  [3398,]   62   68   70   72   73   76   74   71   75    71 #>  [3399,]   62   68   70   72   73   76   74   71   75    71 #>  [3400,]   63   69   71   73   74   77   75   72   76    72 #>  [3401,]   65   71   73   75   77   80   78   74   78    74 #>  [3402,]   64   70   72   74   76   79   77   76   79    75 #>  [3403,]   64   70   72   74   76   79   77   75   79    75 #>  [3404,]   65   71   73   75   77   80   78   74   78    74 #>  [3405,]   64   70   72   74   76   79   77   76   79    75 #>  [3406,]   64   70   72   74   76   79   77   76   79    75 #>  [3407,]   65   71   73   75   77   80   78   74   78    74 #>  [3408,]   64   70   72   74   76   79   77   76   79    75 #>  [3409,]   65   71   73   75   77   80   78   74   78    74 #>  [3410,]   65   71   73   75   77   80   78   74   78    74 #>  [3411,]   64   70   72   74   76   79   77   76   79    75 #>  [3412,]   64   70   72   74   76   79   77   75   79    75 #>  [3413,]   65   71   73   75   77   80   78   74   78    74 #>  [3414,]   65   71   73   75   77   80   78   74   78    74 #>  [3415,]   64   70   72   74   76   79   77   76   79    75 #>  [3416,]   65   71   73   75   77   80   78   74   78    74 #>  [3417,]   64   70   72   74   76   79   77   76   79    75 #>  [3418,]   64   70   72   74   76   79   77   76   79    75 #>  [3419,]   64   70   72   74   76   79   77   76   79    75 #>  [3420,]   65   71   73   75   77   80   78   74   78    74 #>  [3421,]   64   70   72   74   76   79   77   76   79    75 #>  [3422,]   65   71   73   75   77   80   78   74   78    74 #>  [3423,]   64   70   72   74   76   79   77   76   79    75 #>  [3424,]   65   71   73   75   77   80   78   74   78    74 #>  [3425,]   65   71   73   75   77   80   78   74   78    74 #>  [3426,]   64   70   72   74   76   79   77   76   79    75 #>  [3427,]   64   70   72   74   76   79   77   76   79    75 #>  [3428,]   65   71   73   75   77   80   78   74   78    74 #>  [3429,]   64   70   72   74   76   79   77   76   79    75 #>  [3430,]   64   70   72   74   76   79   77   76   79    75 #>  [3431,]   64   70   72   74   76   79   77   75   79    75 #>  [3432,]   64   70   72   74   76   79   77   76   79    75 #>  [3433,]   64   70   72   74   76   79   77   76   79    75 #>  [3434,]   64   70   72   74   76   79   77   76   79    75 #>  [3435,]   64   70   72   74   76   79   77   76   79    75 #>  [3436,]   65   71   73   75   77   80   78   74   78    74 #>  [3437,]   64   70   72   74   76   79   77   76   79    75 #>  [3438,]   64   70   72   74   76   79   77   76   79    75 #>  [3439,]   65   71   73   75   77   80   78   74   78    74 #>  [3440,]   64   70   72   74   76   79   77   76   79    75 #>  [3441,]   64   70   72   74   76   79   77   76   79    75 #>  [3442,]   64   70   72   74   76   79   77   76   79    75 #>  [3443,]   64   70   72   74   76   79   77   76   79    75 #>  [3444,]   64   70   72   74   76   79   77   76   79    75 #>  [3445,]   65   71   73   75   77   80   78   74   78    74 #>  [3446,]   64   70   72   74   76   79   77   76   79    75 #>  [3447,]   64   70   72   74   76   79   77   76   79    75 #>  [3448,]   64   70   72   74   76   79   77   76   79    75 #>  [3449,]   65   71   73   75   77   80   78   74   78    74 #>  [3450,]   65   71   73   75   77   80   78   74   78    74 #>  [3451,]   64   70   72   74   76   79   77   76   79    75 #>  [3452,]   65   71   73   75   77   80   78   74   78    74 #>  [3453,]   65   71   73   75   77   80   78   74   78    74 #>  [3454,]   65   71   73   75   77   80   78   74   78    74 #>  [3455,]   65   71   73   75   77   80   78   74   78    74 #>  [3456,]   64   70   72   74   76   79   77   76   79    75 #>  [3457,]   65   71   73   75   77   80   78   74   78    74 #>  [3458,]   65   71   73   75   77   80   78   74   78    74 #>  [3459,]   65   71   73   75   77   80   78   74   78    74 #>  [3460,]   64   70   72   74   76   79   77   75   79    75 #>  [3461,]   64   70   72   74   76   79   77   76   79    75 #>  [3462,]   64   70   72   74   76   79   77   76   79    75 #>  [3463,]   64   70   72   74   76   79   77   76   79    75 #>  [3464,]   64   70   72   74   76   79   77   76   79    75 #>  [3465,]   64   70   72   74   76   79   77   76   79    75 #>  [3466,]   64   70   72   74   76   79   77   76   79    75 #>  [3467,]   65   71   73   75   77   80   78   74   78    74 #>  [3468,]   64   70   72   74   76   79   77   76   79    75 #>  [3469,]   64   70   72   74   76   79   77   76   79    75 #>  [3470,]   64   70   72   74   76   79   77   76   79    75 #>  [3471,]   64   70   72   74   76   79   77   76   79    75 #>  [3472,]   65   71   73   75   77   80   78   74   78    74 #>  [3473,]   65   71   73   75   77   80   78   74   78    74 #>  [3474,]   64   70   72   74   76   79   77   76   79    75 #>  [3475,]   64   70   72   74   76   79   77   76   79    75 #>  [3476,]   65   71   73   75   77   80   78   74   78    74 #>  [3477,]   64   70   72   74   76   79   77   76   79    75 #>  [3478,]   64   70   72   74   76   79   77   76   79    75 #>  [3479,]   64   70   72   74   76   79   77   76   79    75 #>  [3480,]   64   70   72   74   76   79   77   76   79    75 #>  [3481,]   64   70   72   74   76   79   77   76   79    75 #>  [3482,]   64   70   72   74   76   79   77   76   79    75 #>  [3483,]   64   70   72   74   76   79   77   76   79    75 #>  [3484,]   64   70   72   74   76   79   77   76   79    75 #>  [3485,]   65   71   73   75   77   80   78   74   78    74 #>  [3486,]   65   71   73   75   77   80   78   74   78    74 #>  [3487,]   65   71   73   75   77   80   78   74   78    74 #>  [3488,]   64   70   72   74   76   79   77   76   79    75 #>  [3489,]   64   70   72   74   76   79   77   76   79    75 #>  [3490,]   65   71   73   75   77   80   78   74   78    74 #>  [3491,]   65   71   73   75   77   80   78   74   78    74 #>  [3492,]   64   70   72   74   76   79   77   76   79    75 #>  [3493,]   64   70   72   74   76   79   77   76   79    75 #>  [3494,]   64   70   72   74   76   79   77   76   79    75 #>  [3495,]   64   70   72   74   76   79   77   76   79    75 #>  [3496,]   64   70   72   74   76   79   77   76   79    75 #>  [3497,]   64   70   72   74   76   79   77   75   79    75 #>  [3498,]   64   70   72   74   76   79   77   76   79    75 #>  [3499,]   64   70   72   74   76   79   77   76   79    75 #>  [3500,]   64   70   72   74   76   79   77   76   79    75 #>  [3501,]   67   73   76   77   79   82   80   78   81    77 #>  [3502,]   67   73   76   77   79   82   80   78   81    77 #>  [3503,]   66   72   74   76   78   81   79   77   80    76 #>  [3504,]   67   73   75   77   79   82   80   78   81    77 #>  [3505,]   67   73   75   77   79   82   80   78   81    77 #>  [3506,]   67   73   76   77   79   82   80   78   81    77 #>  [3507,]   66   72   74   76   78   81   79   77   80    76 #>  [3508,]   66   72   74   76   78   81   79   77   80    76 #>  [3509,]   67   73   75   77   79   82   80   78   81    77 #>  [3510,]   67   73   75   77   79   82   80   78   81    77 #>  [3511,]   67   73   75   77   79   82   80   78   81    77 #>  [3512,]   67   73   75   77   79   82   80   78   81    77 #>  [3513,]   66   72   74   76   78   81   79   77   80    76 #>  [3514,]   67   73   76   77   79   82   80   78   81    77 #>  [3515,]   67   73   76   77   79   82   80   78   81    77 #>  [3516,]   66   72   74   76   78   81   79   77   80    76 #>  [3517,]   67   73   76   77   79   82   80   78   81    77 #>  [3518,]   67   73   75   77   79   82   80   78   81    77 #>  [3519,]   67   73   75   77   79   82   80   78   81    77 #>  [3520,]   66   72   74   76   78   81   79   77   80    76 #>  [3521,]   67   73   76   77   79   82   80   78   81    77 #>  [3522,]   66   72   74   76   78   81   79   77   80    76 #>  [3523,]   67   73   75   77   79   82   80   78   81    77 #>  [3524,]   66   72   74   76   78   81   79   77   80    76 #>  [3525,]   66   72   74   76   78   81   79   77   80    76 #>  [3526,]   67   73   76   77   79   82   80   78   81    77 #>  [3527,]   67   73   76   77   79   82   80   78   81    77 #>  [3528,]   67   73   75   77   79   82   80   78   81    77 #>  [3529,]   67   73   76   77   79   82   80   78   81    77 #>  [3530,]   67   73   75   77   79   82   80   78   81    77 #>  [3531,]   67   73   75   77   79   82   80   78   81    77 #>  [3532,]   67   73   75   77   79   82   80   78   81    77 #>  [3533,]   67   73   76   77   79   82   80   78   81    77 #>  [3534,]   67   73   75   77   79   82   80   78   81    77 #>  [3535,]   67   73   76   77   79   82   80   78   81    77 #>  [3536,]   67   73   75   77   79   82   80   78   81    77 #>  [3537,]   67   73   76   77   79   82   80   78   81    77 #>  [3538,]   67   73   75   77   79   82   80   78   81    77 #>  [3539,]   66   72   74   76   78   81   79   77   80    76 #>  [3540,]   66   72   74   76   78   81   79   77   80    76 #>  [3541,]   67   73   76   77   79   82   80   78   81    77 #>  [3542,]   67   73   75   77   79   82   80   78   81    77 #>  [3543,]   67   73   75   77   79   82   80   78   81    77 #>  [3544,]   66   72   74   76   78   81   79   77   80    76 #>  [3545,]   66   72   74   76   78   81   79   77   80    76 #>  [3546,]   66   72   74   76   78   81   79   77   80    76 #>  [3547,]   67   73   75   77   79   82   80   78   81    77 #>  [3548,]   67   73   75   77   79   82   80   78   81    77 #>  [3549,]   66   72   74   76   78   81   79   77   80    76 #>  [3550,]   66   72   74   76   78   81   79   77   80    76 #>  [3551,]   67   73   75   77   79   82   80   78   81    77 #>  [3552,]   67   73   76   77   79   82   80   78   81    77 #>  [3553,]   66   72   74   76   78   81   79   77   80    76 #>  [3554,]   66   72   74   76   78   81   79   77   80    76 #>  [3555,]   66   72   74   76   78   81   79   77   80    76 #>  [3556,]   66   72   74   76   78   81   79   77   80    76 #>  [3557,]   67   73   75   77   79   82   80   78   81    77 #>  [3558,]   67   73   76   77   79   82   80   78   81    77 #>  [3559,]   66   72   74   76   78   81   79   77   80    76 #>  [3560,]   67   73   75   77   79   82   80   78   81    77 #>  [3561,]   67   73   76   77   79   82   80   78   81    77 #>  [3562,]   67   73   75   77   79   82   80   78   81    77 #>  [3563,]   66   72   74   76   78   81   79   77   80    76 #>  [3564,]   67   73   75   77   79   82   80   78   81    77 #>  [3565,]   66   72   74   76   78   81   79   77   80    76 #>  [3566,]   66   72   74   76   78   81   79   77   80    76 #>  [3567,]   67   73   75   77   79   82   80   78   81    77 #>  [3568,]   67   73   76   77   79   82   80   78   81    77 #>  [3569,]   67   73   75   77   79   82   80   78   81    77 #>  [3570,]   66   72   74   76   78   81   79   77   80    76 #>  [3571,]   67   73   76   77   79   82   80   78   81    77 #>  [3572,]   66   72   74   76   78   81   79   77   80    76 #>  [3573,]   67   73   76   77   79   82   80   78   81    77 #>  [3574,]   67   73   75   77   79   82   80   78   81    77 #>  [3575,]   67   73   75   77   79   82   80   78   81    77 #>  [3576,]   67   73   76   77   79   82   80   78   81    77 #>  [3577,]   67   73   76   77   79   82   80   78   81    77 #>  [3578,]   66   72   74   76   78   81   79   77   80    76 #>  [3579,]   67   73   76   77   79   82   80   78   81    77 #>  [3580,]   67   73   75   77   79   82   80   78   81    77 #>  [3581,]   67   73   76   77   79   82   80   78   81    77 #>  [3582,]   67   73   75   77   79   82   80   78   81    77 #>  [3583,]   67   73   76   77   79   82   80   78   81    77 #>  [3584,]   66   72   74   76   78   81   79   77   80    76 #>  [3585,]   67   73   75   77   79   82   80   78   81    77 #>  [3586,]   66   72   74   76   78   81   79   77   80    76 #>  [3587,]   67   73   75   77   79   82   80   78   81    77 #>  [3588,]   67   73   75   77   79   82   80   78   81    77 #>  [3589,]   66   72   74   76   78   81   79   77   80    76 #>  [3590,]   66   72   74   76   78   81   79   77   80    76 #>  [3591,]   67   73   75   77   79   82   80   78   81    77 #>  [3592,]   67   73   75   77   79   82   80   78   81    77 #>  [3593,]   67   73   76   77   79   82   80   78   81    77 #>  [3594,]   66   72   74   76   78   81   79   77   80    76 #>  [3595,]   67   73   75   77   79   82   80   78   81    77 #>  [3596,]   67   73   76   77   79   82   80   78   81    77 #>  [3597,]   67   73   75   77   79   82   80   78   81    77 #>  [3598,]   66   72   74   76   78   81   79   77   80    76 #>  [3599,]   67   73   76   77   79   82   80   78   81    77 #>  [3600,]   66   72   74   76   78   81   79   77   80    76 #>  [3601,]   69   75   78   79   81   83   81   79   82    80 #>  [3602,]   69   75   78   79   81   83   81   79   82    80 #>  [3603,]   68   74   77   78   80   84   82   80   83    78 #>  [3604,]   68   74   77   78   80   84   82   80   83    78 #>  [3605,]   68   74   77   78   80   85   83   80   83    78 #>  [3606,]   68   74   77   78   80   85   83   80   83    78 #>  [3607,]   69   75   78   79   81   83   81   79   82    79 #>  [3608,]   69   75   78   79   81   83   81   79   82    80 #>  [3609,]   68   74   77   78   80   85   83   80   83    78 #>  [3610,]   68   74   77   78   80   85   83   80   83    78 #>  [3611,]   68   74   77   78   80   85   83   80   83    78 #>  [3612,]   69   75   78   79   81   83   81   79   82    80 #>  [3613,]   69   75   78   79   81   83   81   79   82    80 #>  [3614,]   68   74   77   78   80   85   83   80   83    78 #>  [3615,]   69   75   78   79   81   83   81   79   82    80 #>  [3616,]   69   75   78   79   81   83   81   79   82    80 #>  [3617,]   69   75   78   79   81   83   81   79   82    80 #>  [3618,]   69   75   78   79   81   83   81   79   82    80 #>  [3619,]   69   75   78   79   81   83   81   79   82    80 #>  [3620,]   69   75   78   79   81   83   81   79   82    79 #>  [3621,]   68   74   77   78   80   85   83   80   83    78 #>  [3622,]   69   75   78   79   81   83   81   79   82    80 #>  [3623,]   69   75   78   79   81   83   81   79   82    79 #>  [3624,]   68   74   77   78   80   85   83   80   83    78 #>  [3625,]   68   74   77   78   80   84   82   80   83    78 #>  [3626,]   69   75   78   79   81   83   81   79   82    80 #>  [3627,]   69   75   78   79   81   83   81   79   82    80 #>  [3628,]   68   74   77   78   80   85   83   80   83    78 #>  [3629,]   69   75   78   79   81   83   81   79   82    80 #>  [3630,]   69   75   78   79   81   83   81   79   82    80 #>  [3631,]   68   74   77   78   80   84   82   80   83    78 #>  [3632,]   68   74   77   78   80   85   83   80   83    78 #>  [3633,]   69   75   78   79   81   83   81   79   82    80 #>  [3634,]   68   74   77   78   80   85   83   80   83    78 #>  [3635,]   68   74   77   78   80   85   83   80   83    78 #>  [3636,]   69   75   78   79   81   83   81   79   82    80 #>  [3637,]   69   75   78   79   81   83   81   79   82    79 #>  [3638,]   69   75   78   79   81   83   81   79   82    80 #>  [3639,]   68   74   77   78   80   85   83   80   83    78 #>  [3640,]   68   74   77   78   80   85   83   80   83    78 #>  [3641,]   69   75   78   79   81   83   81   79   82    80 #>  [3642,]   68   74   77   78   80   85   83   80   83    78 #>  [3643,]   69   75   78   79   81   83   81   79   82    80 #>  [3644,]   69   75   78   79   81   83   81   79   82    79 #>  [3645,]   69   75   78   79   81   83   81   79   82    80 #>  [3646,]   69   75   78   79   81   83   81   79   82    80 #>  [3647,]   68   74   77   78   80   84   82   80   83    78 #>  [3648,]   68   74   77   78   80   85   83   80   83    78 #>  [3649,]   69   75   78   79   81   83   81   79   82    80 #>  [3650,]   69   75   78   79   81   83   81   79   82    80 #>  [3651,]   69   75   78   79   81   83   81   79   82    80 #>  [3652,]   68   74   77   78   80   84   82   80   83    78 #>  [3653,]   69   75   78   79   81   83   81   79   82    79 #>  [3654,]   68   74   77   78   80   85   83   80   83    78 #>  [3655,]   69   75   78   79   81   83   81   79   82    79 #>  [3656,]   69   75   78   79   81   83   81   79   82    79 #>  [3657,]   68   74   77   78   80   84   82   80   83    78 #>  [3658,]   69   75   78   79   81   83   81   79   82    80 #>  [3659,]   69   75   78   79   81   83   81   79   82    80 #>  [3660,]   69   75   78   79   81   83   81   79   82    80 #>  [3661,]   69   75   78   79   81   83   81   79   82    80 #>  [3662,]   68   74   77   78   80   85   83   80   83    78 #>  [3663,]   69   75   78   79   81   83   81   79   82    80 #>  [3664,]   69   75   78   79   81   83   81   79   82    79 #>  [3665,]   68   74   77   78   80   85   83   80   83    78 #>  [3666,]   69   75   78   79   81   83   81   79   82    80 #>  [3667,]   68   74   77   78   80   85   83   80   83    78 #>  [3668,]   69   75   78   79   81   83   81   79   82    80 #>  [3669,]   69   75   78   79   81   83   81   79   82    80 #>  [3670,]   68   74   77   78   80   85   83   80   83    78 #>  [3671,]   69   75   78   79   81   83   81   79   82    80 #>  [3672,]   68   74   77   78   80   85   83   80   83    78 #>  [3673,]   68   74   77   78   80   85   83   80   83    78 #>  [3674,]   68   74   77   78   80   85   83   80   83    78 #>  [3675,]   69   75   78   79   81   83   81   79   82    80 #>  [3676,]   68   74   77   78   80   85   83   80   83    78 #>  [3677,]   69   75   78   79   81   83   81   79   82    80 #>  [3678,]   69   75   78   79   81   83   81   79   82    80 #>  [3679,]   68   74   77   78   80   85   83   80   83    78 #>  [3680,]   69   75   78   79   81   83   81   79   82    79 #>  [3681,]   69   75   78   79   81   83   81   79   82    80 #>  [3682,]   68   74   77   78   80   85   83   80   83    78 #>  [3683,]   69   75   78   79   81   83   81   79   82    80 #>  [3684,]   69   75   78   79   81   83   81   79   82    79 #>  [3685,]   69   75   78   79   81   83   81   79   82    79 #>  [3686,]   68   74   77   78   80   84   82   80   83    78 #>  [3687,]   69   75   78   79   81   83   81   79   82    80 #>  [3688,]   68   74   77   78   80   85   83   80   83    78 #>  [3689,]   68   74   77   78   80   85   83   80   83    78 #>  [3690,]   69   75   78   79   81   83   81   79   82    80 #>  [3691,]   68   74   77   78   80   85   83   80   83    78 #>  [3692,]   68   74   77   78   80   85   83   80   83    78 #>  [3693,]   69   75   78   79   81   83   81   79   82    80 #>  [3694,]   68   74   77   78   80   85   83   80   83    78 #>  [3695,]   69   75   78   79   81   83   81   79   82    80 #>  [3696,]   69   75   78   79   81   83   81   79   82    80 #>  [3697,]   69   75   78   79   81   83   81   79   82    80 #>  [3698,]   68   74   77   78   80   84   82   80   83    78 #>  [3699,]   69   75   78   79   81   83   81   79   82    79 #>  [3700,]   69   75   78   79   81   83   81   79   82    80 #>  [3701,]   70   76   79   81   82   86   84   83   85    81 #>  [3702,]   71   77   79   81   82   86   84   82   87    83 #>  [3703,]   70   76   79   81   82   86   84   82   86    82 #>  [3704,]   70   76   79   80   84   87   85   81   84    85 #>  [3705,]   71   77   79   81   82   86   84   82   86    82 #>  [3706,]   70   76   79   81   82   86   84   82   87    83 #>  [3707,]   71   77   79   81   82   86   84   82   86    82 #>  [3708,]   70   76   79   80   83   87   85   81   84    84 #>  [3709,]   71   77   79   80   84   87   85   81   84    85 #>  [3710,]   71   77   79   81   82   86   84   82   86    82 #>  [3711,]   70   76   79   80   84   87   85   81   84    84 #>  [3712,]   71   77   79   81   82   86   84   82   86    82 #>  [3713,]   71   77   79   80   83   87   85   81   84    84 #>  [3714,]   70   76   79   81   82   86   84   83   85    81 #>  [3715,]   70   76   79   81   82   86   84   83   85    81 #>  [3716,]   70   76   79   81   82   86   84   83   85    81 #>  [3717,]   71   77   79   80   83   87   85   81   84    84 #>  [3718,]   71   77   79   81   82   86   84   82   86    82 #>  [3719,]   70   76   79   81   82   86   84   82   86    82 #>  [3720,]   71   77   79   81   82   86   84   82   86    82 #>  [3721,]   71   77   79   81   82   86   84   83   85    81 #>  [3722,]   71   77   79   80   83   87   85   81   84    85 #>  [3723,]   71   77   79   81   82   86   84   82   86    82 #>  [3724,]   71   77   79   81   82   86   84   82   86    82 #>  [3725,]   71   77   79   81   82   86   84   82   86    82 #>  [3726,]   70   76   79   81   82   86   84   82   86    82 #>  [3727,]   71   77   79   80   84   87   85   81   84    84 #>  [3728,]   70   76   79   81   82   86   84   82   86    82 #>  [3729,]   71   77   79   81   82   86   84   83   85    81 #>  [3730,]   71   77   79   81   82   86   84   82   86    82 #>  [3731,]   71   77   79   81   82   86   84   82   86    82 #>  [3732,]   71   77   79   81   82   86   84   82   86    82 #>  [3733,]   71   77   79   81   82   86   84   83   85    81 #>  [3734,]   70   76   79   81   82   86   84   82   86    82 #>  [3735,]   70   76   79   80   83   87   85   81   84    84 #>  [3736,]   71   77   79   81   82   86   84   82   86    82 #>  [3737,]   70   76   79   81   82   86   84   82   86    82 #>  [3738,]   70   76   79   81   82   86   84   82   86    82 #>  [3739,]   71   77   79   81   82   86   84   82   86    82 #>  [3740,]   71   77   79   81   82   86   84   82   86    82 #>  [3741,]   71   77   79   81   82   86   84   83   85    81 #>  [3742,]   70   76   79   81   82   86   84   82   86    82 #>  [3743,]   71   77   79   80   83   87   85   81   84    84 #>  [3744,]   71   77   79   80   83   87   85   81   84    84 #>  [3745,]   70   76   79   81   82   86   84   82   86    82 #>  [3746,]   70   76   79   81   82   86   84   82   86    82 #>  [3747,]   71   77   79   81   82   86   84   82   86    82 #>  [3748,]   71   77   79   81   82   86   84   82   86    82 #>  [3749,]   70   76   79   80   83   87   85   81   84    84 #>  [3750,]   71   77   79   81   82   86   84   83   85    81 #>  [3751,]   71   77   79   81   82   86   84   82   86    82 #>  [3752,]   70   76   79   80   83   87   85   81   84    85 #>  [3753,]   71   77   79   81   82   86   84   82   86    82 #>  [3754,]   71   77   79   81   82   86   84   82   86    82 #>  [3755,]   70   76   79   80   83   87   85   81   84    85 #>  [3756,]   70   76   79   81   82   86   84   82   86    82 #>  [3757,]   70   76   79   81   82   86   84   82   86    82 #>  [3758,]   71   77   79   80   84   87   85   81   84    84 #>  [3759,]   70   76   79   81   82   86   84   83   85    81 #>  [3760,]   71   77   79   81   82   86   84   82   86    82 #>  [3761,]   71   77   79   81   82   86   84   82   87    83 #>  [3762,]   70   76   79   81   82   86   84   82   86    82 #>  [3763,]   71   77   79   81   82   86   84   82   86    82 #>  [3764,]   70   76   79   81   82   86   84   82   86    82 #>  [3765,]   70   76   79   81   82   86   84   82   86    82 #>  [3766,]   71   77   79   80   83   87   85   81   84    84 #>  [3767,]   70   76   79   81   82   86   84   82   86    82 #>  [3768,]   70   76   79   81   82   86   84   83   85    81 #>  [3769,]   70   76   79   81   82   86   84   82   86    82 #>  [3770,]   71   77   79   81   82   86   84   83   85    81 #>  [3771,]   71   77   79   81   82   86   84   82   86    82 #>  [3772,]   70   76   79   81   82   86   84   82   86    82 #>  [3773,]   70   76   79   81   82   86   84   83   85    81 #>  [3774,]   71   77   79   81   82   86   84   82   86    82 #>  [3775,]   71   77   79   81   82   86   84   82   86    82 #>  [3776,]   71   77   79   81   82   86   84   82   87    83 #>  [3777,]   70   76   79   81   82   86   84   82   87    83 #>  [3778,]   71   77   79   81   82   86   84   82   86    82 #>  [3779,]   70   76   79   80   83   87   85   81   84    84 #>  [3780,]   71   77   79   80   83   87   85   81   84    84 #>  [3781,]   71   77   79   80   83   87   85   81   84    84 #>  [3782,]   70   76   79   80   84   87   85   81   84    84 #>  [3783,]   71   77   79   80   83   87   85   81   84    84 #>  [3784,]   71   77   79   81   82   86   84   82   86    82 #>  [3785,]   70   76   79   81   82   86   84   82   86    82 #>  [3786,]   71   77   79   81   82   86   84   82   87    83 #>  [3787,]   71   77   79   80   83   87   85   81   84    84 #>  [3788,]   71   77   79   80   83   87   85   81   84    84 #>  [3789,]   70   76   79   80   83   87   85   81   84    84 #>  [3790,]   71   77   79   80   83   87   85   81   84    85 #>  [3791,]   70   76   79   81   82   86   84   82   86    82 #>  [3792,]   71   77   79   80   84   87   85   81   84    84 #>  [3793,]   71   77   79   81   82   86   84   82   87    83 #>  [3794,]   70   76   79   81   82   86   84   82   86    82 #>  [3795,]   71   77   79   80   83   87   85   81   84    84 #>  [3796,]   70   76   79   81   82   86   84   83   85    81 #>  [3797,]   70   76   79   81   82   86   84   82   86    82 #>  [3798,]   70   76   79   81   82   86   84   82   86    82 #>  [3799,]   71   77   79   80   83   87   85   81   84    84 #>  [3800,]   70   76   79   81   82   86   84   82   86    82 #>  [3801,]   73   79   81   83   86   88   87   85   89    87 #>  [3802,]   73   79   81   83   86   88   87   85   89    87 #>  [3803,]   72   78   80   82   85   88   87   85   89    87 #>  [3804,]   72   78   80   82   85   88   87   85   89    87 #>  [3805,]   72   78   80   82   85   88   87   85   89    87 #>  [3806,]   73   79   81   83   86   88   86   84   88    86 #>  [3807,]   73   79   81   83   86   88   87   85   89    87 #>  [3808,]   72   78   80   82   85   88   87   85   89    87 #>  [3809,]   72   78   80   82   85   88   87   85   89    87 #>  [3810,]   72   78   80   82   85   88   87   85   89    87 #>  [3811,]   73   79   81   83   86   88   87   85   89    87 #>  [3812,]   72   78   80   82   85   88   87   85   89    87 #>  [3813,]   73   79   81   83   86   88   87   85   89    87 #>  [3814,]   73   79   81   83   86   88   87   85   89    87 #>  [3815,]   73   79   81   83   86   88   87   85   89    87 #>  [3816,]   73   79   81   83   86   88   87   85   89    87 #>  [3817,]   73   79   81   83   86   88   87   85   89    87 #>  [3818,]   72   78   80   82   85   88   87   85   89    87 #>  [3819,]   73   79   81   83   86   88   87   85   89    87 #>  [3820,]   72   78   80   82   85   88   86   84   88    86 #>  [3821,]   73   79   81   83   86   88   86   84   88    86 #>  [3822,]   73   79   81   83   86   88   87   85   89    87 #>  [3823,]   72   78   80   82   85   88   87   85   89    87 #>  [3824,]   72   78   80   82   85   88   87   85   89    87 #>  [3825,]   73   79   81   83   86   88   86   84   88    86 #>  [3826,]   73   79   81   83   86   88   87   85   89    87 #>  [3827,]   73   79   81   83   86   88   87   85   89    87 #>  [3828,]   72   78   80   82   85   88   87   85   89    87 #>  [3829,]   73   79   81   83   86   88   87   85   89    87 #>  [3830,]   72   78   80   82   85   88   87   85   89    87 #>  [3831,]   72   78   80   82   85   88   87   85   89    87 #>  [3832,]   72   78   80   82   85   88   87   85   89    87 #>  [3833,]   73   79   81   83   86   88   87   85   89    87 #>  [3834,]   72   78   80   82   85   88   87   85   89    87 #>  [3835,]   73   79   81   83   86   88   86   84   88    86 #>  [3836,]   72   78   80   82   85   88   87   85   89    87 #>  [3837,]   73   79   81   83   86   88   87   85   89    87 #>  [3838,]   72   78   80   82   85   88   87   85   89    87 #>  [3839,]   72   78   80   82   85   88   87   85   89    87 #>  [3840,]   73   79   81   83   86   88   87   85   89    87 #>  [3841,]   73   79   81   83   86   88   87   85   89    87 #>  [3842,]   72   78   80   82   85   88   86   84   88    86 #>  [3843,]   72   78   80   82   85   88   87   85   89    87 #>  [3844,]   73   79   81   83   86   88   86   84   88    86 #>  [3845,]   72   78   80   82   85   88   87   85   89    87 #>  [3846,]   73   79   81   83   86   88   87   85   89    87 #>  [3847,]   73   79   81   83   86   88   87   85   89    87 #>  [3848,]   72   78   80   82   85   88   87   85   89    87 #>  [3849,]   72   78   80   82   85   88   87   85   89    87 #>  [3850,]   73   79   81   83   86   88   87   85   89    87 #>  [3851,]   72   78   80   82   85   88   87   85   89    87 #>  [3852,]   73   79   81   83   86   88   87   85   89    87 #>  [3853,]   72   78   80   82   85   88   86   84   88    86 #>  [3854,]   73   79   81   83   86   88   87   85   89    87 #>  [3855,]   73   79   81   83   86   88   87   85   89    87 #>  [3856,]   72   78   80   82   85   88   86   84   88    86 #>  [3857,]   72   78   80   82   85   88   87   85   89    87 #>  [3858,]   73   79   81   83   86   88   87   85   89    87 #>  [3859,]   73   79   81   83   86   88   87   85   89    87 #>  [3860,]   72   78   80   82   85   88   87   85   89    87 #>  [3861,]   73   79   81   83   86   88   87   85   89    87 #>  [3862,]   72   78   80   82   85   88   87   85   89    87 #>  [3863,]   73   79   81   83   86   88   87   85   89    87 #>  [3864,]   72   78   80   82   85   88   87   85   89    87 #>  [3865,]   72   78   80   82   85   88   86   84   88    86 #>  [3866,]   72   78   80   82   85   88   87   85   89    87 #>  [3867,]   72   78   80   82   85   88   87   85   89    87 #>  [3868,]   73   79   81   83   86   88   87   85   89    87 #>  [3869,]   73   79   81   83   86   88   87   85   89    87 #>  [3870,]   73   79   81   83   86   88   87   85   89    87 #>  [3871,]   73   79   81   83   86   88   87   85   89    87 #>  [3872,]   72   78   80   82   85   88   87   85   89    87 #>  [3873,]   73   79   81   83   86   88   86   84   88    86 #>  [3874,]   73   79   81   83   86   88   86   84   88    86 #>  [3875,]   73   79   81   83   86   88   87   85   89    87 #>  [3876,]   73   79   81   83   86   88   87   85   89    87 #>  [3877,]   73   79   81   83   86   88   87   85   89    87 #>  [3878,]   72   78   80   82   85   88   87   85   89    87 #>  [3879,]   73   79   81   83   86   88   87   85   89    87 #>  [3880,]   73   79   81   83   86   88   86   84   88    86 #>  [3881,]   73   79   81   83   86   88   87   85   89    87 #>  [3882,]   73   79   81   83   86   88   86   84   88    86 #>  [3883,]   73   79   81   83   86   88   87   85   89    87 #>  [3884,]   73   79   81   83   86   88   86   84   88    86 #>  [3885,]   72   78   80   82   85   88   86   84   88    86 #>  [3886,]   73   79   81   83   86   88   86   84   88    86 #>  [3887,]   73   79   81   83   86   88   87   85   89    87 #>  [3888,]   72   78   80   82   85   88   87   85   89    87 #>  [3889,]   72   78   80   82   85   88   86   84   88    86 #>  [3890,]   73   79   81   83   86   88   87   85   89    87 #>  [3891,]   72   78   80   82   85   88   87   85   89    87 #>  [3892,]   73   79   81   83   86   88   87   85   89    87 #>  [3893,]   73   79   81   83   86   88   87   85   89    87 #>  [3894,]   73   79   81   83   86   88   86   84   88    86 #>  [3895,]   72   78   80   82   85   88   87   85   89    87 #>  [3896,]   73   79   81   83   86   88   87   85   89    87 #>  [3897,]   73   79   81   83   86   88   87   85   89    87 #>  [3898,]   73   79   81   83   86   88   87   85   89    87 #>  [3899,]   73   79   81   83   86   88   86   84   88    86 #>  [3900,]   73   79   81   83   86   88   87   85   89    87 #>  [3901,]   75   81   83   86   88   90   89   87   91    89 #>  [3902,]   75   81   83   85   88   90   89   87   91    89 #>  [3903,]   75   81   83   86   88   90   89   87   91    89 #>  [3904,]   74   80   82   84   87   89   88   86   90    88 #>  [3905,]   75   81   83   86   88   90   89   87   91    89 #>  [3906,]   75   81   83   85   88   90   89   87   91    89 #>  [3907,]   75   81   83   86   88   90   89   87   91    89 #>  [3908,]   74   80   82   84   87   89   88   86   90    88 #>  [3909,]   74   80   82   84   87   89   88   86   90    88 #>  [3910,]   75   81   83   86   88   90   89   87   91    89 #>  [3911,]   74   80   82   84   87   89   88   86   90    88 #>  [3912,]   75   81   83   85   88   90   89   87   91    89 #>  [3913,]   74   80   82   84   87   89   88   86   90    88 #>  [3914,]   75   81   83   86   88   90   89   87   91    89 #>  [3915,]   75   81   83   85   88   90   89   87   91    89 #>  [3916,]   75   81   83   86   88   90   89   87   91    89 #>  [3917,]   74   80   82   84   87   89   88   86   90    88 #>  [3918,]   75   81   83   86   88   90   89   87   91    89 #>  [3919,]   75   81   83   86   88   90   89   87   91    89 #>  [3920,]   75   81   83   86   88   90   89   87   91    89 #>  [3921,]   75   81   83   86   88   90   89   87   91    89 #>  [3922,]   74   80   82   84   87   89   88   86   90    88 #>  [3923,]   75   81   83   85   88   90   89   87   91    89 #>  [3924,]   75   81   83   86   88   90   89   87   91    89 #>  [3925,]   75   81   83   86   88   90   89   87   91    89 #>  [3926,]   75   81   83   86   88   90   89   87   91    89 #>  [3927,]   74   80   82   84   87   89   88   86   90    88 #>  [3928,]   75   81   83   86   88   90   89   87   91    89 #>  [3929,]   75   81   83   85   88   90   89   87   91    89 #>  [3930,]   75   81   83   85   88   90   89   87   91    89 #>  [3931,]   75   81   83   85   88   90   89   87   91    89 #>  [3932,]   75   81   83   86   88   90   89   87   91    89 #>  [3933,]   75   81   83   86   88   90   89   87   91    89 #>  [3934,]   75   81   83   85   88   90   89   87   91    89 #>  [3935,]   74   80   82   84   87   89   88   86   90    88 #>  [3936,]   75   81   83   86   88   90   89   87   91    89 #>  [3937,]   75   81   83   85   88   90   89   87   91    89 #>  [3938,]   75   81   83   86   88   90   89   87   91    89 #>  [3939,]   75   81   83   86   88   90   89   87   91    89 #>  [3940,]   75   81   83   86   88   90   89   87   91    89 #>  [3941,]   75   81   83   86   88   90   89   87   91    89 #>  [3942,]   75   81   83   85   88   90   89   87   91    89 #>  [3943,]   75   81   83   85   88   90   89   87   91    89 #>  [3944,]   74   80   82   84   87   89   88   86   90    88 #>  [3945,]   75   81   83   86   88   90   89   87   91    89 #>  [3946,]   75   81   83   86   88   90   89   87   91    89 #>  [3947,]   75   81   83   85   88   90   89   87   91    89 #>  [3948,]   75   81   83   85   88   90   89   87   91    89 #>  [3949,]   74   80   82   84   87   89   88   86   90    88 #>  [3950,]   75   81   83   86   88   90   89   87   91    89 #>  [3951,]   75   81   83   86   88   90   89   87   91    89 #>  [3952,]   74   80   82   84   87   89   88   86   90    88 #>  [3953,]   75   81   83   86   88   90   89   87   91    89 #>  [3954,]   75   81   83   86   88   90   89   87   91    89 #>  [3955,]   74   80   82   84   87   89   88   86   90    88 #>  [3956,]   75   81   83   85   88   90   89   87   91    89 #>  [3957,]   75   81   83   86   88   90   89   87   91    89 #>  [3958,]   74   80   82   84   87   89   88   86   90    88 #>  [3959,]   75   81   83   86   88   90   89   87   91    89 #>  [3960,]   75   81   83   85   88   90   89   87   91    89 #>  [3961,]   75   81   83   85   88   90   89   87   91    89 #>  [3962,]   75   81   83   86   88   90   89   87   91    89 #>  [3963,]   75   81   83   85   88   90   89   87   91    89 #>  [3964,]   75   81   83   85   88   90   89   87   91    89 #>  [3965,]   75   81   83   85   88   90   89   87   91    89 #>  [3966,]   74   80   82   84   87   89   88   86   90    88 #>  [3967,]   75   81   83   86   88   90   89   87   91    89 #>  [3968,]   75   81   83   86   88   90   89   87   91    89 #>  [3969,]   75   81   83   86   88   90   89   87   91    89 #>  [3970,]   75   81   83   85   88   90   89   87   91    89 #>  [3971,]   75   81   83   86   88   90   89   87   91    89 #>  [3972,]   75   81   83   86   88   90   89   87   91    89 #>  [3973,]   75   81   83   86   88   90   89   87   91    89 #>  [3974,]   75   81   83   86   88   90   89   87   91    89 #>  [3975,]   75   81   83   85   88   90   89   87   91    89 #>  [3976,]   75   81   83   86   88   90   89   87   91    89 #>  [3977,]   75   81   83   86   88   90   89   87   91    89 #>  [3978,]   75   81   83   85   88   90   89   87   91    89 #>  [3979,]   75   81   83   85   88   90   89   87   91    89 #>  [3980,]   75   81   83   86   88   90   89   87   91    89 #>  [3981,]   74   80   82   84   87   89   88   86   90    88 #>  [3982,]   74   80   82   84   87   89   88   86   90    88 #>  [3983,]   75   81   83   86   88   90   89   87   91    89 #>  [3984,]   75   81   83   86   88   90   89   87   91    89 #>  [3985,]   75   81   83   86   88   90   89   87   91    89 #>  [3986,]   75   81   83   86   88   90   89   87   91    89 #>  [3987,]   74   80   82   84   87   89   88   86   90    88 #>  [3988,]   75   81   83   86   88   90   89   87   91    89 #>  [3989,]   75   81   83   86   88   90   89   87   91    89 #>  [3990,]   74   80   82   84   87   89   88   86   90    88 #>  [3991,]   75   81   83   86   88   90   89   87   91    89 #>  [3992,]   74   80   82   84   87   89   88   86   90    88 #>  [3993,]   75   81   83   86   88   90   89   87   91    89 #>  [3994,]   75   81   83   85   88   90   89   87   91    89 #>  [3995,]   74   80   82   84   87   89   88   86   90    88 #>  [3996,]   75   81   83   86   88   90   89   87   91    89 #>  [3997,]   75   81   83   86   88   90   89   87   91    89 #>  [3998,]   75   81   83   86   88   90   89   87   91    89 #>  [3999,]   74   80   82   84   87   89   88   86   90    88 #>  [4000,]   75   81   83   85   88   90   89   87   91    89 #>  [4001,]   76   83   85   88   90   92   90   90   94    90 #>  [4002,]   76   82   84   87   89   91   92   89   93    92 #>  [4003,]   76   82   84   87   89   91   91   88   92    92 #>  [4004,]   76   82   84   87   89   91   92   89   93    92 #>  [4005,]   76   83   85   88   90   92   90   90   94    90 #>  [4006,]   76   82   84   87   89   91   91   88   92    92 #>  [4007,]   76   82   84   87   89   91   91   88   92    92 #>  [4008,]   76   82   84   87   89   91   92   89   93    92 #>  [4009,]   76   83   85   88   90   92   90   90   94    90 #>  [4010,]   76   82   84   87   89   91   92   89   93    92 #>  [4011,]   76   83   85   88   90   92   90   90   94    90 #>  [4012,]   76   82   84   87   89   91   92   89   93    92 #>  [4013,]   76   83   85   88   90   92   90   90   94    90 #>  [4014,]   76   82   84   87   89   91   92   89   93    92 #>  [4015,]   76   82   84   87   89   91   92   89   93    92 #>  [4016,]   76   82   84   87   89   91   92   89   93    92 #>  [4017,]   76   83   85   88   90   92   90   90   94    90 #>  [4018,]   76   83   85   88   90   92   90   90   94    90 #>  [4019,]   76   82   84   87   89   91   92   89   93    92 #>  [4020,]   76   83   85   88   90   92   90   90   94    90 #>  [4021,]   76   83   85   88   90   92   90   90   94    90 #>  [4022,]   76   82   84   87   89   91   92   89   93    92 #>  [4023,]   76   82   84   87   89   91   91   88   92    92 #>  [4024,]   76   82   84   87   89   91   92   89   93    92 #>  [4025,]   76   82   84   87   89   91   91   88   92    92 #>  [4026,]   76   82   84   87   89   91   92   89   93    92 #>  [4027,]   76   83   85   88   90   92   90   90   94    90 #>  [4028,]   76   83   85   88   90   92   90   91   95    91 #>  [4029,]   76   83   85   88   90   92   90   90   94    90 #>  [4030,]   76   82   84   87   89   91   92   89   93    92 #>  [4031,]   76   82   84   87   89   91   92   89   93    92 #>  [4032,]   76   82   84   87   89   91   92   89   93    92 #>  [4033,]   76   83   85   88   90   92   90   91   95    91 #>  [4034,]   76   82   84   87   89   91   91   88   92    92 #>  [4035,]   76   82   84   87   89   91   91   88   92    92 #>  [4036,]   76   83   85   88   90   92   90   90   94    90 #>  [4037,]   76   82   84   87   89   91   91   88   92    92 #>  [4038,]   76   83   85   88   90   92   90   90   94    90 #>  [4039,]   76   83   85   88   90   92   90   90   94    90 #>  [4040,]   76   82   84   87   89   91   92   89   93    92 #>  [4041,]   76   83   85   88   90   92   90   90   94    90 #>  [4042,]   76   83   85   88   90   92   90   90   94    90 #>  [4043,]   76   82   84   87   89   91   92   89   93    92 #>  [4044,]   76   82   84   87   89   91   91   88   92    92 #>  [4045,]   76   82   84   87   89   91   92   89   93    92 #>  [4046,]   76   82   84   87   89   91   92   89   93    92 #>  [4047,]   76   82   84   87   89   91   92   89   93    92 #>  [4048,]   76   82   84   87   89   91   92   89   93    92 #>  [4049,]   76   82   84   87   89   91   92   89   93    92 #>  [4050,]   76   82   84   87   89   91   92   89   93    92 #>  [4051,]   76   83   85   88   90   92   90   90   94    90 #>  [4052,]   76   82   84   87   89   91   92   89   93    92 #>  [4053,]   76   83   85   88   90   92   90   90   94    90 #>  [4054,]   76   83   85   88   90   92   90   90   94    90 #>  [4055,]   76   82   84   87   89   91   92   89   93    92 #>  [4056,]   76   83   85   88   90   92   90   90   94    90 #>  [4057,]   76   82   84   87   89   91   91   88   92    92 #>  [4058,]   76   83   85   88   90   92   90   90   94    90 #>  [4059,]   76   82   84   87   89   91   92   89   93    92 #>  [4060,]   76   82   84   87   89   91   92   89   93    92 #>  [4061,]   76   83   85   88   90   92   90   90   94    90 #>  [4062,]   76   83   85   88   90   92   90   90   94    90 #>  [4063,]   76   82   84   87   89   91   92   89   93    92 #>  [4064,]   76   83   85   88   90   92   90   90   94    90 #>  [4065,]   76   83   85   88   90   92   90   91   95    91 #>  [4066,]   76   83   85   88   90   92   90   90   94    90 #>  [4067,]   76   82   84   87   89   91   92   89   93    92 #>  [4068,]   76   82   84   87   89   91   92   89   93    92 #>  [4069,]   76   82   84   87   89   91   92   89   93    92 #>  [4070,]   76   83   85   88   90   92   90   91   95    91 #>  [4071,]   76   82   84   87   89   91   92   89   93    92 #>  [4072,]   76   82   84   87   89   91   92   89   93    92 #>  [4073,]   76   82   84   87   89   91   91   88   92    92 #>  [4074,]   76   82   84   87   89   91   91   88   92    92 #>  [4075,]   76   82   84   87   89   91   92   89   93    92 #>  [4076,]   76   82   84   87   89   91   92   89   93    92 #>  [4077,]   76   83   85   88   90   92   90   90   94    90 #>  [4078,]   76   82   84   87   89   91   92   89   93    92 #>  [4079,]   76   83   85   88   90   92   90   90   94    90 #>  [4080,]   76   82   84   87   89   91   91   88   92    92 #>  [4081,]   76   82   84   87   89   91   92   89   93    92 #>  [4082,]   76   83   85   88   90   92   90   90   94    90 #>  [4083,]   76   83   85   88   90   92   90   90   94    90 #>  [4084,]   76   83   85   88   90   92   90   90   94    90 #>  [4085,]   76   83   85   88   90   92   90   90   94    90 #>  [4086,]   76   82   84   87   89   91   91   88   92    92 #>  [4087,]   76   83   85   88   90   92   90   90   94    90 #>  [4088,]   76   82   84   87   89   91   92   89   93    92 #>  [4089,]   76   83   85   88   90   92   90   90   94    90 #>  [4090,]   76   83   85   88   90   92   90   90   94    90 #>  [4091,]   76   83   85   88   90   92   90   90   94    90 #>  [4092,]   76   82   84   87   89   91   92   89   93    92 #>  [4093,]   76   83   85   88   90   92   90   91   95    91 #>  [4094,]   76   83   85   88   90   92   90   90   94    90 #>  [4095,]   76   82   84   87   89   91   92   89   93    92 #>  [4096,]   76   82   84   87   89   91   92   89   93    92 #>  [4097,]   76   82   84   87   89   91   92   89   93    92 #>  [4098,]   76   82   84   87   89   91   92   89   93    92 #>  [4099,]   76   83   85   88   90   92   90   90   94    90 #>  [4100,]   76   82   84   87   89   91   92   89   93    92 #>  [4101,]   78   85   87   90   92   94   94   93   97    94 #>  [4102,]   78   85   88   90   92   94   94   93   97    94 #>  [4103,]   78   85   87   90   92   94   94   93   97    94 #>  [4104,]   77   84   86   89   91   93   93   92   96    93 #>  [4105,]   78   85   88   90   92   94   94   93   97    94 #>  [4106,]   78   85   87   90   92   94   94   93   97    94 #>  [4107,]   78   85   88   90   92   94   94   93   97    94 #>  [4108,]   77   84   86   89   91   93   93   92   96    93 #>  [4109,]   77   84   86   89   91   93   93   92   96    93 #>  [4110,]   77   84   86   89   91   93   93   92   96    93 #>  [4111,]   78   85   87   90   92   94   94   93   97    94 #>  [4112,]   78   85   88   90   92   94   94   93   97    94 #>  [4113,]   78   85   88   90   92   94   94   93   97    94 #>  [4114,]   78   85   87   90   92   94   94   93   97    94 #>  [4115,]   78   85   88   90   92   94   94   93   97    94 #>  [4116,]   78   85   87   90   92   94   94   93   97    94 #>  [4117,]   78   85   88   90   92   94   94   93   97    94 #>  [4118,]   78   85   88   90   92   94   94   93   97    94 #>  [4119,]   78   85   87   90   92   94   94   93   97    94 #>  [4120,]   77   84   86   89   91   93   93   92   96    93 #>  [4121,]   78   85   88   90   92   94   94   93   97    94 #>  [4122,]   78   85   88   90   92   94   94   93   97    94 #>  [4123,]   78   85   88   90   92   94   94   93   97    94 #>  [4124,]   78   85   88   90   92   94   94   93   97    94 #>  [4125,]   78   85   88   90   92   94   94   93   97    94 #>  [4126,]   78   85   87   90   92   94   94   93   97    94 #>  [4127,]   78   85   88   90   92   94   94   93   97    94 #>  [4128,]   78   85   87   90   92   94   94   93   97    94 #>  [4129,]   78   85   88   90   92   94   94   93   97    94 #>  [4130,]   77   84   86   89   91   93   93   92   96    93 #>  [4131,]   78   85   88   90   92   94   94   93   97    94 #>  [4132,]   78   85   88   90   92   94   94   93   97    94 #>  [4133,]   78   85   88   90   92   94   94   93   97    94 #>  [4134,]   78   85   87   90   92   94   94   93   97    94 #>  [4135,]   78   85   87   90   92   94   94   93   97    94 #>  [4136,]   78   85   88   90   92   94   94   93   97    94 #>  [4137,]   78   85   87   90   92   94   94   93   97    94 #>  [4138,]   78   85   87   90   92   94   94   93   97    94 #>  [4139,]   78   85   88   90   92   94   94   93   97    94 #>  [4140,]   78   85   88   90   92   94   94   93   97    94 #>  [4141,]   78   85   88   90   92   94   94   93   97    94 #>  [4142,]   78   85   87   90   92   94   94   93   97    94 #>  [4143,]   77   84   86   89   91   93   93   92   96    93 #>  [4144,]   78   85   88   90   92   94   94   93   97    94 #>  [4145,]   78   85   87   90   92   94   94   93   97    94 #>  [4146,]   78   85   88   90   92   94   94   93   97    94 #>  [4147,]   78   85   88   90   92   94   94   93   97    94 #>  [4148,]   78   85   88   90   92   94   94   93   97    94 #>  [4149,]   78   85   87   90   92   94   94   93   97    94 #>  [4150,]   78   85   88   90   92   94   94   93   97    94 #>  [4151,]   77   84   86   89   91   93   93   92   96    93 #>  [4152,]   78   85   87   90   92   94   94   93   97    94 #>  [4153,]   77   84   86   89   91   93   93   92   96    93 #>  [4154,]   78   85   88   90   92   94   94   93   97    94 #>  [4155,]   78   85   88   90   92   94   94   93   97    94 #>  [4156,]   77   84   86   89   91   93   93   92   96    93 #>  [4157,]   78   85   88   90   92   94   94   93   97    94 #>  [4158,]   78   85   88   90   92   94   94   93   97    94 #>  [4159,]   78   85   88   90   92   94   94   93   97    94 #>  [4160,]   77   84   86   89   91   93   93   92   96    93 #>  [4161,]   78   85   88   90   92   94   94   93   97    94 #>  [4162,]   78   85   88   90   92   94   94   93   97    94 #>  [4163,]   78   85   88   90   92   94   94   93   97    94 #>  [4164,]   77   84   86   89   91   93   93   92   96    93 #>  [4165,]   78   85   88   90   92   94   94   93   97    94 #>  [4166,]   77   84   86   89   91   93   93   92   96    93 #>  [4167,]   77   84   86   89   91   93   93   92   96    93 #>  [4168,]   78   85   87   90   92   94   94   93   97    94 #>  [4169,]   78   85   88   90   92   94   94   93   97    94 #>  [4170,]   78   85   88   90   92   94   94   93   97    94 #>  [4171,]   78   85   88   90   92   94   94   93   97    94 #>  [4172,]   78   85   87   90   92   94   94   93   97    94 #>  [4173,]   78   85   87   90   92   94   94   93   97    94 #>  [4174,]   78   85   88   90   92   94   94   93   97    94 #>  [4175,]   78   85   88   90   92   94   94   93   97    94 #>  [4176,]   78   85   88   90   92   94   94   93   97    94 #>  [4177,]   78   85   87   90   92   94   94   93   97    94 #>  [4178,]   77   84   86   89   91   93   93   92   96    93 #>  [4179,]   78   85   88   90   92   94   94   93   97    94 #>  [4180,]   78   85   88   90   92   94   94   93   97    94 #>  [4181,]   78   85   88   90   92   94   94   93   97    94 #>  [4182,]   78   85   88   90   92   94   94   93   97    94 #>  [4183,]   78   85   88   90   92   94   94   93   97    94 #>  [4184,]   78   85   88   90   92   94   94   93   97    94 #>  [4185,]   77   84   86   89   91   93   93   92   96    93 #>  [4186,]   78   85   88   90   92   94   94   93   97    94 #>  [4187,]   78   85   88   90   92   94   94   93   97    94 #>  [4188,]   78   85   88   90   92   94   94   93   97    94 #>  [4189,]   77   84   86   89   91   93   93   92   96    93 #>  [4190,]   78   85   88   90   92   94   94   93   97    94 #>  [4191,]   77   84   86   89   91   93   93   92   96    93 #>  [4192,]   78   85   88   90   92   94   94   93   97    94 #>  [4193,]   78   85   88   90   92   94   94   93   97    94 #>  [4194,]   78   85   87   90   92   94   94   93   97    94 #>  [4195,]   77   84   86   89   91   93   93   92   96    93 #>  [4196,]   78   85   87   90   92   94   94   93   97    94 #>  [4197,]   78   85   87   90   92   94   94   93   97    94 #>  [4198,]   78   85   88   90   92   94   94   93   97    94 #>  [4199,]   78   85   88   90   92   94   94   93   97    94 #>  [4200,]   78   85   87   90   92   94   94   93   97    94 #>  [4201,]   80   87   90   92   94   96   96   95   99    96 #>  [4202,]   80   87   90   92   94   96   96   95   99    96 #>  [4203,]   79   86   89   91   93   95   95   94   98    95 #>  [4204,]   79   86   89   91   93   95   95   94   98    95 #>  [4205,]   79   86   89   91   93   95   95   94   98    95 #>  [4206,]   80   87   90   92   94   96   96   95   99    96 #>  [4207,]   79   86   89   91   93   95   95   94   98    95 #>  [4208,]   79   86   89   91   93   95   95   94   98    95 #>  [4209,]   79   86   89   91   93   95   95   94   98    95 #>  [4210,]   79   86   89   91   93   95   95   94   98    95 #>  [4211,]   79   86   89   91   93   95   95   94   98    95 #>  [4212,]   79   86   89   91   93   95   95   94   98    95 #>  [4213,]   80   87   90   92   94   96   96   95   99    96 #>  [4214,]   80   87   90   92   94   96   96   95   99    96 #>  [4215,]   80   87   90   92   94   96   96   95   99    96 #>  [4216,]   80   87   90   92   94   96   96   95   99    96 #>  [4217,]   80   87   90   92   94   96   96   95   99    96 #>  [4218,]   79   86   89   91   93   95   95   94   98    95 #>  [4219,]   79   86   89   91   93   95   95   94   98    95 #>  [4220,]   79   86   89   91   93   95   95   94   98    95 #>  [4221,]   80   87   90   92   94   96   96   95   99    96 #>  [4222,]   80   87   90   92   94   96   96   95   99    96 #>  [4223,]   79   86   89   91   93   95   95   94   98    95 #>  [4224,]   79   86   89   91   93   95   95   94   98    95 #>  [4225,]   79   86   89   91   93   95   95   94   98    95 #>  [4226,]   80   87   90   92   94   96   96   95   99    96 #>  [4227,]   80   87   90   92   94   96   96   95   99    96 #>  [4228,]   79   86   89   91   93   95   95   94   98    95 #>  [4229,]   80   87   90   92   94   96   96   95   99    96 #>  [4230,]   79   86   89   91   93   95   95   94   98    95 #>  [4231,]   79   86   89   91   93   95   95   94   98    95 #>  [4232,]   79   86   89   91   93   95   95   94   98    95 #>  [4233,]   80   87   90   92   94   96   96   95   99    96 #>  [4234,]   79   86   89   91   93   95   95   94   98    95 #>  [4235,]   80   87   90   92   94   96   96   95   99    96 #>  [4236,]   79   86   89   91   93   95   95   94   98    95 #>  [4237,]   80   87   90   92   94   96   96   95   99    96 #>  [4238,]   79   86   89   91   93   95   95   94   98    95 #>  [4239,]   79   86   89   91   93   95   95   94   98    95 #>  [4240,]   79   86   89   91   93   95   95   94   98    95 #>  [4241,]   80   87   90   92   94   96   96   95   99    96 #>  [4242,]   79   86   89   91   93   95   95   94   98    95 #>  [4243,]   79   86   89   91   93   95   95   94   98    95 #>  [4244,]   80   87   90   92   94   96   96   95   99    96 #>  [4245,]   79   86   89   91   93   95   95   94   98    95 #>  [4246,]   79   86   89   91   93   95   95   94   98    95 #>  [4247,]   80   87   90   92   94   96   96   95   99    96 #>  [4248,]   79   86   89   91   93   95   95   94   98    95 #>  [4249,]   79   86   89   91   93   95   95   94   98    95 #>  [4250,]   80   87   90   92   94   96   96   95   99    96 #>  [4251,]   79   86   89   91   93   95   95   94   98    95 #>  [4252,]   80   87   90   92   94   96   96   95   99    96 #>  [4253,]   79   86   89   91   93   95   95   94   98    95 #>  [4254,]   79   86   89   91   93   95   95   94   98    95 #>  [4255,]   79   86   89   91   93   95   95   94   98    95 #>  [4256,]   79   86   89   91   93   95   95   94   98    95 #>  [4257,]   79   86   89   91   93   95   95   94   98    95 #>  [4258,]   80   87   90   92   94   96   96   95   99    96 #>  [4259,]   80   87   90   92   94   96   96   95   99    96 #>  [4260,]   79   86   89   91   93   95   95   94   98    95 #>  [4261,]   80   87   90   92   94   96   96   95   99    96 #>  [4262,]   79   86   89   91   93   95   95   94   98    95 #>  [4263,]   79   86   89   91   93   95   95   94   98    95 #>  [4264,]   79   86   89   91   93   95   95   94   98    95 #>  [4265,]   79   86   89   91   93   95   95   94   98    95 #>  [4266,]   79   86   89   91   93   95   95   94   98    95 #>  [4267,]   79   86   89   91   93   95   95   94   98    95 #>  [4268,]   80   87   90   92   94   96   96   95   99    96 #>  [4269,]   79   86   89   91   93   95   95   94   98    95 #>  [4270,]   80   87   90   92   94   96   96   95   99    96 #>  [4271,]   80   87   90   92   94   96   96   95   99    96 #>  [4272,]   79   86   89   91   93   95   95   94   98    95 #>  [4273,]   80   87   90   92   94   96   96   95   99    96 #>  [4274,]   79   86   89   91   93   95   95   94   98    95 #>  [4275,]   79   86   89   91   93   95   95   94   98    95 #>  [4276,]   80   87   90   92   94   96   96   95   99    96 #>  [4277,]   80   87   90   92   94   96   96   95   99    96 #>  [4278,]   79   86   89   91   93   95   95   94   98    95 #>  [4279,]   80   87   90   92   94   96   96   95   99    96 #>  [4280,]   79   86   89   91   93   95   95   94   98    95 #>  [4281,]   80   87   90   92   94   96   96   95   99    96 #>  [4282,]   79   86   89   91   93   95   95   94   98    95 #>  [4283,]   80   87   90   92   94   96   96   95   99    96 #>  [4284,]   79   86   89   91   93   95   95   94   98    95 #>  [4285,]   79   86   89   91   93   95   95   94   98    95 #>  [4286,]   80   87   90   92   94   96   96   95   99    96 #>  [4287,]   79   86   89   91   93   95   95   94   98    95 #>  [4288,]   79   86   89   91   93   95   95   94   98    95 #>  [4289,]   79   86   89   91   93   95   95   94   98    95 #>  [4290,]   80   87   90   92   94   96   96   95   99    96 #>  [4291,]   79   86   89   91   93   95   95   94   98    95 #>  [4292,]   79   86   89   91   93   95   95   94   98    95 #>  [4293,]   80   87   90   92   94   96   96   95   99    96 #>  [4294,]   80   87   90   92   94   96   96   95   99    96 #>  [4295,]   79   86   89   91   93   95   95   94   98    95 #>  [4296,]   80   87   90   92   94   96   96   95   99    96 #>  [4297,]   79   86   89   91   93   95   95   94   98    95 #>  [4298,]   79   86   89   91   93   95   95   94   98    95 #>  [4299,]   80   87   90   92   94   96   96   95   99    96 #>  [4300,]   80   87   90   92   94   96   96   95   99    96 #>  [4301,]   82   88   93   93   95   97   98   97  101    98 #>  [4302,]   82   88   94   94   96   98   98   98  101    98 #>  [4303,]   81   89   91   95   97   99   97   96  100    97 #>  [4304,]   82   88   93   93   95   97   98   97  101    98 #>  [4305,]   82   88   94   94   96   98   98   98  101    98 #>  [4306,]   82   88   93   93   95   97   98   97  101    98 #>  [4307,]   82   88   93   93   95   97   98   98  101    98 #>  [4308,]   82   88   93   93   95   97   98   97  101    98 #>  [4309,]   82   88   94   94   96   98   98   98  101    98 #>  [4310,]   81   89   91   95   97   99   97   96  100    97 #>  [4311,]   81   90   92   95   97   99   97   96  100    97 #>  [4312,]   82   88   94   94   96   98   98   98  101    98 #>  [4313,]   82   88   94   94   96   98   98   98  101    98 #>  [4314,]   81   90   92   95   97   99   97   96  100    97 #>  [4315,]   82   88   93   93   95   97   98   97  101    98 #>  [4316,]   82   88   93   93   95   97   98   97  101    98 #>  [4317,]   82   88   94   94   96   98   98   98  101    98 #>  [4318,]   82   88   94   94   96   98   98   98  101    98 #>  [4319,]   82   88   93   93   95   97   98   97  101    98 #>  [4320,]   82   88   94   94   96   98   98   98  101    98 #>  [4321,]   82   88   94   94   96   98   98   98  101    98 #>  [4322,]   82   88   94   94   96   98   98   98  101    98 #>  [4323,]   82   88   94   94   96   98   98   98  101    98 #>  [4324,]   82   88   94   94   96   98   98   98  101    98 #>  [4325,]   82   88   93   93   95   97   98   98  101    98 #>  [4326,]   82   88   93   93   95   97   98   97  101    98 #>  [4327,]   82   88   94   94   96   98   98   98  101    98 #>  [4328,]   82   88   93   93   95   97   98   97  101    98 #>  [4329,]   82   88   94   94   96   98   98   98  101    98 #>  [4330,]   82   88   93   93   95   97   98   98  101    98 #>  [4331,]   81   89   91   95   97   99   97   96  100    97 #>  [4332,]   81   89   91   95   97   99   97   96  100    97 #>  [4333,]   82   88   94   94   96   98   98   98  101    98 #>  [4334,]   82   88   93   93   95   97   98   97  101    98 #>  [4335,]   82   88   93   93   95   97   98   97  101    98 #>  [4336,]   82   88   94   94   96   98   98   98  101    98 #>  [4337,]   82   88   93   93   95   97   98   97  101    98 #>  [4338,]   82   88   93   93   95   97   98   97  101    98 #>  [4339,]   82   88   93   93   95   97   98   98  101    98 #>  [4340,]   81   90   92   95   97   99   97   96  100    97 #>  [4341,]   82   88   93   93   95   97   98   98  101    98 #>  [4342,]   82   88   93   93   95   97   98   97  101    98 #>  [4343,]   82   88   93   93   95   97   98   98  101    98 #>  [4344,]   82   88   94   94   96   98   98   98  101    98 #>  [4345,]   82   88   93   93   95   97   98   97  101    98 #>  [4346,]   82   88   93   93   95   97   98   97  101    98 #>  [4347,]   82   88   93   93   95   97   98   98  101    98 #>  [4348,]   81   89   91   95   97   99   97   96  100    97 #>  [4349,]   82   88   93   93   95   97   98   97  101    98 #>  [4350,]   82   88   93   93   95   97   98   98  101    98 #>  [4351,]   82   88   93   93   95   97   98   98  101    98 #>  [4352,]   82   88   93   93   95   97   98   97  101    98 #>  [4353,]   82   88   94   94   96   98   98   98  101    98 #>  [4354,]   82   88   93   93   95   97   98   98  101    98 #>  [4355,]   82   88   93   93   95   97   98   97  101    98 #>  [4356,]   82   88   93   93   95   97   98   97  101    98 #>  [4357,]   82   88   93   93   95   97   98   97  101    98 #>  [4358,]   82   88   93   93   95   97   98   98  101    98 #>  [4359,]   82   88   93   93   95   97   98   97  101    98 #>  [4360,]   82   88   94   94   96   98   98   98  101    98 #>  [4361,]   82   88   94   94   96   98   98   98  101    98 #>  [4362,]   82   88   93   93   95   97   98   97  101    98 #>  [4363,]   82   88   94   94   96   98   98   98  101    98 #>  [4364,]   82   88   93   93   95   97   98   97  101    98 #>  [4365,]   82   88   93   93   95   97   98   97  101    98 #>  [4366,]   82   88   93   93   95   97   98   98  101    98 #>  [4367,]   82   88   93   93   95   97   98   97  101    98 #>  [4368,]   82   88   93   93   95   97   98   97  101    98 #>  [4369,]   82   88   93   93   95   97   98   97  101    98 #>  [4370,]   81   90   92   95   97   99   97   96  100    97 #>  [4371,]   82   88   93   93   95   97   98   98  101    98 #>  [4372,]   82   88   93   93   95   97   98   97  101    98 #>  [4373,]   82   88   93   93   95   97   98   97  101    98 #>  [4374,]   81   90   92   95   97   99   97   96  100    97 #>  [4375,]   82   88   94   94   96   98   98   98  101    98 #>  [4376,]   82   88   93   93   95   97   98   98  101    98 #>  [4377,]   82   88   93   93   95   97   98   97  101    98 #>  [4378,]   82   88   93   93   95   97   98   98  101    98 #>  [4379,]   82   88   93   93   95   97   98   97  101    98 #>  [4380,]   82   88   94   94   96   98   98   98  101    98 #>  [4381,]   82   88   94   94   96   98   98   98  101    98 #>  [4382,]   82   88   93   93   95   97   98   97  101    98 #>  [4383,]   82   88   94   94   96   98   98   98  101    98 #>  [4384,]   82   88   94   94   96   98   98   98  101    98 #>  [4385,]   82   88   93   93   95   97   98   97  101    98 #>  [4386,]   82   88   94   94   96   98   98   98  101    98 #>  [4387,]   82   88   93   93   95   97   98   98  101    98 #>  [4388,]   82   88   94   94   96   98   98   98  101    98 #>  [4389,]   82   88   93   93   95   97   98   97  101    98 #>  [4390,]   82   88   93   93   95   97   98   98  101    98 #>  [4391,]   82   88   93   93   95   97   98   97  101    98 #>  [4392,]   82   88   94   94   96   98   98   98  101    98 #>  [4393,]   82   88   93   93   95   97   98   98  101    98 #>  [4394,]   82   88   93   93   95   97   98   97  101    98 #>  [4395,]   82   88   93   93   95   97   98   98  101    98 #>  [4396,]   82   88   93   93   95   97   98   97  101    98 #>  [4397,]   82   88   93   93   95   97   98   97  101    98 #>  [4398,]   81   90   92   95   97   99   97   96  100    97 #>  [4399,]   82   88   93   93   95   97   98   98  101    98 #>  [4400,]   82   88   93   93   95   97   98   97  101    98 #>  [4401,]   84   92   96   97   99  101  100   99  103   100 #>  [4402,]   83   91   95   96   98  100   99   99  103   100 #>  [4403,]   83   91   95   96   98  100   99   99  102    99 #>  [4404,]   84   92   96   97   99  101  100   99  103   100 #>  [4405,]   83   91   95   96   98  100   99   99  102    99 #>  [4406,]   83   91   95   96   98  100   99   99  103   100 #>  [4407,]   84   92   96   97   99  101  100   99  102    99 #>  [4408,]   83   91   95   96   98  100   99   99  102    99 #>  [4409,]   84   92   96   98   99  101  100   99  103   100 #>  [4410,]   84   92   96   98   99  101  100   99  103   100 #>  [4411,]   83   91   95   96   98  100   99   99  103   100 #>  [4412,]   83   91   95   96   98  100   99   99  103   100 #>  [4413,]   84   92   96   98   99  101  100   99  102    99 #>  [4414,]   84   92   96   97   99  101  100   99  103   100 #>  [4415,]   83   91   95   96   98  100   99   99  103   100 #>  [4416,]   84   92   96   97   99  101  100   99  102    99 #>  [4417,]   83   91   95   96   98  100   99   99  102    99 #>  [4418,]   83   91   95   96   98  100   99   99  103   100 #>  [4419,]   83   91   95   96   98  100   99   99  103   100 #>  [4420,]   84   92   96   98   99  101  100   99  102    99 #>  [4421,]   83   91   95   96   98  100   99   99  103   100 #>  [4422,]   84   92   96   97   99  101  100   99  102    99 #>  [4423,]   83   91   95   96   98  100   99   99  103   100 #>  [4424,]   84   92   96   98   99  101  100   99  102    99 #>  [4425,]   84   92   96   97   99  101  100   99  102    99 #>  [4426,]   83   91   95   96   98  100   99   99  103   100 #>  [4427,]   83   91   95   96   98  100   99   99  103   100 #>  [4428,]   84   92   96   97   99  101  100   99  103   100 #>  [4429,]   83   91   95   96   98  100   99   99  102    99 #>  [4430,]   83   91   95   96   98  100   99   99  103   100 #>  [4431,]   83   91   95   96   98  100   99   99  103   100 #>  [4432,]   83   91   95   96   98  100   99   99  103   100 #>  [4433,]   83   91   95   96   98  100   99   99  103   100 #>  [4434,]   83   91   95   96   98  100   99   99  103   100 #>  [4435,]   83   91   95   96   98  100   99   99  103   100 #>  [4436,]   84   92   96   98   99  101  100   99  103   100 #>  [4437,]   83   91   95   96   98  100   99   99  103   100 #>  [4438,]   83   91   95   96   98  100   99   99  103   100 #>  [4439,]   84   92   96   97   99  101  100   99  102    99 #>  [4440,]   83   91   95   96   98  100   99   99  102    99 #>  [4441,]   83   91   95   96   98  100   99   99  103   100 #>  [4442,]   83   91   95   96   98  100   99   99  103   100 #>  [4443,]   83   91   95   96   98  100   99   99  102    99 #>  [4444,]   83   91   95   96   98  100   99   99  102    99 #>  [4445,]   84   92   96   97   99  101  100   99  102    99 #>  [4446,]   83   91   95   96   98  100   99   99  102    99 #>  [4447,]   83   91   95   96   98  100   99   99  102    99 #>  [4448,]   83   91   95   96   98  100   99   99  103   100 #>  [4449,]   84   92   96   97   99  101  100   99  102    99 #>  [4450,]   84   92   96   97   99  101  100   99  102    99 #>  [4451,]   83   91   95   96   98  100   99   99  102    99 #>  [4452,]   84   92   96   97   99  101  100   99  103   100 #>  [4453,]   84   92   96   98   99  101  100   99  102    99 #>  [4454,]   84   92   96   97   99  101  100   99  102    99 #>  [4455,]   84   92   96   97   99  101  100   99  102    99 #>  [4456,]   83   91   95   96   98  100   99   99  102    99 #>  [4457,]   84   92   96   97   99  101  100   99  103   100 #>  [4458,]   84   92   96   97   99  101  100   99  103   100 #>  [4459,]   84   92   96   97   99  101  100   99  102    99 #>  [4460,]   83   91   95   96   98  100   99   99  103   100 #>  [4461,]   83   91   95   96   98  100   99   99  103   100 #>  [4462,]   83   91   95   96   98  100   99   99  103   100 #>  [4463,]   83   91   95   96   98  100   99   99  102    99 #>  [4464,]   83   91   95   96   98  100   99   99  103   100 #>  [4465,]   83   91   95   96   98  100   99   99  102    99 #>  [4466,]   83   91   95   96   98  100   99   99  102    99 #>  [4467,]   84   92   96   97   99  101  100   99  103   100 #>  [4468,]   83   91   95   96   98  100   99   99  103   100 #>  [4469,]   83   91   95   96   98  100   99   99  103   100 #>  [4470,]   83   91   95   96   98  100   99   99  102    99 #>  [4471,]   83   91   95   96   98  100   99   99  102    99 #>  [4472,]   84   92   96   97   99  101  100   99  102    99 #>  [4473,]   84   92   96   97   99  101  100   99  103   100 #>  [4474,]   83   91   95   96   98  100   99   99  103   100 #>  [4475,]   83   91   95   96   98  100   99   99  103   100 #>  [4476,]   84   92   96   97   99  101  100   99  102    99 #>  [4477,]   83   91   95   96   98  100   99   99  102    99 #>  [4478,]   83   91   95   96   98  100   99   99  102    99 #>  [4479,]   83   91   95   96   98  100   99   99  102    99 #>  [4480,]   83   91   95   96   98  100   99   99  103   100 #>  [4481,]   83   91   95   96   98  100   99   99  102    99 #>  [4482,]   83   91   95   96   98  100   99   99  103   100 #>  [4483,]   83   91   95   96   98  100   99   99  102    99 #>  [4484,]   83   91   95   96   98  100   99   99  102    99 #>  [4485,]   84   92   96   97   99  101  100   99  103   100 #>  [4486,]   84   92   96   98   99  101  100   99  102    99 #>  [4487,]   84   92   96   97   99  101  100   99  103   100 #>  [4488,]   84   92   96   98   99  101  100   99  103   100 #>  [4489,]   83   91   95   96   98  100   99   99  102    99 #>  [4490,]   84   92   96   97   99  101  100   99  102    99 #>  [4491,]   84   92   96   97   99  101  100   99  103   100 #>  [4492,]   83   91   95   96   98  100   99   99  103   100 #>  [4493,]   83   91   95   96   98  100   99   99  103   100 #>  [4494,]   83   91   95   96   98  100   99   99  102    99 #>  [4495,]   83   91   95   96   98  100   99   99  103   100 #>  [4496,]   83   91   95   96   98  100   99   99  103   100 #>  [4497,]   83   91   95   96   98  100   99   99  103   100 #>  [4498,]   83   91   95   96   98  100   99   99  102    99 #>  [4499,]   83   91   95   96   98  100   99   99  103   100 #>  [4500,]   83   91   95   96   98  100   99   99  102    99 #>  [4501,]   86   94   98  100  101  103  102  101  105   102 #>  [4502,]   86   94   98  100  101  103  102  101  105   102 #>  [4503,]   85   93   97   99  100  102  101  100  104   101 #>  [4504,]   85   93   97   99  100  102  101  100  104   101 #>  [4505,]   86   94   98  100  101  103  102  101  105   102 #>  [4506,]   86   94   98  100  101  103  102  101  105   102 #>  [4507,]   85   93   97   99  100  102  101  100  104   101 #>  [4508,]   86   94   98  100  101  103  102  101  105   102 #>  [4509,]   86   94   98  100  101  103  102  101  105   102 #>  [4510,]   86   94   98  100  101  103  102  101  105   102 #>  [4511,]   86   94   98  100  101  103  102  101  105   102 #>  [4512,]   85   93   97   99  100  102  101  100  104   101 #>  [4513,]   86   94   98  100  101  103  102  101  105   102 #>  [4514,]   86   94   98  100  101  103  102  101  105   102 #>  [4515,]   86   94   98  100  101  103  102  101  105   102 #>  [4516,]   86   94   98  100  101  103  102  101  105   102 #>  [4517,]   86   94   98  100  101  103  102  101  105   102 #>  [4518,]   86   94   98  100  101  103  102  101  105   102 #>  [4519,]   86   94   98  100  101  103  102  101  105   102 #>  [4520,]   86   94   98  100  101  103  102  101  105   102 #>  [4521,]   86   94   98  100  101  103  102  101  105   102 #>  [4522,]   86   94   98  100  101  103  102  101  105   102 #>  [4523,]   86   94   98  100  101  103  102  101  105   102 #>  [4524,]   86   94   98  100  101  103  102  101  105   102 #>  [4525,]   85   93   97   99  100  102  101  100  104   101 #>  [4526,]   86   94   98  100  101  103  102  101  105   102 #>  [4527,]   86   94   98  100  101  103  102  101  105   102 #>  [4528,]   86   94   98  100  101  103  102  101  105   102 #>  [4529,]   86   94   98  100  101  103  102  101  105   102 #>  [4530,]   86   94   98  100  101  103  102  101  105   102 #>  [4531,]   85   93   97   99  100  102  101  100  104   101 #>  [4532,]   86   94   98  100  101  103  102  101  105   102 #>  [4533,]   86   94   98  100  101  103  102  101  105   102 #>  [4534,]   86   94   98  100  101  103  102  101  105   102 #>  [4535,]   86   94   98  100  101  103  102  101  105   102 #>  [4536,]   86   94   98  100  101  103  102  101  105   102 #>  [4537,]   86   94   98  100  101  103  102  101  105   102 #>  [4538,]   86   94   98  100  101  103  102  101  105   102 #>  [4539,]   86   94   98  100  101  103  102  101  105   102 #>  [4540,]   86   94   98  100  101  103  102  101  105   102 #>  [4541,]   86   94   98  100  101  103  102  101  105   102 #>  [4542,]   86   94   98  100  101  103  102  101  105   102 #>  [4543,]   86   94   98  100  101  103  102  101  105   102 #>  [4544,]   86   94   98  100  101  103  102  101  105   102 #>  [4545,]   86   94   98  100  101  103  102  101  105   102 #>  [4546,]   86   94   98  100  101  103  102  101  105   102 #>  [4547,]   86   94   98  100  101  103  102  101  105   102 #>  [4548,]   86   94   98  100  101  103  102  101  105   102 #>  [4549,]   86   94   98  100  101  103  102  101  105   102 #>  [4550,]   86   94   98  100  101  103  102  101  105   102 #>  [4551,]   86   94   98  100  101  103  102  101  105   102 #>  [4552,]   85   93   97   99  100  102  101  100  104   101 #>  [4553,]   86   94   98  100  101  103  102  101  105   102 #>  [4554,]   86   94   98  100  101  103  102  101  105   102 #>  [4555,]   86   94   98  100  101  103  102  101  105   102 #>  [4556,]   86   94   98  100  101  103  102  101  105   102 #>  [4557,]   86   94   98  100  101  103  102  101  105   102 #>  [4558,]   86   94   98  100  101  103  102  101  105   102 #>  [4559,]   85   93   97   99  100  102  101  100  104   101 #>  [4560,]   85   93   97   99  100  102  101  100  104   101 #>  [4561,]   86   94   98  100  101  103  102  101  105   102 #>  [4562,]   86   94   98  100  101  103  102  101  105   102 #>  [4563,]   86   94   98  100  101  103  102  101  105   102 #>  [4564,]   86   94   98  100  101  103  102  101  105   102 #>  [4565,]   86   94   98  100  101  103  102  101  105   102 #>  [4566,]   86   94   98  100  101  103  102  101  105   102 #>  [4567,]   86   94   98  100  101  103  102  101  105   102 #>  [4568,]   86   94   98  100  101  103  102  101  105   102 #>  [4569,]   86   94   98  100  101  103  102  101  105   102 #>  [4570,]   86   94   98  100  101  103  102  101  105   102 #>  [4571,]   86   94   98  100  101  103  102  101  105   102 #>  [4572,]   86   94   98  100  101  103  102  101  105   102 #>  [4573,]   86   94   98  100  101  103  102  101  105   102 #>  [4574,]   86   94   98  100  101  103  102  101  105   102 #>  [4575,]   86   94   98  100  101  103  102  101  105   102 #>  [4576,]   86   94   98  100  101  103  102  101  105   102 #>  [4577,]   86   94   98  100  101  103  102  101  105   102 #>  [4578,]   86   94   98  100  101  103  102  101  105   102 #>  [4579,]   86   94   98  100  101  103  102  101  105   102 #>  [4580,]   86   94   98  100  101  103  102  101  105   102 #>  [4581,]   86   94   98  100  101  103  102  101  105   102 #>  [4582,]   86   94   98  100  101  103  102  101  105   102 #>  [4583,]   86   94   98  100  101  103  102  101  105   102 #>  [4584,]   86   94   98  100  101  103  102  101  105   102 #>  [4585,]   86   94   98  100  101  103  102  101  105   102 #>  [4586,]   86   94   98  100  101  103  102  101  105   102 #>  [4587,]   86   94   98  100  101  103  102  101  105   102 #>  [4588,]   86   94   98  100  101  103  102  101  105   102 #>  [4589,]   86   94   98  100  101  103  102  101  105   102 #>  [4590,]   86   94   98  100  101  103  102  101  105   102 #>  [4591,]   86   94   98  100  101  103  102  101  105   102 #>  [4592,]   86   94   98  100  101  103  102  101  105   102 #>  [4593,]   86   94   98  100  101  103  102  101  105   102 #>  [4594,]   86   94   98  100  101  103  102  101  105   102 #>  [4595,]   86   94   98  100  101  103  102  101  105   102 #>  [4596,]   85   93   97   99  100  102  101  100  104   101 #>  [4597,]   85   93   97   99  100  102  101  100  104   101 #>  [4598,]   86   94   98  100  101  103  102  101  105   102 #>  [4599,]   86   94   98  100  101  103  102  101  105   102 #>  [4600,]   86   94   98  100  101  103  102  101  105   102 #>  [4601,]   88   96  100  102  103  105  104  103  107   104 #>  [4602,]   88   96  100  102  103  105  104  103  107   104 #>  [4603,]   87   95   99  101  102  104  103  102  106   103 #>  [4604,]   88   96  100  102  103  105  104  103  107   104 #>  [4605,]   87   95   99  101  102  104  103  102  106   103 #>  [4606,]   88   96  100  102  103  105  104  103  107   104 #>  [4607,]   88   96  100  102  103  105  104  103  107   104 #>  [4608,]   88   96  100  102  103  105  104  103  107   104 #>  [4609,]   87   95   99  101  102  104  103  102  106   103 #>  [4610,]   87   95   99  101  102  104  103  102  106   103 #>  [4611,]   87   95   99  101  102  104  103  102  106   103 #>  [4612,]   88   96  100  102  103  105  104  103  107   104 #>  [4613,]   88   96  100  102  103  105  104  103  107   104 #>  [4614,]   87   95   99  101  102  104  103  102  106   103 #>  [4615,]   88   96  100  102  103  105  104  103  107   104 #>  [4616,]   88   96  100  102  103  105  104  103  107   104 #>  [4617,]   88   96  100  102  103  105  104  103  107   104 #>  [4618,]   88   96  100  102  103  105  104  103  107   104 #>  [4619,]   88   96  100  102  103  105  104  103  107   104 #>  [4620,]   88   96  100  102  103  105  104  103  107   104 #>  [4621,]   87   95   99  101  102  104  103  102  106   103 #>  [4622,]   88   96  100  102  103  105  104  103  107   104 #>  [4623,]   88   96  100  102  103  105  104  103  107   104 #>  [4624,]   87   95   99  101  102  104  103  102  106   103 #>  [4625,]   87   95   99  101  102  104  103  102  106   103 #>  [4626,]   88   96  100  102  103  105  104  103  107   104 #>  [4627,]   88   96  100  102  103  105  104  103  107   104 #>  [4628,]   87   95   99  101  102  104  103  102  106   103 #>  [4629,]   88   96  100  102  103  105  104  103  107   104 #>  [4630,]   88   96  100  102  103  105  104  103  107   104 #>  [4631,]   87   95   99  101  102  104  103  102  106   103 #>  [4632,]   87   95   99  101  102  104  103  102  106   103 #>  [4633,]   88   96  100  102  103  105  104  103  107   104 #>  [4634,]   87   95   99  101  102  104  103  102  106   103 #>  [4635,]   87   95   99  101  102  104  103  102  106   103 #>  [4636,]   88   96  100  102  103  105  104  103  107   104 #>  [4637,]   88   96  100  102  103  105  104  103  107   104 #>  [4638,]   88   96  100  102  103  105  104  103  107   104 #>  [4639,]   87   95   99  101  102  104  103  102  106   103 #>  [4640,]   87   95   99  101  102  104  103  102  106   103 #>  [4641,]   88   96  100  102  103  105  104  103  107   104 #>  [4642,]   88   96  100  102  103  105  104  103  107   104 #>  [4643,]   88   96  100  102  103  105  104  103  107   104 #>  [4644,]   88   96  100  102  103  105  104  103  107   104 #>  [4645,]   88   96  100  102  103  105  104  103  107   104 #>  [4646,]   88   96  100  102  103  105  104  103  107   104 #>  [4647,]   87   95   99  101  102  104  103  102  106   103 #>  [4648,]   87   95   99  101  102  104  103  102  106   103 #>  [4649,]   88   96  100  102  103  105  104  103  107   104 #>  [4650,]   88   96  100  102  103  105  104  103  107   104 #>  [4651,]   88   96  100  102  103  105  104  103  107   104 #>  [4652,]   87   95   99  101  102  104  103  102  106   103 #>  [4653,]   88   96  100  102  103  105  104  103  107   104 #>  [4654,]   87   95   99  101  102  104  103  102  106   103 #>  [4655,]   88   96  100  102  103  105  104  103  107   104 #>  [4656,]   88   96  100  102  103  105  104  103  107   104 #>  [4657,]   88   96  100  102  103  105  104  103  107   104 #>  [4658,]   88   96  100  102  103  105  104  103  107   104 #>  [4659,]   88   96  100  102  103  105  104  103  107   104 #>  [4660,]   88   96  100  102  103  105  104  103  107   104 #>  [4661,]   88   96  100  102  103  105  104  103  107   104 #>  [4662,]   87   95   99  101  102  104  103  102  106   103 #>  [4663,]   88   96  100  102  103  105  104  103  107   104 #>  [4664,]   88   96  100  102  103  105  104  103  107   104 #>  [4665,]   87   95   99  101  102  104  103  102  106   103 #>  [4666,]   88   96  100  102  103  105  104  103  107   104 #>  [4667,]   88   96  100  102  103  105  104  103  107   104 #>  [4668,]   88   96  100  102  103  105  104  103  107   104 #>  [4669,]   88   96  100  102  103  105  104  103  107   104 #>  [4670,]   87   95   99  101  102  104  103  102  106   103 #>  [4671,]   88   96  100  102  103  105  104  103  107   104 #>  [4672,]   87   95   99  101  102  104  103  102  106   103 #>  [4673,]   88   96  100  102  103  105  104  103  107   104 #>  [4674,]   87   95   99  101  102  104  103  102  106   103 #>  [4675,]   88   96  100  102  103  105  104  103  107   104 #>  [4676,]   87   95   99  101  102  104  103  102  106   103 #>  [4677,]   88   96  100  102  103  105  104  103  107   104 #>  [4678,]   88   96  100  102  103  105  104  103  107   104 #>  [4679,]   88   96  100  102  103  105  104  103  107   104 #>  [4680,]   88   96  100  102  103  105  104  103  107   104 #>  [4681,]   88   96  100  102  103  105  104  103  107   104 #>  [4682,]   87   95   99  101  102  104  103  102  106   103 #>  [4683,]   88   96  100  102  103  105  104  103  107   104 #>  [4684,]   88   96  100  102  103  105  104  103  107   104 #>  [4685,]   88   96  100  102  103  105  104  103  107   104 #>  [4686,]   88   96  100  102  103  105  104  103  107   104 #>  [4687,]   88   96  100  102  103  105  104  103  107   104 #>  [4688,]   88   96  100  102  103  105  104  103  107   104 #>  [4689,]   88   96  100  102  103  105  104  103  107   104 #>  [4690,]   88   96  100  102  103  105  104  103  107   104 #>  [4691,]   87   95   99  101  102  104  103  102  106   103 #>  [4692,]   88   96  100  102  103  105  104  103  107   104 #>  [4693,]   88   96  100  102  103  105  104  103  107   104 #>  [4694,]   88   96  100  102  103  105  104  103  107   104 #>  [4695,]   88   96  100  102  103  105  104  103  107   104 #>  [4696,]   88   96  100  102  103  105  104  103  107   104 #>  [4697,]   88   96  100  102  103  105  104  103  107   104 #>  [4698,]   87   95   99  101  102  104  103  102  106   103 #>  [4699,]   88   96  100  102  103  105  104  103  107   104 #>  [4700,]   88   96  100  102  103  105  104  103  107   104 #>  [4701,]   89   97  101  103  104  106  105  104  108   105 #>  [4702,]   89   97  101  103  104  106  105  104  108   105 #>  [4703,]   89   97  101  103  104  106  105  104  108   105 #>  [4704,]   89   97  101  103  104  106  105  104  108   105 #>  [4705,]   89   97  101  103  104  106  105  104  108   105 #>  [4706,]   89   97  101  103  104  106  105  104  108   105 #>  [4707,]   89   97  101  103  104  106  105  104  108   105 #>  [4708,]   89   97  101  103  104  106  105  104  108   105 #>  [4709,]   89   97  101  103  104  106  105  104  108   105 #>  [4710,]   89   97  101  103  104  106  105  104  108   105 #>  [4711,]   89   97  101  103  104  106  105  104  108   105 #>  [4712,]   89   97  101  103  104  106  105  104  108   105 #>  [4713,]   89   97  101  103  104  106  105  104  108   105 #>  [4714,]   89   97  101  103  104  106  105  104  108   105 #>  [4715,]   89   97  101  103  104  106  105  104  108   105 #>  [4716,]   89   97  101  103  104  106  105  104  108   105 #>  [4717,]   89   97  101  103  104  106  105  104  108   105 #>  [4718,]   89   97  101  103  104  106  105  104  108   105 #>  [4719,]   89   97  101  103  104  106  105  104  108   105 #>  [4720,]   89   97  101  103  104  106  105  104  108   105 #>  [4721,]   89   97  101  103  104  106  105  104  108   105 #>  [4722,]   90   98  102  104  105  107  106  105  109   106 #>  [4723,]   89   97  101  103  104  106  105  104  108   105 #>  [4724,]   89   97  101  103  104  106  105  104  108   105 #>  [4725,]   89   97  101  103  104  106  105  104  108   105 #>  [4726,]   89   97  101  103  104  106  105  104  108   105 #>  [4727,]   89   97  101  103  104  106  105  104  108   105 #>  [4728,]   89   97  101  103  104  106  105  104  108   105 #>  [4729,]   90   98  102  104  105  107  106  105  109   106 #>  [4730,]   89   97  101  103  104  106  105  104  108   105 #>  [4731,]   89   97  101  103  104  106  105  104  108   105 #>  [4732,]   89   97  101  103  104  106  105  104  108   105 #>  [4733,]   89   97  101  103  104  106  105  104  108   105 #>  [4734,]   89   97  101  103  104  106  105  104  108   105 #>  [4735,]   89   97  101  103  104  106  105  104  108   105 #>  [4736,]   89   97  101  103  104  106  105  104  108   105 #>  [4737,]   89   97  101  103  104  106  105  104  108   105 #>  [4738,]   89   97  101  103  104  106  105  104  108   105 #>  [4739,]   89   97  101  103  104  106  105  104  108   105 #>  [4740,]   89   97  101  103  104  106  105  104  108   105 #>  [4741,]   89   97  101  103  104  106  105  104  108   105 #>  [4742,]   89   97  101  103  104  106  105  104  108   105 #>  [4743,]   89   97  101  103  104  106  105  104  108   105 #>  [4744,]   89   97  101  103  104  106  105  104  108   105 #>  [4745,]   89   97  101  103  104  106  105  104  108   105 #>  [4746,]   89   97  101  103  104  106  105  104  108   105 #>  [4747,]   89   97  101  103  104  106  105  104  108   105 #>  [4748,]   89   97  101  103  104  106  105  104  108   105 #>  [4749,]   89   97  101  103  104  106  105  104  108   105 #>  [4750,]   89   97  101  103  104  106  105  104  108   105 #>  [4751,]   89   97  101  103  104  106  105  104  108   105 #>  [4752,]   89   97  101  103  104  106  105  104  108   105 #>  [4753,]   89   97  101  103  104  106  105  104  108   105 #>  [4754,]   89   97  101  103  104  106  105  104  108   105 #>  [4755,]   89   97  101  103  104  106  105  104  108   105 #>  [4756,]   89   97  101  103  104  106  105  104  108   105 #>  [4757,]   89   97  101  103  104  106  105  104  108   105 #>  [4758,]   90   98  102  104  105  107  106  105  109   106 #>  [4759,]   89   97  101  103  104  106  105  104  108   105 #>  [4760,]   89   97  101  103  104  106  105  104  108   105 #>  [4761,]   89   97  101  103  104  106  105  104  108   105 #>  [4762,]   89   97  101  103  104  106  105  104  108   105 #>  [4763,]   89   97  101  103  104  106  105  104  108   105 #>  [4764,]   90   98  102  104  105  107  106  105  109   106 #>  [4765,]   89   97  101  103  104  106  105  104  108   105 #>  [4766,]   89   97  101  103  104  106  105  104  108   105 #>  [4767,]   89   97  101  103  104  106  105  104  108   105 #>  [4768,]   89   97  101  103  104  106  105  104  108   105 #>  [4769,]   89   97  101  103  104  106  105  104  108   105 #>  [4770,]   89   97  101  103  104  106  105  104  108   105 #>  [4771,]   89   97  101  103  104  106  105  104  108   105 #>  [4772,]   89   97  101  103  104  106  105  104  108   105 #>  [4773,]   89   97  101  103  104  106  105  104  108   105 #>  [4774,]   89   97  101  103  104  106  105  104  108   105 #>  [4775,]   89   97  101  103  104  106  105  104  108   105 #>  [4776,]   89   97  101  103  104  106  105  104  108   105 #>  [4777,]   90   98  102  104  105  107  106  105  109   106 #>  [4778,]   89   97  101  103  104  106  105  104  108   105 #>  [4779,]   89   97  101  103  104  106  105  104  108   105 #>  [4780,]   89   97  101  103  104  106  105  104  108   105 #>  [4781,]   89   97  101  103  104  106  105  104  108   105 #>  [4782,]   89   97  101  103  104  106  105  104  108   105 #>  [4783,]   89   97  101  103  104  106  105  104  108   105 #>  [4784,]   89   97  101  103  104  106  105  104  108   105 #>  [4785,]   89   97  101  103  104  106  105  104  108   105 #>  [4786,]   89   97  101  103  104  106  105  104  108   105 #>  [4787,]   90   98  102  104  105  107  106  105  109   106 #>  [4788,]   89   97  101  103  104  106  105  104  108   105 #>  [4789,]   89   97  101  103  104  106  105  104  108   105 #>  [4790,]   89   97  101  103  104  106  105  104  108   105 #>  [4791,]   89   97  101  103  104  106  105  104  108   105 #>  [4792,]   89   97  101  103  104  106  105  104  108   105 #>  [4793,]   89   97  101  103  104  106  105  104  108   105 #>  [4794,]   89   97  101  103  104  106  105  104  108   105 #>  [4795,]   89   97  101  103  104  106  105  104  108   105 #>  [4796,]   89   97  101  103  104  106  105  104  108   105 #>  [4797,]   89   97  101  103  104  106  105  104  108   105 #>  [4798,]   89   97  101  103  104  106  105  104  108   105 #>  [4799,]   89   97  101  103  104  106  105  104  108   105 #>  [4800,]   89   97  101  103  104  106  105  104  108   105 #>  [4801,]   91   99  103  107  108  110  108  107  111   108 #>  [4802,]   91   99  103  107  108  110  108  107  111   108 #>  [4803,]   91   99  103  106  107  109  108  107  111   108 #>  [4804,]   91   99  103  107  108  110  108  107  111   108 #>  [4805,]   91   99  103  107  108  110  108  107  111   108 #>  [4806,]   91   99  103  107  108  110  108  107  111   108 #>  [4807,]   91   99  103  107  108  110  108  107  111   108 #>  [4808,]   92  100  104  105  106  108  107  106  110   107 #>  [4809,]   91   99  103  107  108  110  108  107  111   108 #>  [4810,]   91   99  103  107  108  110  108  107  111   108 #>  [4811,]   91   99  103  107  108  110  108  107  111   108 #>  [4812,]   91   99  103  106  107  109  108  107  111   108 #>  [4813,]   92  100  104  105  106  108  107  106  110   107 #>  [4814,]   91   99  103  106  107  109  108  107  111   108 #>  [4815,]   92  100  104  105  106  108  107  106  110   107 #>  [4816,]   91   99  103  107  108  110  108  107  111   108 #>  [4817,]   91   99  103  107  108  110  108  107  111   108 #>  [4818,]   91   99  103  107  108  110  108  107  111   108 #>  [4819,]   92  100  104  105  106  108  107  106  110   107 #>  [4820,]   92  100  104  105  106  108  107  106  110   107 #>  [4821,]   91   99  103  107  108  110  108  107  111   108 #>  [4822,]   92  100  104  105  106  108  107  106  110   107 #>  [4823,]   91   99  103  107  108  110  108  107  111   108 #>  [4824,]   91   99  103  107  108  110  108  107  111   108 #>  [4825,]   91   99  103  107  108  110  108  107  111   108 #>  [4826,]   91   99  103  106  107  109  108  107  111   108 #>  [4827,]   92  100  104  105  106  108  107  106  110   107 #>  [4828,]   91   99  103  107  108  110  108  107  111   108 #>  [4829,]   92  100  104  105  106  108  107  106  110   107 #>  [4830,]   91   99  103  107  108  110  108  107  111   108 #>  [4831,]   91   99  103  107  108  110  108  107  111   108 #>  [4832,]   91   99  103  106  107  109  108  107  111   108 #>  [4833,]   91   99  103  107  108  110  108  107  111   108 #>  [4834,]   91   99  103  107  108  110  108  107  111   108 #>  [4835,]   91   99  103  107  108  110  108  107  111   108 #>  [4836,]   92  100  104  105  106  108  107  106  110   107 #>  [4837,]   92  100  104  105  106  108  107  106  110   107 #>  [4838,]   92  100  104  105  106  108  107  106  110   107 #>  [4839,]   91   99  103  107  108  110  108  107  111   108 #>  [4840,]   91   99  103  107  108  110  108  107  111   108 #>  [4841,]   92  100  104  105  106  108  107  106  110   107 #>  [4842,]   91   99  103  106  107  109  108  107  111   108 #>  [4843,]   91   99  103  107  108  110  108  107  111   108 #>  [4844,]   91   99  103  107  108  110  108  107  111   108 #>  [4845,]   91   99  103  107  108  110  108  107  111   108 #>  [4846,]   92  100  104  105  106  108  107  106  110   107 #>  [4847,]   91   99  103  107  108  110  108  107  111   108 #>  [4848,]   91   99  103  106  107  109  108  107  111   108 #>  [4849,]   91   99  103  107  108  110  108  107  111   108 #>  [4850,]   92  100  104  105  106  108  107  106  110   107 #>  [4851,]   92  100  104  105  106  108  107  106  110   107 #>  [4852,]   91   99  103  107  108  110  108  107  111   108 #>  [4853,]   92  100  104  105  106  108  107  106  110   107 #>  [4854,]   91   99  103  106  107  109  108  107  111   108 #>  [4855,]   92  100  104  105  106  108  107  106  110   107 #>  [4856,]   91   99  103  107  108  110  108  107  111   108 #>  [4857,]   91   99  103  107  108  110  108  107  111   108 #>  [4858,]   92  100  104  105  106  108  107  106  110   107 #>  [4859,]   91   99  103  107  108  110  108  107  111   108 #>  [4860,]   92  100  104  105  106  108  107  106  110   107 #>  [4861,]   91   99  103  107  108  110  108  107  111   108 #>  [4862,]   91   99  103  106  107  109  108  107  111   108 #>  [4863,]   91   99  103  107  108  110  108  107  111   108 #>  [4864,]   92  100  104  105  106  108  107  106  110   107 #>  [4865,]   91   99  103  107  108  110  108  107  111   108 #>  [4866,]   92  100  104  105  106  108  107  106  110   107 #>  [4867,]   91   99  103  107  108  110  108  107  111   108 #>  [4868,]   91   99  103  107  108  110  108  107  111   108 #>  [4869,]   92  100  104  105  106  108  107  106  110   107 #>  [4870,]   91   99  103  107  108  110  108  107  111   108 #>  [4871,]   92  100  104  105  106  108  107  106  110   107 #>  [4872,]   91   99  103  107  108  110  108  107  111   108 #>  [4873,]   91   99  103  107  108  110  108  107  111   108 #>  [4874,]   91   99  103  107  108  110  108  107  111   108 #>  [4875,]   91   99  103  107  108  110  108  107  111   108 #>  [4876,]   91   99  103  107  108  110  108  107  111   108 #>  [4877,]   92  100  104  105  106  108  107  106  110   107 #>  [4878,]   91   99  103  107  108  110  108  107  111   108 #>  [4879,]   91   99  103  107  108  110  108  107  111   108 #>  [4880,]   92  100  104  105  106  108  107  106  110   107 #>  [4881,]   92  100  104  105  106  108  107  106  110   107 #>  [4882,]   91   99  103  107  108  110  108  107  111   108 #>  [4883,]   92  100  104  105  106  108  107  106  110   107 #>  [4884,]   91   99  103  107  108  110  108  107  111   108 #>  [4885,]   91   99  103  107  108  110  108  107  111   108 #>  [4886,]   91   99  103  107  108  110  108  107  111   108 #>  [4887,]   92  100  104  105  106  108  107  106  110   107 #>  [4888,]   91   99  103  107  108  110  108  107  111   108 #>  [4889,]   91   99  103  106  107  109  108  107  111   108 #>  [4890,]   92  100  104  105  106  108  107  106  110   107 #>  [4891,]   91   99  103  107  108  110  108  107  111   108 #>  [4892,]   91   99  103  107  108  110  108  107  111   108 #>  [4893,]   91   99  103  107  108  110  108  107  111   108 #>  [4894,]   91   99  103  107  108  110  108  107  111   108 #>  [4895,]   91   99  103  107  108  110  108  107  111   108 #>  [4896,]   92  100  104  105  106  108  107  106  110   107 #>  [4897,]   92  100  104  105  106  108  107  106  110   107 #>  [4898,]   91   99  103  107  108  110  108  107  111   108 #>  [4899,]   91   99  103  107  108  110  108  107  111   108 #>  [4900,]   92  100  104  105  106  108  107  106  110   107 #>  [4901,]   93  101  105  108  109  111  109  108  112   109 #>  [4902,]   93  101  105  108  110  112  110  109  113   110 #>  [4903,]   93  101  105  108  109  111  109  108  112   109 #>  [4904,]   94  102  106  108  109  111  109  108  112   109 #>  [4905,]   93  101  105  108  110  112  110  109  113   110 #>  [4906,]   93  101  105  108  109  111  109  108  112   109 #>  [4907,]   93  101  105  108  110  112  110  109  113   110 #>  [4908,]   93  101  105  108  109  111  109  108  112   109 #>  [4909,]   94  102  106  108  110  112  110  109  113   110 #>  [4910,]   93  101  105  108  110  112  110  109  113   110 #>  [4911,]   94  102  106  108  109  111  109  108  112   109 #>  [4912,]   94  102  106  108  110  112  110  109  113   110 #>  [4913,]   93  101  105  108  110  112  110  109  113   110 #>  [4914,]   94  102  106  108  109  111  109  108  112   109 #>  [4915,]   94  102  106  108  110  112  110  109  113   110 #>  [4916,]   93  101  105  108  109  111  109  108  112   109 #>  [4917,]   93  101  105  108  110  112  110  109  113   110 #>  [4918,]   94  102  106  108  110  112  110  109  113   110 #>  [4919,]   94  102  106  108  109  111  109  108  112   109 #>  [4920,]   93  101  105  108  110  112  110  109  113   110 #>  [4921,]   94  102  106  108  110  112  110  109  113   110 #>  [4922,]   93  101  105  108  110  112  110  109  113   110 #>  [4923,]   93  101  105  108  110  112  110  109  113   110 #>  [4924,]   93  101  105  108  110  112  110  109  113   110 #>  [4925,]   93  101  105  108  110  112  110  109  113   110 #>  [4926,]   93  101  105  108  109  111  109  108  112   109 #>  [4927,]   94  102  106  108  110  112  110  109  113   110 #>  [4928,]   93  101  105  108  109  111  109  108  112   109 #>  [4929,]   93  101  105  108  110  112  110  109  113   110 #>  [4930,]   93  101  105  108  110  112  110  109  113   110 #>  [4931,]   94  102  106  108  110  112  110  109  113   110 #>  [4932,]   93  101  105  108  110  112  110  109  113   110 #>  [4933,]   94  102  106  108  110  112  110  109  113   110 #>  [4934,]   93  101  105  108  109  111  109  108  112   109 #>  [4935,]   93  101  105  108  109  111  109  108  112   109 #>  [4936,]   94  102  106  108  110  112  110  109  113   110 #>  [4937,]   93  101  105  108  109  111  109  108  112   109 #>  [4938,]   94  102  106  108  109  111  109  108  112   109 #>  [4939,]   93  101  105  108  110  112  110  109  113   110 #>  [4940,]   93  101  105  108  110  112  110  109  113   110 #>  [4941,]   94  102  106  108  110  112  110  109  113   110 #>  [4942,]   94  102  106  108  109  111  109  108  112   109 #>  [4943,]   93  101  105  108  110  112  110  109  113   110 #>  [4944,]   93  101  105  108  110  112  110  109  113   110 #>  [4945,]   93  101  105  108  109  111  109  108  112   109 #>  [4946,]   93  101  105  108  110  112  110  109  113   110 #>  [4947,]   93  101  105  108  110  112  110  109  113   110 #>  [4948,]   94  102  106  108  110  112  110  109  113   110 #>  [4949,]   93  101  105  108  109  111  109  108  112   109 #>  [4950,]   93  101  105  108  110  112  110  109  113   110 #>  [4951,]   93  101  105  108  110  112  110  109  113   110 #>  [4952,]   93  101  105  108  109  111  109  108  112   109 #>  [4953,]   93  101  105  108  110  112  110  109  113   110 #>  [4954,]   93  101  105  108  110  112  110  109  113   110 #>  [4955,]   93  101  105  108  109  111  109  108  112   109 #>  [4956,]   93  101  105  108  109  111  109  108  112   109 #>  [4957,]   93  101  105  108  109  111  109  108  112   109 #>  [4958,]   94  102  106  108  110  112  110  109  113   110 #>  [4959,]   93  101  105  108  109  111  109  108  112   109 #>  [4960,]   93  101  105  108  110  112  110  109  113   110 #>  [4961,]   94  102  106  108  110  112  110  109  113   110 #>  [4962,]   93  101  105  108  109  111  109  108  112   109 #>  [4963,]   93  101  105  108  110  112  110  109  113   110 #>  [4964,]   93  101  105  108  109  111  109  108  112   109 #>  [4965,]   93  101  105  108  109  111  109  108  112   109 #>  [4966,]   93  101  105  108  110  112  110  109  113   110 #>  [4967,]   93  101  105  108  110  112  110  109  113   110 #>  [4968,]   94  102  106  108  109  111  109  108  112   109 #>  [4969,]   94  102  106  108  109  111  109  108  112   109 #>  [4970,]   93  101  105  108  110  112  110  109  113   110 #>  [4971,]   93  101  105  108  110  112  110  109  113   110 #>  [4972,]   93  101  105  108  109  111  109  108  112   109 #>  [4973,]   93  101  105  108  109  111  109  108  112   109 #>  [4974,]   94  102  106  108  110  112  110  109  113   110 #>  [4975,]   94  102  106  108  110  112  110  109  113   110 #>  [4976,]   93  101  105  108  110  112  110  109  113   110 #>  [4977,]   93  101  105  108  109  111  109  108  112   109 #>  [4978,]   93  101  105  108  110  112  110  109  113   110 #>  [4979,]   93  101  105  108  109  111  109  108  112   109 #>  [4980,]   93  101  105  108  110  112  110  109  113   110 #>  [4981,]   93  101  105  108  110  112  110  109  113   110 #>  [4982,]   94  102  106  108  109  111  109  108  112   109 #>  [4983,]   93  101  105  108  110  112  110  109  113   110 #>  [4984,]   93  101  105  108  110  112  110  109  113   110 #>  [4985,]   94  102  106  108  110  112  110  109  113   110 #>  [4986,]   93  101  105  108  110  112  110  109  113   110 #>  [4987,]   93  101  105  108  110  112  110  109  113   110 #>  [4988,]   93  101  105  108  110  112  110  109  113   110 #>  [4989,]   93  101  105  108  109  111  109  108  112   109 #>  [4990,]   93  101  105  108  110  112  110  109  113   110 #>  [4991,]   93  101  105  108  109  111  109  108  112   109 #>  [4992,]   94  102  106  108  110  112  110  109  113   110 #>  [4993,]   94  102  106  108  110  112  110  109  113   110 #>  [4994,]   93  101  105  108  109  111  109  108  112   109 #>  [4995,]   93  101  105  108  110  112  110  109  113   110 #>  [4996,]   94  102  106  108  109  111  109  108  112   109 #>  [4997,]   94  102  106  108  109  111  109  108  112   109 #>  [4998,]   93  101  105  108  110  112  110  109  113   110 #>  [4999,]   93  101  105  108  110  112  110  109  113   110 #>  [5000,]   93  101  105  108  109  111  109  108  112   109 #>  [5001,]   96  104  108  110  112  114  112  111  114   111 #>  [5002,]   96  104  108  110  112  114  112  111  114   111 #>  [5003,]   95  103  107  109  111  113  111  110  116   113 #>  [5004,]   95  103  107  109  111  113  111  110  116   113 #>  [5005,]   95  103  107  109  111  113  111  110  116   113 #>  [5006,]   95  103  107  109  111  113  111  110  115   112 #>  [5007,]   95  103  107  109  111  113  111  110  116   113 #>  [5008,]   96  104  108  110  112  114  112  111  114   111 #>  [5009,]   95  103  107  109  111  113  111  110  116   113 #>  [5010,]   95  103  107  109  111  113  111  110  116   113 #>  [5011,]   95  103  107  109  111  113  111  110  115   112 #>  [5012,]   95  103  107  109  111  113  111  110  115   112 #>  [5013,]   96  104  108  110  112  114  112  111  114   111 #>  [5014,]   95  103  107  109  111  113  111  110  116   113 #>  [5015,]   96  104  108  110  112  114  112  111  114   111 #>  [5016,]   96  104  108  110  112  114  112  111  114   111 #>  [5017,]   95  103  107  109  111  113  111  110  115   112 #>  [5018,]   95  103  107  109  111  113  111  110  116   113 #>  [5019,]   96  104  108  110  112  114  112  111  114   111 #>  [5020,]   96  104  108  110  112  114  112  111  114   111 #>  [5021,]   95  103  107  109  111  113  111  110  116   113 #>  [5022,]   96  104  108  110  112  114  112  111  114   111 #>  [5023,]   96  104  108  110  112  114  112  111  114   111 #>  [5024,]   95  103  107  109  111  113  111  110  116   113 #>  [5025,]   95  103  107  109  111  113  111  110  116   113 #>  [5026,]   96  104  108  110  112  114  112  111  114   111 #>  [5027,]   96  104  108  110  112  114  112  111  114   111 #>  [5028,]   95  103  107  109  111  113  111  110  116   113 #>  [5029,]   96  104  108  110  112  114  112  111  114   111 #>  [5030,]   96  104  108  110  112  114  112  111  114   111 #>  [5031,]   95  103  107  109  111  113  111  110  115   112 #>  [5032,]   95  103  107  109  111  113  111  110  116   113 #>  [5033,]   96  104  108  110  112  114  112  111  114   111 #>  [5034,]   95  103  107  109  111  113  111  110  115   112 #>  [5035,]   95  103  107  109  111  113  111  110  116   113 #>  [5036,]   96  104  108  110  112  114  112  111  114   111 #>  [5037,]   96  104  108  110  112  114  112  111  114   111 #>  [5038,]   96  104  108  110  112  114  112  111  114   111 #>  [5039,]   95  103  107  109  111  113  111  110  116   113 #>  [5040,]   95  103  107  109  111  113  111  110  116   113 #>  [5041,]   96  104  108  110  112  114  112  111  114   111 #>  [5042,]   95  103  107  109  111  113  111  110  115   112 #>  [5043,]   96  104  108  110  112  114  112  111  114   111 #>  [5044,]   96  104  108  110  112  114  112  111  114   111 #>  [5045,]   96  104  108  110  112  114  112  111  114   111 #>  [5046,]   96  104  108  110  112  114  112  111  114   111 #>  [5047,]   95  103  107  109  111  113  111  110  115   112 #>  [5048,]   95  103  107  109  111  113  111  110  115   112 #>  [5049,]   95  103  107  109  111  113  111  110  116   113 #>  [5050,]   96  104  108  110  112  114  112  111  114   111 #>  [5051,]   96  104  108  110  112  114  112  111  114   111 #>  [5052,]   95  103  107  109  111  113  111  110  116   113 #>  [5053,]   96  104  108  110  112  114  112  111  114   111 #>  [5054,]   95  103  107  109  111  113  111  110  116   113 #>  [5055,]   96  104  108  110  112  114  112  111  114   111 #>  [5056,]   96  104  108  110  112  114  112  111  114   111 #>  [5057,]   95  103  107  109  111  113  111  110  116   113 #>  [5058,]   96  104  108  110  112  114  112  111  114   111 #>  [5059,]   96  104  108  110  112  114  112  111  114   111 #>  [5060,]   96  104  108  110  112  114  112  111  114   111 #>  [5061,]   96  104  108  110  112  114  112  111  114   111 #>  [5062,]   95  103  107  109  111  113  111  110  116   113 #>  [5063,]   96  104  108  110  112  114  112  111  114   111 #>  [5064,]   96  104  108  110  112  114  112  111  114   111 #>  [5065,]   95  103  107  109  111  113  111  110  115   112 #>  [5066,]   96  104  108  110  112  114  112  111  114   111 #>  [5067,]   95  103  107  109  111  113  111  110  116   113 #>  [5068,]   96  104  108  110  112  114  112  111  114   111 #>  [5069,]   96  104  108  110  112  114  112  111  114   111 #>  [5070,]   95  103  107  109  111  113  111  110  115   112 #>  [5071,]   96  104  108  110  112  114  112  111  114   111 #>  [5072,]   95  103  107  109  111  113  111  110  116   113 #>  [5073,]   95  103  107  109  111  113  111  110  116   113 #>  [5074,]   95  103  107  109  111  113  111  110  116   113 #>  [5075,]   96  104  108  110  112  114  112  111  114   111 #>  [5076,]   95  103  107  109  111  113  111  110  116   113 #>  [5077,]   96  104  108  110  112  114  112  111  114   111 #>  [5078,]   96  104  108  110  112  114  112  111  114   111 #>  [5079,]   95  103  107  109  111  113  111  110  115   112 #>  [5080,]   96  104  108  110  112  114  112  111  114   111 #>  [5081,]   96  104  108  110  112  114  112  111  114   111 #>  [5082,]   95  103  107  109  111  113  111  110  116   113 #>  [5083,]   96  104  108  110  112  114  112  111  114   111 #>  [5084,]   96  104  108  110  112  114  112  111  114   111 #>  [5085,]   96  104  108  110  112  114  112  111  114   111 #>  [5086,]   95  103  107  109  111  113  111  110  116   113 #>  [5087,]   96  104  108  110  112  114  112  111  114   111 #>  [5088,]   95  103  107  109  111  113  111  110  116   113 #>  [5089,]   95  103  107  109  111  113  111  110  116   113 #>  [5090,]   96  104  108  110  112  114  112  111  114   111 #>  [5091,]   95  103  107  109  111  113  111  110  116   113 #>  [5092,]   95  103  107  109  111  113  111  110  115   112 #>  [5093,]   96  104  108  110  112  114  112  111  114   111 #>  [5094,]   95  103  107  109  111  113  111  110  115   112 #>  [5095,]   96  104  108  110  112  114  112  111  114   111 #>  [5096,]   96  104  108  110  112  114  112  111  114   111 #>  [5097,]   96  104  108  110  112  114  112  111  114   111 #>  [5098,]   95  103  107  109  111  113  111  110  116   113 #>  [5099,]   95  103  107  109  111  113  111  110  116   113 #>  [5100,]   96  104  108  110  112  114  112  111  114   111 #>  [5101,]   98  105  109  111  113  115  113  112  117   114 #>  [5102,]   97  105  109  111  113  115  113  112  117   114 #>  [5103,]   97  105  109  111  113  115  113  112  117   114 #>  [5104,]   98  105  110  112  114  116  114  113  118   115 #>  [5105,]   97  105  109  111  113  115  113  112  117   114 #>  [5106,]   97  105  109  111  113  115  113  112  117   114 #>  [5107,]   98  105  109  111  113  115  113  112  117   114 #>  [5108,]   98  105  109  111  113  115  113  112  117   114 #>  [5109,]   98  105  110  112  114  116  114  113  118   115 #>  [5110,]   98  105  109  111  113  115  113  112  117   114 #>  [5111,]   97  105  110  112  114  116  114  113  118   115 #>  [5112,]   97  105  110  112  114  116  114  113  118   115 #>  [5113,]   98  105  109  111  113  115  113  112  117   114 #>  [5114,]   97  105  110  112  114  116  114  113  118   115 #>  [5115,]   98  105  110  112  114  116  114  113  118   115 #>  [5116,]   98  105  109  111  113  115  113  112  117   114 #>  [5117,]   98  105  109  111  113  115  113  112  117   114 #>  [5118,]   98  105  110  112  114  116  114  113  118   115 #>  [5119,]   97  105  110  112  114  116  114  113  118   115 #>  [5120,]   97  105  109  111  113  115  113  112  117   114 #>  [5121,]   98  105  110  112  114  116  114  113  118   115 #>  [5122,]   97  105  109  111  113  115  113  112  117   114 #>  [5123,]   98  105  109  111  113  115  113  112  117   114 #>  [5124,]   97  105  109  111  113  115  113  112  117   114 #>  [5125,]   98  105  109  111  113  115  113  112  117   114 #>  [5126,]   97  105  110  112  114  116  114  113  118   115 #>  [5127,]   98  105  110  112  114  116  114  113  118   115 #>  [5128,]   98  105  109  111  113  115  113  112  117   114 #>  [5129,]   97  105  109  111  113  115  113  112  117   114 #>  [5130,]   97  105  110  112  114  116  114  113  118   115 #>  [5131,]   97  105  110  112  114  116  114  113  118   115 #>  [5132,]   97  105  109  111  113  115  113  112  117   114 #>  [5133,]   97  105  110  112  114  116  114  113  118   115 #>  [5134,]   97  105  109  111  113  115  113  112  117   114 #>  [5135,]   97  105  109  111  113  115  113  112  117   114 #>  [5136,]   97  105  110  112  114  116  114  113  118   115 #>  [5137,]   98  105  109  111  113  115  113  112  117   114 #>  [5138,]   97  105  110  112  114  116  114  113  118   115 #>  [5139,]   98  105  109  111  113  115  113  112  117   114 #>  [5140,]   97  105  109  111  113  115  113  112  117   114 #>  [5141,]   97  105  110  112  114  116  114  113  118   115 #>  [5142,]   97  105  110  112  114  116  114  113  118   115 #>  [5143,]   98  105  109  111  113  115  113  112  117   114 #>  [5144,]   97  105  109  111  113  115  113  112  117   114 #>  [5145,]   98  105  109  111  113  115  113  112  117   114 #>  [5146,]   98  105  109  111  113  115  113  112  117   114 #>  [5147,]   98  105  109  111  113  115  113  112  117   114 #>  [5148,]   97  105  110  112  114  116  114  113  118   115 #>  [5149,]   97  105  109  111  113  115  113  112  117   114 #>  [5150,]   97  105  109  111  113  115  113  112  117   114 #>  [5151,]   97  105  109  111  113  115  113  112  117   114 #>  [5152,]   97  105  109  111  113  115  113  112  117   114 #>  [5153,]   98  105  109  111  113  115  113  112  117   114 #>  [5154,]   97  105  109  111  113  115  113  112  117   114 #>  [5155,]   97  105  109  111  113  115  113  112  117   114 #>  [5156,]   98  105  109  111  113  115  113  112  117   114 #>  [5157,]   97  105  109  111  113  115  113  112  117   114 #>  [5158,]   97  105  110  112  114  116  114  113  118   115 #>  [5159,]   97  105  109  111  113  115  113  112  117   114 #>  [5160,]   97  105  110  112  114  116  114  113  118   115 #>  [5161,]   98  105  110  112  114  116  114  113  118   115 #>  [5162,]   97  105  109  111  113  115  113  112  117   114 #>  [5163,]   97  105  109  111  113  115  113  112  117   114 #>  [5164,]   98  105  109  111  113  115  113  112  117   114 #>  [5165,]   97  105  109  111  113  115  113  112  117   114 #>  [5166,]   97  105  109  111  113  115  113  112  117   114 #>  [5167,]   97  105  109  111  113  115  113  112  117   114 #>  [5168,]   97  105  110  112  114  116  114  113  118   115 #>  [5169,]   97  105  110  112  114  116  114  113  118   115 #>  [5170,]   98  105  109  111  113  115  113  112  117   114 #>  [5171,]   98  105  109  111  113  115  113  112  117   114 #>  [5172,]   98  105  109  111  113  115  113  112  117   114 #>  [5173,]   98  105  109  111  113  115  113  112  117   114 #>  [5174,]   98  105  110  112  114  116  114  113  118   115 #>  [5175,]   98  105  110  112  114  116  114  113  118   115 #>  [5176,]   98  105  109  111  113  115  113  112  117   114 #>  [5177,]   98  105  109  111  113  115  113  112  117   114 #>  [5178,]   97  105  109  111  113  115  113  112  117   114 #>  [5179,]   98  105  109  111  113  115  113  112  117   114 #>  [5180,]   97  105  109  111  113  115  113  112  117   114 #>  [5181,]   97  105  109  111  113  115  113  112  117   114 #>  [5182,]   98  105  110  112  114  116  114  113  118   115 #>  [5183,]   97  105  109  111  113  115  113  112  117   114 #>  [5184,]   98  105  109  111  113  115  113  112  117   114 #>  [5185,]   97  105  110  112  114  116  114  113  118   115 #>  [5186,]   97  105  109  111  113  115  113  112  117   114 #>  [5187,]   98  105  109  111  113  115  113  112  117   114 #>  [5188,]   98  105  109  111  113  115  113  112  117   114 #>  [5189,]   97  105  109  111  113  115  113  112  117   114 #>  [5190,]   98  105  109  111  113  115  113  112  117   114 #>  [5191,]   97  105  109  111  113  115  113  112  117   114 #>  [5192,]   97  105  110  112  114  116  114  113  118   115 #>  [5193,]   97  105  110  112  114  116  114  113  118   115 #>  [5194,]   98  105  109  111  113  115  113  112  117   114 #>  [5195,]   98  105  109  111  113  115  113  112  117   114 #>  [5196,]   98  105  110  112  114  116  114  113  118   115 #>  [5197,]   97  105  110  112  114  116  114  113  118   115 #>  [5198,]   97  105  109  111  113  115  113  112  117   114 #>  [5199,]   97  105  109  111  113  115  113  112  117   114 #>  [5200,]   98  105  109  111  113  115  113  112  117   114 #>  [5201,]  100  107  112  114  116  118  116  114  119   117 #>  [5202,]  100  107  112  114  116  118  116  114  119   117 #>  [5203,]  100  107  112  114  116  118  116  114  119   117 #>  [5204,]   99  106  111  113  115  117  115  117  121   116 #>  [5205,]  100  107  112  114  116  118  116  114  119   117 #>  [5206,]  100  107  113  115  117  119  117  115  120   117 #>  [5207,]  100  107  112  114  116  118  116  114  119   117 #>  [5208,]   99  106  111  113  115  117  115  116  121   116 #>  [5209,]   99  106  111  113  115  117  115  116  121   116 #>  [5210,]  100  107  113  115  117  119  117  115  120   117 #>  [5211,]   99  106  111  113  115  117  115  117  121   116 #>  [5212,]  100  107  113  115  117  119  117  115  120   117 #>  [5213,]   99  106  111  113  115  117  115  116  121   116 #>  [5214,]  100  107  113  115  117  119  117  115  120   117 #>  [5215,]  100  107  113  115  117  119  117  115  120   117 #>  [5216,]  100  107  112  114  116  118  116  114  119   117 #>  [5217,]   99  106  111  113  115  117  115  116  121   116 #>  [5218,]  100  107  113  115  117  119  117  115  120   117 #>  [5219,]  100  107  113  115  117  119  117  115  120   117 #>  [5220,]  100  107  112  114  116  118  116  114  119   117 #>  [5221,]  100  107  113  115  117  119  117  115  120   117 #>  [5222,]   99  106  111  113  115  117  115  116  121   116 #>  [5223,]  100  107  112  114  116  118  116  114  119   117 #>  [5224,]  100  107  112  114  116  118  116  114  119   117 #>  [5225,]  100  107  112  114  116  118  116  114  119   117 #>  [5226,]  100  107  113  115  117  119  117  115  120   117 #>  [5227,]   99  106  111  113  115  117  115  117  121   116 #>  [5228,]  100  107  112  114  116  118  116  114  119   117 #>  [5229,]  100  107  112  114  116  118  116  114  119   117 #>  [5230,]  100  107  113  115  117  119  117  115  120   117 #>  [5231,]  100  107  113  115  117  119  117  115  120   117 #>  [5232,]  100  107  113  115  117  119  117  115  120   117 #>  [5233,]  100  107  113  115  117  119  117  115  120   117 #>  [5234,]  100  107  113  115  117  119  117  115  120   117 #>  [5235,]   99  106  111  113  115  117  115  116  121   116 #>  [5236,]  100  107  113  115  117  119  117  115  120   117 #>  [5237,]  100  107  112  114  116  118  116  114  119   117 #>  [5238,]  100  107  113  115  117  119  117  115  120   117 #>  [5239,]  100  107  112  114  116  118  116  114  119   117 #>  [5240,]  100  107  112  114  116  118  116  114  119   117 #>  [5241,]  100  107  113  115  117  119  117  115  120   117 #>  [5242,]  100  107  113  115  117  119  117  115  120   117 #>  [5243,]   99  106  111  113  115  117  115  116  121   116 #>  [5244,]   99  106  111  113  115  117  115  116  121   116 #>  [5245,]  100  107  112  114  116  118  116  114  119   117 #>  [5246,]  100  107  112  114  116  118  116  114  119   117 #>  [5247,]  100  107  112  114  116  118  116  114  119   117 #>  [5248,]  100  107  113  115  117  119  117  115  120   117 #>  [5249,]   99  106  111  113  115  117  115  116  121   116 #>  [5250,]  100  107  112  114  116  118  116  114  119   117 #>  [5251,]  100  107  112  114  116  118  116  114  119   117 #>  [5252,]   99  106  111  113  115  117  115  116  121   116 #>  [5253,]  100  107  112  114  116  118  116  114  119   117 #>  [5254,]  100  107  112  114  116  118  116  114  119   117 #>  [5255,]   99  106  111  113  115  117  115  116  121   116 #>  [5256,]  100  107  112  114  116  118  116  114  119   117 #>  [5257,]  100  107  112  114  116  118  116  114  119   117 #>  [5258,]   99  106  111  113  115  117  115  117  121   116 #>  [5259,]  100  107  112  114  116  118  116  114  119   117 #>  [5260,]  100  107  113  115  117  119  117  115  120   117 #>  [5261,]  100  107  113  115  117  119  117  115  120   117 #>  [5262,]  100  107  113  115  117  119  117  115  120   117 #>  [5263,]  100  107  112  114  116  118  116  114  119   117 #>  [5264,]  100  107  113  115  117  119  117  115  120   117 #>  [5265,]  100  107  112  114  116  118  116  114  119   117 #>  [5266,]   99  106  111  113  115  117  115  116  121   116 #>  [5267,]  100  107  113  115  117  119  117  115  120   117 #>  [5268,]  100  107  113  115  117  119  117  115  120   117 #>  [5269,]   99  106  111  113  115  117  115  117  121   116 #>  [5270,]  100  107  112  114  116  118  116  114  119   117 #>  [5271,]  100  107  112  114  116  118  116  114  119   117 #>  [5272,]  100  107  112  114  116  118  116  114  119   117 #>  [5273,]  100  107  113  115  117  119  117  115  120   117 #>  [5274,]  100  107  113  115  117  119  117  115  120   117 #>  [5275,]  100  107  113  115  117  119  117  115  120   117 #>  [5276,]  100  107  112  114  116  118  116  114  119   117 #>  [5277,]  100  107  112  114  116  118  116  114  119   117 #>  [5278,]  100  107  112  114  116  118  116  114  119   117 #>  [5279,]   99  106  111  113  115  117  115  116  121   116 #>  [5280,]   99  106  111  113  115  117  115  116  121   116 #>  [5281,]   99  106  111  113  115  117  115  116  121   116 #>  [5282,]   99  106  111  113  115  117  115  117  121   116 #>  [5283,]   99  106  111  113  115  117  115  116  121   116 #>  [5284,]  100  107  112  114  116  118  116  114  119   117 #>  [5285,]  100  107  113  115  117  119  117  115  120   117 #>  [5286,]  100  107  112  114  116  118  116  114  119   117 #>  [5287,]   99  106  111  113  115  117  115  116  121   116 #>  [5288,]   99  106  111  113  115  117  115  116  121   116 #>  [5289,]   99  106  111  113  115  117  115  116  121   116 #>  [5290,]   99  106  111  113  115  117  115  116  121   116 #>  [5291,]  100  107  112  114  116  118  116  114  119   117 #>  [5292,]   99  106  111  113  115  117  115  117  121   116 #>  [5293,]  100  107  113  115  117  119  117  115  120   117 #>  [5294,]  100  107  112  114  116  118  116  114  119   117 #>  [5295,]   99  106  111  113  115  117  115  116  121   116 #>  [5296,]  100  107  113  115  117  119  117  115  120   117 #>  [5297,]  100  107  113  115  117  119  117  115  120   117 #>  [5298,]  100  107  112  114  116  118  116  114  119   117 #>  [5299,]   99  106  111  113  115  117  115  116  121   116 #>  [5300,]  100  107  112  114  116  118  116  114  119   117 #>  [5301,]  102  109  115  117  119  121  119  119  123   119 #>  [5302,]  102  109  115  117  119  121  119  119  123   119 #>  [5303,]  101  108  114  116  118  120  118  118  122   118 #>  [5304,]  101  108  114  116  118  120  118  118  122   118 #>  [5305,]  101  108  114  116  118  120  118  118  122   118 #>  [5306,]  102  109  115  117  119  121  119  119  123   119 #>  [5307,]  101  108  114  116  118  120  118  118  122   118 #>  [5308,]  101  108  114  116  118  120  118  118  122   118 #>  [5309,]  101  108  114  116  118  120  118  118  122   118 #>  [5310,]  101  108  114  116  118  120  118  118  122   118 #>  [5311,]  102  109  115  117  119  121  119  119  123   119 #>  [5312,]  101  108  114  116  118  120  118  118  122   118 #>  [5313,]  102  109  115  117  119  121  119  119  123   119 #>  [5314,]  102  109  115  117  119  121  119  119  123   119 #>  [5315,]  102  109  115  117  119  121  119  119  123   119 #>  [5316,]  102  109  115  117  119  121  119  119  123   119 #>  [5317,]  102  109  115  117  119  121  119  119  123   119 #>  [5318,]  101  108  114  116  118  120  118  118  122   118 #>  [5319,]  102  109  115  117  119  121  119  119  123   119 #>  [5320,]  101  108  114  116  118  120  118  118  122   118 #>  [5321,]  102  109  115  117  119  121  119  119  123   119 #>  [5322,]  102  109  115  117  119  121  119  119  123   119 #>  [5323,]  101  108  114  116  118  120  118  118  122   118 #>  [5324,]  101  108  114  116  118  120  118  118  122   118 #>  [5325,]  101  108  114  116  118  120  118  118  122   118 #>  [5326,]  102  109  115  117  119  121  119  119  123   119 #>  [5327,]  102  109  115  117  119  121  119  119  123   119 #>  [5328,]  101  108  114  116  118  120  118  118  122   118 #>  [5329,]  102  109  115  117  119  121  119  119  123   119 #>  [5330,]  101  108  114  116  118  120  118  118  122   118 #>  [5331,]  101  108  114  116  118  120  118  118  122   118 #>  [5332,]  101  108  114  116  118  120  118  118  122   118 #>  [5333,]  102  109  115  117  119  121  119  119  123   119 #>  [5334,]  101  108  114  116  118  120  118  118  122   118 #>  [5335,]  102  109  115  117  119  121  119  119  123   119 #>  [5336,]  101  108  114  116  118  120  118  118  122   118 #>  [5337,]  102  109  115  117  119  121  119  119  123   119 #>  [5338,]  101  108  114  116  118  120  118  118  122   118 #>  [5339,]  101  108  114  116  118  120  118  118  122   118 #>  [5340,]  101  108  114  116  118  120  118  118  122   118 #>  [5341,]  102  109  115  117  119  121  119  119  123   119 #>  [5342,]  101  108  114  116  118  120  118  118  122   118 #>  [5343,]  101  108  114  116  118  120  118  118  122   118 #>  [5344,]  102  109  115  117  119  121  119  119  123   119 #>  [5345,]  101  108  114  116  118  120  118  118  122   118 #>  [5346,]  101  108  114  116  118  120  118  118  122   118 #>  [5347,]  102  109  115  117  119  121  119  119  123   119 #>  [5348,]  101  108  114  116  118  120  118  118  122   118 #>  [5349,]  101  108  114  116  118  120  118  118  122   118 #>  [5350,]  102  109  115  117  119  121  119  119  123   119 #>  [5351,]  101  108  114  116  118  120  118  118  122   118 #>  [5352,]  102  109  115  117  119  121  119  119  123   119 #>  [5353,]  101  108  114  116  118  120  118  118  122   118 #>  [5354,]  101  108  114  116  118  120  118  118  122   118 #>  [5355,]  102  109  115  117  119  121  119  119  123   119 #>  [5356,]  101  108  114  116  118  120  118  118  122   118 #>  [5357,]  101  108  114  116  118  120  118  118  122   118 #>  [5358,]  102  109  115  117  119  121  119  119  123   119 #>  [5359,]  102  109  115  117  119  121  119  119  123   119 #>  [5360,]  101  108  114  116  118  120  118  118  122   118 #>  [5361,]  102  109  115  117  119  121  119  119  123   119 #>  [5362,]  101  108  114  116  118  120  118  118  122   118 #>  [5363,]  101  108  114  116  118  120  118  118  122   118 #>  [5364,]  101  108  114  116  118  120  118  118  122   118 #>  [5365,]  101  108  114  116  118  120  118  118  122   118 #>  [5366,]  101  108  114  116  118  120  118  118  122   118 #>  [5367,]  101  108  114  116  118  120  118  118  122   118 #>  [5368,]  102  109  115  117  119  121  119  119  123   119 #>  [5369,]  102  109  115  117  119  121  119  119  123   119 #>  [5370,]  102  109  115  117  119  121  119  119  123   119 #>  [5371,]  102  109  115  117  119  121  119  119  123   119 #>  [5372,]  101  108  114  116  118  120  118  118  122   118 #>  [5373,]  102  109  115  117  119  121  119  119  123   119 #>  [5374,]  102  109  115  117  119  121  119  119  123   119 #>  [5375,]  102  109  115  117  119  121  119  119  123   119 #>  [5376,]  102  109  115  117  119  121  119  119  123   119 #>  [5377,]  102  109  115  117  119  121  119  119  123   119 #>  [5378,]  101  108  114  116  118  120  118  118  122   118 #>  [5379,]  102  109  115  117  119  121  119  119  123   119 #>  [5380,]  101  108  114  116  118  120  118  118  122   118 #>  [5381,]  102  109  115  117  119  121  119  119  123   119 #>  [5382,]  101  108  114  116  118  120  118  118  122   118 #>  [5383,]  102  109  115  117  119  121  119  119  123   119 #>  [5384,]  102  109  115  117  119  121  119  119  123   119 #>  [5385,]  101  108  114  116  118  120  118  118  122   118 #>  [5386,]  102  109  115  117  119  121  119  119  123   119 #>  [5387,]  102  109  115  117  119  121  119  119  123   119 #>  [5388,]  101  108  114  116  118  120  118  118  122   118 #>  [5389,]  101  108  114  116  118  120  118  118  122   118 #>  [5390,]  102  109  115  117  119  121  119  119  123   119 #>  [5391,]  101  108  114  116  118  120  118  118  122   118 #>  [5392,]  102  109  115  117  119  121  119  119  123   119 #>  [5393,]  102  109  115  117  119  121  119  119  123   119 #>  [5394,]  102  109  115  117  119  121  119  119  123   119 #>  [5395,]  101  108  114  116  118  120  118  118  122   118 #>  [5396,]  102  109  115  117  119  121  119  119  123   119 #>  [5397,]  102  109  115  117  119  121  119  119  123   119 #>  [5398,]  102  109  115  117  119  121  119  119  123   119 #>  [5399,]  102  109  115  117  119  121  119  119  123   119 #>  [5400,]  102  109  115  117  119  121  119  119  123   119 #>  [5401,]  104  111  117  119  121  123  121  121  125   121 #>  [5402,]  104  111  117  119  121  123  121  121  125   121 #>  [5403,]  103  110  116  118  120  122  120  120  124   120 #>  [5404,]  104  111  117  119  121  123  121  121  125   121 #>  [5405,]  104  111  117  119  121  123  121  121  125   121 #>  [5406,]  104  111  117  119  121  123  121  121  125   121 #>  [5407,]  104  111  117  119  121  123  121  121  125   121 #>  [5408,]  104  111  117  119  121  123  121  121  125   121 #>  [5409,]  104  111  117  119  121  123  121  121  125   121 #>  [5410,]  103  110  116  118  120  122  120  120  124   120 #>  [5411,]  103  110  116  118  120  122  120  120  124   120 #>  [5412,]  104  111  117  119  121  123  121  121  125   121 #>  [5413,]  104  111  117  119  121  123  121  121  125   121 #>  [5414,]  103  110  116  118  120  122  120  120  124   120 #>  [5415,]  104  111  117  119  121  123  121  121  125   121 #>  [5416,]  104  111  117  119  121  123  121  121  125   121 #>  [5417,]  104  111  117  119  121  123  121  121  125   121 #>  [5418,]  104  111  117  119  121  123  121  121  125   121 #>  [5419,]  104  111  117  119  121  123  121  121  125   121 #>  [5420,]  104  111  117  119  121  123  121  121  125   121 #>  [5421,]  104  111  117  119  121  123  121  121  125   121 #>  [5422,]  104  111  117  119  121  123  121  121  125   121 #>  [5423,]  104  111  117  119  121  123  121  121  125   121 #>  [5424,]  104  111  117  119  121  123  121  121  125   121 #>  [5425,]  104  111  117  119  121  123  121  121  125   121 #>  [5426,]  104  111  117  119  121  123  121  121  125   121 #>  [5427,]  104  111  117  119  121  123  121  121  125   121 #>  [5428,]  104  111  117  119  121  123  121  121  125   121 #>  [5429,]  104  111  117  119  121  123  121  121  125   121 #>  [5430,]  104  111  117  119  121  123  121  121  125   121 #>  [5431,]  104  111  117  119  121  123  121  121  125   121 #>  [5432,]  103  110  116  118  120  122  120  120  124   120 #>  [5433,]  104  111  117  119  121  123  121  121  125   121 #>  [5434,]  104  111  117  119  121  123  121  121  125   121 #>  [5435,]  104  111  117  119  121  123  121  121  125   121 #>  [5436,]  104  111  117  119  121  123  121  121  125   121 #>  [5437,]  104  111  117  119  121  123  121  121  125   121 #>  [5438,]  104  111  117  119  121  123  121  121  125   121 #>  [5439,]  104  111  117  119  121  123  121  121  125   121 #>  [5440,]  103  110  116  118  120  122  120  120  124   120 #>  [5441,]  104  111  117  119  121  123  121  121  125   121 #>  [5442,]  104  111  117  119  121  123  121  121  125   121 #>  [5443,]  104  111  117  119  121  123  121  121  125   121 #>  [5444,]  104  111  117  119  121  123  121  121  125   121 #>  [5445,]  104  111  117  119  121  123  121  121  125   121 #>  [5446,]  104  111  117  119  121  123  121  121  125   121 #>  [5447,]  104  111  117  119  121  123  121  121  125   121 #>  [5448,]  103  110  116  118  120  122  120  120  124   120 #>  [5449,]  104  111  117  119  121  123  121  121  125   121 #>  [5450,]  104  111  117  119  121  123  121  121  125   121 #>  [5451,]  104  111  117  119  121  123  121  121  125   121 #>  [5452,]  104  111  117  119  121  123  121  121  125   121 #>  [5453,]  104  111  117  119  121  123  121  121  125   121 #>  [5454,]  104  111  117  119  121  123  121  121  125   121 #>  [5455,]  104  111  117  119  121  123  121  121  125   121 #>  [5456,]  104  111  117  119  121  123  121  121  125   121 #>  [5457,]  104  111  117  119  121  123  121  121  125   121 #>  [5458,]  104  111  117  119  121  123  121  121  125   121 #>  [5459,]  104  111  117  119  121  123  121  121  125   121 #>  [5460,]  104  111  117  119  121  123  121  121  125   121 #>  [5461,]  104  111  117  119  121  123  121  121  125   121 #>  [5462,]  104  111  117  119  121  123  121  121  125   121 #>  [5463,]  104  111  117  119  121  123  121  121  125   121 #>  [5464,]  104  111  117  119  121  123  121  121  125   121 #>  [5465,]  104  111  117  119  121  123  121  121  125   121 #>  [5466,]  104  111  117  119  121  123  121  121  125   121 #>  [5467,]  104  111  117  119  121  123  121  121  125   121 #>  [5468,]  104  111  117  119  121  123  121  121  125   121 #>  [5469,]  104  111  117  119  121  123  121  121  125   121 #>  [5470,]  103  110  116  118  120  122  120  120  124   120 #>  [5471,]  104  111  117  119  121  123  121  121  125   121 #>  [5472,]  104  111  117  119  121  123  121  121  125   121 #>  [5473,]  104  111  117  119  121  123  121  121  125   121 #>  [5474,]  104  111  117  119  121  123  121  121  125   121 #>  [5475,]  104  111  117  119  121  123  121  121  125   121 #>  [5476,]  104  111  117  119  121  123  121  121  125   121 #>  [5477,]  104  111  117  119  121  123  121  121  125   121 #>  [5478,]  104  111  117  119  121  123  121  121  125   121 #>  [5479,]  104  111  117  119  121  123  121  121  125   121 #>  [5480,]  104  111  117  119  121  123  121  121  125   121 #>  [5481,]  104  111  117  119  121  123  121  121  125   121 #>  [5482,]  104  111  117  119  121  123  121  121  125   121 #>  [5483,]  104  111  117  119  121  123  121  121  125   121 #>  [5484,]  104  111  117  119  121  123  121  121  125   121 #>  [5485,]  104  111  117  119  121  123  121  121  125   121 #>  [5486,]  104  111  117  119  121  123  121  121  125   121 #>  [5487,]  104  111  117  119  121  123  121  121  125   121 #>  [5488,]  104  111  117  119  121  123  121  121  125   121 #>  [5489,]  104  111  117  119  121  123  121  121  125   121 #>  [5490,]  104  111  117  119  121  123  121  121  125   121 #>  [5491,]  104  111  117  119  121  123  121  121  125   121 #>  [5492,]  104  111  117  119  121  123  121  121  125   121 #>  [5493,]  104  111  117  119  121  123  121  121  125   121 #>  [5494,]  104  111  117  119  121  123  121  121  125   121 #>  [5495,]  104  111  117  119  121  123  121  121  125   121 #>  [5496,]  104  111  117  119  121  123  121  121  125   121 #>  [5497,]  104  111  117  119  121  123  121  121  125   121 #>  [5498,]  103  110  116  118  120  122  120  120  124   120 #>  [5499,]  104  111  117  119  121  123  121  121  125   121 #>  [5500,]  104  111  117  119  121  123  121  121  125   121 #>  [5501,]  106  113  118  121  123  125  122  123  127   122 #>  [5502,]  106  113  118  121  123  125  122  123  127   122 #>  [5503,]  106  113  118  120  122  124  122  123  127   122 #>  [5504,]  105  112  118  120  122  124  122  122  126   124 #>  [5505,]  106  113  118  120  122  124  122  123  127   122 #>  [5506,]  106  113  118  121  123  125  122  123  127   122 #>  [5507,]  106  113  118  120  122  124  122  123  127   122 #>  [5508,]  105  112  118  120  122  124  122  122  126   124 #>  [5509,]  105  112  118  120  122  124  122  122  126   124 #>  [5510,]  106  113  118  120  122  124  122  123  127   122 #>  [5511,]  105  112  118  120  122  124  122  123  127   122 #>  [5512,]  106  113  118  120  122  124  122  123  127   122 #>  [5513,]  105  112  118  121  123  125  122  123  127   122 #>  [5514,]  106  113  118  121  123  125  122  123  127   122 #>  [5515,]  106  113  118  121  123  125  122  123  127   122 #>  [5516,]  106  113  118  121  123  125  122  123  127   122 #>  [5517,]  105  112  118  121  123  125  122  122  126   123 #>  [5518,]  106  113  118  120  122  124  122  123  127   122 #>  [5519,]  106  113  118  120  122  124  122  123  127   122 #>  [5520,]  106  113  118  120  122  124  122  123  127   122 #>  [5521,]  106  113  118  121  123  125  122  123  127   122 #>  [5522,]  105  112  118  120  122  124  122  122  126   124 #>  [5523,]  106  113  118  120  122  124  122  123  127   122 #>  [5524,]  106  113  118  120  122  124  122  123  127   122 #>  [5525,]  106  113  118  120  122  124  122  123  127   122 #>  [5526,]  106  113  118  121  123  125  122  123  127   122 #>  [5527,]  105  112  118  121  123  125  122  122  126   124 #>  [5528,]  106  113  118  120  122  124  122  123  127   122 #>  [5529,]  106  113  118  121  123  125  122  123  127   122 #>  [5530,]  106  113  118  120  122  124  122  123  127   122 #>  [5531,]  106  113  118  120  122  124  122  123  127   122 #>  [5532,]  106  113  118  120  122  124  122  123  127   122 #>  [5533,]  106  113  118  121  123  125  122  123  127   122 #>  [5534,]  106  113  118  120  122  124  122  123  127   122 #>  [5535,]  105  112  118  121  123  125  122  122  126   123 #>  [5536,]  106  113  118  120  122  124  122  123  127   122 #>  [5537,]  106  113  118  121  123  125  122  123  127   122 #>  [5538,]  106  113  118  120  122  124  122  123  127   122 #>  [5539,]  106  113  118  120  122  124  122  123  127   122 #>  [5540,]  106  113  118  120  122  124  122  123  127   122 #>  [5541,]  106  113  118  121  123  125  122  123  127   122 #>  [5542,]  106  113  118  120  122  124  122  123  127   122 #>  [5543,]  106  113  118  120  122  124  122  123  127   122 #>  [5544,]  105  112  118  121  123  125  122  122  126   123 #>  [5545,]  106  113  118  120  122  124  122  123  127   122 #>  [5546,]  106  113  118  120  122  124  122  123  127   122 #>  [5547,]  106  113  118  120  122  124  122  123  127   122 #>  [5548,]  106  113  118  120  122  124  122  123  127   122 #>  [5549,]  105  112  118  120  122  124  122  123  127   122 #>  [5550,]  106  113  118  121  123  125  122  123  127   122 #>  [5551,]  106  113  118  120  122  124  122  123  127   122 #>  [5552,]  105  112  118  121  123  125  122  122  126   124 #>  [5553,]  106  113  118  120  122  124  122  123  127   122 #>  [5554,]  106  113  118  120  122  124  122  123  127   122 #>  [5555,]  105  112  118  120  122  124  122  123  127   122 #>  [5556,]  106  113  118  120  122  124  122  123  127   122 #>  [5557,]  106  113  118  120  122  124  122  123  127   122 #>  [5558,]  105  112  118  120  122  124  122  122  126   124 #>  [5559,]  106  113  118  121  123  125  122  123  127   122 #>  [5560,]  106  113  118  120  122  124  122  123  127   122 #>  [5561,]  106  113  118  121  123  125  122  123  127   122 #>  [5562,]  106  113  118  120  122  124  122  123  127   122 #>  [5563,]  106  113  118  120  122  124  122  123  127   122 #>  [5564,]  106  113  118  120  122  124  122  123  127   122 #>  [5565,]  106  113  118  120  122  124  122  123  127   122 #>  [5566,]  105  112  118  120  122  124  122  122  126   123 #>  [5567,]  106  113  118  120  122  124  122  123  127   122 #>  [5568,]  106  113  118  121  123  125  122  123  127   122 #>  [5569,]  106  113  118  120  122  124  122  123  127   122 #>  [5570,]  106  113  118  121  123  125  122  123  127   122 #>  [5571,]  106  113  118  121  123  125  122  123  127   122 #>  [5572,]  106  113  118  120  122  124  122  123  127   122 #>  [5573,]  106  113  118  121  123  125  122  123  127   122 #>  [5574,]  106  113  118  120  122  124  122  123  127   122 #>  [5575,]  106  113  118  120  122  124  122  123  127   122 #>  [5576,]  106  113  118  121  123  125  122  123  127   122 #>  [5577,]  106  113  118  121  123  125  122  123  127   122 #>  [5578,]  106  113  118  120  122  124  122  123  127   122 #>  [5579,]  106  113  118  121  123  125  122  123  127   122 #>  [5580,]  105  112  118  120  122  124  122  123  127   122 #>  [5581,]  105  112  118  121  123  125  122  122  126   123 #>  [5582,]  105  112  118  120  122  124  122  122  126   124 #>  [5583,]  105  112  118  121  123  125  122  123  127   122 #>  [5584,]  106  113  118  120  122  124  122  123  127   122 #>  [5585,]  106  113  118  120  122  124  122  123  127   122 #>  [5586,]  106  113  118  121  123  125  122  123  127   122 #>  [5587,]  105  112  118  120  122  124  122  122  126   124 #>  [5588,]  105  112  118  120  122  124  122  123  127   122 #>  [5589,]  106  113  118  120  122  124  122  123  127   122 #>  [5590,]  105  112  118  120  122  124  122  122  126   124 #>  [5591,]  106  113  118  120  122  124  122  123  127   122 #>  [5592,]  105  112  118  120  122  124  122  122  126   123 #>  [5593,]  106  113  118  121  123  125  122  123  127   122 #>  [5594,]  106  113  118  121  123  125  122  123  127   122 #>  [5595,]  105  112  118  120  122  124  122  122  126   123 #>  [5596,]  106  113  118  121  123  125  122  123  127   122 #>  [5597,]  106  113  118  120  122  124  122  123  127   122 #>  [5598,]  106  113  118  120  122  124  122  123  127   122 #>  [5599,]  105  112  118  121  123  125  122  122  126   124 #>  [5600,]  106  113  118  121  123  125  122  123  127   122 #>  [5601,]  108  115  119  123  125  127  124  125  129   126 #>  [5602,]  108  115  119  122  124  126  123  124  128   125 #>  [5603,]  108  115  119  122  124  126  123  124  128   125 #>  [5604,]  108  115  119  122  124  126  123  124  128   125 #>  [5605,]  108  115  119  123  125  127  124  125  129   126 #>  [5606,]  107  114  119  122  124  126  123  124  128   125 #>  [5607,]  108  115  119  122  124  126  123  124  128   125 #>  [5608,]  108  115  119  122  124  126  123  124  128   125 #>  [5609,]  108  115  119  122  124  126  123  124  128   125 #>  [5610,]  108  115  119  123  125  127  124  125  129   126 #>  [5611,]  108  115  119  123  125  127  124  125  129   126 #>  [5612,]  108  115  119  123  125  127  124  125  129   126 #>  [5613,]  108  115  119  122  124  126  123  124  128   125 #>  [5614,]  108  115  119  123  125  127  124  125  129   126 #>  [5615,]  108  115  119  123  125  127  124  125  129   126 #>  [5616,]  108  115  119  122  124  126  123  124  128   125 #>  [5617,]  108  115  119  123  125  127  124  125  129   126 #>  [5618,]  108  115  119  123  125  127  124  125  129   126 #>  [5619,]  108  115  119  122  124  126  123  124  128   125 #>  [5620,]  107  114  119  122  124  126  123  124  128   125 #>  [5621,]  107  114  119  122  124  126  123  124  128   125 #>  [5622,]  108  115  119  123  125  127  124  125  129   126 #>  [5623,]  108  115  119  122  124  126  123  124  128   125 #>  [5624,]  108  115  119  122  124  126  123  124  128   125 #>  [5625,]  107  114  119  122  124  126  123  124  128   125 #>  [5626,]  108  115  119  123  125  127  124  125  129   126 #>  [5627,]  108  115  119  123  125  127  124  125  129   126 #>  [5628,]  108  115  119  122  124  126  123  124  128   125 #>  [5629,]  108  115  119  122  124  126  123  124  128   125 #>  [5630,]  108  115  119  122  124  126  123  124  128   125 #>  [5631,]  108  115  119  123  125  127  124  125  129   126 #>  [5632,]  108  115  119  123  125  127  124  125  129   126 #>  [5633,]  108  115  119  122  124  126  123  124  128   125 #>  [5634,]  108  115  119  122  124  126  123  124  128   125 #>  [5635,]  107  114  119  122  124  126  123  124  128   125 #>  [5636,]  108  115  119  122  124  126  123  124  128   125 #>  [5637,]  108  115  119  122  124  126  123  124  128   125 #>  [5638,]  108  115  119  123  125  127  124  125  129   126 #>  [5639,]  108  115  119  122  124  126  123  124  128   125 #>  [5640,]  108  115  119  122  124  126  123  124  128   125 #>  [5641,]  108  115  119  122  124  126  123  124  128   125 #>  [5642,]  107  114  119  122  124  126  123  124  128   125 #>  [5643,]  108  115  119  123  125  127  124  125  129   126 #>  [5644,]  107  114  119  122  124  126  123  124  128   125 #>  [5645,]  108  115  119  122  124  126  123  124  128   125 #>  [5646,]  108  115  119  122  124  126  123  124  128   125 #>  [5647,]  108  115  119  123  125  127  124  125  129   126 #>  [5648,]  108  115  119  122  124  126  123  124  128   125 #>  [5649,]  108  115  119  122  124  126  123  124  128   125 #>  [5650,]  108  115  119  122  124  126  123  124  128   125 #>  [5651,]  108  115  119  122  124  126  123  124  128   125 #>  [5652,]  108  115  119  123  125  127  124  125  129   126 #>  [5653,]  107  114  119  122  124  126  123  124  128   125 #>  [5654,]  108  115  119  122  124  126  123  124  128   125 #>  [5655,]  108  115  119  122  124  126  123  124  128   125 #>  [5656,]  107  114  119  122  124  126  123  124  128   125 #>  [5657,]  108  115  119  122  124  126  123  124  128   125 #>  [5658,]  108  115  119  123  125  127  124  125  129   126 #>  [5659,]  108  115  119  123  125  127  124  125  129   126 #>  [5660,]  108  115  119  122  124  126  123  124  128   125 #>  [5661,]  108  115  119  123  125  127  124  125  129   126 #>  [5662,]  108  115  119  122  124  126  123  124  128   125 #>  [5663,]  108  115  119  122  124  126  123  124  128   125 #>  [5664,]  108  115  119  122  124  126  123  124  128   125 #>  [5665,]  107  114  119  122  124  126  123  124  128   125 #>  [5666,]  108  115  119  123  125  127  124  125  129   126 #>  [5667,]  108  115  119  122  124  126  123  124  128   125 #>  [5668,]  108  115  119  123  125  127  124  125  129   126 #>  [5669,]  108  115  119  122  124  126  123  124  128   125 #>  [5670,]  108  115  119  123  125  127  124  125  129   126 #>  [5671,]  108  115  119  123  125  127  124  125  129   126 #>  [5672,]  108  115  119  122  124  126  123  124  128   125 #>  [5673,]  107  114  119  122  124  126  123  124  128   125 #>  [5674,]  107  114  119  122  124  126  123  124  128   125 #>  [5675,]  108  115  119  123  125  127  124  125  129   126 #>  [5676,]  108  115  119  122  124  126  123  124  128   125 #>  [5677,]  108  115  119  123  125  127  124  125  129   126 #>  [5678,]  108  115  119  122  124  126  123  124  128   125 #>  [5679,]  108  115  119  123  125  127  124  125  129   126 #>  [5680,]  107  114  119  122  124  126  123  124  128   125 #>  [5681,]  108  115  119  122  124  126  123  124  128   125 #>  [5682,]  107  114  119  122  124  126  123  124  128   125 #>  [5683,]  108  115  119  122  124  126  123  124  128   125 #>  [5684,]  107  114  119  122  124  126  123  124  128   125 #>  [5685,]  107  114  119  122  124  126  123  124  128   125 #>  [5686,]  107  114  119  122  124  126  123  124  128   125 #>  [5687,]  108  115  119  123  125  127  124  125  129   126 #>  [5688,]  108  115  119  122  124  126  123  124  128   125 #>  [5689,]  107  114  119  122  124  126  123  124  128   125 #>  [5690,]  108  115  119  123  125  127  124  125  129   126 #>  [5691,]  108  115  119  123  125  127  124  125  129   126 #>  [5692,]  108  115  119  123  125  127  124  125  129   126 #>  [5693,]  108  115  119  122  124  126  123  124  128   125 #>  [5694,]  107  114  119  122  124  126  123  124  128   125 #>  [5695,]  108  115  119  123  125  127  124  125  129   126 #>  [5696,]  108  115  119  123  125  127  124  125  129   126 #>  [5697,]  108  115  119  122  124  126  123  124  128   125 #>  [5698,]  108  115  119  122  124  126  123  124  128   125 #>  [5699,]  107  114  119  122  124  126  123  124  128   125 #>  [5700,]  108  115  119  123  125  127  124  125  129   126 #>  [5701,]  110  117  120  125  127  130  127  128  131   128 #>  [5702,]  110  117  120  124  126  128  125  126  130   127 #>  [5703,]  109  116  120  124  126  128  125  126  130   127 #>  [5704,]  110  117  120  124  126  128  125  126  130   127 #>  [5705,]  110  117  120  125  127  129  126  127  131   128 #>  [5706,]  110  117  120  124  126  128  125  126  130   127 #>  [5707,]  110  117  120  124  126  128  125  126  130   127 #>  [5708,]  110  117  120  124  126  128  125  126  130   127 #>  [5709,]  110  117  120  125  127  130  127  128  131   128 #>  [5710,]  110  117  120  124  126  128  125  126  130   127 #>  [5711,]  109  116  120  125  127  130  127  128  131   128 #>  [5712,]  109  116  120  124  126  128  125  126  130   127 #>  [5713,]  110  117  120  125  127  130  127  128  131   128 #>  [5714,]  109  116  120  124  126  128  125  126  130   127 #>  [5715,]  110  117  120  124  126  128  125  126  130   127 #>  [5716,]  110  117  120  124  126  128  125  126  130   127 #>  [5717,]  110  117  120  125  127  130  127  128  131   128 #>  [5718,]  110  117  120  125  127  130  127  128  131   128 #>  [5719,]  110  117  120  124  126  128  125  126  130   127 #>  [5720,]  109  116  120  125  127  130  127  128  131   128 #>  [5721,]  110  117  120  125  127  129  126  127  131   128 #>  [5722,]  110  117  120  124  126  128  125  126  130   127 #>  [5723,]  110  117  120  124  126  128  125  126  130   127 #>  [5724,]  110  117  120  124  126  128  125  126  130   127 #>  [5725,]  110  117  120  124  126  128  125  126  130   127 #>  [5726,]  109  116  120  124  126  128  125  126  130   127 #>  [5727,]  110  117  120  125  127  130  127  128  131   128 #>  [5728,]  110  117  120  125  127  130  127  128  131   128 #>  [5729,]  109  116  120  125  127  130  127  128  131   128 #>  [5730,]  110  117  120  124  126  128  125  126  130   127 #>  [5731,]  110  117  120  124  126  128  125  126  130   127 #>  [5732,]  109  116  120  124  126  128  125  126  130   127 #>  [5733,]  110  117  120  125  127  130  127  128  131   128 #>  [5734,]  110  117  120  124  126  128  125  126  130   127 #>  [5735,]  110  117  120  124  126  128  125  126  130   127 #>  [5736,]  109  116  120  125  127  130  127  128  131   128 #>  [5737,]  110  117  120  124  126  128  125  126  130   127 #>  [5738,]  110  117  120  125  127  130  127  128  131   128 #>  [5739,]  110  117  120  125  127  130  127  128  131   128 #>  [5740,]  109  116  120  124  126  128  125  126  130   127 #>  [5741,]  109  116  120  125  127  129  126  127  131   128 #>  [5742,]  109  116  120  125  127  130  127  128  131   128 #>  [5743,]  110  117  120  124  126  128  125  126  130   127 #>  [5744,]  110  117  120  124  126  128  125  126  130   127 #>  [5745,]  110  117  120  124  126  128  125  126  130   127 #>  [5746,]  110  117  120  124  126  128  125  126  130   127 #>  [5747,]  110  117  120  124  126  128  125  126  130   127 #>  [5748,]  109  116  120  124  126  128  125  126  130   127 #>  [5749,]  110  117  120  124  126  128  125  126  130   127 #>  [5750,]  110  117  120  124  126  128  125  126  130   127 #>  [5751,]  109  116  120  125  127  130  127  128  131   128 #>  [5752,]  110  117  120  124  126  128  125  126  130   127 #>  [5753,]  110  117  120  125  127  130  127  128  131   128 #>  [5754,]  109  116  120  125  127  130  127  128  131   128 #>  [5755,]  110  117  120  124  126  128  125  126  130   127 #>  [5756,]  110  117  120  125  127  130  127  128  131   128 #>  [5757,]  110  117  120  124  126  128  125  126  130   127 #>  [5758,]  110  117  120  125  127  130  127  128  131   128 #>  [5759,]  110  117  120  124  126  128  125  126  130   127 #>  [5760,]  109  116  120  124  126  128  125  126  130   127 #>  [5761,]  110  117  120  125  127  129  126  127  131   128 #>  [5762,]  109  116  120  125  127  130  127  128  131   128 #>  [5763,]  110  117  120  124  126  128  125  126  130   127 #>  [5764,]  110  117  120  124  126  128  125  126  130   127 #>  [5765,]  110  117  120  125  127  130  127  128  131   128 #>  [5766,]  109  116  120  125  127  130  127  128  131   128 #>  [5767,]  110  117  120  124  126  128  125  126  130   127 #>  [5768,]  109  116  120  124  126  128  125  126  130   127 #>  [5769,]  109  116  120  124  126  128  125  126  130   127 #>  [5770,]  110  117  120  125  127  129  126  127  131   128 #>  [5771,]  110  117  120  124  126  128  125  126  130   127 #>  [5772,]  110  117  120  124  126  128  125  126  130   127 #>  [5773,]  110  117  120  124  126  128  125  126  130   127 #>  [5774,]  110  117  120  124  126  128  125  126  130   127 #>  [5775,]  110  117  120  124  126  128  125  126  130   127 #>  [5776,]  110  117  120  124  126  128  125  126  130   127 #>  [5777,]  110  117  120  125  127  130  127  128  131   128 #>  [5778,]  110  117  120  124  126  128  125  126  130   127 #>  [5779,]  110  117  120  125  127  130  127  128  131   128 #>  [5780,]  109  116  120  124  126  128  125  126  130   127 #>  [5781,]  109  116  120  124  126  128  125  126  130   127 #>  [5782,]  110  117  120  125  127  130  127  128  131   128 #>  [5783,]  109  116  120  125  127  130  127  128  131   128 #>  [5784,]  110  117  120  125  127  130  127  128  131   128 #>  [5785,]  110  117  120  125  127  130  127  128  131   128 #>  [5786,]  110  117  120  124  126  128  125  126  130   127 #>  [5787,]  110  117  120  125  127  130  127  128  131   128 #>  [5788,]  110  117  120  124  126  128  125  126  130   127 #>  [5789,]  109  116  120  125  127  130  127  128  131   128 #>  [5790,]  110  117  120  125  127  130  127  128  131   128 #>  [5791,]  109  116  120  125  127  130  127  128  131   128 #>  [5792,]  110  117  120  124  126  128  125  126  130   127 #>  [5793,]  110  117  120  125  127  130  127  128  131   128 #>  [5794,]  110  117  120  125  127  130  127  128  131   128 #>  [5795,]  110  117  120  124  126  128  125  126  130   127 #>  [5796,]  110  117  120  124  126  128  125  126  130   127 #>  [5797,]  110  117  120  124  126  128  125  126  130   127 #>  [5798,]  110  117  120  124  126  128  125  126  130   127 #>  [5799,]  110  117  120  124  126  128  125  126  130   127 #>  [5800,]  110  117  120  124  126  128  125  126  130   127 #>  [5801,]  112  119  122  127  129  132  129  130  133   130 #>  [5802,]  112  119  122  127  129  132  129  130  133   130 #>  [5803,]  111  118  121  126  128  131  128  129  132   129 #>  [5804,]  111  118  121  126  128  131  128  129  132   129 #>  [5805,]  112  119  122  127  129  132  129  130  133   130 #>  [5806,]  112  119  122  127  129  132  129  130  133   130 #>  [5807,]  111  118  121  126  128  131  128  129  132   129 #>  [5808,]  111  118  121  126  128  131  128  129  132   129 #>  [5809,]  112  119  122  127  129  132  129  130  133   130 #>  [5810,]  112  119  122  127  129  132  129  130  133   130 #>  [5811,]  112  119  122  127  129  132  129  130  133   130 #>  [5812,]  111  118  121  126  128  131  128  129  132   129 #>  [5813,]  112  119  122  127  129  132  129  130  133   130 #>  [5814,]  111  118  121  126  128  131  128  129  132   129 #>  [5815,]  112  119  122  127  129  132  129  130  133   130 #>  [5816,]  112  119  122  127  129  132  129  130  133   130 #>  [5817,]  112  119  122  127  129  132  129  130  133   130 #>  [5818,]  112  119  122  127  129  132  129  130  133   130 #>  [5819,]  112  119  122  127  129  132  129  130  133   130 #>  [5820,]  112  119  122  127  129  132  129  130  133   130 #>  [5821,]  112  119  122  127  129  132  129  130  133   130 #>  [5822,]  112  119  122  127  129  132  129  130  133   130 #>  [5823,]  111  118  121  126  128  131  128  129  132   129 #>  [5824,]  112  119  122  127  129  132  129  130  133   130 #>  [5825,]  111  118  121  126  128  131  128  129  132   129 #>  [5826,]  112  119  122  127  129  132  129  130  133   130 #>  [5827,]  112  119  122  127  129  132  129  130  133   130 #>  [5828,]  112  119  122  127  129  132  129  130  133   130 #>  [5829,]  112  119  122  127  129  132  129  130  133   130 #>  [5830,]  112  119  122  127  129  132  129  130  133   130 #>  [5831,]  111  118  121  126  128  131  128  129  132   129 #>  [5832,]  111  118  121  126  128  131  128  129  132   129 #>  [5833,]  112  119  122  127  129  132  129  130  133   130 #>  [5834,]  112  119  122  127  129  132  129  130  133   130 #>  [5835,]  112  119  122  127  129  132  129  130  133   130 #>  [5836,]  112  119  122  127  129  132  129  130  133   130 #>  [5837,]  111  118  121  126  128  131  128  129  132   129 #>  [5838,]  112  119  122  127  129  132  129  130  133   130 #>  [5839,]  112  119  122  127  129  132  129  130  133   130 #>  [5840,]  111  118  121  126  128  131  128  129  132   129 #>  [5841,]  112  119  122  127  129  132  129  130  133   130 #>  [5842,]  112  119  122  127  129  132  129  130  133   130 #>  [5843,]  112  119  122  127  129  132  129  130  133   130 #>  [5844,]  112  119  122  127  129  132  129  130  133   130 #>  [5845,]  112  119  122  127  129  132  129  130  133   130 #>  [5846,]  111  118  121  126  128  131  128  129  132   129 #>  [5847,]  111  118  121  126  128  131  128  129  132   129 #>  [5848,]  112  119  122  127  129  132  129  130  133   130 #>  [5849,]  112  119  122  127  129  132  129  130  133   130 #>  [5850,]  112  119  122  127  129  132  129  130  133   130 #>  [5851,]  112  119  122  127  129  132  129  130  133   130 #>  [5852,]  111  118  121  126  128  131  128  129  132   129 #>  [5853,]  112  119  122  127  129  132  129  130  133   130 #>  [5854,]  112  119  122  127  129  132  129  130  133   130 #>  [5855,]  111  118  121  126  128  131  128  129  132   129 #>  [5856,]  112  119  122  127  129  132  129  130  133   130 #>  [5857,]  111  118  121  126  128  131  128  129  132   129 #>  [5858,]  112  119  122  127  129  132  129  130  133   130 #>  [5859,]  111  118  121  126  128  131  128  129  132   129 #>  [5860,]  111  118  121  126  128  131  128  129  132   129 #>  [5861,]  112  119  122  127  129  132  129  130  133   130 #>  [5862,]  112  119  122  127  129  132  129  130  133   130 #>  [5863,]  112  119  122  127  129  132  129  130  133   130 #>  [5864,]  112  119  122  127  129  132  129  130  133   130 #>  [5865,]  112  119  122  127  129  132  129  130  133   130 #>  [5866,]  112  119  122  127  129  132  129  130  133   130 #>  [5867,]  111  118  121  126  128  131  128  129  132   129 #>  [5868,]  111  118  121  126  128  131  128  129  132   129 #>  [5869,]  112  119  122  127  129  132  129  130  133   130 #>  [5870,]  112  119  122  127  129  132  129  130  133   130 #>  [5871,]  112  119  122  127  129  132  129  130  133   130 #>  [5872,]  111  118  121  126  128  131  128  129  132   129 #>  [5873,]  112  119  122  127  129  132  129  130  133   130 #>  [5874,]  111  118  121  126  128  131  128  129  132   129 #>  [5875,]  111  118  121  126  128  131  128  129  132   129 #>  [5876,]  111  118  121  126  128  131  128  129  132   129 #>  [5877,]  112  119  122  127  129  132  129  130  133   130 #>  [5878,]  111  118  121  126  128  131  128  129  132   129 #>  [5879,]  112  119  122  127  129  132  129  130  133   130 #>  [5880,]  111  118  121  126  128  131  128  129  132   129 #>  [5881,]  112  119  122  127  129  132  129  130  133   130 #>  [5882,]  112  119  122  127  129  132  129  130  133   130 #>  [5883,]  112  119  122  127  129  132  129  130  133   130 #>  [5884,]  112  119  122  127  129  132  129  130  133   130 #>  [5885,]  112  119  122  127  129  132  129  130  133   130 #>  [5886,]  111  118  121  126  128  131  128  129  132   129 #>  [5887,]  112  119  122  127  129  132  129  130  133   130 #>  [5888,]  112  119  122  127  129  132  129  130  133   130 #>  [5889,]  112  119  122  127  129  132  129  130  133   130 #>  [5890,]  112  119  122  127  129  132  129  130  133   130 #>  [5891,]  112  119  122  127  129  132  129  130  133   130 #>  [5892,]  111  118  121  126  128  131  128  129  132   129 #>  [5893,]  112  119  122  127  129  132  129  130  133   130 #>  [5894,]  112  119  122  127  129  132  129  130  133   130 #>  [5895,]  112  119  122  127  129  132  129  130  133   130 #>  [5896,]  111  118  121  126  128  131  128  129  132   129 #>  [5897,]  111  118  121  126  128  131  128  129  132   129 #>  [5898,]  111  118  121  126  128  131  128  129  132   129 #>  [5899,]  112  119  122  127  129  132  129  130  133   130 #>  [5900,]  112  119  122  127  129  132  129  130  133   130 #>  [5901,]  114  121  124  129  131  134  131  132  134   131 #>  [5902,]  113  120  123  128  130  133  130  131  136   132 #>  [5903,]  113  120  123  128  130  133  130  131  135   133 #>  [5904,]  114  121  124  129  131  134  131  132  134   131 #>  [5905,]  113  120  123  128  130  133  130  131  135   134 #>  [5906,]  113  120  123  128  130  133  130  131  136   132 #>  [5907,]  114  121  124  129  131  134  131  132  134   131 #>  [5908,]  114  121  124  129  131  134  131  132  134   131 #>  [5909,]  114  121  124  129  131  134  131  132  134   131 #>  [5910,]  114  121  124  129  131  134  131  132  134   131 #>  [5911,]  113  120  123  128  130  133  130  131  136   132 #>  [5912,]  113  120  123  128  130  133  130  131  135   133 #>  [5913,]  114  121  124  129  131  134  131  132  134   131 #>  [5914,]  113  120  123  128  130  133  130  131  136   132 #>  [5915,]  114  121  124  129  131  134  131  132  134   131 #>  [5916,]  114  121  124  129  131  134  131  132  134   131 #>  [5917,]  114  121  124  129  131  134  131  132  134   131 #>  [5918,]  114  121  124  129  131  134  131  132  134   131 #>  [5919,]  113  120  123  128  130  133  130  131  136   132 #>  [5920,]  113  120  123  128  130  133  130  131  135   134 #>  [5921,]  114  121  124  129  131  134  131  132  134   131 #>  [5922,]  113  120  123  128  130  133  130  131  136   132 #>  [5923,]  114  121  124  129  131  134  131  132  134   131 #>  [5924,]  113  120  123  128  130  133  130  131  135   134 #>  [5925,]  114  121  124  129  131  134  131  132  134   131 #>  [5926,]  113  120  123  128  130  133  130  131  136   132 #>  [5927,]  114  121  124  129  131  134  131  132  134   131 #>  [5928,]  114  121  124  129  131  134  131  132  134   131 #>  [5929,]  113  120  123  128  130  133  130  131  136   132 #>  [5930,]  113  120  123  128  130  133  130  131  135   134 #>  [5931,]  113  120  123  128  130  133  130  131  135   134 #>  [5932,]  113  120  123  128  130  133  130  131  135   133 #>  [5933,]  113  120  123  128  130  133  130  131  136   132 #>  [5934,]  113  120  123  128  130  133  130  131  135   134 #>  [5935,]  113  120  123  128  130  133  130  131  136   132 #>  [5936,]  113  120  123  128  130  133  130  131  135   133 #>  [5937,]  114  121  124  129  131  134  131  132  134   131 #>  [5938,]  113  120  123  128  130  133  130  131  135   134 #>  [5939,]  114  121  124  129  131  134  131  132  134   131 #>  [5940,]  113  120  123  128  130  133  130  131  136   132 #>  [5941,]  113  120  123  128  130  133  130  131  136   132 #>  [5942,]  113  120  123  128  130  133  130  131  135   133 #>  [5943,]  114  121  124  129  131  134  131  132  134   131 #>  [5944,]  113  120  123  128  130  133  130  131  136   132 #>  [5945,]  114  121  124  129  131  134  131  132  134   131 #>  [5946,]  114  121  124  129  131  134  131  132  134   131 #>  [5947,]  114  121  124  129  131  134  131  132  134   131 #>  [5948,]  113  120  123  128  130  133  130  131  135   133 #>  [5949,]  113  120  123  128  130  133  130  131  135   134 #>  [5950,]  113  120  123  128  130  133  130  131  136   132 #>  [5951,]  113  120  123  128  130  133  130  131  135   133 #>  [5952,]  113  120  123  128  130  133  130  131  136   132 #>  [5953,]  114  121  124  129  131  134  131  132  134   131 #>  [5954,]  113  120  123  128  130  133  130  131  135   133 #>  [5955,]  113  120  123  128  130  133  130  131  136   132 #>  [5956,]  114  121  124  129  131  134  131  132  134   131 #>  [5957,]  113  120  123  128  130  133  130  131  135   134 #>  [5958,]  113  120  123  128  130  133  130  131  136   132 #>  [5959,]  113  120  123  128  130  133  130  131  136   132 #>  [5960,]  113  120  123  128  130  133  130  131  135   133 #>  [5961,]  114  121  124  129  131  134  131  132  134   131 #>  [5962,]  113  120  123  128  130  133  130  131  135   133 #>  [5963,]  113  120  123  128  130  133  130  131  136   132 #>  [5964,]  114  121  124  129  131  134  131  132  134   131 #>  [5965,]  113  120  123  128  130  133  130  131  135   134 #>  [5966,]  113  120  123  128  130  133  130  131  135   133 #>  [5967,]  113  120  123  128  130  133  130  131  135   134 #>  [5968,]  113  120  123  128  130  133  130  131  136   132 #>  [5969,]  113  120  123  128  130  133  130  131  136   132 #>  [5970,]  114  121  124  129  131  134  131  132  134   131 #>  [5971,]  114  121  124  129  131  134  131  132  134   131 #>  [5972,]  114  121  124  129  131  134  131  132  134   131 #>  [5973,]  114  121  124  129  131  134  131  132  134   131 #>  [5974,]  114  121  124  129  131  134  131  132  134   131 #>  [5975,]  114  121  124  129  131  134  131  132  134   131 #>  [5976,]  114  121  124  129  131  134  131  132  134   131 #>  [5977,]  114  121  124  129  131  134  131  132  134   131 #>  [5978,]  113  120  123  128  130  133  130  131  135   134 #>  [5979,]  113  120  123  128  130  133  130  131  136   132 #>  [5980,]  113  120  123  128  130  133  130  131  135   133 #>  [5981,]  113  120  123  128  130  133  130  131  136   132 #>  [5982,]  114  121  124  129  131  134  131  132  134   131 #>  [5983,]  113  120  123  128  130  133  130  131  136   132 #>  [5984,]  114  121  124  129  131  134  131  132  134   131 #>  [5985,]  113  120  123  128  130  133  130  131  135   134 #>  [5986,]  113  120  123  128  130  133  130  131  136   132 #>  [5987,]  114  121  124  129  131  134  131  132  134   131 #>  [5988,]  114  121  124  129  131  134  131  132  134   131 #>  [5989,]  113  120  123  128  130  133  130  131  135   133 #>  [5990,]  114  121  124  129  131  134  131  132  134   131 #>  [5991,]  113  120  123  128  130  133  130  131  135   133 #>  [5992,]  113  120  123  128  130  133  130  131  136   132 #>  [5993,]  113  120  123  128  130  133  130  131  136   132 #>  [5994,]  114  121  124  129  131  134  131  132  134   131 #>  [5995,]  114  121  124  129  131  134  131  132  134   131 #>  [5996,]  114  121  124  129  131  134  131  132  134   131 #>  [5997,]  113  120  123  128  130  133  130  131  136   132 #>  [5998,]  113  120  123  128  130  133  130  131  136   132 #>  [5999,]  113  120  123  128  130  133  130  131  136   132 #>  [6000,]  114  121  124  129  131  134  131  132  134   131 #>  [6001,]  115  123  126  131  133  136  133  134  137   136 #>  [6002,]  115  123  126  131  133  137  133  134  137   136 #>  [6003,]  115  122  125  130  132  135  132  133  137   135 #>  [6004,]  115  122  125  130  132  135  132  133  137   135 #>  [6005,]  115  123  126  131  133  137  133  134  137   136 #>  [6006,]  115  123  126  131  133  136  133  134  137   136 #>  [6007,]  115  122  125  130  132  135  132  133  137   135 #>  [6008,]  115  122  125  130  132  135  132  133  137   135 #>  [6009,]  115  123  126  131  133  137  133  134  137   136 #>  [6010,]  115  123  126  131  133  137  133  134  137   136 #>  [6011,]  115  123  126  131  133  136  133  134  137   136 #>  [6012,]  115  122  125  130  132  135  132  133  137   135 #>  [6013,]  115  123  126  131  133  137  133  134  137   136 #>  [6014,]  115  122  125  130  132  135  132  133  137   136 #>  [6015,]  115  123  126  131  133  137  133  134  137   136 #>  [6016,]  115  123  126  131  133  136  133  134  137   136 #>  [6017,]  115  123  126  131  133  137  133  134  137   136 #>  [6018,]  115  123  126  131  133  137  133  134  137   136 #>  [6019,]  115  123  126  131  133  136  133  134  137   136 #>  [6020,]  115  123  126  131  133  137  133  134  137   136 #>  [6021,]  115  123  126  131  133  137  133  134  137   136 #>  [6022,]  115  123  126  131  133  137  133  134  137   136 #>  [6023,]  115  122  125  130  132  135  132  133  137   136 #>  [6024,]  115  123  126  131  133  137  133  134  137   136 #>  [6025,]  115  122  125  130  132  135  132  133  137   135 #>  [6026,]  115  123  126  131  133  136  133  134  137   136 #>  [6027,]  115  123  126  131  133  137  133  134  137   136 #>  [6028,]  115  123  126  131  133  136  133  134  137   136 #>  [6029,]  115  123  126  131  133  137  133  134  137   136 #>  [6030,]  115  123  126  131  133  137  133  134  137   136 #>  [6031,]  115  122  125  130  132  135  132  133  137   135 #>  [6032,]  115  122  125  130  132  135  132  133  137   136 #>  [6033,]  115  123  126  131  133  137  133  134  137   136 #>  [6034,]  115  123  126  131  133  136  133  134  137   136 #>  [6035,]  115  123  126  131  133  136  133  134  137   136 #>  [6036,]  115  123  126  131  133  137  133  134  137   136 #>  [6037,]  115  122  125  130  132  135  132  133  137   136 #>  [6038,]  115  123  126  131  133  136  133  134  137   136 #>  [6039,]  115  123  126  131  133  137  133  134  137   136 #>  [6040,]  115  122  125  130  132  135  132  133  137   136 #>  [6041,]  115  123  126  131  133  137  133  134  137   136 #>  [6042,]  115  123  126  131  133  136  133  134  137   136 #>  [6043,]  115  123  126  131  133  137  133  134  137   136 #>  [6044,]  115  123  126  131  133  137  133  134  137   136 #>  [6045,]  115  123  126  131  133  136  133  134  137   136 #>  [6046,]  115  122  125  130  132  135  132  133  137   136 #>  [6047,]  115  122  125  130  132  135  132  133  137   136 #>  [6048,]  115  123  126  131  133  137  133  134  137   136 #>  [6049,]  115  123  126  131  133  136  133  134  137   136 #>  [6050,]  115  123  126  131  133  137  133  134  137   136 #>  [6051,]  115  123  126  131  133  137  133  134  137   136 #>  [6052,]  115  122  125  130  132  135  132  133  137   135 #>  [6053,]  115  123  126  131  133  137  133  134  137   136 #>  [6054,]  115  123  126  131  133  137  133  134  137   136 #>  [6055,]  115  122  125  130  132  135  132  133  137   136 #>  [6056,]  115  123  126  131  133  137  133  134  137   136 #>  [6057,]  115  122  125  130  132  135  132  133  137   135 #>  [6058,]  115  123  126  131  133  137  133  134  137   136 #>  [6059,]  115  122  125  130  132  135  132  133  137   135 #>  [6060,]  115  122  125  130  132  135  132  133  137   135 #>  [6061,]  115  123  126  131  133  137  133  134  137   136 #>  [6062,]  115  123  126  131  133  137  133  134  137   136 #>  [6063,]  115  123  126  131  133  137  133  134  137   136 #>  [6064,]  115  123  126  131  133  136  133  134  137   136 #>  [6065,]  115  123  126  131  133  136  133  134  137   136 #>  [6066,]  115  123  126  131  133  137  133  134  137   136 #>  [6067,]  115  122  125  130  132  135  132  133  137   136 #>  [6068,]  115  122  125  130  132  135  132  133  137   135 #>  [6069,]  115  123  126  131  133  137  133  134  137   136 #>  [6070,]  115  123  126  131  133  137  133  134  137   136 #>  [6071,]  115  123  126  131  133  137  133  134  137   136 #>  [6072,]  115  122  125  130  132  135  132  133  137   136 #>  [6073,]  115  123  126  131  133  136  133  134  137   136 #>  [6074,]  115  122  125  130  132  135  132  133  137   136 #>  [6075,]  115  123  126  131  133  137  133  134  137   136 #>  [6076,]  115  122  125  130  132  135  132  133  137   136 #>  [6077,]  115  123  126  131  133  136  133  134  137   136 #>  [6078,]  115  122  125  130  132  135  132  133  137   136 #>  [6079,]  115  123  126  131  133  136  133  134  137   136 #>  [6080,]  115  122  125  130  132  135  132  133  137   136 #>  [6081,]  115  123  126  131  133  137  133  134  137   136 #>  [6082,]  115  123  126  131  133  137  133  134  137   136 #>  [6083,]  115  123  126  131  133  137  133  134  137   136 #>  [6084,]  115  123  126  131  133  137  133  134  137   136 #>  [6085,]  115  123  126  131  133  137  133  134  137   136 #>  [6086,]  115  122  125  130  132  135  132  133  137   135 #>  [6087,]  115  123  126  131  133  137  133  134  137   136 #>  [6088,]  115  123  126  131  133  137  133  134  137   136 #>  [6089,]  115  123  126  131  133  136  133  134  137   136 #>  [6090,]  115  123  126  131  133  137  133  134  137   136 #>  [6091,]  115  123  126  131  133  137  133  134  137   136 #>  [6092,]  115  122  125  130  132  135  132  133  137   136 #>  [6093,]  115  123  126  131  133  137  133  134  137   136 #>  [6094,]  115  123  126  131  133  136  133  134  137   136 #>  [6095,]  115  123  126  131  133  137  133  134  137   136 #>  [6096,]  115  122  125  130  132  135  132  133  137   135 #>  [6097,]  115  122  125  130  132  135  132  133  137   135 #>  [6098,]  115  122  125  130  132  135  132  133  137   135 #>  [6099,]  115  123  126  131  133  137  133  134  137   136 #>  [6100,]  115  123  126  131  133  136  133  134  137   136 #>  [6101,]  116  124  127  132  134  138  134  135  138   137 #>  [6102,]  116  124  127  132  134  138  134  135  138   137 #>  [6103,]  116  124  127  132  134  138  134  135  138   137 #>  [6104,]  117  125  128  133  135  139  135  136  139   138 #>  [6105,]  116  124  127  132  134  138  134  135  138   137 #>  [6106,]  116  124  127  132  134  138  134  135  138   137 #>  [6107,]  116  124  127  132  134  138  134  135  138   137 #>  [6108,]  116  124  127  132  134  138  134  135  138   137 #>  [6109,]  116  124  127  132  134  138  134  135  138   137 #>  [6110,]  116  124  127  132  134  138  134  135  138   137 #>  [6111,]  117  125  128  133  135  139  135  136  139   138 #>  [6112,]  117  125  128  133  135  139  135  136  139   138 #>  [6113,]  116  124  127  132  134  138  134  135  138   137 #>  [6114,]  117  125  128  133  135  139  135  136  139   138 #>  [6115,]  117  125  128  133  135  139  135  136  139   138 #>  [6116,]  116  124  127  132  134  138  134  135  138   137 #>  [6117,]  116  124  127  132  134  138  134  135  138   137 #>  [6118,]  116  124  127  132  134  138  134  135  138   137 #>  [6119,]  117  125  128  133  135  139  135  136  139   138 #>  [6120,]  116  124  127  132  134  138  134  135  138   137 #>  [6121,]  117  125  128  133  135  139  135  136  139   138 #>  [6122,]  116  124  127  132  134  138  134  135  138   137 #>  [6123,]  116  124  127  132  134  138  134  135  138   137 #>  [6124,]  116  124  127  132  134  138  134  135  138   137 #>  [6125,]  116  124  127  132  134  138  134  135  138   137 #>  [6126,]  116  124  127  132  134  138  134  135  138   137 #>  [6127,]  117  125  128  133  135  139  135  136  139   138 #>  [6128,]  116  124  127  132  134  138  134  135  138   137 #>  [6129,]  116  124  127  132  134  138  134  135  138   137 #>  [6130,]  116  124  127  132  134  138  134  135  138   137 #>  [6131,]  116  124  127  132  134  138  134  135  138   137 #>  [6132,]  116  124  127  132  134  138  134  135  138   137 #>  [6133,]  116  124  127  132  134  138  134  135  138   137 #>  [6134,]  116  124  127  132  134  138  134  135  138   137 #>  [6135,]  116  124  127  132  134  138  134  135  138   137 #>  [6136,]  116  124  127  132  134  138  134  135  138   137 #>  [6137,]  116  124  127  132  134  138  134  135  138   137 #>  [6138,]  117  125  128  133  135  139  135  136  139   138 #>  [6139,]  116  124  127  132  134  138  134  135  138   137 #>  [6140,]  116  124  127  132  134  138  134  135  138   137 #>  [6141,]  117  125  128  133  135  139  135  136  139   138 #>  [6142,]  117  125  128  133  135  139  135  136  139   138 #>  [6143,]  116  124  127  132  134  138  134  135  138   137 #>  [6144,]  116  124  127  132  134  138  134  135  138   137 #>  [6145,]  116  124  127  132  134  138  134  135  138   137 #>  [6146,]  116  124  127  132  134  138  134  135  138   137 #>  [6147,]  116  124  127  132  134  138  134  135  138   137 #>  [6148,]  117  125  128  133  135  139  135  136  139   138 #>  [6149,]  116  124  127  132  134  138  134  135  138   137 #>  [6150,]  116  124  127  132  134  138  134  135  138   137 #>  [6151,]  116  124  127  132  134  138  134  135  138   137 #>  [6152,]  116  124  127  132  134  138  134  135  138   137 #>  [6153,]  116  124  127  132  134  138  134  135  138   137 #>  [6154,]  116  124  127  132  134  138  134  135  138   137 #>  [6155,]  116  124  127  132  134  138  134  135  138   137 #>  [6156,]  116  124  127  132  134  138  134  135  138   137 #>  [6157,]  116  124  127  132  134  138  134  135  138   137 #>  [6158,]  116  124  127  132  134  138  134  135  138   137 #>  [6159,]  116  124  127  132  134  138  134  135  138   137 #>  [6160,]  116  124  127  132  134  138  134  135  138   137 #>  [6161,]  117  125  128  133  135  139  135  136  139   138 #>  [6162,]  116  124  127  132  134  138  134  135  138   137 #>  [6163,]  116  124  127  132  134  138  134  135  138   137 #>  [6164,]  116  124  127  132  134  138  134  135  138   137 #>  [6165,]  116  124  127  132  134  138  134  135  138   137 #>  [6166,]  116  124  127  132  134  138  134  135  138   137 #>  [6167,]  116  124  127  132  134  138  134  135  138   137 #>  [6168,]  116  124  127  132  134  138  134  135  138   137 #>  [6169,]  117  125  128  133  135  139  135  136  139   138 #>  [6170,]  116  124  127  132  134  138  134  135  138   137 #>  [6171,]  116  124  127  132  134  138  134  135  138   137 #>  [6172,]  116  124  127  132  134  138  134  135  138   137 #>  [6173,]  116  124  127  132  134  138  134  135  138   137 #>  [6174,]  117  125  128  133  135  139  135  136  139   138 #>  [6175,]  117  125  128  133  135  139  135  136  139   138 #>  [6176,]  116  124  127  132  134  138  134  135  138   137 #>  [6177,]  116  124  127  132  134  138  134  135  138   137 #>  [6178,]  116  124  127  132  134  138  134  135  138   137 #>  [6179,]  116  124  127  132  134  138  134  135  138   137 #>  [6180,]  116  124  127  132  134  138  134  135  138   137 #>  [6181,]  116  124  127  132  134  138  134  135  138   137 #>  [6182,]  117  125  128  133  135  139  135  136  139   138 #>  [6183,]  116  124  127  132  134  138  134  135  138   137 #>  [6184,]  116  124  127  132  134  138  134  135  138   137 #>  [6185,]  116  124  127  132  134  138  134  135  138   137 #>  [6186,]  116  124  127  132  134  138  134  135  138   137 #>  [6187,]  116  124  127  132  134  138  134  135  138   137 #>  [6188,]  116  124  127  132  134  138  134  135  138   137 #>  [6189,]  116  124  127  132  134  138  134  135  138   137 #>  [6190,]  116  124  127  132  134  138  134  135  138   137 #>  [6191,]  116  124  127  132  134  138  134  135  138   137 #>  [6192,]  117  125  128  133  135  139  135  136  139   138 #>  [6193,]  117  125  128  133  135  139  135  136  139   138 #>  [6194,]  116  124  127  132  134  138  134  135  138   137 #>  [6195,]  116  124  127  132  134  138  134  135  138   137 #>  [6196,]  117  125  128  133  135  139  135  136  139   138 #>  [6197,]  117  125  128  133  135  139  135  136  139   138 #>  [6198,]  116  124  127  132  134  138  134  135  138   137 #>  [6199,]  116  124  127  132  134  138  134  135  138   137 #>  [6200,]  116  124  127  132  134  138  134  135  138   137 #>  [6201,]  118  126  129  134  136  140  136  138  141   140 #>  [6202,]  118  126  129  134  136  140  136  137  140   139 #>  [6203,]  118  126  129  134  136  140  136  138  141   140 #>  [6204,]  118  126  129  134  136  140  136  138  141   140 #>  [6205,]  119  127  130  135  137  140  136  138  141   140 #>  [6206,]  118  126  129  134  136  140  136  137  140   139 #>  [6207,]  118  126  129  134  136  140  136  138  141   140 #>  [6208,]  118  126  129  134  136  140  136  138  141   140 #>  [6209,]  118  126  129  134  136  140  136  138  141   140 #>  [6210,]  118  126  129  134  136  140  136  138  141   140 #>  [6211,]  118  126  129  134  136  140  136  137  140   139 #>  [6212,]  118  126  129  134  136  140  136  137  140   139 #>  [6213,]  118  126  129  134  136  140  136  138  141   140 #>  [6214,]  118  126  129  134  136  140  136  138  141   140 #>  [6215,]  118  126  129  134  136  140  136  137  140   139 #>  [6216,]  118  126  129  134  136  140  136  138  141   140 #>  [6217,]  118  126  129  134  136  140  136  137  140   139 #>  [6218,]  119  127  130  135  137  140  136  138  141   140 #>  [6219,]  118  126  129  134  136  140  136  137  140   139 #>  [6220,]  118  126  129  134  136  140  136  138  141   140 #>  [6221,]  118  126  129  134  136  140  136  138  141   140 #>  [6222,]  118  126  129  134  136  140  136  138  141   140 #>  [6223,]  118  126  129  134  136  140  136  137  140   139 #>  [6224,]  118  126  129  134  136  140  136  138  141   140 #>  [6225,]  118  126  129  134  136  140  136  138  141   140 #>  [6226,]  118  126  129  134  136  140  136  137  140   139 #>  [6227,]  118  126  129  134  136  140  136  138  141   140 #>  [6228,]  118  126  129  134  136  140  136  138  141   140 #>  [6229,]  118  126  129  134  136  140  136  137  140   139 #>  [6230,]  118  126  129  134  136  140  136  137  140   139 #>  [6231,]  118  126  129  134  136  140  136  137  140   139 #>  [6232,]  119  127  130  135  137  140  136  138  141   140 #>  [6233,]  118  126  129  134  136  140  136  138  141   140 #>  [6234,]  118  126  129  134  136  140  136  137  140   139 #>  [6235,]  118  126  129  134  136  140  136  137  140   139 #>  [6236,]  118  126  129  134  136  140  136  138  141   140 #>  [6237,]  118  126  129  134  136  140  136  137  140   139 #>  [6238,]  118  126  129  134  136  140  136  138  141   140 #>  [6239,]  118  126  129  134  136  140  136  138  141   140 #>  [6240,]  118  126  129  134  136  140  136  138  141   140 #>  [6241,]  118  126  129  134  136  140  136  138  141   140 #>  [6242,]  118  126  129  134  136  140  136  137  140   139 #>  [6243,]  118  126  129  134  136  140  136  137  140   139 #>  [6244,]  118  126  129  134  136  140  136  137  140   139 #>  [6245,]  118  126  129  134  136  140  136  138  141   140 #>  [6246,]  118  126  129  134  136  140  136  137  140   139 #>  [6247,]  118  126  129  134  136  140  136  137  140   139 #>  [6248,]  118  126  129  134  136  140  136  137  140   139 #>  [6249,]  118  126  129  134  136  140  136  138  141   140 #>  [6250,]  118  126  129  134  136  140  136  138  141   140 #>  [6251,]  118  126  129  134  136  140  136  138  141   140 #>  [6252,]  118  126  129  134  136  140  136  138  141   140 #>  [6253,]  118  126  129  134  136  140  136  138  141   140 #>  [6254,]  118  126  129  134  136  140  136  138  141   140 #>  [6255,]  118  126  129  134  136  140  136  138  141   140 #>  [6256,]  118  126  129  134  136  140  136  137  140   139 #>  [6257,]  118  126  129  134  136  140  136  138  141   140 #>  [6258,]  118  126  129  134  136  140  136  138  141   140 #>  [6259,]  118  126  129  134  136  140  136  138  141   140 #>  [6260,]  118  126  129  134  136  140  136  137  140   139 #>  [6261,]  118  126  129  134  136  140  136  137  140   139 #>  [6262,]  118  126  129  134  136  140  136  138  141   140 #>  [6263,]  118  126  129  134  136  140  136  137  140   139 #>  [6264,]  118  126  129  134  136  140  136  137  140   139 #>  [6265,]  118  126  129  134  136  140  136  137  140   139 #>  [6266,]  118  126  129  134  136  140  136  137  140   139 #>  [6267,]  118  126  129  134  136  140  136  138  141   140 #>  [6268,]  118  126  129  134  136  140  136  137  140   139 #>  [6269,]  118  126  129  134  136  140  136  138  141   140 #>  [6270,]  118  126  129  134  136  140  136  137  140   139 #>  [6271,]  119  127  130  135  137  140  136  138  141   140 #>  [6272,]  118  126  129  134  136  140  136  138  141   140 #>  [6273,]  118  126  129  134  136  140  136  138  141   140 #>  [6274,]  118  126  129  134  136  140  136  138  141   140 #>  [6275,]  119  127  130  135  137  140  136  137  140   139 #>  [6276,]  118  126  129  134  136  140  136  138  141   140 #>  [6277,]  118  126  129  134  136  140  136  138  141   140 #>  [6278,]  118  126  129  134  136  140  136  137  140   139 #>  [6279,]  118  126  129  134  136  140  136  137  140   139 #>  [6280,]  118  126  129  134  136  140  136  138  141   140 #>  [6281,]  118  126  129  134  136  140  136  137  140   139 #>  [6282,]  118  126  129  134  136  140  136  138  141   140 #>  [6283,]  118  126  129  134  136  140  136  138  141   140 #>  [6284,]  118  126  129  134  136  140  136  138  141   140 #>  [6285,]  118  126  129  134  136  140  136  138  141   140 #>  [6286,]  118  126  129  134  136  140  136  138  141   140 #>  [6287,]  118  126  129  134  136  140  136  138  141   140 #>  [6288,]  118  126  129  134  136  140  136  138  141   140 #>  [6289,]  118  126  129  134  136  140  136  138  141   140 #>  [6290,]  118  126  129  134  136  140  136  138  141   140 #>  [6291,]  118  126  129  134  136  140  136  138  141   140 #>  [6292,]  118  126  129  134  136  140  136  137  140   139 #>  [6293,]  118  126  129  134  136  140  136  137  140   139 #>  [6294,]  118  126  129  134  136  140  136  137  140   139 #>  [6295,]  119  127  130  135  137  140  136  137  140   139 #>  [6296,]  118  126  129  134  136  140  136  137  140   139 #>  [6297,]  118  126  129  134  136  140  136  138  141   140 #>  [6298,]  118  126  129  134  136  140  136  138  141   140 #>  [6299,]  118  126  129  134  136  140  136  138  141   140 #>  [6300,]  119  127  130  135  137  140  136  137  140   139 #>  [6301,]  121  129  132  137  139  142  137  140  142   141 #>  [6302,]  121  129  132  137  139  142  137  140  142   141 #>  [6303,]  121  129  132  137  139  142  137  139  142   141 #>  [6304,]  120  128  131  136  138  141  137  140  142   141 #>  [6305,]  121  129  132  137  139  142  137  140  142   141 #>  [6306,]  121  129  132  137  139  142  137  140  142   141 #>  [6307,]  121  129  132  137  139  142  137  140  142   141 #>  [6308,]  120  128  131  136  138  141  137  140  142   141 #>  [6309,]  120  128  131  136  138  141  137  140  142   141 #>  [6310,]  120  128  131  136  138  141  137  140  142   141 #>  [6311,]  121  129  132  137  139  142  137  139  142   141 #>  [6312,]  121  129  132  137  139  142  137  139  142   141 #>  [6313,]  121  129  132  137  139  142  137  140  142   141 #>  [6314,]  121  129  132  137  139  142  137  139  142   141 #>  [6315,]  121  129  132  137  139  142  137  140  142   141 #>  [6316,]  121  129  132  137  139  142  137  140  142   141 #>  [6317,]  121  129  132  137  139  142  137  140  142   141 #>  [6318,]  121  129  132  137  139  142  137  140  142   141 #>  [6319,]  121  129  132  137  139  142  137  140  142   141 #>  [6320,]  121  129  132  137  139  142  137  139  142   141 #>  [6321,]  121  129  132  137  139  142  137  140  142   141 #>  [6322,]  121  129  132  137  139  142  137  139  142   141 #>  [6323,]  121  129  132  137  139  142  137  140  142   141 #>  [6324,]  121  129  132  137  139  142  137  140  142   141 #>  [6325,]  121  129  132  137  139  142  137  140  142   141 #>  [6326,]  121  129  132  137  139  142  137  139  142   141 #>  [6327,]  121  129  132  137  139  142  137  140  142   141 #>  [6328,]  121  129  132  137  139  142  137  140  142   141 #>  [6329,]  121  129  132  137  139  142  137  139  142   141 #>  [6330,]  121  129  132  137  139  142  137  140  142   141 #>  [6331,]  121  129  132  137  139  142  137  140  142   141 #>  [6332,]  121  129  132  137  139  142  137  139  142   141 #>  [6333,]  121  129  132  137  139  142  137  140  142   141 #>  [6334,]  121  129  132  137  139  142  137  140  142   141 #>  [6335,]  121  129  132  137  139  142  137  140  142   141 #>  [6336,]  121  129  132  137  139  142  137  139  142   141 #>  [6337,]  121  129  132  137  139  142  137  140  142   141 #>  [6338,]  121  129  132  137  139  142  137  140  142   141 #>  [6339,]  121  129  132  137  139  142  137  140  142   141 #>  [6340,]  121  129  132  137  139  142  137  139  142   141 #>  [6341,]  121  129  132  137  139  142  137  139  142   141 #>  [6342,]  121  129  132  137  139  142  137  139  142   141 #>  [6343,]  120  128  131  136  138  141  137  140  142   141 #>  [6344,]  121  129  132  137  139  142  137  140  142   141 #>  [6345,]  121  129  132  137  139  142  137  140  142   141 #>  [6346,]  121  129  132  137  139  142  137  140  142   141 #>  [6347,]  121  129  132  137  139  142  137  140  142   141 #>  [6348,]  121  129  132  137  139  142  137  139  142   141 #>  [6349,]  121  129  132  137  139  142  137  140  142   141 #>  [6350,]  121  129  132  137  139  142  137  140  142   141 #>  [6351,]  120  128  131  136  138  141  137  139  142   141 #>  [6352,]  121  129  132  137  139  142  137  140  142   141 #>  [6353,]  121  129  132  137  139  142  137  140  142   141 #>  [6354,]  121  129  132  137  139  142  137  139  142   141 #>  [6355,]  121  129  132  137  139  142  137  140  142   141 #>  [6356,]  121  129  132  137  139  142  137  140  142   141 #>  [6357,]  121  129  132  137  139  142  137  140  142   141 #>  [6358,]  121  129  132  137  139  142  137  140  142   141 #>  [6359,]  121  129  132  137  139  142  137  140  142   141 #>  [6360,]  120  128  131  136  138  141  137  139  142   141 #>  [6361,]  121  129  132  137  139  142  137  140  142   141 #>  [6362,]  121  129  132  137  139  142  137  139  142   141 #>  [6363,]  121  129  132  137  139  142  137  140  142   141 #>  [6364,]  121  129  132  137  139  142  137  140  142   141 #>  [6365,]  121  129  132  137  139  142  137  140  142   141 #>  [6366,]  121  129  132  137  139  142  137  139  142   141 #>  [6367,]  120  128  131  136  138  141  137  140  142   141 #>  [6368,]  121  129  132  137  139  142  137  139  142   141 #>  [6369,]  121  129  132  137  139  142  137  139  142   141 #>  [6370,]  121  129  132  137  139  142  137  140  142   141 #>  [6371,]  121  129  132  137  139  142  137  140  142   141 #>  [6372,]  121  129  132  137  139  142  137  140  142   141 #>  [6373,]  121  129  132  137  139  142  137  140  142   141 #>  [6374,]  121  129  132  137  139  142  137  140  142   141 #>  [6375,]  121  129  132  137  139  142  137  140  142   141 #>  [6376,]  121  129  132  137  139  142  137  140  142   141 #>  [6377,]  121  129  132  137  139  142  137  140  142   141 #>  [6378,]  121  129  132  137  139  142  137  140  142   141 #>  [6379,]  121  129  132  137  139  142  137  140  142   141 #>  [6380,]  121  129  132  137  139  142  137  139  142   141 #>  [6381,]  121  129  132  137  139  142  137  139  142   141 #>  [6382,]  121  129  132  137  139  142  137  140  142   141 #>  [6383,]  121  129  132  137  139  142  137  139  142   141 #>  [6384,]  121  129  132  137  139  142  137  140  142   141 #>  [6385,]  120  128  131  136  138  141  137  140  142   141 #>  [6386,]  121  129  132  137  139  142  137  140  142   141 #>  [6387,]  121  129  132  137  139  142  137  140  142   141 #>  [6388,]  121  129  132  137  139  142  137  140  142   141 #>  [6389,]  121  129  132  137  139  142  137  139  142   141 #>  [6390,]  121  129  132  137  139  142  137  140  142   141 #>  [6391,]  120  128  131  136  138  141  137  139  142   141 #>  [6392,]  121  129  132  137  139  142  137  140  142   141 #>  [6393,]  121  129  132  137  139  142  137  140  142   141 #>  [6394,]  121  129  132  137  139  142  137  140  142   141 #>  [6395,]  120  128  131  136  138  141  137  140  142   141 #>  [6396,]  121  129  132  137  139  142  137  140  142   141 #>  [6397,]  121  129  132  137  139  142  137  140  142   141 #>  [6398,]  121  129  132  137  139  142  137  140  142   141 #>  [6399,]  121  129  132  137  139  142  137  140  142   141 #>  [6400,]  121  129  132  137  139  142  137  140  142   141 #>  [6401,]  122  131  134  138  140  143  138  141  143   142 #>  [6402,]  122  131  134  138  141  143  138  141  143   142 #>  [6403,]  122  130  133  138  141  143  138  141  143   142 #>  [6404,]  122  130  133  138  140  143  138  141  143   142 #>  [6405,]  122  130  133  138  141  143  138  141  143   142 #>  [6406,]  122  131  134  138  141  143  138  141  143   142 #>  [6407,]  122  131  134  138  141  143  138  141  143   142 #>  [6408,]  122  130  133  138  140  143  138  141  143   142 #>  [6409,]  122  130  133  138  140  143  138  141  143   142 #>  [6410,]  122  130  133  138  141  143  138  141  143   142 #>  [6411,]  122  131  134  138  140  143  138  141  143   142 #>  [6412,]  122  130  133  138  141  143  138  141  143   142 #>  [6413,]  122  131  134  138  140  143  138  141  143   142 #>  [6414,]  122  131  134  138  140  143  138  141  143   142 #>  [6415,]  122  131  134  138  140  143  138  141  143   142 #>  [6416,]  122  131  134  138  141  143  138  141  143   142 #>  [6417,]  122  131  134  138  140  143  138  141  143   142 #>  [6418,]  122  130  133  138  141  143  138  141  143   142 #>  [6419,]  122  131  134  138  141  143  139  142  144   143 #>  [6420,]  122  130  133  138  141  143  139  143  144   143 #>  [6421,]  122  131  134  138  140  143  138  141  143   142 #>  [6422,]  122  131  134  138  140  143  139  143  144   143 #>  [6423,]  122  130  133  138  141  143  138  141  143   142 #>  [6424,]  122  130  133  138  141  143  138  141  143   142 #>  [6425,]  122  130  133  138  141  143  138  141  143   142 #>  [6426,]  122  131  134  138  141  143  138  141  143   142 #>  [6427,]  122  131  134  138  140  143  139  142  144   143 #>  [6428,]  122  130  133  138  141  143  138  141  143   142 #>  [6429,]  122  131  134  138  141  143  139  143  144   143 #>  [6430,]  122  130  133  138  140  143  138  141  143   142 #>  [6431,]  122  130  133  138  141  143  138  141  143   142 #>  [6432,]  122  130  133  138  141  143  138  141  143   142 #>  [6433,]  122  131  134  138  141  143  138  141  143   142 #>  [6434,]  122  130  133  138  141  143  138  141  143   142 #>  [6435,]  122  131  134  138  140  143  138  141  143   142 #>  [6436,]  122  130  133  138  141  143  139  142  144   143 #>  [6437,]  122  131  134  138  141  143  138  141  143   142 #>  [6438,]  122  130  133  138  141  143  138  141  143   142 #>  [6439,]  122  130  133  138  141  143  138  141  143   142 #>  [6440,]  122  131  134  138  141  143  138  141  143   142 #>  [6441,]  122  131  134  138  141  143  138  141  143   142 #>  [6442,]  122  130  133  138  141  143  138  141  143   142 #>  [6443,]  122  130  133  138  140  143  138  141  143   142 #>  [6444,]  122  131  134  138  140  143  138  141  143   142 #>  [6445,]  122  130  133  138  140  143  138  141  143   142 #>  [6446,]  122  131  134  138  140  143  138  141  143   142 #>  [6447,]  122  131  134  138  141  143  138  141  143   142 #>  [6448,]  122  130  133  138  141  143  138  141  143   142 #>  [6449,]  122  130  133  138  140  143  138  141  143   142 #>  [6450,]  122  131  134  138  141  143  138  141  143   142 #>  [6451,]  122  130  133  138  141  143  138  141  143   142 #>  [6452,]  122  131  134  138  140  143  138  141  143   142 #>  [6453,]  122  130  133  138  141  143  138  141  143   142 #>  [6454,]  122  130  133  138  140  143  138  141  143   142 #>  [6455,]  122  131  134  138  140  143  138  141  143   142 #>  [6456,]  122  130  133  138  141  143  138  141  143   142 #>  [6457,]  122  130  133  138  141  143  138  141  143   142 #>  [6458,]  122  131  134  138  140  143  139  143  144   143 #>  [6459,]  122  131  134  138  141  143  138  141  143   142 #>  [6460,]  122  130  133  138  141  143  138  141  143   142 #>  [6461,]  122  131  134  138  141  143  138  141  143   142 #>  [6462,]  122  130  133  138  140  143  138  141  143   142 #>  [6463,]  122  131  134  138  141  143  138  141  143   142 #>  [6464,]  122  130  133  138  141  143  139  143  144   143 #>  [6465,]  122  130  133  138  141  143  138  141  143   142 #>  [6466,]  122  130  133  138  140  143  139  142  144   143 #>  [6467,]  122  130  133  138  140  143  138  141  143   142 #>  [6468,]  122  131  134  138  140  143  138  141  143   142 #>  [6469,]  122  131  134  138  140  143  138  141  143   142 #>  [6470,]  122  131  134  138  141  143  138  141  143   142 #>  [6471,]  122  131  134  138  141  143  138  141  143   142 #>  [6472,]  122  130  133  138  141  143  138  141  143   142 #>  [6473,]  122  131  134  138  141  143  138  141  143   142 #>  [6474,]  122  131  134  138  140  143  138  141  143   142 #>  [6475,]  122  131  134  138  141  143  138  141  143   142 #>  [6476,]  122  131  134  138  141  143  138  141  143   142 #>  [6477,]  122  131  134  138  141  143  139  143  144   143 #>  [6478,]  122  130  133  138  141  143  138  141  143   142 #>  [6479,]  122  131  134  138  140  143  138  141  143   142 #>  [6480,]  122  130  133  138  140  143  138  141  143   142 #>  [6481,]  122  131  134  138  140  143  139  143  144   143 #>  [6482,]  122  131  134  138  140  143  138  141  143   142 #>  [6483,]  122  131  134  138  140  143  138  141  143   142 #>  [6484,]  122  131  134  138  141  143  138  141  143   142 #>  [6485,]  122  130  133  138  140  143  138  141  143   142 #>  [6486,]  122  131  134  138  141  143  138  141  143   142 #>  [6487,]  122  131  134  138  140  143  139  143  144   143 #>  [6488,]  122  130  133  138  140  143  138  141  143   142 #>  [6489,]  122  130  133  138  140  143  138  141  143   142 #>  [6490,]  122  131  134  138  140  143  138  141  143   142 #>  [6491,]  122  130  133  138  140  143  138  141  143   142 #>  [6492,]  122  131  134  138  140  143  138  141  143   142 #>  [6493,]  122  131  134  138  141  143  138  141  143   142 #>  [6494,]  122  131  134  138  141  143  138  141  143   142 #>  [6495,]  122  130  133  138  140  143  138  141  143   142 #>  [6496,]  122  131  134  138  140  143  138  141  143   142 #>  [6497,]  122  131  134  138  141  143  139  142  144   143 #>  [6498,]  122  131  134  138  141  143  138  141  143   142 #>  [6499,]  122  131  134  138  140  143  138  141  143   142 #>  [6500,]  122  131  134  138  141  143  139  143  144   143 #>  [6501,]  124  133  136  140  143  145  141  145  146   145 #>  [6502,]  124  133  136  140  143  145  141  145  146   145 #>  [6503,]  123  132  135  139  142  144  140  144  145   144 #>  [6504,]  123  132  135  139  142  144  140  144  145   144 #>  [6505,]  123  132  135  139  142  144  140  144  145   144 #>  [6506,]  124  133  136  140  143  145  141  145  146   145 #>  [6507,]  123  132  135  139  142  144  140  144  145   144 #>  [6508,]  123  132  135  139  142  144  140  144  145   144 #>  [6509,]  123  132  135  139  142  144  140  144  145   144 #>  [6510,]  123  132  135  139  142  144  140  144  145   144 #>  [6511,]  123  132  135  139  142  144  140  144  145   144 #>  [6512,]  123  132  135  139  142  144  140  144  145   144 #>  [6513,]  124  133  136  140  143  145  141  145  146   145 #>  [6514,]  124  133  136  140  143  145  141  145  146   145 #>  [6515,]  124  133  136  140  143  145  141  145  146   145 #>  [6516,]  124  133  136  140  143  145  141  145  146   145 #>  [6517,]  124  133  136  140  143  145  141  145  146   145 #>  [6518,]  123  132  135  139  142  144  140  144  145   144 #>  [6519,]  123  132  135  139  142  144  140  144  145   144 #>  [6520,]  123  132  135  139  142  144  140  144  145   144 #>  [6521,]  124  133  136  140  143  145  141  145  146   145 #>  [6522,]  123  132  135  139  142  144  140  144  145   144 #>  [6523,]  123  132  135  139  142  144  140  144  145   144 #>  [6524,]  123  132  135  139  142  144  140  144  145   144 #>  [6525,]  123  132  135  139  142  144  140  144  145   144 #>  [6526,]  123  132  135  139  142  144  140  144  145   144 #>  [6527,]  123  132  135  139  142  144  140  144  145   144 #>  [6528,]  123  132  135  139  142  144  140  144  145   144 #>  [6529,]  124  133  136  140  143  145  141  145  146   145 #>  [6530,]  123  132  135  139  142  144  140  144  145   144 #>  [6531,]  123  132  135  139  142  144  140  144  145   144 #>  [6532,]  123  132  135  139  142  144  140  144  145   144 #>  [6533,]  124  133  136  140  143  145  141  145  146   145 #>  [6534,]  123  132  135  139  142  144  140  144  145   144 #>  [6535,]  124  133  136  140  143  145  141  145  146   145 #>  [6536,]  123  132  135  139  142  144  140  144  145   144 #>  [6537,]  123  132  135  139  142  144  140  144  145   144 #>  [6538,]  123  132  135  139  142  144  140  144  145   144 #>  [6539,]  123  132  135  139  142  144  140  144  145   144 #>  [6540,]  123  132  135  139  142  144  140  144  145   144 #>  [6541,]  124  133  136  140  143  145  141  145  146   145 #>  [6542,]  123  132  135  139  142  144  140  144  145   144 #>  [6543,]  123  132  135  139  142  144  140  144  145   144 #>  [6544,]  124  133  136  140  143  145  141  145  146   145 #>  [6545,]  123  132  135  139  142  144  140  144  145   144 #>  [6546,]  123  132  135  139  142  144  140  144  145   144 #>  [6547,]  123  132  135  139  142  144  140  144  145   144 #>  [6548,]  123  132  135  139  142  144  140  144  145   144 #>  [6549,]  123  132  135  139  142  144  140  144  145   144 #>  [6550,]  124  133  136  140  143  145  141  145  146   145 #>  [6551,]  123  132  135  139  142  144  140  144  145   144 #>  [6552,]  123  132  135  139  142  144  140  144  145   144 #>  [6553,]  123  132  135  139  142  144  140  144  145   144 #>  [6554,]  123  132  135  139  142  144  140  144  145   144 #>  [6555,]  123  132  135  139  142  144  140  144  145   144 #>  [6556,]  123  132  135  139  142  144  140  144  145   144 #>  [6557,]  123  132  135  139  142  144  140  144  145   144 #>  [6558,]  123  132  135  139  142  144  140  144  145   144 #>  [6559,]  124  133  136  140  143  145  141  145  146   145 #>  [6560,]  123  132  135  139  142  144  140  144  145   144 #>  [6561,]  124  133  136  140  143  145  141  145  146   145 #>  [6562,]  123  132  135  139  142  144  140  144  145   144 #>  [6563,]  123  132  135  139  142  144  140  144  145   144 #>  [6564,]  123  132  135  139  142  144  140  144  145   144 #>  [6565,]  123  132  135  139  142  144  140  144  145   144 #>  [6566,]  123  132  135  139  142  144  140  144  145   144 #>  [6567,]  123  132  135  139  142  144  140  144  145   144 #>  [6568,]  124  133  136  140  143  145  141  145  146   145 #>  [6569,]  123  132  135  139  142  144  140  144  145   144 #>  [6570,]  124  133  136  140  143  145  141  145  146   145 #>  [6571,]  123  132  135  139  142  144  140  144  145   144 #>  [6572,]  123  132  135  139  142  144  140  144  145   144 #>  [6573,]  124  133  136  140  143  145  141  145  146   145 #>  [6574,]  123  132  135  139  142  144  140  144  145   144 #>  [6575,]  123  132  135  139  142  144  140  144  145   144 #>  [6576,]  124  133  136  140  143  145  141  145  146   145 #>  [6577,]  124  133  136  140  143  145  141  145  146   145 #>  [6578,]  123  132  135  139  142  144  140  144  145   144 #>  [6579,]  124  133  136  140  143  145  141  145  146   145 #>  [6580,]  123  132  135  139  142  144  140  144  145   144 #>  [6581,]  124  133  136  140  143  145  141  145  146   145 #>  [6582,]  123  132  135  139  142  144  140  144  145   144 #>  [6583,]  124  133  136  140  143  145  141  145  146   145 #>  [6584,]  123  132  135  139  142  144  140  144  145   144 #>  [6585,]  123  132  135  139  142  144  140  144  145   144 #>  [6586,]  124  133  136  140  143  145  141  145  146   145 #>  [6587,]  123  132  135  139  142  144  140  144  145   144 #>  [6588,]  123  132  135  139  142  144  140  144  145   144 #>  [6589,]  123  132  135  139  142  144  140  144  145   144 #>  [6590,]  123  132  135  139  142  144  140  144  145   144 #>  [6591,]  123  132  135  139  142  144  140  144  145   144 #>  [6592,]  123  132  135  139  142  144  140  144  145   144 #>  [6593,]  124  133  136  140  143  145  141  145  146   145 #>  [6594,]  123  132  135  139  142  144  140  144  145   144 #>  [6595,]  123  132  135  139  142  144  140  144  145   144 #>  [6596,]  124  133  136  140  143  145  141  145  146   145 #>  [6597,]  123  132  135  139  142  144  140  144  145   144 #>  [6598,]  123  132  135  139  142  144  140  144  145   144 #>  [6599,]  124  133  136  140  143  145  141  145  146   145 #>  [6600,]  123  132  135  139  142  144  140  144  145   144 #>  [6601,]  125  134  137  141  144  146  142  146  147   146 #>  [6602,]  126  135  138  142  145  147  143  147  148   147 #>  [6603,]  125  134  137  141  144  146  142  146  147   146 #>  [6604,]  125  134  137  141  144  146  142  146  147   146 #>  [6605,]  125  134  137  141  144  146  142  146  147   146 #>  [6606,]  125  134  137  141  144  146  142  146  147   146 #>  [6607,]  125  134  137  141  144  146  142  146  147   146 #>  [6608,]  125  134  137  141  144  146  142  146  147   146 #>  [6609,]  126  135  138  142  145  147  143  147  148   147 #>  [6610,]  126  135  138  142  145  147  143  147  148   147 #>  [6611,]  125  134  137  141  144  146  142  146  147   146 #>  [6612,]  126  135  138  142  145  147  143  147  148   147 #>  [6613,]  126  135  138  142  145  147  143  147  148   147 #>  [6614,]  125  134  137  141  144  146  142  146  147   146 #>  [6615,]  125  134  137  141  144  146  142  146  147   146 #>  [6616,]  125  134  137  141  144  146  142  146  147   146 #>  [6617,]  126  135  138  142  145  147  143  147  148   147 #>  [6618,]  125  134  137  141  144  146  142  146  147   146 #>  [6619,]  125  134  137  141  144  146  142  146  147   146 #>  [6620,]  125  134  137  141  144  146  142  146  147   146 #>  [6621,]  126  135  138  142  145  147  143  147  148   147 #>  [6622,]  125  134  137  141  144  146  142  146  147   146 #>  [6623,]  125  134  137  141  144  146  142  146  147   146 #>  [6624,]  126  135  138  142  145  147  143  147  148   147 #>  [6625,]  125  134  137  141  144  146  142  146  147   146 #>  [6626,]  125  134  137  141  144  146  142  146  147   146 #>  [6627,]  125  134  137  141  144  146  142  146  147   146 #>  [6628,]  125  134  137  141  144  146  142  146  147   146 #>  [6629,]  126  135  138  142  145  147  143  147  148   147 #>  [6630,]  125  134  137  141  144  146  142  146  147   146 #>  [6631,]  125  134  137  141  144  146  142  146  147   146 #>  [6632,]  126  135  138  142  145  147  143  147  148   147 #>  [6633,]  126  135  138  142  145  147  143  147  148   147 #>  [6634,]  125  134  137  141  144  146  142  146  147   146 #>  [6635,]  125  134  137  141  144  146  142  146  147   146 #>  [6636,]  125  134  137  141  144  146  142  146  147   146 #>  [6637,]  125  134  137  141  144  146  142  146  147   146 #>  [6638,]  125  134  137  141  144  146  142  146  147   146 #>  [6639,]  125  134  137  141  144  146  142  146  147   146 #>  [6640,]  126  135  138  142  145  147  143  147  148   147 #>  [6641,]  125  134  137  141  144  146  142  146  147   146 #>  [6642,]  125  134  137  141  144  146  142  146  147   146 #>  [6643,]  125  134  137  141  144  146  142  146  147   146 #>  [6644,]  125  134  137  141  144  146  142  146  147   146 #>  [6645,]  125  134  137  141  144  146  142  146  147   146 #>  [6646,]  125  134  137  141  144  146  142  146  147   146 #>  [6647,]  125  134  137  141  144  146  142  146  147   146 #>  [6648,]  125  134  137  141  144  146  142  146  147   146 #>  [6649,]  125  134  137  141  144  146  142  146  147   146 #>  [6650,]  125  134  137  141  144  146  142  146  147   146 #>  [6651,]  125  134  137  141  144  146  142  146  147   146 #>  [6652,]  125  134  137  141  144  146  142  146  147   146 #>  [6653,]  126  135  138  142  145  147  143  147  148   147 #>  [6654,]  125  134  137  141  144  146  142  146  147   146 #>  [6655,]  125  134  137  141  144  146  142  146  147   146 #>  [6656,]  125  134  137  141  144  146  142  146  147   146 #>  [6657,]  125  134  137  141  144  146  142  146  147   146 #>  [6658,]  125  134  137  141  144  146  142  146  147   146 #>  [6659,]  125  134  137  141  144  146  142  146  147   146 #>  [6660,]  126  135  138  142  145  147  143  147  148   147 #>  [6661,]  125  134  137  141  144  146  142  146  147   146 #>  [6662,]  125  134  137  141  144  146  142  146  147   146 #>  [6663,]  126  135  138  142  145  147  143  147  148   147 #>  [6664,]  125  134  137  141  144  146  142  146  147   146 #>  [6665,]  125  134  137  141  144  146  142  146  147   146 #>  [6666,]  125  134  137  141  144  146  142  146  147   146 #>  [6667,]  125  134  137  141  144  146  142  146  147   146 #>  [6668,]  125  134  137  141  144  146  142  146  147   146 #>  [6669,]  125  134  137  141  144  146  142  146  147   146 #>  [6670,]  126  135  138  142  145  147  143  147  148   147 #>  [6671,]  125  134  137  141  144  146  142  146  147   146 #>  [6672,]  125  134  137  141  144  146  142  146  147   146 #>  [6673,]  125  134  137  141  144  146  142  146  147   146 #>  [6674,]  125  134  137  141  144  146  142  146  147   146 #>  [6675,]  126  135  138  142  145  147  143  147  148   147 #>  [6676,]  125  134  137  141  144  146  142  146  147   146 #>  [6677,]  125  134  137  141  144  146  142  146  147   146 #>  [6678,]  125  134  137  141  144  146  142  146  147   146 #>  [6679,]  125  134  137  141  144  146  142  146  147   146 #>  [6680,]  126  135  138  142  145  147  143  147  148   147 #>  [6681,]  126  135  138  142  145  147  143  147  148   147 #>  [6682,]  125  134  137  141  144  146  142  146  147   146 #>  [6683,]  126  135  138  142  145  147  143  147  148   147 #>  [6684,]  125  134  137  141  144  146  142  146  147   146 #>  [6685,]  125  134  137  141  144  146  142  146  147   146 #>  [6686,]  126  135  138  142  145  147  143  147  148   147 #>  [6687,]  125  134  137  141  144  146  142  146  147   146 #>  [6688,]  125  134  137  141  144  146  142  146  147   146 #>  [6689,]  125  134  137  141  144  146  142  146  147   146 #>  [6690,]  125  134  137  141  144  146  142  146  147   146 #>  [6691,]  125  134  137  141  144  146  142  146  147   146 #>  [6692,]  125  134  137  141  144  146  142  146  147   146 #>  [6693,]  125  134  137  141  144  146  142  146  147   146 #>  [6694,]  125  134  137  141  144  146  142  146  147   146 #>  [6695,]  125  134  137  141  144  146  142  146  147   146 #>  [6696,]  125  134  137  141  144  146  142  146  147   146 #>  [6697,]  125  134  137  141  144  146  142  146  147   146 #>  [6698,]  125  134  137  141  144  146  142  146  147   146 #>  [6699,]  125  134  137  141  144  146  142  146  147   146 #>  [6700,]  125  134  137  141  144  146  142  146  147   146 #>  [6701,]  127  136  139  143  146  148  144  148  150   149 #>  [6702,]  128  137  140  144  147  149  145  148  150   149 #>  [6703,]  127  136  139  143  146  148  144  148  149   148 #>  [6704,]  127  136  139  143  146  148  144  148  149   148 #>  [6705,]  128  137  140  144  147  149  145  148  149   148 #>  [6706,]  127  136  139  143  146  148  144  148  149   148 #>  [6707,]  127  136  139  143  146  148  144  148  149   148 #>  [6708,]  127  136  139  143  146  148  144  148  150   149 #>  [6709,]  128  137  140  144  147  149  145  148  149   148 #>  [6710,]  128  137  140  144  147  149  145  148  149   148 #>  [6711,]  127  136  139  143  146  148  144  148  149   148 #>  [6712,]  128  137  140  144  147  149  145  148  149   148 #>  [6713,]  128  137  140  144  147  149  145  148  150   149 #>  [6714,]  127  136  139  143  146  148  144  148  149   148 #>  [6715,]  127  136  139  143  146  148  144  148  150   149 #>  [6716,]  127  136  139  143  146  148  144  148  150   149 #>  [6717,]  128  137  140  144  147  149  145  148  149   148 #>  [6718,]  128  137  140  144  147  149  145  148  149   148 #>  [6719,]  127  136  139  143  146  148  144  148  150   149 #>  [6720,]  128  137  140  144  147  149  145  148  150   149 #>  [6721,]  128  137  140  144  147  149  145  148  149   148 #>  [6722,]  128  137  140  144  147  149  145  148  150   149 #>  [6723,]  128  137  140  144  147  149  145  148  150   149 #>  [6724,]  128  137  140  144  147  149  145  148  149   148 #>  [6725,]  127  136  139  143  146  148  144  148  149   148 #>  [6726,]  127  136  139  143  146  148  144  148  150   149 #>  [6727,]  128  137  140  144  147  149  145  148  150   149 #>  [6728,]  127  136  139  143  146  148  144  148  149   148 #>  [6729,]  128  137  140  144  147  149  145  148  150   149 #>  [6730,]  127  136  139  143  146  148  144  148  150   149 #>  [6731,]  128  137  140  144  147  149  145  148  149   148 #>  [6732,]  128  137  140  144  147  149  145  148  149   148 #>  [6733,]  128  137  140  144  147  149  145  148  150   149 #>  [6734,]  127  136  139  143  146  148  144  148  149   148 #>  [6735,]  127  136  139  143  146  148  144  148  149   148 #>  [6736,]  128  137  140  144  147  149  145  148  150   149 #>  [6737,]  127  136  139  143  146  148  144  148  150   149 #>  [6738,]  127  136  139  143  146  148  144  148  150   149 #>  [6739,]  127  136  139  143  146  148  144  148  149   148 #>  [6740,]  128  137  140  144  147  149  145  148  149   148 #>  [6741,]  127  136  139  143  146  148  144  148  150   149 #>  [6742,]  127  136  139  143  146  148  144  148  149   148 #>  [6743,]  127  136  139  143  146  148  144  148  150   149 #>  [6744,]  128  137  140  144  147  149  145  148  150   149 #>  [6745,]  127  136  139  143  146  148  144  148  150   149 #>  [6746,]  127  136  139  143  146  148  144  148  150   149 #>  [6747,]  127  136  139  143  146  148  144  148  149   148 #>  [6748,]  127  136  139  143  146  148  144  148  149   148 #>  [6749,]  127  136  139  143  146  148  144  148  149   148 #>  [6750,]  128  137  140  144  147  149  145  148  150   149 #>  [6751,]  127  136  139  143  146  148  144  148  150   149 #>  [6752,]  127  136  139  143  146  148  144  148  149   148 #>  [6753,]  128  137  140  144  147  149  145  148  150   149 #>  [6754,]  127  136  139  143  146  148  144  148  149   148 #>  [6755,]  127  136  139  143  146  148  144  148  150   149 #>  [6756,]  127  136  139  143  146  148  144  148  150   149 #>  [6757,]  127  136  139  143  146  148  144  148  149   148 #>  [6758,]  127  136  139  143  146  148  144  148  150   149 #>  [6759,]  127  136  139  143  146  148  144  148  150   149 #>  [6760,]  128  137  140  144  147  149  145  148  150   149 #>  [6761,]  128  137  140  144  147  149  145  148  150   149 #>  [6762,]  127  136  139  143  146  148  144  148  149   148 #>  [6763,]  128  137  140  144  147  149  145  148  150   149 #>  [6764,]  127  136  139  143  146  148  144  148  150   149 #>  [6765,]  127  136  139  143  146  148  144  148  149   148 #>  [6766,]  127  136  139  143  146  148  144  148  150   149 #>  [6767,]  127  136  139  143  146  148  144  148  149   148 #>  [6768,]  127  136  139  143  146  148  144  148  150   149 #>  [6769,]  127  136  139  143  146  148  144  148  150   149 #>  [6770,]  128  137  140  144  147  149  145  148  149   148 #>  [6771,]  127  136  139  143  146  148  144  148  150   149 #>  [6772,]  127  136  139  143  146  148  144  148  149   148 #>  [6773,]  127  136  139  143  146  148  144  148  149   148 #>  [6774,]  127  136  139  143  146  148  144  148  149   148 #>  [6775,]  128  137  140  144  147  149  145  148  150   149 #>  [6776,]  127  136  139  143  146  148  144  148  149   148 #>  [6777,]  127  136  139  143  146  148  144  148  150   149 #>  [6778,]  127  136  139  143  146  148  144  148  150   149 #>  [6779,]  127  136  139  143  146  148  144  148  149   148 #>  [6780,]  128  137  140  144  147  149  145  148  150   149 #>  [6781,]  128  137  140  144  147  149  145  148  150   149 #>  [6782,]  127  136  139  143  146  148  144  148  149   148 #>  [6783,]  128  137  140  144  147  149  145  148  150   149 #>  [6784,]  128  137  140  144  147  149  145  148  150   149 #>  [6785,]  127  136  139  143  146  148  144  148  150   149 #>  [6786,]  128  137  140  144  147  149  145  148  149   148 #>  [6787,]  127  136  139  143  146  148  144  148  150   149 #>  [6788,]  128  137  140  144  147  149  145  148  149   148 #>  [6789,]  127  136  139  143  146  148  144  148  149   148 #>  [6790,]  127  136  139  143  146  148  144  148  150   149 #>  [6791,]  127  136  139  143  146  148  144  148  149   148 #>  [6792,]  128  137  140  144  147  149  145  148  149   148 #>  [6793,]  128  137  140  144  147  149  145  148  150   149 #>  [6794,]  127  136  139  143  146  148  144  148  149   148 #>  [6795,]  127  136  139  143  146  148  144  148  150   149 #>  [6796,]  127  136  139  143  146  148  144  148  150   149 #>  [6797,]  127  136  139  143  146  148  144  148  150   149 #>  [6798,]  127  136  139  143  146  148  144  148  149   148 #>  [6799,]  127  136  139  143  146  148  144  148  149   148 #>  [6800,]  127  136  139  143  146  148  144  148  150   149 #>  [6801,]  130  139  142  146  149  151  147  150  152   151 #>  [6802,]  130  139  142  146  149  151  147  150  152   151 #>  [6803,]  129  138  141  145  148  150  146  149  151   150 #>  [6804,]  130  139  142  146  149  151  147  150  152   151 #>  [6805,]  129  138  141  145  148  150  146  149  151   150 #>  [6806,]  129  138  141  145  148  150  146  149  151   150 #>  [6807,]  130  139  142  146  149  151  147  150  152   151 #>  [6808,]  130  139  142  146  149  151  147  150  152   151 #>  [6809,]  130  139  142  146  149  151  147  150  152   151 #>  [6810,]  130  139  142  146  149  151  147  150  152   151 #>  [6811,]  129  138  141  145  148  150  146  149  151   150 #>  [6812,]  129  138  141  145  148  150  146  149  151   150 #>  [6813,]  130  139  142  146  149  151  147  150  152   151 #>  [6814,]  129  138  141  145  148  150  146  149  151   150 #>  [6815,]  130  139  142  146  149  151  147  150  152   151 #>  [6816,]  130  139  142  146  149  151  147  150  152   151 #>  [6817,]  130  139  142  146  149  151  147  150  152   151 #>  [6818,]  130  139  142  146  149  151  147  150  152   151 #>  [6819,]  129  138  141  145  148  150  146  149  151   150 #>  [6820,]  129  138  141  145  148  150  146  149  151   150 #>  [6821,]  130  139  142  146  149  151  147  150  152   151 #>  [6822,]  129  138  141  145  148  150  146  149  151   150 #>  [6823,]  130  139  142  146  149  151  147  150  152   151 #>  [6824,]  129  138  141  145  148  150  146  149  151   150 #>  [6825,]  130  139  142  146  149  151  147  150  152   151 #>  [6826,]  129  138  141  145  148  150  146  149  151   150 #>  [6827,]  130  139  142  146  149  151  147  150  152   151 #>  [6828,]  130  139  142  146  149  151  147  150  152   151 #>  [6829,]  129  138  141  145  148  150  146  149  151   150 #>  [6830,]  129  138  141  145  148  150  146  149  151   150 #>  [6831,]  130  139  142  146  149  151  147  150  152   151 #>  [6832,]  129  138  141  145  148  150  146  149  151   150 #>  [6833,]  130  139  142  146  149  151  147  150  152   151 #>  [6834,]  129  138  141  145  148  150  146  149  151   150 #>  [6835,]  129  138  141  145  148  150  146  149  151   150 #>  [6836,]  129  138  141  145  148  150  146  149  151   150 #>  [6837,]  130  139  142  146  149  151  147  150  152   151 #>  [6838,]  130  139  142  146  149  151  147  150  152   151 #>  [6839,]  130  139  142  146  149  151  147  150  152   151 #>  [6840,]  129  138  141  145  148  150  146  149  151   150 #>  [6841,]  129  138  141  145  148  150  146  149  151   150 #>  [6842,]  129  138  141  145  148  150  146  149  151   150 #>  [6843,]  130  139  142  146  149  151  147  150  152   151 #>  [6844,]  130  139  142  146  149  151  147  150  152   151 #>  [6845,]  130  139  142  146  149  151  147  150  152   151 #>  [6846,]  130  139  142  146  149  151  147  150  152   151 #>  [6847,]  130  139  142  146  149  151  147  150  152   151 #>  [6848,]  129  138  141  145  148  150  146  149  151   150 #>  [6849,]  130  139  142  146  149  151  147  150  152   151 #>  [6850,]  130  139  142  146  149  151  147  150  152   151 #>  [6851,]  129  138  141  145  148  150  146  149  151   150 #>  [6852,]  129  138  141  145  148  150  146  149  151   150 #>  [6853,]  130  139  142  146  149  151  147  150  152   151 #>  [6854,]  129  138  141  145  148  150  146  149  151   150 #>  [6855,]  129  138  141  145  148  150  146  149  151   150 #>  [6856,]  130  139  142  146  149  151  147  150  152   151 #>  [6857,]  129  138  141  145  148  150  146  149  151   150 #>  [6858,]  129  138  141  145  148  150  146  149  151   150 #>  [6859,]  130  139  142  146  149  151  147  150  152   151 #>  [6860,]  129  138  141  145  148  150  146  149  151   150 #>  [6861,]  130  139  142  146  149  151  147  150  152   151 #>  [6862,]  129  138  141  145  148  150  146  149  151   150 #>  [6863,]  129  138  141  145  148  150  146  149  151   150 #>  [6864,]  130  139  142  146  149  151  147  150  152   151 #>  [6865,]  130  139  142  146  149  151  147  150  152   151 #>  [6866,]  129  138  141  145  148  150  146  149  151   150 #>  [6867,]  129  138  141  145  148  150  146  149  151   150 #>  [6868,]  129  138  141  145  148  150  146  149  151   150 #>  [6869,]  129  138  141  145  148  150  146  149  151   150 #>  [6870,]  130  139  142  146  149  151  147  150  152   151 #>  [6871,]  130  139  142  146  149  151  147  150  152   151 #>  [6872,]  130  139  142  146  149  151  147  150  152   151 #>  [6873,]  130  139  142  146  149  151  147  150  152   151 #>  [6874,]  130  139  142  146  149  151  147  150  152   151 #>  [6875,]  130  139  142  146  149  151  147  150  152   151 #>  [6876,]  130  139  142  146  149  151  147  150  152   151 #>  [6877,]  130  139  142  146  149  151  147  150  152   151 #>  [6878,]  129  138  141  145  148  150  146  149  151   150 #>  [6879,]  130  139  142  146  149  151  147  150  152   151 #>  [6880,]  129  138  141  145  148  150  146  149  151   150 #>  [6881,]  129  138  141  145  148  150  146  149  151   150 #>  [6882,]  130  139  142  146  149  151  147  150  152   151 #>  [6883,]  129  138  141  145  148  150  146  149  151   150 #>  [6884,]  130  139  142  146  149  151  147  150  152   151 #>  [6885,]  130  139  142  146  149  151  147  150  152   151 #>  [6886,]  130  139  142  146  149  151  147  150  152   151 #>  [6887,]  130  139  142  146  149  151  147  150  152   151 #>  [6888,]  130  139  142  146  149  151  147  150  152   151 #>  [6889,]  129  138  141  145  148  150  146  149  151   150 #>  [6890,]  130  139  142  146  149  151  147  150  152   151 #>  [6891,]  129  138  141  145  148  150  146  149  151   150 #>  [6892,]  130  139  142  146  149  151  147  150  152   151 #>  [6893,]  129  138  141  145  148  150  146  149  151   150 #>  [6894,]  130  139  142  146  149  151  147  150  152   151 #>  [6895,]  130  139  142  146  149  151  147  150  152   151 #>  [6896,]  130  139  142  146  149  151  147  150  152   151 #>  [6897,]  130  139  142  146  149  151  147  150  152   151 #>  [6898,]  129  138  141  145  148  150  146  149  151   150 #>  [6899,]  129  138  141  145  148  150  146  149  151   150 #>  [6900,]  130  139  142  146  149  151  147  150  152   151 #>  [6901,]  131  140  143  147  150  152  148  151  153   152 #>  [6902,]  131  140  143  147  150  152  148  151  153   152 #>  [6903,]  131  140  143  147  150  152  148  151  153   152 #>  [6904,]  131  140  143  147  150  152  148  151  153   152 #>  [6905,]  132  141  144  148  151  153  149  152  154   153 #>  [6906,]  131  140  143  147  150  152  148  151  153   152 #>  [6907,]  131  140  143  147  150  152  148  151  153   152 #>  [6908,]  131  140  143  147  150  152  148  151  153   152 #>  [6909,]  131  140  143  147  150  152  148  151  153   152 #>  [6910,]  131  140  143  147  150  152  148  151  153   152 #>  [6911,]  131  140  143  147  150  152  148  151  153   152 #>  [6912,]  131  140  143  147  150  152  148  151  153   152 #>  [6913,]  131  140  143  147  150  152  148  151  153   152 #>  [6914,]  131  140  143  147  150  152  148  151  153   152 #>  [6915,]  132  141  144  148  151  153  150  152  154   153 #>  [6916,]  131  140  143  147  150  152  148  151  153   152 #>  [6917,]  131  140  143  147  150  152  148  151  153   152 #>  [6918,]  132  141  144  148  151  153  150  152  154   153 #>  [6919,]  131  140  143  147  150  152  148  151  153   152 #>  [6920,]  131  140  143  147  150  152  148  151  153   152 #>  [6921,]  131  140  143  147  150  152  148  151  153   152 #>  [6922,]  131  140  143  147  150  152  148  151  153   152 #>  [6923,]  131  140  143  147  150  152  148  151  153   152 #>  [6924,]  131  140  143  147  150  152  148  151  153   152 #>  [6925,]  131  140  143  147  150  152  148  151  153   152 #>  [6926,]  131  140  143  147  150  152  148  151  153   152 #>  [6927,]  132  141  144  148  151  153  150  152  154   153 #>  [6928,]  131  140  143  147  150  152  148  151  153   152 #>  [6929,]  131  140  143  147  150  152  148  151  153   152 #>  [6930,]  131  140  143  147  150  152  148  151  153   152 #>  [6931,]  131  140  143  147  150  152  148  151  153   152 #>  [6932,]  132  141  144  148  151  153  150  152  154   153 #>  [6933,]  131  140  143  147  150  152  148  151  153   152 #>  [6934,]  131  140  143  147  150  152  148  151  153   152 #>  [6935,]  131  140  143  147  150  152  148  151  153   152 #>  [6936,]  131  140  143  147  150  152  148  151  153   152 #>  [6937,]  131  140  143  147  150  152  148  151  153   152 #>  [6938,]  131  140  143  147  150  152  148  151  153   152 #>  [6939,]  131  140  143  147  150  152  148  151  153   152 #>  [6940,]  131  140  143  147  150  152  148  151  153   152 #>  [6941,]  131  140  143  147  150  152  148  151  153   152 #>  [6942,]  131  140  143  147  150  152  148  151  153   152 #>  [6943,]  131  140  143  147  150  152  148  151  153   152 #>  [6944,]  131  140  143  147  150  152  148  151  153   152 #>  [6945,]  131  140  143  147  150  152  148  151  153   152 #>  [6946,]  131  140  143  147  150  152  148  151  153   152 #>  [6947,]  131  140  143  147  150  152  148  151  153   152 #>  [6948,]  131  140  143  147  150  152  148  151  153   152 #>  [6949,]  131  140  143  147  150  152  148  151  153   152 #>  [6950,]  131  140  143  147  150  152  148  151  153   152 #>  [6951,]  131  140  143  147  150  152  148  151  153   152 #>  [6952,]  131  140  143  147  150  152  148  151  153   152 #>  [6953,]  131  140  143  147  150  152  148  151  153   152 #>  [6954,]  131  140  143  147  150  152  148  151  153   152 #>  [6955,]  131  140  143  147  150  152  148  151  153   152 #>  [6956,]  131  140  143  147  150  152  148  151  153   152 #>  [6957,]  131  140  143  147  150  152  148  151  153   152 #>  [6958,]  131  140  143  147  150  152  148  151  153   152 #>  [6959,]  131  140  143  147  150  152  148  151  153   152 #>  [6960,]  131  140  143  147  150  152  148  151  153   152 #>  [6961,]  131  140  143  147  150  152  148  151  153   152 #>  [6962,]  131  140  143  147  150  152  148  151  153   152 #>  [6963,]  131  140  143  147  150  152  148  151  153   152 #>  [6964,]  131  140  143  147  150  152  148  151  153   152 #>  [6965,]  131  140  143  147  150  152  148  151  153   152 #>  [6966,]  131  140  143  147  150  152  148  151  153   152 #>  [6967,]  131  140  143  147  150  152  148  151  153   152 #>  [6968,]  131  140  143  147  150  152  148  151  153   152 #>  [6969,]  131  140  143  147  150  152  148  151  153   152 #>  [6970,]  131  140  143  147  150  152  148  151  153   152 #>  [6971,]  132  141  144  148  151  153  149  152  154   153 #>  [6972,]  131  140  143  147  150  152  148  151  153   152 #>  [6973,]  131  140  143  147  150  152  148  151  153   152 #>  [6974,]  131  140  143  147  150  152  148  151  153   152 #>  [6975,]  132  141  144  148  151  153  150  152  154   153 #>  [6976,]  131  140  143  147  150  152  148  151  153   152 #>  [6977,]  131  140  143  147  150  152  148  151  153   152 #>  [6978,]  131  140  143  147  150  152  148  151  153   152 #>  [6979,]  131  140  143  147  150  152  148  151  153   152 #>  [6980,]  131  140  143  147  150  152  148  151  153   152 #>  [6981,]  131  140  143  147  150  152  148  151  153   152 #>  [6982,]  131  140  143  147  150  152  148  151  153   152 #>  [6983,]  131  140  143  147  150  152  148  151  153   152 #>  [6984,]  131  140  143  147  150  152  148  151  153   152 #>  [6985,]  131  140  143  147  150  152  148  151  153   152 #>  [6986,]  131  140  143  147  150  152  148  151  153   152 #>  [6987,]  131  140  143  147  150  152  148  151  153   152 #>  [6988,]  131  140  143  147  150  152  148  151  153   152 #>  [6989,]  131  140  143  147  150  152  148  151  153   152 #>  [6990,]  131  140  143  147  150  152  148  151  153   152 #>  [6991,]  132  141  144  148  151  153  149  152  154   153 #>  [6992,]  131  140  143  147  150  152  148  151  153   152 #>  [6993,]  131  140  143  147  150  152  148  151  153   152 #>  [6994,]  131  140  143  147  150  152  148  151  153   152 #>  [6995,]  132  141  144  148  151  153  149  152  154   153 #>  [6996,]  131  140  143  147  150  152  148  151  153   152 #>  [6997,]  131  140  143  147  150  152  148  151  153   152 #>  [6998,]  131  140  143  147  150  152  148  151  153   152 #>  [6999,]  131  140  143  147  150  152  148  151  153   152 #>  [7000,]  132  141  144  148  151  153  149  152  154   153 #>  [7001,]  133  142  145  149  152  154  151  153  155   154 #>  [7002,]  134  143  146  150  153  155  152  154  156   155 #>  [7003,]  133  142  145  149  152  154  151  153  155   154 #>  [7004,]  133  142  145  149  152  154  151  153  155   154 #>  [7005,]  133  142  145  149  152  154  151  153  155   154 #>  [7006,]  133  142  145  149  152  154  151  153  155   154 #>  [7007,]  133  142  145  149  152  154  151  153  155   154 #>  [7008,]  133  142  145  149  152  154  151  153  155   154 #>  [7009,]  134  143  146  150  153  155  152  154  156   155 #>  [7010,]  134  143  146  150  153  155  152  154  156   155 #>  [7011,]  133  142  145  149  152  154  151  153  155   154 #>  [7012,]  134  143  146  150  153  155  152  154  156   155 #>  [7013,]  133  142  145  149  152  154  151  153  155   154 #>  [7014,]  133  142  145  149  152  154  151  153  155   154 #>  [7015,]  133  142  145  149  152  154  151  153  155   154 #>  [7016,]  133  142  145  149  152  154  151  153  155   154 #>  [7017,]  133  142  145  149  152  154  151  153  155   154 #>  [7018,]  133  142  145  149  152  154  151  153  155   154 #>  [7019,]  133  142  145  149  152  154  151  153  155   154 #>  [7020,]  133  142  145  149  152  154  151  153  155   154 #>  [7021,]  134  143  146  150  153  155  152  154  156   155 #>  [7022,]  133  142  145  149  152  154  151  153  155   154 #>  [7023,]  133  142  145  149  152  154  151  153  155   154 #>  [7024,]  133  142  145  149  152  154  151  153  155   154 #>  [7025,]  133  142  145  149  152  154  151  153  155   154 #>  [7026,]  133  142  145  149  152  154  151  153  155   154 #>  [7027,]  133  142  145  149  152  154  151  153  155   154 #>  [7028,]  133  142  145  149  152  154  151  153  155   154 #>  [7029,]  134  143  146  150  153  155  152  154  156   155 #>  [7030,]  133  142  145  149  152  154  151  153  155   154 #>  [7031,]  133  142  145  149  152  154  151  153  155   154 #>  [7032,]  133  142  145  149  152  154  151  153  155   154 #>  [7033,]  134  143  146  150  153  155  152  154  156   155 #>  [7034,]  133  142  145  149  152  154  151  153  155   154 #>  [7035,]  133  142  145  149  152  154  151  153  155   154 #>  [7036,]  133  142  145  149  152  154  151  153  155   154 #>  [7037,]  133  142  145  149  152  154  151  153  155   154 #>  [7038,]  133  142  145  149  152  154  151  153  155   154 #>  [7039,]  133  142  145  149  152  154  151  153  155   154 #>  [7040,]  133  142  145  149  152  154  151  153  155   154 #>  [7041,]  133  142  145  149  152  154  151  153  155   154 #>  [7042,]  133  142  145  149  152  154  151  153  155   154 #>  [7043,]  133  142  145  149  152  154  151  153  155   154 #>  [7044,]  133  142  145  149  152  154  151  153  155   154 #>  [7045,]  133  142  145  149  152  154  151  153  155   154 #>  [7046,]  133  142  145  149  152  154  151  153  155   154 #>  [7047,]  133  142  145  149  152  154  151  153  155   154 #>  [7048,]  133  142  145  149  152  154  151  153  155   154 #>  [7049,]  133  142  145  149  152  154  151  153  155   154 #>  [7050,]  133  142  145  149  152  154  151  153  155   154 #>  [7051,]  133  142  145  149  152  154  151  153  155   154 #>  [7052,]  133  142  145  149  152  154  151  153  155   154 #>  [7053,]  133  142  145  149  152  154  151  153  155   154 #>  [7054,]  133  142  145  149  152  154  151  153  155   154 #>  [7055,]  133  142  145  149  152  154  151  153  155   154 #>  [7056,]  133  142  145  149  152  154  151  153  155   154 #>  [7057,]  133  142  145  149  152  154  151  153  155   154 #>  [7058,]  133  142  145  149  152  154  151  153  155   154 #>  [7059,]  133  142  145  149  152  154  151  153  155   154 #>  [7060,]  133  142  145  149  152  154  151  153  155   154 #>  [7061,]  133  142  145  149  152  154  151  153  155   154 #>  [7062,]  133  142  145  149  152  154  151  153  155   154 #>  [7063,]  133  142  145  149  152  154  151  153  155   154 #>  [7064,]  133  142  145  149  152  154  151  153  155   154 #>  [7065,]  133  142  145  149  152  154  151  153  155   154 #>  [7066,]  133  142  145  149  152  154  151  153  155   154 #>  [7067,]  133  142  145  149  152  154  151  153  155   154 #>  [7068,]  133  142  145  149  152  154  151  153  155   154 #>  [7069,]  133  142  145  149  152  154  151  153  155   154 #>  [7070,]  134  143  146  150  153  155  152  154  156   155 #>  [7071,]  133  142  145  149  152  154  151  153  155   154 #>  [7072,]  133  142  145  149  152  154  151  153  155   154 #>  [7073,]  133  142  145  149  152  154  151  153  155   154 #>  [7074,]  133  142  145  149  152  154  151  153  155   154 #>  [7075,]  133  142  145  149  152  154  151  153  155   154 #>  [7076,]  133  142  145  149  152  154  151  153  155   154 #>  [7077,]  133  142  145  149  152  154  151  153  155   154 #>  [7078,]  133  142  145  149  152  154  151  153  155   154 #>  [7079,]  133  142  145  149  152  154  151  153  155   154 #>  [7080,]  133  142  145  149  152  154  151  153  155   154 #>  [7081,]  133  142  145  149  152  154  151  153  155   154 #>  [7082,]  133  142  145  149  152  154  151  153  155   154 #>  [7083,]  133  142  145  149  152  154  151  153  155   154 #>  [7084,]  133  142  145  149  152  154  151  153  155   154 #>  [7085,]  133  142  145  149  152  154  151  153  155   154 #>  [7086,]  134  143  146  150  153  155  152  154  156   155 #>  [7087,]  133  142  145  149  152  154  151  153  155   154 #>  [7088,]  133  142  145  149  152  154  151  153  155   154 #>  [7089,]  133  142  145  149  152  154  151  153  155   154 #>  [7090,]  133  142  145  149  152  154  151  153  155   154 #>  [7091,]  133  142  145  149  152  154  151  153  155   154 #>  [7092,]  133  142  145  149  152  154  151  153  155   154 #>  [7093,]  133  142  145  149  152  154  151  153  155   154 #>  [7094,]  133  142  145  149  152  154  151  153  155   154 #>  [7095,]  133  142  145  149  152  154  151  153  155   154 #>  [7096,]  133  142  145  149  152  154  151  153  155   154 #>  [7097,]  133  142  145  149  152  154  151  153  155   154 #>  [7098,]  133  142  145  149  152  154  151  153  155   154 #>  [7099,]  133  142  145  149  152  154  151  153  155   154 #>  [7100,]  133  142  145  149  152  154  151  153  155   154 #>  [7101,]  136  145  148  152  155  157  154  156  158   157 #>  [7102,]  136  145  148  152  155  157  154  156  158   157 #>  [7103,]  136  145  148  152  155  157  154  156  158   157 #>  [7104,]  135  144  147  151  154  156  153  155  157   156 #>  [7105,]  136  145  148  152  155  157  154  156  158   157 #>  [7106,]  136  145  148  152  155  157  154  156  158   157 #>  [7107,]  136  145  148  152  155  157  154  156  158   157 #>  [7108,]  135  144  147  151  154  156  153  155  157   156 #>  [7109,]  135  144  147  151  154  156  153  155  157   156 #>  [7110,]  136  145  148  152  155  157  154  156  158   157 #>  [7111,]  136  145  148  153  156  158  155  157  159   158 #>  [7112,]  136  145  148  153  156  158  155  157  159   158 #>  [7113,]  136  145  148  152  155  157  154  156  158   157 #>  [7114,]  136  145  148  153  156  158  155  157  159   158 #>  [7115,]  136  145  148  153  156  158  155  157  159   158 #>  [7116,]  136  145  148  152  155  157  154  156  158   157 #>  [7117,]  135  144  147  151  154  156  153  155  157   156 #>  [7118,]  136  145  148  152  155  157  154  156  158   157 #>  [7119,]  136  145  148  153  156  158  155  157  159   158 #>  [7120,]  136  145  148  152  155  157  154  156  158   157 #>  [7121,]  136  145  148  153  156  158  155  157  159   158 #>  [7122,]  135  144  147  151  154  156  153  155  157   156 #>  [7123,]  136  145  148  152  155  157  154  156  158   157 #>  [7124,]  136  145  148  152  155  157  154  156  158   157 #>  [7125,]  136  145  148  152  155  157  154  156  158   157 #>  [7126,]  136  145  148  152  155  157  154  156  158   157 #>  [7127,]  135  144  147  151  154  156  153  155  157   156 #>  [7128,]  136  145  148  152  155  157  154  156  158   157 #>  [7129,]  136  145  148  152  155  157  154  156  158   157 #>  [7130,]  136  145  148  152  155  157  154  156  158   157 #>  [7131,]  136  145  148  152  155  157  154  156  158   157 #>  [7132,]  136  145  148  152  155  157  154  156  158   157 #>  [7133,]  136  145  148  152  155  157  154  156  158   157 #>  [7134,]  136  145  148  152  155  157  154  156  158   157 #>  [7135,]  135  144  147  151  154  156  153  155  157   156 #>  [7136,]  136  145  148  152  155  157  154  156  158   157 #>  [7137,]  136  145  148  152  155  157  154  156  158   157 #>  [7138,]  136  145  148  153  156  158  155  157  159   158 #>  [7139,]  136  145  148  152  155  157  154  156  158   157 #>  [7140,]  136  145  148  152  155  157  154  156  158   157 #>  [7141,]  136  145  148  153  156  158  155  157  159   158 #>  [7142,]  136  145  148  153  156  158  155  157  159   158 #>  [7143,]  136  145  148  152  155  157  154  156  158   157 #>  [7144,]  135  144  147  151  154  156  153  155  157   156 #>  [7145,]  136  145  148  152  155  157  154  156  158   157 #>  [7146,]  136  145  148  152  155  157  154  156  158   157 #>  [7147,]  136  145  148  152  155  157  154  156  158   157 #>  [7148,]  136  145  148  153  156  158  155  157  159   158 #>  [7149,]  136  145  148  152  155  157  154  156  158   157 #>  [7150,]  136  145  148  152  155  157  154  156  158   157 #>  [7151,]  136  145  148  152  155  157  154  156  158   157 #>  [7152,]  135  144  147  151  154  156  153  155  157   156 #>  [7153,]  136  145  148  152  155  157  154  156  158   157 #>  [7154,]  136  145  148  152  155  157  154  156  158   157 #>  [7155,]  136  145  148  152  155  157  154  156  158   157 #>  [7156,]  136  145  148  152  155  157  154  156  158   157 #>  [7157,]  136  145  148  152  155  157  154  156  158   157 #>  [7158,]  135  144  147  151  154  156  153  155  157   156 #>  [7159,]  136  145  148  152  155  157  154  156  158   157 #>  [7160,]  136  145  148  152  155  157  154  156  158   157 #>  [7161,]  136  145  148  153  156  158  155  157  159   158 #>  [7162,]  136  145  148  152  155  157  154  156  158   157 #>  [7163,]  136  145  148  152  155  157  154  156  158   157 #>  [7164,]  136  145  148  152  155  157  154  156  158   157 #>  [7165,]  136  145  148  152  155  157  154  156  158   157 #>  [7166,]  135  144  147  151  154  156  153  155  157   156 #>  [7167,]  136  145  148  152  155  157  154  156  158   157 #>  [7168,]  136  145  148  152  155  157  154  156  158   157 #>  [7169,]  136  145  148  153  156  158  155  157  159   158 #>  [7170,]  136  145  148  152  155  157  154  156  158   157 #>  [7171,]  136  145  148  152  155  157  154  156  158   157 #>  [7172,]  136  145  148  152  155  157  154  156  158   157 #>  [7173,]  136  145  148  152  155  157  154  156  158   157 #>  [7174,]  136  145  148  153  156  158  155  157  159   158 #>  [7175,]  136  145  148  153  156  158  155  157  159   158 #>  [7176,]  136  145  148  152  155  157  154  156  158   157 #>  [7177,]  136  145  148  152  155  157  154  156  158   157 #>  [7178,]  136  145  148  152  155  157  154  156  158   157 #>  [7179,]  136  145  148  152  155  157  154  156  158   157 #>  [7180,]  136  145  148  152  155  157  154  156  158   157 #>  [7181,]  135  144  147  151  154  156  153  155  157   156 #>  [7182,]  135  144  147  151  154  156  153  155  157   156 #>  [7183,]  136  145  148  152  155  157  154  156  158   157 #>  [7184,]  136  145  148  152  155  157  154  156  158   157 #>  [7185,]  136  145  148  152  155  157  154  156  158   157 #>  [7186,]  136  145  148  152  155  157  154  156  158   157 #>  [7187,]  135  144  147  151  154  156  153  155  157   156 #>  [7188,]  136  145  148  152  155  157  154  156  158   157 #>  [7189,]  136  145  148  152  155  157  154  156  158   157 #>  [7190,]  135  144  147  151  154  156  153  155  157   156 #>  [7191,]  136  145  148  152  155  157  154  156  158   157 #>  [7192,]  135  144  147  151  154  156  153  155  157   156 #>  [7193,]  136  145  148  153  156  158  155  157  159   158 #>  [7194,]  136  145  148  152  155  157  154  156  158   157 #>  [7195,]  135  144  147  151  154  156  153  155  157   156 #>  [7196,]  136  145  148  153  156  158  155  157  159   158 #>  [7197,]  136  145  148  153  156  158  155  157  159   158 #>  [7198,]  136  145  148  152  155  157  154  156  158   157 #>  [7199,]  135  144  147  151  154  156  153  155  157   156 #>  [7200,]  136  145  148  152  155  157  154  156  158   157 #>  [7201,]  138  147  150  154  157  159  156  158  160   159 #>  [7202,]  138  147  150  154  157  159  156  158  160   159 #>  [7203,]  138  147  150  154  157  159  156  158  160   159 #>  [7204,]  137  146  149  155  158  160  157  159  161   160 #>  [7205,]  138  147  150  154  157  159  156  158  160   159 #>  [7206,]  138  147  150  154  157  159  156  158  160   159 #>  [7207,]  138  147  150  154  157  159  156  158  160   159 #>  [7208,]  137  146  149  155  158  160  157  159  161   160 #>  [7209,]  137  146  149  156  159  160  157  159  161   160 #>  [7210,]  137  146  149  155  158  160  157  159  161   160 #>  [7211,]  138  147  150  154  157  159  156  158  160   159 #>  [7212,]  138  147  150  154  157  159  156  158  160   159 #>  [7213,]  138  147  150  154  157  159  156  158  160   159 #>  [7214,]  138  147  150  154  157  159  156  158  160   159 #>  [7215,]  138  147  150  154  157  159  156  158  160   159 #>  [7216,]  138  147  150  154  157  159  156  158  160   159 #>  [7217,]  138  147  150  154  157  159  156  158  160   159 #>  [7218,]  138  147  150  154  157  159  156  158  160   159 #>  [7219,]  138  147  150  154  157  159  156  158  160   159 #>  [7220,]  137  146  149  156  159  160  157  159  161   160 #>  [7221,]  138  147  150  154  157  159  156  158  160   159 #>  [7222,]  138  147  150  154  157  159  156  158  160   159 #>  [7223,]  138  147  150  154  157  159  156  158  160   159 #>  [7224,]  138  147  150  154  157  159  156  158  160   159 #>  [7225,]  138  147  150  154  157  159  156  158  160   159 #>  [7226,]  138  147  150  154  157  159  156  158  160   159 #>  [7227,]  138  147  150  154  157  159  156  158  160   159 #>  [7228,]  138  147  150  154  157  159  156  158  160   159 #>  [7229,]  138  147  150  154  157  159  156  158  160   159 #>  [7230,]  137  146  149  155  158  160  157  159  161   160 #>  [7231,]  138  147  150  154  157  159  156  158  160   159 #>  [7232,]  138  147  150  154  157  159  156  158  160   159 #>  [7233,]  138  147  150  154  157  159  156  158  160   159 #>  [7234,]  138  147  150  154  157  159  156  158  160   159 #>  [7235,]  138  147  150  154  157  159  156  158  160   159 #>  [7236,]  138  147  150  154  157  159  156  158  160   159 #>  [7237,]  138  147  150  154  157  159  156  158  160   159 #>  [7238,]  138  147  150  154  157  159  156  158  160   159 #>  [7239,]  138  147  150  154  157  159  156  158  160   159 #>  [7240,]  138  147  150  154  157  159  156  158  160   159 #>  [7241,]  138  147  150  154  157  159  156  158  160   159 #>  [7242,]  138  147  150  154  157  159  156  158  160   159 #>  [7243,]  137  146  149  155  158  160  157  159  161   160 #>  [7244,]  138  147  150  154  157  159  156  158  160   159 #>  [7245,]  138  147  150  154  157  159  156  158  160   159 #>  [7246,]  138  147  150  154  157  159  156  158  160   159 #>  [7247,]  138  147  150  154  157  159  156  158  160   159 #>  [7248,]  138  147  150  154  157  159  156  158  160   159 #>  [7249,]  138  147  150  154  157  159  156  158  160   159 #>  [7250,]  138  147  150  154  157  159  156  158  160   159 #>  [7251,]  137  146  149  156  159  160  157  159  161   160 #>  [7252,]  138  147  150  154  157  159  156  158  160   159 #>  [7253,]  138  147  150  154  157  159  156  158  160   159 #>  [7254,]  138  147  150  154  157  159  156  158  160   159 #>  [7255,]  138  147  150  154  157  159  156  158  160   159 #>  [7256,]  137  146  149  156  159  160  157  159  161   160 #>  [7257,]  138  147  150  154  157  159  156  158  160   159 #>  [7258,]  138  147  150  154  157  159  156  158  160   159 #>  [7259,]  138  147  150  154  157  159  156  158  160   159 #>  [7260,]  137  146  149  155  158  160  157  159  161   160 #>  [7261,]  138  147  150  154  157  159  156  158  160   159 #>  [7262,]  138  147  150  154  157  159  156  158  160   159 #>  [7263,]  138  147  150  154  157  159  156  158  160   159 #>  [7264,]  137  146  149  155  158  160  157  159  161   160 #>  [7265,]  138  147  150  154  157  159  156  158  160   159 #>  [7266,]  138  147  150  154  157  159  156  158  160   159 #>  [7267,]  137  146  149  155  158  160  157  159  161   160 #>  [7268,]  138  147  150  154  157  159  156  158  160   159 #>  [7269,]  138  147  150  154  157  159  156  158  160   159 #>  [7270,]  138  147  150  154  157  159  156  158  160   159 #>  [7271,]  138  147  150  154  157  159  156  158  160   159 #>  [7272,]  138  147  150  154  157  159  156  158  160   159 #>  [7273,]  138  147  150  154  157  159  156  158  160   159 #>  [7274,]  138  147  150  154  157  159  156  158  160   159 #>  [7275,]  138  147  150  154  157  159  156  158  160   159 #>  [7276,]  138  147  150  154  157  159  156  158  160   159 #>  [7277,]  138  147  150  154  157  159  156  158  160   159 #>  [7278,]  137  146  149  155  158  160  157  159  161   160 #>  [7279,]  138  147  150  154  157  159  156  158  160   159 #>  [7280,]  138  147  150  154  157  159  156  158  160   159 #>  [7281,]  138  147  150  154  157  159  156  158  160   159 #>  [7282,]  138  147  150  154  157  159  156  158  160   159 #>  [7283,]  138  147  150  154  157  159  156  158  160   159 #>  [7284,]  138  147  150  154  157  159  156  158  160   159 #>  [7285,]  137  146  149  156  159  160  157  159  161   160 #>  [7286,]  138  147  150  154  157  159  156  158  160   159 #>  [7287,]  138  147  150  154  157  159  156  158  160   159 #>  [7288,]  138  147  150  154  157  159  156  158  160   159 #>  [7289,]  137  146  149  156  159  160  157  159  161   160 #>  [7290,]  138  147  150  154  157  159  156  158  160   159 #>  [7291,]  137  146  149  156  159  160  157  159  161   160 #>  [7292,]  138  147  150  154  157  159  156  158  160   159 #>  [7293,]  138  147  150  154  157  159  156  158  160   159 #>  [7294,]  138  147  150  154  157  159  156  158  160   159 #>  [7295,]  137  146  149  155  158  160  157  159  161   160 #>  [7296,]  138  147  150  154  157  159  156  158  160   159 #>  [7297,]  138  147  150  154  157  159  156  158  160   159 #>  [7298,]  138  147  150  154  157  159  156  158  160   159 #>  [7299,]  138  147  150  154  157  159  156  158  160   159 #>  [7300,]  138  147  150  154  157  159  156  158  160   159 #>  [7301,]  140  149  152  158  161  162  159  161  163   162 #>  [7302,]  140  149  152  158  161  162  159  161  163   162 #>  [7303,]  140  149  152  158  161  162  159  161  163   162 #>  [7304,]  139  148  151  157  160  161  158  160  162   161 #>  [7305,]  140  149  152  158  161  162  159  161  163   162 #>  [7306,]  140  149  152  158  161  162  159  161  163   162 #>  [7307,]  140  149  152  158  161  162  159  161  163   162 #>  [7308,]  139  148  151  157  160  161  158  160  162   161 #>  [7309,]  139  148  151  157  160  161  158  160  162   161 #>  [7310,]  139  148  151  157  160  161  158  160  162   161 #>  [7311,]  140  149  152  158  161  162  159  161  163   162 #>  [7312,]  140  149  152  158  161  162  159  161  163   162 #>  [7313,]  140  149  152  158  161  162  159  161  163   162 #>  [7314,]  140  149  152  158  161  162  159  161  163   162 #>  [7315,]  140  149  152  158  161  162  159  161  163   162 #>  [7316,]  140  149  152  158  161  162  159  161  163   162 #>  [7317,]  140  149  152  158  161  162  159  161  163   162 #>  [7318,]  140  149  152  158  161  162  159  161  163   162 #>  [7319,]  140  149  152  158  161  162  159  161  163   162 #>  [7320,]  140  149  152  158  161  162  159  161  163   162 #>  [7321,]  140  149  152  158  161  162  159  161  163   162 #>  [7322,]  140  149  152  158  161  162  159  161  163   162 #>  [7323,]  140  149  152  158  161  162  159  161  163   162 #>  [7324,]  140  149  152  158  161  162  159  161  163   162 #>  [7325,]  140  149  152  158  161  162  159  161  163   162 #>  [7326,]  140  149  152  158  161  162  159  161  163   162 #>  [7327,]  140  149  152  158  161  162  159  161  163   162 #>  [7328,]  140  149  152  158  161  162  159  161  163   162 #>  [7329,]  140  149  152  158  161  162  159  161  163   162 #>  [7330,]  140  149  152  158  161  162  159  161  163   162 #>  [7331,]  140  149  152  158  161  162  159  161  163   162 #>  [7332,]  140  149  152  158  161  162  159  161  163   162 #>  [7333,]  140  149  152  158  161  162  159  161  163   162 #>  [7334,]  140  149  152  158  161  162  159  161  163   162 #>  [7335,]  140  149  152  158  161  162  159  161  163   162 #>  [7336,]  140  149  152  158  161  162  159  161  163   162 #>  [7337,]  140  149  152  158  161  162  159  161  163   162 #>  [7338,]  140  149  152  158  161  162  159  161  163   162 #>  [7339,]  140  149  152  158  161  162  159  161  163   162 #>  [7340,]  140  149  152  158  161  162  159  161  163   162 #>  [7341,]  140  149  152  158  161  162  159  161  163   162 #>  [7342,]  140  149  152  158  161  162  159  161  163   162 #>  [7343,]  139  148  151  157  160  161  158  160  162   161 #>  [7344,]  140  149  152  158  161  162  159  161  163   162 #>  [7345,]  140  149  152  158  161  162  159  161  163   162 #>  [7346,]  140  149  152  158  161  162  159  161  163   162 #>  [7347,]  140  149  152  158  161  162  159  161  163   162 #>  [7348,]  140  149  152  158  161  162  159  161  163   162 #>  [7349,]  140  149  152  158  161  162  159  161  163   162 #>  [7350,]  140  149  152  158  161  162  159  161  163   162 #>  [7351,]  139  148  151  157  160  161  158  160  162   161 #>  [7352,]  140  149  152  158  161  162  159  161  163   162 #>  [7353,]  140  149  152  158  161  162  159  161  163   162 #>  [7354,]  140  149  152  158  161  162  159  161  163   162 #>  [7355,]  140  149  152  158  161  162  159  161  163   162 #>  [7356,]  140  149  152  158  161  162  159  161  163   162 #>  [7357,]  140  149  152  158  161  162  159  161  163   162 #>  [7358,]  140  149  152  158  161  162  159  161  163   162 #>  [7359,]  140  149  152  158  161  162  159  161  163   162 #>  [7360,]  139  148  151  157  160  161  158  160  162   161 #>  [7361,]  140  149  152  158  161  162  159  161  163   162 #>  [7362,]  140  149  152  158  161  162  159  161  163   162 #>  [7363,]  140  149  152  158  161  162  159  161  163   162 #>  [7364,]  140  149  152  158  161  162  159  161  163   162 #>  [7365,]  140  149  152  158  161  162  159  161  163   162 #>  [7366,]  140  149  152  158  161  162  159  161  163   162 #>  [7367,]  139  148  151  157  160  161  158  160  162   161 #>  [7368,]  140  149  152  158  161  162  159  161  163   162 #>  [7369,]  140  149  152  158  161  162  159  161  163   162 #>  [7370,]  140  149  152  158  161  162  159  161  163   162 #>  [7371,]  140  149  152  158  161  162  159  161  163   162 #>  [7372,]  140  149  152  158  161  162  159  161  163   162 #>  [7373,]  140  149  152  158  161  162  159  161  163   162 #>  [7374,]  140  149  152  158  161  162  159  161  163   162 #>  [7375,]  140  149  152  158  161  162  159  161  163   162 #>  [7376,]  140  149  152  158  161  162  159  161  163   162 #>  [7377,]  140  149  152  158  161  162  159  161  163   162 #>  [7378,]  140  149  152  158  161  162  159  161  163   162 #>  [7379,]  140  149  152  158  161  162  159  161  163   162 #>  [7380,]  140  149  152  158  161  162  159  161  163   162 #>  [7381,]  140  149  152  158  161  162  159  161  163   162 #>  [7382,]  140  149  152  158  161  162  159  161  163   162 #>  [7383,]  140  149  152  158  161  162  159  161  163   162 #>  [7384,]  140  149  152  158  161  162  159  161  163   162 #>  [7385,]  139  148  151  157  160  161  158  160  162   161 #>  [7386,]  140  149  152  158  161  162  159  161  163   162 #>  [7387,]  140  149  152  158  161  162  159  161  163   162 #>  [7388,]  140  149  152  158  161  162  159  161  163   162 #>  [7389,]  140  149  152  158  161  162  159  161  163   162 #>  [7390,]  140  149  152  158  161  162  159  161  163   162 #>  [7391,]  139  148  151  157  160  161  158  160  162   161 #>  [7392,]  140  149  152  158  161  162  159  161  163   162 #>  [7393,]  140  149  152  158  161  162  159  161  163   162 #>  [7394,]  140  149  152  158  161  162  159  161  163   162 #>  [7395,]  139  148  151  157  160  161  158  160  162   161 #>  [7396,]  140  149  152  158  161  162  159  161  163   162 #>  [7397,]  140  149  152  158  161  162  159  161  163   162 #>  [7398,]  140  149  152  158  161  162  159  161  163   162 #>  [7399,]  140  149  152  158  161  162  159  161  163   162 #>  [7400,]  140  149  152  158  161  162  159  161  163   162 #>  [7401,]  141  150  153  159  163  164  161  163  165   164 #>  [7402,]  142  151  154  160  162  163  160  162  164   163 #>  [7403,]  141  150  153  159  163  164  161  163  165   164 #>  [7404,]  141  150  153  159  164  164  161  163  165   164 #>  [7405,]  142  151  154  160  162  163  160  162  164   163 #>  [7406,]  141  150  153  159  163  164  161  163  165   164 #>  [7407,]  142  151  154  160  162  163  160  162  164   163 #>  [7408,]  141  150  153  159  163  164  161  163  165   164 #>  [7409,]  142  151  154  160  162  163  160  162  164   163 #>  [7410,]  142  151  154  160  162  163  160  162  164   163 #>  [7411,]  141  150  153  159  163  164  161  163  165   164 #>  [7412,]  142  151  154  160  162  163  160  162  164   163 #>  [7413,]  142  151  154  160  162  163  160  162  164   163 #>  [7414,]  141  150  153  159  163  164  161  163  165   164 #>  [7415,]  141  150  153  159  163  164  161  163  165   164 #>  [7416,]  141  150  153  159  163  164  161  163  165   164 #>  [7417,]  142  151  154  160  162  163  160  162  164   163 #>  [7418,]  142  151  154  160  162  163  160  162  164   163 #>  [7419,]  141  150  153  159  163  164  161  163  165   164 #>  [7420,]  142  151  154  160  162  163  160  162  164   163 #>  [7421,]  142  151  154  160  162  163  160  162  164   163 #>  [7422,]  142  151  154  160  162  163  160  162  164   163 #>  [7423,]  142  151  154  160  162  163  160  162  164   163 #>  [7424,]  142  151  154  160  162  163  160  162  164   163 #>  [7425,]  141  150  153  159  164  164  161  163  165   164 #>  [7426,]  141  150  153  159  163  164  161  163  165   164 #>  [7427,]  142  151  154  160  162  163  160  162  164   163 #>  [7428,]  141  150  153  159  163  164  161  163  165   164 #>  [7429,]  142  151  154  160  162  163  160  162  164   163 #>  [7430,]  142  151  154  160  162  163  160  162  164   163 #>  [7431,]  142  151  154  160  162  163  160  162  164   163 #>  [7432,]  142  151  154  160  162  163  160  162  164   163 #>  [7433,]  142  151  154  160  162  163  160  162  164   163 #>  [7434,]  141  150  153  159  163  164  161  163  165   164 #>  [7435,]  141  150  153  159  163  164  161  163  165   164 #>  [7436,]  142  151  154  160  162  163  160  162  164   163 #>  [7437,]  141  150  153  159  163  164  161  163  165   164 #>  [7438,]  141  150  153  159  163  164  161  163  165   164 #>  [7439,]  141  150  153  159  164  164  161  163  165   164 #>  [7440,]  142  151  154  160  162  163  160  162  164   163 #>  [7441,]  142  151  154  160  162  163  160  162  164   163 #>  [7442,]  141  150  153  159  163  164  161  163  165   164 #>  [7443,]  141  150  153  159  164  164  161  163  165   164 #>  [7444,]  142  151  154  160  162  163  160  162  164   163 #>  [7445,]  141  150  153  159  164  164  161  163  165   164 #>  [7446,]  141  150  153  159  163  164  161  163  165   164 #>  [7447,]  142  151  154  160  162  163  160  162  164   163 #>  [7448,]  142  151  154  160  162  163  160  162  164   163 #>  [7449,]  141  150  153  159  163  164  161  163  165   164 #>  [7450,]  142  151  154  160  162  163  160  162  164   163 #>  [7451,]  141  150  153  159  163  164  161  163  165   164 #>  [7452,]  141  150  153  159  163  164  161  163  165   164 #>  [7453,]  142  151  154  160  162  163  160  162  164   163 #>  [7454,]  142  151  154  160  162  163  160  162  164   163 #>  [7455,]  141  150  153  159  163  164  161  163  165   164 #>  [7456,]  141  150  153  159  163  164  161  163  165   164 #>  [7457,]  141  150  153  159  163  164  161  163  165   164 #>  [7458,]  142  151  154  160  162  163  160  162  164   163 #>  [7459,]  141  150  153  159  163  164  161  163  165   164 #>  [7460,]  142  151  154  160  162  163  160  162  164   163 #>  [7461,]  142  151  154  160  162  163  160  162  164   163 #>  [7462,]  141  150  153  159  163  164  161  163  165   164 #>  [7463,]  142  151  154  160  162  163  160  162  164   163 #>  [7464,]  141  150  153  159  163  164  161  163  165   164 #>  [7465,]  141  150  153  159  163  164  161  163  165   164 #>  [7466,]  141  150  153  159  163  164  161  163  165   164 #>  [7467,]  141  150  153  159  163  164  161  163  165   164 #>  [7468,]  141  150  153  159  163  164  161  163  165   164 #>  [7469,]  141  150  153  159  163  164  161  163  165   164 #>  [7470,]  142  151  154  160  162  163  160  162  164   163 #>  [7471,]  141  150  153  159  163  164  161  163  165   164 #>  [7472,]  141  150  153  159  164  164  161  163  165   164 #>  [7473,]  141  150  153  159  164  164  161  163  165   164 #>  [7474,]  141  150  153  159  164  164  161  163  165   164 #>  [7475,]  142  151  154  160  162  163  160  162  164   163 #>  [7476,]  141  150  153  159  164  164  161  163  165   164 #>  [7477,]  141  150  153  159  164  164  161  163  165   164 #>  [7478,]  142  151  154  160  162  163  160  162  164   163 #>  [7479,]  141  150  153  159  163  164  161  163  165   164 #>  [7480,]  142  151  154  160  162  163  160  162  164   163 #>  [7481,]  142  151  154  160  162  163  160  162  164   163 #>  [7482,]  141  150  153  159  163  164  161  163  165   164 #>  [7483,]  142  151  154  160  162  163  160  162  164   163 #>  [7484,]  142  151  154  160  162  163  160  162  164   163 #>  [7485,]  141  150  153  159  163  164  161  163  165   164 #>  [7486,]  142  151  154  160  162  163  160  162  164   163 #>  [7487,]  142  151  154  160  162  163  160  162  164   163 #>  [7488,]  142  151  154  160  162  163  160  162  164   163 #>  [7489,]  141  150  153  159  163  164  161  163  165   164 #>  [7490,]  141  150  153  159  163  164  161  163  165   164 #>  [7491,]  141  150  153  159  163  164  161  163  165   164 #>  [7492,]  142  151  154  160  162  163  160  162  164   163 #>  [7493,]  142  151  154  160  162  163  160  162  164   163 #>  [7494,]  141  150  153  159  164  164  161  163  165   164 #>  [7495,]  142  151  154  160  162  163  160  162  164   163 #>  [7496,]  141  150  153  159  163  164  161  163  165   164 #>  [7497,]  141  150  153  159  163  164  161  163  165   164 #>  [7498,]  141  150  153  159  163  164  161  163  165   164 #>  [7499,]  141  150  153  159  163  164  161  163  165   164 #>  [7500,]  141  150  153  159  164  164  161  163  165   164 #>  [7501,]  144  153  156  162  165  165  162  164  167   166 #>  [7502,]  143  152  155  161  167  166  163  164  167   166 #>  [7503,]  143  152  155  161  167  166  163  164  167   166 #>  [7504,]  143  152  155  161  166  166  163  164  166   165 #>  [7505,]  143  152  155  161  167  166  163  164  167   166 #>  [7506,]  143  152  155  161  167  166  163  164  167   166 #>  [7507,]  143  152  155  161  167  166  163  164  167   166 #>  [7508,]  143  152  155  161  166  166  163  164  166   165 #>  [7509,]  143  152  155  161  166  166  163  164  166   165 #>  [7510,]  143  152  155  161  167  166  163  164  167   166 #>  [7511,]  143  152  155  161  167  166  163  164  166   165 #>  [7512,]  143  152  155  161  167  166  163  164  167   166 #>  [7513,]  144  153  156  162  165  165  162  164  166   165 #>  [7514,]  144  153  156  162  165  165  162  164  167   166 #>  [7515,]  144  153  156  162  165  165  162  164  167   166 #>  [7516,]  144  153  156  162  165  165  162  164  167   166 #>  [7517,]  143  152  155  161  166  166  163  164  166   165 #>  [7518,]  143  152  155  161  167  166  163  164  167   166 #>  [7519,]  143  152  155  161  167  166  163  164  167   166 #>  [7520,]  143  152  155  161  167  166  163  164  167   166 #>  [7521,]  144  153  156  162  165  165  162  164  167   166 #>  [7522,]  143  152  155  161  166  166  163  164  166   165 #>  [7523,]  143  152  155  161  167  166  163  164  167   166 #>  [7524,]  143  152  155  161  167  166  163  164  167   166 #>  [7525,]  143  152  155  161  167  166  163  164  167   166 #>  [7526,]  143  152  155  161  167  166  163  164  167   166 #>  [7527,]  143  152  155  161  166  166  163  164  166   165 #>  [7528,]  143  152  155  161  167  166  163  164  167   166 #>  [7529,]  144  153  156  162  165  165  162  164  167   166 #>  [7530,]  143  152  155  161  167  166  163  164  167   166 #>  [7531,]  143  152  155  161  167  166  163  164  167   166 #>  [7532,]  143  152  155  161  167  166  163  164  167   166 #>  [7533,]  144  153  156  162  165  165  162  164  167   166 #>  [7534,]  143  152  155  161  167  166  163  164  167   166 #>  [7535,]  143  152  155  161  166  166  163  164  166   165 #>  [7536,]  143  152  155  161  167  166  163  164  167   166 #>  [7537,]  143  152  155  161  167  166  163  164  167   166 #>  [7538,]  143  152  155  161  167  166  163  164  167   166 #>  [7539,]  143  152  155  161  167  166  163  164  167   166 #>  [7540,]  143  152  155  161  167  166  163  164  167   166 #>  [7541,]  144  153  156  162  165  165  162  164  167   166 #>  [7542,]  143  152  155  161  167  166  163  164  167   166 #>  [7543,]  143  152  155  161  167  166  163  164  167   166 #>  [7544,]  144  153  156  162  165  165  162  164  166   165 #>  [7545,]  143  152  155  161  167  166  163  164  167   166 #>  [7546,]  143  152  155  161  167  166  163  164  167   166 #>  [7547,]  143  152  155  161  167  166  163  164  167   166 #>  [7548,]  143  152  155  161  167  166  163  164  167   166 #>  [7549,]  143  152  155  161  167  166  163  164  166   165 #>  [7550,]  144  153  156  162  165  165  162  164  167   166 #>  [7551,]  143  152  155  161  167  166  163  164  167   166 #>  [7552,]  143  152  155  161  166  166  163  164  166   165 #>  [7553,]  143  152  155  161  167  166  163  164  167   166 #>  [7554,]  143  152  155  161  167  166  163  164  167   166 #>  [7555,]  143  152  155  161  167  166  163  164  166   165 #>  [7556,]  143  152  155  161  167  166  163  164  167   166 #>  [7557,]  143  152  155  161  167  166  163  164  167   166 #>  [7558,]  143  152  155  161  166  166  163  164  166   165 #>  [7559,]  144  153  156  162  165  165  162  164  167   166 #>  [7560,]  143  152  155  161  167  166  163  164  167   166 #>  [7561,]  143  152  155  161  167  166  163  164  167   166 #>  [7562,]  143  152  155  161  167  166  163  164  167   166 #>  [7563,]  143  152  155  161  167  166  163  164  167   166 #>  [7564,]  143  152  155  161  167  166  163  164  167   166 #>  [7565,]  143  152  155  161  167  166  163  164  167   166 #>  [7566,]  143  152  155  161  166  166  163  164  166   165 #>  [7567,]  143  152  155  161  167  166  163  164  167   166 #>  [7568,]  144  153  156  162  165  165  162  164  167   166 #>  [7569,]  143  152  155  161  167  166  163  164  167   166 #>  [7570,]  144  153  156  162  165  165  162  164  167   166 #>  [7571,]  143  152  155  161  167  166  163  164  167   166 #>  [7572,]  143  152  155  161  167  166  163  164  167   166 #>  [7573,]  144  153  156  162  165  165  162  164  167   166 #>  [7574,]  143  152  155  161  167  166  163  164  167   166 #>  [7575,]  143  152  155  161  167  166  163  164  167   166 #>  [7576,]  143  152  155  161  167  166  163  164  167   166 #>  [7577,]  143  152  155  161  167  166  163  164  167   166 #>  [7578,]  143  152  155  161  167  166  163  164  167   166 #>  [7579,]  143  152  155  161  167  166  163  164  166   165 #>  [7580,]  143  152  155  161  167  166  163  164  166   165 #>  [7581,]  143  152  155  161  166  166  163  164  166   165 #>  [7582,]  143  152  155  161  166  166  163  164  166   165 #>  [7583,]  143  152  155  161  167  166  163  164  166   165 #>  [7584,]  143  152  155  161  167  166  163  164  167   166 #>  [7585,]  143  152  155  161  167  166  163  164  167   166 #>  [7586,]  143  152  155  161  167  166  163  164  167   166 #>  [7587,]  143  152  155  161  166  166  163  164  166   165 #>  [7588,]  143  152  155  161  167  166  163  164  166   165 #>  [7589,]  143  152  155  161  167  166  163  164  167   166 #>  [7590,]  143  152  155  161  166  166  163  164  166   165 #>  [7591,]  143  152  155  161  167  166  163  164  167   166 #>  [7592,]  143  152  155  161  166  166  163  164  166   165 #>  [7593,]  143  152  155  161  167  166  163  164  167   166 #>  [7594,]  143  152  155  161  167  166  163  164  167   166 #>  [7595,]  143  152  155  161  166  166  163  164  166   165 #>  [7596,]  144  153  156  162  165  165  162  164  167   166 #>  [7597,]  143  152  155  161  167  166  163  164  167   166 #>  [7598,]  143  152  155  161  167  166  163  164  167   166 #>  [7599,]  144  153  156  162  165  165  162  164  166   165 #>  [7600,]  143  152  155  161  167  166  163  164  167   166 #>  [7601,]  146  155  158  164  169  168  165  166  169   168 #>  [7602,]  146  155  158  165  170  168  165  166  169   168 #>  [7603,]  145  154  157  163  168  167  164  165  168   167 #>  [7604,]  146  155  158  164  169  168  165  166  169   168 #>  [7605,]  146  155  158  165  170  168  165  166  169   168 #>  [7606,]  146  155  158  165  170  168  165  166  169   168 #>  [7607,]  146  155  158  165  170  168  165  166  169   168 #>  [7608,]  146  155  158  164  169  168  165  166  169   168 #>  [7609,]  146  155  158  164  169  168  165  166  169   168 #>  [7610,]  146  155  158  165  170  168  165  166  169   168 #>  [7611,]  146  155  158  164  169  168  165  166  169   168 #>  [7612,]  145  154  157  163  168  167  164  165  168   167 #>  [7613,]  146  155  158  164  169  168  165  166  169   168 #>  [7614,]  145  154  157  163  168  167  164  165  168   167 #>  [7615,]  146  155  158  165  170  168  165  166  169   168 #>  [7616,]  146  155  158  165  170  168  165  166  169   168 #>  [7617,]  146  155  158  164  169  168  165  166  169   168 #>  [7618,]  146  155  158  165  170  168  165  166  169   168 #>  [7619,]  146  155  158  165  170  168  165  166  169   168 #>  [7620,]  146  155  158  165  170  168  165  166  169   168 #>  [7621,]  146  155  158  164  169  168  165  166  169   168 #>  [7622,]  146  155  158  164  169  168  165  166  169   168 #>  [7623,]  146  155  158  165  170  168  165  166  169   168 #>  [7624,]  146  155  158  165  170  168  165  166  169   168 #>  [7625,]  146  155  158  165  170  168  165  166  169   168 #>  [7626,]  145  154  157  163  168  167  164  165  168   167 #>  [7627,]  146  155  158  164  169  168  165  166  169   168 #>  [7628,]  146  155  158  165  170  168  165  166  169   168 #>  [7629,]  146  155  158  165  170  168  165  166  169   168 #>  [7630,]  146  155  158  164  169  168  165  166  169   168 #>  [7631,]  146  155  158  165  170  168  165  166  169   168 #>  [7632,]  145  154  157  163  168  167  164  165  168   167 #>  [7633,]  146  155  158  165  170  168  165  166  169   168 #>  [7634,]  146  155  158  165  170  168  165  166  169   168 #>  [7635,]  146  155  158  164  169  168  165  166  169   168 #>  [7636,]  146  155  158  165  170  168  165  166  169   168 #>  [7637,]  146  155  158  165  170  168  165  166  169   168 #>  [7638,]  146  155  158  165  170  168  165  166  169   168 #>  [7639,]  146  155  158  165  170  168  165  166  169   168 #>  [7640,]  146  155  158  165  170  168  165  166  169   168 #>  [7641,]  146  155  158  165  170  168  165  166  169   168 #>  [7642,]  146  155  158  165  170  168  165  166  169   168 #>  [7643,]  146  155  158  164  169  168  165  166  169   168 #>  [7644,]  146  155  158  164  169  168  165  166  169   168 #>  [7645,]  146  155  158  165  170  168  165  166  169   168 #>  [7646,]  146  155  158  164  169  168  165  166  169   168 #>  [7647,]  146  155  158  165  170  168  165  166  169   168 #>  [7648,]  146  155  158  165  170  168  165  166  169   168 #>  [7649,]  146  155  158  164  169  168  165  166  169   168 #>  [7650,]  146  155  158  165  170  168  165  166  169   168 #>  [7651,]  145  154  157  163  168  167  164  165  168   167 #>  [7652,]  146  155  158  164  169  168  165  166  169   168 #>  [7653,]  146  155  158  165  170  168  165  166  169   168 #>  [7654,]  145  154  157  163  168  167  164  165  168   167 #>  [7655,]  146  155  158  164  169  168  165  166  169   168 #>  [7656,]  146  155  158  165  170  168  165  166  169   168 #>  [7657,]  146  155  158  165  170  168  165  166  169   168 #>  [7658,]  146  155  158  164  169  168  165  166  169   168 #>  [7659,]  146  155  158  165  170  168  165  166  169   168 #>  [7660,]  146  155  158  165  170  168  165  166  169   168 #>  [7661,]  146  155  158  165  170  168  165  166  169   168 #>  [7662,]  146  155  158  165  170  168  165  166  169   168 #>  [7663,]  146  155  158  165  170  168  165  166  169   168 #>  [7664,]  146  155  158  165  170  168  165  166  169   168 #>  [7665,]  146  155  158  165  170  168  165  166  169   168 #>  [7666,]  145  154  157  163  168  167  164  165  168   167 #>  [7667,]  146  155  158  165  170  168  165  166  169   168 #>  [7668,]  146  155  158  165  170  168  165  166  169   168 #>  [7669,]  145  154  157  163  168  167  164  165  168   167 #>  [7670,]  146  155  158  165  170  168  165  166  169   168 #>  [7671,]  146  155  158  165  170  168  165  166  169   168 #>  [7672,]  146  155  158  165  170  168  165  166  169   168 #>  [7673,]  146  155  158  165  170  168  165  166  169   168 #>  [7674,]  146  155  158  165  170  168  165  166  169   168 #>  [7675,]  146  155  158  165  170  168  165  166  169   168 #>  [7676,]  146  155  158  165  170  168  165  166  169   168 #>  [7677,]  146  155  158  165  170  168  165  166  169   168 #>  [7678,]  146  155  158  165  170  168  165  166  169   168 #>  [7679,]  146  155  158  164  169  168  165  166  169   168 #>  [7680,]  145  154  157  163  168  167  164  165  168   167 #>  [7681,]  146  155  158  164  169  168  165  166  169   168 #>  [7682,]  146  155  158  164  169  168  165  166  169   168 #>  [7683,]  146  155  158  164  169  168  165  166  169   168 #>  [7684,]  146  155  158  165  170  168  165  166  169   168 #>  [7685,]  146  155  158  165  170  168  165  166  169   168 #>  [7686,]  146  155  158  165  170  168  165  166  169   168 #>  [7687,]  146  155  158  164  169  168  165  166  169   168 #>  [7688,]  146  155  158  164  169  168  165  166  169   168 #>  [7689,]  145  154  157  163  168  167  164  165  168   167 #>  [7690,]  146  155  158  164  169  168  165  166  169   168 #>  [7691,]  146  155  158  164  169  168  165  166  169   168 #>  [7692,]  146  155  158  164  169  168  165  166  169   168 #>  [7693,]  146  155  158  165  170  168  165  166  169   168 #>  [7694,]  146  155  158  165  170  168  165  166  169   168 #>  [7695,]  146  155  158  164  169  168  165  166  169   168 #>  [7696,]  146  155  158  164  169  168  165  166  169   168 #>  [7697,]  146  155  158  165  170  168  165  166  169   168 #>  [7698,]  146  155  158  165  170  168  165  166  169   168 #>  [7699,]  146  155  158  164  169  168  165  166  169   168 #>  [7700,]  146  155  158  165  170  168  165  166  169   168 #>  [7701,]  148  157  160  167  172  170  167  168  171   170 #>  [7702,]  148  157  160  167  172  170  167  168  171   170 #>  [7703,]  147  156  159  166  171  169  166  167  170   169 #>  [7704,]  148  157  160  167  172  170  167  168  171   170 #>  [7705,]  148  157  160  167  172  170  167  168  171   170 #>  [7706,]  148  157  160  167  172  170  167  168  171   170 #>  [7707,]  148  157  160  167  172  170  167  168  171   170 #>  [7708,]  148  157  160  167  172  170  167  168  171   170 #>  [7709,]  148  157  160  167  172  170  167  168  171   170 #>  [7710,]  147  156  159  166  171  169  166  167  170   169 #>  [7711,]  147  156  159  166  171  169  166  167  170   169 #>  [7712,]  148  157  160  167  172  170  167  168  171   170 #>  [7713,]  148  157  160  167  172  170  167  168  171   170 #>  [7714,]  147  156  159  166  171  169  166  167  170   169 #>  [7715,]  148  157  160  167  172  170  167  168  171   170 #>  [7716,]  148  157  160  167  172  170  167  168  171   170 #>  [7717,]  148  157  160  167  172  170  167  168  171   170 #>  [7718,]  148  157  160  167  172  170  167  168  171   170 #>  [7719,]  148  157  160  167  172  170  167  168  171   170 #>  [7720,]  148  157  160  167  172  170  167  168  171   170 #>  [7721,]  148  157  160  167  172  170  167  168  171   170 #>  [7722,]  148  157  160  167  172  170  167  168  171   170 #>  [7723,]  148  157  160  167  172  170  167  168  171   170 #>  [7724,]  148  157  160  167  172  170  167  168  171   170 #>  [7725,]  148  157  160  167  172  170  167  168  171   170 #>  [7726,]  148  157  160  167  172  170  167  168  171   170 #>  [7727,]  148  157  160  167  172  170  167  168  171   170 #>  [7728,]  148  157  160  167  172  170  167  168  171   170 #>  [7729,]  148  157  160  167  172  170  167  168  171   170 #>  [7730,]  148  157  160  167  172  170  167  168  171   170 #>  [7731,]  148  157  160  167  172  170  167  168  171   170 #>  [7732,]  147  156  159  166  171  169  166  167  170   169 #>  [7733,]  148  157  160  167  172  170  167  168  171   170 #>  [7734,]  148  157  160  167  172  170  167  168  171   170 #>  [7735,]  148  157  160  167  172  170  167  168  171   170 #>  [7736,]  148  157  160  167  172  170  167  168  171   170 #>  [7737,]  148  157  160  167  172  170  167  168  171   170 #>  [7738,]  148  157  160  167  172  170  167  168  171   170 #>  [7739,]  148  157  160  167  172  170  167  168  171   170 #>  [7740,]  147  156  159  166  171  169  166  167  170   169 #>  [7741,]  148  157  160  167  172  170  167  168  171   170 #>  [7742,]  148  157  160  167  172  170  167  168  171   170 #>  [7743,]  148  157  160  167  172  170  167  168  171   170 #>  [7744,]  148  157  160  167  172  170  167  168  171   170 #>  [7745,]  148  157  160  167  172  170  167  168  171   170 #>  [7746,]  148  157  160  167  172  170  167  168  171   170 #>  [7747,]  148  157  160  167  172  170  167  168  171   170 #>  [7748,]  147  156  159  166  171  169  166  167  170   169 #>  [7749,]  148  157  160  167  172  170  167  168  171   170 #>  [7750,]  148  157  160  167  172  170  167  168  171   170 #>  [7751,]  148  157  160  167  172  170  167  168  171   170 #>  [7752,]  148  157  160  167  172  170  167  168  171   170 #>  [7753,]  148  157  160  167  172  170  167  168  171   170 #>  [7754,]  148  157  160  167  172  170  167  168  171   170 #>  [7755,]  148  157  160  167  172  170  167  168  171   170 #>  [7756,]  148  157  160  167  172  170  167  168  171   170 #>  [7757,]  148  157  160  167  172  170  167  168  171   170 #>  [7758,]  148  157  160  167  172  170  167  168  171   170 #>  [7759,]  148  157  160  167  172  170  167  168  171   170 #>  [7760,]  148  157  160  167  172  170  167  168  171   170 #>  [7761,]  148  157  160  167  172  170  167  168  171   170 #>  [7762,]  148  157  160  167  172  170  167  168  171   170 #>  [7763,]  148  157  160  167  172  170  167  168  171   170 #>  [7764,]  148  157  160  167  172  170  167  168  171   170 #>  [7765,]  148  157  160  167  172  170  167  168  171   170 #>  [7766,]  148  157  160  167  172  170  167  168  171   170 #>  [7767,]  148  157  160  167  172  170  167  168  171   170 #>  [7768,]  148  157  160  167  172  170  167  168  171   170 #>  [7769,]  148  157  160  167  172  170  167  168  171   170 #>  [7770,]  147  156  159  166  171  169  166  167  170   169 #>  [7771,]  148  157  160  167  172  170  167  168  171   170 #>  [7772,]  148  157  160  167  172  170  167  168  171   170 #>  [7773,]  148  157  160  167  172  170  167  168  171   170 #>  [7774,]  148  157  160  167  172  170  167  168  171   170 #>  [7775,]  148  157  160  167  172  170  167  168  171   170 #>  [7776,]  148  157  160  167  172  170  167  168  171   170 #>  [7777,]  148  157  160  167  172  170  167  168  171   170 #>  [7778,]  148  157  160  167  172  170  167  168  171   170 #>  [7779,]  148  157  160  167  172  170  167  168  171   170 #>  [7780,]  148  157  160  167  172  170  167  168  171   170 #>  [7781,]  148  157  160  167  172  170  167  168  171   170 #>  [7782,]  148  157  160  167  172  170  167  168  171   170 #>  [7783,]  148  157  160  167  172  170  167  168  171   170 #>  [7784,]  148  157  160  167  172  170  167  168  171   170 #>  [7785,]  148  157  160  167  172  170  167  168  171   170 #>  [7786,]  148  157  160  167  172  170  167  168  171   170 #>  [7787,]  148  157  160  167  172  170  167  168  171   170 #>  [7788,]  148  157  160  167  172  170  167  168  171   170 #>  [7789,]  148  157  160  167  172  170  167  168  171   170 #>  [7790,]  148  157  160  167  172  170  167  168  171   170 #>  [7791,]  148  157  160  167  172  170  167  168  171   170 #>  [7792,]  148  157  160  167  172  170  167  168  171   170 #>  [7793,]  148  157  160  167  172  170  167  168  171   170 #>  [7794,]  148  157  160  167  172  170  167  168  171   170 #>  [7795,]  148  157  160  167  172  170  167  168  171   170 #>  [7796,]  148  157  160  167  172  170  167  168  171   170 #>  [7797,]  148  157  160  167  172  170  167  168  171   170 #>  [7798,]  148  157  160  167  172  170  167  168  171   170 #>  [7799,]  148  157  160  167  172  170  167  168  171   170 #>  [7800,]  148  157  160  167  172  170  167  168  171   170 #>  [7801,]  150  159  162  169  173  171  168  169  172   171 #>  [7802,]  150  159  162  169  173  171  168  169  172   171 #>  [7803,]  150  159  162  169  173  171  168  169  172   171 #>  [7804,]  150  159  162  169  173  171  168  169  172   171 #>  [7805,]  150  159  162  169  173  171  168  169  172   171 #>  [7806,]  150  159  162  169  173  172  169  171  174   173 #>  [7807,]  149  158  161  168  173  171  168  169  172   171 #>  [7808,]  150  159  162  169  173  172  169  170  173   172 #>  [7809,]  150  159  162  169  173  172  169  171  174   173 #>  [7810,]  150  159  162  169  173  171  168  169  172   171 #>  [7811,]  150  159  162  169  173  171  168  169  172   171 #>  [7812,]  150  159  162  169  173  172  169  170  173   172 #>  [7813,]  150  159  162  169  173  171  168  169  172   171 #>  [7814,]  150  159  162  169  173  171  168  169  172   171 #>  [7815,]  150  159  162  169  173  172  169  171  174   173 #>  [7816,]  150  159  162  169  173  171  168  169  172   171 #>  [7817,]  150  159  162  169  173  171  168  169  172   171 #>  [7818,]  150  159  162  169  173  171  168  169  172   171 #>  [7819,]  150  159  162  169  173  171  168  169  172   171 #>  [7820,]  150  159  162  169  173  172  169  171  174   173 #>  [7821,]  149  158  161  168  173  171  168  169  172   171 #>  [7822,]  150  159  162  169  173  171  168  169  172   171 #>  [7823,]  150  159  162  169  173  171  168  169  172   171 #>  [7824,]  150  159  162  169  173  171  168  169  172   171 #>  [7825,]  150  159  162  169  173  171  168  169  172   171 #>  [7826,]  150  159  162  169  173  172  169  171  174   173 #>  [7827,]  150  159  162  169  173  171  168  169  172   171 #>  [7828,]  150  159  162  169  173  171  168  169  172   171 #>  [7829,]  150  159  162  169  173  171  168  169  172   171 #>  [7830,]  150  159  162  169  173  171  168  169  172   171 #>  [7831,]  150  159  162  169  173  171  168  169  172   171 #>  [7832,]  150  159  162  169  173  171  168  169  172   171 #>  [7833,]  150  159  162  169  173  172  169  171  174   173 #>  [7834,]  150  159  162  169  173  171  168  169  172   171 #>  [7835,]  150  159  162  169  173  171  168  169  172   171 #>  [7836,]  150  159  162  169  173  171  168  169  172   171 #>  [7837,]  150  159  162  169  173  171  168  169  172   171 #>  [7838,]  150  159  162  169  173  171  168  169  172   171 #>  [7839,]  149  158  161  168  173  171  168  169  172   171 #>  [7840,]  150  159  162  169  173  171  168  169  172   171 #>  [7841,]  150  159  162  169  173  171  168  169  172   171 #>  [7842,]  150  159  162  169  173  171  168  169  172   171 #>  [7843,]  150  159  162  169  173  172  169  171  174   173 #>  [7844,]  150  159  162  169  173  171  168  169  172   171 #>  [7845,]  150  159  162  169  173  172  169  171  174   173 #>  [7846,]  150  159  162  169  173  172  169  170  173   172 #>  [7847,]  150  159  162  169  173  171  168  169  172   171 #>  [7848,]  150  159  162  169  173  171  168  169  172   171 #>  [7849,]  149  158  161  168  173  171  168  169  172   171 #>  [7850,]  150  159  162  169  173  172  169  171  174   173 #>  [7851,]  150  159  162  169  173  172  169  171  174   173 #>  [7852,]  150  159  162  169  173  171  168  169  172   171 #>  [7853,]  150  159  162  169  173  172  169  171  174   173 #>  [7854,]  150  159  162  169  173  171  168  169  172   171 #>  [7855,]  150  159  162  169  173  171  168  169  172   171 #>  [7856,]  150  159  162  169  173  172  169  171  174   173 #>  [7857,]  150  159  162  169  173  172  169  170  173   172 #>  [7858,]  150  159  162  169  173  172  169  171  174   173 #>  [7859,]  150  159  162  169  173  171  168  169  172   171 #>  [7860,]  150  159  162  169  173  171  168  169  172   171 #>  [7861,]  150  159  162  169  173  172  169  171  174   173 #>  [7862,]  149  158  161  168  173  171  168  169  172   171 #>  [7863,]  150  159  162  169  173  171  168  169  172   171 #>  [7864,]  150  159  162  169  173  172  169  171  174   173 #>  [7865,]  150  159  162  169  173  172  169  171  174   173 #>  [7866,]  150  159  162  169  173  172  169  171  174   173 #>  [7867,]  150  159  162  169  173  171  168  169  172   171 #>  [7868,]  150  159  162  169  173  172  169  170  173   172 #>  [7869,]  150  159  162  169  173  171  168  169  172   171 #>  [7870,]  149  158  161  168  173  171  168  169  172   171 #>  [7871,]  150  159  162  169  173  171  168  169  172   171 #>  [7872,]  150  159  162  169  173  172  169  170  173   172 #>  [7873,]  150  159  162  169  173  171  168  169  172   171 #>  [7874,]  150  159  162  169  173  171  168  169  172   171 #>  [7875,]  150  159  162  169  173  171  168  169  172   171 #>  [7876,]  150  159  162  169  173  172  169  170  173   172 #>  [7877,]  150  159  162  169  173  171  168  169  172   171 #>  [7878,]  150  159  162  169  173  172  169  170  173   172 #>  [7879,]  150  159  162  169  173  171  168  169  172   171 #>  [7880,]  149  158  161  168  173  171  168  169  172   171 #>  [7881,]  150  159  162  169  173  172  169  171  174   173 #>  [7882,]  150  159  162  169  173  171  168  169  172   171 #>  [7883,]  150  159  162  169  173  171  168  169  172   171 #>  [7884,]  150  159  162  169  173  171  168  169  172   171 #>  [7885,]  150  159  162  169  173  171  168  169  172   171 #>  [7886,]  150  159  162  169  173  171  168  169  172   171 #>  [7887,]  150  159  162  169  173  171  168  169  172   171 #>  [7888,]  150  159  162  169  173  171  168  169  172   171 #>  [7889,]  150  159  162  169  173  171  168  169  172   171 #>  [7890,]  150  159  162  169  173  171  168  169  172   171 #>  [7891,]  150  159  162  169  173  171  168  169  172   171 #>  [7892,]  150  159  162  169  173  172  169  170  173   172 #>  [7893,]  150  159  162  169  173  171  168  169  172   171 #>  [7894,]  150  159  162  169  173  172  169  171  174   173 #>  [7895,]  149  158  161  168  173  171  168  169  172   171 #>  [7896,]  150  159  162  169  173  172  169  170  173   172 #>  [7897,]  150  159  162  169  173  172  169  170  173   172 #>  [7898,]  150  159  162  169  173  171  168  169  172   171 #>  [7899,]  150  159  162  169  173  171  168  169  172   171 #>  [7900,]  150  159  162  169  173  171  168  169  172   171 #>  [7901,]  151  160  163  170  174  173  170  172  175   174 #>  [7902,]  151  160  163  170  174  173  170  172  175   174 #>  [7903,]  151  160  163  170  174  173  170  172  175   174 #>  [7904,]  151  160  163  170  174  173  170  172  175   174 #>  [7905,]  151  160  163  170  174  173  170  172  175   174 #>  [7906,]  152  161  164  171  175  174  171  173  176   175 #>  [7907,]  151  160  163  170  174  173  170  172  175   174 #>  [7908,]  152  161  164  171  175  174  171  173  176   175 #>  [7909,]  152  161  164  171  175  175  172  174  177   175 #>  [7910,]  151  160  163  170  174  173  170  172  175   174 #>  [7911,]  151  160  163  170  174  173  170  172  175   174 #>  [7912,]  152  161  164  171  175  175  172  174  177   175 #>  [7913,]  151  160  163  170  174  173  170  172  175   174 #>  [7914,]  151  160  163  170  174  173  170  172  175   174 #>  [7915,]  152  161  164  171  175  175  172  174  177   175 #>  [7916,]  151  160  163  170  174  173  170  172  175   174 #>  [7917,]  151  160  163  170  174  173  170  172  175   174 #>  [7918,]  151  160  163  170  174  173  170  172  175   174 #>  [7919,]  151  160  163  170  174  173  170  172  175   174 #>  [7920,]  151  160  163  170  174  173  170  172  175   174 #>  [7921,]  151  160  163  170  174  173  170  172  175   174 #>  [7922,]  151  160  163  170  174  173  170  172  175   174 #>  [7923,]  151  160  163  170  174  173  170  172  175   174 #>  [7924,]  151  160  163  170  174  173  170  172  175   174 #>  [7925,]  151  160  163  170  174  173  170  172  175   174 #>  [7926,]  152  161  164  171  175  174  171  173  176   175 #>  [7927,]  151  160  163  170  174  173  170  172  175   174 #>  [7928,]  151  160  163  170  174  173  170  172  175   174 #>  [7929,]  151  160  163  170  174  173  170  172  175   174 #>  [7930,]  151  160  163  170  174  173  170  172  175   174 #>  [7931,]  151  160  163  170  174  173  170  172  175   174 #>  [7932,]  151  160  163  170  174  173  170  172  175   174 #>  [7933,]  151  160  163  170  174  173  170  172  175   174 #>  [7934,]  151  160  163  170  174  173  170  172  175   174 #>  [7935,]  151  160  163  170  174  173  170  172  175   174 #>  [7936,]  151  160  163  170  174  173  170  172  175   174 #>  [7937,]  151  160  163  170  174  173  170  172  175   174 #>  [7938,]  151  160  163  170  174  173  170  172  175   174 #>  [7939,]  151  160  163  170  174  173  170  172  175   174 #>  [7940,]  151  160  163  170  174  173  170  172  175   174 #>  [7941,]  151  160  163  170  174  173  170  172  175   174 #>  [7942,]  151  160  163  170  174  173  170  172  175   174 #>  [7943,]  152  161  164  171  175  175  172  174  177   175 #>  [7944,]  151  160  163  170  174  173  170  172  175   174 #>  [7945,]  151  160  163  170  174  173  170  172  175   174 #>  [7946,]  152  161  164  171  175  175  172  174  177   175 #>  [7947,]  151  160  163  170  174  173  170  172  175   174 #>  [7948,]  151  160  163  170  174  173  170  172  175   174 #>  [7949,]  151  160  163  170  174  173  170  172  175   174 #>  [7950,]  151  160  163  170  174  173  170  172  175   174 #>  [7951,]  152  161  164  171  175  175  172  174  177   175 #>  [7952,]  151  160  163  170  174  173  170  172  175   174 #>  [7953,]  151  160  163  170  174  173  170  172  175   174 #>  [7954,]  151  160  163  170  174  173  170  172  175   174 #>  [7955,]  151  160  163  170  174  173  170  172  175   174 #>  [7956,]  152  161  164  171  175  174  171  173  176   175 #>  [7957,]  151  160  163  170  174  173  170  172  175   174 #>  [7958,]  151  160  163  170  174  173  170  172  175   174 #>  [7959,]  151  160  163  170  174  173  170  172  175   174 #>  [7960,]  151  160  163  170  174  173  170  172  175   174 #>  [7961,]  152  161  164  171  175  175  172  174  177   175 #>  [7962,]  151  160  163  170  174  173  170  172  175   174 #>  [7963,]  151  160  163  170  174  173  170  172  175   174 #>  [7964,]  152  161  164  171  175  174  171  173  176   175 #>  [7965,]  151  160  163  170  174  173  170  172  175   174 #>  [7966,]  152  161  164  171  175  175  172  174  177   175 #>  [7967,]  151  160  163  170  174  173  170  172  175   174 #>  [7968,]  151  160  163  170  174  173  170  172  175   174 #>  [7969,]  151  160  163  170  174  173  170  172  175   174 #>  [7970,]  151  160  163  170  174  173  170  172  175   174 #>  [7971,]  151  160  163  170  174  173  170  172  175   174 #>  [7972,]  151  160  163  170  174  173  170  172  175   174 #>  [7973,]  151  160  163  170  174  173  170  172  175   174 #>  [7974,]  151  160  163  170  174  173  170  172  175   174 #>  [7975,]  151  160  163  170  174  173  170  172  175   174 #>  [7976,]  152  161  164  171  175  175  172  174  177   175 #>  [7977,]  151  160  163  170  174  173  170  172  175   174 #>  [7978,]  151  160  163  170  174  173  170  172  175   174 #>  [7979,]  151  160  163  170  174  173  170  172  175   174 #>  [7980,]  151  160  163  170  174  173  170  172  175   174 #>  [7981,]  151  160  163  170  174  173  170  172  175   174 #>  [7982,]  151  160  163  170  174  173  170  172  175   174 #>  [7983,]  151  160  163  170  174  173  170  172  175   174 #>  [7984,]  151  160  163  170  174  173  170  172  175   174 #>  [7985,]  151  160  163  170  174  173  170  172  175   174 #>  [7986,]  151  160  163  170  174  173  170  172  175   174 #>  [7987,]  151  160  163  170  174  173  170  172  175   174 #>  [7988,]  151  160  163  170  174  173  170  172  175   174 #>  [7989,]  151  160  163  170  174  173  170  172  175   174 #>  [7990,]  151  160  163  170  174  173  170  172  175   174 #>  [7991,]  151  160  163  170  174  173  170  172  175   174 #>  [7992,]  151  160  163  170  174  173  170  172  175   174 #>  [7993,]  151  160  163  170  174  173  170  172  175   174 #>  [7994,]  152  161  164  171  175  174  171  173  176   175 #>  [7995,]  151  160  163  170  174  173  170  172  175   174 #>  [7996,]  151  160  163  170  174  173  170  172  175   174 #>  [7997,]  151  160  163  170  174  173  170  172  175   174 #>  [7998,]  151  160  163  170  174  173  170  172  175   174 #>  [7999,]  151  160  163  170  174  173  170  172  175   174 #>  [8000,]  151  160  163  170  174  173  170  172  175   174 #>  [8001,]  153  162  165  172  176  176  173  175  178   176 #>  [8002,]  153  162  165  172  176  176  173  175  178   176 #>  [8003,]  153  162  165  172  176  176  173  175  178   176 #>  [8004,]  154  163  166  173  177  177  174  176  179   177 #>  [8005,]  153  162  165  172  176  176  173  175  178   176 #>  [8006,]  153  162  165  172  176  176  173  175  178   176 #>  [8007,]  153  162  165  172  176  176  173  175  178   176 #>  [8008,]  153  162  165  172  176  176  173  175  178   176 #>  [8009,]  154  163  166  173  177  177  174  176  179   177 #>  [8010,]  153  162  165  172  176  176  173  175  178   176 #>  [8011,]  154  163  166  173  177  177  174  176  179   177 #>  [8012,]  154  163  166  173  177  177  174  176  179   177 #>  [8013,]  153  162  165  172  176  176  173  175  178   176 #>  [8014,]  154  163  166  173  177  177  174  176  179   177 #>  [8015,]  154  163  166  173  177  177  174  176  179   177 #>  [8016,]  153  162  165  172  176  176  173  175  178   176 #>  [8017,]  153  162  165  172  176  176  173  175  178   176 #>  [8018,]  154  163  166  173  177  177  174  176  179   177 #>  [8019,]  154  163  166  173  177  177  174  176  179   177 #>  [8020,]  153  162  165  172  176  176  173  175  178   176 #>  [8021,]  154  163  166  173  177  177  174  176  179   177 #>  [8022,]  153  162  165  172  176  176  173  175  178   176 #>  [8023,]  153  162  165  172  176  176  173  175  178   176 #>  [8024,]  153  162  165  172  176  176  173  175  178   176 #>  [8025,]  153  162  165  172  176  176  173  175  178   176 #>  [8026,]  154  163  166  173  177  177  174  176  179   177 #>  [8027,]  154  163  166  173  177  177  174  176  179   177 #>  [8028,]  153  162  165  172  176  176  173  175  178   176 #>  [8029,]  153  162  165  172  176  176  173  175  178   176 #>  [8030,]  154  163  166  173  177  177  174  176  179   177 #>  [8031,]  154  163  166  173  177  177  174  176  179   177 #>  [8032,]  153  162  165  172  176  176  173  175  178   176 #>  [8033,]  154  163  166  173  177  177  174  176  179   177 #>  [8034,]  153  162  165  172  176  176  173  175  178   176 #>  [8035,]  153  162  165  172  176  176  173  175  178   176 #>  [8036,]  154  163  166  173  177  177  174  176  179   177 #>  [8037,]  153  162  165  172  176  176  173  175  178   176 #>  [8038,]  154  163  166  173  177  177  174  176  179   177 #>  [8039,]  153  162  165  172  176  176  173  175  178   176 #>  [8040,]  153  162  165  172  176  176  173  175  178   176 #>  [8041,]  154  163  166  173  177  177  174  176  179   177 #>  [8042,]  154  163  166  173  177  177  174  176  179   177 #>  [8043,]  153  162  165  172  176  176  173  175  178   176 #>  [8044,]  153  162  165  172  176  176  173  175  178   176 #>  [8045,]  153  162  165  172  176  176  173  175  178   176 #>  [8046,]  153  162  165  172  176  176  173  175  178   176 #>  [8047,]  153  162  165  172  176  176  173  175  178   176 #>  [8048,]  154  163  166  173  177  177  174  176  179   177 #>  [8049,]  153  162  165  172  176  176  173  175  178   176 #>  [8050,]  153  162  165  172  176  176  173  175  178   176 #>  [8051,]  153  162  165  172  176  176  173  175  178   176 #>  [8052,]  153  162  165  172  176  176  173  175  178   176 #>  [8053,]  153  162  165  172  176  176  173  175  178   176 #>  [8054,]  153  162  165  172  176  176  173  175  178   176 #>  [8055,]  153  162  165  172  176  176  173  175  178   176 #>  [8056,]  153  162  165  172  176  176  173  175  178   176 #>  [8057,]  153  162  165  172  176  176  173  175  178   176 #>  [8058,]  154  163  166  173  177  177  174  176  179   177 #>  [8059,]  153  162  165  172  176  176  173  175  178   176 #>  [8060,]  154  163  166  173  177  177  174  176  179   177 #>  [8061,]  154  163  166  173  177  177  174  176  179   177 #>  [8062,]  154  163  166  173  177  177  174  176  179   177 #>  [8063,]  153  162  165  172  176  176  173  175  178   176 #>  [8064,]  153  162  165  172  176  176  173  175  178   176 #>  [8065,]  153  162  165  172  176  176  173  175  178   176 #>  [8066,]  153  162  165  172  176  176  173  175  178   176 #>  [8067,]  153  162  165  172  176  176  173  175  178   176 #>  [8068,]  154  163  166  173  177  177  174  176  179   177 #>  [8069,]  154  163  166  173  177  177  174  176  179   177 #>  [8070,]  153  162  165  172  176  176  173  175  178   176 #>  [8071,]  153  162  165  172  176  176  173  175  178   176 #>  [8072,]  153  162  165  172  176  176  173  175  178   176 #>  [8073,]  153  162  165  172  176  176  173  175  178   176 #>  [8074,]  154  163  166  173  177  177  174  176  179   177 #>  [8075,]  154  163  166  173  177  177  174  176  179   177 #>  [8076,]  153  162  165  172  176  176  173  175  178   176 #>  [8077,]  153  162  165  172  176  176  173  175  178   176 #>  [8078,]  153  162  165  172  176  176  173  175  178   176 #>  [8079,]  153  162  165  172  176  176  173  175  178   176 #>  [8080,]  153  162  165  172  176  176  173  175  178   176 #>  [8081,]  153  162  165  172  176  176  173  175  178   176 #>  [8082,]  154  163  166  173  177  177  174  176  179   177 #>  [8083,]  153  162  165  172  176  176  173  175  178   176 #>  [8084,]  153  162  165  172  176  176  173  175  178   176 #>  [8085,]  154  163  166  173  177  177  174  176  179   177 #>  [8086,]  153  162  165  172  176  176  173  175  178   176 #>  [8087,]  153  162  165  172  176  176  173  175  178   176 #>  [8088,]  153  162  165  172  176  176  173  175  178   176 #>  [8089,]  153  162  165  172  176  176  173  175  178   176 #>  [8090,]  153  162  165  172  176  176  173  175  178   176 #>  [8091,]  153  162  165  172  176  176  173  175  178   176 #>  [8092,]  154  163  166  173  177  177  174  176  179   177 #>  [8093,]  154  163  166  173  177  177  174  176  179   177 #>  [8094,]  153  162  165  172  176  176  173  175  178   176 #>  [8095,]  153  162  165  172  176  176  173  175  178   176 #>  [8096,]  154  163  166  173  177  177  174  176  179   177 #>  [8097,]  154  163  166  173  177  177  174  176  179   177 #>  [8098,]  153  162  165  172  176  176  173  175  178   176 #>  [8099,]  154  163  166  173  177  177  174  176  179   177 #>  [8100,]  153  162  165  172  176  176  173  175  178   176 #>  [8101,]  156  165  168  175  179  180  177  179  182   179 #>  [8102,]  155  164  167  174  178  178  175  177  180   178 #>  [8103,]  155  164  167  174  178  178  175  177  180   178 #>  [8104,]  156  165  168  175  179  180  177  179  182   179 #>  [8105,]  155  164  167  174  178  178  175  177  180   178 #>  [8106,]  155  164  167  174  178  178  175  177  180   178 #>  [8107,]  156  165  168  175  179  180  177  179  182   179 #>  [8108,]  156  165  168  175  179  180  177  179  182   179 #>  [8109,]  156  165  168  175  179  180  177  179  182   179 #>  [8110,]  156  165  168  175  179  180  177  179  182   179 #>  [8111,]  155  164  167  174  178  178  175  177  180   178 #>  [8112,]  155  164  167  174  178  178  175  177  180   178 #>  [8113,]  156  165  168  175  179  180  177  179  182   179 #>  [8114,]  155  164  167  174  178  178  175  177  180   178 #>  [8115,]  156  165  168  175  179  180  177  179  182   179 #>  [8116,]  156  165  168  175  179  180  177  179  182   179 #>  [8117,]  156  165  168  175  179  180  177  179  182   179 #>  [8118,]  156  165  168  175  179  180  177  179  182   179 #>  [8119,]  155  164  167  174  178  178  175  177  180   178 #>  [8120,]  155  164  167  174  178  178  175  177  180   178 #>  [8121,]  156  165  168  175  179  179  176  178  181   179 #>  [8122,]  155  164  167  174  178  178  175  177  180   178 #>  [8123,]  156  165  168  175  179  180  177  179  182   179 #>  [8124,]  155  164  167  174  178  178  175  177  180   178 #>  [8125,]  156  165  168  175  179  179  176  178  181   179 #>  [8126,]  155  164  167  174  178  178  175  177  180   178 #>  [8127,]  156  165  169  176  179  180  177  179  182   179 #>  [8128,]  156  165  168  175  179  180  177  179  182   179 #>  [8129,]  155  164  167  174  178  178  175  177  180   178 #>  [8130,]  155  164  167  174  178  178  175  177  180   178 #>  [8131,]  155  164  167  174  178  178  175  177  180   178 #>  [8132,]  155  164  167  174  178  178  175  177  180   178 #>  [8133,]  155  164  167  174  178  178  175  177  180   178 #>  [8134,]  155  164  167  174  178  178  175  177  180   178 #>  [8135,]  155  164  167  174  178  178  175  177  180   178 #>  [8136,]  155  164  167  174  178  178  175  177  180   178 #>  [8137,]  156  165  168  175  179  180  177  179  182   179 #>  [8138,]  156  165  168  175  179  180  177  179  182   179 #>  [8139,]  156  165  168  175  179  180  177  179  182   179 #>  [8140,]  155  164  167  174  178  178  175  177  180   178 #>  [8141,]  155  164  167  174  178  178  175  177  180   178 #>  [8142,]  155  164  167  174  178  178  175  177  180   178 #>  [8143,]  156  165  168  175  179  180  177  179  182   179 #>  [8144,]  156  165  168  175  179  179  176  178  181   179 #>  [8145,]  156  165  168  175  179  180  177  179  182   179 #>  [8146,]  156  165  168  175  179  180  177  179  182   179 #>  [8147,]  156  165  168  175  179  180  177  179  182   179 #>  [8148,]  155  164  167  174  178  178  175  177  180   178 #>  [8149,]  155  164  167  174  178  178  175  177  180   178 #>  [8150,]  155  164  167  174  178  178  175  177  180   178 #>  [8151,]  155  164  167  174  178  178  175  177  180   178 #>  [8152,]  155  164  167  174  178  178  175  177  180   178 #>  [8153,]  156  165  168  175  179  179  176  178  181   179 #>  [8154,]  155  164  167  174  178  178  175  177  180   178 #>  [8155,]  155  164  167  174  178  178  175  177  180   178 #>  [8156,]  156  165  168  175  179  179  176  178  181   179 #>  [8157,]  155  164  167  174  178  178  175  177  180   178 #>  [8158,]  155  164  167  174  178  178  175  177  180   178 #>  [8159,]  155  164  167  174  178  178  175  177  180   178 #>  [8160,]  155  164  167  174  178  178  175  177  180   178 #>  [8161,]  156  165  168  175  179  180  177  179  182   179 #>  [8162,]  155  164  167  174  178  178  175  177  180   178 #>  [8163,]  155  164  167  174  178  178  175  177  180   178 #>  [8164,]  156  165  169  176  179  180  177  179  182   179 #>  [8165,]  155  164  167  174  178  178  175  177  180   178 #>  [8166,]  155  164  167  174  178  178  175  177  180   178 #>  [8167,]  155  164  167  174  178  178  175  177  180   178 #>  [8168,]  155  164  167  174  178  178  175  177  180   178 #>  [8169,]  155  164  167  174  178  178  175  177  180   178 #>  [8170,]  156  165  168  175  179  180  177  179  182   179 #>  [8171,]  156  165  168  175  179  180  177  179  182   179 #>  [8172,]  156  165  168  175  179  180  177  179  182   179 #>  [8173,]  156  165  168  175  179  180  177  179  182   179 #>  [8174,]  156  165  168  175  179  179  176  178  181   179 #>  [8175,]  156  165  168  175  179  180  177  179  182   179 #>  [8176,]  156  165  168  175  179  180  177  179  182   179 #>  [8177,]  156  165  169  176  179  180  177  179  182   179 #>  [8178,]  155  164  167  174  178  178  175  177  180   178 #>  [8179,]  156  165  168  175  179  180  177  179  182   179 #>  [8180,]  155  164  167  174  178  178  175  177  180   178 #>  [8181,]  155  164  167  174  178  178  175  177  180   178 #>  [8182,]  156  165  168  175  179  180  177  179  182   179 #>  [8183,]  155  164  167  174  178  178  175  177  180   178 #>  [8184,]  156  165  168  175  179  180  177  179  182   179 #>  [8185,]  155  164  167  174  178  178  175  177  180   178 #>  [8186,]  156  165  168  175  179  179  176  178  181   179 #>  [8187,]  156  165  169  176  179  180  177  179  182   179 #>  [8188,]  156  165  168  175  179  180  177  179  182   179 #>  [8189,]  155  164  167  174  178  178  175  177  180   178 #>  [8190,]  156  165  168  175  179  180  177  179  182   179 #>  [8191,]  155  164  167  174  178  178  175  177  180   178 #>  [8192,]  155  164  167  174  178  178  175  177  180   178 #>  [8193,]  155  164  167  174  178  178  175  177  180   178 #>  [8194,]  156  165  168  175  179  180  177  179  182   179 #>  [8195,]  156  165  168  175  179  180  177  179  182   179 #>  [8196,]  156  165  168  175  179  180  177  179  182   179 #>  [8197,]  155  164  167  174  178  178  175  177  180   178 #>  [8198,]  155  164  167  174  178  178  175  177  180   178 #>  [8199,]  155  164  167  174  178  178  175  177  180   178 #>  [8200,]  156  165  169  176  179  180  177  179  182   179 #>  [8201,]  158  167  171  177  180  181  178  180  185   181 #>  [8202,]  158  167  171  177  180  181  178  180  184   181 #>  [8203,]  158  167  171  177  180  181  178  180  184   181 #>  [8204,]  157  166  170  178  181  182  179  181  183   180 #>  [8205,]  158  167  171  177  180  181  178  180  185   181 #>  [8206,]  158  167  171  177  180  181  178  180  184   181 #>  [8207,]  158  167  171  177  180  181  178  180  184   181 #>  [8208,]  157  166  170  178  181  182  179  181  183   180 #>  [8209,]  157  166  170  178  181  182  179  181  183   180 #>  [8210,]  157  166  170  178  181  182  179  181  183   180 #>  [8211,]  158  167  171  177  180  181  178  180  185   181 #>  [8212,]  158  167  171  177  180  181  178  180  184   181 #>  [8213,]  158  167  171  177  180  181  178  180  185   181 #>  [8214,]  158  167  171  177  180  181  178  180  184   181 #>  [8215,]  158  167  171  177  180  181  178  180  184   181 #>  [8216,]  158  167  171  177  180  181  178  180  184   181 #>  [8217,]  158  167  171  177  180  181  178  180  185   181 #>  [8218,]  157  166  170  179  181  182  179  181  183   180 #>  [8219,]  158  167  171  177  180  181  178  180  185   181 #>  [8220,]  157  166  170  178  181  182  179  181  183   180 #>  [8221,]  158  167  171  177  180  181  178  180  185   181 #>  [8222,]  158  167  171  177  180  181  178  180  185   181 #>  [8223,]  158  167  171  177  180  181  178  180  184   181 #>  [8224,]  158  167  171  177  180  181  178  180  185   181 #>  [8225,]  158  167  171  177  180  181  178  180  184   181 #>  [8226,]  158  167  171  177  180  181  178  180  184   181 #>  [8227,]  158  167  171  177  180  181  178  180  185   181 #>  [8228,]  158  167  171  177  180  181  178  180  185   181 #>  [8229,]  158  167  171  177  180  181  178  180  185   181 #>  [8230,]  157  166  170  178  181  182  179  181  183   180 #>  [8231,]  158  167  171  177  180  181  178  180  184   181 #>  [8232,]  158  167  171  177  180  181  178  180  184   181 #>  [8233,]  158  167  171  177  180  181  178  180  185   181 #>  [8234,]  158  167  171  177  180  181  178  180  184   181 #>  [8235,]  158  167  171  177  180  181  178  180  184   181 #>  [8236,]  158  167  171  177  180  181  178  180  185   181 #>  [8237,]  158  167  171  177  180  181  178  180  184   181 #>  [8238,]  158  167  171  177  180  181  178  180  185   181 #>  [8239,]  157  166  170  178  181  182  179  181  183   180 #>  [8240,]  158  167  171  177  180  181  178  180  184   181 #>  [8241,]  158  167  171  177  180  181  178  180  185   181 #>  [8242,]  158  167  171  177  180  181  178  180  185   181 #>  [8243,]  157  166  170  179  181  182  179  181  183   180 #>  [8244,]  158  167  171  177  180  181  178  180  184   181 #>  [8245,]  157  166  170  178  181  182  179  181  183   180 #>  [8246,]  158  167  171  177  180  181  178  180  184   181 #>  [8247,]  158  167  171  177  180  181  178  180  184   181 #>  [8248,]  158  167  171  177  180  181  178  180  184   181 #>  [8249,]  157  166  170  178  181  182  179  181  183   180 #>  [8250,]  158  167  171  177  180  181  178  180  184   181 #>  [8251,]  157  166  170  178  181  182  179  181  183   180 #>  [8252,]  158  167  171  177  180  181  178  180  184   181 #>  [8253,]  157  166  170  178  181  182  179  181  183   180 #>  [8254,]  158  167  171  177  180  181  178  180  185   181 #>  [8255,]  158  167  171  177  180  181  178  180  184   181 #>  [8256,]  157  166  170  178  181  182  179  181  183   180 #>  [8257,]  158  167  171  177  180  181  178  180  184   181 #>  [8258,]  158  167  171  177  180  181  178  180  185   181 #>  [8259,]  158  167  171  177  180  181  178  180  184   181 #>  [8260,]  157  166  170  178  181  182  179  181  183   180 #>  [8261,]  158  167  171  177  180  181  178  180  185   181 #>  [8262,]  158  167  171  177  180  181  178  180  185   181 #>  [8263,]  158  167  171  177  180  181  178  180  184   181 #>  [8264,]  157  166  170  178  181  182  179  181  183   180 #>  [8265,]  157  166  170  178  181  182  179  181  183   180 #>  [8266,]  157  166  170  179  181  182  179  181  183   180 #>  [8267,]  157  166  170  178  181  182  179  181  183   180 #>  [8268,]  158  167  171  177  180  181  178  180  184   181 #>  [8269,]  158  167  171  177  180  181  178  180  184   181 #>  [8270,]  158  167  171  177  180  181  178  180  185   181 #>  [8271,]  158  167  171  177  180  181  178  180  184   181 #>  [8272,]  158  167  171  177  180  181  178  180  184   181 #>  [8273,]  158  167  171  177  180  181  178  180  185   181 #>  [8274,]  158  167  171  177  180  181  178  180  184   181 #>  [8275,]  158  167  171  177  180  181  178  180  184   181 #>  [8276,]  158  167  171  177  180  181  178  180  184   181 #>  [8277,]  158  167  171  177  180  181  178  180  185   181 #>  [8278,]  157  166  170  178  181  182  179  181  183   180 #>  [8279,]  158  167  171  177  180  181  178  180  185   181 #>  [8280,]  158  167  171  177  180  181  178  180  184   181 #>  [8281,]  158  167  171  177  180  181  178  180  185   181 #>  [8282,]  158  167  171  177  180  181  178  180  185   181 #>  [8283,]  158  167  171  177  180  181  178  180  185   181 #>  [8284,]  158  167  171  177  180  181  178  180  185   181 #>  [8285,]  157  166  170  178  181  182  179  181  183   180 #>  [8286,]  158  167  171  177  180  181  178  180  184   181 #>  [8287,]  158  167  171  177  180  181  178  180  185   181 #>  [8288,]  158  167  171  177  180  181  178  180  184   181 #>  [8289,]  157  166  170  178  181  182  179  181  183   180 #>  [8290,]  158  167  171  177  180  181  178  180  185   181 #>  [8291,]  157  166  170  179  181  182  179  181  183   180 #>  [8292,]  158  167  171  177  180  181  178  180  184   181 #>  [8293,]  158  167  171  177  180  181  178  180  185   181 #>  [8294,]  158  167  171  177  180  181  178  180  185   181 #>  [8295,]  157  166  170  179  181  182  179  181  183   180 #>  [8296,]  158  167  171  177  180  181  178  180  184   181 #>  [8297,]  158  167  171  177  180  181  178  180  184   181 #>  [8298,]  158  167  171  177  180  181  178  180  184   181 #>  [8299,]  158  167  171  177  180  181  178  180  185   181 #>  [8300,]  158  167  171  177  180  181  178  180  185   181 #>  [8301,]  159  168  173  181  183  185  182  183  187   183 #>  [8302,]  159  168  173  181  183  184  181  183  187   183 #>  [8303,]  159  168  172  180  182  183  180  182  186   182 #>  [8304,]  159  168  172  180  182  183  180  182  186   182 #>  [8305,]  160  168  172  180  182  183  180  182  186   182 #>  [8306,]  159  168  172  180  182  183  180  182  186   182 #>  [8307,]  159  168  173  181  183  184  181  183  187   183 #>  [8308,]  159  168  173  181  183  185  182  183  187   183 #>  [8309,]  159  168  172  180  182  183  180  182  186   182 #>  [8310,]  159  168  172  180  182  183  180  182  186   182 #>  [8311,]  159  168  172  180  182  183  180  182  186   182 #>  [8312,]  159  168  173  181  183  185  182  183  187   183 #>  [8313,]  159  168  173  181  183  184  181  183  187   183 #>  [8314,]  159  168  172  180  182  183  180  182  186   182 #>  [8315,]  159  168  173  181  183  185  182  183  187   183 #>  [8316,]  159  168  173  181  183  184  181  183  187   183 #>  [8317,]  159  168  173  181  183  185  182  183  187   183 #>  [8318,]  160  168  173  181  183  184  181  183  187   183 #>  [8319,]  159  168  173  181  183  184  181  183  187   183 #>  [8320,]  159  168  173  181  183  185  182  183  187   183 #>  [8321,]  159  168  172  180  182  183  180  182  186   182 #>  [8322,]  159  168  173  181  183  184  181  183  187   183 #>  [8323,]  159  168  173  181  183  184  181  183  187   183 #>  [8324,]  159  168  172  180  182  183  180  182  186   182 #>  [8325,]  159  168  172  180  182  183  180  182  186   182 #>  [8326,]  159  168  173  181  183  185  182  183  187   183 #>  [8327,]  159  168  173  181  183  185  182  183  187   183 #>  [8328,]  159  168  172  180  182  183  180  182  186   182 #>  [8329,]  159  168  173  181  183  185  182  183  187   183 #>  [8330,]  159  168  173  181  183  184  181  183  187   183 #>  [8331,]  159  168  172  180  182  183  180  182  186   182 #>  [8332,]  159  168  172  180  182  183  180  182  186   182 #>  [8333,]  159  168  173  181  183  185  182  183  187   183 #>  [8334,]  159  168  172  180  182  183  180  182  186   182 #>  [8335,]  159  168  172  180  182  183  180  182  186   182 #>  [8336,]  159  168  173  181  183  184  181  183  187   183 #>  [8337,]  159  168  173  181  183  184  181  183  187   183 #>  [8338,]  159  168  173  181  183  185  182  183  187   183 #>  [8339,]  159  168  172  180  182  183  180  182  186   182 #>  [8340,]  159  168  172  180  182  183  180  182  186   182 #>  [8341,]  159  168  173  181  183  185  182  183  187   183 #>  [8342,]  159  168  172  180  182  183  180  182  186   182 #>  [8343,]  159  168  173  181  183  185  182  183  187   183 #>  [8344,]  159  168  173  181  183  184  181  183  187   183 #>  [8345,]  159  168  173  181  183  185  182  183  187   183 #>  [8346,]  159  168  173  181  183  185  182  183  187   183 #>  [8347,]  159  168  172  180  182  183  180  182  186   182 #>  [8348,]  159  168  172  180  182  183  180  182  186   182 #>  [8349,]  159  168  173  181  183  184  181  183  187   183 #>  [8350,]  159  168  173  181  183  185  182  183  187   183 #>  [8351,]  159  168  173  181  183  185  182  183  187   183 #>  [8352,]  159  168  172  180  182  183  180  182  186   182 #>  [8353,]  159  168  173  181  183  185  182  183  187   183 #>  [8354,]  159  168  172  180  182  183  180  182  186   182 #>  [8355,]  159  168  173  181  183  185  182  183  187   183 #>  [8356,]  159  168  173  181  183  185  182  183  187   183 #>  [8357,]  159  168  172  180  182  183  180  182  186   182 #>  [8358,]  159  168  173  181  183  185  182  183  187   183 #>  [8359,]  159  168  173  181  183  184  181  183  187   183 #>  [8360,]  159  168  173  181  183  185  182  183  187   183 #>  [8361,]  159  168  173  181  183  185  182  183  187   183 #>  [8362,]  159  168  172  180  182  183  180  182  186   182 #>  [8363,]  159  168  173  181  183  185  182  183  187   183 #>  [8364,]  159  168  173  181  183  185  182  183  187   183 #>  [8365,]  159  168  172  180  182  183  180  182  186   182 #>  [8366,]  159  168  173  181  183  185  182  183  187   183 #>  [8367,]  159  168  172  180  182  183  180  182  186   182 #>  [8368,]  159  168  173  181  183  185  182  183  187   183 #>  [8369,]  159  168  173  181  183  185  182  183  187   183 #>  [8370,]  159  168  172  180  182  183  180  182  186   182 #>  [8371,]  160  168  173  181  183  185  182  183  187   183 #>  [8372,]  159  168  172  180  182  183  180  182  186   182 #>  [8373,]  159  168  172  180  182  183  180  182  186   182 #>  [8374,]  159  168  172  180  182  183  180  182  186   182 #>  [8375,]  160  168  173  181  183  185  182  183  187   183 #>  [8376,]  159  168  172  180  182  183  180  182  186   182 #>  [8377,]  159  168  173  181  183  184  181  183  187   183 #>  [8378,]  159  168  173  181  183  185  182  183  187   183 #>  [8379,]  159  168  172  180  182  183  180  182  186   182 #>  [8380,]  159  168  173  181  183  184  181  183  187   183 #>  [8381,]  159  168  173  181  183  185  182  183  187   183 #>  [8382,]  159  168  172  180  182  183  180  182  186   182 #>  [8383,]  159  168  173  181  183  184  181  183  187   183 #>  [8384,]  159  168  173  181  183  185  182  183  187   183 #>  [8385,]  159  168  173  181  183  185  182  183  187   183 #>  [8386,]  159  168  172  180  182  183  180  182  186   182 #>  [8387,]  159  168  173  181  183  185  182  183  187   183 #>  [8388,]  159  168  172  180  182  183  180  182  186   182 #>  [8389,]  159  168  172  180  182  183  180  182  186   182 #>  [8390,]  159  168  173  181  183  185  182  183  187   183 #>  [8391,]  159  168  172  180  182  183  180  182  186   182 #>  [8392,]  159  168  173  181  183  185  182  183  187   183 #>  [8393,]  159  168  173  181  183  184  181  183  187   183 #>  [8394,]  159  168  172  180  182  183  180  182  186   182 #>  [8395,]  160  168  173  181  183  184  181  183  187   183 #>  [8396,]  159  168  173  181  183  185  182  183  187   183 #>  [8397,]  159  168  173  181  183  185  182  183  187   183 #>  [8398,]  159  168  172  180  182  183  180  182  186   182 #>  [8399,]  159  168  173  181  183  185  182  183  187   183 #>  [8400,]  160  168  173  181  183  184  181  183  187   183 #>  [8401,]  161  169  174  182  184  187  184  185  189   185 #>  [8402,]  161  169  174  182  184  186  183  184  188   184 #>  [8403,]  161  169  174  182  184  186  183  184  188   184 #>  [8404,]  161  169  174  182  184  186  183  184  188   184 #>  [8405,]  161  169  174  182  184  187  184  185  189   185 #>  [8406,]  161  169  174  182  184  187  184  185  189   185 #>  [8407,]  162  170  175  183  184  186  183  184  188   184 #>  [8408,]  161  169  174  182  184  187  184  185  189   185 #>  [8409,]  161  169  174  182  184  187  184  185  189   185 #>  [8410,]  161  169  174  182  184  186  183  184  188   184 #>  [8411,]  161  169  174  182  184  187  184  185  189   185 #>  [8412,]  161  169  174  182  184  187  184  185  189   185 #>  [8413,]  161  169  174  182  184  186  183  184  188   184 #>  [8414,]  161  169  174  182  184  187  184  185  189   185 #>  [8415,]  161  169  174  182  184  187  184  185  189   185 #>  [8416,]  162  170  175  183  184  186  183  184  188   184 #>  [8417,]  161  169  174  182  184  186  183  184  188   184 #>  [8418,]  161  169  174  182  184  186  183  184  188   184 #>  [8419,]  161  169  174  182  184  186  183  184  188   184 #>  [8420,]  162  170  175  183  184  187  184  185  189   185 #>  [8421,]  161  169  174  182  184  186  183  184  188   184 #>  [8422,]  161  169  174  182  184  186  183  184  188   184 #>  [8423,]  161  169  174  182  184  186  183  184  188   184 #>  [8424,]  162  170  175  183  184  186  183  184  188   184 #>  [8425,]  161  169  174  182  184  186  183  184  188   184 #>  [8426,]  161  169  174  182  184  187  184  185  189   185 #>  [8427,]  161  169  174  182  184  186  183  184  188   184 #>  [8428,]  162  170  175  183  184  187  184  185  189   185 #>  [8429,]  161  169  174  182  184  186  183  184  188   184 #>  [8430,]  161  169  174  182  184  186  183  184  188   184 #>  [8431,]  161  169  174  182  184  186  183  184  188   184 #>  [8432,]  161  169  174  182  184  186  183  184  188   184 #>  [8433,]  161  169  174  182  184  187  184  185  189   185 #>  [8434,]  161  169  174  182  184  186  183  184  188   184 #>  [8435,]  161  169  174  182  184  186  183  184  188   184 #>  [8436,]  161  169  174  182  184  186  183  184  188   184 #>  [8437,]  161  169  174  182  184  186  183  184  188   184 #>  [8438,]  161  169  174  182  184  187  184  185  189   185 #>  [8439,]  161  169  174  182  184  186  183  184  188   184 #>  [8440,]  161  169  174  182  184  186  183  184  188   184 #>  [8441,]  161  169  174  182  184  187  184  185  189   185 #>  [8442,]  161  169  174  182  184  187  184  185  189   185 #>  [8443,]  161  169  174  182  184  187  184  185  189   185 #>  [8444,]  161  169  174  182  184  186  183  184  188   184 #>  [8445,]  161  169  174  182  184  187  184  185  189   185 #>  [8446,]  161  169  174  182  184  187  184  185  189   185 #>  [8447,]  161  169  174  182  184  186  183  184  188   184 #>  [8448,]  161  169  174  182  184  186  183  184  188   184 #>  [8449,]  161  169  174  182  184  186  183  184  188   184 #>  [8450,]  162  170  175  183  184  187  184  185  189   185 #>  [8451,]  161  169  174  182  184  187  184  185  189   185 #>  [8452,]  162  170  175  183  184  187  184  185  189   185 #>  [8453,]  161  169  174  182  184  187  184  185  189   185 #>  [8454,]  161  169  174  182  184  186  183  184  188   184 #>  [8455,]  161  169  174  182  184  187  184  185  189   185 #>  [8456,]  161  169  174  182  184  187  184  185  189   185 #>  [8457,]  161  169  174  182  184  187  184  185  189   185 #>  [8458,]  161  169  174  182  184  187  184  185  189   185 #>  [8459,]  161  169  174  182  184  186  183  184  188   184 #>  [8460,]  161  169  174  182  184  187  184  185  189   185 #>  [8461,]  161  169  174  182  184  187  184  185  189   185 #>  [8462,]  161  169  174  182  184  186  183  184  188   184 #>  [8463,]  161  169  174  182  184  187  184  185  189   185 #>  [8464,]  161  169  174  182  184  187  184  185  189   185 #>  [8465,]  161  169  174  182  184  187  184  185  189   185 #>  [8466,]  161  169  174  182  184  187  184  185  189   185 #>  [8467,]  161  169  174  182  184  187  184  185  189   185 #>  [8468,]  161  169  174  182  184  187  184  185  189   185 #>  [8469,]  161  169  174  182  184  186  183  184  188   184 #>  [8470,]  161  169  174  182  184  186  183  184  188   184 #>  [8471,]  161  169  174  182  184  187  184  185  189   185 #>  [8472,]  161  169  174  182  184  187  184  185  189   185 #>  [8473,]  161  169  174  182  184  187  184  185  189   185 #>  [8474,]  161  169  174  182  184  187  184  185  189   185 #>  [8475,]  161  169  174  182  184  187  184  185  189   185 #>  [8476,]  162  170  175  183  184  187  184  185  189   185 #>  [8477,]  161  169  174  182  184  186  183  184  188   184 #>  [8478,]  161  169  174  182  184  187  184  185  189   185 #>  [8479,]  161  169  174  182  184  186  183  184  188   184 #>  [8480,]  161  169  174  182  184  186  183  184  188   184 #>  [8481,]  161  169  174  182  184  187  184  185  189   185 #>  [8482,]  161  169  174  182  184  186  183  184  188   184 #>  [8483,]  161  169  174  182  184  186  183  184  188   184 #>  [8484,]  161  169  174  182  184  187  184  185  189   185 #>  [8485,]  161  169  174  182  184  186  183  184  188   184 #>  [8486,]  162  170  175  183  184  186  183  184  188   184 #>  [8487,]  161  169  174  182  184  187  184  185  189   185 #>  [8488,]  161  169  174  182  184  187  184  185  189   185 #>  [8489,]  161  169  174  182  184  186  183  184  188   184 #>  [8490,]  161  169  174  182  184  187  184  185  189   185 #>  [8491,]  162  170  175  183  184  187  184  185  189   185 #>  [8492,]  161  169  174  182  184  187  184  185  189   185 #>  [8493,]  161  169  174  182  184  186  183  184  188   184 #>  [8494,]  161  169  174  182  184  187  184  185  189   185 #>  [8495,]  161  169  174  182  184  186  183  184  188   184 #>  [8496,]  161  169  174  182  184  187  184  185  189   185 #>  [8497,]  161  169  174  182  184  187  184  185  189   185 #>  [8498,]  161  169  174  182  184  186  183  184  188   184 #>  [8499,]  161  169  174  182  184  186  183  184  188   184 #>  [8500,]  161  169  174  182  184  186  183  184  188   184 #>  [8501,]  163  171  176  184  185  188  185  187  190   187 #>  [8502,]  163  171  176  184  185  188  185  187  190   187 #>  [8503,]  163  171  176  184  185  188  185  187  190   186 #>  [8504,]  164  172  177  185  186  189  185  187  190   186 #>  [8505,]  163  171  176  184  185  188  185  187  190   187 #>  [8506,]  163  171  176  184  185  188  185  187  190   187 #>  [8507,]  163  171  176  184  185  188  185  187  190   186 #>  [8508,]  163  171  176  184  185  188  185  187  190   186 #>  [8509,]  163  171  176  184  185  188  185  187  190   187 #>  [8510,]  163  171  176  184  185  188  185  187  190   187 #>  [8511,]  164  172  177  185  186  189  185  187  190   187 #>  [8512,]  164  172  177  185  186  189  185  187  190   186 #>  [8513,]  163  171  176  184  185  188  185  187  190   187 #>  [8514,]  164  172  177  185  186  189  185  187  190   187 #>  [8515,]  164  172  177  185  186  189  185  186  190   187 #>  [8516,]  163  171  176  184  185  188  185  187  190   187 #>  [8517,]  163  171  176  184  185  188  185  187  190   187 #>  [8518,]  163  171  176  184  185  188  185  187  190   187 #>  [8519,]  164  172  177  185  186  189  185  187  190   187 #>  [8520,]  163  171  176  184  185  188  185  187  190   187 #>  [8521,]  164  172  177  185  186  189  185  187  190   187 #>  [8522,]  163  171  176  184  185  188  185  187  190   187 #>  [8523,]  163  171  176  184  185  188  185  187  190   186 #>  [8524,]  163  171  176  184  185  188  185  187  190   187 #>  [8525,]  163  171  176  184  185  188  185  187  190   186 #>  [8526,]  163  171  176  184  185  188  185  187  190   187 #>  [8527,]  164  172  177  185  186  189  185  187  190   187 #>  [8528,]  163  171  176  184  185  188  185  187  190   187 #>  [8529,]  163  171  176  184  185  188  185  187  190   187 #>  [8530,]  163  171  176  184  185  188  185  187  190   187 #>  [8531,]  163  171  176  184  185  188  185  186  190   186 #>  [8532,]  163  171  176  184  185  188  185  187  190   186 #>  [8533,]  163  171  176  184  185  188  185  187  190   187 #>  [8534,]  163  171  176  184  185  188  185  186  190   187 #>  [8535,]  163  171  176  184  185  188  185  187  190   187 #>  [8536,]  163  171  176  184  185  188  185  187  190   187 #>  [8537,]  163  171  176  184  185  188  185  187  190   186 #>  [8538,]  164  172  177  185  186  189  185  187  190   187 #>  [8539,]  163  171  176  184  185  188  185  187  190   187 #>  [8540,]  163  171  176  184  185  188  185  187  190   186 #>  [8541,]  164  172  177  185  186  189  185  187  190   187 #>  [8542,]  164  172  177  185  186  189  185  186  190   187 #>  [8543,]  163  171  176  184  185  188  185  186  190   187 #>  [8544,]  163  171  176  184  185  188  185  187  190   187 #>  [8545,]  163  171  176  184  185  188  185  187  190   187 #>  [8546,]  163  171  176  184  185  188  185  187  190   186 #>  [8547,]  163  171  176  184  185  188  185  187  190   186 #>  [8548,]  164  172  177  185  186  189  185  187  190   187 #>  [8549,]  163  171  176  184  185  188  185  187  190   187 #>  [8550,]  163  171  176  184  185  188  185  187  190   187 #>  [8551,]  163  171  176  184  185  188  185  187  190   187 #>  [8552,]  163  171  176  184  185  188  185  187  190   186 #>  [8553,]  163  171  176  184  185  188  185  187  190   187 #>  [8554,]  163  171  176  184  185  188  185  187  190   187 #>  [8555,]  163  171  176  184  185  188  185  187  190   186 #>  [8556,]  163  171  176  184  185  188  185  187  190   187 #>  [8557,]  163  171  176  184  185  188  185  187  190   186 #>  [8558,]  163  171  176  184  185  188  185  187  190   187 #>  [8559,]  163  171  176  184  185  188  185  187  190   186 #>  [8560,]  163  171  176  184  185  188  185  187  190   186 #>  [8561,]  164  172  177  185  186  189  185  187  190   187 #>  [8562,]  163  171  176  184  185  188  185  187  190   187 #>  [8563,]  163  171  176  184  185  188  185  186  190   187 #>  [8564,]  163  171  176  184  185  188  185  187  190   187 #>  [8565,]  163  171  176  184  185  188  185  187  190   187 #>  [8566,]  163  171  176  184  185  188  185  187  190   187 #>  [8567,]  163  171  176  184  185  188  185  187  190   186 #>  [8568,]  163  171  176  184  185  188  185  187  190   186 #>  [8569,]  164  172  177  185  186  189  185  187  190   187 #>  [8570,]  163  171  176  184  185  188  185  187  190   187 #>  [8571,]  163  171  176  184  185  188  185  187  190   187 #>  [8572,]  163  171  176  184  185  188  185  187  190   186 #>  [8573,]  163  171  176  184  185  188  185  187  190   187 #>  [8574,]  164  172  177  185  186  189  185  187  190   186 #>  [8575,]  164  172  177  185  186  189  185  186  190   187 #>  [8576,]  163  171  176  184  185  188  185  187  190   186 #>  [8577,]  163  171  176  184  185  188  185  187  190   187 #>  [8578,]  163  171  176  184  185  188  185  187  190   186 #>  [8579,]  163  171  176  184  185  188  185  187  190   187 #>  [8580,]  163  171  176  184  185  188  185  187  190   186 #>  [8581,]  163  171  176  184  185  188  185  187  190   187 #>  [8582,]  164  172  177  185  186  189  185  187  190   187 #>  [8583,]  163  171  176  184  185  188  185  187  190   187 #>  [8584,]  163  171  176  184  185  188  185  187  190   187 #>  [8585,]  163  171  176  184  185  188  185  187  190   187 #>  [8586,]  163  171  176  184  185  188  185  187  190   186 #>  [8587,]  163  171  176  184  185  188  185  187  190   187 #>  [8588,]  163  171  176  184  185  188  185  187  190   187 #>  [8589,]  163  171  176  184  185  188  185  187  190   187 #>  [8590,]  163  171  176  184  185  188  185  187  190   187 #>  [8591,]  163  171  176  184  185  188  185  187  190   187 #>  [8592,]  164  172  177  185  186  189  185  187  190   186 #>  [8593,]  164  172  177  185  186  189  185  187  190   187 #>  [8594,]  163  171  176  184  185  188  185  187  190   187 #>  [8595,]  163  171  176  184  185  188  185  187  190   187 #>  [8596,]  164  172  177  185  186  189  185  187  190   186 #>  [8597,]  164  172  177  185  186  189  185  187  190   186 #>  [8598,]  163  171  176  184  185  188  185  187  190   186 #>  [8599,]  163  171  176  184  185  188  185  187  190   187 #>  [8600,]  163  171  176  184  185  188  185  187  190   187 #>  [8601,]  166  173  178  188  189  191  187  189  192   189 #>  [8602,]  166  173  178  188  189  191  187  189  192   189 #>  [8603,]  165  174  179  186  187  190  186  188  191   188 #>  [8604,]  166  173  178  187  188  191  187  189  192   189 #>  [8605,]  166  173  178  188  189  191  187  189  192   189 #>  [8606,]  166  173  178  188  189  191  187  189  192   189 #>  [8607,]  166  173  178  187  188  191  187  189  192   189 #>  [8608,]  166  173  178  187  188  191  187  189  192   189 #>  [8609,]  166  173  178  188  189  191  187  189  192   189 #>  [8610,]  166  173  178  188  189  191  187  189  192   189 #>  [8611,]  165  174  179  186  187  190  186  188  191   188 #>  [8612,]  165  175  179  186  187  190  186  188  191   188 #>  [8613,]  166  173  178  188  189  191  187  189  192   189 #>  [8614,]  165  175  179  186  187  190  186  188  191   188 #>  [8615,]  166  173  178  188  189  191  187  189  192   189 #>  [8616,]  166  173  178  188  189  191  187  189  192   189 #>  [8617,]  166  173  178  188  189  191  187  189  192   189 #>  [8618,]  166  173  178  188  189  191  187  189  192   189 #>  [8619,]  166  173  178  188  189  191  187  189  192   189 #>  [8620,]  165  174  179  186  187  190  186  188  191   188 #>  [8621,]  166  173  178  188  189  191  187  189  192   189 #>  [8622,]  165  174  179  186  187  190  186  188  191   188 #>  [8623,]  166  173  178  187  188  191  187  189  192   189 #>  [8624,]  166  173  178  188  189  191  187  189  192   189 #>  [8625,]  166  173  178  187  188  191  187  189  192   189 #>  [8626,]  165  174  179  186  187  190  186  188  191   188 #>  [8627,]  166  173  178  188  189  191  187  189  192   189 #>  [8628,]  166  173  178  188  189  191  187  189  192   189 #>  [8629,]  165  174  179  186  187  190  186  188  191   188 #>  [8630,]  166  173  178  188  189  191  187  189  192   189 #>  [8631,]  166  173  178  187  188  191  187  189  192   189 #>  [8632,]  165  174  179  186  187  190  186  188  191   188 #>  [8633,]  166  173  178  188  189  191  187  189  192   189 #>  [8634,]  166  173  178  188  189  191  187  189  192   189 #>  [8635,]  166  173  178  188  189  191  187  189  192   189 #>  [8636,]  165  174  179  186  187  190  186  188  191   188 #>  [8637,]  166  173  178  187  188  191  187  189  192   189 #>  [8638,]  166  173  178  188  189  191  187  189  192   189 #>  [8639,]  166  173  178  188  189  191  187  189  192   189 #>  [8640,]  165  174  179  186  187  190  186  188  191   188 #>  [8641,]  165  175  179  186  187  190  186  188  191   188 #>  [8642,]  165  175  179  186  187  190  186  188  191   188 #>  [8643,]  166  173  178  188  189  191  187  189  192   189 #>  [8644,]  166  173  178  188  189  191  187  189  192   189 #>  [8645,]  166  173  178  188  189  191  187  189  192   189 #>  [8646,]  166  173  178  187  188  191  187  189  192   189 #>  [8647,]  166  173  178  187  188  191  187  189  192   189 #>  [8648,]  165  175  179  186  187  190  186  188  191   188 #>  [8649,]  166  173  178  188  189  191  187  189  192   189 #>  [8650,]  166  173  178  188  189  191  187  189  192   189 #>  [8651,]  165  174  179  186  187  190  186  188  191   188 #>  [8652,]  166  173  178  187  188  191  187  189  192   189 #>  [8653,]  166  173  178  188  189  191  187  189  192   189 #>  [8654,]  165  174  179  186  187  190  186  188  191   188 #>  [8655,]  166  173  178  187  188  191  187  189  192   189 #>  [8656,]  166  173  178  188  189  191  187  189  192   189 #>  [8657,]  166  173  178  187  188  191  187  189  192   189 #>  [8658,]  166  173  178  188  189  191  187  189  192   189 #>  [8659,]  166  173  178  187  188  191  187  189  192   189 #>  [8660,]  165  174  179  186  187  190  186  188  191   188 #>  [8661,]  166  173  178  188  189  191  187  189  192   189 #>  [8662,]  165  174  179  186  187  190  186  188  191   188 #>  [8663,]  166  173  178  188  189  191  187  189  192   189 #>  [8664,]  166  173  178  188  189  191  187  189  192   189 #>  [8665,]  166  173  178  188  189  191  187  189  192   189 #>  [8666,]  165  174  179  186  187  190  186  188  191   188 #>  [8667,]  166  173  178  188  189  191  187  189  192   189 #>  [8668,]  165  174  179  186  187  190  186  188  191   188 #>  [8669,]  165  175  179  186  187  190  186  188  191   188 #>  [8670,]  166  173  178  188  189  191  187  189  192   189 #>  [8671,]  166  173  178  188  189  191  187  189  192   189 #>  [8672,]  166  173  178  188  189  191  187  189  192   189 #>  [8673,]  166  173  178  188  189  191  187  189  192   189 #>  [8674,]  166  173  178  187  188  191  187  189  192   189 #>  [8675,]  166  173  178  188  189  191  187  189  192   189 #>  [8676,]  166  173  178  188  189  191  187  189  192   189 #>  [8677,]  166  173  178  188  189  191  187  189  192   189 #>  [8678,]  166  173  178  188  189  191  187  189  192   189 #>  [8679,]  166  173  178  188  189  191  187  189  192   189 #>  [8680,]  165  174  179  186  187  190  186  188  191   188 #>  [8681,]  165  174  179  186  187  190  186  188  191   188 #>  [8682,]  166  173  178  188  189  191  187  189  192   189 #>  [8683,]  165  174  179  186  187  190  186  188  191   188 #>  [8684,]  166  173  178  188  189  191  187  189  192   189 #>  [8685,]  166  173  178  188  189  191  187  189  192   189 #>  [8686,]  166  173  178  187  188  191  187  189  192   189 #>  [8687,]  166  173  178  188  189  191  187  189  192   189 #>  [8688,]  166  173  178  188  189  191  187  189  192   189 #>  [8689,]  165  174  179  186  187  190  186  188  191   188 #>  [8690,]  166  173  178  188  189  191  187  189  192   189 #>  [8691,]  165  174  179  186  187  190  186  188  191   188 #>  [8692,]  166  173  178  188  189  191  187  189  192   189 #>  [8693,]  166  173  178  188  189  191  187  189  192   189 #>  [8694,]  166  173  178  188  189  191  187  189  192   189 #>  [8695,]  166  173  178  188  189  191  187  189  192   189 #>  [8696,]  166  173  178  187  188  191  187  189  192   189 #>  [8697,]  166  173  178  187  188  191  187  189  192   189 #>  [8698,]  166  173  178  187  188  191  187  189  192   189 #>  [8699,]  166  173  178  188  189  191  187  189  192   189 #>  [8700,]  166  173  178  188  189  191  187  189  192   189 #>  [8701,]  168  177  181  190  191  193  189  191  194   191 #>  [8702,]  168  177  181  190  191  194  190  191  194   191 #>  [8703,]  167  176  180  189  190  192  188  190  193   190 #>  [8704,]  168  177  181  190  191  194  190  191  194   191 #>  [8705,]  168  177  181  190  191  194  190  191  194   191 #>  [8706,]  168  177  181  190  191  193  189  191  194   191 #>  [8707,]  168  177  181  190  191  194  190  191  194   191 #>  [8708,]  168  177  181  190  191  194  190  191  194   191 #>  [8709,]  168  177  181  190  191  194  190  191  194   191 #>  [8710,]  168  177  181  190  191  194  190  191  194   191 #>  [8711,]  167  176  180  189  190  192  188  190  193   190 #>  [8712,]  167  176  180  189  190  192  188  190  193   190 #>  [8713,]  168  177  181  190  191  194  190  191  194   191 #>  [8714,]  167  176  180  189  190  192  188  190  193   190 #>  [8715,]  168  177  181  190  191  194  190  191  194   191 #>  [8716,]  168  177  181  190  191  193  189  191  194   191 #>  [8717,]  168  177  181  190  191  194  190  191  194   191 #>  [8718,]  168  177  181  190  191  194  190  191  194   191 #>  [8719,]  167  176  180  189  190  192  188  190  193   190 #>  [8720,]  167  176  180  189  190  192  188  190  193   190 #>  [8721,]  168  177  181  190  191  194  190  191  194   191 #>  [8722,]  167  176  180  189  190  192  188  190  193   190 #>  [8723,]  168  177  181  190  191  194  190  191  194   191 #>  [8724,]  168  177  181  190  191  194  190  191  194   191 #>  [8725,]  168  177  181  190  191  194  190  191  194   191 #>  [8726,]  167  176  180  189  190  192  188  190  193   190 #>  [8727,]  168  177  181  190  191  194  190  191  194   191 #>  [8728,]  168  177  181  190  191  193  189  191  194   191 #>  [8729,]  167  176  180  189  190  192  188  190  193   190 #>  [8730,]  167  176  180  189  190  192  188  190  193   190 #>  [8731,]  168  177  181  190  191  194  190  191  194   191 #>  [8732,]  167  176  180  189  190  192  188  190  193   190 #>  [8733,]  168  177  181  190  191  194  190  191  194   191 #>  [8734,]  167  176  180  189  190  192  188  190  193   190 #>  [8735,]  168  177  181  190  191  193  189  191  194   191 #>  [8736,]  167  176  180  189  190  192  188  190  193   190 #>  [8737,]  168  177  181  190  191  193  189  191  194   191 #>  [8738,]  168  177  181  190  191  193  189  191  194   191 #>  [8739,]  168  177  181  190  191  194  190  191  194   191 #>  [8740,]  167  176  180  189  190  192  188  190  193   190 #>  [8741,]  167  176  180  189  190  192  188  190  193   190 #>  [8742,]  167  176  180  189  190  192  188  190  193   190 #>  [8743,]  168  177  181  190  191  194  190  191  194   191 #>  [8744,]  168  177  181  190  191  194  190  191  194   191 #>  [8745,]  168  177  181  190  191  193  189  191  194   191 #>  [8746,]  168  177  181  190  191  194  190  191  194   191 #>  [8747,]  168  177  181  190  191  194  190  191  194   191 #>  [8748,]  167  176  180  189  190  192  188  190  193   190 #>  [8749,]  168  177  181  190  191  193  189  191  194   191 #>  [8750,]  168  177  181  190  191  194  190  191  194   191 #>  [8751,]  167  176  180  189  190  192  188  190  193   190 #>  [8752,]  168  177  181  190  191  193  189  191  194   191 #>  [8753,]  168  177  181  190  191  194  190  191  194   191 #>  [8754,]  167  176  180  189  190  192  188  190  193   190 #>  [8755,]  168  177  181  190  191  194  190  191  194   191 #>  [8756,]  168  177  181  190  191  194  190  191  194   191 #>  [8757,]  168  177  181  190  191  194  190  191  194   191 #>  [8758,]  168  177  181  190  191  194  190  191  194   191 #>  [8759,]  168  177  181  190  191  193  189  191  194   191 #>  [8760,]  167  176  180  189  190  192  188  190  193   190 #>  [8761,]  168  177  181  190  191  194  190  191  194   191 #>  [8762,]  167  176  180  189  190  192  188  190  193   190 #>  [8763,]  167  176  180  189  190  192  188  190  193   190 #>  [8764,]  168  177  181  190  191  193  189  191  194   191 #>  [8765,]  168  177  181  190  191  193  189  191  194   191 #>  [8766,]  167  176  180  189  190  192  188  190  193   190 #>  [8767,]  168  177  181  190  191  194  190  191  194   191 #>  [8768,]  167  176  180  189  190  192  188  190  193   190 #>  [8769,]  167  176  180  189  190  192  188  190  193   190 #>  [8770,]  168  177  181  190  191  194  190  191  194   191 #>  [8771,]  168  177  181  190  191  194  190  191  194   191 #>  [8772,]  168  177  181  190  191  193  189  191  194   191 #>  [8773,]  168  177  181  190  191  193  189  191  194   191 #>  [8774,]  168  177  181  190  191  194  190  191  194   191 #>  [8775,]  168  177  181  190  191  194  190  191  194   191 #>  [8776,]  168  177  181  190  191  194  190  191  194   191 #>  [8777,]  168  177  181  190  191  193  189  191  194   191 #>  [8778,]  168  177  181  190  191  194  190  191  194   191 #>  [8779,]  168  177  181  190  191  193  189  191  194   191 #>  [8780,]  167  176  180  189  190  192  188  190  193   190 #>  [8781,]  167  176  180  189  190  192  188  190  193   190 #>  [8782,]  168  177  181  190  191  194  190  191  194   191 #>  [8783,]  167  176  180  189  190  192  188  190  193   190 #>  [8784,]  168  177  181  190  191  194  190  191  194   191 #>  [8785,]  168  177  181  190  191  194  190  191  194   191 #>  [8786,]  168  177  181  190  191  194  190  191  194   191 #>  [8787,]  168  177  181  190  191  194  190  191  194   191 #>  [8788,]  168  177  181  190  191  194  190  191  194   191 #>  [8789,]  167  176  180  189  190  192  188  190  193   190 #>  [8790,]  168  177  181  190  191  194  190  191  194   191 #>  [8791,]  167  176  180  189  190  192  188  190  193   190 #>  [8792,]  168  177  181  190  191  194  190  191  194   191 #>  [8793,]  168  177  181  190  191  194  190  191  194   191 #>  [8794,]  168  177  181  190  191  193  189  191  194   191 #>  [8795,]  168  177  181  190  191  194  190  191  194   191 #>  [8796,]  168  177  181  190  191  193  189  191  194   191 #>  [8797,]  168  177  181  190  191  193  189  191  194   191 #>  [8798,]  168  177  181  190  191  194  190  191  194   191 #>  [8799,]  168  177  181  190  191  194  190  191  194   191 #>  [8800,]  168  177  181  190  191  193  189  191  194   191 #>  [8801,]  169  178  182  191  192  195  191  192  195   192 #>  [8802,]  169  178  182  191  192  195  191  192  196   193 #>  [8803,]  169  178  182  191  192  195  191  192  195   192 #>  [8804,]  170  179  183  192  193  196  192  192  196   193 #>  [8805,]  169  178  182  191  192  195  191  192  196   193 #>  [8806,]  169  178  182  191  192  195  191  192  195   192 #>  [8807,]  170  179  183  192  193  196  192  192  196   193 #>  [8808,]  169  178  182  191  192  195  191  192  196   193 #>  [8809,]  169  178  182  191  192  195  191  192  196   193 #>  [8810,]  170  179  183  192  193  196  192  192  196   193 #>  [8811,]  169  178  182  191  192  195  191  192  195   192 #>  [8812,]  169  178  182  191  192  195  191  192  196   193 #>  [8813,]  169  178  182  191  192  195  191  192  196   193 #>  [8814,]  169  178  182  191  192  195  191  192  195   192 #>  [8815,]  169  178  182  191  192  195  191  192  196   193 #>  [8816,]  170  179  183  192  193  196  192  192  195   192 #>  [8817,]  169  178  182  191  192  195  191  192  196   193 #>  [8818,]  169  178  182  191  192  195  191  192  196   193 #>  [8819,]  169  178  182  191  192  195  191  192  195   192 #>  [8820,]  170  179  183  192  193  196  192  192  196   193 #>  [8821,]  169  178  182  191  192  195  191  192  196   193 #>  [8822,]  169  178  182  191  192  195  191  192  196   193 #>  [8823,]  169  178  182  191  192  195  191  192  196   193 #>  [8824,]  170  179  183  192  193  196  192  192  196   193 #>  [8825,]  170  179  183  192  193  196  192  192  196   193 #>  [8826,]  169  178  182  191  192  195  191  192  195   192 #>  [8827,]  169  178  182  191  192  195  191  192  196   193 #>  [8828,]  170  179  183  192  193  196  192  192  195   192 #>  [8829,]  169  178  182  191  192  195  191  192  196   193 #>  [8830,]  169  178  182  191  192  195  191  192  196   193 #>  [8831,]  169  178  182  191  192  195  191  192  196   193 #>  [8832,]  169  178  182  191  192  195  191  192  196   193 #>  [8833,]  169  178  182  191  192  195  191  192  196   193 #>  [8834,]  169  178  182  191  192  195  191  192  195   192 #>  [8835,]  169  178  182  191  192  195  191  192  195   192 #>  [8836,]  170  179  183  192  193  196  192  192  196   193 #>  [8837,]  169  178  182  191  192  195  191  192  195   192 #>  [8838,]  169  178  182  191  192  195  191  192  195   192 #>  [8839,]  170  179  183  192  193  196  192  192  196   193 #>  [8840,]  169  178  182  191  192  195  191  192  196   193 #>  [8841,]  169  178  182  191  192  195  191  192  196   193 #>  [8842,]  169  178  182  191  192  195  191  192  195   192 #>  [8843,]  169  178  182  191  192  195  191  192  196   193 #>  [8844,]  169  178  182  191  192  195  191  192  196   193 #>  [8845,]  169  178  182  191  192  195  191  192  195   192 #>  [8846,]  169  178  182  191  192  195  191  192  196   193 #>  [8847,]  169  178  182  191  192  195  191  192  196   193 #>  [8848,]  169  178  182  191  192  195  191  192  196   193 #>  [8849,]  169  178  182  191  192  195  191  192  195   192 #>  [8850,]  170  179  183  192  193  196  192  192  196   193 #>  [8851,]  169  178  182  191  192  195  191  192  196   193 #>  [8852,]  170  179  183  192  193  196  192  192  195   192 #>  [8853,]  169  178  182  191  192  195  191  192  196   193 #>  [8854,]  170  179  183  192  193  196  192  192  196   193 #>  [8855,]  169  178  182  191  192  195  191  192  196   193 #>  [8856,]  169  178  182  191  192  195  191  192  196   193 #>  [8857,]  170  179  183  192  193  196  192  192  196   193 #>  [8858,]  169  178  182  191  192  195  191  192  196   193 #>  [8859,]  169  178  182  191  192  195  191  192  195   192 #>  [8860,]  169  178  182  191  192  195  191  192  196   193 #>  [8861,]  169  178  182  191  192  195  191  192  196   193 #>  [8862,]  169  178  182  191  192  195  191  192  196   193 #>  [8863,]  169  178  182  191  192  195  191  192  196   193 #>  [8864,]  169  178  182  191  192  195  191  192  195   192 #>  [8865,]  169  178  182  191  192  195  191  192  195   192 #>  [8866,]  169  178  182  191  192  195  191  192  196   193 #>  [8867,]  169  178  182  191  192  195  191  192  196   193 #>  [8868,]  169  178  182  191  192  195  191  192  195   192 #>  [8869,]  169  178  182  191  192  195  191  192  196   193 #>  [8870,]  169  178  182  191  192  195  191  192  196   193 #>  [8871,]  169  178  182  191  192  195  191  192  196   193 #>  [8872,]  169  178  182  191  192  195  191  192  195   192 #>  [8873,]  170  179  183  192  193  196  192  192  195   192 #>  [8874,]  169  178  182  191  192  195  191  192  196   193 #>  [8875,]  169  178  182  191  192  195  191  192  196   193 #>  [8876,]  170  179  183  192  193  196  192  192  196   193 #>  [8877,]  169  178  182  191  192  195  191  192  195   192 #>  [8878,]  169  178  182  191  192  195  191  192  196   193 #>  [8879,]  169  178  182  191  192  195  191  192  195   192 #>  [8880,]  169  178  182  191  192  195  191  192  196   193 #>  [8881,]  169  178  182  191  192  195  191  192  196   193 #>  [8882,]  169  178  182  191  192  195  191  192  196   193 #>  [8883,]  169  178  182  191  192  195  191  192  196   193 #>  [8884,]  169  178  182  191  192  195  191  192  196   193 #>  [8885,]  169  178  182  191  192  195  191  192  196   193 #>  [8886,]  170  179  183  192  193  196  192  192  196   193 #>  [8887,]  169  178  182  191  192  195  191  192  196   193 #>  [8888,]  169  178  182  191  192  195  191  192  196   193 #>  [8889,]  169  178  182  191  192  195  191  192  195   192 #>  [8890,]  169  178  182  191  192  195  191  192  196   193 #>  [8891,]  170  179  183  192  193  196  192  192  196   193 #>  [8892,]  169  178  182  191  192  195  191  192  196   193 #>  [8893,]  169  178  182  191  192  195  191  192  196   193 #>  [8894,]  169  178  182  191  192  195  191  192  195   192 #>  [8895,]  169  178  182  191  192  195  191  192  196   193 #>  [8896,]  169  178  182  191  192  195  191  192  195   192 #>  [8897,]  169  178  182  191  192  195  191  192  195   192 #>  [8898,]  169  178  182  191  192  195  191  192  196   193 #>  [8899,]  169  178  182  191  192  195  191  192  196   193 #>  [8900,]  169  178  182  191  192  195  191  192  195   192 #>  [8901,]  171  180  184  193  194  197  193  195  199   196 #>  [8902,]  171  180  184  193  194  197  193  194  198   195 #>  [8903,]  172  181  185  194  196  199  194  193  197   194 #>  [8904,]  171  180  184  193  194  197  193  195  199   196 #>  [8905,]  171  180  184  193  194  197  193  194  198   195 #>  [8906,]  172  181  185  194  196  199  194  193  197   194 #>  [8907,]  171  180  184  193  194  197  193  194  198   195 #>  [8908,]  171  180  184  193  194  197  193  194  198   195 #>  [8909,]  171  180  184  193  194  197  193  195  199   196 #>  [8910,]  171  180  184  193  194  197  193  195  199   196 #>  [8911,]  171  180  184  193  194  197  193  195  199   196 #>  [8912,]  172  181  185  194  195  198  194  193  197   194 #>  [8913,]  171  180  184  193  194  197  193  194  198   195 #>  [8914,]  171  180  184  193  194  197  193  195  199   196 #>  [8915,]  171  180  184  193  194  197  193  195  199   196 #>  [8916,]  171  180  184  193  194  197  193  194  198   195 #>  [8917,]  171  180  184  193  194  197  193  194  198   195 #>  [8918,]  171  180  184  193  194  197  193  195  199   196 #>  [8919,]  172  181  185  194  195  198  194  193  197   194 #>  [8920,]  172  181  185  194  195  198  194  193  197   194 #>  [8921,]  171  180  184  193  194  197  193  195  199   196 #>  [8922,]  171  180  184  193  194  197  193  194  198   195 #>  [8923,]  171  180  184  193  194  197  193  195  199   196 #>  [8924,]  171  180  184  193  194  197  193  194  198   195 #>  [8925,]  172  181  185  194  195  198  194  193  197   194 #>  [8926,]  171  180  184  193  194  197  193  195  199   196 #>  [8927,]  171  180  184  193  194  197  193  195  199   196 #>  [8928,]  172  181  185  194  195  198  194  193  197   194 #>  [8929,]  171  180  184  193  194  197  193  194  198   195 #>  [8930,]  171  180  184  193  194  197  193  195  199   196 #>  [8931,]  171  180  184  193  194  197  193  195  199   196 #>  [8932,]  171  180  184  193  194  197  193  195  199   196 #>  [8933,]  172  181  185  194  195  198  194  193  197   194 #>  [8934,]  172  181  185  194  196  199  194  193  197   194 #>  [8935,]  171  180  184  193  194  197  193  195  199   196 #>  [8936,]  171  180  184  193  194  197  193  195  199   196 #>  [8937,]  171  180  184  193  194  197  193  195  199   196 #>  [8938,]  171  180  184  193  194  197  193  195  199   196 #>  [8939,]  171  180  184  193  194  197  193  194  198   195 #>  [8940,]  171  180  184  193  194  197  193  194  198   195 #>  [8941,]  171  180  184  193  194  197  193  195  199   196 #>  [8942,]  171  180  184  193  194  197  193  195  199   196 #>  [8943,]  171  180  184  193  194  197  193  194  198   195 #>  [8944,]  171  180  184  193  194  197  193  194  198   195 #>  [8945,]  171  180  184  193  194  197  193  194  198   195 #>  [8946,]  171  180  184  193  194  197  193  194  198   195 #>  [8947,]  171  180  184  193  194  197  193  194  198   195 #>  [8948,]  171  180  184  193  194  197  193  195  199   196 #>  [8949,]  171  180  184  193  194  197  193  194  198   195 #>  [8950,]  171  180  184  193  194  197  193  194  198   195 #>  [8951,]  171  180  184  193  194  197  193  194  198   195 #>  [8952,]  171  180  184  193  194  197  193  195  199   196 #>  [8953,]  171  180  184  193  194  197  193  194  198   195 #>  [8954,]  171  180  184  193  194  197  193  194  198   195 #>  [8955,]  171  180  184  193  194  197  193  194  198   195 #>  [8956,]  171  180  184  193  194  197  193  194  198   195 #>  [8957,]  171  180  184  193  194  197  193  195  199   196 #>  [8958,]  171  180  184  193  194  197  193  195  199   196 #>  [8959,]  171  180  184  193  194  197  193  194  198   195 #>  [8960,]  172  181  185  194  196  199  194  193  197   194 #>  [8961,]  171  180  184  193  194  197  193  195  199   196 #>  [8962,]  171  180  184  193  194  197  193  195  199   196 #>  [8963,]  171  180  184  193  194  197  193  194  198   195 #>  [8964,]  171  180  184  193  194  197  193  195  199   196 #>  [8965,]  172  181  185  194  196  199  194  193  197   194 #>  [8966,]  171  180  184  193  194  197  193  194  198   195 #>  [8967,]  171  180  184  193  194  197  193  195  199   196 #>  [8968,]  171  180  184  193  194  197  193  195  199   196 #>  [8969,]  171  180  184  193  194  197  193  195  199   196 #>  [8970,]  172  181  185  194  196  199  194  193  197   194 #>  [8971,]  171  180  184  193  194  197  193  194  198   195 #>  [8972,]  171  180  184  193  194  197  193  194  198   195 #>  [8973,]  172  181  185  194  195  198  194  193  197   194 #>  [8974,]  171  180  184  193  194  197  193  195  199   196 #>  [8975,]  171  180  184  193  194  197  193  195  199   196 #>  [8976,]  171  180  184  193  194  197  193  194  198   195 #>  [8977,]  171  180  184  193  194  197  193  194  198   195 #>  [8978,]  171  180  184  193  194  197  193  194  198   195 #>  [8979,]  171  180  184  193  194  197  193  194  198   195 #>  [8980,]  171  180  184  193  194  197  193  195  199   196 #>  [8981,]  171  180  184  193  194  197  193  194  198   195 #>  [8982,]  171  180  184  193  194  197  193  195  199   196 #>  [8983,]  171  180  184  193  194  197  193  194  198   195 #>  [8984,]  171  180  184  193  194  197  193  194  198   195 #>  [8985,]  171  180  184  193  194  197  193  195  199   196 #>  [8986,]  171  180  184  193  194  197  193  194  198   195 #>  [8987,]  171  180  184  193  194  197  193  195  199   196 #>  [8988,]  171  180  184  193  194  197  193  195  199   196 #>  [8989,]  171  180  184  193  194  197  193  194  198   195 #>  [8990,]  171  180  184  193  194  197  193  194  198   195 #>  [8991,]  171  180  184  193  194  197  193  195  199   196 #>  [8992,]  171  180  184  193  194  197  193  195  199   196 #>  [8993,]  172  181  185  194  196  199  194  193  197   194 #>  [8994,]  171  180  184  193  194  197  193  194  198   195 #>  [8995,]  171  180  184  193  194  197  193  195  199   196 #>  [8996,]  171  180  184  193  194  197  193  195  199   196 #>  [8997,]  172  181  185  194  195  198  194  193  197   194 #>  [8998,]  172  181  185  194  195  198  194  193  197   194 #>  [8999,]  171  180  184  193  194  197  193  195  199   196 #>  [9000,]  171  180  184  193  194  197  193  194  198   195 #>  [9001,]  173  182  186  195  197  200  195  196  200   197 #>  [9002,]  174  183  187  196  198  201  196  197  201   198 #>  [9003,]  173  182  186  195  197  200  195  196  200   197 #>  [9004,]  173  182  186  195  197  200  195  196  200   197 #>  [9005,]  173  182  186  195  197  200  195  196  200   197 #>  [9006,]  173  182  186  195  197  200  195  196  200   197 #>  [9007,]  173  182  186  195  197  200  195  196  200   197 #>  [9008,]  173  182  186  195  197  200  195  196  200   197 #>  [9009,]  174  183  187  196  198  201  196  197  201   198 #>  [9010,]  174  183  187  196  198  201  196  197  201   198 #>  [9011,]  173  182  186  195  197  200  195  196  200   197 #>  [9012,]  174  183  187  196  198  201  196  197  201   198 #>  [9013,]  173  182  186  195  197  200  195  196  200   197 #>  [9014,]  173  182  186  195  197  200  195  196  200   197 #>  [9015,]  173  182  186  195  197  200  195  196  200   197 #>  [9016,]  173  182  186  195  197  200  195  196  200   197 #>  [9017,]  173  182  186  195  197  200  195  196  200   197 #>  [9018,]  173  182  186  195  197  200  195  196  200   197 #>  [9019,]  173  182  186  195  197  200  195  196  200   197 #>  [9020,]  173  182  186  195  197  200  195  196  200   197 #>  [9021,]  174  183  187  196  198  201  196  197  201   198 #>  [9022,]  173  182  186  195  197  200  195  196  200   197 #>  [9023,]  173  182  186  195  197  200  195  196  200   197 #>  [9024,]  173  182  186  195  197  200  195  196  200   197 #>  [9025,]  173  182  186  195  197  200  195  196  200   197 #>  [9026,]  173  182  186  195  197  200  195  196  200   197 #>  [9027,]  173  182  186  195  197  200  195  196  200   197 #>  [9028,]  173  182  186  195  197  200  195  196  200   197 #>  [9029,]  174  183  187  196  198  201  196  197  201   198 #>  [9030,]  173  182  186  195  197  200  195  196  200   197 #>  [9031,]  173  182  186  195  197  200  195  196  200   197 #>  [9032,]  173  182  186  195  197  200  195  196  200   197 #>  [9033,]  174  183  187  196  198  201  196  197  201   198 #>  [9034,]  173  182  186  195  197  200  195  196  200   197 #>  [9035,]  173  182  186  195  197  200  195  196  200   197 #>  [9036,]  173  182  186  195  197  200  195  196  200   197 #>  [9037,]  173  182  186  195  197  200  195  196  200   197 #>  [9038,]  173  182  186  195  197  200  195  196  200   197 #>  [9039,]  173  182  186  195  197  200  195  196  200   197 #>  [9040,]  173  182  186  195  197  200  195  196  200   197 #>  [9041,]  173  182  186  195  197  200  195  196  200   197 #>  [9042,]  173  182  186  195  197  200  195  196  200   197 #>  [9043,]  173  182  186  195  197  200  195  196  200   197 #>  [9044,]  173  182  186  195  197  200  195  196  200   197 #>  [9045,]  173  182  186  195  197  200  195  196  200   197 #>  [9046,]  173  182  186  195  197  200  195  196  200   197 #>  [9047,]  173  182  186  195  197  200  195  196  200   197 #>  [9048,]  173  182  186  195  197  200  195  196  200   197 #>  [9049,]  173  182  186  195  197  200  195  196  200   197 #>  [9050,]  173  182  186  195  197  200  195  196  200   197 #>  [9051,]  173  182  186  195  197  200  195  196  200   197 #>  [9052,]  173  182  186  195  197  200  195  196  200   197 #>  [9053,]  173  182  186  195  197  200  195  196  200   197 #>  [9054,]  173  182  186  195  197  200  195  196  200   197 #>  [9055,]  173  182  186  195  197  200  195  196  200   197 #>  [9056,]  173  182  186  195  197  200  195  196  200   197 #>  [9057,]  173  182  186  195  197  200  195  196  200   197 #>  [9058,]  173  182  186  195  197  200  195  196  200   197 #>  [9059,]  173  182  186  195  197  200  195  196  200   197 #>  [9060,]  173  182  186  195  197  200  195  196  200   197 #>  [9061,]  173  182  186  195  197  200  195  196  200   197 #>  [9062,]  173  182  186  195  197  200  195  196  200   197 #>  [9063,]  173  182  186  195  197  200  195  196  200   197 #>  [9064,]  173  182  186  195  197  200  195  196  200   197 #>  [9065,]  173  182  186  195  197  200  195  196  200   197 #>  [9066,]  173  182  186  195  197  200  195  196  200   197 #>  [9067,]  173  182  186  195  197  200  195  196  200   197 #>  [9068,]  173  182  186  195  197  200  195  196  200   197 #>  [9069,]  173  182  186  195  197  200  195  196  200   197 #>  [9070,]  174  183  187  196  198  201  196  197  201   198 #>  [9071,]  173  182  186  195  197  200  195  196  200   197 #>  [9072,]  173  182  186  195  197  200  195  196  200   197 #>  [9073,]  173  182  186  195  197  200  195  196  200   197 #>  [9074,]  173  182  186  195  197  200  195  196  200   197 #>  [9075,]  173  182  186  195  197  200  195  196  200   197 #>  [9076,]  173  182  186  195  197  200  195  196  200   197 #>  [9077,]  173  182  186  195  197  200  195  196  200   197 #>  [9078,]  173  182  186  195  197  200  195  196  200   197 #>  [9079,]  173  182  186  195  197  200  195  196  200   197 #>  [9080,]  173  182  186  195  197  200  195  196  200   197 #>  [9081,]  173  182  186  195  197  200  195  196  200   197 #>  [9082,]  173  182  186  195  197  200  195  196  200   197 #>  [9083,]  173  182  186  195  197  200  195  196  200   197 #>  [9084,]  173  182  186  195  197  200  195  196  200   197 #>  [9085,]  173  182  186  195  197  200  195  196  200   197 #>  [9086,]  174  183  187  196  198  201  196  197  201   198 #>  [9087,]  173  182  186  195  197  200  195  196  200   197 #>  [9088,]  173  182  186  195  197  200  195  196  200   197 #>  [9089,]  173  182  186  195  197  200  195  196  200   197 #>  [9090,]  173  182  186  195  197  200  195  196  200   197 #>  [9091,]  173  182  186  195  197  200  195  196  200   197 #>  [9092,]  173  182  186  195  197  200  195  196  200   197 #>  [9093,]  173  182  186  195  197  200  195  196  200   197 #>  [9094,]  173  182  186  195  197  200  195  196  200   197 #>  [9095,]  173  182  186  195  197  200  195  196  200   197 #>  [9096,]  173  182  186  195  197  200  195  196  200   197 #>  [9097,]  173  182  186  195  197  200  195  196  200   197 #>  [9098,]  173  182  186  195  197  200  195  196  200   197 #>  [9099,]  173  182  186  195  197  200  195  196  200   197 #>  [9100,]  173  182  186  195  197  200  195  196  200   197 #>  [9101,]  175  184  188  197  199  202  199  200  203   200 #>  [9102,]  175  184  188  197  199  202  198  199  203   200 #>  [9103,]  175  184  188  197  199  202  198  199  203   200 #>  [9104,]  175  184  188  197  199  202  198  199  203   200 #>  [9105,]  175  184  188  197  199  202  198  199  203   200 #>  [9106,]  175  184  188  197  199  202  198  199  203   200 #>  [9107,]  175  184  188  197  199  202  198  199  203   200 #>  [9108,]  175  184  188  197  199  202  198  199  203   200 #>  [9109,]  175  184  188  197  199  202  198  199  203   200 #>  [9110,]  175  184  188  197  199  202  198  199  203   200 #>  [9111,]  175  184  188  197  199  202  198  199  203   200 #>  [9112,]  175  184  188  197  199  202  198  199  203   200 #>  [9113,]  175  184  188  197  199  202  198  199  203   200 #>  [9114,]  175  184  188  197  199  202  199  200  203   200 #>  [9115,]  175  184  188  197  199  202  199  200  203   200 #>  [9116,]  175  184  188  197  199  202  199  200  203   200 #>  [9117,]  175  184  188  197  199  202  198  199  203   200 #>  [9118,]  176  185  189  198  200  203  197  198  202   199 #>  [9119,]  175  184  188  197  199  202  198  199  203   200 #>  [9120,]  175  184  188  197  199  202  198  199  203   200 #>  [9121,]  175  184  188  197  199  202  199  200  203   200 #>  [9122,]  175  184  188  197  199  202  198  199  203   200 #>  [9123,]  175  184  188  197  199  202  198  199  203   200 #>  [9124,]  175  184  188  197  199  202  198  199  203   200 #>  [9125,]  175  184  188  197  199  202  198  199  203   200 #>  [9126,]  175  184  188  197  199  202  198  199  203   200 #>  [9127,]  175  184  188  197  199  202  198  199  203   200 #>  [9128,]  175  184  188  197  199  202  198  199  203   200 #>  [9129,]  175  184  188  197  199  202  199  200  203   200 #>  [9130,]  175  184  188  197  199  202  198  199  203   200 #>  [9131,]  175  184  188  197  199  202  198  199  203   200 #>  [9132,]  175  184  188  197  199  202  198  199  203   200 #>  [9133,]  175  184  188  197  199  202  199  200  203   200 #>  [9134,]  175  184  188  197  199  202  198  199  203   200 #>  [9135,]  175  184  188  197  199  202  198  199  203   200 #>  [9136,]  175  184  188  197  199  202  198  199  203   200 #>  [9137,]  175  184  188  197  199  202  198  199  203   200 #>  [9138,]  175  184  188  197  199  202  198  199  203   200 #>  [9139,]  175  184  188  197  199  202  198  199  203   200 #>  [9140,]  175  184  188  197  199  202  198  199  203   200 #>  [9141,]  175  184  188  197  199  202  199  200  203   200 #>  [9142,]  176  185  189  198  200  203  197  198  202   199 #>  [9143,]  175  184  188  197  199  202  198  199  203   200 #>  [9144,]  175  184  188  197  199  202  199  200  203   200 #>  [9145,]  175  184  188  197  199  202  198  199  203   200 #>  [9146,]  175  184  188  197  199  202  198  199  203   200 #>  [9147,]  175  184  188  197  199  202  198  199  203   200 #>  [9148,]  175  184  188  197  199  202  198  199  203   200 #>  [9149,]  175  184  188  197  199  202  198  199  203   200 #>  [9150,]  175  184  188  197  199  202  199  200  203   200 #>  [9151,]  176  185  189  198  200  203  197  198  202   199 #>  [9152,]  175  184  188  197  199  202  198  199  203   200 #>  [9153,]  176  185  189  198  200  203  197  198  202   199 #>  [9154,]  175  184  188  197  199  202  198  199  203   200 #>  [9155,]  175  184  188  197  199  202  198  199  203   200 #>  [9156,]  175  184  188  197  199  202  198  199  203   200 #>  [9157,]  175  184  188  197  199  202  198  199  203   200 #>  [9158,]  175  184  188  197  199  202  198  199  203   200 #>  [9159,]  175  184  188  197  199  202  199  200  203   200 #>  [9160,]  175  184  188  197  199  202  198  199  203   200 #>  [9161,]  175  184  188  197  199  202  198  199  203   200 #>  [9162,]  175  184  188  197  199  202  198  199  203   200 #>  [9163,]  175  184  188  197  199  202  198  199  203   200 #>  [9164,]  175  184  188  197  199  202  198  199  203   200 #>  [9165,]  175  184  188  197  199  202  198  199  203   200 #>  [9166,]  175  184  188  197  199  202  198  199  203   200 #>  [9167,]  175  184  188  197  199  202  198  199  203   200 #>  [9168,]  175  184  188  197  199  202  199  200  203   200 #>  [9169,]  175  184  188  197  199  202  198  199  203   200 #>  [9170,]  175  184  188  197  199  202  199  200  203   200 #>  [9171,]  175  184  188  197  199  202  198  199  203   200 #>  [9172,]  175  184  188  197  199  202  198  199  203   200 #>  [9173,]  175  184  188  197  199  202  199  200  203   200 #>  [9174,]  175  184  188  197  199  202  198  199  203   200 #>  [9175,]  175  184  188  197  199  202  198  199  203   200 #>  [9176,]  175  184  188  197  199  202  198  199  203   200 #>  [9177,]  175  184  188  197  199  202  198  199  203   200 #>  [9178,]  175  184  188  197  199  202  198  199  203   200 #>  [9179,]  176  185  189  198  200  203  197  198  202   199 #>  [9180,]  175  184  188  197  199  202  198  199  203   200 #>  [9181,]  175  184  188  197  199  202  198  199  203   200 #>  [9182,]  175  184  188  197  199  202  198  199  203   200 #>  [9183,]  175  184  188  197  199  202  198  199  203   200 #>  [9184,]  176  185  189  198  200  203  197  198  202   199 #>  [9185,]  175  184  188  197  199  202  198  199  203   200 #>  [9186,]  175  184  188  197  199  202  198  199  203   200 #>  [9187,]  175  184  188  197  199  202  198  199  203   200 #>  [9188,]  175  184  188  197  199  202  198  199  203   200 #>  [9189,]  175  184  188  197  199  202  198  199  203   200 #>  [9190,]  175  184  188  197  199  202  198  199  203   200 #>  [9191,]  175  184  188  197  199  202  198  199  203   200 #>  [9192,]  175  184  188  197  199  202  198  199  203   200 #>  [9193,]  175  184  188  197  199  202  198  199  203   200 #>  [9194,]  176  185  189  198  200  203  197  198  202   199 #>  [9195,]  175  184  188  197  199  202  198  199  203   200 #>  [9196,]  175  184  188  197  199  202  199  200  203   200 #>  [9197,]  175  184  188  197  199  202  198  199  203   200 #>  [9198,]  175  184  188  197  199  202  198  199  203   200 #>  [9199,]  175  184  188  197  199  202  199  200  203   200 #>  [9200,]  175  184  188  197  199  202  198  199  203   200 #>  [9201,]  178  187  191  200  202  205  201  202  205   202 #>  [9202,]  177  186  190  199  201  204  200  201  204   201 #>  [9203,]  178  187  191  200  202  205  201  202  205   202 #>  [9204,]  178  187  191  200  202  205  201  202  205   202 #>  [9205,]  178  187  191  200  202  205  201  202  205   202 #>  [9206,]  177  186  190  199  201  204  200  201  204   201 #>  [9207,]  178  187  191  200  202  205  201  202  205   202 #>  [9208,]  178  187  191  200  202  205  201  202  205   202 #>  [9209,]  178  187  191  200  202  205  201  202  205   202 #>  [9210,]  178  187  191  200  202  205  201  202  205   202 #>  [9211,]  177  186  190  199  201  204  200  201  204   201 #>  [9212,]  177  186  190  199  201  204  200  201  204   201 #>  [9213,]  178  187  191  200  202  205  201  202  205   202 #>  [9214,]  178  187  191  200  202  205  201  202  205   202 #>  [9215,]  177  186  190  199  201  204  200  201  204   201 #>  [9216,]  178  187  191  200  202  205  201  202  205   202 #>  [9217,]  177  186  190  199  201  204  200  201  204   201 #>  [9218,]  178  187  191  200  202  205  201  202  205   202 #>  [9219,]  178  187  191  200  202  205  201  202  205   202 #>  [9220,]  178  187  191  200  202  205  201  202  205   202 #>  [9221,]  178  187  191  200  202  205  201  202  205   202 #>  [9222,]  178  187  191  200  202  205  201  202  205   202 #>  [9223,]  177  186  190  199  201  204  200  201  204   201 #>  [9224,]  178  187  191  200  202  205  201  202  205   202 #>  [9225,]  178  187  191  200  202  205  201  202  205   202 #>  [9226,]  178  187  191  200  202  205  201  202  205   202 #>  [9227,]  178  187  191  200  202  205  201  202  205   202 #>  [9228,]  178  187  191  200  202  205  201  202  205   202 #>  [9229,]  177  186  190  199  201  204  200  201  204   201 #>  [9230,]  178  187  191  200  202  205  201  202  205   202 #>  [9231,]  177  186  190  199  201  204  200  201  204   201 #>  [9232,]  178  187  191  200  202  205  201  202  205   202 #>  [9233,]  178  187  191  200  202  205  201  202  205   202 #>  [9234,]  177  186  190  199  201  204  200  201  204   201 #>  [9235,]  178  187  191  200  202  205  201  202  205   202 #>  [9236,]  178  187  191  200  202  205  201  202  205   202 #>  [9237,]  177  186  190  199  201  204  200  201  204   201 #>  [9238,]  178  187  191  200  202  205  201  202  205   202 #>  [9239,]  178  187  191  200  202  205  201  202  205   202 #>  [9240,]  178  187  191  200  202  205  201  202  205   202 #>  [9241,]  178  187  191  200  202  205  201  202  205   202 #>  [9242,]  177  186  190  199  201  204  200  201  204   201 #>  [9243,]  177  186  190  199  201  204  200  201  204   201 #>  [9244,]  177  186  190  199  201  204  200  201  204   201 #>  [9245,]  178  187  191  200  202  205  201  202  205   202 #>  [9246,]  178  187  191  200  202  205  201  202  205   202 #>  [9247,]  177  186  190  199  201  204  200  201  204   201 #>  [9248,]  177  186  190  199  201  204  200  201  204   201 #>  [9249,]  178  187  191  200  202  205  201  202  205   202 #>  [9250,]  178  187  191  200  202  205  201  202  205   202 #>  [9251,]  178  187  191  200  202  205  201  202  205   202 #>  [9252,]  178  187  191  200  202  205  201  202  205   202 #>  [9253,]  178  187  191  200  202  205  201  202  205   202 #>  [9254,]  178  187  191  200  202  205  201  202  205   202 #>  [9255,]  178  187  191  200  202  205  201  202  205   202 #>  [9256,]  177  186  190  199  201  204  200  201  204   201 #>  [9257,]  178  187  191  200  202  205  201  202  205   202 #>  [9258,]  178  187  191  200  202  205  201  202  205   202 #>  [9259,]  178  187  191  200  202  205  201  202  205   202 #>  [9260,]  178  187  191  200  202  205  201  202  205   202 #>  [9261,]  177  186  190  199  201  204  200  201  204   201 #>  [9262,]  178  187  191  200  202  205  201  202  205   202 #>  [9263,]  177  186  190  199  201  204  200  201  204   201 #>  [9264,]  177  186  190  199  201  204  200  201  204   201 #>  [9265,]  177  186  190  199  201  204  200  201  204   201 #>  [9266,]  178  187  191  200  202  205  201  202  205   202 #>  [9267,]  178  187  191  200  202  205  201  202  205   202 #>  [9268,]  178  187  191  200  202  205  201  202  205   202 #>  [9269,]  178  187  191  200  202  205  201  202  205   202 #>  [9270,]  177  186  190  199  201  204  200  201  204   201 #>  [9271,]  178  187  191  200  202  205  201  202  205   202 #>  [9272,]  178  187  191  200  202  205  201  202  205   202 #>  [9273,]  178  187  191  200  202  205  201  202  205   202 #>  [9274,]  178  187  191  200  202  205  201  202  205   202 #>  [9275,]  177  186  190  199  201  204  200  201  204   201 #>  [9276,]  178  187  191  200  202  205  201  202  205   202 #>  [9277,]  178  187  191  200  202  205  201  202  205   202 #>  [9278,]  177  186  190  199  201  204  200  201  204   201 #>  [9279,]  177  186  190  199  201  204  200  201  204   201 #>  [9280,]  178  187  191  200  202  205  201  202  205   202 #>  [9281,]  177  186  190  199  201  204  200  201  204   201 #>  [9282,]  178  187  191  200  202  205  201  202  205   202 #>  [9283,]  178  187  191  200  202  205  201  202  205   202 #>  [9284,]  178  187  191  200  202  205  201  202  205   202 #>  [9285,]  178  187  191  200  202  205  201  202  205   202 #>  [9286,]  178  187  191  200  202  205  201  202  205   202 #>  [9287,]  178  187  191  200  202  205  201  202  205   202 #>  [9288,]  178  187  191  200  202  205  201  202  205   202 #>  [9289,]  178  187  191  200  202  205  201  202  205   202 #>  [9290,]  178  187  191  200  202  205  201  202  205   202 #>  [9291,]  178  187  191  200  202  205  201  202  205   202 #>  [9292,]  177  186  190  199  201  204  200  201  204   201 #>  [9293,]  178  187  191  200  202  205  201  202  205   202 #>  [9294,]  177  186  190  199  201  204  200  201  204   201 #>  [9295,]  177  186  190  199  201  204  200  201  204   201 #>  [9296,]  178  187  191  200  202  205  201  202  205   202 #>  [9297,]  178  187  191  200  202  205  201  202  205   202 #>  [9298,]  178  187  191  200  202  205  201  202  205   202 #>  [9299,]  178  187  191  200  202  205  201  202  205   202 #>  [9300,]  177  186  190  199  201  204  200  201  204   201 #>  [9301,]  180  188  192  201  203  206  202  203  206   203 #>  [9302,]  180  188  192  201  203  206  202  203  206   203 #>  [9303,]  179  189  193  202  204  207  203  204  207   204 #>  [9304,]  179  190  194  202  204  207  203  204  207   204 #>  [9305,]  179  190  194  202  204  207  203  204  207   204 #>  [9306,]  180  188  192  201  203  206  202  203  206   203 #>  [9307,]  180  188  192  201  203  206  202  203  206   203 #>  [9308,]  179  190  194  202  204  207  203  204  207   204 #>  [9309,]  179  190  194  202  204  207  203  204  207   204 #>  [9310,]  179  189  193  202  204  207  203  204  207   204 #>  [9311,]  180  188  192  201  203  206  202  203  206   203 #>  [9312,]  180  188  192  201  203  206  202  203  206   203 #>  [9313,]  180  188  192  201  203  206  202  203  206   203 #>  [9314,]  180  188  192  201  203  206  202  203  206   203 #>  [9315,]  180  188  192  201  203  206  202  203  206   203 #>  [9316,]  180  188  192  201  203  206  202  203  206   203 #>  [9317,]  180  188  192  201  203  206  202  203  206   203 #>  [9318,]  179  190  194  202  204  207  203  204  207   204 #>  [9319,]  180  188  192  201  203  206  202  203  206   203 #>  [9320,]  179  190  194  202  204  207  203  204  207   204 #>  [9321,]  180  188  192  201  203  206  202  203  206   203 #>  [9322,]  180  188  192  201  203  206  202  203  206   203 #>  [9323,]  180  188  192  201  203  206  202  203  206   203 #>  [9324,]  179  190  194  202  204  207  203  204  207   204 #>  [9325,]  180  188  192  201  203  206  202  203  206   203 #>  [9326,]  180  188  192  201  203  206  202  203  206   203 #>  [9327,]  180  188  192  201  203  206  202  203  206   203 #>  [9328,]  180  188  192  201  203  206  202  203  206   203 #>  [9329,]  180  188  192  201  203  206  202  203  206   203 #>  [9330,]  179  190  194  202  204  207  203  204  207   204 #>  [9331,]  179  189  193  202  204  207  203  204  207   204 #>  [9332,]  179  189  193  202  204  207  203  204  207   204 #>  [9333,]  180  188  192  201  203  206  202  203  206   203 #>  [9334,]  180  188  192  201  203  206  202  203  206   203 #>  [9335,]  180  188  192  201  203  206  202  203  206   203 #>  [9336,]  180  188  192  201  203  206  202  203  206   203 #>  [9337,]  180  188  192  201  203  206  202  203  206   203 #>  [9338,]  180  188  192  201  203  206  202  203  206   203 #>  [9339,]  179  190  194  202  204  207  203  204  207   204 #>  [9340,]  180  188  192  201  203  206  202  203  206   203 #>  [9341,]  180  188  192  201  203  206  202  203  206   203 #>  [9342,]  180  188  192  201  203  206  202  203  206   203 #>  [9343,]  179  190  194  202  204  207  203  204  207   204 #>  [9344,]  180  188  192  201  203  206  202  203  206   203 #>  [9345,]  179  190  194  202  204  207  203  204  207   204 #>  [9346,]  180  188  192  201  203  206  202  203  206   203 #>  [9347,]  180  188  192  201  203  206  202  203  206   203 #>  [9348,]  179  189  193  202  204  207  203  204  207   204 #>  [9349,]  179  190  194  202  204  207  203  204  207   204 #>  [9350,]  180  188  192  201  203  206  202  203  206   203 #>  [9351,]  179  190  194  202  204  207  203  204  207   204 #>  [9352,]  180  188  192  201  203  206  202  203  206   203 #>  [9353,]  179  190  194  202  204  207  203  204  207   204 #>  [9354,]  180  188  192  201  203  206  202  203  206   203 #>  [9355,]  180  188  192  201  203  206  202  203  206   203 #>  [9356,]  179  190  194  202  204  207  203  204  207   204 #>  [9357,]  180  188  192  201  203  206  202  203  206   203 #>  [9358,]  180  188  192  201  203  206  202  203  206   203 #>  [9359,]  180  188  192  201  203  206  202  203  206   203 #>  [9360,]  179  190  194  202  204  207  203  204  207   204 #>  [9361,]  180  188  192  201  203  206  202  203  206   203 #>  [9362,]  179  190  194  202  204  207  203  204  207   204 #>  [9363,]  180  188  192  201  203  206  202  203  206   203 #>  [9364,]  179  190  194  202  204  207  203  204  207   204 #>  [9365,]  179  190  194  202  204  207  203  204  207   204 #>  [9366,]  179  190  194  202  204  207  203  204  207   204 #>  [9367,]  179  190  194  202  204  207  203  204  207   204 #>  [9368,]  180  188  192  201  203  206  202  203  206   203 #>  [9369,]  180  188  192  201  203  206  202  203  206   203 #>  [9370,]  180  188  192  201  203  206  202  203  206   203 #>  [9371,]  180  188  192  201  203  206  202  203  206   203 #>  [9372,]  179  190  194  202  204  207  203  204  207   204 #>  [9373,]  180  188  192  201  203  206  202  203  206   203 #>  [9374,]  180  188  192  201  203  206  202  203  206   203 #>  [9375,]  180  188  192  201  203  206  202  203  206   203 #>  [9376,]  180  188  192  201  203  206  202  203  206   203 #>  [9377,]  180  188  192  201  203  206  202  203  206   203 #>  [9378,]  179  190  194  202  204  207  203  204  207   204 #>  [9379,]  180  188  192  201  203  206  202  203  206   203 #>  [9380,]  180  188  192  201  203  206  202  203  206   203 #>  [9381,]  180  188  192  201  203  206  202  203  206   203 #>  [9382,]  180  188  192  201  203  206  202  203  206   203 #>  [9383,]  180  188  192  201  203  206  202  203  206   203 #>  [9384,]  180  188  192  201  203  206  202  203  206   203 #>  [9385,]  179  190  194  202  204  207  203  204  207   204 #>  [9386,]  180  188  192  201  203  206  202  203  206   203 #>  [9387,]  180  188  192  201  203  206  202  203  206   203 #>  [9388,]  179  190  194  202  204  207  203  204  207   204 #>  [9389,]  179  190  194  202  204  207  203  204  207   204 #>  [9390,]  180  188  192  201  203  206  202  203  206   203 #>  [9391,]  179  190  194  202  204  207  203  204  207   204 #>  [9392,]  180  188  192  201  203  206  202  203  206   203 #>  [9393,]  180  188  192  201  203  206  202  203  206   203 #>  [9394,]  180  188  192  201  203  206  202  203  206   203 #>  [9395,]  179  190  194  202  204  207  203  204  207   204 #>  [9396,]  180  188  192  201  203  206  202  203  206   203 #>  [9397,]  180  188  192  201  203  206  202  203  206   203 #>  [9398,]  180  188  192  201  203  206  202  203  206   203 #>  [9399,]  180  188  192  201  203  206  202  203  206   203 #>  [9400,]  180  188  192  201  203  206  202  203  206   203 #>  [9401,]  181  191  195  203  205  208  204  205  208   205 #>  [9402,]  181  191  195  203  205  208  204  205  208   205 #>  [9403,]  181  191  195  203  205  208  204  205  208   205 #>  [9404,]  182  192  196  204  206  209  205  206  210   206 #>  [9405,]  181  191  195  203  205  208  204  205  208   205 #>  [9406,]  181  191  195  203  205  208  204  205  208   205 #>  [9407,]  181  191  195  203  205  208  204  205  208   205 #>  [9408,]  181  191  195  203  205  208  204  205  208   205 #>  [9409,]  181  191  195  203  205  208  204  205  208   205 #>  [9410,]  182  192  196  204  206  209  205  206  209   206 #>  [9411,]  181  191  195  203  205  208  204  205  208   205 #>  [9412,]  181  191  195  203  205  208  204  205  208   205 #>  [9413,]  181  191  195  203  205  208  204  205  208   205 #>  [9414,]  181  191  195  203  205  208  204  205  208   205 #>  [9415,]  181  191  195  203  205  208  204  205  208   205 #>  [9416,]  181  191  195  203  205  208  204  205  208   205 #>  [9417,]  181  191  195  203  205  208  204  205  208   205 #>  [9418,]  182  192  196  204  206  209  205  206  209   206 #>  [9419,]  181  191  195  203  205  208  204  205  208   205 #>  [9420,]  181  191  195  203  205  208  204  205  208   205 #>  [9421,]  181  191  195  203  205  208  204  205  208   205 #>  [9422,]  181  191  195  203  205  208  204  205  208   205 #>  [9423,]  181  191  195  203  205  208  204  205  208   205 #>  [9424,]  181  191  195  203  205  208  204  205  208   205 #>  [9425,]  182  192  196  204  206  209  205  206  209   206 #>  [9426,]  181  191  195  203  205  208  204  205  208   205 #>  [9427,]  181  191  195  203  205  208  204  205  208   205 #>  [9428,]  181  191  195  203  205  208  204  205  208   205 #>  [9429,]  181  191  195  203  205  208  204  205  208   205 #>  [9430,]  181  191  195  203  205  208  204  205  208   205 #>  [9431,]  181  191  195  203  205  208  204  205  208   205 #>  [9432,]  181  191  195  203  205  208  204  205  208   205 #>  [9433,]  181  191  195  203  205  208  204  205  208   205 #>  [9434,]  181  191  195  203  205  208  204  205  208   205 #>  [9435,]  181  191  195  203  205  208  204  205  208   205 #>  [9436,]  181  191  195  203  205  208  204  205  208   205 #>  [9437,]  181  191  195  203  205  208  204  205  208   205 #>  [9438,]  181  191  195  203  205  208  204  205  208   205 #>  [9439,]  182  192  196  204  206  209  205  206  209   206 #>  [9440,]  181  191  195  203  205  208  204  205  208   205 #>  [9441,]  181  191  195  203  205  208  204  205  208   205 #>  [9442,]  181  191  195  203  205  208  204  205  208   205 #>  [9443,]  182  192  196  204  206  209  205  206  210   206 #>  [9444,]  181  191  195  203  205  208  204  205  208   205 #>  [9445,]  182  192  196  204  206  209  205  206  210   206 #>  [9446,]  181  191  195  203  205  208  204  205  208   205 #>  [9447,]  181  191  195  203  205  208  204  205  208   205 #>  [9448,]  181  191  195  203  205  208  204  205  208   205 #>  [9449,]  181  191  195  203  205  208  204  205  208   205 #>  [9450,]  181  191  195  203  205  208  204  205  208   205 #>  [9451,]  181  191  195  203  205  208  204  205  208   205 #>  [9452,]  181  191  195  203  205  208  204  205  208   205 #>  [9453,]  182  192  196  204  206  209  205  206  210   206 #>  [9454,]  181  191  195  203  205  208  204  205  208   205 #>  [9455,]  181  191  195  203  205  208  204  205  208   205 #>  [9456,]  181  191  195  203  205  208  204  205  208   205 #>  [9457,]  181  191  195  203  205  208  204  205  208   205 #>  [9458,]  181  191  195  203  205  208  204  205  208   205 #>  [9459,]  181  191  195  203  205  208  204  205  208   205 #>  [9460,]  181  191  195  203  205  208  204  205  208   205 #>  [9461,]  181  191  195  203  205  208  204  205  208   205 #>  [9462,]  181  191  195  203  205  208  204  205  208   205 #>  [9463,]  181  191  195  203  205  208  204  205  208   205 #>  [9464,]  181  191  195  203  205  208  204  205  208   205 #>  [9465,]  181  191  195  203  205  208  204  205  208   205 #>  [9466,]  181  191  195  203  205  208  204  205  208   205 #>  [9467,]  181  191  195  203  205  208  204  205  208   205 #>  [9468,]  181  191  195  203  205  208  204  205  208   205 #>  [9469,]  181  191  195  203  205  208  204  205  208   205 #>  [9470,]  181  191  195  203  205  208  204  205  208   205 #>  [9471,]  181  191  195  203  205  208  204  205  208   205 #>  [9472,]  181  191  195  203  205  208  204  205  208   205 #>  [9473,]  182  192  196  204  206  209  205  206  210   206 #>  [9474,]  182  192  196  204  206  209  205  206  210   206 #>  [9475,]  182  192  196  204  206  209  205  206  210   206 #>  [9476,]  182  192  196  204  206  209  205  206  210   206 #>  [9477,]  182  192  196  204  206  209  205  206  209   206 #>  [9478,]  181  191  195  203  205  208  204  205  208   205 #>  [9479,]  181  191  195  203  205  208  204  205  208   205 #>  [9480,]  181  191  195  203  205  208  204  205  208   205 #>  [9481,]  181  191  195  203  205  208  204  205  208   205 #>  [9482,]  181  191  195  203  205  208  204  205  208   205 #>  [9483,]  181  191  195  203  205  208  204  205  208   205 #>  [9484,]  181  191  195  203  205  208  204  205  208   205 #>  [9485,]  181  191  195  203  205  208  204  205  208   205 #>  [9486,]  181  191  195  203  205  208  204  205  208   205 #>  [9487,]  181  191  195  203  205  208  204  205  208   205 #>  [9488,]  181  191  195  203  205  208  204  205  208   205 #>  [9489,]  181  191  195  203  205  208  204  205  208   205 #>  [9490,]  181  191  195  203  205  208  204  205  208   205 #>  [9491,]  181  191  195  203  205  208  204  205  208   205 #>  [9492,]  181  191  195  203  205  208  204  205  208   205 #>  [9493,]  181  191  195  203  205  208  204  205  208   205 #>  [9494,]  181  191  195  203  205  208  204  205  208   205 #>  [9495,]  182  192  196  204  206  209  205  206  209   206 #>  [9496,]  181  191  195  203  205  208  204  205  208   205 #>  [9497,]  181  191  195  203  205  208  204  205  208   205 #>  [9498,]  181  191  195  203  205  208  204  205  208   205 #>  [9499,]  181  191  195  203  205  208  204  205  208   205 #>  [9500,]  181  191  195  203  205  208  204  205  208   205 #>  [9501,]  184  193  198  206  208  211  208  209  213   208 #>  [9502,]  183  193  197  205  207  210  206  207  211   207 #>  [9503,]  183  193  197  205  207  210  206  207  211   207 #>  [9504,]  184  193  198  206  208  211  208  209  213   208 #>  [9505,]  184  193  198  206  208  211  208  209  213   208 #>  [9506,]  184  193  198  206  208  211  208  209  213   208 #>  [9507,]  183  193  197  205  207  210  206  207  211   207 #>  [9508,]  184  193  198  206  208  211  208  209  213   208 #>  [9509,]  184  193  198  206  208  211  208  209  213   208 #>  [9510,]  184  193  197  205  207  210  206  207  211   207 #>  [9511,]  184  193  198  206  208  211  207  208  212   208 #>  [9512,]  184  193  198  206  208  211  208  209  213   208 #>  [9513,]  183  193  197  205  207  210  206  207  211   207 #>  [9514,]  184  193  198  206  208  211  207  208  212   208 #>  [9515,]  184  193  198  206  208  211  208  209  213   208 #>  [9516,]  183  193  197  205  207  210  206  207  211   207 #>  [9517,]  184  193  197  205  207  210  206  207  211   207 #>  [9518,]  183  193  197  205  207  210  206  207  211   207 #>  [9519,]  183  193  197  205  207  210  206  207  211   207 #>  [9520,]  184  193  198  206  208  211  208  209  213   208 #>  [9521,]  183  193  197  205  207  210  206  207  211   207 #>  [9522,]  183  193  197  205  207  210  206  207  211   207 #>  [9523,]  183  193  197  205  207  210  206  207  211   207 #>  [9524,]  183  193  197  205  207  210  206  207  211   207 #>  [9525,]  184  193  197  205  207  210  206  207  211   207 #>  [9526,]  184  193  198  206  208  211  208  209  213   208 #>  [9527,]  184  193  197  205  207  210  206  207  211   207 #>  [9528,]  184  193  198  206  208  211  207  208  212   208 #>  [9529,]  183  193  197  205  207  210  206  207  211   207 #>  [9530,]  183  193  197  205  207  210  206  207  211   207 #>  [9531,]  183  193  197  205  207  210  206  207  211   207 #>  [9532,]  183  193  197  205  207  210  206  207  211   207 #>  [9533,]  184  193  198  206  208  211  208  209  213   208 #>  [9534,]  183  193  197  205  207  210  206  207  211   207 #>  [9535,]  183  193  197  205  207  210  206  207  211   207 #>  [9536,]  183  193  197  205  207  210  206  207  211   207 #>  [9537,]  183  193  197  205  207  210  206  207  211   207 #>  [9538,]  184  193  198  206  208  211  208  209  213   208 #>  [9539,]  183  193  197  205  207  210  206  207  211   207 #>  [9540,]  183  193  197  205  207  210  206  207  211   207 #>  [9541,]  184  193  198  206  208  211  208  209  213   208 #>  [9542,]  184  193  198  206  208  211  208  209  213   208 #>  [9543,]  184  193  198  206  208  211  208  209  213   208 #>  [9544,]  183  193  197  205  207  210  206  207  211   207 #>  [9545,]  184  193  198  206  208  211  208  209  213   208 #>  [9546,]  184  193  198  206  208  211  208  209  213   208 #>  [9547,]  183  193  197  205  207  210  206  207  211   207 #>  [9548,]  183  193  197  205  207  210  206  207  211   207 #>  [9549,]  183  193  197  205  207  210  206  207  211   207 #>  [9550,]  184  193  198  206  208  211  208  209  213   208 #>  [9551,]  184  193  198  206  208  211  208  209  213   208 #>  [9552,]  184  193  198  206  208  211  208  209  213   208 #>  [9553,]  184  193  198  206  208  211  208  209  213   208 #>  [9554,]  183  193  197  205  207  210  206  207  211   207 #>  [9555,]  184  193  198  206  208  211  208  209  213   208 #>  [9556,]  184  193  198  206  208  211  208  209  213   208 #>  [9557,]  184  193  198  206  208  211  208  209  213   208 #>  [9558,]  184  193  198  206  208  211  208  209  213   208 #>  [9559,]  183  193  197  205  207  210  206  207  211   207 #>  [9560,]  184  193  198  206  208  211  208  209  213   208 #>  [9561,]  184  193  198  206  208  211  208  209  213   208 #>  [9562,]  183  193  197  205  207  210  206  207  211   207 #>  [9563,]  184  193  198  206  208  211  208  209  213   208 #>  [9564,]  184  193  198  206  208  211  208  209  213   208 #>  [9565,]  184  193  198  206  208  211  207  208  212   208 #>  [9566,]  184  193  198  206  208  211  208  209  213   208 #>  [9567,]  184  193  198  206  208  211  208  209  213   208 #>  [9568,]  184  193  198  206  208  211  208  209  213   208 #>  [9569,]  184  193  197  205  207  210  206  207  211   207 #>  [9570,]  183  193  197  205  207  210  206  207  211   207 #>  [9571,]  184  193  198  206  208  211  208  209  213   208 #>  [9572,]  184  193  198  206  208  211  208  209  213   208 #>  [9573,]  184  193  198  206  208  211  208  209  213   208 #>  [9574,]  184  193  198  206  208  211  207  208  212   208 #>  [9575,]  184  193  198  206  208  211  208  209  213   208 #>  [9576,]  184  193  198  206  208  211  208  209  213   208 #>  [9577,]  183  193  197  205  207  210  206  207  211   207 #>  [9578,]  184  193  198  206  208  211  208  209  213   208 #>  [9579,]  183  193  197  205  207  210  206  207  211   207 #>  [9580,]  183  193  197  205  207  210  206  207  211   207 #>  [9581,]  184  193  198  206  208  211  208  209  213   208 #>  [9582,]  184  193  197  205  207  210  206  207  211   207 #>  [9583,]  183  193  197  205  207  210  206  207  211   207 #>  [9584,]  184  193  198  206  208  211  208  209  213   208 #>  [9585,]  183  193  197  205  207  210  206  207  211   207 #>  [9586,]  183  193  197  205  207  210  206  207  211   207 #>  [9587,]  184  193  198  206  208  211  208  209  213   208 #>  [9588,]  184  193  198  206  208  211  208  209  213   208 #>  [9589,]  184  193  198  206  208  211  208  209  213   208 #>  [9590,]  184  193  198  206  208  211  208  209  213   208 #>  [9591,]  184  193  198  206  208  211  208  209  213   208 #>  [9592,]  184  193  198  206  208  211  208  209  213   208 #>  [9593,]  183  193  197  205  207  210  206  207  211   207 #>  [9594,]  184  193  198  206  208  211  208  209  213   208 #>  [9595,]  183  193  197  205  207  210  206  207  211   207 #>  [9596,]  184  193  198  206  208  211  208  209  213   208 #>  [9597,]  184  193  198  206  208  211  208  209  213   208 #>  [9598,]  183  193  197  205  207  210  206  207  211   207 #>  [9599,]  184  193  198  206  208  211  208  209  213   208 #>  [9600,]  183  193  197  205  207  210  206  207  211   207 #>  [9601,]  185  194  199  207  209  212  209  210  214   209 #>  [9602,]  185  194  199  207  209  212  209  210  214   209 #>  [9603,]  185  194  199  207  209  212  209  210  214   209 #>  [9604,]  185  195  200  208  210  213  210  211  215   210 #>  [9605,]  185  194  199  207  209  212  209  210  214   209 #>  [9606,]  185  194  199  207  209  212  209  210  214   209 #>  [9607,]  185  195  200  208  210  213  210  211  215   210 #>  [9608,]  185  194  199  207  209  212  209  210  214   209 #>  [9609,]  185  195  200  208  210  213  210  211  215   210 #>  [9610,]  185  195  200  208  210  213  210  211  215   210 #>  [9611,]  185  194  199  207  209  212  209  210  214   209 #>  [9612,]  185  194  199  207  209  212  209  210  214   209 #>  [9613,]  185  195  200  208  210  213  210  211  215   210 #>  [9614,]  185  195  200  208  210  213  210  211  215   210 #>  [9615,]  185  194  199  207  209  212  209  210  214   209 #>  [9616,]  185  195  200  208  210  213  210  211  215   210 #>  [9617,]  185  194  199  207  209  212  209  210  214   209 #>  [9618,]  185  194  199  207  209  212  209  210  214   209 #>  [9619,]  185  194  199  207  209  212  209  210  214   209 #>  [9620,]  185  195  200  208  210  213  210  211  215   210 #>  [9621,]  185  194  199  207  209  212  209  210  214   209 #>  [9622,]  185  195  200  208  210  213  210  211  215   210 #>  [9623,]  185  194  199  207  209  212  209  210  214   209 #>  [9624,]  185  195  200  208  210  213  210  211  215   210 #>  [9625,]  185  195  200  208  210  213  210  211  215   210 #>  [9626,]  185  194  199  207  209  212  209  210  214   209 #>  [9627,]  185  194  199  207  209  212  209  210  214   209 #>  [9628,]  185  195  200  208  210  213  210  211  215   210 #>  [9629,]  185  194  199  207  209  212  209  210  214   209 #>  [9630,]  185  194  199  207  209  212  209  210  214   209 #>  [9631,]  185  194  199  207  209  212  209  210  214   209 #>  [9632,]  185  194  199  207  209  212  209  210  214   209 #>  [9633,]  185  194  199  207  209  212  209  210  214   209 #>  [9634,]  185  194  199  207  209  212  209  210  214   209 #>  [9635,]  185  194  199  207  209  212  209  210  214   209 #>  [9636,]  185  195  200  208  210  213  210  211  215   210 #>  [9637,]  185  194  199  207  209  212  209  210  214   209 #>  [9638,]  185  194  199  207  209  212  209  210  214   209 #>  [9639,]  185  195  200  208  210  213  210  211  215   210 #>  [9640,]  185  194  199  207  209  212  209  210  214   209 #>  [9641,]  185  194  199  207  209  212  209  210  214   209 #>  [9642,]  185  194  199  207  209  212  209  210  214   209 #>  [9643,]  185  194  199  207  209  212  209  210  214   209 #>  [9644,]  185  194  199  207  209  212  209  210  214   209 #>  [9645,]  185  194  199  207  209  212  209  210  214   209 #>  [9646,]  185  194  199  207  209  212  209  210  214   209 #>  [9647,]  185  194  199  207  209  212  209  210  214   209 #>  [9648,]  185  194  199  207  209  212  209  210  214   209 #>  [9649,]  185  194  199  207  209  212  209  210  214   209 #>  [9650,]  185  195  200  208  210  213  210  211  215   210 #>  [9651,]  185  194  199  207  209  212  209  210  214   209 #>  [9652,]  185  195  200  208  210  213  210  211  215   210 #>  [9653,]  185  194  199  207  209  212  209  210  214   209 #>  [9654,]  185  195  200  208  210  213  210  211  215   210 #>  [9655,]  185  195  200  208  210  213  210  211  215   210 #>  [9656,]  185  194  199  207  209  212  209  210  214   209 #>  [9657,]  185  195  200  208  210  213  210  211  215   210 #>  [9658,]  185  194  199  207  209  212  209  210  214   209 #>  [9659,]  185  195  200  208  210  213  210  211  215   210 #>  [9660,]  185  194  199  207  209  212  209  210  214   209 #>  [9661,]  185  194  199  207  209  212  209  210  214   209 #>  [9662,]  185  194  199  207  209  212  209  210  214   209 #>  [9663,]  185  194  199  207  209  212  209  210  214   209 #>  [9664,]  185  194  199  207  209  212  209  210  214   209 #>  [9665,]  185  194  199  207  209  212  209  210  214   209 #>  [9666,]  185  194  199  207  209  212  209  210  214   209 #>  [9667,]  185  195  200  208  210  213  210  211  215   210 #>  [9668,]  185  194  199  207  209  212  209  210  214   209 #>  [9669,]  185  194  199  207  209  212  209  210  214   209 #>  [9670,]  185  194  199  207  209  212  209  210  214   209 #>  [9671,]  185  194  199  207  209  212  209  210  214   209 #>  [9672,]  185  194  199  207  209  212  209  210  214   209 #>  [9673,]  185  195  200  208  210  213  210  211  215   210 #>  [9674,]  185  194  199  207  209  212  209  210  214   209 #>  [9675,]  185  194  199  207  209  212  209  210  214   209 #>  [9676,]  185  195  200  208  210  213  210  211  215   210 #>  [9677,]  185  194  199  207  209  212  209  210  214   209 #>  [9678,]  185  194  199  207  209  212  209  210  214   209 #>  [9679,]  185  194  199  207  209  212  209  210  214   209 #>  [9680,]  185  194  199  207  209  212  209  210  214   209 #>  [9681,]  185  194  199  207  209  212  209  210  214   209 #>  [9682,]  185  194  199  207  209  212  209  210  214   209 #>  [9683,]  185  194  199  207  209  212  209  210  214   209 #>  [9684,]  185  194  199  207  209  212  209  210  214   209 #>  [9685,]  185  194  199  207  209  212  209  210  214   209 #>  [9686,]  185  195  200  208  210  213  210  211  215   210 #>  [9687,]  185  194  199  207  209  212  209  210  214   209 #>  [9688,]  185  194  199  207  209  212  209  210  214   209 #>  [9689,]  185  194  199  207  209  212  209  210  214   209 #>  [9690,]  185  195  200  208  210  213  210  211  215   210 #>  [9691,]  185  195  200  208  210  213  210  211  215   210 #>  [9692,]  185  194  199  207  209  212  209  210  214   209 #>  [9693,]  185  194  199  207  209  212  209  210  214   209 #>  [9694,]  185  194  199  207  209  212  209  210  214   209 #>  [9695,]  185  194  199  207  209  212  209  210  214   209 #>  [9696,]  185  194  199  207  209  212  209  210  214   209 #>  [9697,]  185  194  199  207  209  212  209  210  214   209 #>  [9698,]  185  194  199  207  209  212  209  210  214   209 #>  [9699,]  185  194  199  207  209  212  209  210  214   209 #>  [9700,]  185  194  199  207  209  212  209  210  214   209 #>  [9701,]  187  197  202  210  211  214  211  212  216   211 #>  [9702,]  186  196  201  209  213  215  212  213  217   212 #>  [9703,]  186  196  201  209  212  215  212  213  217   212 #>  [9704,]  187  197  202  210  211  214  211  212  216   211 #>  [9705,]  187  197  202  210  211  214  211  212  216   211 #>  [9706,]  187  197  202  210  211  214  211  212  216   211 #>  [9707,]  186  196  201  209  212  215  212  213  217   212 #>  [9708,]  187  197  202  210  211  214  211  212  216   211 #>  [9709,]  187  197  202  210  211  214  211  212  216   211 #>  [9710,]  187  197  202  210  211  214  211  212  216   211 #>  [9711,]  187  197  202  210  211  214  211  212  216   211 #>  [9712,]  187  197  202  210  211  214  211  212  216   211 #>  [9713,]  186  196  201  209  213  215  212  213  217   212 #>  [9714,]  187  197  202  210  211  214  211  212  216   211 #>  [9715,]  187  197  202  210  211  214  211  212  216   211 #>  [9716,]  186  196  201  209  213  215  212  213  217   212 #>  [9717,]  187  197  202  210  211  214  211  212  216   211 #>  [9718,]  186  196  201  209  212  215  212  213  217   212 #>  [9719,]  186  196  201  209  212  215  212  213  217   212 #>  [9720,]  187  197  202  210  211  214  211  212  216   211 #>  [9721,]  186  196  201  209  213  215  212  213  217   212 #>  [9722,]  186  196  201  209  212  215  212  213  217   212 #>  [9723,]  186  196  201  209  212  215  212  213  217   212 #>  [9724,]  186  196  201  209  212  215  212  213  217   212 #>  [9725,]  187  197  202  210  211  214  211  212  216   211 #>  [9726,]  187  197  202  210  211  214  211  212  216   211 #>  [9727,]  187  197  202  210  211  214  211  212  216   211 #>  [9728,]  187  197  202  210  211  214  211  212  216   211 #>  [9729,]  186  196  201  209  213  215  212  213  217   212 #>  [9730,]  186  196  201  209  212  215  212  213  217   212 #>  [9731,]  186  196  201  209  212  215  212  213  217   212 #>  [9732,]  186  196  201  209  212  215  212  213  217   212 #>  [9733,]  187  197  202  210  211  214  211  212  216   211 #>  [9734,]  186  196  201  209  212  215  212  213  217   212 #>  [9735,]  186  196  201  209  212  215  212  213  217   212 #>  [9736,]  186  196  201  209  212  215  212  213  217   212 #>  [9737,]  186  196  201  209  212  215  212  213  217   212 #>  [9738,]  187  197  202  210  211  214  211  212  216   211 #>  [9739,]  186  196  201  209  212  215  212  213  217   212 #>  [9740,]  186  196  201  209  212  215  212  213  217   212 #>  [9741,]  187  197  202  210  211  214  211  212  216   211 #>  [9742,]  187  197  202  210  211  214  211  212  216   211 #>  [9743,]  187  197  202  210  211  214  211  212  216   211 #>  [9744,]  186  196  201  209  213  215  212  213  217   212 #>  [9745,]  187  197  202  210  211  214  211  212  216   211 #>  [9746,]  187  197  202  210  211  214  211  212  216   211 #>  [9747,]  186  196  201  209  212  215  212  213  217   212 #>  [9748,]  186  196  201  209  212  215  212  213  217   212 #>  [9749,]  186  196  201  209  212  215  212  213  217   212 #>  [9750,]  187  197  202  210  211  214  211  212  216   211 #>  [9751,]  187  197  202  210  211  214  211  212  216   211 #>  [9752,]  187  197  202  210  211  214  211  212  216   211 #>  [9753,]  187  197  202  210  211  214  211  212  216   211 #>  [9754,]  186  196  201  209  212  215  212  213  217   212 #>  [9755,]  187  197  202  210  211  214  211  212  216   211 #>  [9756,]  187  197  202  210  211  214  211  212  216   211 #>  [9757,]  187  197  202  210  211  214  211  212  216   211 #>  [9758,]  187  197  202  210  211  214  211  212  216   211 #>  [9759,]  186  196  201  209  213  215  212  213  217   212 #>  [9760,]  187  197  202  210  211  214  211  212  216   211 #>  [9761,]  187  197  202  210  211  214  211  212  216   211 #>  [9762,]  186  196  201  209  212  215  212  213  217   212 #>  [9763,]  187  197  202  210  211  214  211  212  216   211 #>  [9764,]  187  197  202  210  211  214  211  212  216   211 #>  [9765,]  187  197  202  210  211  214  211  212  216   211 #>  [9766,]  187  197  202  210  211  214  211  212  216   211 #>  [9767,]  187  197  202  210  211  214  211  212  216   211 #>  [9768,]  187  197  202  210  211  214  211  212  216   211 #>  [9769,]  187  197  202  210  211  214  211  212  216   211 #>  [9770,]  186  196  201  209  213  215  212  213  217   212 #>  [9771,]  187  197  202  210  211  214  211  212  216   211 #>  [9772,]  187  197  202  210  211  214  211  212  216   211 #>  [9773,]  187  197  202  210  211  214  211  212  216   211 #>  [9774,]  187  197  202  210  211  214  211  212  216   211 #>  [9775,]  187  197  202  210  211  214  211  212  216   211 #>  [9776,]  187  197  202  210  211  214  211  212  216   211 #>  [9777,]  186  196  201  209  212  215  212  213  217   212 #>  [9778,]  187  197  202  210  211  214  211  212  216   211 #>  [9779,]  186  196  201  209  212  215  212  213  217   212 #>  [9780,]  186  196  201  209  212  215  212  213  217   212 #>  [9781,]  187  197  202  210  211  214  211  212  216   211 #>  [9782,]  187  197  202  210  211  214  211  212  216   211 #>  [9783,]  186  196  201  209  213  215  212  213  217   212 #>  [9784,]  187  197  202  210  211  214  211  212  216   211 #>  [9785,]  186  196  201  209  212  215  212  213  217   212 #>  [9786,]  186  196  201  209  213  215  212  213  217   212 #>  [9787,]  187  197  202  210  211  214  211  212  216   211 #>  [9788,]  187  197  202  210  211  214  211  212  216   211 #>  [9789,]  187  197  202  210  211  214  211  212  216   211 #>  [9790,]  187  197  202  210  211  214  211  212  216   211 #>  [9791,]  187  197  202  210  211  214  211  212  216   211 #>  [9792,]  187  197  202  210  211  214  211  212  216   211 #>  [9793,]  186  196  201  209  213  215  212  213  217   212 #>  [9794,]  187  197  202  210  211  214  211  212  216   211 #>  [9795,]  186  196  201  209  212  215  212  213  217   212 #>  [9796,]  187  197  202  210  211  214  211  212  216   211 #>  [9797,]  187  197  202  210  211  214  211  212  216   211 #>  [9798,]  186  196  201  209  212  215  212  213  217   212 #>  [9799,]  187  197  202  210  211  214  211  212  216   211 #>  [9800,]  186  196  201  209  212  215  212  213  217   212 #>  [9801,]  189  199  204  212  215  217  214  215  219   214 #>  [9802,]  189  199  204  212  215  217  214  215  219   214 #>  [9803,]  188  198  203  211  214  216  213  214  218   213 #>  [9804,]  189  199  204  212  215  217  214  215  219   214 #>  [9805,]  189  199  204  212  215  217  214  215  219   214 #>  [9806,]  189  199  204  212  215  217  214  215  219   214 #>  [9807,]  188  198  203  211  214  216  213  214  218   213 #>  [9808,]  188  198  203  211  214  216  213  214  218   213 #>  [9809,]  189  199  204  212  215  217  214  215  219   214 #>  [9810,]  189  199  204  212  215  217  214  215  219   214 #>  [9811,]  189  199  204  212  215  217  214  215  219   214 #>  [9812,]  189  199  204  212  215  217  214  215  219   214 #>  [9813,]  189  199  204  212  215  217  214  215  219   214 #>  [9814,]  189  199  204  212  215  217  214  215  219   214 #>  [9815,]  189  199  204  212  215  217  214  215  219   214 #>  [9816,]  189  199  204  212  215  217  214  215  219   214 #>  [9817,]  189  199  204  212  215  217  214  215  219   214 #>  [9818,]  189  199  204  212  215  217  214  215  219   214 #>  [9819,]  189  199  204  212  215  217  214  215  219   214 #>  [9820,]  188  198  203  211  214  216  213  214  218   213 #>  [9821,]  189  199  204  212  215  217  214  215  219   214 #>  [9822,]  189  199  204  212  215  218  214  215  219   214 #>  [9823,]  189  199  204  212  215  217  214  215  219   214 #>  [9824,]  189  199  204  212  215  217  214  215  219   214 #>  [9825,]  188  198  203  211  214  216  213  214  218   213 #>  [9826,]  189  199  204  212  215  217  214  215  219   214 #>  [9827,]  189  199  204  212  215  217  214  215  219   214 #>  [9828,]  189  199  204  212  215  217  214  215  219   214 #>  [9829,]  189  199  204  212  215  218  214  215  219   214 #>  [9830,]  189  199  204  212  215  217  214  215  219   214 #>  [9831,]  189  199  204  212  215  217  214  215  219   214 #>  [9832,]  189  199  204  212  215  217  214  215  219   214 #>  [9833,]  189  199  204  212  215  217  214  215  219   214 #>  [9834,]  189  199  204  212  215  217  214  215  219   214 #>  [9835,]  189  199  204  212  215  217  214  215  219   214 #>  [9836,]  189  199  204  212  215  217  214  215  219   214 #>  [9837,]  189  199  204  212  215  217  214  215  219   214 #>  [9838,]  189  199  204  212  215  217  214  215  219   214 #>  [9839,]  188  198  203  211  214  216  213  214  218   213 #>  [9840,]  189  199  204  212  215  217  214  215  219   214 #>  [9841,]  189  199  204  212  215  217  214  215  219   214 #>  [9842,]  189  199  204  212  215  217  214  215  219   214 #>  [9843,]  189  199  204  212  215  217  214  215  219   214 #>  [9844,]  188  198  203  211  214  216  213  214  218   213 #>  [9845,]  189  199  204  212  215  217  214  215  219   214 #>  [9846,]  189  199  204  212  215  217  214  215  219   214 #>  [9847,]  189  199  204  212  215  217  214  215  219   214 #>  [9848,]  189  199  204  212  215  217  214  215  219   214 #>  [9849,]  188  198  203  211  214  216  213  214  218   213 #>  [9850,]  188  198  203  211  214  216  213  214  218   213 #>  [9851,]  189  199  204  212  215  217  214  215  219   214 #>  [9852,]  189  199  204  212  215  217  214  215  219   214 #>  [9853,]  188  198  203  211  214  216  213  214  218   213 #>  [9854,]  189  199  204  212  215  217  214  215  219   214 #>  [9855,]  188  198  203  211  214  216  213  214  218   213 #>  [9856,]  188  198  203  211  214  216  213  214  218   213 #>  [9857,]  189  199  204  212  215  217  214  215  219   214 #>  [9858,]  189  199  204  212  215  218  214  215  219   214 #>  [9859,]  188  198  203  211  214  216  213  214  218   213 #>  [9860,]  189  199  204  212  215  217  214  215  219   214 #>  [9861,]  189  199  204  212  215  217  214  215  219   214 #>  [9862,]  189  199  204  212  215  217  214  215  219   214 #>  [9863,]  189  199  204  212  215  217  214  215  219   214 #>  [9864,]  189  199  204  212  215  218  214  215  219   214 #>  [9865,]  188  198  203  211  214  216  213  214  218   213 #>  [9866,]  188  198  203  211  214  216  213  214  218   213 #>  [9867,]  189  199  204  212  215  217  214  215  219   214 #>  [9868,]  189  199  204  212  215  217  214  215  219   214 #>  [9869,]  189  199  204  212  215  217  214  215  219   214 #>  [9870,]  189  199  204  212  215  217  214  215  219   214 #>  [9871,]  189  199  204  212  215  217  214  215  219   214 #>  [9872,]  189  199  204  212  215  217  214  215  219   214 #>  [9873,]  189  199  204  212  215  217  214  215  219   214 #>  [9874,]  189  199  204  212  215  217  214  215  219   214 #>  [9875,]  189  199  204  212  215  217  214  215  219   214 #>  [9876,]  189  199  204  212  215  217  214  215  219   214 #>  [9877,]  189  199  204  212  215  218  214  215  219   214 #>  [9878,]  189  199  204  212  215  217  214  215  219   214 #>  [9879,]  189  199  204  212  215  217  214  215  219   214 #>  [9880,]  189  199  204  212  215  217  214  215  219   214 #>  [9881,]  189  199  204  212  215  218  214  215  219   214 #>  [9882,]  189  199  204  212  215  217  214  215  219   214 #>  [9883,]  189  199  204  212  215  217  214  215  219   214 #>  [9884,]  188  198  203  211  214  216  213  214  218   213 #>  [9885,]  189  199  204  212  215  217  214  215  219   214 #>  [9886,]  188  198  203  211  214  216  213  214  218   213 #>  [9887,]  189  199  204  212  215  218  214  215  219   214 #>  [9888,]  189  199  204  212  215  217  214  215  219   214 #>  [9889,]  189  199  204  212  215  217  214  215  219   214 #>  [9890,]  188  198  203  211  214  216  213  214  218   213 #>  [9891,]  189  199  204  212  215  217  214  215  219   214 #>  [9892,]  189  199  204  212  215  217  214  215  219   214 #>  [9893,]  189  199  204  212  215  217  214  215  219   214 #>  [9894,]  189  199  204  212  215  217  214  215  219   214 #>  [9895,]  189  199  204  212  215  217  214  215  219   214 #>  [9896,]  189  199  204  212  215  217  214  215  219   214 #>  [9897,]  189  199  204  212  215  217  214  215  219   214 #>  [9898,]  188  198  203  211  214  216  213  214  218   213 #>  [9899,]  189  199  204  212  215  217  214  215  219   214 #>  [9900,]  188  198  203  211  214  216  213  214  218   213 #>  [9901,]  190  200  205  213  216  219  215  216  220   215 #>  [9902,]  190  200  205  213  216  219  215  216  220   215 #>  [9903,]  190  200  205  213  216  219  215  216  220   215 #>  [9904,]  190  200  205  213  216  219  215  216  220   215 #>  [9905,]  190  200  205  213  216  219  215  216  220   215 #>  [9906,]  190  200  205  213  216  219  215  216  220   215 #>  [9907,]  190  200  205  213  216  219  215  216  220   215 #>  [9908,]  191  201  206  214  217  220  216  217  221   216 #>  [9909,]  190  200  205  213  216  219  215  216  220   215 #>  [9910,]  190  200  205  213  216  219  215  216  220   215 #>  [9911,]  190  200  205  213  216  219  215  216  220   215 #>  [9912,]  190  200  205  213  216  219  215  216  220   215 #>  [9913,]  191  201  206  214  217  220  216  217  221   217 #>  [9914,]  190  200  205  213  216  219  215  216  220   215 #>  [9915,]  191  201  206  214  217  220  216  217  221   216 #>  [9916,]  190  200  205  213  216  219  215  216  220   215 #>  [9917,]  190  200  205  213  216  219  215  216  220   215 #>  [9918,]  190  200  205  213  216  219  215  216  220   215 #>  [9919,]  191  201  206  214  217  220  216  217  221   217 #>  [9920,]  191  201  206  214  217  220  216  217  221   217 #>  [9921,]  190  200  205  213  216  219  215  216  220   215 #>  [9922,]  191  201  206  214  217  220  216  217  221   217 #>  [9923,]  190  200  205  213  216  219  215  216  220   215 #>  [9924,]  190  200  205  213  216  219  215  216  220   215 #>  [9925,]  190  200  205  213  216  219  215  216  220   215 #>  [9926,]  190  200  205  213  216  219  215  216  220   215 #>  [9927,]  191  201  206  214  217  220  216  217  221   217 #>  [9928,]  190  200  205  213  216  219  215  216  220   215 #>  [9929,]  191  201  206  214  217  220  216  217  221   217 #>  [9930,]  190  200  205  213  216  219  215  216  220   215 #>  [9931,]  190  200  205  213  216  219  215  216  220   215 #>  [9932,]  190  200  205  213  216  219  215  216  220   215 #>  [9933,]  190  200  205  213  216  219  215  216  220   215 #>  [9934,]  190  200  205  213  216  219  215  216  220   215 #>  [9935,]  190  200  205  213  216  219  215  216  220   215 #>  [9936,]  191  201  206  214  217  220  216  217  221   217 #>  [9937,]  191  201  206  214  217  220  216  217  221   216 #>  [9938,]  191  201  206  214  217  220  216  217  221   217 #>  [9939,]  190  200  205  213  216  219  215  216  220   215 #>  [9940,]  190  200  205  213  216  219  215  216  220   215 #>  [9941,]  191  201  206  214  217  220  216  217  221   217 #>  [9942,]  190  200  205  213  216  219  215  216  220   215 #>  [9943,]  190  200  205  213  216  219  215  216  220   215 #>  [9944,]  190  200  205  213  216  219  215  216  220   215 #>  [9945,]  190  200  205  213  216  219  215  216  220   215 #>  [9946,]  191  201  206  214  217  220  216  217  221   216 #>  [9947,]  190  200  205  213  216  219  215  216  220   215 #>  [9948,]  190  200  205  213  216  219  215  216  220   215 #>  [9949,]  190  200  205  213  216  219  215  216  220   215 #>  [9950,]  191  201  206  214  217  220  216  217  221   217 #>  [9951,]  191  201  206  214  217  220  216  217  221   217 #>  [9952,]  190  200  205  213  216  219  215  216  220   215 #>  [9953,]  191  201  206  214  217  220  216  217  221   217 #>  [9954,]  190  200  205  213  216  219  215  216  220   215 #>  [9955,]  191  201  206  214  217  220  216  217  221   216 #>  [9956,]  190  200  205  213  216  219  215  216  220   215 #>  [9957,]  190  200  205  213  216  219  215  216  220   215 #>  [9958,]  191  201  206  214  217  220  216  217  221   217 #>  [9959,]  190  200  205  213  216  219  215  216  220   215 #>  [9960,]  191  201  206  214  217  220  216  217  221   216 #>  [9961,]  190  200  205  213  216  219  215  216  220   215 #>  [9962,]  190  200  205  213  216  219  215  216  220   215 #>  [9963,]  190  200  205  213  216  219  215  216  220   215 #>  [9964,]  191  201  206  214  217  220  216  217  221   217 #>  [9965,]  190  200  205  213  216  219  215  216  220   215 #>  [9966,]  191  201  206  214  217  220  216  217  221   217 #>  [9967,]  190  200  205  213  216  219  215  216  220   215 #>  [9968,]  190  200  205  213  216  219  215  216  220   215 #>  [9969,]  191  201  206  214  217  220  216  217  221   216 #>  [9970,]  190  200  205  213  216  219  215  216  220   215 #>  [9971,]  191  201  206  214  217  220  216  217  221   216 #>  [9972,]  190  200  205  213  216  219  215  216  220   215 #>  [9973,]  190  200  205  213  216  219  215  216  220   215 #>  [9974,]  190  200  205  213  216  219  215  216  220   215 #>  [9975,]  190  200  205  213  216  219  215  216  220   215 #>  [9976,]  190  200  205  213  216  219  215  216  220   215 #>  [9977,]  191  201  206  214  217  220  216  217  221   217 #>  [9978,]  190  200  205  213  216  219  215  216  220   215 #>  [9979,]  190  200  205  213  216  219  215  216  220   215 #>  [9980,]  191  201  206  214  217  220  216  217  221   216 #>  [9981,]  191  201  206  214  217  220  216  217  221   217 #>  [9982,]  190  200  205  213  216  219  215  216  220   215 #>  [9983,]  191  201  206  214  217  220  216  217  221   217 #>  [9984,]  191  201  206  214  217  220  216  217  221   217 #>  [9985,]  191  201  206  214  217  220  216  217  221   217 #>  [9986,]  190  200  205  213  216  219  215  216  220   215 #>  [9987,]  191  201  206  214  217  220  216  217  221   217 #>  [9988,]  190  200  205  213  216  219  215  216  220   215 #>  [9989,]  190  200  205  213  216  219  215  216  220   215 #>  [9990,]  191  201  206  214  217  220  216  217  221   217 #>  [9991,]  190  200  205  213  216  219  215  216  220   215 #>  [9992,]  190  200  205  213  216  219  215  216  220   215 #>  [9993,]  190  200  205  213  216  219  215  216  220   215 #>  [9994,]  190  200  205  213  216  219  215  216  220   215 #>  [9995,]  190  200  205  213  216  219  215  216  220   215 #>  [9996,]  191  201  206  214  217  220  216  217  221   216 #>  [9997,]  191  201  206  214  217  220  216  217  221   216 #>  [9998,]  190  200  205  213  216  219  215  216  220   215 #>  [9999,]  190  200  205  213  216  219  215  216  220   215 #>  [ reached getOption(\"max.print\") -- omitted 10001 rows ] computeForestLeafIndices(bart_model, X, \"mean\", 0) #>          [,1] #>     [1,]    1 #>     [2,]    0 #>     [3,]    0 #>     [4,]    0 #>     [5,]    1 #>     [6,]    1 #>     [7,]    0 #>     [8,]    1 #>     [9,]    1 #>    [10,]    0 #>    [11,]    0 #>    [12,]    1 #>    [13,]    0 #>    [14,]    1 #>    [15,]    1 #>    [16,]    0 #>    [17,]    0 #>    [18,]    0 #>    [19,]    0 #>    [20,]    1 #>    [21,]    0 #>    [22,]    0 #>    [23,]    0 #>    [24,]    0 #>    [25,]    0 #>    [26,]    1 #>    [27,]    0 #>    [28,]    1 #>    [29,]    0 #>    [30,]    0 #>    [31,]    0 #>    [32,]    0 #>    [33,]    1 #>    [34,]    0 #>    [35,]    0 #>    [36,]    0 #>    [37,]    0 #>    [38,]    1 #>    [39,]    0 #>    [40,]    0 #>    [41,]    1 #>    [42,]    0 #>    [43,]    1 #>    [44,]    0 #>    [45,]    1 #>    [46,]    1 #>    [47,]    0 #>    [48,]    0 #>    [49,]    0 #>    [50,]    1 #>    [51,]    1 #>    [52,]    0 #>    [53,]    1 #>    [54,]    0 #>    [55,]    1 #>    [56,]    1 #>    [57,]    1 #>    [58,]    1 #>    [59,]    0 #>    [60,]    1 #>    [61,]    1 #>    [62,]    0 #>    [63,]    0 #>    [64,]    1 #>    [65,]    1 #>    [66,]    1 #>    [67,]    0 #>    [68,]    1 #>    [69,]    0 #>    [70,]    0 #>    [71,]    1 #>    [72,]    1 #>    [73,]    1 #>    [74,]    1 #>    [75,]    1 #>    [76,]    1 #>    [77,]    0 #>    [78,]    1 #>    [79,]    0 #>    [80,]    0 #>    [81,]    1 #>    [82,]    0 #>    [83,]    0 #>    [84,]    0 #>    [85,]    0 #>    [86,]    0 #>    [87,]    1 #>    [88,]    0 #>    [89,]    0 #>    [90,]    0 #>    [91,]    0 #>    [92,]    1 #>    [93,]    0 #>    [94,]    1 #>    [95,]    0 #>    [96,]    1 #>    [97,]    1 #>    [98,]    0 #>    [99,]    0 #>   [100,]    0 #>   [101,]    2 #>   [102,]    2 #>   [103,]    2 #>   [104,]    2 #>   [105,]    2 #>   [106,]    2 #>   [107,]    2 #>   [108,]    2 #>   [109,]    2 #>   [110,]    2 #>   [111,]    2 #>   [112,]    2 #>   [113,]    2 #>   [114,]    2 #>   [115,]    2 #>   [116,]    2 #>   [117,]    2 #>   [118,]    2 #>   [119,]    2 #>   [120,]    2 #>   [121,]    2 #>   [122,]    2 #>   [123,]    2 #>   [124,]    2 #>   [125,]    2 #>   [126,]    2 #>   [127,]    2 #>   [128,]    2 #>   [129,]    2 #>   [130,]    2 #>   [131,]    2 #>   [132,]    2 #>   [133,]    2 #>   [134,]    2 #>   [135,]    2 #>   [136,]    2 #>   [137,]    2 #>   [138,]    2 #>   [139,]    2 #>   [140,]    2 #>   [141,]    2 #>   [142,]    2 #>   [143,]    2 #>   [144,]    2 #>   [145,]    2 #>   [146,]    2 #>   [147,]    2 #>   [148,]    2 #>   [149,]    2 #>   [150,]    2 #>   [151,]    2 #>   [152,]    2 #>   [153,]    2 #>   [154,]    2 #>   [155,]    2 #>   [156,]    2 #>   [157,]    2 #>   [158,]    2 #>   [159,]    2 #>   [160,]    2 #>   [161,]    2 #>   [162,]    2 #>   [163,]    2 #>   [164,]    2 #>   [165,]    2 #>   [166,]    2 #>   [167,]    2 #>   [168,]    2 #>   [169,]    2 #>   [170,]    2 #>   [171,]    2 #>   [172,]    2 #>   [173,]    2 #>   [174,]    2 #>   [175,]    2 #>   [176,]    2 #>   [177,]    2 #>   [178,]    2 #>   [179,]    2 #>   [180,]    2 #>   [181,]    2 #>   [182,]    2 #>   [183,]    2 #>   [184,]    2 #>   [185,]    2 #>   [186,]    2 #>   [187,]    2 #>   [188,]    2 #>   [189,]    2 #>   [190,]    2 #>   [191,]    2 #>   [192,]    2 #>   [193,]    2 #>   [194,]    2 #>   [195,]    2 #>   [196,]    2 #>   [197,]    2 #>   [198,]    2 #>   [199,]    2 #>   [200,]    2 #>   [201,]    4 #>   [202,]    3 #>   [203,]    4 #>   [204,]    4 #>   [205,]    4 #>   [206,]    3 #>   [207,]    4 #>   [208,]    4 #>   [209,]    4 #>   [210,]    4 #>   [211,]    3 #>   [212,]    3 #>   [213,]    4 #>   [214,]    4 #>   [215,]    3 #>   [216,]    4 #>   [217,]    3 #>   [218,]    3 #>   [219,]    3 #>   [220,]    4 #>   [221,]    3 #>   [222,]    4 #>   [223,]    3 #>   [224,]    4 #>   [225,]    4 #>   [226,]    3 #>   [227,]    4 #>   [228,]    4 #>   [229,]    3 #>   [230,]    3 #>   [231,]    3 #>   [232,]    3 #>   [233,]    4 #>   [234,]    3 #>   [235,]    3 #>   [236,]    4 #>   [237,]    3 #>   [238,]    3 #>   [239,]    4 #>   [240,]    4 #>   [241,]    4 #>   [242,]    3 #>   [243,]    3 #>   [244,]    3 #>   [245,]    4 #>   [246,]    3 #>   [247,]    3 #>   [248,]    3 #>   [249,]    4 #>   [250,]    4 #>   [251,]    3 #>   [252,]    4 #>   [253,]    4 #>   [254,]    4 #>   [255,]    4 #>   [256,]    3 #>   [257,]    4 #>   [258,]    4 #>   [259,]    4 #>   [260,]    3 #>   [261,]    3 #>   [262,]    3 #>   [263,]    3 #>   [264,]    3 #>   [265,]    3 #>   [266,]    3 #>   [267,]    4 #>   [268,]    3 #>   [269,]    3 #>   [270,]    3 #>   [271,]    4 #>   [272,]    4 #>   [273,]    4 #>   [274,]    4 #>   [275,]    3 #>   [276,]    4 #>   [277,]    4 #>   [278,]    3 #>   [279,]    3 #>   [280,]    4 #>   [281,]    3 #>   [282,]    3 #>   [283,]    3 #>   [284,]    4 #>   [285,]    4 #>   [286,]    4 #>   [287,]    4 #>   [288,]    4 #>   [289,]    3 #>   [290,]    4 #>   [291,]    4 #>   [292,]    3 #>   [293,]    3 #>   [294,]    3 #>   [295,]    3 #>   [296,]    3 #>   [297,]    3 #>   [298,]    3 #>   [299,]    4 #>   [300,]    3 #>   [301,]    6 #>   [302,]    6 #>   [303,]    5 #>   [304,]    6 #>   [305,]    6 #>   [306,]    5 #>   [307,]    5 #>   [308,]    6 #>   [309,]    6 #>   [310,]    6 #>   [311,]    6 #>   [312,]    6 #>   [313,]    6 #>   [314,]    6 #>   [315,]    6 #>   [316,]    6 #>   [317,]    6 #>   [318,]    6 #>   [319,]    6 #>   [320,]    5 #>   [321,]    5 #>   [322,]    6 #>   [323,]    5 #>   [324,]    6 #>   [325,]    5 #>   [326,]    6 #>   [327,]    6 #>   [328,]    6 #>   [329,]    6 #>   [330,]    6 #>   [331,]    6 #>   [332,]    6 #>   [333,]    6 #>   [334,]    5 #>   [335,]    5 #>   [336,]    6 #>   [337,]    5 #>   [338,]    6 #>   [339,]    6 #>   [340,]    6 #>   [341,]    6 #>   [342,]    5 #>   [343,]    6 #>   [344,]    5 #>   [345,]    6 #>   [346,]    6 #>   [347,]    6 #>   [348,]    6 #>   [349,]    6 #>   [350,]    5 #>   [351,]    6 #>   [352,]    6 #>   [353,]    5 #>   [354,]    5 #>   [355,]    5 #>   [356,]    5 #>   [357,]    5 #>   [358,]    6 #>   [359,]    6 #>   [360,]    6 #>   [361,]    6 #>   [362,]    6 #>   [363,]    6 #>   [364,]    5 #>   [365,]    5 #>   [366,]    6 #>   [367,]    6 #>   [368,]    6 #>   [369,]    6 #>   [370,]    6 #>   [371,]    6 #>   [372,]    6 #>   [373,]    5 #>   [374,]    5 #>   [375,]    6 #>   [376,]    6 #>   [377,]    6 #>   [378,]    6 #>   [379,]    6 #>   [380,]    5 #>   [381,]    5 #>   [382,]    5 #>   [383,]    6 #>   [384,]    5 #>   [385,]    5 #>   [386,]    5 #>   [387,]    6 #>   [388,]    5 #>   [389,]    5 #>   [390,]    6 #>   [391,]    6 #>   [392,]    6 #>   [393,]    6 #>   [394,]    5 #>   [395,]    6 #>   [396,]    6 #>   [397,]    5 #>   [398,]    5 #>   [399,]    5 #>   [400,]    6 #>   [401,]    8 #>   [402,]    7 #>   [403,]    8 #>   [404,]    8 #>   [405,]    7 #>   [406,]    7 #>   [407,]    8 #>   [408,]    7 #>   [409,]    8 #>   [410,]    8 #>   [411,]    7 #>   [412,]    7 #>   [413,]    8 #>   [414,]    8 #>   [415,]    7 #>   [416,]    8 #>   [417,]    7 #>   [418,]    7 #>   [419,]    7 #>   [420,]    8 #>   [421,]    7 #>   [422,]    8 #>   [423,]    7 #>   [424,]    8 #>   [425,]    8 #>   [426,]    7 #>   [427,]    8 #>   [428,]    8 #>   [429,]    7 #>   [430,]    7 #>   [431,]    7 #>   [432,]    7 #>   [433,]    8 #>   [434,]    7 #>   [435,]    7 #>   [436,]    8 #>   [437,]    7 #>   [438,]    7 #>   [439,]    8 #>   [440,]    7 #>   [441,]    8 #>   [442,]    7 #>   [443,]    7 #>   [444,]    7 #>   [445,]    8 #>   [446,]    7 #>   [447,]    7 #>   [448,]    7 #>   [449,]    8 #>   [450,]    8 #>   [451,]    7 #>   [452,]    8 #>   [453,]    8 #>   [454,]    8 #>   [455,]    8 #>   [456,]    7 #>   [457,]    8 #>   [458,]    8 #>   [459,]    8 #>   [460,]    7 #>   [461,]    7 #>   [462,]    7 #>   [463,]    7 #>   [464,]    7 #>   [465,]    7 #>   [466,]    7 #>   [467,]    8 #>   [468,]    7 #>   [469,]    7 #>   [470,]    7 #>   [471,]    8 #>   [472,]    8 #>   [473,]    8 #>   [474,]    8 #>   [475,]    7 #>   [476,]    8 #>   [477,]    8 #>   [478,]    7 #>   [479,]    7 #>   [480,]    8 #>   [481,]    7 #>   [482,]    7 #>   [483,]    7 #>   [484,]    8 #>   [485,]    8 #>   [486,]    8 #>   [487,]    8 #>   [488,]    8 #>   [489,]    7 #>   [490,]    8 #>   [491,]    8 #>   [492,]    7 #>   [493,]    7 #>   [494,]    7 #>   [495,]    7 #>   [496,]    7 #>   [497,]    7 #>   [498,]    7 #>   [499,]    7 #>   [500,]    7 #>   [501,]    9 #>   [502,]    9 #>   [503,]    9 #>   [504,]   10 #>   [505,]    9 #>   [506,]    9 #>   [507,]    9 #>   [508,]    9 #>   [509,]    9 #>   [510,]    9 #>   [511,]   10 #>   [512,]   10 #>   [513,]    9 #>   [514,]   10 #>   [515,]   10 #>   [516,]    9 #>   [517,]    9 #>   [518,]    9 #>   [519,]   10 #>   [520,]    9 #>   [521,]   10 #>   [522,]    9 #>   [523,]    9 #>   [524,]    9 #>   [525,]    9 #>   [526,]    9 #>   [527,]   10 #>   [528,]    9 #>   [529,]    9 #>   [530,]    9 #>   [531,]    9 #>   [532,]    9 #>   [533,]    9 #>   [534,]    9 #>   [535,]    9 #>   [536,]    9 #>   [537,]    9 #>   [538,]   10 #>   [539,]    9 #>   [540,]    9 #>   [541,]   10 #>   [542,]   10 #>   [543,]    9 #>   [544,]    9 #>   [545,]    9 #>   [546,]    9 #>   [547,]    9 #>   [548,]   10 #>   [549,]    9 #>   [550,]    9 #>   [551,]    9 #>   [552,]    9 #>   [553,]    9 #>   [554,]    9 #>   [555,]    9 #>   [556,]    9 #>   [557,]    9 #>   [558,]   10 #>   [559,]    9 #>   [560,]    9 #>   [561,]   10 #>   [562,]    9 #>   [563,]    9 #>   [564,]    9 #>   [565,]    9 #>   [566,]    9 #>   [567,]    9 #>   [568,]   10 #>   [569,]   10 #>   [570,]    9 #>   [571,]    9 #>   [572,]    9 #>   [573,]    9 #>   [574,]   10 #>   [575,]   10 #>   [576,]    9 #>   [577,]    9 #>   [578,]    9 #>   [579,]    9 #>   [580,]    9 #>   [581,]    9 #>   [582,]   10 #>   [583,]    9 #>   [584,]    9 #>   [585,]    9 #>   [586,]    9 #>   [587,]    9 #>   [588,]    9 #>   [589,]    9 #>   [590,]    9 #>   [591,]    9 #>   [592,]   10 #>   [593,]   10 #>   [594,]    9 #>   [595,]    9 #>   [596,]   10 #>   [597,]   10 #>   [598,]    9 #>   [599,]    9 #>   [600,]    9 #>   [601,]   12 #>   [602,]   11 #>   [603,]   12 #>   [604,]   12 #>   [605,]   12 #>   [606,]   11 #>   [607,]   12 #>   [608,]   12 #>   [609,]   12 #>   [610,]   12 #>   [611,]   11 #>   [612,]   11 #>   [613,]   12 #>   [614,]   12 #>   [615,]   11 #>   [616,]   12 #>   [617,]   11 #>   [618,]   11 #>   [619,]   11 #>   [620,]   12 #>   [621,]   11 #>   [622,]   12 #>   [623,]   11 #>   [624,]   12 #>   [625,]   12 #>   [626,]   11 #>   [627,]   12 #>   [628,]   12 #>   [629,]   11 #>   [630,]   11 #>   [631,]   11 #>   [632,]   11 #>   [633,]   12 #>   [634,]   11 #>   [635,]   11 #>   [636,]   12 #>   [637,]   11 #>   [638,]   11 #>   [639,]   12 #>   [640,]   11 #>   [641,]   12 #>   [642,]   11 #>   [643,]   11 #>   [644,]   11 #>   [645,]   12 #>   [646,]   11 #>   [647,]   11 #>   [648,]   11 #>   [649,]   12 #>   [650,]   12 #>   [651,]   11 #>   [652,]   12 #>   [653,]   12 #>   [654,]   12 #>   [655,]   12 #>   [656,]   11 #>   [657,]   12 #>   [658,]   12 #>   [659,]   12 #>   [660,]   11 #>   [661,]   11 #>   [662,]   11 #>   [663,]   11 #>   [664,]   11 #>   [665,]   11 #>   [666,]   11 #>   [667,]   12 #>   [668,]   11 #>   [669,]   11 #>   [670,]   11 #>   [671,]   12 #>   [672,]   12 #>   [673,]   12 #>   [674,]   12 #>   [675,]   11 #>   [676,]   12 #>   [677,]   12 #>   [678,]   11 #>   [679,]   11 #>   [680,]   12 #>   [681,]   11 #>   [682,]   11 #>   [683,]   11 #>   [684,]   12 #>   [685,]   12 #>   [686,]   12 #>   [687,]   12 #>   [688,]   12 #>   [689,]   11 #>   [690,]   12 #>   [691,]   12 #>   [692,]   11 #>   [693,]   11 #>   [694,]   11 #>   [695,]   11 #>   [696,]   11 #>   [697,]   11 #>   [698,]   11 #>   [699,]   11 #>   [700,]   11 #>   [701,]   14 #>   [702,]   14 #>   [703,]   13 #>   [704,]   13 #>   [705,]   14 #>   [706,]   14 #>   [707,]   13 #>   [708,]   13 #>   [709,]   14 #>   [710,]   13 #>   [711,]   14 #>   [712,]   13 #>   [713,]   14 #>   [714,]   13 #>   [715,]   14 #>   [716,]   13 #>   [717,]   14 #>   [718,]   14 #>   [719,]   14 #>   [720,]   14 #>   [721,]   14 #>   [722,]   14 #>   [723,]   13 #>   [724,]   14 #>   [725,]   13 #>   [726,]   14 #>   [727,]   14 #>   [728,]   14 #>   [729,]   14 #>   [730,]   14 #>   [731,]   13 #>   [732,]   13 #>   [733,]   14 #>   [734,]   14 #>   [735,]   13 #>   [736,]   14 #>   [737,]   13 #>   [738,]   14 #>   [739,]   14 #>   [740,]   13 #>   [741,]   14 #>   [742,]   14 #>   [743,]   14 #>   [744,]   13 #>   [745,]   14 #>   [746,]   13 #>   [747,]   13 #>   [748,]   14 #>   [749,]   14 #>   [750,]   14 #>   [751,]   14 #>   [752,]   13 #>   [753,]   14 #>   [754,]   14 #>   [755,]   13 #>   [756,]   14 #>   [757,]   13 #>   [758,]   14 #>   [759,]   13 #>   [760,]   13 #>   [761,]   14 #>   [762,]   14 #>   [763,]   14 #>   [764,]   14 #>   [765,]   14 #>   [766,]   14 #>   [767,]   13 #>   [768,]   13 #>   [769,]   14 #>   [770,]   14 #>   [771,]   14 #>   [772,]   13 #>   [773,]   14 #>   [774,]   13 #>   [775,]   13 #>   [776,]   13 #>   [777,]   14 #>   [778,]   13 #>   [779,]   14 #>   [780,]   13 #>   [781,]   14 #>   [782,]   14 #>   [783,]   14 #>   [784,]   14 #>   [785,]   14 #>   [786,]   13 #>   [787,]   14 #>   [788,]   13 #>   [789,]   14 #>   [790,]   14 #>   [791,]   14 #>   [792,]   13 #>   [793,]   14 #>   [794,]   14 #>   [795,]   13 #>   [796,]   13 #>   [797,]   13 #>   [798,]   13 #>   [799,]   14 #>   [800,]   14 #>   [801,]   15 #>   [802,]   16 #>   [803,]   16 #>   [804,]   15 #>   [805,]   15 #>   [806,]   16 #>   [807,]   16 #>   [808,]   15 #>   [809,]   15 #>   [810,]   16 #>   [811,]   15 #>   [812,]   16 #>   [813,]   15 #>   [814,]   15 #>   [815,]   15 #>   [816,]   15 #>   [817,]   15 #>   [818,]   16 #>   [819,]   16 #>   [820,]   16 #>   [821,]   15 #>   [822,]   15 #>   [823,]   16 #>   [824,]   15 #>   [825,]   16 #>   [826,]   15 #>   [827,]   15 #>   [828,]   16 #>   [829,]   16 #>   [830,]   15 #>   [831,]   16 #>   [832,]   16 #>   [833,]   16 #>   [834,]   16 #>   [835,]   15 #>   [836,]   15 #>   [837,]   15 #>   [838,]   15 #>   [839,]   16 #>   [840,]   16 #>   [841,]   15 #>   [842,]   16 #>   [843,]   15 #>   [844,]   15 #>   [845,]   15 #>   [846,]   15 #>   [847,]   16 #>   [848,]   16 #>   [849,]   15 #>   [850,]   16 #>   [851,]   15 #>   [852,]   15 #>   [853,]   15 #>   [854,]   15 #>   [855,]   15 #>   [856,]   16 #>   [857,]   16 #>   [858,]   15 #>   [859,]   15 #>   [860,]   16 #>   [861,]   16 #>   [862,]   15 #>   [863,]   15 #>   [864,]   16 #>   [865,]   16 #>   [866,]   15 #>   [867,]   15 #>   [868,]   15 #>   [869,]   15 #>   [870,]   16 #>   [871,]   16 #>   [872,]   15 #>   [873,]   16 #>   [874,]   15 #>   [875,]   16 #>   [876,]   15 #>   [877,]   16 #>   [878,]   16 #>   [879,]   15 #>   [880,]   15 #>   [881,]   15 #>   [882,]   15 #>   [883,]   15 #>   [884,]   16 #>   [885,]   15 #>   [886,]   16 #>   [887,]   15 #>   [888,]   15 #>   [889,]   15 #>   [890,]   15 #>   [891,]   15 #>   [892,]   15 #>   [893,]   16 #>   [894,]   16 #>   [895,]   15 #>   [896,]   15 #>   [897,]   16 #>   [898,]   16 #>   [899,]   15 #>   [900,]   16 #>   [901,]   17 #>   [902,]   18 #>   [903,]   17 #>   [904,]   17 #>   [905,]   17 #>   [906,]   17 #>   [907,]   17 #>   [908,]   17 #>   [909,]   18 #>   [910,]   18 #>   [911,]   17 #>   [912,]   18 #>   [913,]   18 #>   [914,]   17 #>   [915,]   17 #>   [916,]   17 #>   [917,]   18 #>   [918,]   18 #>   [919,]   17 #>   [920,]   18 #>   [921,]   18 #>   [922,]   17 #>   [923,]   18 #>   [924,]   18 #>   [925,]   17 #>   [926,]   17 #>   [927,]   18 #>   [928,]   17 #>   [929,]   18 #>   [930,]   17 #>   [931,]   18 #>   [932,]   18 #>   [933,]   18 #>   [934,]   17 #>   [935,]   17 #>   [936,]   18 #>   [937,]   17 #>   [938,]   17 #>   [939,]   17 #>   [940,]   18 #>   [941,]   17 #>   [942,]   17 #>   [943,]   17 #>   [944,]   17 #>   [945,]   17 #>   [946,]   17 #>   [947,]   17 #>   [948,]   17 #>   [949,]   17 #>   [950,]   17 #>   [951,]   17 #>   [952,]   17 #>   [953,]   18 #>   [954,]   17 #>   [955,]   17 #>   [956,]   17 #>   [957,]   17 #>   [958,]   17 #>   [959,]   17 #>   [960,]   18 #>   [961,]   18 #>   [962,]   17 #>   [963,]   18 #>   [964,]   17 #>   [965,]   17 #>   [966,]   17 #>   [967,]   17 #>   [968,]   17 #>   [969,]   17 #>   [970,]   18 #>   [971,]   17 #>   [972,]   17 #>   [973,]   17 #>   [974,]   17 #>   [975,]   18 #>   [976,]   17 #>   [977,]   17 #>   [978,]   17 #>   [979,]   17 #>   [980,]   18 #>   [981,]   18 #>   [982,]   17 #>   [983,]   18 #>   [984,]   18 #>   [985,]   17 #>   [986,]   18 #>   [987,]   17 #>   [988,]   18 #>   [989,]   17 #>   [990,]   17 #>   [991,]   17 #>   [992,]   17 #>   [993,]   17 #>   [994,]   17 #>   [995,]   17 #>   [996,]   17 #>   [997,]   17 #>   [998,]   17 #>   [999,]   17 #>  [1000,]   17 #>  [1001,]   19 #>  [1002,]   19 #>  [1003,]   19 #>  [1004,]   19 #>  [1005,]   19 #>  [1006,]   19 #>  [1007,]   19 #>  [1008,]   19 #>  [1009,]   19 #>  [1010,]   19 #>  [1011,]   19 #>  [1012,]   19 #>  [1013,]   19 #>  [1014,]   19 #>  [1015,]   19 #>  [1016,]   19 #>  [1017,]   19 #>  [1018,]   19 #>  [1019,]   19 #>  [1020,]   19 #>  [1021,]   19 #>  [1022,]   19 #>  [1023,]   19 #>  [1024,]   19 #>  [1025,]   19 #>  [1026,]   19 #>  [1027,]   19 #>  [1028,]   19 #>  [1029,]   19 #>  [1030,]   19 #>  [1031,]   19 #>  [1032,]   19 #>  [1033,]   19 #>  [1034,]   19 #>  [1035,]   19 #>  [1036,]   19 #>  [1037,]   19 #>  [1038,]   19 #>  [1039,]   19 #>  [1040,]   19 #>  [1041,]   19 #>  [1042,]   19 #>  [1043,]   19 #>  [1044,]   19 #>  [1045,]   19 #>  [1046,]   19 #>  [1047,]   19 #>  [1048,]   19 #>  [1049,]   19 #>  [1050,]   19 #>  [1051,]   19 #>  [1052,]   19 #>  [1053,]   19 #>  [1054,]   19 #>  [1055,]   19 #>  [1056,]   19 #>  [1057,]   19 #>  [1058,]   19 #>  [1059,]   19 #>  [1060,]   19 #>  [1061,]   19 #>  [1062,]   19 #>  [1063,]   19 #>  [1064,]   19 #>  [1065,]   19 #>  [1066,]   19 #>  [1067,]   19 #>  [1068,]   19 #>  [1069,]   19 #>  [1070,]   19 #>  [1071,]   19 #>  [1072,]   19 #>  [1073,]   19 #>  [1074,]   19 #>  [1075,]   19 #>  [1076,]   19 #>  [1077,]   19 #>  [1078,]   19 #>  [1079,]   19 #>  [1080,]   19 #>  [1081,]   19 #>  [1082,]   19 #>  [1083,]   19 #>  [1084,]   19 #>  [1085,]   19 #>  [1086,]   19 #>  [1087,]   19 #>  [1088,]   19 #>  [1089,]   19 #>  [1090,]   19 #>  [1091,]   19 #>  [1092,]   19 #>  [1093,]   19 #>  [1094,]   19 #>  [1095,]   19 #>  [1096,]   19 #>  [1097,]   19 #>  [1098,]   19 #>  [1099,]   19 #>  [1100,]   19 #>  [1101,]   21 #>  [1102,]   20 #>  [1103,]   20 #>  [1104,]   20 #>  [1105,]   21 #>  [1106,]   20 #>  [1107,]   20 #>  [1108,]   20 #>  [1109,]   20 #>  [1110,]   21 #>  [1111,]   21 #>  [1112,]   21 #>  [1113,]   20 #>  [1114,]   21 #>  [1115,]   21 #>  [1116,]   20 #>  [1117,]   21 #>  [1118,]   21 #>  [1119,]   20 #>  [1120,]   20 #>  [1121,]   20 #>  [1122,]   21 #>  [1123,]   20 #>  [1124,]   20 #>  [1125,]   20 #>  [1126,]   21 #>  [1127,]   21 #>  [1128,]   20 #>  [1129,]   20 #>  [1130,]   20 #>  [1131,]   21 #>  [1132,]   21 #>  [1133,]   20 #>  [1134,]   20 #>  [1135,]   20 #>  [1136,]   20 #>  [1137,]   20 #>  [1138,]   21 #>  [1139,]   20 #>  [1140,]   20 #>  [1141,]   20 #>  [1142,]   20 #>  [1143,]   21 #>  [1144,]   20 #>  [1145,]   20 #>  [1146,]   20 #>  [1147,]   21 #>  [1148,]   20 #>  [1149,]   20 #>  [1150,]   20 #>  [1151,]   20 #>  [1152,]   21 #>  [1153,]   20 #>  [1154,]   20 #>  [1155,]   20 #>  [1156,]   20 #>  [1157,]   20 #>  [1158,]   21 #>  [1159,]   21 #>  [1160,]   20 #>  [1161,]   21 #>  [1162,]   20 #>  [1163,]   20 #>  [1164,]   20 #>  [1165,]   20 #>  [1166,]   21 #>  [1167,]   20 #>  [1168,]   20 #>  [1169,]   20 #>  [1170,]   21 #>  [1171,]   21 #>  [1172,]   20 #>  [1173,]   20 #>  [1174,]   20 #>  [1175,]   21 #>  [1176,]   20 #>  [1177,]   21 #>  [1178,]   20 #>  [1179,]   21 #>  [1180,]   20 #>  [1181,]   20 #>  [1182,]   20 #>  [1183,]   20 #>  [1184,]   20 #>  [1185,]   20 #>  [1186,]   20 #>  [1187,]   21 #>  [1188,]   20 #>  [1189,]   20 #>  [1190,]   21 #>  [1191,]   21 #>  [1192,]   21 #>  [1193,]   20 #>  [1194,]   20 #>  [1195,]   21 #>  [1196,]   20 #>  [1197,]   20 #>  [1198,]   20 #>  [1199,]   20 #>  [1200,]   21 #>  [1201,]   23 #>  [1202,]   23 #>  [1203,]   23 #>  [1204,]   22 #>  [1205,]   23 #>  [1206,]   23 #>  [1207,]   23 #>  [1208,]   22 #>  [1209,]   22 #>  [1210,]   22 #>  [1211,]   23 #>  [1212,]   23 #>  [1213,]   23 #>  [1214,]   23 #>  [1215,]   23 #>  [1216,]   23 #>  [1217,]   23 #>  [1218,]   23 #>  [1219,]   23 #>  [1220,]   23 #>  [1221,]   23 #>  [1222,]   23 #>  [1223,]   23 #>  [1224,]   23 #>  [1225,]   23 #>  [1226,]   23 #>  [1227,]   23 #>  [1228,]   23 #>  [1229,]   23 #>  [1230,]   23 #>  [1231,]   23 #>  [1232,]   23 #>  [1233,]   23 #>  [1234,]   23 #>  [1235,]   23 #>  [1236,]   23 #>  [1237,]   23 #>  [1238,]   23 #>  [1239,]   23 #>  [1240,]   23 #>  [1241,]   23 #>  [1242,]   23 #>  [1243,]   22 #>  [1244,]   23 #>  [1245,]   23 #>  [1246,]   23 #>  [1247,]   23 #>  [1248,]   23 #>  [1249,]   23 #>  [1250,]   23 #>  [1251,]   22 #>  [1252,]   23 #>  [1253,]   23 #>  [1254,]   23 #>  [1255,]   23 #>  [1256,]   23 #>  [1257,]   23 #>  [1258,]   23 #>  [1259,]   23 #>  [1260,]   22 #>  [1261,]   23 #>  [1262,]   23 #>  [1263,]   23 #>  [1264,]   22 #>  [1265,]   23 #>  [1266,]   23 #>  [1267,]   22 #>  [1268,]   23 #>  [1269,]   23 #>  [1270,]   23 #>  [1271,]   23 #>  [1272,]   23 #>  [1273,]   23 #>  [1274,]   23 #>  [1275,]   23 #>  [1276,]   23 #>  [1277,]   23 #>  [1278,]   22 #>  [1279,]   23 #>  [1280,]   23 #>  [1281,]   23 #>  [1282,]   23 #>  [1283,]   23 #>  [1284,]   23 #>  [1285,]   22 #>  [1286,]   23 #>  [1287,]   23 #>  [1288,]   23 #>  [1289,]   22 #>  [1290,]   23 #>  [1291,]   22 #>  [1292,]   23 #>  [1293,]   23 #>  [1294,]   23 #>  [1295,]   22 #>  [1296,]   23 #>  [1297,]   23 #>  [1298,]   23 #>  [1299,]   23 #>  [1300,]   23 #>  [1301,]   25 #>  [1302,]   24 #>  [1303,]   24 #>  [1304,]   24 #>  [1305,]   25 #>  [1306,]   24 #>  [1307,]   24 #>  [1308,]   24 #>  [1309,]   24 #>  [1310,]   25 #>  [1311,]   25 #>  [1312,]   25 #>  [1313,]   24 #>  [1314,]   25 #>  [1315,]   25 #>  [1316,]   25 #>  [1317,]   25 #>  [1318,]   25 #>  [1319,]   25 #>  [1320,]   24 #>  [1321,]   24 #>  [1322,]   25 #>  [1323,]   24 #>  [1324,]   25 #>  [1325,]   24 #>  [1326,]   25 #>  [1327,]   25 #>  [1328,]   24 #>  [1329,]   24 #>  [1330,]   24 #>  [1331,]   25 #>  [1332,]   25 #>  [1333,]   24 #>  [1334,]   24 #>  [1335,]   24 #>  [1336,]   24 #>  [1337,]   24 #>  [1338,]   25 #>  [1339,]   25 #>  [1340,]   24 #>  [1341,]   24 #>  [1342,]   24 #>  [1343,]   25 #>  [1344,]   24 #>  [1345,]   24 #>  [1346,]   24 #>  [1347,]   25 #>  [1348,]   24 #>  [1349,]   24 #>  [1350,]   24 #>  [1351,]   25 #>  [1352,]   25 #>  [1353,]   24 #>  [1354,]   24 #>  [1355,]   24 #>  [1356,]   24 #>  [1357,]   24 #>  [1358,]   25 #>  [1359,]   25 #>  [1360,]   24 #>  [1361,]   25 #>  [1362,]   24 #>  [1363,]   24 #>  [1364,]   24 #>  [1365,]   24 #>  [1366,]   25 #>  [1367,]   24 #>  [1368,]   25 #>  [1369,]   24 #>  [1370,]   25 #>  [1371,]   25 #>  [1372,]   24 #>  [1373,]   24 #>  [1374,]   24 #>  [1375,]   25 #>  [1376,]   24 #>  [1377,]   25 #>  [1378,]   24 #>  [1379,]   25 #>  [1380,]   24 #>  [1381,]   24 #>  [1382,]   24 #>  [1383,]   25 #>  [1384,]   24 #>  [1385,]   24 #>  [1386,]   24 #>  [1387,]   25 #>  [1388,]   24 #>  [1389,]   24 #>  [1390,]   25 #>  [1391,]   25 #>  [1392,]   25 #>  [1393,]   24 #>  [1394,]   24 #>  [1395,]   25 #>  [1396,]   25 #>  [1397,]   24 #>  [1398,]   24 #>  [1399,]   24 #>  [1400,]   25 #>  [1401,]   27 #>  [1402,]   27 #>  [1403,]   26 #>  [1404,]   26 #>  [1405,]   27 #>  [1406,]   27 #>  [1407,]   26 #>  [1408,]   26 #>  [1409,]   27 #>  [1410,]   27 #>  [1411,]   27 #>  [1412,]   26 #>  [1413,]   27 #>  [1414,]   27 #>  [1415,]   27 #>  [1416,]   27 #>  [1417,]   27 #>  [1418,]   27 #>  [1419,]   27 #>  [1420,]   27 #>  [1421,]   27 #>  [1422,]   27 #>  [1423,]   27 #>  [1424,]   27 #>  [1425,]   26 #>  [1426,]   27 #>  [1427,]   27 #>  [1428,]   27 #>  [1429,]   27 #>  [1430,]   27 #>  [1431,]   26 #>  [1432,]   27 #>  [1433,]   27 #>  [1434,]   27 #>  [1435,]   27 #>  [1436,]   27 #>  [1437,]   27 #>  [1438,]   27 #>  [1439,]   27 #>  [1440,]   27 #>  [1441,]   27 #>  [1442,]   27 #>  [1443,]   27 #>  [1444,]   27 #>  [1445,]   27 #>  [1446,]   27 #>  [1447,]   27 #>  [1448,]   27 #>  [1449,]   27 #>  [1450,]   27 #>  [1451,]   27 #>  [1452,]   26 #>  [1453,]   27 #>  [1454,]   27 #>  [1455,]   27 #>  [1456,]   27 #>  [1457,]   26 #>  [1458,]   27 #>  [1459,]   26 #>  [1460,]   26 #>  [1461,]   27 #>  [1462,]   27 #>  [1463,]   27 #>  [1464,]   27 #>  [1465,]   27 #>  [1466,]   27 #>  [1467,]   27 #>  [1468,]   26 #>  [1469,]   27 #>  [1470,]   27 #>  [1471,]   27 #>  [1472,]   27 #>  [1473,]   27 #>  [1474,]   27 #>  [1475,]   27 #>  [1476,]   27 #>  [1477,]   27 #>  [1478,]   27 #>  [1479,]   27 #>  [1480,]   27 #>  [1481,]   27 #>  [1482,]   27 #>  [1483,]   27 #>  [1484,]   27 #>  [1485,]   27 #>  [1486,]   27 #>  [1487,]   27 #>  [1488,]   27 #>  [1489,]   27 #>  [1490,]   27 #>  [1491,]   27 #>  [1492,]   27 #>  [1493,]   27 #>  [1494,]   27 #>  [1495,]   27 #>  [1496,]   26 #>  [1497,]   26 #>  [1498,]   27 #>  [1499,]   27 #>  [1500,]   27 #>  [1501,]   29 #>  [1502,]   28 #>  [1503,]   28 #>  [1504,]   28 #>  [1505,]   29 #>  [1506,]   28 #>  [1507,]   28 #>  [1508,]   28 #>  [1509,]   28 #>  [1510,]   28 #>  [1511,]   28 #>  [1512,]   28 #>  [1513,]   28 #>  [1514,]   29 #>  [1515,]   29 #>  [1516,]   28 #>  [1517,]   28 #>  [1518,]   29 #>  [1519,]   28 #>  [1520,]   28 #>  [1521,]   28 #>  [1522,]   28 #>  [1523,]   28 #>  [1524,]   28 #>  [1525,]   28 #>  [1526,]   28 #>  [1527,]   29 #>  [1528,]   28 #>  [1529,]   28 #>  [1530,]   28 #>  [1531,]   28 #>  [1532,]   29 #>  [1533,]   28 #>  [1534,]   28 #>  [1535,]   28 #>  [1536,]   28 #>  [1537,]   28 #>  [1538,]   28 #>  [1539,]   28 #>  [1540,]   28 #>  [1541,]   28 #>  [1542,]   28 #>  [1543,]   28 #>  [1544,]   28 #>  [1545,]   28 #>  [1546,]   28 #>  [1547,]   28 #>  [1548,]   28 #>  [1549,]   28 #>  [1550,]   28 #>  [1551,]   28 #>  [1552,]   28 #>  [1553,]   28 #>  [1554,]   28 #>  [1555,]   28 #>  [1556,]   28 #>  [1557,]   28 #>  [1558,]   28 #>  [1559,]   28 #>  [1560,]   28 #>  [1561,]   28 #>  [1562,]   28 #>  [1563,]   28 #>  [1564,]   28 #>  [1565,]   28 #>  [1566,]   28 #>  [1567,]   28 #>  [1568,]   28 #>  [1569,]   28 #>  [1570,]   28 #>  [1571,]   29 #>  [1572,]   28 #>  [1573,]   28 #>  [1574,]   28 #>  [1575,]   29 #>  [1576,]   28 #>  [1577,]   28 #>  [1578,]   28 #>  [1579,]   28 #>  [1580,]   28 #>  [1581,]   28 #>  [1582,]   28 #>  [1583,]   28 #>  [1584,]   28 #>  [1585,]   28 #>  [1586,]   28 #>  [1587,]   28 #>  [1588,]   28 #>  [1589,]   28 #>  [1590,]   28 #>  [1591,]   29 #>  [1592,]   28 #>  [1593,]   28 #>  [1594,]   28 #>  [1595,]   29 #>  [1596,]   28 #>  [1597,]   28 #>  [1598,]   28 #>  [1599,]   28 #>  [1600,]   29 #>  [1601,]   31 #>  [1602,]   31 #>  [1603,]   30 #>  [1604,]   31 #>  [1605,]   30 #>  [1606,]   31 #>  [1607,]   30 #>  [1608,]   30 #>  [1609,]   31 #>  [1610,]   31 #>  [1611,]   31 #>  [1612,]   31 #>  [1613,]   30 #>  [1614,]   31 #>  [1615,]   31 #>  [1616,]   30 #>  [1617,]   30 #>  [1618,]   31 #>  [1619,]   31 #>  [1620,]   30 #>  [1621,]   31 #>  [1622,]   30 #>  [1623,]   31 #>  [1624,]   30 #>  [1625,]   30 #>  [1626,]   31 #>  [1627,]   31 #>  [1628,]   31 #>  [1629,]   30 #>  [1630,]   31 #>  [1631,]   31 #>  [1632,]   31 #>  [1633,]   31 #>  [1634,]   31 #>  [1635,]   31 #>  [1636,]   31 #>  [1637,]   31 #>  [1638,]   31 #>  [1639,]   30 #>  [1640,]   30 #>  [1641,]   31 #>  [1642,]   31 #>  [1643,]   30 #>  [1644,]   30 #>  [1645,]   30 #>  [1646,]   30 #>  [1647,]   30 #>  [1648,]   31 #>  [1649,]   30 #>  [1650,]   30 #>  [1651,]   30 #>  [1652,]   31 #>  [1653,]   30 #>  [1654,]   30 #>  [1655,]   30 #>  [1656,]   30 #>  [1657,]   31 #>  [1658,]   31 #>  [1659,]   30 #>  [1660,]   31 #>  [1661,]   31 #>  [1662,]   31 #>  [1663,]   30 #>  [1664,]   31 #>  [1665,]   30 #>  [1666,]   30 #>  [1667,]   31 #>  [1668,]   31 #>  [1669,]   31 #>  [1670,]   30 #>  [1671,]   30 #>  [1672,]   30 #>  [1673,]   31 #>  [1674,]   31 #>  [1675,]   31 #>  [1676,]   30 #>  [1677,]   30 #>  [1678,]   30 #>  [1679,]   30 #>  [1680,]   31 #>  [1681,]   31 #>  [1682,]   31 #>  [1683,]   30 #>  [1684,]   30 #>  [1685,]   31 #>  [1686,]   30 #>  [1687,]   31 #>  [1688,]   31 #>  [1689,]   30 #>  [1690,]   30 #>  [1691,]   31 #>  [1692,]   31 #>  [1693,]   31 #>  [1694,]   30 #>  [1695,]   31 #>  [1696,]   31 #>  [1697,]   31 #>  [1698,]   30 #>  [1699,]   31 #>  [1700,]   30 #>  [1701,]   32 #>  [1702,]   32 #>  [1703,]   32 #>  [1704,]   32 #>  [1705,]   32 #>  [1706,]   32 #>  [1707,]   32 #>  [1708,]   32 #>  [1709,]   32 #>  [1710,]   33 #>  [1711,]   32 #>  [1712,]   32 #>  [1713,]   32 #>  [1714,]   32 #>  [1715,]   32 #>  [1716,]   32 #>  [1717,]   32 #>  [1718,]   33 #>  [1719,]   32 #>  [1720,]   32 #>  [1721,]   32 #>  [1722,]   32 #>  [1723,]   32 #>  [1724,]   32 #>  [1725,]   33 #>  [1726,]   32 #>  [1727,]   32 #>  [1728,]   32 #>  [1729,]   32 #>  [1730,]   32 #>  [1731,]   32 #>  [1732,]   32 #>  [1733,]   32 #>  [1734,]   32 #>  [1735,]   32 #>  [1736,]   32 #>  [1737,]   32 #>  [1738,]   32 #>  [1739,]   33 #>  [1740,]   32 #>  [1741,]   32 #>  [1742,]   32 #>  [1743,]   33 #>  [1744,]   32 #>  [1745,]   33 #>  [1746,]   32 #>  [1747,]   32 #>  [1748,]   32 #>  [1749,]   32 #>  [1750,]   32 #>  [1751,]   32 #>  [1752,]   32 #>  [1753,]   32 #>  [1754,]   32 #>  [1755,]   32 #>  [1756,]   32 #>  [1757,]   32 #>  [1758,]   32 #>  [1759,]   32 #>  [1760,]   32 #>  [1761,]   32 #>  [1762,]   32 #>  [1763,]   32 #>  [1764,]   32 #>  [1765,]   32 #>  [1766,]   32 #>  [1767,]   32 #>  [1768,]   32 #>  [1769,]   32 #>  [1770,]   32 #>  [1771,]   32 #>  [1772,]   32 #>  [1773,]   33 #>  [1774,]   32 #>  [1775,]   33 #>  [1776,]   32 #>  [1777,]   33 #>  [1778,]   32 #>  [1779,]   32 #>  [1780,]   32 #>  [1781,]   32 #>  [1782,]   32 #>  [1783,]   32 #>  [1784,]   32 #>  [1785,]   32 #>  [1786,]   32 #>  [1787,]   32 #>  [1788,]   32 #>  [1789,]   32 #>  [1790,]   32 #>  [1791,]   32 #>  [1792,]   32 #>  [1793,]   32 #>  [1794,]   32 #>  [1795,]   32 #>  [1796,]   32 #>  [1797,]   32 #>  [1798,]   32 #>  [1799,]   32 #>  [1800,]   32 #>  [1801,]   35 #>  [1802,]   34 #>  [1803,]   35 #>  [1804,]   35 #>  [1805,]   35 #>  [1806,]   34 #>  [1807,]   35 #>  [1808,]   35 #>  [1809,]   35 #>  [1810,]   35 #>  [1811,]   34 #>  [1812,]   34 #>  [1813,]   35 #>  [1814,]   35 #>  [1815,]   34 #>  [1816,]   35 #>  [1817,]   34 #>  [1818,]   35 #>  [1819,]   34 #>  [1820,]   35 #>  [1821,]   35 #>  [1822,]   35 #>  [1823,]   34 #>  [1824,]   35 #>  [1825,]   35 #>  [1826,]   34 #>  [1827,]   35 #>  [1828,]   35 #>  [1829,]   34 #>  [1830,]   34 #>  [1831,]   34 #>  [1832,]   35 #>  [1833,]   35 #>  [1834,]   34 #>  [1835,]   34 #>  [1836,]   35 #>  [1837,]   34 #>  [1838,]   35 #>  [1839,]   35 #>  [1840,]   35 #>  [1841,]   35 #>  [1842,]   34 #>  [1843,]   34 #>  [1844,]   34 #>  [1845,]   35 #>  [1846,]   34 #>  [1847,]   34 #>  [1848,]   34 #>  [1849,]   35 #>  [1850,]   35 #>  [1851,]   35 #>  [1852,]   35 #>  [1853,]   35 #>  [1854,]   35 #>  [1855,]   35 #>  [1856,]   34 #>  [1857,]   35 #>  [1858,]   35 #>  [1859,]   35 #>  [1860,]   34 #>  [1861,]   34 #>  [1862,]   35 #>  [1863,]   34 #>  [1864,]   34 #>  [1865,]   34 #>  [1866,]   34 #>  [1867,]   35 #>  [1868,]   34 #>  [1869,]   35 #>  [1870,]   34 #>  [1871,]   35 #>  [1872,]   35 #>  [1873,]   35 #>  [1874,]   35 #>  [1875,]   34 #>  [1876,]   35 #>  [1877,]   35 #>  [1878,]   34 #>  [1879,]   34 #>  [1880,]   35 #>  [1881,]   34 #>  [1882,]   35 #>  [1883,]   35 #>  [1884,]   35 #>  [1885,]   35 #>  [1886,]   35 #>  [1887,]   35 #>  [1888,]   35 #>  [1889,]   35 #>  [1890,]   35 #>  [1891,]   35 #>  [1892,]   34 #>  [1893,]   34 #>  [1894,]   34 #>  [1895,]   34 #>  [1896,]   34 #>  [1897,]   35 #>  [1898,]   35 #>  [1899,]   35 #>  [1900,]   34 #>  [1901,]   37 #>  [1902,]   36 #>  [1903,]   36 #>  [1904,]   37 #>  [1905,]   37 #>  [1906,]   37 #>  [1907,]   36 #>  [1908,]   37 #>  [1909,]   37 #>  [1910,]   37 #>  [1911,]   37 #>  [1912,]   37 #>  [1913,]   36 #>  [1914,]   37 #>  [1915,]   37 #>  [1916,]   36 #>  [1917,]   37 #>  [1918,]   36 #>  [1919,]   36 #>  [1920,]   37 #>  [1921,]   36 #>  [1922,]   36 #>  [1923,]   36 #>  [1924,]   36 #>  [1925,]   37 #>  [1926,]   37 #>  [1927,]   37 #>  [1928,]   37 #>  [1929,]   36 #>  [1930,]   36 #>  [1931,]   36 #>  [1932,]   36 #>  [1933,]   37 #>  [1934,]   36 #>  [1935,]   36 #>  [1936,]   36 #>  [1937,]   36 #>  [1938,]   37 #>  [1939,]   36 #>  [1940,]   36 #>  [1941,]   37 #>  [1942,]   37 #>  [1943,]   37 #>  [1944,]   36 #>  [1945,]   37 #>  [1946,]   37 #>  [1947,]   36 #>  [1948,]   36 #>  [1949,]   36 #>  [1950,]   37 #>  [1951,]   37 #>  [1952,]   37 #>  [1953,]   37 #>  [1954,]   36 #>  [1955,]   37 #>  [1956,]   37 #>  [1957,]   37 #>  [1958,]   37 #>  [1959,]   36 #>  [1960,]   37 #>  [1961,]   37 #>  [1962,]   36 #>  [1963,]   37 #>  [1964,]   37 #>  [1965,]   37 #>  [1966,]   37 #>  [1967,]   37 #>  [1968,]   37 #>  [1969,]   37 #>  [1970,]   36 #>  [1971,]   37 #>  [1972,]   37 #>  [1973,]   37 #>  [1974,]   37 #>  [1975,]   37 #>  [1976,]   37 #>  [1977,]   36 #>  [1978,]   37 #>  [1979,]   36 #>  [1980,]   36 #>  [1981,]   37 #>  [1982,]   37 #>  [1983,]   36 #>  [1984,]   37 #>  [1985,]   36 #>  [1986,]   36 #>  [1987,]   37 #>  [1988,]   37 #>  [1989,]   37 #>  [1990,]   37 #>  [1991,]   37 #>  [1992,]   37 #>  [1993,]   36 #>  [1994,]   37 #>  [1995,]   36 #>  [1996,]   37 #>  [1997,]   37 #>  [1998,]   36 #>  [1999,]   37 #>  [2000,]   36 #>  [2001,]   38 #>  [2002,]   38 #>  [2003,]   38 #>  [2004,]   38 #>  [2005,]   38 #>  [2006,]   39 #>  [2007,]   38 #>  [2008,]   39 #>  [2009,]   39 #>  [2010,]   38 #>  [2011,]   38 #>  [2012,]   39 #>  [2013,]   38 #>  [2014,]   38 #>  [2015,]   39 #>  [2016,]   38 #>  [2017,]   38 #>  [2018,]   38 #>  [2019,]   38 #>  [2020,]   39 #>  [2021,]   38 #>  [2022,]   38 #>  [2023,]   38 #>  [2024,]   38 #>  [2025,]   38 #>  [2026,]   39 #>  [2027,]   38 #>  [2028,]   38 #>  [2029,]   38 #>  [2030,]   38 #>  [2031,]   38 #>  [2032,]   38 #>  [2033,]   39 #>  [2034,]   38 #>  [2035,]   38 #>  [2036,]   38 #>  [2037,]   38 #>  [2038,]   38 #>  [2039,]   38 #>  [2040,]   38 #>  [2041,]   38 #>  [2042,]   38 #>  [2043,]   39 #>  [2044,]   38 #>  [2045,]   39 #>  [2046,]   39 #>  [2047,]   38 #>  [2048,]   38 #>  [2049,]   38 #>  [2050,]   39 #>  [2051,]   39 #>  [2052,]   38 #>  [2053,]   39 #>  [2054,]   38 #>  [2055,]   38 #>  [2056,]   39 #>  [2057,]   39 #>  [2058,]   39 #>  [2059,]   38 #>  [2060,]   38 #>  [2061,]   39 #>  [2062,]   38 #>  [2063,]   38 #>  [2064,]   39 #>  [2065,]   39 #>  [2066,]   39 #>  [2067,]   38 #>  [2068,]   39 #>  [2069,]   38 #>  [2070,]   38 #>  [2071,]   38 #>  [2072,]   39 #>  [2073,]   38 #>  [2074,]   38 #>  [2075,]   38 #>  [2076,]   39 #>  [2077,]   38 #>  [2078,]   39 #>  [2079,]   38 #>  [2080,]   38 #>  [2081,]   39 #>  [2082,]   38 #>  [2083,]   38 #>  [2084,]   38 #>  [2085,]   38 #>  [2086,]   38 #>  [2087,]   38 #>  [2088,]   38 #>  [2089,]   38 #>  [2090,]   38 #>  [2091,]   38 #>  [2092,]   39 #>  [2093,]   38 #>  [2094,]   39 #>  [2095,]   38 #>  [2096,]   39 #>  [2097,]   39 #>  [2098,]   38 #>  [2099,]   38 #>  [2100,]   38 #>  [2101,]   40 #>  [2102,]   41 #>  [2103,]   40 #>  [2104,]   40 #>  [2105,]   40 #>  [2106,]   40 #>  [2107,]   40 #>  [2108,]   40 #>  [2109,]   41 #>  [2110,]   41 #>  [2111,]   40 #>  [2112,]   41 #>  [2113,]   40 #>  [2114,]   40 #>  [2115,]   40 #>  [2116,]   40 #>  [2117,]   40 #>  [2118,]   40 #>  [2119,]   40 #>  [2120,]   40 #>  [2121,]   41 #>  [2122,]   40 #>  [2123,]   40 #>  [2124,]   40 #>  [2125,]   40 #>  [2126,]   40 #>  [2127,]   40 #>  [2128,]   40 #>  [2129,]   41 #>  [2130,]   40 #>  [2131,]   40 #>  [2132,]   40 #>  [2133,]   41 #>  [2134,]   40 #>  [2135,]   40 #>  [2136,]   40 #>  [2137,]   40 #>  [2138,]   40 #>  [2139,]   40 #>  [2140,]   40 #>  [2141,]   40 #>  [2142,]   40 #>  [2143,]   40 #>  [2144,]   40 #>  [2145,]   40 #>  [2146,]   40 #>  [2147,]   40 #>  [2148,]   40 #>  [2149,]   40 #>  [2150,]   40 #>  [2151,]   40 #>  [2152,]   40 #>  [2153,]   40 #>  [2154,]   40 #>  [2155,]   40 #>  [2156,]   40 #>  [2157,]   40 #>  [2158,]   40 #>  [2159,]   40 #>  [2160,]   41 #>  [2161,]   40 #>  [2162,]   40 #>  [2163,]   41 #>  [2164,]   40 #>  [2165,]   40 #>  [2166,]   40 #>  [2167,]   40 #>  [2168,]   40 #>  [2169,]   40 #>  [2170,]   41 #>  [2171,]   40 #>  [2172,]   40 #>  [2173,]   40 #>  [2174,]   40 #>  [2175,]   40 #>  [2176,]   40 #>  [2177,]   40 #>  [2178,]   40 #>  [2179,]   40 #>  [2180,]   40 #>  [2181,]   41 #>  [2182,]   40 #>  [2183,]   40 #>  [2184,]   40 #>  [2185,]   40 #>  [2186,]   41 #>  [2187,]   40 #>  [2188,]   40 #>  [2189,]   40 #>  [2190,]   40 #>  [2191,]   40 #>  [2192,]   40 #>  [2193,]   40 #>  [2194,]   40 #>  [2195,]   40 #>  [2196,]   40 #>  [2197,]   40 #>  [2198,]   40 #>  [2199,]   40 #>  [2200,]   40 #>  [2201,]   43 #>  [2202,]   42 #>  [2203,]   42 #>  [2204,]   43 #>  [2205,]   42 #>  [2206,]   42 #>  [2207,]   43 #>  [2208,]   43 #>  [2209,]   43 #>  [2210,]   43 #>  [2211,]   42 #>  [2212,]   42 #>  [2213,]   43 #>  [2214,]   42 #>  [2215,]   43 #>  [2216,]   43 #>  [2217,]   43 #>  [2218,]   43 #>  [2219,]   42 #>  [2220,]   42 #>  [2221,]   43 #>  [2222,]   42 #>  [2223,]   43 #>  [2224,]   42 #>  [2225,]   43 #>  [2226,]   42 #>  [2227,]   43 #>  [2228,]   43 #>  [2229,]   42 #>  [2230,]   42 #>  [2231,]   42 #>  [2232,]   42 #>  [2233,]   42 #>  [2234,]   42 #>  [2235,]   42 #>  [2236,]   42 #>  [2237,]   43 #>  [2238,]   43 #>  [2239,]   43 #>  [2240,]   42 #>  [2241,]   42 #>  [2242,]   42 #>  [2243,]   43 #>  [2244,]   43 #>  [2245,]   43 #>  [2246,]   43 #>  [2247,]   43 #>  [2248,]   42 #>  [2249,]   42 #>  [2250,]   42 #>  [2251,]   42 #>  [2252,]   42 #>  [2253,]   43 #>  [2254,]   42 #>  [2255,]   42 #>  [2256,]   43 #>  [2257,]   42 #>  [2258,]   42 #>  [2259,]   42 #>  [2260,]   42 #>  [2261,]   43 #>  [2262,]   42 #>  [2263,]   42 #>  [2264,]   43 #>  [2265,]   42 #>  [2266,]   42 #>  [2267,]   42 #>  [2268,]   42 #>  [2269,]   42 #>  [2270,]   43 #>  [2271,]   43 #>  [2272,]   43 #>  [2273,]   43 #>  [2274,]   43 #>  [2275,]   43 #>  [2276,]   43 #>  [2277,]   43 #>  [2278,]   42 #>  [2279,]   43 #>  [2280,]   42 #>  [2281,]   42 #>  [2282,]   43 #>  [2283,]   42 #>  [2284,]   43 #>  [2285,]   42 #>  [2286,]   43 #>  [2287,]   43 #>  [2288,]   43 #>  [2289,]   42 #>  [2290,]   43 #>  [2291,]   42 #>  [2292,]   42 #>  [2293,]   42 #>  [2294,]   43 #>  [2295,]   43 #>  [2296,]   43 #>  [2297,]   42 #>  [2298,]   42 #>  [2299,]   42 #>  [2300,]   43 #>  [2301,]   45 #>  [2302,]   45 #>  [2303,]   44 #>  [2304,]   45 #>  [2305,]   45 #>  [2306,]   44 #>  [2307,]   45 #>  [2308,]   45 #>  [2309,]   45 #>  [2310,]   45 #>  [2311,]   44 #>  [2312,]   45 #>  [2313,]   45 #>  [2314,]   45 #>  [2315,]   45 #>  [2316,]   44 #>  [2317,]   45 #>  [2318,]   45 #>  [2319,]   44 #>  [2320,]   45 #>  [2321,]   45 #>  [2322,]   45 #>  [2323,]   45 #>  [2324,]   45 #>  [2325,]   45 #>  [2326,]   45 #>  [2327,]   45 #>  [2328,]   45 #>  [2329,]   45 #>  [2330,]   45 #>  [2331,]   45 #>  [2332,]   45 #>  [2333,]   45 #>  [2334,]   44 #>  [2335,]   44 #>  [2336,]   45 #>  [2337,]   44 #>  [2338,]   44 #>  [2339,]   45 #>  [2340,]   45 #>  [2341,]   45 #>  [2342,]   45 #>  [2343,]   45 #>  [2344,]   45 #>  [2345,]   44 #>  [2346,]   45 #>  [2347,]   45 #>  [2348,]   45 #>  [2349,]   44 #>  [2350,]   45 #>  [2351,]   45 #>  [2352,]   44 #>  [2353,]   45 #>  [2354,]   45 #>  [2355,]   45 #>  [2356,]   45 #>  [2357,]   45 #>  [2358,]   45 #>  [2359,]   45 #>  [2360,]   45 #>  [2361,]   45 #>  [2362,]   45 #>  [2363,]   45 #>  [2364,]   44 #>  [2365,]   45 #>  [2366,]   45 #>  [2367,]   45 #>  [2368,]   44 #>  [2369,]   45 #>  [2370,]   45 #>  [2371,]   45 #>  [2372,]   44 #>  [2373,]   45 #>  [2374,]   45 #>  [2375,]   45 #>  [2376,]   45 #>  [2377,]   45 #>  [2378,]   45 #>  [2379,]   45 #>  [2380,]   45 #>  [2381,]   45 #>  [2382,]   45 #>  [2383,]   45 #>  [2384,]   45 #>  [2385,]   45 #>  [2386,]   45 #>  [2387,]   45 #>  [2388,]   45 #>  [2389,]   45 #>  [2390,]   45 #>  [2391,]   45 #>  [2392,]   45 #>  [2393,]   45 #>  [2394,]   45 #>  [2395,]   45 #>  [2396,]   44 #>  [2397,]   44 #>  [2398,]   45 #>  [2399,]   45 #>  [2400,]   45 #>  [2401,]   46 #>  [2402,]   47 #>  [2403,]   47 #>  [2404,]   46 #>  [2405,]   47 #>  [2406,]   47 #>  [2407,]   47 #>  [2408,]   46 #>  [2409,]   46 #>  [2410,]   47 #>  [2411,]   46 #>  [2412,]   47 #>  [2413,]   46 #>  [2414,]   46 #>  [2415,]   46 #>  [2416,]   46 #>  [2417,]   46 #>  [2418,]   47 #>  [2419,]   47 #>  [2420,]   47 #>  [2421,]   46 #>  [2422,]   46 #>  [2423,]   47 #>  [2424,]   46 #>  [2425,]   47 #>  [2426,]   47 #>  [2427,]   46 #>  [2428,]   47 #>  [2429,]   47 #>  [2430,]   46 #>  [2431,]   47 #>  [2432,]   47 #>  [2433,]   47 #>  [2434,]   47 #>  [2435,]   46 #>  [2436,]   47 #>  [2437,]   46 #>  [2438,]   46 #>  [2439,]   47 #>  [2440,]   47 #>  [2441,]   46 #>  [2442,]   47 #>  [2443,]   46 #>  [2444,]   46 #>  [2445,]   46 #>  [2446,]   46 #>  [2447,]   47 #>  [2448,]   47 #>  [2449,]   46 #>  [2450,]   47 #>  [2451,]   46 #>  [2452,]   46 #>  [2453,]   47 #>  [2454,]   46 #>  [2455,]   46 #>  [2456,]   47 #>  [2457,]   47 #>  [2458,]   46 #>  [2459,]   46 #>  [2460,]   47 #>  [2461,]   47 #>  [2462,]   46 #>  [2463,]   47 #>  [2464,]   47 #>  [2465,]   47 #>  [2466,]   46 #>  [2467,]   46 #>  [2468,]   46 #>  [2469,]   46 #>  [2470,]   47 #>  [2471,]   47 #>  [2472,]   47 #>  [2473,]   47 #>  [2474,]   46 #>  [2475,]   47 #>  [2476,]   47 #>  [2477,]   47 #>  [2478,]   47 #>  [2479,]   46 #>  [2480,]   46 #>  [2481,]   46 #>  [2482,]   46 #>  [2483,]   46 #>  [2484,]   47 #>  [2485,]   46 #>  [2486,]   47 #>  [2487,]   46 #>  [2488,]   46 #>  [2489,]   46 #>  [2490,]   46 #>  [2491,]   46 #>  [2492,]   46 #>  [2493,]   47 #>  [2494,]   47 #>  [2495,]   46 #>  [2496,]   46 #>  [2497,]   47 #>  [2498,]   47 #>  [2499,]   46 #>  [2500,]   47 #>  [2501,]   48 #>  [2502,]   49 #>  [2503,]   48 #>  [2504,]   48 #>  [2505,]   49 #>  [2506,]   48 #>  [2507,]   49 #>  [2508,]   48 #>  [2509,]   49 #>  [2510,]   49 #>  [2511,]   48 #>  [2512,]   49 #>  [2513,]   49 #>  [2514,]   48 #>  [2515,]   48 #>  [2516,]   48 #>  [2517,]   49 #>  [2518,]   49 #>  [2519,]   48 #>  [2520,]   49 #>  [2521,]   49 #>  [2522,]   49 #>  [2523,]   49 #>  [2524,]   49 #>  [2525,]   49 #>  [2526,]   48 #>  [2527,]   49 #>  [2528,]   48 #>  [2529,]   49 #>  [2530,]   49 #>  [2531,]   49 #>  [2532,]   49 #>  [2533,]   49 #>  [2534,]   48 #>  [2535,]   48 #>  [2536,]   49 #>  [2537,]   48 #>  [2538,]   48 #>  [2539,]   49 #>  [2540,]   49 #>  [2541,]   49 #>  [2542,]   48 #>  [2543,]   49 #>  [2544,]   49 #>  [2545,]   48 #>  [2546,]   48 #>  [2547,]   49 #>  [2548,]   49 #>  [2549,]   48 #>  [2550,]   49 #>  [2551,]   49 #>  [2552,]   48 #>  [2553,]   49 #>  [2554,]   49 #>  [2555,]   48 #>  [2556,]   48 #>  [2557,]   48 #>  [2558,]   49 #>  [2559,]   48 #>  [2560,]   49 #>  [2561,]   49 #>  [2562,]   48 #>  [2563,]   49 #>  [2564,]   48 #>  [2565,]   48 #>  [2566,]   49 #>  [2567,]   48 #>  [2568,]   48 #>  [2569,]   48 #>  [2570,]   49 #>  [2571,]   49 #>  [2572,]   48 #>  [2573,]   48 #>  [2574,]   49 #>  [2575,]   49 #>  [2576,]   49 #>  [2577,]   48 #>  [2578,]   49 #>  [2579,]   48 #>  [2580,]   49 #>  [2581,]   49 #>  [2582,]   48 #>  [2583,]   49 #>  [2584,]   49 #>  [2585,]   48 #>  [2586,]   49 #>  [2587,]   49 #>  [2588,]   49 #>  [2589,]   48 #>  [2590,]   49 #>  [2591,]   48 #>  [2592,]   49 #>  [2593,]   49 #>  [2594,]   48 #>  [2595,]   49 #>  [2596,]   48 #>  [2597,]   48 #>  [2598,]   48 #>  [2599,]   49 #>  [2600,]   48 #>  [2601,]   50 #>  [2602,]   51 #>  [2603,]   51 #>  [2604,]   50 #>  [2605,]   50 #>  [2606,]   51 #>  [2607,]   51 #>  [2608,]   50 #>  [2609,]   50 #>  [2610,]   51 #>  [2611,]   50 #>  [2612,]   51 #>  [2613,]   50 #>  [2614,]   50 #>  [2615,]   50 #>  [2616,]   50 #>  [2617,]   50 #>  [2618,]   51 #>  [2619,]   51 #>  [2620,]   51 #>  [2621,]   50 #>  [2622,]   50 #>  [2623,]   51 #>  [2624,]   50 #>  [2625,]   51 #>  [2626,]   50 #>  [2627,]   50 #>  [2628,]   51 #>  [2629,]   51 #>  [2630,]   50 #>  [2631,]   51 #>  [2632,]   51 #>  [2633,]   51 #>  [2634,]   51 #>  [2635,]   50 #>  [2636,]   50 #>  [2637,]   50 #>  [2638,]   50 #>  [2639,]   51 #>  [2640,]   51 #>  [2641,]   50 #>  [2642,]   51 #>  [2643,]   50 #>  [2644,]   50 #>  [2645,]   50 #>  [2646,]   50 #>  [2647,]   51 #>  [2648,]   51 #>  [2649,]   50 #>  [2650,]   51 #>  [2651,]   50 #>  [2652,]   50 #>  [2653,]   50 #>  [2654,]   50 #>  [2655,]   50 #>  [2656,]   51 #>  [2657,]   51 #>  [2658,]   50 #>  [2659,]   50 #>  [2660,]   51 #>  [2661,]   51 #>  [2662,]   50 #>  [2663,]   50 #>  [2664,]   51 #>  [2665,]   51 #>  [2666,]   50 #>  [2667,]   50 #>  [2668,]   50 #>  [2669,]   50 #>  [2670,]   51 #>  [2671,]   51 #>  [2672,]   50 #>  [2673,]   51 #>  [2674,]   50 #>  [2675,]   51 #>  [2676,]   50 #>  [2677,]   51 #>  [2678,]   51 #>  [2679,]   50 #>  [2680,]   50 #>  [2681,]   50 #>  [2682,]   50 #>  [2683,]   50 #>  [2684,]   51 #>  [2685,]   50 #>  [2686,]   51 #>  [2687,]   50 #>  [2688,]   50 #>  [2689,]   50 #>  [2690,]   50 #>  [2691,]   50 #>  [2692,]   50 #>  [2693,]   51 #>  [2694,]   51 #>  [2695,]   50 #>  [2696,]   50 #>  [2697,]   51 #>  [2698,]   51 #>  [2699,]   50 #>  [2700,]   51 #>  [2701,]   52 #>  [2702,]   52 #>  [2703,]   52 #>  [2704,]   53 #>  [2705,]   52 #>  [2706,]   52 #>  [2707,]   52 #>  [2708,]   52 #>  [2709,]   52 #>  [2710,]   52 #>  [2711,]   52 #>  [2712,]   53 #>  [2713,]   52 #>  [2714,]   53 #>  [2715,]   53 #>  [2716,]   52 #>  [2717,]   52 #>  [2718,]   52 #>  [2719,]   53 #>  [2720,]   52 #>  [2721,]   52 #>  [2722,]   52 #>  [2723,]   52 #>  [2724,]   52 #>  [2725,]   52 #>  [2726,]   52 #>  [2727,]   53 #>  [2728,]   52 #>  [2729,]   52 #>  [2730,]   52 #>  [2731,]   52 #>  [2732,]   52 #>  [2733,]   52 #>  [2734,]   52 #>  [2735,]   52 #>  [2736,]   52 #>  [2737,]   52 #>  [2738,]   53 #>  [2739,]   52 #>  [2740,]   52 #>  [2741,]   53 #>  [2742,]   53 #>  [2743,]   52 #>  [2744,]   52 #>  [2745,]   52 #>  [2746,]   52 #>  [2747,]   52 #>  [2748,]   53 #>  [2749,]   52 #>  [2750,]   52 #>  [2751,]   52 #>  [2752,]   52 #>  [2753,]   52 #>  [2754,]   52 #>  [2755,]   52 #>  [2756,]   52 #>  [2757,]   52 #>  [2758,]   52 #>  [2759,]   52 #>  [2760,]   52 #>  [2761,]   53 #>  [2762,]   52 #>  [2763,]   52 #>  [2764,]   52 #>  [2765,]   52 #>  [2766,]   52 #>  [2767,]   52 #>  [2768,]   52 #>  [2769,]   53 #>  [2770,]   52 #>  [2771,]   52 #>  [2772,]   52 #>  [2773,]   52 #>  [2774,]   53 #>  [2775,]   53 #>  [2776,]   52 #>  [2777,]   52 #>  [2778,]   52 #>  [2779,]   52 #>  [2780,]   52 #>  [2781,]   52 #>  [2782,]   53 #>  [2783,]   52 #>  [2784,]   52 #>  [2785,]   52 #>  [2786,]   52 #>  [2787,]   52 #>  [2788,]   52 #>  [2789,]   52 #>  [2790,]   52 #>  [2791,]   52 #>  [2792,]   53 #>  [2793,]   53 #>  [2794,]   52 #>  [2795,]   52 #>  [2796,]   53 #>  [2797,]   53 #>  [2798,]   52 #>  [2799,]   52 #>  [2800,]   52 #>  [2801,]   54 #>  [2802,]   54 #>  [2803,]   54 #>  [2804,]   54 #>  [2805,]   54 #>  [2806,]   54 #>  [2807,]   54 #>  [2808,]   54 #>  [2809,]   54 #>  [2810,]   54 #>  [2811,]   54 #>  [2812,]   54 #>  [2813,]   54 #>  [2814,]   54 #>  [2815,]   54 #>  [2816,]   54 #>  [2817,]   54 #>  [2818,]   54 #>  [2819,]   54 #>  [2820,]   54 #>  [2821,]   54 #>  [2822,]   54 #>  [2823,]   54 #>  [2824,]   54 #>  [2825,]   54 #>  [2826,]   54 #>  [2827,]   54 #>  [2828,]   54 #>  [2829,]   54 #>  [2830,]   54 #>  [2831,]   54 #>  [2832,]   54 #>  [2833,]   54 #>  [2834,]   54 #>  [2835,]   54 #>  [2836,]   54 #>  [2837,]   54 #>  [2838,]   54 #>  [2839,]   54 #>  [2840,]   54 #>  [2841,]   54 #>  [2842,]   54 #>  [2843,]   54 #>  [2844,]   54 #>  [2845,]   54 #>  [2846,]   54 #>  [2847,]   54 #>  [2848,]   54 #>  [2849,]   54 #>  [2850,]   54 #>  [2851,]   54 #>  [2852,]   54 #>  [2853,]   54 #>  [2854,]   54 #>  [2855,]   54 #>  [2856,]   54 #>  [2857,]   54 #>  [2858,]   54 #>  [2859,]   54 #>  [2860,]   54 #>  [2861,]   54 #>  [2862,]   54 #>  [2863,]   54 #>  [2864,]   54 #>  [2865,]   54 #>  [2866,]   54 #>  [2867,]   54 #>  [2868,]   54 #>  [2869,]   54 #>  [2870,]   54 #>  [2871,]   54 #>  [2872,]   54 #>  [2873,]   54 #>  [2874,]   54 #>  [2875,]   54 #>  [2876,]   54 #>  [2877,]   54 #>  [2878,]   54 #>  [2879,]   54 #>  [2880,]   54 #>  [2881,]   54 #>  [2882,]   54 #>  [2883,]   54 #>  [2884,]   54 #>  [2885,]   54 #>  [2886,]   54 #>  [2887,]   54 #>  [2888,]   54 #>  [2889,]   54 #>  [2890,]   54 #>  [2891,]   54 #>  [2892,]   54 #>  [2893,]   54 #>  [2894,]   54 #>  [2895,]   54 #>  [2896,]   54 #>  [2897,]   54 #>  [2898,]   54 #>  [2899,]   54 #>  [2900,]   54 #>  [2901,]   55 #>  [2902,]   55 #>  [2903,]   55 #>  [2904,]   55 #>  [2905,]   55 #>  [2906,]   55 #>  [2907,]   55 #>  [2908,]   55 #>  [2909,]   55 #>  [2910,]   55 #>  [2911,]   55 #>  [2912,]   55 #>  [2913,]   55 #>  [2914,]   55 #>  [2915,]   55 #>  [2916,]   55 #>  [2917,]   55 #>  [2918,]   55 #>  [2919,]   55 #>  [2920,]   55 #>  [2921,]   55 #>  [2922,]   55 #>  [2923,]   55 #>  [2924,]   55 #>  [2925,]   55 #>  [2926,]   55 #>  [2927,]   55 #>  [2928,]   55 #>  [2929,]   55 #>  [2930,]   55 #>  [2931,]   55 #>  [2932,]   55 #>  [2933,]   55 #>  [2934,]   55 #>  [2935,]   55 #>  [2936,]   55 #>  [2937,]   55 #>  [2938,]   55 #>  [2939,]   55 #>  [2940,]   55 #>  [2941,]   55 #>  [2942,]   55 #>  [2943,]   55 #>  [2944,]   55 #>  [2945,]   55 #>  [2946,]   55 #>  [2947,]   55 #>  [2948,]   55 #>  [2949,]   55 #>  [2950,]   55 #>  [2951,]   55 #>  [2952,]   55 #>  [2953,]   55 #>  [2954,]   55 #>  [2955,]   55 #>  [2956,]   55 #>  [2957,]   55 #>  [2958,]   55 #>  [2959,]   55 #>  [2960,]   55 #>  [2961,]   55 #>  [2962,]   55 #>  [2963,]   55 #>  [2964,]   55 #>  [2965,]   55 #>  [2966,]   55 #>  [2967,]   55 #>  [2968,]   55 #>  [2969,]   55 #>  [2970,]   55 #>  [2971,]   55 #>  [2972,]   55 #>  [2973,]   55 #>  [2974,]   55 #>  [2975,]   55 #>  [2976,]   55 #>  [2977,]   55 #>  [2978,]   55 #>  [2979,]   55 #>  [2980,]   55 #>  [2981,]   55 #>  [2982,]   55 #>  [2983,]   55 #>  [2984,]   55 #>  [2985,]   55 #>  [2986,]   55 #>  [2987,]   55 #>  [2988,]   55 #>  [2989,]   55 #>  [2990,]   55 #>  [2991,]   55 #>  [2992,]   55 #>  [2993,]   55 #>  [2994,]   55 #>  [2995,]   55 #>  [2996,]   55 #>  [2997,]   55 #>  [2998,]   55 #>  [2999,]   55 #>  [3000,]   55 #>  [3001,]   56 #>  [3002,]   56 #>  [3003,]   57 #>  [3004,]   56 #>  [3005,]   56 #>  [3006,]   57 #>  [3007,]   56 #>  [3008,]   56 #>  [3009,]   56 #>  [3010,]   56 #>  [3011,]   56 #>  [3012,]   57 #>  [3013,]   56 #>  [3014,]   56 #>  [3015,]   56 #>  [3016,]   56 #>  [3017,]   56 #>  [3018,]   56 #>  [3019,]   57 #>  [3020,]   57 #>  [3021,]   56 #>  [3022,]   56 #>  [3023,]   56 #>  [3024,]   56 #>  [3025,]   57 #>  [3026,]   56 #>  [3027,]   56 #>  [3028,]   57 #>  [3029,]   56 #>  [3030,]   56 #>  [3031,]   56 #>  [3032,]   56 #>  [3033,]   57 #>  [3034,]   57 #>  [3035,]   56 #>  [3036,]   56 #>  [3037,]   56 #>  [3038,]   56 #>  [3039,]   56 #>  [3040,]   56 #>  [3041,]   56 #>  [3042,]   56 #>  [3043,]   56 #>  [3044,]   56 #>  [3045,]   56 #>  [3046,]   56 #>  [3047,]   56 #>  [3048,]   56 #>  [3049,]   56 #>  [3050,]   56 #>  [3051,]   56 #>  [3052,]   56 #>  [3053,]   56 #>  [3054,]   56 #>  [3055,]   56 #>  [3056,]   56 #>  [3057,]   56 #>  [3058,]   56 #>  [3059,]   56 #>  [3060,]   57 #>  [3061,]   56 #>  [3062,]   56 #>  [3063,]   56 #>  [3064,]   56 #>  [3065,]   57 #>  [3066,]   56 #>  [3067,]   56 #>  [3068,]   56 #>  [3069,]   56 #>  [3070,]   57 #>  [3071,]   56 #>  [3072,]   56 #>  [3073,]   57 #>  [3074,]   56 #>  [3075,]   56 #>  [3076,]   56 #>  [3077,]   56 #>  [3078,]   56 #>  [3079,]   56 #>  [3080,]   56 #>  [3081,]   56 #>  [3082,]   56 #>  [3083,]   56 #>  [3084,]   56 #>  [3085,]   56 #>  [3086,]   56 #>  [3087,]   56 #>  [3088,]   56 #>  [3089,]   56 #>  [3090,]   56 #>  [3091,]   56 #>  [3092,]   56 #>  [3093,]   57 #>  [3094,]   56 #>  [3095,]   56 #>  [3096,]   56 #>  [3097,]   57 #>  [3098,]   57 #>  [3099,]   56 #>  [3100,]   56 #>  [3101,]   58 #>  [3102,]   59 #>  [3103,]   58 #>  [3104,]   58 #>  [3105,]   58 #>  [3106,]   58 #>  [3107,]   58 #>  [3108,]   58 #>  [3109,]   59 #>  [3110,]   59 #>  [3111,]   58 #>  [3112,]   59 #>  [3113,]   58 #>  [3114,]   58 #>  [3115,]   58 #>  [3116,]   58 #>  [3117,]   58 #>  [3118,]   58 #>  [3119,]   58 #>  [3120,]   58 #>  [3121,]   59 #>  [3122,]   58 #>  [3123,]   58 #>  [3124,]   58 #>  [3125,]   58 #>  [3126,]   58 #>  [3127,]   58 #>  [3128,]   58 #>  [3129,]   59 #>  [3130,]   58 #>  [3131,]   58 #>  [3132,]   58 #>  [3133,]   59 #>  [3134,]   58 #>  [3135,]   58 #>  [3136,]   58 #>  [3137,]   58 #>  [3138,]   58 #>  [3139,]   58 #>  [3140,]   58 #>  [3141,]   58 #>  [3142,]   58 #>  [3143,]   58 #>  [3144,]   58 #>  [3145,]   58 #>  [3146,]   58 #>  [3147,]   58 #>  [3148,]   58 #>  [3149,]   58 #>  [3150,]   58 #>  [3151,]   58 #>  [3152,]   58 #>  [3153,]   58 #>  [3154,]   58 #>  [3155,]   58 #>  [3156,]   58 #>  [3157,]   58 #>  [3158,]   58 #>  [3159,]   58 #>  [3160,]   58 #>  [3161,]   58 #>  [3162,]   58 #>  [3163,]   58 #>  [3164,]   58 #>  [3165,]   58 #>  [3166,]   58 #>  [3167,]   58 #>  [3168,]   58 #>  [3169,]   58 #>  [3170,]   59 #>  [3171,]   58 #>  [3172,]   58 #>  [3173,]   58 #>  [3174,]   58 #>  [3175,]   58 #>  [3176,]   58 #>  [3177,]   58 #>  [3178,]   58 #>  [3179,]   58 #>  [3180,]   58 #>  [3181,]   58 #>  [3182,]   58 #>  [3183,]   58 #>  [3184,]   58 #>  [3185,]   58 #>  [3186,]   59 #>  [3187,]   58 #>  [3188,]   58 #>  [3189,]   58 #>  [3190,]   58 #>  [3191,]   58 #>  [3192,]   58 #>  [3193,]   58 #>  [3194,]   58 #>  [3195,]   58 #>  [3196,]   58 #>  [3197,]   58 #>  [3198,]   58 #>  [3199,]   58 #>  [3200,]   58 #>  [3201,]   60 #>  [3202,]   61 #>  [3203,]   60 #>  [3204,]   60 #>  [3205,]   61 #>  [3206,]   60 #>  [3207,]   61 #>  [3208,]   60 #>  [3209,]   61 #>  [3210,]   61 #>  [3211,]   60 #>  [3212,]   61 #>  [3213,]   61 #>  [3214,]   60 #>  [3215,]   60 #>  [3216,]   60 #>  [3217,]   61 #>  [3218,]   61 #>  [3219,]   60 #>  [3220,]   61 #>  [3221,]   61 #>  [3222,]   61 #>  [3223,]   61 #>  [3224,]   61 #>  [3225,]   61 #>  [3226,]   60 #>  [3227,]   61 #>  [3228,]   60 #>  [3229,]   61 #>  [3230,]   61 #>  [3231,]   61 #>  [3232,]   61 #>  [3233,]   61 #>  [3234,]   60 #>  [3235,]   60 #>  [3236,]   61 #>  [3237,]   60 #>  [3238,]   60 #>  [3239,]   61 #>  [3240,]   61 #>  [3241,]   61 #>  [3242,]   60 #>  [3243,]   61 #>  [3244,]   61 #>  [3245,]   60 #>  [3246,]   60 #>  [3247,]   61 #>  [3248,]   61 #>  [3249,]   60 #>  [3250,]   61 #>  [3251,]   61 #>  [3252,]   60 #>  [3253,]   61 #>  [3254,]   61 #>  [3255,]   60 #>  [3256,]   60 #>  [3257,]   60 #>  [3258,]   61 #>  [3259,]   60 #>  [3260,]   61 #>  [3261,]   61 #>  [3262,]   60 #>  [3263,]   61 #>  [3264,]   60 #>  [3265,]   60 #>  [3266,]   61 #>  [3267,]   60 #>  [3268,]   60 #>  [3269,]   60 #>  [3270,]   61 #>  [3271,]   61 #>  [3272,]   60 #>  [3273,]   60 #>  [3274,]   61 #>  [3275,]   61 #>  [3276,]   61 #>  [3277,]   60 #>  [3278,]   61 #>  [3279,]   60 #>  [3280,]   61 #>  [3281,]   61 #>  [3282,]   60 #>  [3283,]   61 #>  [3284,]   61 #>  [3285,]   60 #>  [3286,]   61 #>  [3287,]   61 #>  [3288,]   61 #>  [3289,]   60 #>  [3290,]   61 #>  [3291,]   60 #>  [3292,]   61 #>  [3293,]   61 #>  [3294,]   60 #>  [3295,]   61 #>  [3296,]   60 #>  [3297,]   60 #>  [3298,]   60 #>  [3299,]   61 #>  [3300,]   60 #>  [3301,]   62 #>  [3302,]   62 #>  [3303,]   62 #>  [3304,]   62 #>  [3305,]   62 #>  [3306,]   62 #>  [3307,]   62 #>  [3308,]   62 #>  [3309,]   62 #>  [3310,]   62 #>  [3311,]   62 #>  [3312,]   62 #>  [3313,]   62 #>  [3314,]   62 #>  [3315,]   62 #>  [3316,]   62 #>  [3317,]   62 #>  [3318,]   62 #>  [3319,]   63 #>  [3320,]   63 #>  [3321,]   62 #>  [3322,]   63 #>  [3323,]   62 #>  [3324,]   62 #>  [3325,]   62 #>  [3326,]   62 #>  [3327,]   63 #>  [3328,]   62 #>  [3329,]   63 #>  [3330,]   62 #>  [3331,]   62 #>  [3332,]   62 #>  [3333,]   62 #>  [3334,]   62 #>  [3335,]   62 #>  [3336,]   63 #>  [3337,]   62 #>  [3338,]   62 #>  [3339,]   62 #>  [3340,]   62 #>  [3341,]   62 #>  [3342,]   62 #>  [3343,]   62 #>  [3344,]   62 #>  [3345,]   62 #>  [3346,]   62 #>  [3347,]   62 #>  [3348,]   62 #>  [3349,]   62 #>  [3350,]   62 #>  [3351,]   62 #>  [3352,]   62 #>  [3353,]   62 #>  [3354,]   62 #>  [3355,]   62 #>  [3356,]   62 #>  [3357,]   62 #>  [3358,]   63 #>  [3359,]   62 #>  [3360,]   62 #>  [3361,]   62 #>  [3362,]   62 #>  [3363,]   62 #>  [3364,]   63 #>  [3365,]   62 #>  [3366,]   63 #>  [3367,]   62 #>  [3368,]   62 #>  [3369,]   62 #>  [3370,]   62 #>  [3371,]   62 #>  [3372,]   62 #>  [3373,]   62 #>  [3374,]   62 #>  [3375,]   62 #>  [3376,]   62 #>  [3377,]   63 #>  [3378,]   62 #>  [3379,]   62 #>  [3380,]   62 #>  [3381,]   63 #>  [3382,]   62 #>  [3383,]   62 #>  [3384,]   62 #>  [3385,]   62 #>  [3386,]   62 #>  [3387,]   63 #>  [3388,]   62 #>  [3389,]   62 #>  [3390,]   62 #>  [3391,]   62 #>  [3392,]   62 #>  [3393,]   62 #>  [3394,]   62 #>  [3395,]   62 #>  [3396,]   62 #>  [3397,]   63 #>  [3398,]   62 #>  [3399,]   62 #>  [3400,]   63 #>  [3401,]   65 #>  [3402,]   64 #>  [3403,]   64 #>  [3404,]   65 #>  [3405,]   64 #>  [3406,]   64 #>  [3407,]   65 #>  [3408,]   64 #>  [3409,]   65 #>  [3410,]   65 #>  [3411,]   64 #>  [3412,]   64 #>  [3413,]   65 #>  [3414,]   65 #>  [3415,]   64 #>  [3416,]   65 #>  [3417,]   64 #>  [3418,]   64 #>  [3419,]   64 #>  [3420,]   65 #>  [3421,]   64 #>  [3422,]   65 #>  [3423,]   64 #>  [3424,]   65 #>  [3425,]   65 #>  [3426,]   64 #>  [3427,]   64 #>  [3428,]   65 #>  [3429,]   64 #>  [3430,]   64 #>  [3431,]   64 #>  [3432,]   64 #>  [3433,]   64 #>  [3434,]   64 #>  [3435,]   64 #>  [3436,]   65 #>  [3437,]   64 #>  [3438,]   64 #>  [3439,]   65 #>  [3440,]   64 #>  [3441,]   64 #>  [3442,]   64 #>  [3443,]   64 #>  [3444,]   64 #>  [3445,]   65 #>  [3446,]   64 #>  [3447,]   64 #>  [3448,]   64 #>  [3449,]   65 #>  [3450,]   65 #>  [3451,]   64 #>  [3452,]   65 #>  [3453,]   65 #>  [3454,]   65 #>  [3455,]   65 #>  [3456,]   64 #>  [3457,]   65 #>  [3458,]   65 #>  [3459,]   65 #>  [3460,]   64 #>  [3461,]   64 #>  [3462,]   64 #>  [3463,]   64 #>  [3464,]   64 #>  [3465,]   64 #>  [3466,]   64 #>  [3467,]   65 #>  [3468,]   64 #>  [3469,]   64 #>  [3470,]   64 #>  [3471,]   64 #>  [3472,]   65 #>  [3473,]   65 #>  [3474,]   64 #>  [3475,]   64 #>  [3476,]   65 #>  [3477,]   64 #>  [3478,]   64 #>  [3479,]   64 #>  [3480,]   64 #>  [3481,]   64 #>  [3482,]   64 #>  [3483,]   64 #>  [3484,]   64 #>  [3485,]   65 #>  [3486,]   65 #>  [3487,]   65 #>  [3488,]   64 #>  [3489,]   64 #>  [3490,]   65 #>  [3491,]   65 #>  [3492,]   64 #>  [3493,]   64 #>  [3494,]   64 #>  [3495,]   64 #>  [3496,]   64 #>  [3497,]   64 #>  [3498,]   64 #>  [3499,]   64 #>  [3500,]   64 #>  [3501,]   67 #>  [3502,]   67 #>  [3503,]   66 #>  [3504,]   67 #>  [3505,]   67 #>  [3506,]   67 #>  [3507,]   66 #>  [3508,]   66 #>  [3509,]   67 #>  [3510,]   67 #>  [3511,]   67 #>  [3512,]   67 #>  [3513,]   66 #>  [3514,]   67 #>  [3515,]   67 #>  [3516,]   66 #>  [3517,]   67 #>  [3518,]   67 #>  [3519,]   67 #>  [3520,]   66 #>  [3521,]   67 #>  [3522,]   66 #>  [3523,]   67 #>  [3524,]   66 #>  [3525,]   66 #>  [3526,]   67 #>  [3527,]   67 #>  [3528,]   67 #>  [3529,]   67 #>  [3530,]   67 #>  [3531,]   67 #>  [3532,]   67 #>  [3533,]   67 #>  [3534,]   67 #>  [3535,]   67 #>  [3536,]   67 #>  [3537,]   67 #>  [3538,]   67 #>  [3539,]   66 #>  [3540,]   66 #>  [3541,]   67 #>  [3542,]   67 #>  [3543,]   67 #>  [3544,]   66 #>  [3545,]   66 #>  [3546,]   66 #>  [3547,]   67 #>  [3548,]   67 #>  [3549,]   66 #>  [3550,]   66 #>  [3551,]   67 #>  [3552,]   67 #>  [3553,]   66 #>  [3554,]   66 #>  [3555,]   66 #>  [3556,]   66 #>  [3557,]   67 #>  [3558,]   67 #>  [3559,]   66 #>  [3560,]   67 #>  [3561,]   67 #>  [3562,]   67 #>  [3563,]   66 #>  [3564,]   67 #>  [3565,]   66 #>  [3566,]   66 #>  [3567,]   67 #>  [3568,]   67 #>  [3569,]   67 #>  [3570,]   66 #>  [3571,]   67 #>  [3572,]   66 #>  [3573,]   67 #>  [3574,]   67 #>  [3575,]   67 #>  [3576,]   67 #>  [3577,]   67 #>  [3578,]   66 #>  [3579,]   67 #>  [3580,]   67 #>  [3581,]   67 #>  [3582,]   67 #>  [3583,]   67 #>  [3584,]   66 #>  [3585,]   67 #>  [3586,]   66 #>  [3587,]   67 #>  [3588,]   67 #>  [3589,]   66 #>  [3590,]   66 #>  [3591,]   67 #>  [3592,]   67 #>  [3593,]   67 #>  [3594,]   66 #>  [3595,]   67 #>  [3596,]   67 #>  [3597,]   67 #>  [3598,]   66 #>  [3599,]   67 #>  [3600,]   66 #>  [3601,]   69 #>  [3602,]   69 #>  [3603,]   68 #>  [3604,]   68 #>  [3605,]   68 #>  [3606,]   68 #>  [3607,]   69 #>  [3608,]   69 #>  [3609,]   68 #>  [3610,]   68 #>  [3611,]   68 #>  [3612,]   69 #>  [3613,]   69 #>  [3614,]   68 #>  [3615,]   69 #>  [3616,]   69 #>  [3617,]   69 #>  [3618,]   69 #>  [3619,]   69 #>  [3620,]   69 #>  [3621,]   68 #>  [3622,]   69 #>  [3623,]   69 #>  [3624,]   68 #>  [3625,]   68 #>  [3626,]   69 #>  [3627,]   69 #>  [3628,]   68 #>  [3629,]   69 #>  [3630,]   69 #>  [3631,]   68 #>  [3632,]   68 #>  [3633,]   69 #>  [3634,]   68 #>  [3635,]   68 #>  [3636,]   69 #>  [3637,]   69 #>  [3638,]   69 #>  [3639,]   68 #>  [3640,]   68 #>  [3641,]   69 #>  [3642,]   68 #>  [3643,]   69 #>  [3644,]   69 #>  [3645,]   69 #>  [3646,]   69 #>  [3647,]   68 #>  [3648,]   68 #>  [3649,]   69 #>  [3650,]   69 #>  [3651,]   69 #>  [3652,]   68 #>  [3653,]   69 #>  [3654,]   68 #>  [3655,]   69 #>  [3656,]   69 #>  [3657,]   68 #>  [3658,]   69 #>  [3659,]   69 #>  [3660,]   69 #>  [3661,]   69 #>  [3662,]   68 #>  [3663,]   69 #>  [3664,]   69 #>  [3665,]   68 #>  [3666,]   69 #>  [3667,]   68 #>  [3668,]   69 #>  [3669,]   69 #>  [3670,]   68 #>  [3671,]   69 #>  [3672,]   68 #>  [3673,]   68 #>  [3674,]   68 #>  [3675,]   69 #>  [3676,]   68 #>  [3677,]   69 #>  [3678,]   69 #>  [3679,]   68 #>  [3680,]   69 #>  [3681,]   69 #>  [3682,]   68 #>  [3683,]   69 #>  [3684,]   69 #>  [3685,]   69 #>  [3686,]   68 #>  [3687,]   69 #>  [3688,]   68 #>  [3689,]   68 #>  [3690,]   69 #>  [3691,]   68 #>  [3692,]   68 #>  [3693,]   69 #>  [3694,]   68 #>  [3695,]   69 #>  [3696,]   69 #>  [3697,]   69 #>  [3698,]   68 #>  [3699,]   69 #>  [3700,]   69 #>  [3701,]   70 #>  [3702,]   71 #>  [3703,]   70 #>  [3704,]   70 #>  [3705,]   71 #>  [3706,]   70 #>  [3707,]   71 #>  [3708,]   70 #>  [3709,]   71 #>  [3710,]   71 #>  [3711,]   70 #>  [3712,]   71 #>  [3713,]   71 #>  [3714,]   70 #>  [3715,]   70 #>  [3716,]   70 #>  [3717,]   71 #>  [3718,]   71 #>  [3719,]   70 #>  [3720,]   71 #>  [3721,]   71 #>  [3722,]   71 #>  [3723,]   71 #>  [3724,]   71 #>  [3725,]   71 #>  [3726,]   70 #>  [3727,]   71 #>  [3728,]   70 #>  [3729,]   71 #>  [3730,]   71 #>  [3731,]   71 #>  [3732,]   71 #>  [3733,]   71 #>  [3734,]   70 #>  [3735,]   70 #>  [3736,]   71 #>  [3737,]   70 #>  [3738,]   70 #>  [3739,]   71 #>  [3740,]   71 #>  [3741,]   71 #>  [3742,]   70 #>  [3743,]   71 #>  [3744,]   71 #>  [3745,]   70 #>  [3746,]   70 #>  [3747,]   71 #>  [3748,]   71 #>  [3749,]   70 #>  [3750,]   71 #>  [3751,]   71 #>  [3752,]   70 #>  [3753,]   71 #>  [3754,]   71 #>  [3755,]   70 #>  [3756,]   70 #>  [3757,]   70 #>  [3758,]   71 #>  [3759,]   70 #>  [3760,]   71 #>  [3761,]   71 #>  [3762,]   70 #>  [3763,]   71 #>  [3764,]   70 #>  [3765,]   70 #>  [3766,]   71 #>  [3767,]   70 #>  [3768,]   70 #>  [3769,]   70 #>  [3770,]   71 #>  [3771,]   71 #>  [3772,]   70 #>  [3773,]   70 #>  [3774,]   71 #>  [3775,]   71 #>  [3776,]   71 #>  [3777,]   70 #>  [3778,]   71 #>  [3779,]   70 #>  [3780,]   71 #>  [3781,]   71 #>  [3782,]   70 #>  [3783,]   71 #>  [3784,]   71 #>  [3785,]   70 #>  [3786,]   71 #>  [3787,]   71 #>  [3788,]   71 #>  [3789,]   70 #>  [3790,]   71 #>  [3791,]   70 #>  [3792,]   71 #>  [3793,]   71 #>  [3794,]   70 #>  [3795,]   71 #>  [3796,]   70 #>  [3797,]   70 #>  [3798,]   70 #>  [3799,]   71 #>  [3800,]   70 #>  [3801,]   73 #>  [3802,]   73 #>  [3803,]   72 #>  [3804,]   72 #>  [3805,]   72 #>  [3806,]   73 #>  [3807,]   73 #>  [3808,]   72 #>  [3809,]   72 #>  [3810,]   72 #>  [3811,]   73 #>  [3812,]   72 #>  [3813,]   73 #>  [3814,]   73 #>  [3815,]   73 #>  [3816,]   73 #>  [3817,]   73 #>  [3818,]   72 #>  [3819,]   73 #>  [3820,]   72 #>  [3821,]   73 #>  [3822,]   73 #>  [3823,]   72 #>  [3824,]   72 #>  [3825,]   73 #>  [3826,]   73 #>  [3827,]   73 #>  [3828,]   72 #>  [3829,]   73 #>  [3830,]   72 #>  [3831,]   72 #>  [3832,]   72 #>  [3833,]   73 #>  [3834,]   72 #>  [3835,]   73 #>  [3836,]   72 #>  [3837,]   73 #>  [3838,]   72 #>  [3839,]   72 #>  [3840,]   73 #>  [3841,]   73 #>  [3842,]   72 #>  [3843,]   72 #>  [3844,]   73 #>  [3845,]   72 #>  [3846,]   73 #>  [3847,]   73 #>  [3848,]   72 #>  [3849,]   72 #>  [3850,]   73 #>  [3851,]   72 #>  [3852,]   73 #>  [3853,]   72 #>  [3854,]   73 #>  [3855,]   73 #>  [3856,]   72 #>  [3857,]   72 #>  [3858,]   73 #>  [3859,]   73 #>  [3860,]   72 #>  [3861,]   73 #>  [3862,]   72 #>  [3863,]   73 #>  [3864,]   72 #>  [3865,]   72 #>  [3866,]   72 #>  [3867,]   72 #>  [3868,]   73 #>  [3869,]   73 #>  [3870,]   73 #>  [3871,]   73 #>  [3872,]   72 #>  [3873,]   73 #>  [3874,]   73 #>  [3875,]   73 #>  [3876,]   73 #>  [3877,]   73 #>  [3878,]   72 #>  [3879,]   73 #>  [3880,]   73 #>  [3881,]   73 #>  [3882,]   73 #>  [3883,]   73 #>  [3884,]   73 #>  [3885,]   72 #>  [3886,]   73 #>  [3887,]   73 #>  [3888,]   72 #>  [3889,]   72 #>  [3890,]   73 #>  [3891,]   72 #>  [3892,]   73 #>  [3893,]   73 #>  [3894,]   73 #>  [3895,]   72 #>  [3896,]   73 #>  [3897,]   73 #>  [3898,]   73 #>  [3899,]   73 #>  [3900,]   73 #>  [3901,]   75 #>  [3902,]   75 #>  [3903,]   75 #>  [3904,]   74 #>  [3905,]   75 #>  [3906,]   75 #>  [3907,]   75 #>  [3908,]   74 #>  [3909,]   74 #>  [3910,]   75 #>  [3911,]   74 #>  [3912,]   75 #>  [3913,]   74 #>  [3914,]   75 #>  [3915,]   75 #>  [3916,]   75 #>  [3917,]   74 #>  [3918,]   75 #>  [3919,]   75 #>  [3920,]   75 #>  [3921,]   75 #>  [3922,]   74 #>  [3923,]   75 #>  [3924,]   75 #>  [3925,]   75 #>  [3926,]   75 #>  [3927,]   74 #>  [3928,]   75 #>  [3929,]   75 #>  [3930,]   75 #>  [3931,]   75 #>  [3932,]   75 #>  [3933,]   75 #>  [3934,]   75 #>  [3935,]   74 #>  [3936,]   75 #>  [3937,]   75 #>  [3938,]   75 #>  [3939,]   75 #>  [3940,]   75 #>  [3941,]   75 #>  [3942,]   75 #>  [3943,]   75 #>  [3944,]   74 #>  [3945,]   75 #>  [3946,]   75 #>  [3947,]   75 #>  [3948,]   75 #>  [3949,]   74 #>  [3950,]   75 #>  [3951,]   75 #>  [3952,]   74 #>  [3953,]   75 #>  [3954,]   75 #>  [3955,]   74 #>  [3956,]   75 #>  [3957,]   75 #>  [3958,]   74 #>  [3959,]   75 #>  [3960,]   75 #>  [3961,]   75 #>  [3962,]   75 #>  [3963,]   75 #>  [3964,]   75 #>  [3965,]   75 #>  [3966,]   74 #>  [3967,]   75 #>  [3968,]   75 #>  [3969,]   75 #>  [3970,]   75 #>  [3971,]   75 #>  [3972,]   75 #>  [3973,]   75 #>  [3974,]   75 #>  [3975,]   75 #>  [3976,]   75 #>  [3977,]   75 #>  [3978,]   75 #>  [3979,]   75 #>  [3980,]   75 #>  [3981,]   74 #>  [3982,]   74 #>  [3983,]   75 #>  [3984,]   75 #>  [3985,]   75 #>  [3986,]   75 #>  [3987,]   74 #>  [3988,]   75 #>  [3989,]   75 #>  [3990,]   74 #>  [3991,]   75 #>  [3992,]   74 #>  [3993,]   75 #>  [3994,]   75 #>  [3995,]   74 #>  [3996,]   75 #>  [3997,]   75 #>  [3998,]   75 #>  [3999,]   74 #>  [4000,]   75 #>  [4001,]   76 #>  [4002,]   76 #>  [4003,]   76 #>  [4004,]   76 #>  [4005,]   76 #>  [4006,]   76 #>  [4007,]   76 #>  [4008,]   76 #>  [4009,]   76 #>  [4010,]   76 #>  [4011,]   76 #>  [4012,]   76 #>  [4013,]   76 #>  [4014,]   76 #>  [4015,]   76 #>  [4016,]   76 #>  [4017,]   76 #>  [4018,]   76 #>  [4019,]   76 #>  [4020,]   76 #>  [4021,]   76 #>  [4022,]   76 #>  [4023,]   76 #>  [4024,]   76 #>  [4025,]   76 #>  [4026,]   76 #>  [4027,]   76 #>  [4028,]   76 #>  [4029,]   76 #>  [4030,]   76 #>  [4031,]   76 #>  [4032,]   76 #>  [4033,]   76 #>  [4034,]   76 #>  [4035,]   76 #>  [4036,]   76 #>  [4037,]   76 #>  [4038,]   76 #>  [4039,]   76 #>  [4040,]   76 #>  [4041,]   76 #>  [4042,]   76 #>  [4043,]   76 #>  [4044,]   76 #>  [4045,]   76 #>  [4046,]   76 #>  [4047,]   76 #>  [4048,]   76 #>  [4049,]   76 #>  [4050,]   76 #>  [4051,]   76 #>  [4052,]   76 #>  [4053,]   76 #>  [4054,]   76 #>  [4055,]   76 #>  [4056,]   76 #>  [4057,]   76 #>  [4058,]   76 #>  [4059,]   76 #>  [4060,]   76 #>  [4061,]   76 #>  [4062,]   76 #>  [4063,]   76 #>  [4064,]   76 #>  [4065,]   76 #>  [4066,]   76 #>  [4067,]   76 #>  [4068,]   76 #>  [4069,]   76 #>  [4070,]   76 #>  [4071,]   76 #>  [4072,]   76 #>  [4073,]   76 #>  [4074,]   76 #>  [4075,]   76 #>  [4076,]   76 #>  [4077,]   76 #>  [4078,]   76 #>  [4079,]   76 #>  [4080,]   76 #>  [4081,]   76 #>  [4082,]   76 #>  [4083,]   76 #>  [4084,]   76 #>  [4085,]   76 #>  [4086,]   76 #>  [4087,]   76 #>  [4088,]   76 #>  [4089,]   76 #>  [4090,]   76 #>  [4091,]   76 #>  [4092,]   76 #>  [4093,]   76 #>  [4094,]   76 #>  [4095,]   76 #>  [4096,]   76 #>  [4097,]   76 #>  [4098,]   76 #>  [4099,]   76 #>  [4100,]   76 #>  [4101,]   78 #>  [4102,]   78 #>  [4103,]   78 #>  [4104,]   77 #>  [4105,]   78 #>  [4106,]   78 #>  [4107,]   78 #>  [4108,]   77 #>  [4109,]   77 #>  [4110,]   77 #>  [4111,]   78 #>  [4112,]   78 #>  [4113,]   78 #>  [4114,]   78 #>  [4115,]   78 #>  [4116,]   78 #>  [4117,]   78 #>  [4118,]   78 #>  [4119,]   78 #>  [4120,]   77 #>  [4121,]   78 #>  [4122,]   78 #>  [4123,]   78 #>  [4124,]   78 #>  [4125,]   78 #>  [4126,]   78 #>  [4127,]   78 #>  [4128,]   78 #>  [4129,]   78 #>  [4130,]   77 #>  [4131,]   78 #>  [4132,]   78 #>  [4133,]   78 #>  [4134,]   78 #>  [4135,]   78 #>  [4136,]   78 #>  [4137,]   78 #>  [4138,]   78 #>  [4139,]   78 #>  [4140,]   78 #>  [4141,]   78 #>  [4142,]   78 #>  [4143,]   77 #>  [4144,]   78 #>  [4145,]   78 #>  [4146,]   78 #>  [4147,]   78 #>  [4148,]   78 #>  [4149,]   78 #>  [4150,]   78 #>  [4151,]   77 #>  [4152,]   78 #>  [4153,]   77 #>  [4154,]   78 #>  [4155,]   78 #>  [4156,]   77 #>  [4157,]   78 #>  [4158,]   78 #>  [4159,]   78 #>  [4160,]   77 #>  [4161,]   78 #>  [4162,]   78 #>  [4163,]   78 #>  [4164,]   77 #>  [4165,]   78 #>  [4166,]   77 #>  [4167,]   77 #>  [4168,]   78 #>  [4169,]   78 #>  [4170,]   78 #>  [4171,]   78 #>  [4172,]   78 #>  [4173,]   78 #>  [4174,]   78 #>  [4175,]   78 #>  [4176,]   78 #>  [4177,]   78 #>  [4178,]   77 #>  [4179,]   78 #>  [4180,]   78 #>  [4181,]   78 #>  [4182,]   78 #>  [4183,]   78 #>  [4184,]   78 #>  [4185,]   77 #>  [4186,]   78 #>  [4187,]   78 #>  [4188,]   78 #>  [4189,]   77 #>  [4190,]   78 #>  [4191,]   77 #>  [4192,]   78 #>  [4193,]   78 #>  [4194,]   78 #>  [4195,]   77 #>  [4196,]   78 #>  [4197,]   78 #>  [4198,]   78 #>  [4199,]   78 #>  [4200,]   78 #>  [4201,]   80 #>  [4202,]   80 #>  [4203,]   79 #>  [4204,]   79 #>  [4205,]   79 #>  [4206,]   80 #>  [4207,]   79 #>  [4208,]   79 #>  [4209,]   79 #>  [4210,]   79 #>  [4211,]   79 #>  [4212,]   79 #>  [4213,]   80 #>  [4214,]   80 #>  [4215,]   80 #>  [4216,]   80 #>  [4217,]   80 #>  [4218,]   79 #>  [4219,]   79 #>  [4220,]   79 #>  [4221,]   80 #>  [4222,]   80 #>  [4223,]   79 #>  [4224,]   79 #>  [4225,]   79 #>  [4226,]   80 #>  [4227,]   80 #>  [4228,]   79 #>  [4229,]   80 #>  [4230,]   79 #>  [4231,]   79 #>  [4232,]   79 #>  [4233,]   80 #>  [4234,]   79 #>  [4235,]   80 #>  [4236,]   79 #>  [4237,]   80 #>  [4238,]   79 #>  [4239,]   79 #>  [4240,]   79 #>  [4241,]   80 #>  [4242,]   79 #>  [4243,]   79 #>  [4244,]   80 #>  [4245,]   79 #>  [4246,]   79 #>  [4247,]   80 #>  [4248,]   79 #>  [4249,]   79 #>  [4250,]   80 #>  [4251,]   79 #>  [4252,]   80 #>  [4253,]   79 #>  [4254,]   79 #>  [4255,]   79 #>  [4256,]   79 #>  [4257,]   79 #>  [4258,]   80 #>  [4259,]   80 #>  [4260,]   79 #>  [4261,]   80 #>  [4262,]   79 #>  [4263,]   79 #>  [4264,]   79 #>  [4265,]   79 #>  [4266,]   79 #>  [4267,]   79 #>  [4268,]   80 #>  [4269,]   79 #>  [4270,]   80 #>  [4271,]   80 #>  [4272,]   79 #>  [4273,]   80 #>  [4274,]   79 #>  [4275,]   79 #>  [4276,]   80 #>  [4277,]   80 #>  [4278,]   79 #>  [4279,]   80 #>  [4280,]   79 #>  [4281,]   80 #>  [4282,]   79 #>  [4283,]   80 #>  [4284,]   79 #>  [4285,]   79 #>  [4286,]   80 #>  [4287,]   79 #>  [4288,]   79 #>  [4289,]   79 #>  [4290,]   80 #>  [4291,]   79 #>  [4292,]   79 #>  [4293,]   80 #>  [4294,]   80 #>  [4295,]   79 #>  [4296,]   80 #>  [4297,]   79 #>  [4298,]   79 #>  [4299,]   80 #>  [4300,]   80 #>  [4301,]   82 #>  [4302,]   82 #>  [4303,]   81 #>  [4304,]   82 #>  [4305,]   82 #>  [4306,]   82 #>  [4307,]   82 #>  [4308,]   82 #>  [4309,]   82 #>  [4310,]   81 #>  [4311,]   81 #>  [4312,]   82 #>  [4313,]   82 #>  [4314,]   81 #>  [4315,]   82 #>  [4316,]   82 #>  [4317,]   82 #>  [4318,]   82 #>  [4319,]   82 #>  [4320,]   82 #>  [4321,]   82 #>  [4322,]   82 #>  [4323,]   82 #>  [4324,]   82 #>  [4325,]   82 #>  [4326,]   82 #>  [4327,]   82 #>  [4328,]   82 #>  [4329,]   82 #>  [4330,]   82 #>  [4331,]   81 #>  [4332,]   81 #>  [4333,]   82 #>  [4334,]   82 #>  [4335,]   82 #>  [4336,]   82 #>  [4337,]   82 #>  [4338,]   82 #>  [4339,]   82 #>  [4340,]   81 #>  [4341,]   82 #>  [4342,]   82 #>  [4343,]   82 #>  [4344,]   82 #>  [4345,]   82 #>  [4346,]   82 #>  [4347,]   82 #>  [4348,]   81 #>  [4349,]   82 #>  [4350,]   82 #>  [4351,]   82 #>  [4352,]   82 #>  [4353,]   82 #>  [4354,]   82 #>  [4355,]   82 #>  [4356,]   82 #>  [4357,]   82 #>  [4358,]   82 #>  [4359,]   82 #>  [4360,]   82 #>  [4361,]   82 #>  [4362,]   82 #>  [4363,]   82 #>  [4364,]   82 #>  [4365,]   82 #>  [4366,]   82 #>  [4367,]   82 #>  [4368,]   82 #>  [4369,]   82 #>  [4370,]   81 #>  [4371,]   82 #>  [4372,]   82 #>  [4373,]   82 #>  [4374,]   81 #>  [4375,]   82 #>  [4376,]   82 #>  [4377,]   82 #>  [4378,]   82 #>  [4379,]   82 #>  [4380,]   82 #>  [4381,]   82 #>  [4382,]   82 #>  [4383,]   82 #>  [4384,]   82 #>  [4385,]   82 #>  [4386,]   82 #>  [4387,]   82 #>  [4388,]   82 #>  [4389,]   82 #>  [4390,]   82 #>  [4391,]   82 #>  [4392,]   82 #>  [4393,]   82 #>  [4394,]   82 #>  [4395,]   82 #>  [4396,]   82 #>  [4397,]   82 #>  [4398,]   81 #>  [4399,]   82 #>  [4400,]   82 #>  [4401,]   84 #>  [4402,]   83 #>  [4403,]   83 #>  [4404,]   84 #>  [4405,]   83 #>  [4406,]   83 #>  [4407,]   84 #>  [4408,]   83 #>  [4409,]   84 #>  [4410,]   84 #>  [4411,]   83 #>  [4412,]   83 #>  [4413,]   84 #>  [4414,]   84 #>  [4415,]   83 #>  [4416,]   84 #>  [4417,]   83 #>  [4418,]   83 #>  [4419,]   83 #>  [4420,]   84 #>  [4421,]   83 #>  [4422,]   84 #>  [4423,]   83 #>  [4424,]   84 #>  [4425,]   84 #>  [4426,]   83 #>  [4427,]   83 #>  [4428,]   84 #>  [4429,]   83 #>  [4430,]   83 #>  [4431,]   83 #>  [4432,]   83 #>  [4433,]   83 #>  [4434,]   83 #>  [4435,]   83 #>  [4436,]   84 #>  [4437,]   83 #>  [4438,]   83 #>  [4439,]   84 #>  [4440,]   83 #>  [4441,]   83 #>  [4442,]   83 #>  [4443,]   83 #>  [4444,]   83 #>  [4445,]   84 #>  [4446,]   83 #>  [4447,]   83 #>  [4448,]   83 #>  [4449,]   84 #>  [4450,]   84 #>  [4451,]   83 #>  [4452,]   84 #>  [4453,]   84 #>  [4454,]   84 #>  [4455,]   84 #>  [4456,]   83 #>  [4457,]   84 #>  [4458,]   84 #>  [4459,]   84 #>  [4460,]   83 #>  [4461,]   83 #>  [4462,]   83 #>  [4463,]   83 #>  [4464,]   83 #>  [4465,]   83 #>  [4466,]   83 #>  [4467,]   84 #>  [4468,]   83 #>  [4469,]   83 #>  [4470,]   83 #>  [4471,]   83 #>  [4472,]   84 #>  [4473,]   84 #>  [4474,]   83 #>  [4475,]   83 #>  [4476,]   84 #>  [4477,]   83 #>  [4478,]   83 #>  [4479,]   83 #>  [4480,]   83 #>  [4481,]   83 #>  [4482,]   83 #>  [4483,]   83 #>  [4484,]   83 #>  [4485,]   84 #>  [4486,]   84 #>  [4487,]   84 #>  [4488,]   84 #>  [4489,]   83 #>  [4490,]   84 #>  [4491,]   84 #>  [4492,]   83 #>  [4493,]   83 #>  [4494,]   83 #>  [4495,]   83 #>  [4496,]   83 #>  [4497,]   83 #>  [4498,]   83 #>  [4499,]   83 #>  [4500,]   83 #>  [4501,]   86 #>  [4502,]   86 #>  [4503,]   85 #>  [4504,]   85 #>  [4505,]   86 #>  [4506,]   86 #>  [4507,]   85 #>  [4508,]   86 #>  [4509,]   86 #>  [4510,]   86 #>  [4511,]   86 #>  [4512,]   85 #>  [4513,]   86 #>  [4514,]   86 #>  [4515,]   86 #>  [4516,]   86 #>  [4517,]   86 #>  [4518,]   86 #>  [4519,]   86 #>  [4520,]   86 #>  [4521,]   86 #>  [4522,]   86 #>  [4523,]   86 #>  [4524,]   86 #>  [4525,]   85 #>  [4526,]   86 #>  [4527,]   86 #>  [4528,]   86 #>  [4529,]   86 #>  [4530,]   86 #>  [4531,]   85 #>  [4532,]   86 #>  [4533,]   86 #>  [4534,]   86 #>  [4535,]   86 #>  [4536,]   86 #>  [4537,]   86 #>  [4538,]   86 #>  [4539,]   86 #>  [4540,]   86 #>  [4541,]   86 #>  [4542,]   86 #>  [4543,]   86 #>  [4544,]   86 #>  [4545,]   86 #>  [4546,]   86 #>  [4547,]   86 #>  [4548,]   86 #>  [4549,]   86 #>  [4550,]   86 #>  [4551,]   86 #>  [4552,]   85 #>  [4553,]   86 #>  [4554,]   86 #>  [4555,]   86 #>  [4556,]   86 #>  [4557,]   86 #>  [4558,]   86 #>  [4559,]   85 #>  [4560,]   85 #>  [4561,]   86 #>  [4562,]   86 #>  [4563,]   86 #>  [4564,]   86 #>  [4565,]   86 #>  [4566,]   86 #>  [4567,]   86 #>  [4568,]   86 #>  [4569,]   86 #>  [4570,]   86 #>  [4571,]   86 #>  [4572,]   86 #>  [4573,]   86 #>  [4574,]   86 #>  [4575,]   86 #>  [4576,]   86 #>  [4577,]   86 #>  [4578,]   86 #>  [4579,]   86 #>  [4580,]   86 #>  [4581,]   86 #>  [4582,]   86 #>  [4583,]   86 #>  [4584,]   86 #>  [4585,]   86 #>  [4586,]   86 #>  [4587,]   86 #>  [4588,]   86 #>  [4589,]   86 #>  [4590,]   86 #>  [4591,]   86 #>  [4592,]   86 #>  [4593,]   86 #>  [4594,]   86 #>  [4595,]   86 #>  [4596,]   85 #>  [4597,]   85 #>  [4598,]   86 #>  [4599,]   86 #>  [4600,]   86 #>  [4601,]   88 #>  [4602,]   88 #>  [4603,]   87 #>  [4604,]   88 #>  [4605,]   87 #>  [4606,]   88 #>  [4607,]   88 #>  [4608,]   88 #>  [4609,]   87 #>  [4610,]   87 #>  [4611,]   87 #>  [4612,]   88 #>  [4613,]   88 #>  [4614,]   87 #>  [4615,]   88 #>  [4616,]   88 #>  [4617,]   88 #>  [4618,]   88 #>  [4619,]   88 #>  [4620,]   88 #>  [4621,]   87 #>  [4622,]   88 #>  [4623,]   88 #>  [4624,]   87 #>  [4625,]   87 #>  [4626,]   88 #>  [4627,]   88 #>  [4628,]   87 #>  [4629,]   88 #>  [4630,]   88 #>  [4631,]   87 #>  [4632,]   87 #>  [4633,]   88 #>  [4634,]   87 #>  [4635,]   87 #>  [4636,]   88 #>  [4637,]   88 #>  [4638,]   88 #>  [4639,]   87 #>  [4640,]   87 #>  [4641,]   88 #>  [4642,]   88 #>  [4643,]   88 #>  [4644,]   88 #>  [4645,]   88 #>  [4646,]   88 #>  [4647,]   87 #>  [4648,]   87 #>  [4649,]   88 #>  [4650,]   88 #>  [4651,]   88 #>  [4652,]   87 #>  [4653,]   88 #>  [4654,]   87 #>  [4655,]   88 #>  [4656,]   88 #>  [4657,]   88 #>  [4658,]   88 #>  [4659,]   88 #>  [4660,]   88 #>  [4661,]   88 #>  [4662,]   87 #>  [4663,]   88 #>  [4664,]   88 #>  [4665,]   87 #>  [4666,]   88 #>  [4667,]   88 #>  [4668,]   88 #>  [4669,]   88 #>  [4670,]   87 #>  [4671,]   88 #>  [4672,]   87 #>  [4673,]   88 #>  [4674,]   87 #>  [4675,]   88 #>  [4676,]   87 #>  [4677,]   88 #>  [4678,]   88 #>  [4679,]   88 #>  [4680,]   88 #>  [4681,]   88 #>  [4682,]   87 #>  [4683,]   88 #>  [4684,]   88 #>  [4685,]   88 #>  [4686,]   88 #>  [4687,]   88 #>  [4688,]   88 #>  [4689,]   88 #>  [4690,]   88 #>  [4691,]   87 #>  [4692,]   88 #>  [4693,]   88 #>  [4694,]   88 #>  [4695,]   88 #>  [4696,]   88 #>  [4697,]   88 #>  [4698,]   87 #>  [4699,]   88 #>  [4700,]   88 #>  [4701,]   89 #>  [4702,]   89 #>  [4703,]   89 #>  [4704,]   89 #>  [4705,]   89 #>  [4706,]   89 #>  [4707,]   89 #>  [4708,]   89 #>  [4709,]   89 #>  [4710,]   89 #>  [4711,]   89 #>  [4712,]   89 #>  [4713,]   89 #>  [4714,]   89 #>  [4715,]   89 #>  [4716,]   89 #>  [4717,]   89 #>  [4718,]   89 #>  [4719,]   89 #>  [4720,]   89 #>  [4721,]   89 #>  [4722,]   90 #>  [4723,]   89 #>  [4724,]   89 #>  [4725,]   89 #>  [4726,]   89 #>  [4727,]   89 #>  [4728,]   89 #>  [4729,]   90 #>  [4730,]   89 #>  [4731,]   89 #>  [4732,]   89 #>  [4733,]   89 #>  [4734,]   89 #>  [4735,]   89 #>  [4736,]   89 #>  [4737,]   89 #>  [4738,]   89 #>  [4739,]   89 #>  [4740,]   89 #>  [4741,]   89 #>  [4742,]   89 #>  [4743,]   89 #>  [4744,]   89 #>  [4745,]   89 #>  [4746,]   89 #>  [4747,]   89 #>  [4748,]   89 #>  [4749,]   89 #>  [4750,]   89 #>  [4751,]   89 #>  [4752,]   89 #>  [4753,]   89 #>  [4754,]   89 #>  [4755,]   89 #>  [4756,]   89 #>  [4757,]   89 #>  [4758,]   90 #>  [4759,]   89 #>  [4760,]   89 #>  [4761,]   89 #>  [4762,]   89 #>  [4763,]   89 #>  [4764,]   90 #>  [4765,]   89 #>  [4766,]   89 #>  [4767,]   89 #>  [4768,]   89 #>  [4769,]   89 #>  [4770,]   89 #>  [4771,]   89 #>  [4772,]   89 #>  [4773,]   89 #>  [4774,]   89 #>  [4775,]   89 #>  [4776,]   89 #>  [4777,]   90 #>  [4778,]   89 #>  [4779,]   89 #>  [4780,]   89 #>  [4781,]   89 #>  [4782,]   89 #>  [4783,]   89 #>  [4784,]   89 #>  [4785,]   89 #>  [4786,]   89 #>  [4787,]   90 #>  [4788,]   89 #>  [4789,]   89 #>  [4790,]   89 #>  [4791,]   89 #>  [4792,]   89 #>  [4793,]   89 #>  [4794,]   89 #>  [4795,]   89 #>  [4796,]   89 #>  [4797,]   89 #>  [4798,]   89 #>  [4799,]   89 #>  [4800,]   89 #>  [4801,]   91 #>  [4802,]   91 #>  [4803,]   91 #>  [4804,]   91 #>  [4805,]   91 #>  [4806,]   91 #>  [4807,]   91 #>  [4808,]   92 #>  [4809,]   91 #>  [4810,]   91 #>  [4811,]   91 #>  [4812,]   91 #>  [4813,]   92 #>  [4814,]   91 #>  [4815,]   92 #>  [4816,]   91 #>  [4817,]   91 #>  [4818,]   91 #>  [4819,]   92 #>  [4820,]   92 #>  [4821,]   91 #>  [4822,]   92 #>  [4823,]   91 #>  [4824,]   91 #>  [4825,]   91 #>  [4826,]   91 #>  [4827,]   92 #>  [4828,]   91 #>  [4829,]   92 #>  [4830,]   91 #>  [4831,]   91 #>  [4832,]   91 #>  [4833,]   91 #>  [4834,]   91 #>  [4835,]   91 #>  [4836,]   92 #>  [4837,]   92 #>  [4838,]   92 #>  [4839,]   91 #>  [4840,]   91 #>  [4841,]   92 #>  [4842,]   91 #>  [4843,]   91 #>  [4844,]   91 #>  [4845,]   91 #>  [4846,]   92 #>  [4847,]   91 #>  [4848,]   91 #>  [4849,]   91 #>  [4850,]   92 #>  [4851,]   92 #>  [4852,]   91 #>  [4853,]   92 #>  [4854,]   91 #>  [4855,]   92 #>  [4856,]   91 #>  [4857,]   91 #>  [4858,]   92 #>  [4859,]   91 #>  [4860,]   92 #>  [4861,]   91 #>  [4862,]   91 #>  [4863,]   91 #>  [4864,]   92 #>  [4865,]   91 #>  [4866,]   92 #>  [4867,]   91 #>  [4868,]   91 #>  [4869,]   92 #>  [4870,]   91 #>  [4871,]   92 #>  [4872,]   91 #>  [4873,]   91 #>  [4874,]   91 #>  [4875,]   91 #>  [4876,]   91 #>  [4877,]   92 #>  [4878,]   91 #>  [4879,]   91 #>  [4880,]   92 #>  [4881,]   92 #>  [4882,]   91 #>  [4883,]   92 #>  [4884,]   91 #>  [4885,]   91 #>  [4886,]   91 #>  [4887,]   92 #>  [4888,]   91 #>  [4889,]   91 #>  [4890,]   92 #>  [4891,]   91 #>  [4892,]   91 #>  [4893,]   91 #>  [4894,]   91 #>  [4895,]   91 #>  [4896,]   92 #>  [4897,]   92 #>  [4898,]   91 #>  [4899,]   91 #>  [4900,]   92 #>  [4901,]   93 #>  [4902,]   93 #>  [4903,]   93 #>  [4904,]   94 #>  [4905,]   93 #>  [4906,]   93 #>  [4907,]   93 #>  [4908,]   93 #>  [4909,]   94 #>  [4910,]   93 #>  [4911,]   94 #>  [4912,]   94 #>  [4913,]   93 #>  [4914,]   94 #>  [4915,]   94 #>  [4916,]   93 #>  [4917,]   93 #>  [4918,]   94 #>  [4919,]   94 #>  [4920,]   93 #>  [4921,]   94 #>  [4922,]   93 #>  [4923,]   93 #>  [4924,]   93 #>  [4925,]   93 #>  [4926,]   93 #>  [4927,]   94 #>  [4928,]   93 #>  [4929,]   93 #>  [4930,]   93 #>  [4931,]   94 #>  [4932,]   93 #>  [4933,]   94 #>  [4934,]   93 #>  [4935,]   93 #>  [4936,]   94 #>  [4937,]   93 #>  [4938,]   94 #>  [4939,]   93 #>  [4940,]   93 #>  [4941,]   94 #>  [4942,]   94 #>  [4943,]   93 #>  [4944,]   93 #>  [4945,]   93 #>  [4946,]   93 #>  [4947,]   93 #>  [4948,]   94 #>  [4949,]   93 #>  [4950,]   93 #>  [4951,]   93 #>  [4952,]   93 #>  [4953,]   93 #>  [4954,]   93 #>  [4955,]   93 #>  [4956,]   93 #>  [4957,]   93 #>  [4958,]   94 #>  [4959,]   93 #>  [4960,]   93 #>  [4961,]   94 #>  [4962,]   93 #>  [4963,]   93 #>  [4964,]   93 #>  [4965,]   93 #>  [4966,]   93 #>  [4967,]   93 #>  [4968,]   94 #>  [4969,]   94 #>  [4970,]   93 #>  [4971,]   93 #>  [4972,]   93 #>  [4973,]   93 #>  [4974,]   94 #>  [4975,]   94 #>  [4976,]   93 #>  [4977,]   93 #>  [4978,]   93 #>  [4979,]   93 #>  [4980,]   93 #>  [4981,]   93 #>  [4982,]   94 #>  [4983,]   93 #>  [4984,]   93 #>  [4985,]   94 #>  [4986,]   93 #>  [4987,]   93 #>  [4988,]   93 #>  [4989,]   93 #>  [4990,]   93 #>  [4991,]   93 #>  [4992,]   94 #>  [4993,]   94 #>  [4994,]   93 #>  [4995,]   93 #>  [4996,]   94 #>  [4997,]   94 #>  [4998,]   93 #>  [4999,]   93 #>  [5000,]   93 #>  [5001,]   96 #>  [5002,]   96 #>  [5003,]   95 #>  [5004,]   95 #>  [5005,]   95 #>  [5006,]   95 #>  [5007,]   95 #>  [5008,]   96 #>  [5009,]   95 #>  [5010,]   95 #>  [5011,]   95 #>  [5012,]   95 #>  [5013,]   96 #>  [5014,]   95 #>  [5015,]   96 #>  [5016,]   96 #>  [5017,]   95 #>  [5018,]   95 #>  [5019,]   96 #>  [5020,]   96 #>  [5021,]   95 #>  [5022,]   96 #>  [5023,]   96 #>  [5024,]   95 #>  [5025,]   95 #>  [5026,]   96 #>  [5027,]   96 #>  [5028,]   95 #>  [5029,]   96 #>  [5030,]   96 #>  [5031,]   95 #>  [5032,]   95 #>  [5033,]   96 #>  [5034,]   95 #>  [5035,]   95 #>  [5036,]   96 #>  [5037,]   96 #>  [5038,]   96 #>  [5039,]   95 #>  [5040,]   95 #>  [5041,]   96 #>  [5042,]   95 #>  [5043,]   96 #>  [5044,]   96 #>  [5045,]   96 #>  [5046,]   96 #>  [5047,]   95 #>  [5048,]   95 #>  [5049,]   95 #>  [5050,]   96 #>  [5051,]   96 #>  [5052,]   95 #>  [5053,]   96 #>  [5054,]   95 #>  [5055,]   96 #>  [5056,]   96 #>  [5057,]   95 #>  [5058,]   96 #>  [5059,]   96 #>  [5060,]   96 #>  [5061,]   96 #>  [5062,]   95 #>  [5063,]   96 #>  [5064,]   96 #>  [5065,]   95 #>  [5066,]   96 #>  [5067,]   95 #>  [5068,]   96 #>  [5069,]   96 #>  [5070,]   95 #>  [5071,]   96 #>  [5072,]   95 #>  [5073,]   95 #>  [5074,]   95 #>  [5075,]   96 #>  [5076,]   95 #>  [5077,]   96 #>  [5078,]   96 #>  [5079,]   95 #>  [5080,]   96 #>  [5081,]   96 #>  [5082,]   95 #>  [5083,]   96 #>  [5084,]   96 #>  [5085,]   96 #>  [5086,]   95 #>  [5087,]   96 #>  [5088,]   95 #>  [5089,]   95 #>  [5090,]   96 #>  [5091,]   95 #>  [5092,]   95 #>  [5093,]   96 #>  [5094,]   95 #>  [5095,]   96 #>  [5096,]   96 #>  [5097,]   96 #>  [5098,]   95 #>  [5099,]   95 #>  [5100,]   96 #>  [5101,]   98 #>  [5102,]   97 #>  [5103,]   97 #>  [5104,]   98 #>  [5105,]   97 #>  [5106,]   97 #>  [5107,]   98 #>  [5108,]   98 #>  [5109,]   98 #>  [5110,]   98 #>  [5111,]   97 #>  [5112,]   97 #>  [5113,]   98 #>  [5114,]   97 #>  [5115,]   98 #>  [5116,]   98 #>  [5117,]   98 #>  [5118,]   98 #>  [5119,]   97 #>  [5120,]   97 #>  [5121,]   98 #>  [5122,]   97 #>  [5123,]   98 #>  [5124,]   97 #>  [5125,]   98 #>  [5126,]   97 #>  [5127,]   98 #>  [5128,]   98 #>  [5129,]   97 #>  [5130,]   97 #>  [5131,]   97 #>  [5132,]   97 #>  [5133,]   97 #>  [5134,]   97 #>  [5135,]   97 #>  [5136,]   97 #>  [5137,]   98 #>  [5138,]   97 #>  [5139,]   98 #>  [5140,]   97 #>  [5141,]   97 #>  [5142,]   97 #>  [5143,]   98 #>  [5144,]   97 #>  [5145,]   98 #>  [5146,]   98 #>  [5147,]   98 #>  [5148,]   97 #>  [5149,]   97 #>  [5150,]   97 #>  [5151,]   97 #>  [5152,]   97 #>  [5153,]   98 #>  [5154,]   97 #>  [5155,]   97 #>  [5156,]   98 #>  [5157,]   97 #>  [5158,]   97 #>  [5159,]   97 #>  [5160,]   97 #>  [5161,]   98 #>  [5162,]   97 #>  [5163,]   97 #>  [5164,]   98 #>  [5165,]   97 #>  [5166,]   97 #>  [5167,]   97 #>  [5168,]   97 #>  [5169,]   97 #>  [5170,]   98 #>  [5171,]   98 #>  [5172,]   98 #>  [5173,]   98 #>  [5174,]   98 #>  [5175,]   98 #>  [5176,]   98 #>  [5177,]   98 #>  [5178,]   97 #>  [5179,]   98 #>  [5180,]   97 #>  [5181,]   97 #>  [5182,]   98 #>  [5183,]   97 #>  [5184,]   98 #>  [5185,]   97 #>  [5186,]   97 #>  [5187,]   98 #>  [5188,]   98 #>  [5189,]   97 #>  [5190,]   98 #>  [5191,]   97 #>  [5192,]   97 #>  [5193,]   97 #>  [5194,]   98 #>  [5195,]   98 #>  [5196,]   98 #>  [5197,]   97 #>  [5198,]   97 #>  [5199,]   97 #>  [5200,]   98 #>  [5201,]  100 #>  [5202,]  100 #>  [5203,]  100 #>  [5204,]   99 #>  [5205,]  100 #>  [5206,]  100 #>  [5207,]  100 #>  [5208,]   99 #>  [5209,]   99 #>  [5210,]  100 #>  [5211,]   99 #>  [5212,]  100 #>  [5213,]   99 #>  [5214,]  100 #>  [5215,]  100 #>  [5216,]  100 #>  [5217,]   99 #>  [5218,]  100 #>  [5219,]  100 #>  [5220,]  100 #>  [5221,]  100 #>  [5222,]   99 #>  [5223,]  100 #>  [5224,]  100 #>  [5225,]  100 #>  [5226,]  100 #>  [5227,]   99 #>  [5228,]  100 #>  [5229,]  100 #>  [5230,]  100 #>  [5231,]  100 #>  [5232,]  100 #>  [5233,]  100 #>  [5234,]  100 #>  [5235,]   99 #>  [5236,]  100 #>  [5237,]  100 #>  [5238,]  100 #>  [5239,]  100 #>  [5240,]  100 #>  [5241,]  100 #>  [5242,]  100 #>  [5243,]   99 #>  [5244,]   99 #>  [5245,]  100 #>  [5246,]  100 #>  [5247,]  100 #>  [5248,]  100 #>  [5249,]   99 #>  [5250,]  100 #>  [5251,]  100 #>  [5252,]   99 #>  [5253,]  100 #>  [5254,]  100 #>  [5255,]   99 #>  [5256,]  100 #>  [5257,]  100 #>  [5258,]   99 #>  [5259,]  100 #>  [5260,]  100 #>  [5261,]  100 #>  [5262,]  100 #>  [5263,]  100 #>  [5264,]  100 #>  [5265,]  100 #>  [5266,]   99 #>  [5267,]  100 #>  [5268,]  100 #>  [5269,]   99 #>  [5270,]  100 #>  [5271,]  100 #>  [5272,]  100 #>  [5273,]  100 #>  [5274,]  100 #>  [5275,]  100 #>  [5276,]  100 #>  [5277,]  100 #>  [5278,]  100 #>  [5279,]   99 #>  [5280,]   99 #>  [5281,]   99 #>  [5282,]   99 #>  [5283,]   99 #>  [5284,]  100 #>  [5285,]  100 #>  [5286,]  100 #>  [5287,]   99 #>  [5288,]   99 #>  [5289,]   99 #>  [5290,]   99 #>  [5291,]  100 #>  [5292,]   99 #>  [5293,]  100 #>  [5294,]  100 #>  [5295,]   99 #>  [5296,]  100 #>  [5297,]  100 #>  [5298,]  100 #>  [5299,]   99 #>  [5300,]  100 #>  [5301,]  102 #>  [5302,]  102 #>  [5303,]  101 #>  [5304,]  101 #>  [5305,]  101 #>  [5306,]  102 #>  [5307,]  101 #>  [5308,]  101 #>  [5309,]  101 #>  [5310,]  101 #>  [5311,]  102 #>  [5312,]  101 #>  [5313,]  102 #>  [5314,]  102 #>  [5315,]  102 #>  [5316,]  102 #>  [5317,]  102 #>  [5318,]  101 #>  [5319,]  102 #>  [5320,]  101 #>  [5321,]  102 #>  [5322,]  102 #>  [5323,]  101 #>  [5324,]  101 #>  [5325,]  101 #>  [5326,]  102 #>  [5327,]  102 #>  [5328,]  101 #>  [5329,]  102 #>  [5330,]  101 #>  [5331,]  101 #>  [5332,]  101 #>  [5333,]  102 #>  [5334,]  101 #>  [5335,]  102 #>  [5336,]  101 #>  [5337,]  102 #>  [5338,]  101 #>  [5339,]  101 #>  [5340,]  101 #>  [5341,]  102 #>  [5342,]  101 #>  [5343,]  101 #>  [5344,]  102 #>  [5345,]  101 #>  [5346,]  101 #>  [5347,]  102 #>  [5348,]  101 #>  [5349,]  101 #>  [5350,]  102 #>  [5351,]  101 #>  [5352,]  102 #>  [5353,]  101 #>  [5354,]  101 #>  [5355,]  102 #>  [5356,]  101 #>  [5357,]  101 #>  [5358,]  102 #>  [5359,]  102 #>  [5360,]  101 #>  [5361,]  102 #>  [5362,]  101 #>  [5363,]  101 #>  [5364,]  101 #>  [5365,]  101 #>  [5366,]  101 #>  [5367,]  101 #>  [5368,]  102 #>  [5369,]  102 #>  [5370,]  102 #>  [5371,]  102 #>  [5372,]  101 #>  [5373,]  102 #>  [5374,]  102 #>  [5375,]  102 #>  [5376,]  102 #>  [5377,]  102 #>  [5378,]  101 #>  [5379,]  102 #>  [5380,]  101 #>  [5381,]  102 #>  [5382,]  101 #>  [5383,]  102 #>  [5384,]  102 #>  [5385,]  101 #>  [5386,]  102 #>  [5387,]  102 #>  [5388,]  101 #>  [5389,]  101 #>  [5390,]  102 #>  [5391,]  101 #>  [5392,]  102 #>  [5393,]  102 #>  [5394,]  102 #>  [5395,]  101 #>  [5396,]  102 #>  [5397,]  102 #>  [5398,]  102 #>  [5399,]  102 #>  [5400,]  102 #>  [5401,]  104 #>  [5402,]  104 #>  [5403,]  103 #>  [5404,]  104 #>  [5405,]  104 #>  [5406,]  104 #>  [5407,]  104 #>  [5408,]  104 #>  [5409,]  104 #>  [5410,]  103 #>  [5411,]  103 #>  [5412,]  104 #>  [5413,]  104 #>  [5414,]  103 #>  [5415,]  104 #>  [5416,]  104 #>  [5417,]  104 #>  [5418,]  104 #>  [5419,]  104 #>  [5420,]  104 #>  [5421,]  104 #>  [5422,]  104 #>  [5423,]  104 #>  [5424,]  104 #>  [5425,]  104 #>  [5426,]  104 #>  [5427,]  104 #>  [5428,]  104 #>  [5429,]  104 #>  [5430,]  104 #>  [5431,]  104 #>  [5432,]  103 #>  [5433,]  104 #>  [5434,]  104 #>  [5435,]  104 #>  [5436,]  104 #>  [5437,]  104 #>  [5438,]  104 #>  [5439,]  104 #>  [5440,]  103 #>  [5441,]  104 #>  [5442,]  104 #>  [5443,]  104 #>  [5444,]  104 #>  [5445,]  104 #>  [5446,]  104 #>  [5447,]  104 #>  [5448,]  103 #>  [5449,]  104 #>  [5450,]  104 #>  [5451,]  104 #>  [5452,]  104 #>  [5453,]  104 #>  [5454,]  104 #>  [5455,]  104 #>  [5456,]  104 #>  [5457,]  104 #>  [5458,]  104 #>  [5459,]  104 #>  [5460,]  104 #>  [5461,]  104 #>  [5462,]  104 #>  [5463,]  104 #>  [5464,]  104 #>  [5465,]  104 #>  [5466,]  104 #>  [5467,]  104 #>  [5468,]  104 #>  [5469,]  104 #>  [5470,]  103 #>  [5471,]  104 #>  [5472,]  104 #>  [5473,]  104 #>  [5474,]  104 #>  [5475,]  104 #>  [5476,]  104 #>  [5477,]  104 #>  [5478,]  104 #>  [5479,]  104 #>  [5480,]  104 #>  [5481,]  104 #>  [5482,]  104 #>  [5483,]  104 #>  [5484,]  104 #>  [5485,]  104 #>  [5486,]  104 #>  [5487,]  104 #>  [5488,]  104 #>  [5489,]  104 #>  [5490,]  104 #>  [5491,]  104 #>  [5492,]  104 #>  [5493,]  104 #>  [5494,]  104 #>  [5495,]  104 #>  [5496,]  104 #>  [5497,]  104 #>  [5498,]  103 #>  [5499,]  104 #>  [5500,]  104 #>  [5501,]  106 #>  [5502,]  106 #>  [5503,]  106 #>  [5504,]  105 #>  [5505,]  106 #>  [5506,]  106 #>  [5507,]  106 #>  [5508,]  105 #>  [5509,]  105 #>  [5510,]  106 #>  [5511,]  105 #>  [5512,]  106 #>  [5513,]  105 #>  [5514,]  106 #>  [5515,]  106 #>  [5516,]  106 #>  [5517,]  105 #>  [5518,]  106 #>  [5519,]  106 #>  [5520,]  106 #>  [5521,]  106 #>  [5522,]  105 #>  [5523,]  106 #>  [5524,]  106 #>  [5525,]  106 #>  [5526,]  106 #>  [5527,]  105 #>  [5528,]  106 #>  [5529,]  106 #>  [5530,]  106 #>  [5531,]  106 #>  [5532,]  106 #>  [5533,]  106 #>  [5534,]  106 #>  [5535,]  105 #>  [5536,]  106 #>  [5537,]  106 #>  [5538,]  106 #>  [5539,]  106 #>  [5540,]  106 #>  [5541,]  106 #>  [5542,]  106 #>  [5543,]  106 #>  [5544,]  105 #>  [5545,]  106 #>  [5546,]  106 #>  [5547,]  106 #>  [5548,]  106 #>  [5549,]  105 #>  [5550,]  106 #>  [5551,]  106 #>  [5552,]  105 #>  [5553,]  106 #>  [5554,]  106 #>  [5555,]  105 #>  [5556,]  106 #>  [5557,]  106 #>  [5558,]  105 #>  [5559,]  106 #>  [5560,]  106 #>  [5561,]  106 #>  [5562,]  106 #>  [5563,]  106 #>  [5564,]  106 #>  [5565,]  106 #>  [5566,]  105 #>  [5567,]  106 #>  [5568,]  106 #>  [5569,]  106 #>  [5570,]  106 #>  [5571,]  106 #>  [5572,]  106 #>  [5573,]  106 #>  [5574,]  106 #>  [5575,]  106 #>  [5576,]  106 #>  [5577,]  106 #>  [5578,]  106 #>  [5579,]  106 #>  [5580,]  105 #>  [5581,]  105 #>  [5582,]  105 #>  [5583,]  105 #>  [5584,]  106 #>  [5585,]  106 #>  [5586,]  106 #>  [5587,]  105 #>  [5588,]  105 #>  [5589,]  106 #>  [5590,]  105 #>  [5591,]  106 #>  [5592,]  105 #>  [5593,]  106 #>  [5594,]  106 #>  [5595,]  105 #>  [5596,]  106 #>  [5597,]  106 #>  [5598,]  106 #>  [5599,]  105 #>  [5600,]  106 #>  [5601,]  108 #>  [5602,]  108 #>  [5603,]  108 #>  [5604,]  108 #>  [5605,]  108 #>  [5606,]  107 #>  [5607,]  108 #>  [5608,]  108 #>  [5609,]  108 #>  [5610,]  108 #>  [5611,]  108 #>  [5612,]  108 #>  [5613,]  108 #>  [5614,]  108 #>  [5615,]  108 #>  [5616,]  108 #>  [5617,]  108 #>  [5618,]  108 #>  [5619,]  108 #>  [5620,]  107 #>  [5621,]  107 #>  [5622,]  108 #>  [5623,]  108 #>  [5624,]  108 #>  [5625,]  107 #>  [5626,]  108 #>  [5627,]  108 #>  [5628,]  108 #>  [5629,]  108 #>  [5630,]  108 #>  [5631,]  108 #>  [5632,]  108 #>  [5633,]  108 #>  [5634,]  108 #>  [5635,]  107 #>  [5636,]  108 #>  [5637,]  108 #>  [5638,]  108 #>  [5639,]  108 #>  [5640,]  108 #>  [5641,]  108 #>  [5642,]  107 #>  [5643,]  108 #>  [5644,]  107 #>  [5645,]  108 #>  [5646,]  108 #>  [5647,]  108 #>  [5648,]  108 #>  [5649,]  108 #>  [5650,]  108 #>  [5651,]  108 #>  [5652,]  108 #>  [5653,]  107 #>  [5654,]  108 #>  [5655,]  108 #>  [5656,]  107 #>  [5657,]  108 #>  [5658,]  108 #>  [5659,]  108 #>  [5660,]  108 #>  [5661,]  108 #>  [5662,]  108 #>  [5663,]  108 #>  [5664,]  108 #>  [5665,]  107 #>  [5666,]  108 #>  [5667,]  108 #>  [5668,]  108 #>  [5669,]  108 #>  [5670,]  108 #>  [5671,]  108 #>  [5672,]  108 #>  [5673,]  107 #>  [5674,]  107 #>  [5675,]  108 #>  [5676,]  108 #>  [5677,]  108 #>  [5678,]  108 #>  [5679,]  108 #>  [5680,]  107 #>  [5681,]  108 #>  [5682,]  107 #>  [5683,]  108 #>  [5684,]  107 #>  [5685,]  107 #>  [5686,]  107 #>  [5687,]  108 #>  [5688,]  108 #>  [5689,]  107 #>  [5690,]  108 #>  [5691,]  108 #>  [5692,]  108 #>  [5693,]  108 #>  [5694,]  107 #>  [5695,]  108 #>  [5696,]  108 #>  [5697,]  108 #>  [5698,]  108 #>  [5699,]  107 #>  [5700,]  108 #>  [5701,]  110 #>  [5702,]  110 #>  [5703,]  109 #>  [5704,]  110 #>  [5705,]  110 #>  [5706,]  110 #>  [5707,]  110 #>  [5708,]  110 #>  [5709,]  110 #>  [5710,]  110 #>  [5711,]  109 #>  [5712,]  109 #>  [5713,]  110 #>  [5714,]  109 #>  [5715,]  110 #>  [5716,]  110 #>  [5717,]  110 #>  [5718,]  110 #>  [5719,]  110 #>  [5720,]  109 #>  [5721,]  110 #>  [5722,]  110 #>  [5723,]  110 #>  [5724,]  110 #>  [5725,]  110 #>  [5726,]  109 #>  [5727,]  110 #>  [5728,]  110 #>  [5729,]  109 #>  [5730,]  110 #>  [5731,]  110 #>  [5732,]  109 #>  [5733,]  110 #>  [5734,]  110 #>  [5735,]  110 #>  [5736,]  109 #>  [5737,]  110 #>  [5738,]  110 #>  [5739,]  110 #>  [5740,]  109 #>  [5741,]  109 #>  [5742,]  109 #>  [5743,]  110 #>  [5744,]  110 #>  [5745,]  110 #>  [5746,]  110 #>  [5747,]  110 #>  [5748,]  109 #>  [5749,]  110 #>  [5750,]  110 #>  [5751,]  109 #>  [5752,]  110 #>  [5753,]  110 #>  [5754,]  109 #>  [5755,]  110 #>  [5756,]  110 #>  [5757,]  110 #>  [5758,]  110 #>  [5759,]  110 #>  [5760,]  109 #>  [5761,]  110 #>  [5762,]  109 #>  [5763,]  110 #>  [5764,]  110 #>  [5765,]  110 #>  [5766,]  109 #>  [5767,]  110 #>  [5768,]  109 #>  [5769,]  109 #>  [5770,]  110 #>  [5771,]  110 #>  [5772,]  110 #>  [5773,]  110 #>  [5774,]  110 #>  [5775,]  110 #>  [5776,]  110 #>  [5777,]  110 #>  [5778,]  110 #>  [5779,]  110 #>  [5780,]  109 #>  [5781,]  109 #>  [5782,]  110 #>  [5783,]  109 #>  [5784,]  110 #>  [5785,]  110 #>  [5786,]  110 #>  [5787,]  110 #>  [5788,]  110 #>  [5789,]  109 #>  [5790,]  110 #>  [5791,]  109 #>  [5792,]  110 #>  [5793,]  110 #>  [5794,]  110 #>  [5795,]  110 #>  [5796,]  110 #>  [5797,]  110 #>  [5798,]  110 #>  [5799,]  110 #>  [5800,]  110 #>  [5801,]  112 #>  [5802,]  112 #>  [5803,]  111 #>  [5804,]  111 #>  [5805,]  112 #>  [5806,]  112 #>  [5807,]  111 #>  [5808,]  111 #>  [5809,]  112 #>  [5810,]  112 #>  [5811,]  112 #>  [5812,]  111 #>  [5813,]  112 #>  [5814,]  111 #>  [5815,]  112 #>  [5816,]  112 #>  [5817,]  112 #>  [5818,]  112 #>  [5819,]  112 #>  [5820,]  112 #>  [5821,]  112 #>  [5822,]  112 #>  [5823,]  111 #>  [5824,]  112 #>  [5825,]  111 #>  [5826,]  112 #>  [5827,]  112 #>  [5828,]  112 #>  [5829,]  112 #>  [5830,]  112 #>  [5831,]  111 #>  [5832,]  111 #>  [5833,]  112 #>  [5834,]  112 #>  [5835,]  112 #>  [5836,]  112 #>  [5837,]  111 #>  [5838,]  112 #>  [5839,]  112 #>  [5840,]  111 #>  [5841,]  112 #>  [5842,]  112 #>  [5843,]  112 #>  [5844,]  112 #>  [5845,]  112 #>  [5846,]  111 #>  [5847,]  111 #>  [5848,]  112 #>  [5849,]  112 #>  [5850,]  112 #>  [5851,]  112 #>  [5852,]  111 #>  [5853,]  112 #>  [5854,]  112 #>  [5855,]  111 #>  [5856,]  112 #>  [5857,]  111 #>  [5858,]  112 #>  [5859,]  111 #>  [5860,]  111 #>  [5861,]  112 #>  [5862,]  112 #>  [5863,]  112 #>  [5864,]  112 #>  [5865,]  112 #>  [5866,]  112 #>  [5867,]  111 #>  [5868,]  111 #>  [5869,]  112 #>  [5870,]  112 #>  [5871,]  112 #>  [5872,]  111 #>  [5873,]  112 #>  [5874,]  111 #>  [5875,]  111 #>  [5876,]  111 #>  [5877,]  112 #>  [5878,]  111 #>  [5879,]  112 #>  [5880,]  111 #>  [5881,]  112 #>  [5882,]  112 #>  [5883,]  112 #>  [5884,]  112 #>  [5885,]  112 #>  [5886,]  111 #>  [5887,]  112 #>  [5888,]  112 #>  [5889,]  112 #>  [5890,]  112 #>  [5891,]  112 #>  [5892,]  111 #>  [5893,]  112 #>  [5894,]  112 #>  [5895,]  112 #>  [5896,]  111 #>  [5897,]  111 #>  [5898,]  111 #>  [5899,]  112 #>  [5900,]  112 #>  [5901,]  114 #>  [5902,]  113 #>  [5903,]  113 #>  [5904,]  114 #>  [5905,]  113 #>  [5906,]  113 #>  [5907,]  114 #>  [5908,]  114 #>  [5909,]  114 #>  [5910,]  114 #>  [5911,]  113 #>  [5912,]  113 #>  [5913,]  114 #>  [5914,]  113 #>  [5915,]  114 #>  [5916,]  114 #>  [5917,]  114 #>  [5918,]  114 #>  [5919,]  113 #>  [5920,]  113 #>  [5921,]  114 #>  [5922,]  113 #>  [5923,]  114 #>  [5924,]  113 #>  [5925,]  114 #>  [5926,]  113 #>  [5927,]  114 #>  [5928,]  114 #>  [5929,]  113 #>  [5930,]  113 #>  [5931,]  113 #>  [5932,]  113 #>  [5933,]  113 #>  [5934,]  113 #>  [5935,]  113 #>  [5936,]  113 #>  [5937,]  114 #>  [5938,]  113 #>  [5939,]  114 #>  [5940,]  113 #>  [5941,]  113 #>  [5942,]  113 #>  [5943,]  114 #>  [5944,]  113 #>  [5945,]  114 #>  [5946,]  114 #>  [5947,]  114 #>  [5948,]  113 #>  [5949,]  113 #>  [5950,]  113 #>  [5951,]  113 #>  [5952,]  113 #>  [5953,]  114 #>  [5954,]  113 #>  [5955,]  113 #>  [5956,]  114 #>  [5957,]  113 #>  [5958,]  113 #>  [5959,]  113 #>  [5960,]  113 #>  [5961,]  114 #>  [5962,]  113 #>  [5963,]  113 #>  [5964,]  114 #>  [5965,]  113 #>  [5966,]  113 #>  [5967,]  113 #>  [5968,]  113 #>  [5969,]  113 #>  [5970,]  114 #>  [5971,]  114 #>  [5972,]  114 #>  [5973,]  114 #>  [5974,]  114 #>  [5975,]  114 #>  [5976,]  114 #>  [5977,]  114 #>  [5978,]  113 #>  [5979,]  113 #>  [5980,]  113 #>  [5981,]  113 #>  [5982,]  114 #>  [5983,]  113 #>  [5984,]  114 #>  [5985,]  113 #>  [5986,]  113 #>  [5987,]  114 #>  [5988,]  114 #>  [5989,]  113 #>  [5990,]  114 #>  [5991,]  113 #>  [5992,]  113 #>  [5993,]  113 #>  [5994,]  114 #>  [5995,]  114 #>  [5996,]  114 #>  [5997,]  113 #>  [5998,]  113 #>  [5999,]  113 #>  [6000,]  114 #>  [6001,]  115 #>  [6002,]  115 #>  [6003,]  115 #>  [6004,]  115 #>  [6005,]  115 #>  [6006,]  115 #>  [6007,]  115 #>  [6008,]  115 #>  [6009,]  115 #>  [6010,]  115 #>  [6011,]  115 #>  [6012,]  115 #>  [6013,]  115 #>  [6014,]  115 #>  [6015,]  115 #>  [6016,]  115 #>  [6017,]  115 #>  [6018,]  115 #>  [6019,]  115 #>  [6020,]  115 #>  [6021,]  115 #>  [6022,]  115 #>  [6023,]  115 #>  [6024,]  115 #>  [6025,]  115 #>  [6026,]  115 #>  [6027,]  115 #>  [6028,]  115 #>  [6029,]  115 #>  [6030,]  115 #>  [6031,]  115 #>  [6032,]  115 #>  [6033,]  115 #>  [6034,]  115 #>  [6035,]  115 #>  [6036,]  115 #>  [6037,]  115 #>  [6038,]  115 #>  [6039,]  115 #>  [6040,]  115 #>  [6041,]  115 #>  [6042,]  115 #>  [6043,]  115 #>  [6044,]  115 #>  [6045,]  115 #>  [6046,]  115 #>  [6047,]  115 #>  [6048,]  115 #>  [6049,]  115 #>  [6050,]  115 #>  [6051,]  115 #>  [6052,]  115 #>  [6053,]  115 #>  [6054,]  115 #>  [6055,]  115 #>  [6056,]  115 #>  [6057,]  115 #>  [6058,]  115 #>  [6059,]  115 #>  [6060,]  115 #>  [6061,]  115 #>  [6062,]  115 #>  [6063,]  115 #>  [6064,]  115 #>  [6065,]  115 #>  [6066,]  115 #>  [6067,]  115 #>  [6068,]  115 #>  [6069,]  115 #>  [6070,]  115 #>  [6071,]  115 #>  [6072,]  115 #>  [6073,]  115 #>  [6074,]  115 #>  [6075,]  115 #>  [6076,]  115 #>  [6077,]  115 #>  [6078,]  115 #>  [6079,]  115 #>  [6080,]  115 #>  [6081,]  115 #>  [6082,]  115 #>  [6083,]  115 #>  [6084,]  115 #>  [6085,]  115 #>  [6086,]  115 #>  [6087,]  115 #>  [6088,]  115 #>  [6089,]  115 #>  [6090,]  115 #>  [6091,]  115 #>  [6092,]  115 #>  [6093,]  115 #>  [6094,]  115 #>  [6095,]  115 #>  [6096,]  115 #>  [6097,]  115 #>  [6098,]  115 #>  [6099,]  115 #>  [6100,]  115 #>  [6101,]  116 #>  [6102,]  116 #>  [6103,]  116 #>  [6104,]  117 #>  [6105,]  116 #>  [6106,]  116 #>  [6107,]  116 #>  [6108,]  116 #>  [6109,]  116 #>  [6110,]  116 #>  [6111,]  117 #>  [6112,]  117 #>  [6113,]  116 #>  [6114,]  117 #>  [6115,]  117 #>  [6116,]  116 #>  [6117,]  116 #>  [6118,]  116 #>  [6119,]  117 #>  [6120,]  116 #>  [6121,]  117 #>  [6122,]  116 #>  [6123,]  116 #>  [6124,]  116 #>  [6125,]  116 #>  [6126,]  116 #>  [6127,]  117 #>  [6128,]  116 #>  [6129,]  116 #>  [6130,]  116 #>  [6131,]  116 #>  [6132,]  116 #>  [6133,]  116 #>  [6134,]  116 #>  [6135,]  116 #>  [6136,]  116 #>  [6137,]  116 #>  [6138,]  117 #>  [6139,]  116 #>  [6140,]  116 #>  [6141,]  117 #>  [6142,]  117 #>  [6143,]  116 #>  [6144,]  116 #>  [6145,]  116 #>  [6146,]  116 #>  [6147,]  116 #>  [6148,]  117 #>  [6149,]  116 #>  [6150,]  116 #>  [6151,]  116 #>  [6152,]  116 #>  [6153,]  116 #>  [6154,]  116 #>  [6155,]  116 #>  [6156,]  116 #>  [6157,]  116 #>  [6158,]  116 #>  [6159,]  116 #>  [6160,]  116 #>  [6161,]  117 #>  [6162,]  116 #>  [6163,]  116 #>  [6164,]  116 #>  [6165,]  116 #>  [6166,]  116 #>  [6167,]  116 #>  [6168,]  116 #>  [6169,]  117 #>  [6170,]  116 #>  [6171,]  116 #>  [6172,]  116 #>  [6173,]  116 #>  [6174,]  117 #>  [6175,]  117 #>  [6176,]  116 #>  [6177,]  116 #>  [6178,]  116 #>  [6179,]  116 #>  [6180,]  116 #>  [6181,]  116 #>  [6182,]  117 #>  [6183,]  116 #>  [6184,]  116 #>  [6185,]  116 #>  [6186,]  116 #>  [6187,]  116 #>  [6188,]  116 #>  [6189,]  116 #>  [6190,]  116 #>  [6191,]  116 #>  [6192,]  117 #>  [6193,]  117 #>  [6194,]  116 #>  [6195,]  116 #>  [6196,]  117 #>  [6197,]  117 #>  [6198,]  116 #>  [6199,]  116 #>  [6200,]  116 #>  [6201,]  118 #>  [6202,]  118 #>  [6203,]  118 #>  [6204,]  118 #>  [6205,]  119 #>  [6206,]  118 #>  [6207,]  118 #>  [6208,]  118 #>  [6209,]  118 #>  [6210,]  118 #>  [6211,]  118 #>  [6212,]  118 #>  [6213,]  118 #>  [6214,]  118 #>  [6215,]  118 #>  [6216,]  118 #>  [6217,]  118 #>  [6218,]  119 #>  [6219,]  118 #>  [6220,]  118 #>  [6221,]  118 #>  [6222,]  118 #>  [6223,]  118 #>  [6224,]  118 #>  [6225,]  118 #>  [6226,]  118 #>  [6227,]  118 #>  [6228,]  118 #>  [6229,]  118 #>  [6230,]  118 #>  [6231,]  118 #>  [6232,]  119 #>  [6233,]  118 #>  [6234,]  118 #>  [6235,]  118 #>  [6236,]  118 #>  [6237,]  118 #>  [6238,]  118 #>  [6239,]  118 #>  [6240,]  118 #>  [6241,]  118 #>  [6242,]  118 #>  [6243,]  118 #>  [6244,]  118 #>  [6245,]  118 #>  [6246,]  118 #>  [6247,]  118 #>  [6248,]  118 #>  [6249,]  118 #>  [6250,]  118 #>  [6251,]  118 #>  [6252,]  118 #>  [6253,]  118 #>  [6254,]  118 #>  [6255,]  118 #>  [6256,]  118 #>  [6257,]  118 #>  [6258,]  118 #>  [6259,]  118 #>  [6260,]  118 #>  [6261,]  118 #>  [6262,]  118 #>  [6263,]  118 #>  [6264,]  118 #>  [6265,]  118 #>  [6266,]  118 #>  [6267,]  118 #>  [6268,]  118 #>  [6269,]  118 #>  [6270,]  118 #>  [6271,]  119 #>  [6272,]  118 #>  [6273,]  118 #>  [6274,]  118 #>  [6275,]  119 #>  [6276,]  118 #>  [6277,]  118 #>  [6278,]  118 #>  [6279,]  118 #>  [6280,]  118 #>  [6281,]  118 #>  [6282,]  118 #>  [6283,]  118 #>  [6284,]  118 #>  [6285,]  118 #>  [6286,]  118 #>  [6287,]  118 #>  [6288,]  118 #>  [6289,]  118 #>  [6290,]  118 #>  [6291,]  118 #>  [6292,]  118 #>  [6293,]  118 #>  [6294,]  118 #>  [6295,]  119 #>  [6296,]  118 #>  [6297,]  118 #>  [6298,]  118 #>  [6299,]  118 #>  [6300,]  119 #>  [6301,]  121 #>  [6302,]  121 #>  [6303,]  121 #>  [6304,]  120 #>  [6305,]  121 #>  [6306,]  121 #>  [6307,]  121 #>  [6308,]  120 #>  [6309,]  120 #>  [6310,]  120 #>  [6311,]  121 #>  [6312,]  121 #>  [6313,]  121 #>  [6314,]  121 #>  [6315,]  121 #>  [6316,]  121 #>  [6317,]  121 #>  [6318,]  121 #>  [6319,]  121 #>  [6320,]  121 #>  [6321,]  121 #>  [6322,]  121 #>  [6323,]  121 #>  [6324,]  121 #>  [6325,]  121 #>  [6326,]  121 #>  [6327,]  121 #>  [6328,]  121 #>  [6329,]  121 #>  [6330,]  121 #>  [6331,]  121 #>  [6332,]  121 #>  [6333,]  121 #>  [6334,]  121 #>  [6335,]  121 #>  [6336,]  121 #>  [6337,]  121 #>  [6338,]  121 #>  [6339,]  121 #>  [6340,]  121 #>  [6341,]  121 #>  [6342,]  121 #>  [6343,]  120 #>  [6344,]  121 #>  [6345,]  121 #>  [6346,]  121 #>  [6347,]  121 #>  [6348,]  121 #>  [6349,]  121 #>  [6350,]  121 #>  [6351,]  120 #>  [6352,]  121 #>  [6353,]  121 #>  [6354,]  121 #>  [6355,]  121 #>  [6356,]  121 #>  [6357,]  121 #>  [6358,]  121 #>  [6359,]  121 #>  [6360,]  120 #>  [6361,]  121 #>  [6362,]  121 #>  [6363,]  121 #>  [6364,]  121 #>  [6365,]  121 #>  [6366,]  121 #>  [6367,]  120 #>  [6368,]  121 #>  [6369,]  121 #>  [6370,]  121 #>  [6371,]  121 #>  [6372,]  121 #>  [6373,]  121 #>  [6374,]  121 #>  [6375,]  121 #>  [6376,]  121 #>  [6377,]  121 #>  [6378,]  121 #>  [6379,]  121 #>  [6380,]  121 #>  [6381,]  121 #>  [6382,]  121 #>  [6383,]  121 #>  [6384,]  121 #>  [6385,]  120 #>  [6386,]  121 #>  [6387,]  121 #>  [6388,]  121 #>  [6389,]  121 #>  [6390,]  121 #>  [6391,]  120 #>  [6392,]  121 #>  [6393,]  121 #>  [6394,]  121 #>  [6395,]  120 #>  [6396,]  121 #>  [6397,]  121 #>  [6398,]  121 #>  [6399,]  121 #>  [6400,]  121 #>  [6401,]  122 #>  [6402,]  122 #>  [6403,]  122 #>  [6404,]  122 #>  [6405,]  122 #>  [6406,]  122 #>  [6407,]  122 #>  [6408,]  122 #>  [6409,]  122 #>  [6410,]  122 #>  [6411,]  122 #>  [6412,]  122 #>  [6413,]  122 #>  [6414,]  122 #>  [6415,]  122 #>  [6416,]  122 #>  [6417,]  122 #>  [6418,]  122 #>  [6419,]  122 #>  [6420,]  122 #>  [6421,]  122 #>  [6422,]  122 #>  [6423,]  122 #>  [6424,]  122 #>  [6425,]  122 #>  [6426,]  122 #>  [6427,]  122 #>  [6428,]  122 #>  [6429,]  122 #>  [6430,]  122 #>  [6431,]  122 #>  [6432,]  122 #>  [6433,]  122 #>  [6434,]  122 #>  [6435,]  122 #>  [6436,]  122 #>  [6437,]  122 #>  [6438,]  122 #>  [6439,]  122 #>  [6440,]  122 #>  [6441,]  122 #>  [6442,]  122 #>  [6443,]  122 #>  [6444,]  122 #>  [6445,]  122 #>  [6446,]  122 #>  [6447,]  122 #>  [6448,]  122 #>  [6449,]  122 #>  [6450,]  122 #>  [6451,]  122 #>  [6452,]  122 #>  [6453,]  122 #>  [6454,]  122 #>  [6455,]  122 #>  [6456,]  122 #>  [6457,]  122 #>  [6458,]  122 #>  [6459,]  122 #>  [6460,]  122 #>  [6461,]  122 #>  [6462,]  122 #>  [6463,]  122 #>  [6464,]  122 #>  [6465,]  122 #>  [6466,]  122 #>  [6467,]  122 #>  [6468,]  122 #>  [6469,]  122 #>  [6470,]  122 #>  [6471,]  122 #>  [6472,]  122 #>  [6473,]  122 #>  [6474,]  122 #>  [6475,]  122 #>  [6476,]  122 #>  [6477,]  122 #>  [6478,]  122 #>  [6479,]  122 #>  [6480,]  122 #>  [6481,]  122 #>  [6482,]  122 #>  [6483,]  122 #>  [6484,]  122 #>  [6485,]  122 #>  [6486,]  122 #>  [6487,]  122 #>  [6488,]  122 #>  [6489,]  122 #>  [6490,]  122 #>  [6491,]  122 #>  [6492,]  122 #>  [6493,]  122 #>  [6494,]  122 #>  [6495,]  122 #>  [6496,]  122 #>  [6497,]  122 #>  [6498,]  122 #>  [6499,]  122 #>  [6500,]  122 #>  [6501,]  124 #>  [6502,]  124 #>  [6503,]  123 #>  [6504,]  123 #>  [6505,]  123 #>  [6506,]  124 #>  [6507,]  123 #>  [6508,]  123 #>  [6509,]  123 #>  [6510,]  123 #>  [6511,]  123 #>  [6512,]  123 #>  [6513,]  124 #>  [6514,]  124 #>  [6515,]  124 #>  [6516,]  124 #>  [6517,]  124 #>  [6518,]  123 #>  [6519,]  123 #>  [6520,]  123 #>  [6521,]  124 #>  [6522,]  123 #>  [6523,]  123 #>  [6524,]  123 #>  [6525,]  123 #>  [6526,]  123 #>  [6527,]  123 #>  [6528,]  123 #>  [6529,]  124 #>  [6530,]  123 #>  [6531,]  123 #>  [6532,]  123 #>  [6533,]  124 #>  [6534,]  123 #>  [6535,]  124 #>  [6536,]  123 #>  [6537,]  123 #>  [6538,]  123 #>  [6539,]  123 #>  [6540,]  123 #>  [6541,]  124 #>  [6542,]  123 #>  [6543,]  123 #>  [6544,]  124 #>  [6545,]  123 #>  [6546,]  123 #>  [6547,]  123 #>  [6548,]  123 #>  [6549,]  123 #>  [6550,]  124 #>  [6551,]  123 #>  [6552,]  123 #>  [6553,]  123 #>  [6554,]  123 #>  [6555,]  123 #>  [6556,]  123 #>  [6557,]  123 #>  [6558,]  123 #>  [6559,]  124 #>  [6560,]  123 #>  [6561,]  124 #>  [6562,]  123 #>  [6563,]  123 #>  [6564,]  123 #>  [6565,]  123 #>  [6566,]  123 #>  [6567,]  123 #>  [6568,]  124 #>  [6569,]  123 #>  [6570,]  124 #>  [6571,]  123 #>  [6572,]  123 #>  [6573,]  124 #>  [6574,]  123 #>  [6575,]  123 #>  [6576,]  124 #>  [6577,]  124 #>  [6578,]  123 #>  [6579,]  124 #>  [6580,]  123 #>  [6581,]  124 #>  [6582,]  123 #>  [6583,]  124 #>  [6584,]  123 #>  [6585,]  123 #>  [6586,]  124 #>  [6587,]  123 #>  [6588,]  123 #>  [6589,]  123 #>  [6590,]  123 #>  [6591,]  123 #>  [6592,]  123 #>  [6593,]  124 #>  [6594,]  123 #>  [6595,]  123 #>  [6596,]  124 #>  [6597,]  123 #>  [6598,]  123 #>  [6599,]  124 #>  [6600,]  123 #>  [6601,]  125 #>  [6602,]  126 #>  [6603,]  125 #>  [6604,]  125 #>  [6605,]  125 #>  [6606,]  125 #>  [6607,]  125 #>  [6608,]  125 #>  [6609,]  126 #>  [6610,]  126 #>  [6611,]  125 #>  [6612,]  126 #>  [6613,]  126 #>  [6614,]  125 #>  [6615,]  125 #>  [6616,]  125 #>  [6617,]  126 #>  [6618,]  125 #>  [6619,]  125 #>  [6620,]  125 #>  [6621,]  126 #>  [6622,]  125 #>  [6623,]  125 #>  [6624,]  126 #>  [6625,]  125 #>  [6626,]  125 #>  [6627,]  125 #>  [6628,]  125 #>  [6629,]  126 #>  [6630,]  125 #>  [6631,]  125 #>  [6632,]  126 #>  [6633,]  126 #>  [6634,]  125 #>  [6635,]  125 #>  [6636,]  125 #>  [6637,]  125 #>  [6638,]  125 #>  [6639,]  125 #>  [6640,]  126 #>  [6641,]  125 #>  [6642,]  125 #>  [6643,]  125 #>  [6644,]  125 #>  [6645,]  125 #>  [6646,]  125 #>  [6647,]  125 #>  [6648,]  125 #>  [6649,]  125 #>  [6650,]  125 #>  [6651,]  125 #>  [6652,]  125 #>  [6653,]  126 #>  [6654,]  125 #>  [6655,]  125 #>  [6656,]  125 #>  [6657,]  125 #>  [6658,]  125 #>  [6659,]  125 #>  [6660,]  126 #>  [6661,]  125 #>  [6662,]  125 #>  [6663,]  126 #>  [6664,]  125 #>  [6665,]  125 #>  [6666,]  125 #>  [6667,]  125 #>  [6668,]  125 #>  [6669,]  125 #>  [6670,]  126 #>  [6671,]  125 #>  [6672,]  125 #>  [6673,]  125 #>  [6674,]  125 #>  [6675,]  126 #>  [6676,]  125 #>  [6677,]  125 #>  [6678,]  125 #>  [6679,]  125 #>  [6680,]  126 #>  [6681,]  126 #>  [6682,]  125 #>  [6683,]  126 #>  [6684,]  125 #>  [6685,]  125 #>  [6686,]  126 #>  [6687,]  125 #>  [6688,]  125 #>  [6689,]  125 #>  [6690,]  125 #>  [6691,]  125 #>  [6692,]  125 #>  [6693,]  125 #>  [6694,]  125 #>  [6695,]  125 #>  [6696,]  125 #>  [6697,]  125 #>  [6698,]  125 #>  [6699,]  125 #>  [6700,]  125 #>  [6701,]  127 #>  [6702,]  128 #>  [6703,]  127 #>  [6704,]  127 #>  [6705,]  128 #>  [6706,]  127 #>  [6707,]  127 #>  [6708,]  127 #>  [6709,]  128 #>  [6710,]  128 #>  [6711,]  127 #>  [6712,]  128 #>  [6713,]  128 #>  [6714,]  127 #>  [6715,]  127 #>  [6716,]  127 #>  [6717,]  128 #>  [6718,]  128 #>  [6719,]  127 #>  [6720,]  128 #>  [6721,]  128 #>  [6722,]  128 #>  [6723,]  128 #>  [6724,]  128 #>  [6725,]  127 #>  [6726,]  127 #>  [6727,]  128 #>  [6728,]  127 #>  [6729,]  128 #>  [6730,]  127 #>  [6731,]  128 #>  [6732,]  128 #>  [6733,]  128 #>  [6734,]  127 #>  [6735,]  127 #>  [6736,]  128 #>  [6737,]  127 #>  [6738,]  127 #>  [6739,]  127 #>  [6740,]  128 #>  [6741,]  127 #>  [6742,]  127 #>  [6743,]  127 #>  [6744,]  128 #>  [6745,]  127 #>  [6746,]  127 #>  [6747,]  127 #>  [6748,]  127 #>  [6749,]  127 #>  [6750,]  128 #>  [6751,]  127 #>  [6752,]  127 #>  [6753,]  128 #>  [6754,]  127 #>  [6755,]  127 #>  [6756,]  127 #>  [6757,]  127 #>  [6758,]  127 #>  [6759,]  127 #>  [6760,]  128 #>  [6761,]  128 #>  [6762,]  127 #>  [6763,]  128 #>  [6764,]  127 #>  [6765,]  127 #>  [6766,]  127 #>  [6767,]  127 #>  [6768,]  127 #>  [6769,]  127 #>  [6770,]  128 #>  [6771,]  127 #>  [6772,]  127 #>  [6773,]  127 #>  [6774,]  127 #>  [6775,]  128 #>  [6776,]  127 #>  [6777,]  127 #>  [6778,]  127 #>  [6779,]  127 #>  [6780,]  128 #>  [6781,]  128 #>  [6782,]  127 #>  [6783,]  128 #>  [6784,]  128 #>  [6785,]  127 #>  [6786,]  128 #>  [6787,]  127 #>  [6788,]  128 #>  [6789,]  127 #>  [6790,]  127 #>  [6791,]  127 #>  [6792,]  128 #>  [6793,]  128 #>  [6794,]  127 #>  [6795,]  127 #>  [6796,]  127 #>  [6797,]  127 #>  [6798,]  127 #>  [6799,]  127 #>  [6800,]  127 #>  [6801,]  130 #>  [6802,]  130 #>  [6803,]  129 #>  [6804,]  130 #>  [6805,]  129 #>  [6806,]  129 #>  [6807,]  130 #>  [6808,]  130 #>  [6809,]  130 #>  [6810,]  130 #>  [6811,]  129 #>  [6812,]  129 #>  [6813,]  130 #>  [6814,]  129 #>  [6815,]  130 #>  [6816,]  130 #>  [6817,]  130 #>  [6818,]  130 #>  [6819,]  129 #>  [6820,]  129 #>  [6821,]  130 #>  [6822,]  129 #>  [6823,]  130 #>  [6824,]  129 #>  [6825,]  130 #>  [6826,]  129 #>  [6827,]  130 #>  [6828,]  130 #>  [6829,]  129 #>  [6830,]  129 #>  [6831,]  130 #>  [6832,]  129 #>  [6833,]  130 #>  [6834,]  129 #>  [6835,]  129 #>  [6836,]  129 #>  [6837,]  130 #>  [6838,]  130 #>  [6839,]  130 #>  [6840,]  129 #>  [6841,]  129 #>  [6842,]  129 #>  [6843,]  130 #>  [6844,]  130 #>  [6845,]  130 #>  [6846,]  130 #>  [6847,]  130 #>  [6848,]  129 #>  [6849,]  130 #>  [6850,]  130 #>  [6851,]  129 #>  [6852,]  129 #>  [6853,]  130 #>  [6854,]  129 #>  [6855,]  129 #>  [6856,]  130 #>  [6857,]  129 #>  [6858,]  129 #>  [6859,]  130 #>  [6860,]  129 #>  [6861,]  130 #>  [6862,]  129 #>  [6863,]  129 #>  [6864,]  130 #>  [6865,]  130 #>  [6866,]  129 #>  [6867,]  129 #>  [6868,]  129 #>  [6869,]  129 #>  [6870,]  130 #>  [6871,]  130 #>  [6872,]  130 #>  [6873,]  130 #>  [6874,]  130 #>  [6875,]  130 #>  [6876,]  130 #>  [6877,]  130 #>  [6878,]  129 #>  [6879,]  130 #>  [6880,]  129 #>  [6881,]  129 #>  [6882,]  130 #>  [6883,]  129 #>  [6884,]  130 #>  [6885,]  130 #>  [6886,]  130 #>  [6887,]  130 #>  [6888,]  130 #>  [6889,]  129 #>  [6890,]  130 #>  [6891,]  129 #>  [6892,]  130 #>  [6893,]  129 #>  [6894,]  130 #>  [6895,]  130 #>  [6896,]  130 #>  [6897,]  130 #>  [6898,]  129 #>  [6899,]  129 #>  [6900,]  130 #>  [6901,]  131 #>  [6902,]  131 #>  [6903,]  131 #>  [6904,]  131 #>  [6905,]  132 #>  [6906,]  131 #>  [6907,]  131 #>  [6908,]  131 #>  [6909,]  131 #>  [6910,]  131 #>  [6911,]  131 #>  [6912,]  131 #>  [6913,]  131 #>  [6914,]  131 #>  [6915,]  132 #>  [6916,]  131 #>  [6917,]  131 #>  [6918,]  132 #>  [6919,]  131 #>  [6920,]  131 #>  [6921,]  131 #>  [6922,]  131 #>  [6923,]  131 #>  [6924,]  131 #>  [6925,]  131 #>  [6926,]  131 #>  [6927,]  132 #>  [6928,]  131 #>  [6929,]  131 #>  [6930,]  131 #>  [6931,]  131 #>  [6932,]  132 #>  [6933,]  131 #>  [6934,]  131 #>  [6935,]  131 #>  [6936,]  131 #>  [6937,]  131 #>  [6938,]  131 #>  [6939,]  131 #>  [6940,]  131 #>  [6941,]  131 #>  [6942,]  131 #>  [6943,]  131 #>  [6944,]  131 #>  [6945,]  131 #>  [6946,]  131 #>  [6947,]  131 #>  [6948,]  131 #>  [6949,]  131 #>  [6950,]  131 #>  [6951,]  131 #>  [6952,]  131 #>  [6953,]  131 #>  [6954,]  131 #>  [6955,]  131 #>  [6956,]  131 #>  [6957,]  131 #>  [6958,]  131 #>  [6959,]  131 #>  [6960,]  131 #>  [6961,]  131 #>  [6962,]  131 #>  [6963,]  131 #>  [6964,]  131 #>  [6965,]  131 #>  [6966,]  131 #>  [6967,]  131 #>  [6968,]  131 #>  [6969,]  131 #>  [6970,]  131 #>  [6971,]  132 #>  [6972,]  131 #>  [6973,]  131 #>  [6974,]  131 #>  [6975,]  132 #>  [6976,]  131 #>  [6977,]  131 #>  [6978,]  131 #>  [6979,]  131 #>  [6980,]  131 #>  [6981,]  131 #>  [6982,]  131 #>  [6983,]  131 #>  [6984,]  131 #>  [6985,]  131 #>  [6986,]  131 #>  [6987,]  131 #>  [6988,]  131 #>  [6989,]  131 #>  [6990,]  131 #>  [6991,]  132 #>  [6992,]  131 #>  [6993,]  131 #>  [6994,]  131 #>  [6995,]  132 #>  [6996,]  131 #>  [6997,]  131 #>  [6998,]  131 #>  [6999,]  131 #>  [7000,]  132 #>  [7001,]  133 #>  [7002,]  134 #>  [7003,]  133 #>  [7004,]  133 #>  [7005,]  133 #>  [7006,]  133 #>  [7007,]  133 #>  [7008,]  133 #>  [7009,]  134 #>  [7010,]  134 #>  [7011,]  133 #>  [7012,]  134 #>  [7013,]  133 #>  [7014,]  133 #>  [7015,]  133 #>  [7016,]  133 #>  [7017,]  133 #>  [7018,]  133 #>  [7019,]  133 #>  [7020,]  133 #>  [7021,]  134 #>  [7022,]  133 #>  [7023,]  133 #>  [7024,]  133 #>  [7025,]  133 #>  [7026,]  133 #>  [7027,]  133 #>  [7028,]  133 #>  [7029,]  134 #>  [7030,]  133 #>  [7031,]  133 #>  [7032,]  133 #>  [7033,]  134 #>  [7034,]  133 #>  [7035,]  133 #>  [7036,]  133 #>  [7037,]  133 #>  [7038,]  133 #>  [7039,]  133 #>  [7040,]  133 #>  [7041,]  133 #>  [7042,]  133 #>  [7043,]  133 #>  [7044,]  133 #>  [7045,]  133 #>  [7046,]  133 #>  [7047,]  133 #>  [7048,]  133 #>  [7049,]  133 #>  [7050,]  133 #>  [7051,]  133 #>  [7052,]  133 #>  [7053,]  133 #>  [7054,]  133 #>  [7055,]  133 #>  [7056,]  133 #>  [7057,]  133 #>  [7058,]  133 #>  [7059,]  133 #>  [7060,]  133 #>  [7061,]  133 #>  [7062,]  133 #>  [7063,]  133 #>  [7064,]  133 #>  [7065,]  133 #>  [7066,]  133 #>  [7067,]  133 #>  [7068,]  133 #>  [7069,]  133 #>  [7070,]  134 #>  [7071,]  133 #>  [7072,]  133 #>  [7073,]  133 #>  [7074,]  133 #>  [7075,]  133 #>  [7076,]  133 #>  [7077,]  133 #>  [7078,]  133 #>  [7079,]  133 #>  [7080,]  133 #>  [7081,]  133 #>  [7082,]  133 #>  [7083,]  133 #>  [7084,]  133 #>  [7085,]  133 #>  [7086,]  134 #>  [7087,]  133 #>  [7088,]  133 #>  [7089,]  133 #>  [7090,]  133 #>  [7091,]  133 #>  [7092,]  133 #>  [7093,]  133 #>  [7094,]  133 #>  [7095,]  133 #>  [7096,]  133 #>  [7097,]  133 #>  [7098,]  133 #>  [7099,]  133 #>  [7100,]  133 #>  [7101,]  136 #>  [7102,]  136 #>  [7103,]  136 #>  [7104,]  135 #>  [7105,]  136 #>  [7106,]  136 #>  [7107,]  136 #>  [7108,]  135 #>  [7109,]  135 #>  [7110,]  136 #>  [7111,]  136 #>  [7112,]  136 #>  [7113,]  136 #>  [7114,]  136 #>  [7115,]  136 #>  [7116,]  136 #>  [7117,]  135 #>  [7118,]  136 #>  [7119,]  136 #>  [7120,]  136 #>  [7121,]  136 #>  [7122,]  135 #>  [7123,]  136 #>  [7124,]  136 #>  [7125,]  136 #>  [7126,]  136 #>  [7127,]  135 #>  [7128,]  136 #>  [7129,]  136 #>  [7130,]  136 #>  [7131,]  136 #>  [7132,]  136 #>  [7133,]  136 #>  [7134,]  136 #>  [7135,]  135 #>  [7136,]  136 #>  [7137,]  136 #>  [7138,]  136 #>  [7139,]  136 #>  [7140,]  136 #>  [7141,]  136 #>  [7142,]  136 #>  [7143,]  136 #>  [7144,]  135 #>  [7145,]  136 #>  [7146,]  136 #>  [7147,]  136 #>  [7148,]  136 #>  [7149,]  136 #>  [7150,]  136 #>  [7151,]  136 #>  [7152,]  135 #>  [7153,]  136 #>  [7154,]  136 #>  [7155,]  136 #>  [7156,]  136 #>  [7157,]  136 #>  [7158,]  135 #>  [7159,]  136 #>  [7160,]  136 #>  [7161,]  136 #>  [7162,]  136 #>  [7163,]  136 #>  [7164,]  136 #>  [7165,]  136 #>  [7166,]  135 #>  [7167,]  136 #>  [7168,]  136 #>  [7169,]  136 #>  [7170,]  136 #>  [7171,]  136 #>  [7172,]  136 #>  [7173,]  136 #>  [7174,]  136 #>  [7175,]  136 #>  [7176,]  136 #>  [7177,]  136 #>  [7178,]  136 #>  [7179,]  136 #>  [7180,]  136 #>  [7181,]  135 #>  [7182,]  135 #>  [7183,]  136 #>  [7184,]  136 #>  [7185,]  136 #>  [7186,]  136 #>  [7187,]  135 #>  [7188,]  136 #>  [7189,]  136 #>  [7190,]  135 #>  [7191,]  136 #>  [7192,]  135 #>  [7193,]  136 #>  [7194,]  136 #>  [7195,]  135 #>  [7196,]  136 #>  [7197,]  136 #>  [7198,]  136 #>  [7199,]  135 #>  [7200,]  136 #>  [7201,]  138 #>  [7202,]  138 #>  [7203,]  138 #>  [7204,]  137 #>  [7205,]  138 #>  [7206,]  138 #>  [7207,]  138 #>  [7208,]  137 #>  [7209,]  137 #>  [7210,]  137 #>  [7211,]  138 #>  [7212,]  138 #>  [7213,]  138 #>  [7214,]  138 #>  [7215,]  138 #>  [7216,]  138 #>  [7217,]  138 #>  [7218,]  138 #>  [7219,]  138 #>  [7220,]  137 #>  [7221,]  138 #>  [7222,]  138 #>  [7223,]  138 #>  [7224,]  138 #>  [7225,]  138 #>  [7226,]  138 #>  [7227,]  138 #>  [7228,]  138 #>  [7229,]  138 #>  [7230,]  137 #>  [7231,]  138 #>  [7232,]  138 #>  [7233,]  138 #>  [7234,]  138 #>  [7235,]  138 #>  [7236,]  138 #>  [7237,]  138 #>  [7238,]  138 #>  [7239,]  138 #>  [7240,]  138 #>  [7241,]  138 #>  [7242,]  138 #>  [7243,]  137 #>  [7244,]  138 #>  [7245,]  138 #>  [7246,]  138 #>  [7247,]  138 #>  [7248,]  138 #>  [7249,]  138 #>  [7250,]  138 #>  [7251,]  137 #>  [7252,]  138 #>  [7253,]  138 #>  [7254,]  138 #>  [7255,]  138 #>  [7256,]  137 #>  [7257,]  138 #>  [7258,]  138 #>  [7259,]  138 #>  [7260,]  137 #>  [7261,]  138 #>  [7262,]  138 #>  [7263,]  138 #>  [7264,]  137 #>  [7265,]  138 #>  [7266,]  138 #>  [7267,]  137 #>  [7268,]  138 #>  [7269,]  138 #>  [7270,]  138 #>  [7271,]  138 #>  [7272,]  138 #>  [7273,]  138 #>  [7274,]  138 #>  [7275,]  138 #>  [7276,]  138 #>  [7277,]  138 #>  [7278,]  137 #>  [7279,]  138 #>  [7280,]  138 #>  [7281,]  138 #>  [7282,]  138 #>  [7283,]  138 #>  [7284,]  138 #>  [7285,]  137 #>  [7286,]  138 #>  [7287,]  138 #>  [7288,]  138 #>  [7289,]  137 #>  [7290,]  138 #>  [7291,]  137 #>  [7292,]  138 #>  [7293,]  138 #>  [7294,]  138 #>  [7295,]  137 #>  [7296,]  138 #>  [7297,]  138 #>  [7298,]  138 #>  [7299,]  138 #>  [7300,]  138 #>  [7301,]  140 #>  [7302,]  140 #>  [7303,]  140 #>  [7304,]  139 #>  [7305,]  140 #>  [7306,]  140 #>  [7307,]  140 #>  [7308,]  139 #>  [7309,]  139 #>  [7310,]  139 #>  [7311,]  140 #>  [7312,]  140 #>  [7313,]  140 #>  [7314,]  140 #>  [7315,]  140 #>  [7316,]  140 #>  [7317,]  140 #>  [7318,]  140 #>  [7319,]  140 #>  [7320,]  140 #>  [7321,]  140 #>  [7322,]  140 #>  [7323,]  140 #>  [7324,]  140 #>  [7325,]  140 #>  [7326,]  140 #>  [7327,]  140 #>  [7328,]  140 #>  [7329,]  140 #>  [7330,]  140 #>  [7331,]  140 #>  [7332,]  140 #>  [7333,]  140 #>  [7334,]  140 #>  [7335,]  140 #>  [7336,]  140 #>  [7337,]  140 #>  [7338,]  140 #>  [7339,]  140 #>  [7340,]  140 #>  [7341,]  140 #>  [7342,]  140 #>  [7343,]  139 #>  [7344,]  140 #>  [7345,]  140 #>  [7346,]  140 #>  [7347,]  140 #>  [7348,]  140 #>  [7349,]  140 #>  [7350,]  140 #>  [7351,]  139 #>  [7352,]  140 #>  [7353,]  140 #>  [7354,]  140 #>  [7355,]  140 #>  [7356,]  140 #>  [7357,]  140 #>  [7358,]  140 #>  [7359,]  140 #>  [7360,]  139 #>  [7361,]  140 #>  [7362,]  140 #>  [7363,]  140 #>  [7364,]  140 #>  [7365,]  140 #>  [7366,]  140 #>  [7367,]  139 #>  [7368,]  140 #>  [7369,]  140 #>  [7370,]  140 #>  [7371,]  140 #>  [7372,]  140 #>  [7373,]  140 #>  [7374,]  140 #>  [7375,]  140 #>  [7376,]  140 #>  [7377,]  140 #>  [7378,]  140 #>  [7379,]  140 #>  [7380,]  140 #>  [7381,]  140 #>  [7382,]  140 #>  [7383,]  140 #>  [7384,]  140 #>  [7385,]  139 #>  [7386,]  140 #>  [7387,]  140 #>  [7388,]  140 #>  [7389,]  140 #>  [7390,]  140 #>  [7391,]  139 #>  [7392,]  140 #>  [7393,]  140 #>  [7394,]  140 #>  [7395,]  139 #>  [7396,]  140 #>  [7397,]  140 #>  [7398,]  140 #>  [7399,]  140 #>  [7400,]  140 #>  [7401,]  141 #>  [7402,]  142 #>  [7403,]  141 #>  [7404,]  141 #>  [7405,]  142 #>  [7406,]  141 #>  [7407,]  142 #>  [7408,]  141 #>  [7409,]  142 #>  [7410,]  142 #>  [7411,]  141 #>  [7412,]  142 #>  [7413,]  142 #>  [7414,]  141 #>  [7415,]  141 #>  [7416,]  141 #>  [7417,]  142 #>  [7418,]  142 #>  [7419,]  141 #>  [7420,]  142 #>  [7421,]  142 #>  [7422,]  142 #>  [7423,]  142 #>  [7424,]  142 #>  [7425,]  141 #>  [7426,]  141 #>  [7427,]  142 #>  [7428,]  141 #>  [7429,]  142 #>  [7430,]  142 #>  [7431,]  142 #>  [7432,]  142 #>  [7433,]  142 #>  [7434,]  141 #>  [7435,]  141 #>  [7436,]  142 #>  [7437,]  141 #>  [7438,]  141 #>  [7439,]  141 #>  [7440,]  142 #>  [7441,]  142 #>  [7442,]  141 #>  [7443,]  141 #>  [7444,]  142 #>  [7445,]  141 #>  [7446,]  141 #>  [7447,]  142 #>  [7448,]  142 #>  [7449,]  141 #>  [7450,]  142 #>  [7451,]  141 #>  [7452,]  141 #>  [7453,]  142 #>  [7454,]  142 #>  [7455,]  141 #>  [7456,]  141 #>  [7457,]  141 #>  [7458,]  142 #>  [7459,]  141 #>  [7460,]  142 #>  [7461,]  142 #>  [7462,]  141 #>  [7463,]  142 #>  [7464,]  141 #>  [7465,]  141 #>  [7466,]  141 #>  [7467,]  141 #>  [7468,]  141 #>  [7469,]  141 #>  [7470,]  142 #>  [7471,]  141 #>  [7472,]  141 #>  [7473,]  141 #>  [7474,]  141 #>  [7475,]  142 #>  [7476,]  141 #>  [7477,]  141 #>  [7478,]  142 #>  [7479,]  141 #>  [7480,]  142 #>  [7481,]  142 #>  [7482,]  141 #>  [7483,]  142 #>  [7484,]  142 #>  [7485,]  141 #>  [7486,]  142 #>  [7487,]  142 #>  [7488,]  142 #>  [7489,]  141 #>  [7490,]  141 #>  [7491,]  141 #>  [7492,]  142 #>  [7493,]  142 #>  [7494,]  141 #>  [7495,]  142 #>  [7496,]  141 #>  [7497,]  141 #>  [7498,]  141 #>  [7499,]  141 #>  [7500,]  141 #>  [7501,]  144 #>  [7502,]  143 #>  [7503,]  143 #>  [7504,]  143 #>  [7505,]  143 #>  [7506,]  143 #>  [7507,]  143 #>  [7508,]  143 #>  [7509,]  143 #>  [7510,]  143 #>  [7511,]  143 #>  [7512,]  143 #>  [7513,]  144 #>  [7514,]  144 #>  [7515,]  144 #>  [7516,]  144 #>  [7517,]  143 #>  [7518,]  143 #>  [7519,]  143 #>  [7520,]  143 #>  [7521,]  144 #>  [7522,]  143 #>  [7523,]  143 #>  [7524,]  143 #>  [7525,]  143 #>  [7526,]  143 #>  [7527,]  143 #>  [7528,]  143 #>  [7529,]  144 #>  [7530,]  143 #>  [7531,]  143 #>  [7532,]  143 #>  [7533,]  144 #>  [7534,]  143 #>  [7535,]  143 #>  [7536,]  143 #>  [7537,]  143 #>  [7538,]  143 #>  [7539,]  143 #>  [7540,]  143 #>  [7541,]  144 #>  [7542,]  143 #>  [7543,]  143 #>  [7544,]  144 #>  [7545,]  143 #>  [7546,]  143 #>  [7547,]  143 #>  [7548,]  143 #>  [7549,]  143 #>  [7550,]  144 #>  [7551,]  143 #>  [7552,]  143 #>  [7553,]  143 #>  [7554,]  143 #>  [7555,]  143 #>  [7556,]  143 #>  [7557,]  143 #>  [7558,]  143 #>  [7559,]  144 #>  [7560,]  143 #>  [7561,]  143 #>  [7562,]  143 #>  [7563,]  143 #>  [7564,]  143 #>  [7565,]  143 #>  [7566,]  143 #>  [7567,]  143 #>  [7568,]  144 #>  [7569,]  143 #>  [7570,]  144 #>  [7571,]  143 #>  [7572,]  143 #>  [7573,]  144 #>  [7574,]  143 #>  [7575,]  143 #>  [7576,]  143 #>  [7577,]  143 #>  [7578,]  143 #>  [7579,]  143 #>  [7580,]  143 #>  [7581,]  143 #>  [7582,]  143 #>  [7583,]  143 #>  [7584,]  143 #>  [7585,]  143 #>  [7586,]  143 #>  [7587,]  143 #>  [7588,]  143 #>  [7589,]  143 #>  [7590,]  143 #>  [7591,]  143 #>  [7592,]  143 #>  [7593,]  143 #>  [7594,]  143 #>  [7595,]  143 #>  [7596,]  144 #>  [7597,]  143 #>  [7598,]  143 #>  [7599,]  144 #>  [7600,]  143 #>  [7601,]  146 #>  [7602,]  146 #>  [7603,]  145 #>  [7604,]  146 #>  [7605,]  146 #>  [7606,]  146 #>  [7607,]  146 #>  [7608,]  146 #>  [7609,]  146 #>  [7610,]  146 #>  [7611,]  146 #>  [7612,]  145 #>  [7613,]  146 #>  [7614,]  145 #>  [7615,]  146 #>  [7616,]  146 #>  [7617,]  146 #>  [7618,]  146 #>  [7619,]  146 #>  [7620,]  146 #>  [7621,]  146 #>  [7622,]  146 #>  [7623,]  146 #>  [7624,]  146 #>  [7625,]  146 #>  [7626,]  145 #>  [7627,]  146 #>  [7628,]  146 #>  [7629,]  146 #>  [7630,]  146 #>  [7631,]  146 #>  [7632,]  145 #>  [7633,]  146 #>  [7634,]  146 #>  [7635,]  146 #>  [7636,]  146 #>  [7637,]  146 #>  [7638,]  146 #>  [7639,]  146 #>  [7640,]  146 #>  [7641,]  146 #>  [7642,]  146 #>  [7643,]  146 #>  [7644,]  146 #>  [7645,]  146 #>  [7646,]  146 #>  [7647,]  146 #>  [7648,]  146 #>  [7649,]  146 #>  [7650,]  146 #>  [7651,]  145 #>  [7652,]  146 #>  [7653,]  146 #>  [7654,]  145 #>  [7655,]  146 #>  [7656,]  146 #>  [7657,]  146 #>  [7658,]  146 #>  [7659,]  146 #>  [7660,]  146 #>  [7661,]  146 #>  [7662,]  146 #>  [7663,]  146 #>  [7664,]  146 #>  [7665,]  146 #>  [7666,]  145 #>  [7667,]  146 #>  [7668,]  146 #>  [7669,]  145 #>  [7670,]  146 #>  [7671,]  146 #>  [7672,]  146 #>  [7673,]  146 #>  [7674,]  146 #>  [7675,]  146 #>  [7676,]  146 #>  [7677,]  146 #>  [7678,]  146 #>  [7679,]  146 #>  [7680,]  145 #>  [7681,]  146 #>  [7682,]  146 #>  [7683,]  146 #>  [7684,]  146 #>  [7685,]  146 #>  [7686,]  146 #>  [7687,]  146 #>  [7688,]  146 #>  [7689,]  145 #>  [7690,]  146 #>  [7691,]  146 #>  [7692,]  146 #>  [7693,]  146 #>  [7694,]  146 #>  [7695,]  146 #>  [7696,]  146 #>  [7697,]  146 #>  [7698,]  146 #>  [7699,]  146 #>  [7700,]  146 #>  [7701,]  148 #>  [7702,]  148 #>  [7703,]  147 #>  [7704,]  148 #>  [7705,]  148 #>  [7706,]  148 #>  [7707,]  148 #>  [7708,]  148 #>  [7709,]  148 #>  [7710,]  147 #>  [7711,]  147 #>  [7712,]  148 #>  [7713,]  148 #>  [7714,]  147 #>  [7715,]  148 #>  [7716,]  148 #>  [7717,]  148 #>  [7718,]  148 #>  [7719,]  148 #>  [7720,]  148 #>  [7721,]  148 #>  [7722,]  148 #>  [7723,]  148 #>  [7724,]  148 #>  [7725,]  148 #>  [7726,]  148 #>  [7727,]  148 #>  [7728,]  148 #>  [7729,]  148 #>  [7730,]  148 #>  [7731,]  148 #>  [7732,]  147 #>  [7733,]  148 #>  [7734,]  148 #>  [7735,]  148 #>  [7736,]  148 #>  [7737,]  148 #>  [7738,]  148 #>  [7739,]  148 #>  [7740,]  147 #>  [7741,]  148 #>  [7742,]  148 #>  [7743,]  148 #>  [7744,]  148 #>  [7745,]  148 #>  [7746,]  148 #>  [7747,]  148 #>  [7748,]  147 #>  [7749,]  148 #>  [7750,]  148 #>  [7751,]  148 #>  [7752,]  148 #>  [7753,]  148 #>  [7754,]  148 #>  [7755,]  148 #>  [7756,]  148 #>  [7757,]  148 #>  [7758,]  148 #>  [7759,]  148 #>  [7760,]  148 #>  [7761,]  148 #>  [7762,]  148 #>  [7763,]  148 #>  [7764,]  148 #>  [7765,]  148 #>  [7766,]  148 #>  [7767,]  148 #>  [7768,]  148 #>  [7769,]  148 #>  [7770,]  147 #>  [7771,]  148 #>  [7772,]  148 #>  [7773,]  148 #>  [7774,]  148 #>  [7775,]  148 #>  [7776,]  148 #>  [7777,]  148 #>  [7778,]  148 #>  [7779,]  148 #>  [7780,]  148 #>  [7781,]  148 #>  [7782,]  148 #>  [7783,]  148 #>  [7784,]  148 #>  [7785,]  148 #>  [7786,]  148 #>  [7787,]  148 #>  [7788,]  148 #>  [7789,]  148 #>  [7790,]  148 #>  [7791,]  148 #>  [7792,]  148 #>  [7793,]  148 #>  [7794,]  148 #>  [7795,]  148 #>  [7796,]  148 #>  [7797,]  148 #>  [7798,]  148 #>  [7799,]  148 #>  [7800,]  148 #>  [7801,]  150 #>  [7802,]  150 #>  [7803,]  150 #>  [7804,]  150 #>  [7805,]  150 #>  [7806,]  150 #>  [7807,]  149 #>  [7808,]  150 #>  [7809,]  150 #>  [7810,]  150 #>  [7811,]  150 #>  [7812,]  150 #>  [7813,]  150 #>  [7814,]  150 #>  [7815,]  150 #>  [7816,]  150 #>  [7817,]  150 #>  [7818,]  150 #>  [7819,]  150 #>  [7820,]  150 #>  [7821,]  149 #>  [7822,]  150 #>  [7823,]  150 #>  [7824,]  150 #>  [7825,]  150 #>  [7826,]  150 #>  [7827,]  150 #>  [7828,]  150 #>  [7829,]  150 #>  [7830,]  150 #>  [7831,]  150 #>  [7832,]  150 #>  [7833,]  150 #>  [7834,]  150 #>  [7835,]  150 #>  [7836,]  150 #>  [7837,]  150 #>  [7838,]  150 #>  [7839,]  149 #>  [7840,]  150 #>  [7841,]  150 #>  [7842,]  150 #>  [7843,]  150 #>  [7844,]  150 #>  [7845,]  150 #>  [7846,]  150 #>  [7847,]  150 #>  [7848,]  150 #>  [7849,]  149 #>  [7850,]  150 #>  [7851,]  150 #>  [7852,]  150 #>  [7853,]  150 #>  [7854,]  150 #>  [7855,]  150 #>  [7856,]  150 #>  [7857,]  150 #>  [7858,]  150 #>  [7859,]  150 #>  [7860,]  150 #>  [7861,]  150 #>  [7862,]  149 #>  [7863,]  150 #>  [7864,]  150 #>  [7865,]  150 #>  [7866,]  150 #>  [7867,]  150 #>  [7868,]  150 #>  [7869,]  150 #>  [7870,]  149 #>  [7871,]  150 #>  [7872,]  150 #>  [7873,]  150 #>  [7874,]  150 #>  [7875,]  150 #>  [7876,]  150 #>  [7877,]  150 #>  [7878,]  150 #>  [7879,]  150 #>  [7880,]  149 #>  [7881,]  150 #>  [7882,]  150 #>  [7883,]  150 #>  [7884,]  150 #>  [7885,]  150 #>  [7886,]  150 #>  [7887,]  150 #>  [7888,]  150 #>  [7889,]  150 #>  [7890,]  150 #>  [7891,]  150 #>  [7892,]  150 #>  [7893,]  150 #>  [7894,]  150 #>  [7895,]  149 #>  [7896,]  150 #>  [7897,]  150 #>  [7898,]  150 #>  [7899,]  150 #>  [7900,]  150 #>  [7901,]  151 #>  [7902,]  151 #>  [7903,]  151 #>  [7904,]  151 #>  [7905,]  151 #>  [7906,]  152 #>  [7907,]  151 #>  [7908,]  152 #>  [7909,]  152 #>  [7910,]  151 #>  [7911,]  151 #>  [7912,]  152 #>  [7913,]  151 #>  [7914,]  151 #>  [7915,]  152 #>  [7916,]  151 #>  [7917,]  151 #>  [7918,]  151 #>  [7919,]  151 #>  [7920,]  151 #>  [7921,]  151 #>  [7922,]  151 #>  [7923,]  151 #>  [7924,]  151 #>  [7925,]  151 #>  [7926,]  152 #>  [7927,]  151 #>  [7928,]  151 #>  [7929,]  151 #>  [7930,]  151 #>  [7931,]  151 #>  [7932,]  151 #>  [7933,]  151 #>  [7934,]  151 #>  [7935,]  151 #>  [7936,]  151 #>  [7937,]  151 #>  [7938,]  151 #>  [7939,]  151 #>  [7940,]  151 #>  [7941,]  151 #>  [7942,]  151 #>  [7943,]  152 #>  [7944,]  151 #>  [7945,]  151 #>  [7946,]  152 #>  [7947,]  151 #>  [7948,]  151 #>  [7949,]  151 #>  [7950,]  151 #>  [7951,]  152 #>  [7952,]  151 #>  [7953,]  151 #>  [7954,]  151 #>  [7955,]  151 #>  [7956,]  152 #>  [7957,]  151 #>  [7958,]  151 #>  [7959,]  151 #>  [7960,]  151 #>  [7961,]  152 #>  [7962,]  151 #>  [7963,]  151 #>  [7964,]  152 #>  [7965,]  151 #>  [7966,]  152 #>  [7967,]  151 #>  [7968,]  151 #>  [7969,]  151 #>  [7970,]  151 #>  [7971,]  151 #>  [7972,]  151 #>  [7973,]  151 #>  [7974,]  151 #>  [7975,]  151 #>  [7976,]  152 #>  [7977,]  151 #>  [7978,]  151 #>  [7979,]  151 #>  [7980,]  151 #>  [7981,]  151 #>  [7982,]  151 #>  [7983,]  151 #>  [7984,]  151 #>  [7985,]  151 #>  [7986,]  151 #>  [7987,]  151 #>  [7988,]  151 #>  [7989,]  151 #>  [7990,]  151 #>  [7991,]  151 #>  [7992,]  151 #>  [7993,]  151 #>  [7994,]  152 #>  [7995,]  151 #>  [7996,]  151 #>  [7997,]  151 #>  [7998,]  151 #>  [7999,]  151 #>  [8000,]  151 #>  [8001,]  153 #>  [8002,]  153 #>  [8003,]  153 #>  [8004,]  154 #>  [8005,]  153 #>  [8006,]  153 #>  [8007,]  153 #>  [8008,]  153 #>  [8009,]  154 #>  [8010,]  153 #>  [8011,]  154 #>  [8012,]  154 #>  [8013,]  153 #>  [8014,]  154 #>  [8015,]  154 #>  [8016,]  153 #>  [8017,]  153 #>  [8018,]  154 #>  [8019,]  154 #>  [8020,]  153 #>  [8021,]  154 #>  [8022,]  153 #>  [8023,]  153 #>  [8024,]  153 #>  [8025,]  153 #>  [8026,]  154 #>  [8027,]  154 #>  [8028,]  153 #>  [8029,]  153 #>  [8030,]  154 #>  [8031,]  154 #>  [8032,]  153 #>  [8033,]  154 #>  [8034,]  153 #>  [8035,]  153 #>  [8036,]  154 #>  [8037,]  153 #>  [8038,]  154 #>  [8039,]  153 #>  [8040,]  153 #>  [8041,]  154 #>  [8042,]  154 #>  [8043,]  153 #>  [8044,]  153 #>  [8045,]  153 #>  [8046,]  153 #>  [8047,]  153 #>  [8048,]  154 #>  [8049,]  153 #>  [8050,]  153 #>  [8051,]  153 #>  [8052,]  153 #>  [8053,]  153 #>  [8054,]  153 #>  [8055,]  153 #>  [8056,]  153 #>  [8057,]  153 #>  [8058,]  154 #>  [8059,]  153 #>  [8060,]  154 #>  [8061,]  154 #>  [8062,]  154 #>  [8063,]  153 #>  [8064,]  153 #>  [8065,]  153 #>  [8066,]  153 #>  [8067,]  153 #>  [8068,]  154 #>  [8069,]  154 #>  [8070,]  153 #>  [8071,]  153 #>  [8072,]  153 #>  [8073,]  153 #>  [8074,]  154 #>  [8075,]  154 #>  [8076,]  153 #>  [8077,]  153 #>  [8078,]  153 #>  [8079,]  153 #>  [8080,]  153 #>  [8081,]  153 #>  [8082,]  154 #>  [8083,]  153 #>  [8084,]  153 #>  [8085,]  154 #>  [8086,]  153 #>  [8087,]  153 #>  [8088,]  153 #>  [8089,]  153 #>  [8090,]  153 #>  [8091,]  153 #>  [8092,]  154 #>  [8093,]  154 #>  [8094,]  153 #>  [8095,]  153 #>  [8096,]  154 #>  [8097,]  154 #>  [8098,]  153 #>  [8099,]  154 #>  [8100,]  153 #>  [8101,]  156 #>  [8102,]  155 #>  [8103,]  155 #>  [8104,]  156 #>  [8105,]  155 #>  [8106,]  155 #>  [8107,]  156 #>  [8108,]  156 #>  [8109,]  156 #>  [8110,]  156 #>  [8111,]  155 #>  [8112,]  155 #>  [8113,]  156 #>  [8114,]  155 #>  [8115,]  156 #>  [8116,]  156 #>  [8117,]  156 #>  [8118,]  156 #>  [8119,]  155 #>  [8120,]  155 #>  [8121,]  156 #>  [8122,]  155 #>  [8123,]  156 #>  [8124,]  155 #>  [8125,]  156 #>  [8126,]  155 #>  [8127,]  156 #>  [8128,]  156 #>  [8129,]  155 #>  [8130,]  155 #>  [8131,]  155 #>  [8132,]  155 #>  [8133,]  155 #>  [8134,]  155 #>  [8135,]  155 #>  [8136,]  155 #>  [8137,]  156 #>  [8138,]  156 #>  [8139,]  156 #>  [8140,]  155 #>  [8141,]  155 #>  [8142,]  155 #>  [8143,]  156 #>  [8144,]  156 #>  [8145,]  156 #>  [8146,]  156 #>  [8147,]  156 #>  [8148,]  155 #>  [8149,]  155 #>  [8150,]  155 #>  [8151,]  155 #>  [8152,]  155 #>  [8153,]  156 #>  [8154,]  155 #>  [8155,]  155 #>  [8156,]  156 #>  [8157,]  155 #>  [8158,]  155 #>  [8159,]  155 #>  [8160,]  155 #>  [8161,]  156 #>  [8162,]  155 #>  [8163,]  155 #>  [8164,]  156 #>  [8165,]  155 #>  [8166,]  155 #>  [8167,]  155 #>  [8168,]  155 #>  [8169,]  155 #>  [8170,]  156 #>  [8171,]  156 #>  [8172,]  156 #>  [8173,]  156 #>  [8174,]  156 #>  [8175,]  156 #>  [8176,]  156 #>  [8177,]  156 #>  [8178,]  155 #>  [8179,]  156 #>  [8180,]  155 #>  [8181,]  155 #>  [8182,]  156 #>  [8183,]  155 #>  [8184,]  156 #>  [8185,]  155 #>  [8186,]  156 #>  [8187,]  156 #>  [8188,]  156 #>  [8189,]  155 #>  [8190,]  156 #>  [8191,]  155 #>  [8192,]  155 #>  [8193,]  155 #>  [8194,]  156 #>  [8195,]  156 #>  [8196,]  156 #>  [8197,]  155 #>  [8198,]  155 #>  [8199,]  155 #>  [8200,]  156 #>  [8201,]  158 #>  [8202,]  158 #>  [8203,]  158 #>  [8204,]  157 #>  [8205,]  158 #>  [8206,]  158 #>  [8207,]  158 #>  [8208,]  157 #>  [8209,]  157 #>  [8210,]  157 #>  [8211,]  158 #>  [8212,]  158 #>  [8213,]  158 #>  [8214,]  158 #>  [8215,]  158 #>  [8216,]  158 #>  [8217,]  158 #>  [8218,]  157 #>  [8219,]  158 #>  [8220,]  157 #>  [8221,]  158 #>  [8222,]  158 #>  [8223,]  158 #>  [8224,]  158 #>  [8225,]  158 #>  [8226,]  158 #>  [8227,]  158 #>  [8228,]  158 #>  [8229,]  158 #>  [8230,]  157 #>  [8231,]  158 #>  [8232,]  158 #>  [8233,]  158 #>  [8234,]  158 #>  [8235,]  158 #>  [8236,]  158 #>  [8237,]  158 #>  [8238,]  158 #>  [8239,]  157 #>  [8240,]  158 #>  [8241,]  158 #>  [8242,]  158 #>  [8243,]  157 #>  [8244,]  158 #>  [8245,]  157 #>  [8246,]  158 #>  [8247,]  158 #>  [8248,]  158 #>  [8249,]  157 #>  [8250,]  158 #>  [8251,]  157 #>  [8252,]  158 #>  [8253,]  157 #>  [8254,]  158 #>  [8255,]  158 #>  [8256,]  157 #>  [8257,]  158 #>  [8258,]  158 #>  [8259,]  158 #>  [8260,]  157 #>  [8261,]  158 #>  [8262,]  158 #>  [8263,]  158 #>  [8264,]  157 #>  [8265,]  157 #>  [8266,]  157 #>  [8267,]  157 #>  [8268,]  158 #>  [8269,]  158 #>  [8270,]  158 #>  [8271,]  158 #>  [8272,]  158 #>  [8273,]  158 #>  [8274,]  158 #>  [8275,]  158 #>  [8276,]  158 #>  [8277,]  158 #>  [8278,]  157 #>  [8279,]  158 #>  [8280,]  158 #>  [8281,]  158 #>  [8282,]  158 #>  [8283,]  158 #>  [8284,]  158 #>  [8285,]  157 #>  [8286,]  158 #>  [8287,]  158 #>  [8288,]  158 #>  [8289,]  157 #>  [8290,]  158 #>  [8291,]  157 #>  [8292,]  158 #>  [8293,]  158 #>  [8294,]  158 #>  [8295,]  157 #>  [8296,]  158 #>  [8297,]  158 #>  [8298,]  158 #>  [8299,]  158 #>  [8300,]  158 #>  [8301,]  159 #>  [8302,]  159 #>  [8303,]  159 #>  [8304,]  159 #>  [8305,]  160 #>  [8306,]  159 #>  [8307,]  159 #>  [8308,]  159 #>  [8309,]  159 #>  [8310,]  159 #>  [8311,]  159 #>  [8312,]  159 #>  [8313,]  159 #>  [8314,]  159 #>  [8315,]  159 #>  [8316,]  159 #>  [8317,]  159 #>  [8318,]  160 #>  [8319,]  159 #>  [8320,]  159 #>  [8321,]  159 #>  [8322,]  159 #>  [8323,]  159 #>  [8324,]  159 #>  [8325,]  159 #>  [8326,]  159 #>  [8327,]  159 #>  [8328,]  159 #>  [8329,]  159 #>  [8330,]  159 #>  [8331,]  159 #>  [8332,]  159 #>  [8333,]  159 #>  [8334,]  159 #>  [8335,]  159 #>  [8336,]  159 #>  [8337,]  159 #>  [8338,]  159 #>  [8339,]  159 #>  [8340,]  159 #>  [8341,]  159 #>  [8342,]  159 #>  [8343,]  159 #>  [8344,]  159 #>  [8345,]  159 #>  [8346,]  159 #>  [8347,]  159 #>  [8348,]  159 #>  [8349,]  159 #>  [8350,]  159 #>  [8351,]  159 #>  [8352,]  159 #>  [8353,]  159 #>  [8354,]  159 #>  [8355,]  159 #>  [8356,]  159 #>  [8357,]  159 #>  [8358,]  159 #>  [8359,]  159 #>  [8360,]  159 #>  [8361,]  159 #>  [8362,]  159 #>  [8363,]  159 #>  [8364,]  159 #>  [8365,]  159 #>  [8366,]  159 #>  [8367,]  159 #>  [8368,]  159 #>  [8369,]  159 #>  [8370,]  159 #>  [8371,]  160 #>  [8372,]  159 #>  [8373,]  159 #>  [8374,]  159 #>  [8375,]  160 #>  [8376,]  159 #>  [8377,]  159 #>  [8378,]  159 #>  [8379,]  159 #>  [8380,]  159 #>  [8381,]  159 #>  [8382,]  159 #>  [8383,]  159 #>  [8384,]  159 #>  [8385,]  159 #>  [8386,]  159 #>  [8387,]  159 #>  [8388,]  159 #>  [8389,]  159 #>  [8390,]  159 #>  [8391,]  159 #>  [8392,]  159 #>  [8393,]  159 #>  [8394,]  159 #>  [8395,]  160 #>  [8396,]  159 #>  [8397,]  159 #>  [8398,]  159 #>  [8399,]  159 #>  [8400,]  160 #>  [8401,]  161 #>  [8402,]  161 #>  [8403,]  161 #>  [8404,]  161 #>  [8405,]  161 #>  [8406,]  161 #>  [8407,]  162 #>  [8408,]  161 #>  [8409,]  161 #>  [8410,]  161 #>  [8411,]  161 #>  [8412,]  161 #>  [8413,]  161 #>  [8414,]  161 #>  [8415,]  161 #>  [8416,]  162 #>  [8417,]  161 #>  [8418,]  161 #>  [8419,]  161 #>  [8420,]  162 #>  [8421,]  161 #>  [8422,]  161 #>  [8423,]  161 #>  [8424,]  162 #>  [8425,]  161 #>  [8426,]  161 #>  [8427,]  161 #>  [8428,]  162 #>  [8429,]  161 #>  [8430,]  161 #>  [8431,]  161 #>  [8432,]  161 #>  [8433,]  161 #>  [8434,]  161 #>  [8435,]  161 #>  [8436,]  161 #>  [8437,]  161 #>  [8438,]  161 #>  [8439,]  161 #>  [8440,]  161 #>  [8441,]  161 #>  [8442,]  161 #>  [8443,]  161 #>  [8444,]  161 #>  [8445,]  161 #>  [8446,]  161 #>  [8447,]  161 #>  [8448,]  161 #>  [8449,]  161 #>  [8450,]  162 #>  [8451,]  161 #>  [8452,]  162 #>  [8453,]  161 #>  [8454,]  161 #>  [8455,]  161 #>  [8456,]  161 #>  [8457,]  161 #>  [8458,]  161 #>  [8459,]  161 #>  [8460,]  161 #>  [8461,]  161 #>  [8462,]  161 #>  [8463,]  161 #>  [8464,]  161 #>  [8465,]  161 #>  [8466,]  161 #>  [8467,]  161 #>  [8468,]  161 #>  [8469,]  161 #>  [8470,]  161 #>  [8471,]  161 #>  [8472,]  161 #>  [8473,]  161 #>  [8474,]  161 #>  [8475,]  161 #>  [8476,]  162 #>  [8477,]  161 #>  [8478,]  161 #>  [8479,]  161 #>  [8480,]  161 #>  [8481,]  161 #>  [8482,]  161 #>  [8483,]  161 #>  [8484,]  161 #>  [8485,]  161 #>  [8486,]  162 #>  [8487,]  161 #>  [8488,]  161 #>  [8489,]  161 #>  [8490,]  161 #>  [8491,]  162 #>  [8492,]  161 #>  [8493,]  161 #>  [8494,]  161 #>  [8495,]  161 #>  [8496,]  161 #>  [8497,]  161 #>  [8498,]  161 #>  [8499,]  161 #>  [8500,]  161 #>  [8501,]  163 #>  [8502,]  163 #>  [8503,]  163 #>  [8504,]  164 #>  [8505,]  163 #>  [8506,]  163 #>  [8507,]  163 #>  [8508,]  163 #>  [8509,]  163 #>  [8510,]  163 #>  [8511,]  164 #>  [8512,]  164 #>  [8513,]  163 #>  [8514,]  164 #>  [8515,]  164 #>  [8516,]  163 #>  [8517,]  163 #>  [8518,]  163 #>  [8519,]  164 #>  [8520,]  163 #>  [8521,]  164 #>  [8522,]  163 #>  [8523,]  163 #>  [8524,]  163 #>  [8525,]  163 #>  [8526,]  163 #>  [8527,]  164 #>  [8528,]  163 #>  [8529,]  163 #>  [8530,]  163 #>  [8531,]  163 #>  [8532,]  163 #>  [8533,]  163 #>  [8534,]  163 #>  [8535,]  163 #>  [8536,]  163 #>  [8537,]  163 #>  [8538,]  164 #>  [8539,]  163 #>  [8540,]  163 #>  [8541,]  164 #>  [8542,]  164 #>  [8543,]  163 #>  [8544,]  163 #>  [8545,]  163 #>  [8546,]  163 #>  [8547,]  163 #>  [8548,]  164 #>  [8549,]  163 #>  [8550,]  163 #>  [8551,]  163 #>  [8552,]  163 #>  [8553,]  163 #>  [8554,]  163 #>  [8555,]  163 #>  [8556,]  163 #>  [8557,]  163 #>  [8558,]  163 #>  [8559,]  163 #>  [8560,]  163 #>  [8561,]  164 #>  [8562,]  163 #>  [8563,]  163 #>  [8564,]  163 #>  [8565,]  163 #>  [8566,]  163 #>  [8567,]  163 #>  [8568,]  163 #>  [8569,]  164 #>  [8570,]  163 #>  [8571,]  163 #>  [8572,]  163 #>  [8573,]  163 #>  [8574,]  164 #>  [8575,]  164 #>  [8576,]  163 #>  [8577,]  163 #>  [8578,]  163 #>  [8579,]  163 #>  [8580,]  163 #>  [8581,]  163 #>  [8582,]  164 #>  [8583,]  163 #>  [8584,]  163 #>  [8585,]  163 #>  [8586,]  163 #>  [8587,]  163 #>  [8588,]  163 #>  [8589,]  163 #>  [8590,]  163 #>  [8591,]  163 #>  [8592,]  164 #>  [8593,]  164 #>  [8594,]  163 #>  [8595,]  163 #>  [8596,]  164 #>  [8597,]  164 #>  [8598,]  163 #>  [8599,]  163 #>  [8600,]  163 #>  [8601,]  166 #>  [8602,]  166 #>  [8603,]  165 #>  [8604,]  166 #>  [8605,]  166 #>  [8606,]  166 #>  [8607,]  166 #>  [8608,]  166 #>  [8609,]  166 #>  [8610,]  166 #>  [8611,]  165 #>  [8612,]  165 #>  [8613,]  166 #>  [8614,]  165 #>  [8615,]  166 #>  [8616,]  166 #>  [8617,]  166 #>  [8618,]  166 #>  [8619,]  166 #>  [8620,]  165 #>  [8621,]  166 #>  [8622,]  165 #>  [8623,]  166 #>  [8624,]  166 #>  [8625,]  166 #>  [8626,]  165 #>  [8627,]  166 #>  [8628,]  166 #>  [8629,]  165 #>  [8630,]  166 #>  [8631,]  166 #>  [8632,]  165 #>  [8633,]  166 #>  [8634,]  166 #>  [8635,]  166 #>  [8636,]  165 #>  [8637,]  166 #>  [8638,]  166 #>  [8639,]  166 #>  [8640,]  165 #>  [8641,]  165 #>  [8642,]  165 #>  [8643,]  166 #>  [8644,]  166 #>  [8645,]  166 #>  [8646,]  166 #>  [8647,]  166 #>  [8648,]  165 #>  [8649,]  166 #>  [8650,]  166 #>  [8651,]  165 #>  [8652,]  166 #>  [8653,]  166 #>  [8654,]  165 #>  [8655,]  166 #>  [8656,]  166 #>  [8657,]  166 #>  [8658,]  166 #>  [8659,]  166 #>  [8660,]  165 #>  [8661,]  166 #>  [8662,]  165 #>  [8663,]  166 #>  [8664,]  166 #>  [8665,]  166 #>  [8666,]  165 #>  [8667,]  166 #>  [8668,]  165 #>  [8669,]  165 #>  [8670,]  166 #>  [8671,]  166 #>  [8672,]  166 #>  [8673,]  166 #>  [8674,]  166 #>  [8675,]  166 #>  [8676,]  166 #>  [8677,]  166 #>  [8678,]  166 #>  [8679,]  166 #>  [8680,]  165 #>  [8681,]  165 #>  [8682,]  166 #>  [8683,]  165 #>  [8684,]  166 #>  [8685,]  166 #>  [8686,]  166 #>  [8687,]  166 #>  [8688,]  166 #>  [8689,]  165 #>  [8690,]  166 #>  [8691,]  165 #>  [8692,]  166 #>  [8693,]  166 #>  [8694,]  166 #>  [8695,]  166 #>  [8696,]  166 #>  [8697,]  166 #>  [8698,]  166 #>  [8699,]  166 #>  [8700,]  166 #>  [8701,]  168 #>  [8702,]  168 #>  [8703,]  167 #>  [8704,]  168 #>  [8705,]  168 #>  [8706,]  168 #>  [8707,]  168 #>  [8708,]  168 #>  [8709,]  168 #>  [8710,]  168 #>  [8711,]  167 #>  [8712,]  167 #>  [8713,]  168 #>  [8714,]  167 #>  [8715,]  168 #>  [8716,]  168 #>  [8717,]  168 #>  [8718,]  168 #>  [8719,]  167 #>  [8720,]  167 #>  [8721,]  168 #>  [8722,]  167 #>  [8723,]  168 #>  [8724,]  168 #>  [8725,]  168 #>  [8726,]  167 #>  [8727,]  168 #>  [8728,]  168 #>  [8729,]  167 #>  [8730,]  167 #>  [8731,]  168 #>  [8732,]  167 #>  [8733,]  168 #>  [8734,]  167 #>  [8735,]  168 #>  [8736,]  167 #>  [8737,]  168 #>  [8738,]  168 #>  [8739,]  168 #>  [8740,]  167 #>  [8741,]  167 #>  [8742,]  167 #>  [8743,]  168 #>  [8744,]  168 #>  [8745,]  168 #>  [8746,]  168 #>  [8747,]  168 #>  [8748,]  167 #>  [8749,]  168 #>  [8750,]  168 #>  [8751,]  167 #>  [8752,]  168 #>  [8753,]  168 #>  [8754,]  167 #>  [8755,]  168 #>  [8756,]  168 #>  [8757,]  168 #>  [8758,]  168 #>  [8759,]  168 #>  [8760,]  167 #>  [8761,]  168 #>  [8762,]  167 #>  [8763,]  167 #>  [8764,]  168 #>  [8765,]  168 #>  [8766,]  167 #>  [8767,]  168 #>  [8768,]  167 #>  [8769,]  167 #>  [8770,]  168 #>  [8771,]  168 #>  [8772,]  168 #>  [8773,]  168 #>  [8774,]  168 #>  [8775,]  168 #>  [8776,]  168 #>  [8777,]  168 #>  [8778,]  168 #>  [8779,]  168 #>  [8780,]  167 #>  [8781,]  167 #>  [8782,]  168 #>  [8783,]  167 #>  [8784,]  168 #>  [8785,]  168 #>  [8786,]  168 #>  [8787,]  168 #>  [8788,]  168 #>  [8789,]  167 #>  [8790,]  168 #>  [8791,]  167 #>  [8792,]  168 #>  [8793,]  168 #>  [8794,]  168 #>  [8795,]  168 #>  [8796,]  168 #>  [8797,]  168 #>  [8798,]  168 #>  [8799,]  168 #>  [8800,]  168 #>  [8801,]  169 #>  [8802,]  169 #>  [8803,]  169 #>  [8804,]  170 #>  [8805,]  169 #>  [8806,]  169 #>  [8807,]  170 #>  [8808,]  169 #>  [8809,]  169 #>  [8810,]  170 #>  [8811,]  169 #>  [8812,]  169 #>  [8813,]  169 #>  [8814,]  169 #>  [8815,]  169 #>  [8816,]  170 #>  [8817,]  169 #>  [8818,]  169 #>  [8819,]  169 #>  [8820,]  170 #>  [8821,]  169 #>  [8822,]  169 #>  [8823,]  169 #>  [8824,]  170 #>  [8825,]  170 #>  [8826,]  169 #>  [8827,]  169 #>  [8828,]  170 #>  [8829,]  169 #>  [8830,]  169 #>  [8831,]  169 #>  [8832,]  169 #>  [8833,]  169 #>  [8834,]  169 #>  [8835,]  169 #>  [8836,]  170 #>  [8837,]  169 #>  [8838,]  169 #>  [8839,]  170 #>  [8840,]  169 #>  [8841,]  169 #>  [8842,]  169 #>  [8843,]  169 #>  [8844,]  169 #>  [8845,]  169 #>  [8846,]  169 #>  [8847,]  169 #>  [8848,]  169 #>  [8849,]  169 #>  [8850,]  170 #>  [8851,]  169 #>  [8852,]  170 #>  [8853,]  169 #>  [8854,]  170 #>  [8855,]  169 #>  [8856,]  169 #>  [8857,]  170 #>  [8858,]  169 #>  [8859,]  169 #>  [8860,]  169 #>  [8861,]  169 #>  [8862,]  169 #>  [8863,]  169 #>  [8864,]  169 #>  [8865,]  169 #>  [8866,]  169 #>  [8867,]  169 #>  [8868,]  169 #>  [8869,]  169 #>  [8870,]  169 #>  [8871,]  169 #>  [8872,]  169 #>  [8873,]  170 #>  [8874,]  169 #>  [8875,]  169 #>  [8876,]  170 #>  [8877,]  169 #>  [8878,]  169 #>  [8879,]  169 #>  [8880,]  169 #>  [8881,]  169 #>  [8882,]  169 #>  [8883,]  169 #>  [8884,]  169 #>  [8885,]  169 #>  [8886,]  170 #>  [8887,]  169 #>  [8888,]  169 #>  [8889,]  169 #>  [8890,]  169 #>  [8891,]  170 #>  [8892,]  169 #>  [8893,]  169 #>  [8894,]  169 #>  [8895,]  169 #>  [8896,]  169 #>  [8897,]  169 #>  [8898,]  169 #>  [8899,]  169 #>  [8900,]  169 #>  [8901,]  171 #>  [8902,]  171 #>  [8903,]  172 #>  [8904,]  171 #>  [8905,]  171 #>  [8906,]  172 #>  [8907,]  171 #>  [8908,]  171 #>  [8909,]  171 #>  [8910,]  171 #>  [8911,]  171 #>  [8912,]  172 #>  [8913,]  171 #>  [8914,]  171 #>  [8915,]  171 #>  [8916,]  171 #>  [8917,]  171 #>  [8918,]  171 #>  [8919,]  172 #>  [8920,]  172 #>  [8921,]  171 #>  [8922,]  171 #>  [8923,]  171 #>  [8924,]  171 #>  [8925,]  172 #>  [8926,]  171 #>  [8927,]  171 #>  [8928,]  172 #>  [8929,]  171 #>  [8930,]  171 #>  [8931,]  171 #>  [8932,]  171 #>  [8933,]  172 #>  [8934,]  172 #>  [8935,]  171 #>  [8936,]  171 #>  [8937,]  171 #>  [8938,]  171 #>  [8939,]  171 #>  [8940,]  171 #>  [8941,]  171 #>  [8942,]  171 #>  [8943,]  171 #>  [8944,]  171 #>  [8945,]  171 #>  [8946,]  171 #>  [8947,]  171 #>  [8948,]  171 #>  [8949,]  171 #>  [8950,]  171 #>  [8951,]  171 #>  [8952,]  171 #>  [8953,]  171 #>  [8954,]  171 #>  [8955,]  171 #>  [8956,]  171 #>  [8957,]  171 #>  [8958,]  171 #>  [8959,]  171 #>  [8960,]  172 #>  [8961,]  171 #>  [8962,]  171 #>  [8963,]  171 #>  [8964,]  171 #>  [8965,]  172 #>  [8966,]  171 #>  [8967,]  171 #>  [8968,]  171 #>  [8969,]  171 #>  [8970,]  172 #>  [8971,]  171 #>  [8972,]  171 #>  [8973,]  172 #>  [8974,]  171 #>  [8975,]  171 #>  [8976,]  171 #>  [8977,]  171 #>  [8978,]  171 #>  [8979,]  171 #>  [8980,]  171 #>  [8981,]  171 #>  [8982,]  171 #>  [8983,]  171 #>  [8984,]  171 #>  [8985,]  171 #>  [8986,]  171 #>  [8987,]  171 #>  [8988,]  171 #>  [8989,]  171 #>  [8990,]  171 #>  [8991,]  171 #>  [8992,]  171 #>  [8993,]  172 #>  [8994,]  171 #>  [8995,]  171 #>  [8996,]  171 #>  [8997,]  172 #>  [8998,]  172 #>  [8999,]  171 #>  [9000,]  171 #>  [9001,]  173 #>  [9002,]  174 #>  [9003,]  173 #>  [9004,]  173 #>  [9005,]  173 #>  [9006,]  173 #>  [9007,]  173 #>  [9008,]  173 #>  [9009,]  174 #>  [9010,]  174 #>  [9011,]  173 #>  [9012,]  174 #>  [9013,]  173 #>  [9014,]  173 #>  [9015,]  173 #>  [9016,]  173 #>  [9017,]  173 #>  [9018,]  173 #>  [9019,]  173 #>  [9020,]  173 #>  [9021,]  174 #>  [9022,]  173 #>  [9023,]  173 #>  [9024,]  173 #>  [9025,]  173 #>  [9026,]  173 #>  [9027,]  173 #>  [9028,]  173 #>  [9029,]  174 #>  [9030,]  173 #>  [9031,]  173 #>  [9032,]  173 #>  [9033,]  174 #>  [9034,]  173 #>  [9035,]  173 #>  [9036,]  173 #>  [9037,]  173 #>  [9038,]  173 #>  [9039,]  173 #>  [9040,]  173 #>  [9041,]  173 #>  [9042,]  173 #>  [9043,]  173 #>  [9044,]  173 #>  [9045,]  173 #>  [9046,]  173 #>  [9047,]  173 #>  [9048,]  173 #>  [9049,]  173 #>  [9050,]  173 #>  [9051,]  173 #>  [9052,]  173 #>  [9053,]  173 #>  [9054,]  173 #>  [9055,]  173 #>  [9056,]  173 #>  [9057,]  173 #>  [9058,]  173 #>  [9059,]  173 #>  [9060,]  173 #>  [9061,]  173 #>  [9062,]  173 #>  [9063,]  173 #>  [9064,]  173 #>  [9065,]  173 #>  [9066,]  173 #>  [9067,]  173 #>  [9068,]  173 #>  [9069,]  173 #>  [9070,]  174 #>  [9071,]  173 #>  [9072,]  173 #>  [9073,]  173 #>  [9074,]  173 #>  [9075,]  173 #>  [9076,]  173 #>  [9077,]  173 #>  [9078,]  173 #>  [9079,]  173 #>  [9080,]  173 #>  [9081,]  173 #>  [9082,]  173 #>  [9083,]  173 #>  [9084,]  173 #>  [9085,]  173 #>  [9086,]  174 #>  [9087,]  173 #>  [9088,]  173 #>  [9089,]  173 #>  [9090,]  173 #>  [9091,]  173 #>  [9092,]  173 #>  [9093,]  173 #>  [9094,]  173 #>  [9095,]  173 #>  [9096,]  173 #>  [9097,]  173 #>  [9098,]  173 #>  [9099,]  173 #>  [9100,]  173 #>  [9101,]  175 #>  [9102,]  175 #>  [9103,]  175 #>  [9104,]  175 #>  [9105,]  175 #>  [9106,]  175 #>  [9107,]  175 #>  [9108,]  175 #>  [9109,]  175 #>  [9110,]  175 #>  [9111,]  175 #>  [9112,]  175 #>  [9113,]  175 #>  [9114,]  175 #>  [9115,]  175 #>  [9116,]  175 #>  [9117,]  175 #>  [9118,]  176 #>  [9119,]  175 #>  [9120,]  175 #>  [9121,]  175 #>  [9122,]  175 #>  [9123,]  175 #>  [9124,]  175 #>  [9125,]  175 #>  [9126,]  175 #>  [9127,]  175 #>  [9128,]  175 #>  [9129,]  175 #>  [9130,]  175 #>  [9131,]  175 #>  [9132,]  175 #>  [9133,]  175 #>  [9134,]  175 #>  [9135,]  175 #>  [9136,]  175 #>  [9137,]  175 #>  [9138,]  175 #>  [9139,]  175 #>  [9140,]  175 #>  [9141,]  175 #>  [9142,]  176 #>  [9143,]  175 #>  [9144,]  175 #>  [9145,]  175 #>  [9146,]  175 #>  [9147,]  175 #>  [9148,]  175 #>  [9149,]  175 #>  [9150,]  175 #>  [9151,]  176 #>  [9152,]  175 #>  [9153,]  176 #>  [9154,]  175 #>  [9155,]  175 #>  [9156,]  175 #>  [9157,]  175 #>  [9158,]  175 #>  [9159,]  175 #>  [9160,]  175 #>  [9161,]  175 #>  [9162,]  175 #>  [9163,]  175 #>  [9164,]  175 #>  [9165,]  175 #>  [9166,]  175 #>  [9167,]  175 #>  [9168,]  175 #>  [9169,]  175 #>  [9170,]  175 #>  [9171,]  175 #>  [9172,]  175 #>  [9173,]  175 #>  [9174,]  175 #>  [9175,]  175 #>  [9176,]  175 #>  [9177,]  175 #>  [9178,]  175 #>  [9179,]  176 #>  [9180,]  175 #>  [9181,]  175 #>  [9182,]  175 #>  [9183,]  175 #>  [9184,]  176 #>  [9185,]  175 #>  [9186,]  175 #>  [9187,]  175 #>  [9188,]  175 #>  [9189,]  175 #>  [9190,]  175 #>  [9191,]  175 #>  [9192,]  175 #>  [9193,]  175 #>  [9194,]  176 #>  [9195,]  175 #>  [9196,]  175 #>  [9197,]  175 #>  [9198,]  175 #>  [9199,]  175 #>  [9200,]  175 #>  [9201,]  178 #>  [9202,]  177 #>  [9203,]  178 #>  [9204,]  178 #>  [9205,]  178 #>  [9206,]  177 #>  [9207,]  178 #>  [9208,]  178 #>  [9209,]  178 #>  [9210,]  178 #>  [9211,]  177 #>  [9212,]  177 #>  [9213,]  178 #>  [9214,]  178 #>  [9215,]  177 #>  [9216,]  178 #>  [9217,]  177 #>  [9218,]  178 #>  [9219,]  178 #>  [9220,]  178 #>  [9221,]  178 #>  [9222,]  178 #>  [9223,]  177 #>  [9224,]  178 #>  [9225,]  178 #>  [9226,]  178 #>  [9227,]  178 #>  [9228,]  178 #>  [9229,]  177 #>  [9230,]  178 #>  [9231,]  177 #>  [9232,]  178 #>  [9233,]  178 #>  [9234,]  177 #>  [9235,]  178 #>  [9236,]  178 #>  [9237,]  177 #>  [9238,]  178 #>  [9239,]  178 #>  [9240,]  178 #>  [9241,]  178 #>  [9242,]  177 #>  [9243,]  177 #>  [9244,]  177 #>  [9245,]  178 #>  [9246,]  178 #>  [9247,]  177 #>  [9248,]  177 #>  [9249,]  178 #>  [9250,]  178 #>  [9251,]  178 #>  [9252,]  178 #>  [9253,]  178 #>  [9254,]  178 #>  [9255,]  178 #>  [9256,]  177 #>  [9257,]  178 #>  [9258,]  178 #>  [9259,]  178 #>  [9260,]  178 #>  [9261,]  177 #>  [9262,]  178 #>  [9263,]  177 #>  [9264,]  177 #>  [9265,]  177 #>  [9266,]  178 #>  [9267,]  178 #>  [9268,]  178 #>  [9269,]  178 #>  [9270,]  177 #>  [9271,]  178 #>  [9272,]  178 #>  [9273,]  178 #>  [9274,]  178 #>  [9275,]  177 #>  [9276,]  178 #>  [9277,]  178 #>  [9278,]  177 #>  [9279,]  177 #>  [9280,]  178 #>  [9281,]  177 #>  [9282,]  178 #>  [9283,]  178 #>  [9284,]  178 #>  [9285,]  178 #>  [9286,]  178 #>  [9287,]  178 #>  [9288,]  178 #>  [9289,]  178 #>  [9290,]  178 #>  [9291,]  178 #>  [9292,]  177 #>  [9293,]  178 #>  [9294,]  177 #>  [9295,]  177 #>  [9296,]  178 #>  [9297,]  178 #>  [9298,]  178 #>  [9299,]  178 #>  [9300,]  177 #>  [9301,]  180 #>  [9302,]  180 #>  [9303,]  179 #>  [9304,]  179 #>  [9305,]  179 #>  [9306,]  180 #>  [9307,]  180 #>  [9308,]  179 #>  [9309,]  179 #>  [9310,]  179 #>  [9311,]  180 #>  [9312,]  180 #>  [9313,]  180 #>  [9314,]  180 #>  [9315,]  180 #>  [9316,]  180 #>  [9317,]  180 #>  [9318,]  179 #>  [9319,]  180 #>  [9320,]  179 #>  [9321,]  180 #>  [9322,]  180 #>  [9323,]  180 #>  [9324,]  179 #>  [9325,]  180 #>  [9326,]  180 #>  [9327,]  180 #>  [9328,]  180 #>  [9329,]  180 #>  [9330,]  179 #>  [9331,]  179 #>  [9332,]  179 #>  [9333,]  180 #>  [9334,]  180 #>  [9335,]  180 #>  [9336,]  180 #>  [9337,]  180 #>  [9338,]  180 #>  [9339,]  179 #>  [9340,]  180 #>  [9341,]  180 #>  [9342,]  180 #>  [9343,]  179 #>  [9344,]  180 #>  [9345,]  179 #>  [9346,]  180 #>  [9347,]  180 #>  [9348,]  179 #>  [9349,]  179 #>  [9350,]  180 #>  [9351,]  179 #>  [9352,]  180 #>  [9353,]  179 #>  [9354,]  180 #>  [9355,]  180 #>  [9356,]  179 #>  [9357,]  180 #>  [9358,]  180 #>  [9359,]  180 #>  [9360,]  179 #>  [9361,]  180 #>  [9362,]  179 #>  [9363,]  180 #>  [9364,]  179 #>  [9365,]  179 #>  [9366,]  179 #>  [9367,]  179 #>  [9368,]  180 #>  [9369,]  180 #>  [9370,]  180 #>  [9371,]  180 #>  [9372,]  179 #>  [9373,]  180 #>  [9374,]  180 #>  [9375,]  180 #>  [9376,]  180 #>  [9377,]  180 #>  [9378,]  179 #>  [9379,]  180 #>  [9380,]  180 #>  [9381,]  180 #>  [9382,]  180 #>  [9383,]  180 #>  [9384,]  180 #>  [9385,]  179 #>  [9386,]  180 #>  [9387,]  180 #>  [9388,]  179 #>  [9389,]  179 #>  [9390,]  180 #>  [9391,]  179 #>  [9392,]  180 #>  [9393,]  180 #>  [9394,]  180 #>  [9395,]  179 #>  [9396,]  180 #>  [9397,]  180 #>  [9398,]  180 #>  [9399,]  180 #>  [9400,]  180 #>  [9401,]  181 #>  [9402,]  181 #>  [9403,]  181 #>  [9404,]  182 #>  [9405,]  181 #>  [9406,]  181 #>  [9407,]  181 #>  [9408,]  181 #>  [9409,]  181 #>  [9410,]  182 #>  [9411,]  181 #>  [9412,]  181 #>  [9413,]  181 #>  [9414,]  181 #>  [9415,]  181 #>  [9416,]  181 #>  [9417,]  181 #>  [9418,]  182 #>  [9419,]  181 #>  [9420,]  181 #>  [9421,]  181 #>  [9422,]  181 #>  [9423,]  181 #>  [9424,]  181 #>  [9425,]  182 #>  [9426,]  181 #>  [9427,]  181 #>  [9428,]  181 #>  [9429,]  181 #>  [9430,]  181 #>  [9431,]  181 #>  [9432,]  181 #>  [9433,]  181 #>  [9434,]  181 #>  [9435,]  181 #>  [9436,]  181 #>  [9437,]  181 #>  [9438,]  181 #>  [9439,]  182 #>  [9440,]  181 #>  [9441,]  181 #>  [9442,]  181 #>  [9443,]  182 #>  [9444,]  181 #>  [9445,]  182 #>  [9446,]  181 #>  [9447,]  181 #>  [9448,]  181 #>  [9449,]  181 #>  [9450,]  181 #>  [9451,]  181 #>  [9452,]  181 #>  [9453,]  182 #>  [9454,]  181 #>  [9455,]  181 #>  [9456,]  181 #>  [9457,]  181 #>  [9458,]  181 #>  [9459,]  181 #>  [9460,]  181 #>  [9461,]  181 #>  [9462,]  181 #>  [9463,]  181 #>  [9464,]  181 #>  [9465,]  181 #>  [9466,]  181 #>  [9467,]  181 #>  [9468,]  181 #>  [9469,]  181 #>  [9470,]  181 #>  [9471,]  181 #>  [9472,]  181 #>  [9473,]  182 #>  [9474,]  182 #>  [9475,]  182 #>  [9476,]  182 #>  [9477,]  182 #>  [9478,]  181 #>  [9479,]  181 #>  [9480,]  181 #>  [9481,]  181 #>  [9482,]  181 #>  [9483,]  181 #>  [9484,]  181 #>  [9485,]  181 #>  [9486,]  181 #>  [9487,]  181 #>  [9488,]  181 #>  [9489,]  181 #>  [9490,]  181 #>  [9491,]  181 #>  [9492,]  181 #>  [9493,]  181 #>  [9494,]  181 #>  [9495,]  182 #>  [9496,]  181 #>  [9497,]  181 #>  [9498,]  181 #>  [9499,]  181 #>  [9500,]  181 #>  [9501,]  184 #>  [9502,]  183 #>  [9503,]  183 #>  [9504,]  184 #>  [9505,]  184 #>  [9506,]  184 #>  [9507,]  183 #>  [9508,]  184 #>  [9509,]  184 #>  [9510,]  184 #>  [9511,]  184 #>  [9512,]  184 #>  [9513,]  183 #>  [9514,]  184 #>  [9515,]  184 #>  [9516,]  183 #>  [9517,]  184 #>  [9518,]  183 #>  [9519,]  183 #>  [9520,]  184 #>  [9521,]  183 #>  [9522,]  183 #>  [9523,]  183 #>  [9524,]  183 #>  [9525,]  184 #>  [9526,]  184 #>  [9527,]  184 #>  [9528,]  184 #>  [9529,]  183 #>  [9530,]  183 #>  [9531,]  183 #>  [9532,]  183 #>  [9533,]  184 #>  [9534,]  183 #>  [9535,]  183 #>  [9536,]  183 #>  [9537,]  183 #>  [9538,]  184 #>  [9539,]  183 #>  [9540,]  183 #>  [9541,]  184 #>  [9542,]  184 #>  [9543,]  184 #>  [9544,]  183 #>  [9545,]  184 #>  [9546,]  184 #>  [9547,]  183 #>  [9548,]  183 #>  [9549,]  183 #>  [9550,]  184 #>  [9551,]  184 #>  [9552,]  184 #>  [9553,]  184 #>  [9554,]  183 #>  [9555,]  184 #>  [9556,]  184 #>  [9557,]  184 #>  [9558,]  184 #>  [9559,]  183 #>  [9560,]  184 #>  [9561,]  184 #>  [9562,]  183 #>  [9563,]  184 #>  [9564,]  184 #>  [9565,]  184 #>  [9566,]  184 #>  [9567,]  184 #>  [9568,]  184 #>  [9569,]  184 #>  [9570,]  183 #>  [9571,]  184 #>  [9572,]  184 #>  [9573,]  184 #>  [9574,]  184 #>  [9575,]  184 #>  [9576,]  184 #>  [9577,]  183 #>  [9578,]  184 #>  [9579,]  183 #>  [9580,]  183 #>  [9581,]  184 #>  [9582,]  184 #>  [9583,]  183 #>  [9584,]  184 #>  [9585,]  183 #>  [9586,]  183 #>  [9587,]  184 #>  [9588,]  184 #>  [9589,]  184 #>  [9590,]  184 #>  [9591,]  184 #>  [9592,]  184 #>  [9593,]  183 #>  [9594,]  184 #>  [9595,]  183 #>  [9596,]  184 #>  [9597,]  184 #>  [9598,]  183 #>  [9599,]  184 #>  [9600,]  183 #>  [9601,]  185 #>  [9602,]  185 #>  [9603,]  185 #>  [9604,]  185 #>  [9605,]  185 #>  [9606,]  185 #>  [9607,]  185 #>  [9608,]  185 #>  [9609,]  185 #>  [9610,]  185 #>  [9611,]  185 #>  [9612,]  185 #>  [9613,]  185 #>  [9614,]  185 #>  [9615,]  185 #>  [9616,]  185 #>  [9617,]  185 #>  [9618,]  185 #>  [9619,]  185 #>  [9620,]  185 #>  [9621,]  185 #>  [9622,]  185 #>  [9623,]  185 #>  [9624,]  185 #>  [9625,]  185 #>  [9626,]  185 #>  [9627,]  185 #>  [9628,]  185 #>  [9629,]  185 #>  [9630,]  185 #>  [9631,]  185 #>  [9632,]  185 #>  [9633,]  185 #>  [9634,]  185 #>  [9635,]  185 #>  [9636,]  185 #>  [9637,]  185 #>  [9638,]  185 #>  [9639,]  185 #>  [9640,]  185 #>  [9641,]  185 #>  [9642,]  185 #>  [9643,]  185 #>  [9644,]  185 #>  [9645,]  185 #>  [9646,]  185 #>  [9647,]  185 #>  [9648,]  185 #>  [9649,]  185 #>  [9650,]  185 #>  [9651,]  185 #>  [9652,]  185 #>  [9653,]  185 #>  [9654,]  185 #>  [9655,]  185 #>  [9656,]  185 #>  [9657,]  185 #>  [9658,]  185 #>  [9659,]  185 #>  [9660,]  185 #>  [9661,]  185 #>  [9662,]  185 #>  [9663,]  185 #>  [9664,]  185 #>  [9665,]  185 #>  [9666,]  185 #>  [9667,]  185 #>  [9668,]  185 #>  [9669,]  185 #>  [9670,]  185 #>  [9671,]  185 #>  [9672,]  185 #>  [9673,]  185 #>  [9674,]  185 #>  [9675,]  185 #>  [9676,]  185 #>  [9677,]  185 #>  [9678,]  185 #>  [9679,]  185 #>  [9680,]  185 #>  [9681,]  185 #>  [9682,]  185 #>  [9683,]  185 #>  [9684,]  185 #>  [9685,]  185 #>  [9686,]  185 #>  [9687,]  185 #>  [9688,]  185 #>  [9689,]  185 #>  [9690,]  185 #>  [9691,]  185 #>  [9692,]  185 #>  [9693,]  185 #>  [9694,]  185 #>  [9695,]  185 #>  [9696,]  185 #>  [9697,]  185 #>  [9698,]  185 #>  [9699,]  185 #>  [9700,]  185 #>  [9701,]  187 #>  [9702,]  186 #>  [9703,]  186 #>  [9704,]  187 #>  [9705,]  187 #>  [9706,]  187 #>  [9707,]  186 #>  [9708,]  187 #>  [9709,]  187 #>  [9710,]  187 #>  [9711,]  187 #>  [9712,]  187 #>  [9713,]  186 #>  [9714,]  187 #>  [9715,]  187 #>  [9716,]  186 #>  [9717,]  187 #>  [9718,]  186 #>  [9719,]  186 #>  [9720,]  187 #>  [9721,]  186 #>  [9722,]  186 #>  [9723,]  186 #>  [9724,]  186 #>  [9725,]  187 #>  [9726,]  187 #>  [9727,]  187 #>  [9728,]  187 #>  [9729,]  186 #>  [9730,]  186 #>  [9731,]  186 #>  [9732,]  186 #>  [9733,]  187 #>  [9734,]  186 #>  [9735,]  186 #>  [9736,]  186 #>  [9737,]  186 #>  [9738,]  187 #>  [9739,]  186 #>  [9740,]  186 #>  [9741,]  187 #>  [9742,]  187 #>  [9743,]  187 #>  [9744,]  186 #>  [9745,]  187 #>  [9746,]  187 #>  [9747,]  186 #>  [9748,]  186 #>  [9749,]  186 #>  [9750,]  187 #>  [9751,]  187 #>  [9752,]  187 #>  [9753,]  187 #>  [9754,]  186 #>  [9755,]  187 #>  [9756,]  187 #>  [9757,]  187 #>  [9758,]  187 #>  [9759,]  186 #>  [9760,]  187 #>  [9761,]  187 #>  [9762,]  186 #>  [9763,]  187 #>  [9764,]  187 #>  [9765,]  187 #>  [9766,]  187 #>  [9767,]  187 #>  [9768,]  187 #>  [9769,]  187 #>  [9770,]  186 #>  [9771,]  187 #>  [9772,]  187 #>  [9773,]  187 #>  [9774,]  187 #>  [9775,]  187 #>  [9776,]  187 #>  [9777,]  186 #>  [9778,]  187 #>  [9779,]  186 #>  [9780,]  186 #>  [9781,]  187 #>  [9782,]  187 #>  [9783,]  186 #>  [9784,]  187 #>  [9785,]  186 #>  [9786,]  186 #>  [9787,]  187 #>  [9788,]  187 #>  [9789,]  187 #>  [9790,]  187 #>  [9791,]  187 #>  [9792,]  187 #>  [9793,]  186 #>  [9794,]  187 #>  [9795,]  186 #>  [9796,]  187 #>  [9797,]  187 #>  [9798,]  186 #>  [9799,]  187 #>  [9800,]  186 #>  [9801,]  189 #>  [9802,]  189 #>  [9803,]  188 #>  [9804,]  189 #>  [9805,]  189 #>  [9806,]  189 #>  [9807,]  188 #>  [9808,]  188 #>  [9809,]  189 #>  [9810,]  189 #>  [9811,]  189 #>  [9812,]  189 #>  [9813,]  189 #>  [9814,]  189 #>  [9815,]  189 #>  [9816,]  189 #>  [9817,]  189 #>  [9818,]  189 #>  [9819,]  189 #>  [9820,]  188 #>  [9821,]  189 #>  [9822,]  189 #>  [9823,]  189 #>  [9824,]  189 #>  [9825,]  188 #>  [9826,]  189 #>  [9827,]  189 #>  [9828,]  189 #>  [9829,]  189 #>  [9830,]  189 #>  [9831,]  189 #>  [9832,]  189 #>  [9833,]  189 #>  [9834,]  189 #>  [9835,]  189 #>  [9836,]  189 #>  [9837,]  189 #>  [9838,]  189 #>  [9839,]  188 #>  [9840,]  189 #>  [9841,]  189 #>  [9842,]  189 #>  [9843,]  189 #>  [9844,]  188 #>  [9845,]  189 #>  [9846,]  189 #>  [9847,]  189 #>  [9848,]  189 #>  [9849,]  188 #>  [9850,]  188 #>  [9851,]  189 #>  [9852,]  189 #>  [9853,]  188 #>  [9854,]  189 #>  [9855,]  188 #>  [9856,]  188 #>  [9857,]  189 #>  [9858,]  189 #>  [9859,]  188 #>  [9860,]  189 #>  [9861,]  189 #>  [9862,]  189 #>  [9863,]  189 #>  [9864,]  189 #>  [9865,]  188 #>  [9866,]  188 #>  [9867,]  189 #>  [9868,]  189 #>  [9869,]  189 #>  [9870,]  189 #>  [9871,]  189 #>  [9872,]  189 #>  [9873,]  189 #>  [9874,]  189 #>  [9875,]  189 #>  [9876,]  189 #>  [9877,]  189 #>  [9878,]  189 #>  [9879,]  189 #>  [9880,]  189 #>  [9881,]  189 #>  [9882,]  189 #>  [9883,]  189 #>  [9884,]  188 #>  [9885,]  189 #>  [9886,]  188 #>  [9887,]  189 #>  [9888,]  189 #>  [9889,]  189 #>  [9890,]  188 #>  [9891,]  189 #>  [9892,]  189 #>  [9893,]  189 #>  [9894,]  189 #>  [9895,]  189 #>  [9896,]  189 #>  [9897,]  189 #>  [9898,]  188 #>  [9899,]  189 #>  [9900,]  188 #>  [9901,]  190 #>  [9902,]  190 #>  [9903,]  190 #>  [9904,]  190 #>  [9905,]  190 #>  [9906,]  190 #>  [9907,]  190 #>  [9908,]  191 #>  [9909,]  190 #>  [9910,]  190 #>  [9911,]  190 #>  [9912,]  190 #>  [9913,]  191 #>  [9914,]  190 #>  [9915,]  191 #>  [9916,]  190 #>  [9917,]  190 #>  [9918,]  190 #>  [9919,]  191 #>  [9920,]  191 #>  [9921,]  190 #>  [9922,]  191 #>  [9923,]  190 #>  [9924,]  190 #>  [9925,]  190 #>  [9926,]  190 #>  [9927,]  191 #>  [9928,]  190 #>  [9929,]  191 #>  [9930,]  190 #>  [9931,]  190 #>  [9932,]  190 #>  [9933,]  190 #>  [9934,]  190 #>  [9935,]  190 #>  [9936,]  191 #>  [9937,]  191 #>  [9938,]  191 #>  [9939,]  190 #>  [9940,]  190 #>  [9941,]  191 #>  [9942,]  190 #>  [9943,]  190 #>  [9944,]  190 #>  [9945,]  190 #>  [9946,]  191 #>  [9947,]  190 #>  [9948,]  190 #>  [9949,]  190 #>  [9950,]  191 #>  [9951,]  191 #>  [9952,]  190 #>  [9953,]  191 #>  [9954,]  190 #>  [9955,]  191 #>  [9956,]  190 #>  [9957,]  190 #>  [9958,]  191 #>  [9959,]  190 #>  [9960,]  191 #>  [9961,]  190 #>  [9962,]  190 #>  [9963,]  190 #>  [9964,]  191 #>  [9965,]  190 #>  [9966,]  191 #>  [9967,]  190 #>  [9968,]  190 #>  [9969,]  191 #>  [9970,]  190 #>  [9971,]  191 #>  [9972,]  190 #>  [9973,]  190 #>  [9974,]  190 #>  [9975,]  190 #>  [9976,]  190 #>  [9977,]  191 #>  [9978,]  190 #>  [9979,]  190 #>  [9980,]  191 #>  [9981,]  191 #>  [9982,]  190 #>  [9983,]  191 #>  [9984,]  191 #>  [9985,]  191 #>  [9986,]  190 #>  [9987,]  191 #>  [9988,]  190 #>  [9989,]  190 #>  [9990,]  191 #>  [9991,]  190 #>  [9992,]  190 #>  [9993,]  190 #>  [9994,]  190 #>  [9995,]  190 #>  [9996,]  191 #>  [9997,]  191 #>  [9998,]  190 #>  [9999,]  190 #> [10000,]  191 #> [10001,]  193 #> [10002,]  193 #> [10003,]  192 #> [10004,]  192 #> [10005,]  193 #> [10006,]  193 #> [10007,]  192 #> [10008,]  192 #> [10009,]  193 #> [10010,]  193 #> [10011,]  193 #> [10012,]  192 #> [10013,]  193 #> [10014,]  193 #> [10015,]  193 #> [10016,]  193 #> [10017,]  193 #> [10018,]  193 #> [10019,]  193 #> [10020,]  193 #> [10021,]  193 #> [10022,]  193 #> [10023,]  192 #> [10024,]  193 #> [10025,]  192 #> [10026,]  193 #> [10027,]  193 #> [10028,]  193 #> [10029,]  193 #> [10030,]  193 #> [10031,]  192 #> [10032,]  193 #> [10033,]  193 #> [10034,]  193 #> [10035,]  193 #> [10036,]  193 #> [10037,]  192 #> [10038,]  193 #> [10039,]  193 #> [10040,]  192 #> [10041,]  193 #> [10042,]  193 #> [10043,]  193 #> [10044,]  193 #> [10045,]  193 #> [10046,]  192 #> [10047,]  192 #> [10048,]  193 #> [10049,]  193 #> [10050,]  193 #> [10051,]  193 #> [10052,]  192 #> [10053,]  193 #> [10054,]  193 #> [10055,]  192 #> [10056,]  193 #> [10057,]  192 #> [10058,]  193 #> [10059,]  192 #> [10060,]  192 #> [10061,]  193 #> [10062,]  193 #> [10063,]  193 #> [10064,]  193 #> [10065,]  193 #> [10066,]  193 #> [10067,]  193 #> [10068,]  192 #> [10069,]  193 #> [10070,]  193 #> [10071,]  193 #> [10072,]  193 #> [10073,]  193 #> [10074,]  192 #> [10075,]  193 #> [10076,]  193 #> [10077,]  193 #> [10078,]  193 #> [10079,]  193 #> [10080,]  192 #> [10081,]  193 #> [10082,]  193 #> [10083,]  193 #> [10084,]  193 #> [10085,]  193 #> [10086,]  192 #> [10087,]  193 #> [10088,]  193 #> [10089,]  193 #> [10090,]  193 #> [10091,]  193 #> [10092,]  192 #> [10093,]  193 #> [10094,]  193 #> [10095,]  193 #> [10096,]  192 #> [10097,]  192 #> [10098,]  192 #> [10099,]  193 #> [10100,]  193 #> [10101,]  194 #> [10102,]  195 #> [10103,]  195 #> [10104,]  194 #> [10105,]  194 #> [10106,]  195 #> [10107,]  194 #> [10108,]  194 #> [10109,]  194 #> [10110,]  194 #> [10111,]  194 #> [10112,]  195 #> [10113,]  194 #> [10114,]  194 #> [10115,]  194 #> [10116,]  194 #> [10117,]  194 #> [10118,]  195 #> [10119,]  195 #> [10120,]  195 #> [10121,]  194 #> [10122,]  194 #> [10123,]  194 #> [10124,]  194 #> [10125,]  195 #> [10126,]  194 #> [10127,]  194 #> [10128,]  195 #> [10129,]  194 #> [10130,]  194 #> [10131,]  195 #> [10132,]  195 #> [10133,]  195 #> [10134,]  195 #> [10135,]  194 #> [10136,]  194 #> [10137,]  194 #> [10138,]  194 #> [10139,]  194 #> [10140,]  194 #> [10141,]  194 #> [10142,]  195 #> [10143,]  194 #> [10144,]  194 #> [10145,]  194 #> [10146,]  194 #> [10147,]  194 #> [10148,]  194 #> [10149,]  194 #> [10150,]  194 #> [10151,]  194 #> [10152,]  194 #> [10153,]  194 #> [10154,]  194 #> [10155,]  194 #> [10156,]  194 #> [10157,]  194 #> [10158,]  194 #> [10159,]  194 #> [10160,]  195 #> [10161,]  194 #> [10162,]  194 #> [10163,]  194 #> [10164,]  195 #> [10165,]  195 #> [10166,]  194 #> [10167,]  194 #> [10168,]  194 #> [10169,]  194 #> [10170,]  195 #> [10171,]  195 #> [10172,]  194 #> [10173,]  195 #> [10174,]  194 #> [10175,]  194 #> [10176,]  194 #> [10177,]  194 #> [10178,]  194 #> [10179,]  194 #> [10180,]  194 #> [10181,]  194 #> [10182,]  194 #> [10183,]  194 #> [10184,]  195 #> [10185,]  194 #> [10186,]  194 #> [10187,]  194 #> [10188,]  194 #> [10189,]  194 #> [10190,]  194 #> [10191,]  194 #> [10192,]  194 #> [10193,]  195 #> [10194,]  194 #> [10195,]  194 #> [10196,]  194 #> [10197,]  195 #> [10198,]  195 #> [10199,]  194 #> [10200,]  195 #> [10201,]  196 #> [10202,]  196 #> [10203,]  196 #> [10204,]  197 #> [10205,]  196 #> [10206,]  196 #> [10207,]  196 #> [10208,]  196 #> [10209,]  196 #> [10210,]  196 #> [10211,]  197 #> [10212,]  197 #> [10213,]  196 #> [10214,]  197 #> [10215,]  197 #> [10216,]  196 #> [10217,]  196 #> [10218,]  196 #> [10219,]  197 #> [10220,]  196 #> [10221,]  197 #> [10222,]  196 #> [10223,]  196 #> [10224,]  196 #> [10225,]  196 #> [10226,]  196 #> [10227,]  197 #> [10228,]  196 #> [10229,]  196 #> [10230,]  196 #> [10231,]  196 #> [10232,]  196 #> [10233,]  196 #> [10234,]  196 #> [10235,]  196 #> [10236,]  196 #> [10237,]  196 #> [10238,]  197 #> [10239,]  196 #> [10240,]  196 #> [10241,]  197 #> [10242,]  197 #> [10243,]  196 #> [10244,]  196 #> [10245,]  196 #> [10246,]  196 #> [10247,]  196 #> [10248,]  197 #> [10249,]  196 #> [10250,]  196 #> [10251,]  196 #> [10252,]  196 #> [10253,]  196 #> [10254,]  196 #> [10255,]  196 #> [10256,]  196 #> [10257,]  196 #> [10258,]  196 #> [10259,]  196 #> [10260,]  196 #> [10261,]  197 #> [10262,]  196 #> [10263,]  196 #> [10264,]  196 #> [10265,]  196 #> [10266,]  196 #> [10267,]  196 #> [10268,]  197 #> [10269,]  197 #> [10270,]  196 #> [10271,]  196 #> [10272,]  196 #> [10273,]  196 #> [10274,]  197 #> [10275,]  197 #> [10276,]  196 #> [10277,]  196 #> [10278,]  196 #> [10279,]  196 #> [10280,]  196 #> [10281,]  196 #> [10282,]  197 #> [10283,]  196 #> [10284,]  196 #> [10285,]  196 #> [10286,]  196 #> [10287,]  196 #> [10288,]  196 #> [10289,]  196 #> [10290,]  196 #> [10291,]  196 #> [10292,]  197 #> [10293,]  197 #> [10294,]  196 #> [10295,]  196 #> [10296,]  197 #> [10297,]  197 #> [10298,]  196 #> [10299,]  196 #> [10300,]  196 #> [10301,]  199 #> [10302,]  199 #> [10303,]  198 #> [10304,]  198 #> [10305,]  199 #> [10306,]  199 #> [10307,]  198 #> [10308,]  199 #> [10309,]  199 #> [10310,]  199 #> [10311,]  199 #> [10312,]  198 #> [10313,]  199 #> [10314,]  199 #> [10315,]  199 #> [10316,]  199 #> [10317,]  199 #> [10318,]  199 #> [10319,]  199 #> [10320,]  199 #> [10321,]  199 #> [10322,]  199 #> [10323,]  199 #> [10324,]  199 #> [10325,]  198 #> [10326,]  199 #> [10327,]  199 #> [10328,]  199 #> [10329,]  199 #> [10330,]  199 #> [10331,]  198 #> [10332,]  199 #> [10333,]  199 #> [10334,]  199 #> [10335,]  199 #> [10336,]  199 #> [10337,]  199 #> [10338,]  199 #> [10339,]  199 #> [10340,]  199 #> [10341,]  199 #> [10342,]  199 #> [10343,]  199 #> [10344,]  199 #> [10345,]  199 #> [10346,]  199 #> [10347,]  199 #> [10348,]  199 #> [10349,]  199 #> [10350,]  199 #> [10351,]  199 #> [10352,]  198 #> [10353,]  199 #> [10354,]  199 #> [10355,]  199 #> [10356,]  199 #> [10357,]  199 #> [10358,]  199 #> [10359,]  198 #> [10360,]  198 #> [10361,]  199 #> [10362,]  199 #> [10363,]  199 #> [10364,]  199 #> [10365,]  199 #> [10366,]  199 #> [10367,]  199 #> [10368,]  199 #> [10369,]  199 #> [10370,]  199 #> [10371,]  199 #> [10372,]  199 #> [10373,]  199 #> [10374,]  199 #> [10375,]  199 #> [10376,]  199 #> [10377,]  199 #> [10378,]  199 #> [10379,]  199 #> [10380,]  199 #> [10381,]  199 #> [10382,]  199 #> [10383,]  199 #> [10384,]  199 #> [10385,]  199 #> [10386,]  199 #> [10387,]  199 #> [10388,]  199 #> [10389,]  199 #> [10390,]  199 #> [10391,]  199 #> [10392,]  199 #> [10393,]  199 #> [10394,]  199 #> [10395,]  199 #> [10396,]  198 #> [10397,]  198 #> [10398,]  199 #> [10399,]  199 #> [10400,]  199 #> [10401,]  201 #> [10402,]  200 #> [10403,]  200 #> [10404,]  201 #> [10405,]  200 #> [10406,]  200 #> [10407,]  201 #> [10408,]  200 #> [10409,]  200 #> [10410,]  201 #> [10411,]  200 #> [10412,]  200 #> [10413,]  201 #> [10414,]  200 #> [10415,]  201 #> [10416,]  201 #> [10417,]  201 #> [10418,]  201 #> [10419,]  200 #> [10420,]  200 #> [10421,]  201 #> [10422,]  200 #> [10423,]  201 #> [10424,]  200 #> [10425,]  201 #> [10426,]  200 #> [10427,]  201 #> [10428,]  201 #> [10429,]  200 #> [10430,]  200 #> [10431,]  200 #> [10432,]  200 #> [10433,]  200 #> [10434,]  200 #> [10435,]  200 #> [10436,]  200 #> [10437,]  200 #> [10438,]  200 #> [10439,]  201 #> [10440,]  200 #> [10441,]  200 #> [10442,]  200 #> [10443,]  201 #> [10444,]  200 #> [10445,]  201 #> [10446,]  201 #> [10447,]  201 #> [10448,]  200 #> [10449,]  200 #> [10450,]  200 #> [10451,]  200 #> [10452,]  200 #> [10453,]  201 #> [10454,]  200 #> [10455,]  200 #> [10456,]  201 #> [10457,]  200 #> [10458,]  200 #> [10459,]  200 #> [10460,]  200 #> [10461,]  201 #> [10462,]  200 #> [10463,]  200 #> [10464,]  201 #> [10465,]  200 #> [10466,]  200 #> [10467,]  200 #> [10468,]  200 #> [10469,]  200 #> [10470,]  200 #> [10471,]  201 #> [10472,]  201 #> [10473,]  201 #> [10474,]  201 #> [10475,]  201 #> [10476,]  201 #> [10477,]  201 #> [10478,]  200 #> [10479,]  200 #> [10480,]  200 #> [10481,]  200 #> [10482,]  201 #> [10483,]  200 #> [10484,]  201 #> [10485,]  200 #> [10486,]  200 #> [10487,]  200 #> [10488,]  201 #> [10489,]  200 #> [10490,]  200 #> [10491,]  200 #> [10492,]  200 #> [10493,]  200 #> [10494,]  201 #> [10495,]  201 #> [10496,]  200 #> [10497,]  200 #> [10498,]  200 #> [10499,]  200 #> [10500,]  201 #> [10501,]  202 #> [10502,]  202 #> [10503,]  202 #> [10504,]  203 #> [10505,]  202 #> [10506,]  202 #> [10507,]  202 #> [10508,]  202 #> [10509,]  202 #> [10510,]  203 #> [10511,]  202 #> [10512,]  202 #> [10513,]  202 #> [10514,]  202 #> [10515,]  202 #> [10516,]  202 #> [10517,]  202 #> [10518,]  203 #> [10519,]  202 #> [10520,]  202 #> [10521,]  202 #> [10522,]  202 #> [10523,]  202 #> [10524,]  202 #> [10525,]  203 #> [10526,]  202 #> [10527,]  202 #> [10528,]  202 #> [10529,]  202 #> [10530,]  202 #> [10531,]  202 #> [10532,]  202 #> [10533,]  202 #> [10534,]  202 #> [10535,]  202 #> [10536,]  202 #> [10537,]  202 #> [10538,]  202 #> [10539,]  203 #> [10540,]  202 #> [10541,]  202 #> [10542,]  202 #> [10543,]  203 #> [10544,]  202 #> [10545,]  203 #> [10546,]  202 #> [10547,]  202 #> [10548,]  202 #> [10549,]  202 #> [10550,]  202 #> [10551,]  202 #> [10552,]  202 #> [10553,]  202 #> [10554,]  202 #> [10555,]  202 #> [10556,]  202 #> [10557,]  202 #> [10558,]  202 #> [10559,]  202 #> [10560,]  202 #> [10561,]  202 #> [10562,]  202 #> [10563,]  202 #> [10564,]  202 #> [10565,]  202 #> [10566,]  202 #> [10567,]  202 #> [10568,]  202 #> [10569,]  202 #> [10570,]  202 #> [10571,]  202 #> [10572,]  202 #> [10573,]  203 #> [10574,]  203 #> [10575,]  203 #> [10576,]  203 #> [10577,]  203 #> [10578,]  202 #> [10579,]  202 #> [10580,]  202 #> [10581,]  202 #> [10582,]  202 #> [10583,]  202 #> [10584,]  202 #> [10585,]  202 #> [10586,]  202 #> [10587,]  202 #> [10588,]  202 #> [10589,]  202 #> [10590,]  202 #> [10591,]  202 #> [10592,]  202 #> [10593,]  202 #> [10594,]  202 #> [10595,]  202 #> [10596,]  202 #> [10597,]  202 #> [10598,]  202 #> [10599,]  202 #> [10600,]  202 #> [10601,]  204 #> [10602,]  204 #> [10603,]  204 #> [10604,]  205 #> [10605,]  204 #> [10606,]  204 #> [10607,]  204 #> [10608,]  204 #> [10609,]  204 #> [10610,]  204 #> [10611,]  204 #> [10612,]  205 #> [10613,]  204 #> [10614,]  205 #> [10615,]  204 #> [10616,]  204 #> [10617,]  204 #> [10618,]  204 #> [10619,]  205 #> [10620,]  204 #> [10621,]  204 #> [10622,]  204 #> [10623,]  204 #> [10624,]  204 #> [10625,]  204 #> [10626,]  204 #> [10627,]  205 #> [10628,]  204 #> [10629,]  204 #> [10630,]  204 #> [10631,]  204 #> [10632,]  204 #> [10633,]  204 #> [10634,]  204 #> [10635,]  204 #> [10636,]  204 #> [10637,]  204 #> [10638,]  204 #> [10639,]  204 #> [10640,]  204 #> [10641,]  205 #> [10642,]  204 #> [10643,]  204 #> [10644,]  204 #> [10645,]  204 #> [10646,]  204 #> [10647,]  204 #> [10648,]  205 #> [10649,]  204 #> [10650,]  204 #> [10651,]  204 #> [10652,]  204 #> [10653,]  204 #> [10654,]  204 #> [10655,]  204 #> [10656,]  204 #> [10657,]  204 #> [10658,]  204 #> [10659,]  204 #> [10660,]  204 #> [10661,]  205 #> [10662,]  204 #> [10663,]  204 #> [10664,]  204 #> [10665,]  204 #> [10666,]  204 #> [10667,]  204 #> [10668,]  204 #> [10669,]  205 #> [10670,]  204 #> [10671,]  204 #> [10672,]  204 #> [10673,]  204 #> [10674,]  204 #> [10675,]  204 #> [10676,]  204 #> [10677,]  204 #> [10678,]  204 #> [10679,]  204 #> [10680,]  204 #> [10681,]  204 #> [10682,]  205 #> [10683,]  204 #> [10684,]  204 #> [10685,]  204 #> [10686,]  204 #> [10687,]  204 #> [10688,]  204 #> [10689,]  204 #> [10690,]  204 #> [10691,]  204 #> [10692,]  205 #> [10693,]  205 #> [10694,]  204 #> [10695,]  204 #> [10696,]  205 #> [10697,]  205 #> [10698,]  204 #> [10699,]  204 #> [10700,]  204 #> [10701,]  207 #> [10702,]  207 #> [10703,]  206 #> [10704,]  207 #> [10705,]  207 #> [10706,]  207 #> [10707,]  207 #> [10708,]  207 #> [10709,]  207 #> [10710,]  206 #> [10711,]  206 #> [10712,]  207 #> [10713,]  207 #> [10714,]  206 #> [10715,]  207 #> [10716,]  207 #> [10717,]  207 #> [10718,]  207 #> [10719,]  207 #> [10720,]  207 #> [10721,]  207 #> [10722,]  207 #> [10723,]  207 #> [10724,]  207 #> [10725,]  207 #> [10726,]  207 #> [10727,]  207 #> [10728,]  207 #> [10729,]  207 #> [10730,]  207 #> [10731,]  207 #> [10732,]  206 #> [10733,]  207 #> [10734,]  207 #> [10735,]  207 #> [10736,]  207 #> [10737,]  207 #> [10738,]  207 #> [10739,]  207 #> [10740,]  206 #> [10741,]  207 #> [10742,]  207 #> [10743,]  207 #> [10744,]  207 #> [10745,]  207 #> [10746,]  207 #> [10747,]  207 #> [10748,]  206 #> [10749,]  207 #> [10750,]  207 #> [10751,]  207 #> [10752,]  207 #> [10753,]  207 #> [10754,]  207 #> [10755,]  207 #> [10756,]  207 #> [10757,]  207 #> [10758,]  207 #> [10759,]  207 #> [10760,]  207 #> [10761,]  207 #> [10762,]  207 #> [10763,]  207 #> [10764,]  207 #> [10765,]  207 #> [10766,]  207 #> [10767,]  207 #> [10768,]  207 #> [10769,]  207 #> [10770,]  206 #> [10771,]  207 #> [10772,]  207 #> [10773,]  207 #> [10774,]  207 #> [10775,]  207 #> [10776,]  207 #> [10777,]  207 #> [10778,]  207 #> [10779,]  207 #> [10780,]  207 #> [10781,]  207 #> [10782,]  207 #> [10783,]  207 #> [10784,]  207 #> [10785,]  207 #> [10786,]  207 #> [10787,]  207 #> [10788,]  207 #> [10789,]  207 #> [10790,]  207 #> [10791,]  207 #> [10792,]  207 #> [10793,]  207 #> [10794,]  207 #> [10795,]  207 #> [10796,]  207 #> [10797,]  207 #> [10798,]  207 #> [10799,]  207 #> [10800,]  207 #> [10801,]  208 #> [10802,]  208 #> [10803,]  208 #> [10804,]  209 #> [10805,]  208 #> [10806,]  208 #> [10807,]  208 #> [10808,]  208 #> [10809,]  209 #> [10810,]  208 #> [10811,]  209 #> [10812,]  209 #> [10813,]  208 #> [10814,]  209 #> [10815,]  209 #> [10816,]  208 #> [10817,]  208 #> [10818,]  209 #> [10819,]  209 #> [10820,]  208 #> [10821,]  209 #> [10822,]  208 #> [10823,]  208 #> [10824,]  208 #> [10825,]  208 #> [10826,]  209 #> [10827,]  209 #> [10828,]  208 #> [10829,]  208 #> [10830,]  208 #> [10831,]  209 #> [10832,]  208 #> [10833,]  209 #> [10834,]  208 #> [10835,]  208 #> [10836,]  209 #> [10837,]  208 #> [10838,]  209 #> [10839,]  208 #> [10840,]  208 #> [10841,]  209 #> [10842,]  209 #> [10843,]  208 #> [10844,]  208 #> [10845,]  208 #> [10846,]  208 #> [10847,]  208 #> [10848,]  209 #> [10849,]  208 #> [10850,]  208 #> [10851,]  208 #> [10852,]  208 #> [10853,]  208 #> [10854,]  208 #> [10855,]  208 #> [10856,]  208 #> [10857,]  208 #> [10858,]  209 #> [10859,]  208 #> [10860,]  208 #> [10861,]  209 #> [10862,]  208 #> [10863,]  208 #> [10864,]  208 #> [10865,]  208 #> [10866,]  208 #> [10867,]  208 #> [10868,]  209 #> [10869,]  209 #> [10870,]  208 #> [10871,]  208 #> [10872,]  208 #> [10873,]  208 #> [10874,]  209 #> [10875,]  209 #> [10876,]  208 #> [10877,]  208 #> [10878,]  208 #> [10879,]  208 #> [10880,]  208 #> [10881,]  208 #> [10882,]  209 #> [10883,]  208 #> [10884,]  208 #> [10885,]  209 #> [10886,]  208 #> [10887,]  208 #> [10888,]  208 #> [10889,]  208 #> [10890,]  208 #> [10891,]  208 #> [10892,]  209 #> [10893,]  209 #> [10894,]  208 #> [10895,]  208 #> [10896,]  209 #> [10897,]  209 #> [10898,]  208 #> [10899,]  208 #> [10900,]  208 #> [10901,]  210 #> [10902,]  211 #> [10903,]  211 #> [10904,]  210 #> [10905,]  211 #> [10906,]  211 #> [10907,]  211 #> [10908,]  210 #> [10909,]  210 #> [10910,]  211 #> [10911,]  210 #> [10912,]  211 #> [10913,]  210 #> [10914,]  210 #> [10915,]  210 #> [10916,]  210 #> [10917,]  210 #> [10918,]  211 #> [10919,]  211 #> [10920,]  211 #> [10921,]  210 #> [10922,]  210 #> [10923,]  211 #> [10924,]  211 #> [10925,]  211 #> [10926,]  211 #> [10927,]  210 #> [10928,]  211 #> [10929,]  211 #> [10930,]  210 #> [10931,]  211 #> [10932,]  211 #> [10933,]  211 #> [10934,]  211 #> [10935,]  210 #> [10936,]  211 #> [10937,]  211 #> [10938,]  211 #> [10939,]  211 #> [10940,]  211 #> [10941,]  210 #> [10942,]  211 #> [10943,]  210 #> [10944,]  210 #> [10945,]  210 #> [10946,]  210 #> [10947,]  211 #> [10948,]  211 #> [10949,]  210 #> [10950,]  211 #> [10951,]  211 #> [10952,]  210 #> [10953,]  211 #> [10954,]  210 #> [10955,]  210 #> [10956,]  211 #> [10957,]  211 #> [10958,]  210 #> [10959,]  211 #> [10960,]  211 #> [10961,]  211 #> [10962,]  210 #> [10963,]  211 #> [10964,]  211 #> [10965,]  211 #> [10966,]  210 #> [10967,]  210 #> [10968,]  210 #> [10969,]  210 #> [10970,]  211 #> [10971,]  211 #> [10972,]  211 #> [10973,]  211 #> [10974,]  210 #> [10975,]  211 #> [10976,]  211 #> [10977,]  211 #> [10978,]  211 #> [10979,]  210 #> [10980,]  210 #> [10981,]  210 #> [10982,]  210 #> [10983,]  210 #> [10984,]  211 #> [10985,]  210 #> [10986,]  211 #> [10987,]  210 #> [10988,]  210 #> [10989,]  210 #> [10990,]  210 #> [10991,]  210 #> [10992,]  210 #> [10993,]  211 #> [10994,]  211 #> [10995,]  210 #> [10996,]  210 #> [10997,]  211 #> [10998,]  211 #> [10999,]  210 #> [11000,]  211 #> [11001,]  213 #> [11002,]  213 #> [11003,]  212 #> [11004,]  213 #> [11005,]  213 #> [11006,]  212 #> [11007,]  212 #> [11008,]  213 #> [11009,]  213 #> [11010,]  213 #> [11011,]  213 #> [11012,]  213 #> [11013,]  213 #> [11014,]  213 #> [11015,]  213 #> [11016,]  213 #> [11017,]  213 #> [11018,]  213 #> [11019,]  213 #> [11020,]  212 #> [11021,]  212 #> [11022,]  213 #> [11023,]  212 #> [11024,]  213 #> [11025,]  212 #> [11026,]  213 #> [11027,]  213 #> [11028,]  213 #> [11029,]  213 #> [11030,]  213 #> [11031,]  213 #> [11032,]  213 #> [11033,]  213 #> [11034,]  212 #> [11035,]  212 #> [11036,]  213 #> [11037,]  212 #> [11038,]  213 #> [11039,]  213 #> [11040,]  213 #> [11041,]  213 #> [11042,]  212 #> [11043,]  213 #> [11044,]  212 #> [11045,]  213 #> [11046,]  213 #> [11047,]  213 #> [11048,]  213 #> [11049,]  213 #> [11050,]  213 #> [11051,]  213 #> [11052,]  213 #> [11053,]  212 #> [11054,]  213 #> [11055,]  213 #> [11056,]  212 #> [11057,]  212 #> [11058,]  213 #> [11059,]  213 #> [11060,]  213 #> [11061,]  213 #> [11062,]  213 #> [11063,]  213 #> [11064,]  213 #> [11065,]  212 #> [11066,]  213 #> [11067,]  213 #> [11068,]  213 #> [11069,]  213 #> [11070,]  213 #> [11071,]  213 #> [11072,]  213 #> [11073,]  212 #> [11074,]  212 #> [11075,]  213 #> [11076,]  213 #> [11077,]  213 #> [11078,]  213 #> [11079,]  213 #> [11080,]  212 #> [11081,]  213 #> [11082,]  212 #> [11083,]  213 #> [11084,]  212 #> [11085,]  212 #> [11086,]  212 #> [11087,]  213 #> [11088,]  213 #> [11089,]  212 #> [11090,]  213 #> [11091,]  213 #> [11092,]  213 #> [11093,]  213 #> [11094,]  212 #> [11095,]  213 #> [11096,]  213 #> [11097,]  213 #> [11098,]  212 #> [11099,]  212 #> [11100,]  213 #> [11101,]  214 #> [11102,]  214 #> [11103,]  214 #> [11104,]  215 #> [11105,]  214 #> [11106,]  214 #> [11107,]  214 #> [11108,]  214 #> [11109,]  215 #> [11110,]  214 #> [11111,]  215 #> [11112,]  215 #> [11113,]  214 #> [11114,]  215 #> [11115,]  215 #> [11116,]  214 #> [11117,]  214 #> [11118,]  215 #> [11119,]  215 #> [11120,]  214 #> [11121,]  215 #> [11122,]  214 #> [11123,]  214 #> [11124,]  214 #> [11125,]  214 #> [11126,]  215 #> [11127,]  215 #> [11128,]  214 #> [11129,]  214 #> [11130,]  214 #> [11131,]  215 #> [11132,]  214 #> [11133,]  215 #> [11134,]  214 #> [11135,]  214 #> [11136,]  215 #> [11137,]  214 #> [11138,]  215 #> [11139,]  214 #> [11140,]  214 #> [11141,]  215 #> [11142,]  215 #> [11143,]  214 #> [11144,]  214 #> [11145,]  214 #> [11146,]  214 #> [11147,]  214 #> [11148,]  215 #> [11149,]  214 #> [11150,]  214 #> [11151,]  214 #> [11152,]  214 #> [11153,]  214 #> [11154,]  214 #> [11155,]  214 #> [11156,]  214 #> [11157,]  214 #> [11158,]  215 #> [11159,]  214 #> [11160,]  214 #> [11161,]  215 #> [11162,]  214 #> [11163,]  214 #> [11164,]  214 #> [11165,]  214 #> [11166,]  214 #> [11167,]  214 #> [11168,]  215 #> [11169,]  215 #> [11170,]  214 #> [11171,]  214 #> [11172,]  214 #> [11173,]  214 #> [11174,]  215 #> [11175,]  215 #> [11176,]  214 #> [11177,]  214 #> [11178,]  214 #> [11179,]  214 #> [11180,]  214 #> [11181,]  214 #> [11182,]  215 #> [11183,]  214 #> [11184,]  214 #> [11185,]  215 #> [11186,]  214 #> [11187,]  214 #> [11188,]  214 #> [11189,]  214 #> [11190,]  214 #> [11191,]  214 #> [11192,]  215 #> [11193,]  215 #> [11194,]  214 #> [11195,]  214 #> [11196,]  215 #> [11197,]  215 #> [11198,]  214 #> [11199,]  214 #> [11200,]  214 #> [11201,]  216 #> [11202,]  217 #> [11203,]  217 #> [11204,]  216 #> [11205,]  217 #> [11206,]  217 #> [11207,]  217 #> [11208,]  216 #> [11209,]  216 #> [11210,]  217 #> [11211,]  216 #> [11212,]  217 #> [11213,]  216 #> [11214,]  217 #> [11215,]  217 #> [11216,]  217 #> [11217,]  216 #> [11218,]  217 #> [11219,]  217 #> [11220,]  217 #> [11221,]  216 #> [11222,]  216 #> [11223,]  217 #> [11224,]  217 #> [11225,]  217 #> [11226,]  217 #> [11227,]  216 #> [11228,]  217 #> [11229,]  217 #> [11230,]  216 #> [11231,]  217 #> [11232,]  217 #> [11233,]  217 #> [11234,]  217 #> [11235,]  216 #> [11236,]  217 #> [11237,]  217 #> [11238,]  217 #> [11239,]  217 #> [11240,]  217 #> [11241,]  217 #> [11242,]  217 #> [11243,]  216 #> [11244,]  216 #> [11245,]  216 #> [11246,]  216 #> [11247,]  217 #> [11248,]  217 #> [11249,]  216 #> [11250,]  217 #> [11251,]  217 #> [11252,]  216 #> [11253,]  217 #> [11254,]  216 #> [11255,]  216 #> [11256,]  217 #> [11257,]  217 #> [11258,]  216 #> [11259,]  217 #> [11260,]  217 #> [11261,]  217 #> [11262,]  217 #> [11263,]  217 #> [11264,]  217 #> [11265,]  217 #> [11266,]  216 #> [11267,]  217 #> [11268,]  216 #> [11269,]  216 #> [11270,]  217 #> [11271,]  217 #> [11272,]  217 #> [11273,]  217 #> [11274,]  217 #> [11275,]  217 #> [11276,]  217 #> [11277,]  217 #> [11278,]  217 #> [11279,]  216 #> [11280,]  216 #> [11281,]  216 #> [11282,]  216 #> [11283,]  216 #> [11284,]  217 #> [11285,]  217 #> [11286,]  217 #> [11287,]  216 #> [11288,]  216 #> [11289,]  216 #> [11290,]  216 #> [11291,]  216 #> [11292,]  216 #> [11293,]  217 #> [11294,]  217 #> [11295,]  216 #> [11296,]  216 #> [11297,]  217 #> [11298,]  217 #> [11299,]  216 #> [11300,]  217 #> [11301,]  219 #> [11302,]  218 #> [11303,]  219 #> [11304,]  219 #> [11305,]  219 #> [11306,]  218 #> [11307,]  219 #> [11308,]  219 #> [11309,]  219 #> [11310,]  219 #> [11311,]  218 #> [11312,]  218 #> [11313,]  219 #> [11314,]  219 #> [11315,]  218 #> [11316,]  219 #> [11317,]  218 #> [11318,]  219 #> [11319,]  219 #> [11320,]  219 #> [11321,]  219 #> [11322,]  219 #> [11323,]  218 #> [11324,]  219 #> [11325,]  219 #> [11326,]  219 #> [11327,]  219 #> [11328,]  219 #> [11329,]  218 #> [11330,]  219 #> [11331,]  218 #> [11332,]  219 #> [11333,]  219 #> [11334,]  218 #> [11335,]  219 #> [11336,]  219 #> [11337,]  218 #> [11338,]  219 #> [11339,]  219 #> [11340,]  219 #> [11341,]  219 #> [11342,]  218 #> [11343,]  218 #> [11344,]  218 #> [11345,]  219 #> [11346,]  219 #> [11347,]  218 #> [11348,]  218 #> [11349,]  219 #> [11350,]  219 #> [11351,]  219 #> [11352,]  219 #> [11353,]  219 #> [11354,]  219 #> [11355,]  219 #> [11356,]  218 #> [11357,]  219 #> [11358,]  219 #> [11359,]  219 #> [11360,]  219 #> [11361,]  218 #> [11362,]  219 #> [11363,]  218 #> [11364,]  218 #> [11365,]  218 #> [11366,]  219 #> [11367,]  219 #> [11368,]  219 #> [11369,]  219 #> [11370,]  218 #> [11371,]  219 #> [11372,]  219 #> [11373,]  219 #> [11374,]  219 #> [11375,]  218 #> [11376,]  219 #> [11377,]  219 #> [11378,]  218 #> [11379,]  218 #> [11380,]  219 #> [11381,]  218 #> [11382,]  219 #> [11383,]  219 #> [11384,]  219 #> [11385,]  219 #> [11386,]  219 #> [11387,]  219 #> [11388,]  219 #> [11389,]  219 #> [11390,]  219 #> [11391,]  219 #> [11392,]  218 #> [11393,]  219 #> [11394,]  218 #> [11395,]  218 #> [11396,]  219 #> [11397,]  219 #> [11398,]  219 #> [11399,]  219 #> [11400,]  218 #> [11401,]  221 #> [11402,]  221 #> [11403,]  221 #> [11404,]  221 #> [11405,]  221 #> [11406,]  220 #> [11407,]  221 #> [11408,]  221 #> [11409,]  221 #> [11410,]  221 #> [11411,]  221 #> [11412,]  221 #> [11413,]  221 #> [11414,]  221 #> [11415,]  221 #> [11416,]  221 #> [11417,]  221 #> [11418,]  221 #> [11419,]  220 #> [11420,]  221 #> [11421,]  221 #> [11422,]  221 #> [11423,]  221 #> [11424,]  221 #> [11425,]  221 #> [11426,]  221 #> [11427,]  221 #> [11428,]  221 #> [11429,]  221 #> [11430,]  221 #> [11431,]  221 #> [11432,]  221 #> [11433,]  221 #> [11434,]  220 #> [11435,]  221 #> [11436,]  221 #> [11437,]  221 #> [11438,]  220 #> [11439,]  221 #> [11440,]  221 #> [11441,]  221 #> [11442,]  221 #> [11443,]  221 #> [11444,]  221 #> [11445,]  221 #> [11446,]  221 #> [11447,]  221 #> [11448,]  221 #> [11449,]  220 #> [11450,]  221 #> [11451,]  221 #> [11452,]  221 #> [11453,]  221 #> [11454,]  221 #> [11455,]  221 #> [11456,]  221 #> [11457,]  221 #> [11458,]  221 #> [11459,]  221 #> [11460,]  221 #> [11461,]  221 #> [11462,]  221 #> [11463,]  221 #> [11464,]  221 #> [11465,]  221 #> [11466,]  221 #> [11467,]  221 #> [11468,]  221 #> [11469,]  221 #> [11470,]  221 #> [11471,]  221 #> [11472,]  220 #> [11473,]  221 #> [11474,]  221 #> [11475,]  221 #> [11476,]  221 #> [11477,]  221 #> [11478,]  221 #> [11479,]  221 #> [11480,]  221 #> [11481,]  221 #> [11482,]  221 #> [11483,]  221 #> [11484,]  221 #> [11485,]  221 #> [11486,]  221 #> [11487,]  221 #> [11488,]  221 #> [11489,]  221 #> [11490,]  221 #> [11491,]  221 #> [11492,]  221 #> [11493,]  221 #> [11494,]  221 #> [11495,]  221 #> [11496,]  221 #> [11497,]  221 #> [11498,]  221 #> [11499,]  221 #> [11500,]  221 #> [11501,]  223 #> [11502,]  222 #> [11503,]  222 #> [11504,]  222 #> [11505,]  223 #> [11506,]  222 #> [11507,]  222 #> [11508,]  222 #> [11509,]  223 #> [11510,]  222 #> [11511,]  223 #> [11512,]  222 #> [11513,]  223 #> [11514,]  222 #> [11515,]  222 #> [11516,]  222 #> [11517,]  223 #> [11518,]  223 #> [11519,]  222 #> [11520,]  223 #> [11521,]  223 #> [11522,]  222 #> [11523,]  222 #> [11524,]  222 #> [11525,]  222 #> [11526,]  222 #> [11527,]  223 #> [11528,]  223 #> [11529,]  223 #> [11530,]  222 #> [11531,]  222 #> [11532,]  222 #> [11533,]  223 #> [11534,]  222 #> [11535,]  222 #> [11536,]  223 #> [11537,]  222 #> [11538,]  223 #> [11539,]  223 #> [11540,]  222 #> [11541,]  223 #> [11542,]  223 #> [11543,]  222 #> [11544,]  222 #> [11545,]  222 #> [11546,]  222 #> [11547,]  222 #> [11548,]  222 #> [11549,]  222 #> [11550,]  222 #> [11551,]  223 #> [11552,]  222 #> [11553,]  223 #> [11554,]  223 #> [11555,]  222 #> [11556,]  223 #> [11557,]  222 #> [11558,]  223 #> [11559,]  222 #> [11560,]  222 #> [11561,]  223 #> [11562,]  223 #> [11563,]  222 #> [11564,]  222 #> [11565,]  223 #> [11566,]  223 #> [11567,]  222 #> [11568,]  222 #> [11569,]  222 #> [11570,]  223 #> [11571,]  222 #> [11572,]  222 #> [11573,]  222 #> [11574,]  222 #> [11575,]  222 #> [11576,]  222 #> [11577,]  223 #> [11578,]  222 #> [11579,]  223 #> [11580,]  222 #> [11581,]  222 #> [11582,]  223 #> [11583,]  223 #> [11584,]  223 #> [11585,]  223 #> [11586,]  222 #> [11587,]  223 #> [11588,]  222 #> [11589,]  223 #> [11590,]  223 #> [11591,]  223 #> [11592,]  222 #> [11593,]  223 #> [11594,]  223 #> [11595,]  222 #> [11596,]  222 #> [11597,]  222 #> [11598,]  222 #> [11599,]  222 #> [11600,]  222 #> [11601,]  225 #> [11602,]  225 #> [11603,]  224 #> [11604,]  225 #> [11605,]  225 #> [11606,]  225 #> [11607,]  225 #> [11608,]  225 #> [11609,]  225 #> [11610,]  225 #> [11611,]  225 #> [11612,]  224 #> [11613,]  225 #> [11614,]  224 #> [11615,]  225 #> [11616,]  225 #> [11617,]  225 #> [11618,]  225 #> [11619,]  225 #> [11620,]  225 #> [11621,]  225 #> [11622,]  225 #> [11623,]  225 #> [11624,]  225 #> [11625,]  225 #> [11626,]  224 #> [11627,]  225 #> [11628,]  225 #> [11629,]  225 #> [11630,]  225 #> [11631,]  225 #> [11632,]  224 #> [11633,]  225 #> [11634,]  225 #> [11635,]  225 #> [11636,]  225 #> [11637,]  225 #> [11638,]  225 #> [11639,]  225 #> [11640,]  225 #> [11641,]  225 #> [11642,]  224 #> [11643,]  225 #> [11644,]  225 #> [11645,]  225 #> [11646,]  225 #> [11647,]  225 #> [11648,]  224 #> [11649,]  225 #> [11650,]  225 #> [11651,]  224 #> [11652,]  225 #> [11653,]  225 #> [11654,]  224 #> [11655,]  225 #> [11656,]  225 #> [11657,]  225 #> [11658,]  225 #> [11659,]  225 #> [11660,]  225 #> [11661,]  225 #> [11662,]  224 #> [11663,]  225 #> [11664,]  225 #> [11665,]  225 #> [11666,]  224 #> [11667,]  225 #> [11668,]  225 #> [11669,]  224 #> [11670,]  225 #> [11671,]  225 #> [11672,]  225 #> [11673,]  225 #> [11674,]  225 #> [11675,]  225 #> [11676,]  225 #> [11677,]  225 #> [11678,]  225 #> [11679,]  225 #> [11680,]  224 #> [11681,]  224 #> [11682,]  225 #> [11683,]  225 #> [11684,]  225 #> [11685,]  225 #> [11686,]  225 #> [11687,]  225 #> [11688,]  225 #> [11689,]  224 #> [11690,]  225 #> [11691,]  225 #> [11692,]  225 #> [11693,]  225 #> [11694,]  225 #> [11695,]  225 #> [11696,]  225 #> [11697,]  225 #> [11698,]  225 #> [11699,]  225 #> [11700,]  225 #> [11701,]  227 #> [11702,]  226 #> [11703,]  226 #> [11704,]  227 #> [11705,]  227 #> [11706,]  226 #> [11707,]  226 #> [11708,]  226 #> [11709,]  226 #> [11710,]  227 #> [11711,]  227 #> [11712,]  227 #> [11713,]  227 #> [11714,]  227 #> [11715,]  227 #> [11716,]  227 #> [11717,]  227 #> [11718,]  227 #> [11719,]  227 #> [11720,]  226 #> [11721,]  226 #> [11722,]  227 #> [11723,]  226 #> [11724,]  227 #> [11725,]  226 #> [11726,]  227 #> [11727,]  227 #> [11728,]  227 #> [11729,]  226 #> [11730,]  226 #> [11731,]  227 #> [11732,]  227 #> [11733,]  227 #> [11734,]  226 #> [11735,]  226 #> [11736,]  226 #> [11737,]  226 #> [11738,]  227 #> [11739,]  227 #> [11740,]  226 #> [11741,]  226 #> [11742,]  226 #> [11743,]  227 #> [11744,]  226 #> [11745,]  226 #> [11746,]  227 #> [11747,]  227 #> [11748,]  227 #> [11749,]  226 #> [11750,]  226 #> [11751,]  227 #> [11752,]  227 #> [11753,]  226 #> [11754,]  226 #> [11755,]  226 #> [11756,]  226 #> [11757,]  226 #> [11758,]  227 #> [11759,]  227 #> [11760,]  226 #> [11761,]  227 #> [11762,]  226 #> [11763,]  227 #> [11764,]  226 #> [11765,]  226 #> [11766,]  227 #> [11767,]  226 #> [11768,]  227 #> [11769,]  227 #> [11770,]  227 #> [11771,]  227 #> [11772,]  226 #> [11773,]  226 #> [11774,]  226 #> [11775,]  227 #> [11776,]  226 #> [11777,]  227 #> [11778,]  227 #> [11779,]  227 #> [11780,]  226 #> [11781,]  226 #> [11782,]  226 #> [11783,]  227 #> [11784,]  226 #> [11785,]  226 #> [11786,]  226 #> [11787,]  227 #> [11788,]  226 #> [11789,]  226 #> [11790,]  227 #> [11791,]  227 #> [11792,]  227 #> [11793,]  227 #> [11794,]  226 #> [11795,]  227 #> [11796,]  227 #> [11797,]  226 #> [11798,]  226 #> [11799,]  226 #> [11800,]  227 #> [11801,]  229 #> [11802,]  229 #> [11803,]  228 #> [11804,]  229 #> [11805,]  229 #> [11806,]  228 #> [11807,]  228 #> [11808,]  229 #> [11809,]  229 #> [11810,]  229 #> [11811,]  229 #> [11812,]  229 #> [11813,]  229 #> [11814,]  229 #> [11815,]  229 #> [11816,]  229 #> [11817,]  229 #> [11818,]  229 #> [11819,]  229 #> [11820,]  228 #> [11821,]  228 #> [11822,]  229 #> [11823,]  228 #> [11824,]  229 #> [11825,]  228 #> [11826,]  229 #> [11827,]  229 #> [11828,]  229 #> [11829,]  229 #> [11830,]  229 #> [11831,]  229 #> [11832,]  229 #> [11833,]  229 #> [11834,]  228 #> [11835,]  228 #> [11836,]  229 #> [11837,]  228 #> [11838,]  229 #> [11839,]  229 #> [11840,]  229 #> [11841,]  229 #> [11842,]  228 #> [11843,]  229 #> [11844,]  228 #> [11845,]  229 #> [11846,]  229 #> [11847,]  229 #> [11848,]  229 #> [11849,]  229 #> [11850,]  229 #> [11851,]  229 #> [11852,]  229 #> [11853,]  228 #> [11854,]  228 #> [11855,]  228 #> [11856,]  228 #> [11857,]  228 #> [11858,]  229 #> [11859,]  229 #> [11860,]  229 #> [11861,]  229 #> [11862,]  229 #> [11863,]  229 #> [11864,]  228 #> [11865,]  228 #> [11866,]  229 #> [11867,]  229 #> [11868,]  229 #> [11869,]  229 #> [11870,]  229 #> [11871,]  229 #> [11872,]  229 #> [11873,]  228 #> [11874,]  228 #> [11875,]  229 #> [11876,]  229 #> [11877,]  229 #> [11878,]  229 #> [11879,]  229 #> [11880,]  228 #> [11881,]  229 #> [11882,]  228 #> [11883,]  229 #> [11884,]  228 #> [11885,]  228 #> [11886,]  228 #> [11887,]  229 #> [11888,]  228 #> [11889,]  228 #> [11890,]  229 #> [11891,]  229 #> [11892,]  229 #> [11893,]  229 #> [11894,]  228 #> [11895,]  229 #> [11896,]  229 #> [11897,]  229 #> [11898,]  228 #> [11899,]  228 #> [11900,]  229 #> [11901,]  231 #> [11902,]  231 #> [11903,]  230 #> [11904,]  231 #> [11905,]  231 #> [11906,]  231 #> [11907,]  230 #> [11908,]  231 #> [11909,]  231 #> [11910,]  231 #> [11911,]  231 #> [11912,]  230 #> [11913,]  231 #> [11914,]  231 #> [11915,]  231 #> [11916,]  231 #> [11917,]  231 #> [11918,]  231 #> [11919,]  231 #> [11920,]  231 #> [11921,]  231 #> [11922,]  231 #> [11923,]  231 #> [11924,]  231 #> [11925,]  231 #> [11926,]  231 #> [11927,]  231 #> [11928,]  231 #> [11929,]  231 #> [11930,]  231 #> [11931,]  230 #> [11932,]  231 #> [11933,]  231 #> [11934,]  231 #> [11935,]  231 #> [11936,]  231 #> [11937,]  231 #> [11938,]  231 #> [11939,]  231 #> [11940,]  231 #> [11941,]  231 #> [11942,]  231 #> [11943,]  231 #> [11944,]  231 #> [11945,]  231 #> [11946,]  231 #> [11947,]  231 #> [11948,]  231 #> [11949,]  231 #> [11950,]  231 #> [11951,]  231 #> [11952,]  230 #> [11953,]  231 #> [11954,]  231 #> [11955,]  231 #> [11956,]  231 #> [11957,]  231 #> [11958,]  231 #> [11959,]  230 #> [11960,]  230 #> [11961,]  231 #> [11962,]  231 #> [11963,]  231 #> [11964,]  231 #> [11965,]  231 #> [11966,]  231 #> [11967,]  231 #> [11968,]  231 #> [11969,]  231 #> [11970,]  231 #> [11971,]  231 #> [11972,]  231 #> [11973,]  231 #> [11974,]  231 #> [11975,]  231 #> [11976,]  231 #> [11977,]  231 #> [11978,]  231 #> [11979,]  231 #> [11980,]  231 #> [11981,]  231 #> [11982,]  231 #> [11983,]  231 #> [11984,]  231 #> [11985,]  231 #> [11986,]  231 #> [11987,]  231 #> [11988,]  231 #> [11989,]  231 #> [11990,]  231 #> [11991,]  231 #> [11992,]  231 #> [11993,]  231 #> [11994,]  231 #> [11995,]  231 #> [11996,]  231 #> [11997,]  230 #> [11998,]  231 #> [11999,]  231 #> [12000,]  231 #> [12001,]  232 #> [12002,]  233 #> [12003,]  232 #> [12004,]  232 #> [12005,]  233 #> [12006,]  232 #> [12007,]  233 #> [12008,]  232 #> [12009,]  233 #> [12010,]  233 #> [12011,]  232 #> [12012,]  233 #> [12013,]  233 #> [12014,]  232 #> [12015,]  233 #> [12016,]  232 #> [12017,]  233 #> [12018,]  233 #> [12019,]  232 #> [12020,]  233 #> [12021,]  233 #> [12022,]  233 #> [12023,]  233 #> [12024,]  233 #> [12025,]  233 #> [12026,]  232 #> [12027,]  233 #> [12028,]  232 #> [12029,]  233 #> [12030,]  233 #> [12031,]  233 #> [12032,]  233 #> [12033,]  233 #> [12034,]  232 #> [12035,]  232 #> [12036,]  233 #> [12037,]  232 #> [12038,]  232 #> [12039,]  233 #> [12040,]  233 #> [12041,]  233 #> [12042,]  232 #> [12043,]  233 #> [12044,]  233 #> [12045,]  232 #> [12046,]  233 #> [12047,]  233 #> [12048,]  233 #> [12049,]  232 #> [12050,]  233 #> [12051,]  233 #> [12052,]  232 #> [12053,]  233 #> [12054,]  233 #> [12055,]  233 #> [12056,]  232 #> [12057,]  233 #> [12058,]  233 #> [12059,]  232 #> [12060,]  233 #> [12061,]  233 #> [12062,]  232 #> [12063,]  233 #> [12064,]  232 #> [12065,]  232 #> [12066,]  233 #> [12067,]  233 #> [12068,]  232 #> [12069,]  232 #> [12070,]  233 #> [12071,]  233 #> [12072,]  232 #> [12073,]  232 #> [12074,]  233 #> [12075,]  233 #> [12076,]  233 #> [12077,]  232 #> [12078,]  233 #> [12079,]  232 #> [12080,]  233 #> [12081,]  233 #> [12082,]  233 #> [12083,]  233 #> [12084,]  233 #> [12085,]  233 #> [12086,]  233 #> [12087,]  233 #> [12088,]  233 #> [12089,]  232 #> [12090,]  233 #> [12091,]  232 #> [12092,]  233 #> [12093,]  233 #> [12094,]  232 #> [12095,]  233 #> [12096,]  232 #> [12097,]  232 #> [12098,]  233 #> [12099,]  233 #> [12100,]  232 #> [12101,]  235 #> [12102,]  235 #> [12103,]  235 #> [12104,]  234 #> [12105,]  235 #> [12106,]  235 #> [12107,]  235 #> [12108,]  235 #> [12109,]  234 #> [12110,]  235 #> [12111,]  235 #> [12112,]  235 #> [12113,]  235 #> [12114,]  235 #> [12115,]  235 #> [12116,]  235 #> [12117,]  234 #> [12118,]  235 #> [12119,]  235 #> [12120,]  235 #> [12121,]  235 #> [12122,]  235 #> [12123,]  235 #> [12124,]  235 #> [12125,]  235 #> [12126,]  235 #> [12127,]  235 #> [12128,]  235 #> [12129,]  235 #> [12130,]  235 #> [12131,]  235 #> [12132,]  235 #> [12133,]  235 #> [12134,]  235 #> [12135,]  235 #> [12136,]  235 #> [12137,]  235 #> [12138,]  235 #> [12139,]  235 #> [12140,]  235 #> [12141,]  235 #> [12142,]  235 #> [12143,]  235 #> [12144,]  235 #> [12145,]  235 #> [12146,]  235 #> [12147,]  235 #> [12148,]  235 #> [12149,]  235 #> [12150,]  235 #> [12151,]  235 #> [12152,]  234 #> [12153,]  235 #> [12154,]  235 #> [12155,]  235 #> [12156,]  235 #> [12157,]  235 #> [12158,]  235 #> [12159,]  235 #> [12160,]  235 #> [12161,]  235 #> [12162,]  235 #> [12163,]  235 #> [12164,]  235 #> [12165,]  235 #> [12166,]  235 #> [12167,]  235 #> [12168,]  235 #> [12169,]  235 #> [12170,]  235 #> [12171,]  235 #> [12172,]  235 #> [12173,]  235 #> [12174,]  235 #> [12175,]  235 #> [12176,]  235 #> [12177,]  235 #> [12178,]  235 #> [12179,]  235 #> [12180,]  235 #> [12181,]  234 #> [12182,]  234 #> [12183,]  235 #> [12184,]  235 #> [12185,]  235 #> [12186,]  235 #> [12187,]  235 #> [12188,]  235 #> [12189,]  235 #> [12190,]  235 #> [12191,]  235 #> [12192,]  235 #> [12193,]  235 #> [12194,]  235 #> [12195,]  234 #> [12196,]  235 #> [12197,]  235 #> [12198,]  235 #> [12199,]  235 #> [12200,]  235 #> [12201,]  237 #> [12202,]  237 #> [12203,]  236 #> [12204,]  236 #> [12205,]  237 #> [12206,]  237 #> [12207,]  236 #> [12208,]  236 #> [12209,]  237 #> [12210,]  237 #> [12211,]  237 #> [12212,]  236 #> [12213,]  237 #> [12214,]  237 #> [12215,]  237 #> [12216,]  237 #> [12217,]  237 #> [12218,]  237 #> [12219,]  237 #> [12220,]  237 #> [12221,]  237 #> [12222,]  237 #> [12223,]  236 #> [12224,]  237 #> [12225,]  236 #> [12226,]  237 #> [12227,]  237 #> [12228,]  237 #> [12229,]  237 #> [12230,]  237 #> [12231,]  236 #> [12232,]  236 #> [12233,]  237 #> [12234,]  237 #> [12235,]  237 #> [12236,]  237 #> [12237,]  236 #> [12238,]  237 #> [12239,]  237 #> [12240,]  236 #> [12241,]  237 #> [12242,]  237 #> [12243,]  237 #> [12244,]  237 #> [12245,]  237 #> [12246,]  236 #> [12247,]  236 #> [12248,]  237 #> [12249,]  237 #> [12250,]  237 #> [12251,]  237 #> [12252,]  236 #> [12253,]  237 #> [12254,]  237 #> [12255,]  236 #> [12256,]  237 #> [12257,]  236 #> [12258,]  237 #> [12259,]  236 #> [12260,]  236 #> [12261,]  237 #> [12262,]  237 #> [12263,]  237 #> [12264,]  237 #> [12265,]  237 #> [12266,]  237 #> [12267,]  237 #> [12268,]  236 #> [12269,]  237 #> [12270,]  237 #> [12271,]  237 #> [12272,]  236 #> [12273,]  237 #> [12274,]  236 #> [12275,]  237 #> [12276,]  236 #> [12277,]  237 #> [12278,]  236 #> [12279,]  237 #> [12280,]  236 #> [12281,]  237 #> [12282,]  237 #> [12283,]  237 #> [12284,]  237 #> [12285,]  237 #> [12286,]  236 #> [12287,]  237 #> [12288,]  237 #> [12289,]  237 #> [12290,]  237 #> [12291,]  237 #> [12292,]  236 #> [12293,]  237 #> [12294,]  237 #> [12295,]  237 #> [12296,]  236 #> [12297,]  236 #> [12298,]  236 #> [12299,]  237 #> [12300,]  237 #> [12301,]  238 #> [12302,]  239 #> [12303,]  239 #> [12304,]  238 #> [12305,]  238 #> [12306,]  239 #> [12307,]  239 #> [12308,]  238 #> [12309,]  238 #> [12310,]  239 #> [12311,]  238 #> [12312,]  239 #> [12313,]  238 #> [12314,]  238 #> [12315,]  238 #> [12316,]  238 #> [12317,]  238 #> [12318,]  239 #> [12319,]  239 #> [12320,]  239 #> [12321,]  238 #> [12322,]  238 #> [12323,]  239 #> [12324,]  238 #> [12325,]  239 #> [12326,]  238 #> [12327,]  238 #> [12328,]  239 #> [12329,]  239 #> [12330,]  238 #> [12331,]  239 #> [12332,]  239 #> [12333,]  239 #> [12334,]  239 #> [12335,]  238 #> [12336,]  238 #> [12337,]  238 #> [12338,]  238 #> [12339,]  239 #> [12340,]  239 #> [12341,]  238 #> [12342,]  239 #> [12343,]  238 #> [12344,]  238 #> [12345,]  238 #> [12346,]  238 #> [12347,]  239 #> [12348,]  239 #> [12349,]  238 #> [12350,]  239 #> [12351,]  238 #> [12352,]  238 #> [12353,]  239 #> [12354,]  238 #> [12355,]  238 #> [12356,]  239 #> [12357,]  239 #> [12358,]  238 #> [12359,]  238 #> [12360,]  239 #> [12361,]  239 #> [12362,]  238 #> [12363,]  239 #> [12364,]  239 #> [12365,]  239 #> [12366,]  238 #> [12367,]  238 #> [12368,]  238 #> [12369,]  238 #> [12370,]  239 #> [12371,]  239 #> [12372,]  239 #> [12373,]  239 #> [12374,]  238 #> [12375,]  239 #> [12376,]  239 #> [12377,]  239 #> [12378,]  239 #> [12379,]  238 #> [12380,]  238 #> [12381,]  238 #> [12382,]  238 #> [12383,]  238 #> [12384,]  239 #> [12385,]  238 #> [12386,]  239 #> [12387,]  238 #> [12388,]  238 #> [12389,]  238 #> [12390,]  238 #> [12391,]  238 #> [12392,]  238 #> [12393,]  239 #> [12394,]  239 #> [12395,]  238 #> [12396,]  238 #> [12397,]  239 #> [12398,]  239 #> [12399,]  238 #> [12400,]  239 #> [12401,]  241 #> [12402,]  241 #> [12403,]  240 #> [12404,]  240 #> [12405,]  240 #> [12406,]  240 #> [12407,]  241 #> [12408,]  241 #> [12409,]  240 #> [12410,]  240 #> [12411,]  240 #> [12412,]  241 #> [12413,]  241 #> [12414,]  240 #> [12415,]  241 #> [12416,]  241 #> [12417,]  241 #> [12418,]  241 #> [12419,]  241 #> [12420,]  241 #> [12421,]  240 #> [12422,]  241 #> [12423,]  241 #> [12424,]  240 #> [12425,]  240 #> [12426,]  241 #> [12427,]  241 #> [12428,]  240 #> [12429,]  241 #> [12430,]  241 #> [12431,]  240 #> [12432,]  240 #> [12433,]  241 #> [12434,]  240 #> [12435,]  240 #> [12436,]  241 #> [12437,]  241 #> [12438,]  241 #> [12439,]  240 #> [12440,]  240 #> [12441,]  241 #> [12442,]  240 #> [12443,]  241 #> [12444,]  241 #> [12445,]  241 #> [12446,]  241 #> [12447,]  240 #> [12448,]  240 #> [12449,]  241 #> [12450,]  241 #> [12451,]  241 #> [12452,]  240 #> [12453,]  241 #> [12454,]  240 #> [12455,]  241 #> [12456,]  241 #> [12457,]  240 #> [12458,]  241 #> [12459,]  241 #> [12460,]  241 #> [12461,]  241 #> [12462,]  240 #> [12463,]  241 #> [12464,]  241 #> [12465,]  240 #> [12466,]  241 #> [12467,]  240 #> [12468,]  241 #> [12469,]  241 #> [12470,]  240 #> [12471,]  241 #> [12472,]  240 #> [12473,]  240 #> [12474,]  240 #> [12475,]  241 #> [12476,]  240 #> [12477,]  241 #> [12478,]  241 #> [12479,]  240 #> [12480,]  241 #> [12481,]  241 #> [12482,]  240 #> [12483,]  241 #> [12484,]  241 #> [12485,]  241 #> [12486,]  240 #> [12487,]  241 #> [12488,]  240 #> [12489,]  240 #> [12490,]  241 #> [12491,]  240 #> [12492,]  240 #> [12493,]  241 #> [12494,]  240 #> [12495,]  241 #> [12496,]  241 #> [12497,]  241 #> [12498,]  240 #> [12499,]  240 #> [12500,]  241 #> [12501,]  242 #> [12502,]  242 #> [12503,]  242 #> [12504,]  242 #> [12505,]  242 #> [12506,]  242 #> [12507,]  242 #> [12508,]  242 #> [12509,]  242 #> [12510,]  242 #> [12511,]  242 #> [12512,]  242 #> [12513,]  242 #> [12514,]  242 #> [12515,]  242 #> [12516,]  242 #> [12517,]  242 #> [12518,]  242 #> [12519,]  242 #> [12520,]  242 #> [12521,]  242 #> [12522,]  242 #> [12523,]  242 #> [12524,]  242 #> [12525,]  242 #> [12526,]  242 #> [12527,]  242 #> [12528,]  242 #> [12529,]  242 #> [12530,]  242 #> [12531,]  242 #> [12532,]  242 #> [12533,]  242 #> [12534,]  242 #> [12535,]  242 #> [12536,]  242 #> [12537,]  242 #> [12538,]  242 #> [12539,]  242 #> [12540,]  242 #> [12541,]  242 #> [12542,]  242 #> [12543,]  242 #> [12544,]  242 #> [12545,]  242 #> [12546,]  242 #> [12547,]  242 #> [12548,]  242 #> [12549,]  242 #> [12550,]  242 #> [12551,]  242 #> [12552,]  242 #> [12553,]  242 #> [12554,]  242 #> [12555,]  242 #> [12556,]  242 #> [12557,]  242 #> [12558,]  242 #> [12559,]  242 #> [12560,]  242 #> [12561,]  242 #> [12562,]  242 #> [12563,]  242 #> [12564,]  242 #> [12565,]  242 #> [12566,]  242 #> [12567,]  242 #> [12568,]  242 #> [12569,]  242 #> [12570,]  242 #> [12571,]  242 #> [12572,]  242 #> [12573,]  242 #> [12574,]  242 #> [12575,]  242 #> [12576,]  242 #> [12577,]  242 #> [12578,]  242 #> [12579,]  242 #> [12580,]  242 #> [12581,]  242 #> [12582,]  242 #> [12583,]  242 #> [12584,]  242 #> [12585,]  242 #> [12586,]  242 #> [12587,]  242 #> [12588,]  242 #> [12589,]  242 #> [12590,]  242 #> [12591,]  242 #> [12592,]  242 #> [12593,]  242 #> [12594,]  242 #> [12595,]  242 #> [12596,]  242 #> [12597,]  242 #> [12598,]  242 #> [12599,]  242 #> [12600,]  242 #> [12601,]  244 #> [12602,]  244 #> [12603,]  243 #> [12604,]  244 #> [12605,]  244 #> [12606,]  244 #> [12607,]  243 #> [12608,]  243 #> [12609,]  244 #> [12610,]  244 #> [12611,]  244 #> [12612,]  244 #> [12613,]  244 #> [12614,]  244 #> [12615,]  244 #> [12616,]  244 #> [12617,]  244 #> [12618,]  244 #> [12619,]  244 #> [12620,]  243 #> [12621,]  244 #> [12622,]  244 #> [12623,]  244 #> [12624,]  244 #> [12625,]  243 #> [12626,]  244 #> [12627,]  244 #> [12628,]  244 #> [12629,]  244 #> [12630,]  244 #> [12631,]  244 #> [12632,]  244 #> [12633,]  244 #> [12634,]  244 #> [12635,]  244 #> [12636,]  244 #> [12637,]  244 #> [12638,]  244 #> [12639,]  243 #> [12640,]  244 #> [12641,]  244 #> [12642,]  244 #> [12643,]  244 #> [12644,]  243 #> [12645,]  244 #> [12646,]  243 #> [12647,]  244 #> [12648,]  244 #> [12649,]  243 #> [12650,]  243 #> [12651,]  244 #> [12652,]  244 #> [12653,]  243 #> [12654,]  244 #> [12655,]  243 #> [12656,]  243 #> [12657,]  244 #> [12658,]  244 #> [12659,]  243 #> [12660,]  244 #> [12661,]  244 #> [12662,]  244 #> [12663,]  244 #> [12664,]  244 #> [12665,]  243 #> [12666,]  243 #> [12667,]  244 #> [12668,]  244 #> [12669,]  244 #> [12670,]  243 #> [12671,]  244 #> [12672,]  243 #> [12673,]  244 #> [12674,]  244 #> [12675,]  244 #> [12676,]  244 #> [12677,]  244 #> [12678,]  244 #> [12679,]  244 #> [12680,]  244 #> [12681,]  244 #> [12682,]  244 #> [12683,]  244 #> [12684,]  243 #> [12685,]  244 #> [12686,]  243 #> [12687,]  244 #> [12688,]  244 #> [12689,]  244 #> [12690,]  243 #> [12691,]  244 #> [12692,]  244 #> [12693,]  244 #> [12694,]  244 #> [12695,]  244 #> [12696,]  244 #> [12697,]  244 #> [12698,]  243 #> [12699,]  244 #> [12700,]  243 #> [12701,]  246 #> [12702,]  246 #> [12703,]  246 #> [12704,]  246 #> [12705,]  246 #> [12706,]  246 #> [12707,]  246 #> [12708,]  246 #> [12709,]  246 #> [12710,]  245 #> [12711,]  245 #> [12712,]  246 #> [12713,]  246 #> [12714,]  245 #> [12715,]  246 #> [12716,]  246 #> [12717,]  246 #> [12718,]  246 #> [12719,]  246 #> [12720,]  246 #> [12721,]  246 #> [12722,]  246 #> [12723,]  246 #> [12724,]  246 #> [12725,]  246 #> [12726,]  246 #> [12727,]  246 #> [12728,]  246 #> [12729,]  246 #> [12730,]  246 #> [12731,]  246 #> [12732,]  246 #> [12733,]  246 #> [12734,]  246 #> [12735,]  246 #> [12736,]  246 #> [12737,]  246 #> [12738,]  246 #> [12739,]  246 #> [12740,]  246 #> [12741,]  246 #> [12742,]  246 #> [12743,]  246 #> [12744,]  246 #> [12745,]  246 #> [12746,]  246 #> [12747,]  246 #> [12748,]  245 #> [12749,]  246 #> [12750,]  246 #> [12751,]  246 #> [12752,]  246 #> [12753,]  246 #> [12754,]  246 #> [12755,]  246 #> [12756,]  246 #> [12757,]  246 #> [12758,]  246 #> [12759,]  246 #> [12760,]  246 #> [12761,]  246 #> [12762,]  246 #> [12763,]  246 #> [12764,]  246 #> [12765,]  246 #> [12766,]  246 #> [12767,]  246 #> [12768,]  246 #> [12769,]  246 #> [12770,]  245 #> [12771,]  246 #> [12772,]  246 #> [12773,]  246 #> [12774,]  246 #> [12775,]  246 #> [12776,]  246 #> [12777,]  246 #> [12778,]  246 #> [12779,]  246 #> [12780,]  246 #> [12781,]  246 #> [12782,]  246 #> [12783,]  246 #> [12784,]  246 #> [12785,]  246 #> [12786,]  246 #> [12787,]  246 #> [12788,]  246 #> [12789,]  246 #> [12790,]  246 #> [12791,]  246 #> [12792,]  246 #> [12793,]  246 #> [12794,]  246 #> [12795,]  246 #> [12796,]  246 #> [12797,]  246 #> [12798,]  246 #> [12799,]  246 #> [12800,]  246 #> [12801,]  248 #> [12802,]  248 #> [12803,]  248 #> [12804,]  248 #> [12805,]  248 #> [12806,]  248 #> [12807,]  247 #> [12808,]  248 #> [12809,]  248 #> [12810,]  248 #> [12811,]  248 #> [12812,]  248 #> [12813,]  248 #> [12814,]  248 #> [12815,]  248 #> [12816,]  248 #> [12817,]  248 #> [12818,]  248 #> [12819,]  248 #> [12820,]  248 #> [12821,]  247 #> [12822,]  248 #> [12823,]  247 #> [12824,]  248 #> [12825,]  248 #> [12826,]  248 #> [12827,]  248 #> [12828,]  248 #> [12829,]  248 #> [12830,]  247 #> [12831,]  248 #> [12832,]  248 #> [12833,]  248 #> [12834,]  248 #> [12835,]  248 #> [12836,]  248 #> [12837,]  248 #> [12838,]  248 #> [12839,]  247 #> [12840,]  248 #> [12841,]  248 #> [12842,]  248 #> [12843,]  248 #> [12844,]  248 #> [12845,]  248 #> [12846,]  248 #> [12847,]  248 #> [12848,]  248 #> [12849,]  247 #> [12850,]  248 #> [12851,]  248 #> [12852,]  248 #> [12853,]  248 #> [12854,]  247 #> [12855,]  248 #> [12856,]  248 #> [12857,]  248 #> [12858,]  248 #> [12859,]  248 #> [12860,]  248 #> [12861,]  248 #> [12862,]  247 #> [12863,]  248 #> [12864,]  248 #> [12865,]  248 #> [12866,]  248 #> [12867,]  248 #> [12868,]  248 #> [12869,]  248 #> [12870,]  247 #> [12871,]  248 #> [12872,]  248 #> [12873,]  248 #> [12874,]  248 #> [12875,]  248 #> [12876,]  248 #> [12877,]  248 #> [12878,]  248 #> [12879,]  248 #> [12880,]  247 #> [12881,]  248 #> [12882,]  248 #> [12883,]  247 #> [12884,]  248 #> [12885,]  248 #> [12886,]  248 #> [12887,]  248 #> [12888,]  248 #> [12889,]  248 #> [12890,]  248 #> [12891,]  248 #> [12892,]  248 #> [12893,]  248 #> [12894,]  248 #> [12895,]  247 #> [12896,]  248 #> [12897,]  248 #> [12898,]  247 #> [12899,]  248 #> [12900,]  248 #> [12901,]  250 #> [12902,]  250 #> [12903,]  249 #> [12904,]  250 #> [12905,]  249 #> [12906,]  249 #> [12907,]  250 #> [12908,]  250 #> [12909,]  250 #> [12910,]  250 #> [12911,]  249 #> [12912,]  249 #> [12913,]  250 #> [12914,]  249 #> [12915,]  250 #> [12916,]  250 #> [12917,]  250 #> [12918,]  250 #> [12919,]  249 #> [12920,]  249 #> [12921,]  250 #> [12922,]  249 #> [12923,]  250 #> [12924,]  249 #> [12925,]  250 #> [12926,]  249 #> [12927,]  250 #> [12928,]  250 #> [12929,]  249 #> [12930,]  249 #> [12931,]  250 #> [12932,]  249 #> [12933,]  249 #> [12934,]  249 #> [12935,]  249 #> [12936,]  249 #> [12937,]  250 #> [12938,]  250 #> [12939,]  250 #> [12940,]  249 #> [12941,]  249 #> [12942,]  249 #> [12943,]  250 #> [12944,]  250 #> [12945,]  250 #> [12946,]  250 #> [12947,]  250 #> [12948,]  249 #> [12949,]  250 #> [12950,]  250 #> [12951,]  249 #> [12952,]  249 #> [12953,]  250 #> [12954,]  249 #> [12955,]  249 #> [12956,]  250 #> [12957,]  249 #> [12958,]  249 #> [12959,]  250 #> [12960,]  249 #> [12961,]  250 #> [12962,]  249 #> [12963,]  249 #> [12964,]  250 #> [12965,]  250 #> [12966,]  249 #> [12967,]  249 #> [12968,]  249 #> [12969,]  249 #> [12970,]  250 #> [12971,]  250 #> [12972,]  250 #> [12973,]  250 #> [12974,]  250 #> [12975,]  250 #> [12976,]  250 #> [12977,]  250 #> [12978,]  249 #> [12979,]  250 #> [12980,]  249 #> [12981,]  249 #> [12982,]  250 #> [12983,]  249 #> [12984,]  250 #> [12985,]  249 #> [12986,]  250 #> [12987,]  250 #> [12988,]  250 #> [12989,]  249 #> [12990,]  250 #> [12991,]  249 #> [12992,]  250 #> [12993,]  249 #> [12994,]  250 #> [12995,]  250 #> [12996,]  250 #> [12997,]  249 #> [12998,]  249 #> [12999,]  249 #> [13000,]  250 #> [13001,]  251 #> [13002,]  251 #> [13003,]  251 #> [13004,]  251 #> [13005,]  251 #> [13006,]  251 #> [13007,]  251 #> [13008,]  251 #> [13009,]  251 #> [13010,]  251 #> [13011,]  251 #> [13012,]  251 #> [13013,]  251 #> [13014,]  251 #> [13015,]  252 #> [13016,]  251 #> [13017,]  251 #> [13018,]  251 #> [13019,]  252 #> [13020,]  252 #> [13021,]  251 #> [13022,]  252 #> [13023,]  251 #> [13024,]  251 #> [13025,]  251 #> [13026,]  251 #> [13027,]  252 #> [13028,]  251 #> [13029,]  252 #> [13030,]  251 #> [13031,]  251 #> [13032,]  251 #> [13033,]  251 #> [13034,]  251 #> [13035,]  251 #> [13036,]  252 #> [13037,]  252 #> [13038,]  252 #> [13039,]  251 #> [13040,]  251 #> [13041,]  251 #> [13042,]  251 #> [13043,]  251 #> [13044,]  251 #> [13045,]  251 #> [13046,]  252 #> [13047,]  251 #> [13048,]  251 #> [13049,]  251 #> [13050,]  251 #> [13051,]  251 #> [13052,]  251 #> [13053,]  252 #> [13054,]  251 #> [13055,]  252 #> [13056,]  251 #> [13057,]  251 #> [13058,]  252 #> [13059,]  251 #> [13060,]  251 #> [13061,]  251 #> [13062,]  251 #> [13063,]  251 #> [13064,]  252 #> [13065,]  251 #> [13066,]  252 #> [13067,]  251 #> [13068,]  251 #> [13069,]  252 #> [13070,]  251 #> [13071,]  251 #> [13072,]  251 #> [13073,]  251 #> [13074,]  251 #> [13075,]  251 #> [13076,]  251 #> [13077,]  252 #> [13078,]  251 #> [13079,]  251 #> [13080,]  252 #> [13081,]  252 #> [13082,]  251 #> [13083,]  252 #> [13084,]  251 #> [13085,]  251 #> [13086,]  251 #> [13087,]  252 #> [13088,]  251 #> [13089,]  251 #> [13090,]  252 #> [13091,]  251 #> [13092,]  251 #> [13093,]  251 #> [13094,]  251 #> [13095,]  251 #> [13096,]  251 #> [13097,]  252 #> [13098,]  251 #> [13099,]  251 #> [13100,]  252 #> [13101,]  253 #> [13102,]  253 #> [13103,]  253 #> [13104,]  253 #> [13105,]  253 #> [13106,]  253 #> [13107,]  253 #> [13108,]  253 #> [13109,]  253 #> [13110,]  253 #> [13111,]  253 #> [13112,]  253 #> [13113,]  253 #> [13114,]  253 #> [13115,]  253 #> [13116,]  253 #> [13117,]  253 #> [13118,]  253 #> [13119,]  253 #> [13120,]  253 #> [13121,]  253 #> [13122,]  253 #> [13123,]  253 #> [13124,]  253 #> [13125,]  253 #> [13126,]  253 #> [13127,]  253 #> [13128,]  253 #> [13129,]  253 #> [13130,]  253 #> [13131,]  253 #> [13132,]  253 #> [13133,]  253 #> [13134,]  253 #> [13135,]  253 #> [13136,]  253 #> [13137,]  253 #> [13138,]  253 #> [13139,]  253 #> [13140,]  253 #> [13141,]  253 #> [13142,]  253 #> [13143,]  253 #> [13144,]  253 #> [13145,]  253 #> [13146,]  253 #> [13147,]  253 #> [13148,]  253 #> [13149,]  253 #> [13150,]  253 #> [13151,]  253 #> [13152,]  253 #> [13153,]  253 #> [13154,]  253 #> [13155,]  253 #> [13156,]  253 #> [13157,]  253 #> [13158,]  253 #> [13159,]  253 #> [13160,]  253 #> [13161,]  253 #> [13162,]  253 #> [13163,]  253 #> [13164,]  253 #> [13165,]  253 #> [13166,]  253 #> [13167,]  253 #> [13168,]  253 #> [13169,]  253 #> [13170,]  253 #> [13171,]  253 #> [13172,]  253 #> [13173,]  253 #> [13174,]  253 #> [13175,]  253 #> [13176,]  253 #> [13177,]  253 #> [13178,]  253 #> [13179,]  253 #> [13180,]  253 #> [13181,]  253 #> [13182,]  253 #> [13183,]  253 #> [13184,]  253 #> [13185,]  253 #> [13186,]  253 #> [13187,]  253 #> [13188,]  253 #> [13189,]  253 #> [13190,]  253 #> [13191,]  253 #> [13192,]  253 #> [13193,]  253 #> [13194,]  253 #> [13195,]  253 #> [13196,]  253 #> [13197,]  253 #> [13198,]  253 #> [13199,]  253 #> [13200,]  253 #> [13201,]  255 #> [13202,]  254 #> [13203,]  254 #> [13204,]  254 #> [13205,]  254 #> [13206,]  254 #> [13207,]  254 #> [13208,]  254 #> [13209,]  255 #> [13210,]  254 #> [13211,]  254 #> [13212,]  254 #> [13213,]  255 #> [13214,]  254 #> [13215,]  254 #> [13216,]  254 #> [13217,]  255 #> [13218,]  255 #> [13219,]  254 #> [13220,]  255 #> [13221,]  254 #> [13222,]  254 #> [13223,]  254 #> [13224,]  254 #> [13225,]  254 #> [13226,]  254 #> [13227,]  255 #> [13228,]  254 #> [13229,]  254 #> [13230,]  254 #> [13231,]  254 #> [13232,]  254 #> [13233,]  255 #> [13234,]  254 #> [13235,]  254 #> [13236,]  255 #> [13237,]  254 #> [13238,]  255 #> [13239,]  254 #> [13240,]  254 #> [13241,]  254 #> [13242,]  255 #> [13243,]  254 #> [13244,]  254 #> [13245,]  254 #> [13246,]  254 #> [13247,]  254 #> [13248,]  254 #> [13249,]  254 #> [13250,]  254 #> [13251,]  255 #> [13252,]  254 #> [13253,]  255 #> [13254,]  255 #> [13255,]  254 #> [13256,]  255 #> [13257,]  254 #> [13258,]  254 #> [13259,]  254 #> [13260,]  254 #> [13261,]  254 #> [13262,]  255 #> [13263,]  254 #> [13264,]  254 #> [13265,]  255 #> [13266,]  255 #> [13267,]  254 #> [13268,]  254 #> [13269,]  254 #> [13270,]  254 #> [13271,]  254 #> [13272,]  254 #> [13273,]  254 #> [13274,]  254 #> [13275,]  254 #> [13276,]  254 #> [13277,]  255 #> [13278,]  254 #> [13279,]  255 #> [13280,]  254 #> [13281,]  254 #> [13282,]  255 #> [13283,]  255 #> [13284,]  255 #> [13285,]  255 #> [13286,]  254 #> [13287,]  255 #> [13288,]  254 #> [13289,]  255 #> [13290,]  254 #> [13291,]  255 #> [13292,]  254 #> [13293,]  255 #> [13294,]  255 #> [13295,]  254 #> [13296,]  254 #> [13297,]  254 #> [13298,]  254 #> [13299,]  254 #> [13300,]  254 #> [13301,]  257 #> [13302,]  257 #> [13303,]  256 #> [13304,]  257 #> [13305,]  257 #> [13306,]  257 #> [13307,]  257 #> [13308,]  257 #> [13309,]  257 #> [13310,]  256 #> [13311,]  256 #> [13312,]  257 #> [13313,]  257 #> [13314,]  256 #> [13315,]  257 #> [13316,]  257 #> [13317,]  257 #> [13318,]  257 #> [13319,]  257 #> [13320,]  257 #> [13321,]  257 #> [13322,]  257 #> [13323,]  257 #> [13324,]  257 #> [13325,]  257 #> [13326,]  257 #> [13327,]  257 #> [13328,]  257 #> [13329,]  257 #> [13330,]  257 #> [13331,]  256 #> [13332,]  256 #> [13333,]  257 #> [13334,]  257 #> [13335,]  257 #> [13336,]  257 #> [13337,]  257 #> [13338,]  257 #> [13339,]  257 #> [13340,]  256 #> [13341,]  257 #> [13342,]  257 #> [13343,]  257 #> [13344,]  257 #> [13345,]  257 #> [13346,]  257 #> [13347,]  257 #> [13348,]  256 #> [13349,]  257 #> [13350,]  257 #> [13351,]  257 #> [13352,]  257 #> [13353,]  257 #> [13354,]  257 #> [13355,]  257 #> [13356,]  257 #> [13357,]  257 #> [13358,]  257 #> [13359,]  257 #> [13360,]  257 #> [13361,]  257 #> [13362,]  257 #> [13363,]  257 #> [13364,]  257 #> [13365,]  257 #> [13366,]  257 #> [13367,]  257 #> [13368,]  257 #> [13369,]  257 #> [13370,]  256 #> [13371,]  257 #> [13372,]  257 #> [13373,]  257 #> [13374,]  256 #> [13375,]  257 #> [13376,]  257 #> [13377,]  257 #> [13378,]  257 #> [13379,]  257 #> [13380,]  257 #> [13381,]  257 #> [13382,]  257 #> [13383,]  257 #> [13384,]  257 #> [13385,]  257 #> [13386,]  257 #> [13387,]  257 #> [13388,]  257 #> [13389,]  257 #> [13390,]  257 #> [13391,]  257 #> [13392,]  257 #> [13393,]  257 #> [13394,]  257 #> [13395,]  257 #> [13396,]  257 #> [13397,]  257 #> [13398,]  256 #> [13399,]  257 #> [13400,]  257 #> [13401,]  259 #> [13402,]  259 #> [13403,]  258 #> [13404,]  259 #> [13405,]  259 #> [13406,]  259 #> [13407,]  258 #> [13408,]  259 #> [13409,]  259 #> [13410,]  259 #> [13411,]  259 #> [13412,]  259 #> [13413,]  259 #> [13414,]  259 #> [13415,]  259 #> [13416,]  259 #> [13417,]  259 #> [13418,]  259 #> [13419,]  259 #> [13420,]  259 #> [13421,]  259 #> [13422,]  259 #> [13423,]  259 #> [13424,]  259 #> [13425,]  259 #> [13426,]  259 #> [13427,]  259 #> [13428,]  259 #> [13429,]  259 #> [13430,]  259 #> [13431,]  259 #> [13432,]  259 #> [13433,]  259 #> [13434,]  259 #> [13435,]  259 #> [13436,]  259 #> [13437,]  259 #> [13438,]  259 #> [13439,]  259 #> [13440,]  259 #> [13441,]  259 #> [13442,]  259 #> [13443,]  259 #> [13444,]  259 #> [13445,]  259 #> [13446,]  259 #> [13447,]  259 #> [13448,]  259 #> [13449,]  258 #> [13450,]  259 #> [13451,]  259 #> [13452,]  259 #> [13453,]  258 #> [13454,]  259 #> [13455,]  258 #> [13456,]  258 #> [13457,]  259 #> [13458,]  259 #> [13459,]  259 #> [13460,]  259 #> [13461,]  259 #> [13462,]  259 #> [13463,]  259 #> [13464,]  259 #> [13465,]  259 #> [13466,]  258 #> [13467,]  259 #> [13468,]  259 #> [13469,]  259 #> [13470,]  259 #> [13471,]  259 #> [13472,]  259 #> [13473,]  259 #> [13474,]  259 #> [13475,]  259 #> [13476,]  259 #> [13477,]  259 #> [13478,]  259 #> [13479,]  259 #> [13480,]  259 #> [13481,]  259 #> [13482,]  259 #> [13483,]  259 #> [13484,]  259 #> [13485,]  259 #> [13486,]  259 #> [13487,]  259 #> [13488,]  259 #> [13489,]  259 #> [13490,]  259 #> [13491,]  259 #> [13492,]  259 #> [13493,]  259 #> [13494,]  259 #> [13495,]  259 #> [13496,]  259 #> [13497,]  259 #> [13498,]  259 #> [13499,]  259 #> [13500,]  259 #> [13501,]  260 #> [13502,]  261 #> [13503,]  260 #> [13504,]  260 #> [13505,]  261 #> [13506,]  260 #> [13507,]  261 #> [13508,]  260 #> [13509,]  261 #> [13510,]  261 #> [13511,]  260 #> [13512,]  261 #> [13513,]  261 #> [13514,]  260 #> [13515,]  260 #> [13516,]  260 #> [13517,]  261 #> [13518,]  261 #> [13519,]  260 #> [13520,]  261 #> [13521,]  261 #> [13522,]  261 #> [13523,]  261 #> [13524,]  261 #> [13525,]  261 #> [13526,]  260 #> [13527,]  261 #> [13528,]  260 #> [13529,]  261 #> [13530,]  261 #> [13531,]  261 #> [13532,]  261 #> [13533,]  261 #> [13534,]  260 #> [13535,]  260 #> [13536,]  261 #> [13537,]  260 #> [13538,]  260 #> [13539,]  261 #> [13540,]  261 #> [13541,]  261 #> [13542,]  260 #> [13543,]  261 #> [13544,]  261 #> [13545,]  260 #> [13546,]  260 #> [13547,]  261 #> [13548,]  261 #> [13549,]  260 #> [13550,]  261 #> [13551,]  261 #> [13552,]  260 #> [13553,]  261 #> [13554,]  261 #> [13555,]  260 #> [13556,]  260 #> [13557,]  260 #> [13558,]  261 #> [13559,]  260 #> [13560,]  261 #> [13561,]  261 #> [13562,]  260 #> [13563,]  261 #> [13564,]  260 #> [13565,]  260 #> [13566,]  261 #> [13567,]  261 #> [13568,]  260 #> [13569,]  260 #> [13570,]  261 #> [13571,]  261 #> [13572,]  260 #> [13573,]  260 #> [13574,]  261 #> [13575,]  261 #> [13576,]  261 #> [13577,]  260 #> [13578,]  261 #> [13579,]  260 #> [13580,]  261 #> [13581,]  261 #> [13582,]  260 #> [13583,]  261 #> [13584,]  261 #> [13585,]  260 #> [13586,]  261 #> [13587,]  261 #> [13588,]  261 #> [13589,]  260 #> [13590,]  261 #> [13591,]  260 #> [13592,]  261 #> [13593,]  261 #> [13594,]  260 #> [13595,]  261 #> [13596,]  260 #> [13597,]  260 #> [13598,]  260 #> [13599,]  261 #> [13600,]  260 #> [13601,]  262 #> [13602,]  263 #> [13603,]  263 #> [13604,]  262 #> [13605,]  262 #> [13606,]  263 #> [13607,]  262 #> [13608,]  262 #> [13609,]  262 #> [13610,]  262 #> [13611,]  262 #> [13612,]  263 #> [13613,]  262 #> [13614,]  262 #> [13615,]  262 #> [13616,]  262 #> [13617,]  262 #> [13618,]  263 #> [13619,]  263 #> [13620,]  263 #> [13621,]  262 #> [13622,]  262 #> [13623,]  262 #> [13624,]  262 #> [13625,]  263 #> [13626,]  262 #> [13627,]  262 #> [13628,]  263 #> [13629,]  262 #> [13630,]  262 #> [13631,]  263 #> [13632,]  262 #> [13633,]  263 #> [13634,]  263 #> [13635,]  262 #> [13636,]  262 #> [13637,]  262 #> [13638,]  262 #> [13639,]  262 #> [13640,]  262 #> [13641,]  262 #> [13642,]  262 #> [13643,]  262 #> [13644,]  262 #> [13645,]  262 #> [13646,]  262 #> [13647,]  262 #> [13648,]  262 #> [13649,]  262 #> [13650,]  262 #> [13651,]  262 #> [13652,]  262 #> [13653,]  262 #> [13654,]  262 #> [13655,]  262 #> [13656,]  262 #> [13657,]  262 #> [13658,]  262 #> [13659,]  262 #> [13660,]  263 #> [13661,]  262 #> [13662,]  262 #> [13663,]  262 #> [13664,]  262 #> [13665,]  263 #> [13666,]  262 #> [13667,]  262 #> [13668,]  262 #> [13669,]  262 #> [13670,]  263 #> [13671,]  263 #> [13672,]  262 #> [13673,]  263 #> [13674,]  262 #> [13675,]  262 #> [13676,]  262 #> [13677,]  262 #> [13678,]  262 #> [13679,]  262 #> [13680,]  262 #> [13681,]  262 #> [13682,]  262 #> [13683,]  262 #> [13684,]  263 #> [13685,]  262 #> [13686,]  262 #> [13687,]  262 #> [13688,]  262 #> [13689,]  262 #> [13690,]  262 #> [13691,]  262 #> [13692,]  262 #> [13693,]  263 #> [13694,]  262 #> [13695,]  262 #> [13696,]  262 #> [13697,]  263 #> [13698,]  263 #> [13699,]  262 #> [13700,]  263 #> [13701,]  265 #> [13702,]  265 #> [13703,]  265 #> [13704,]  264 #> [13705,]  265 #> [13706,]  265 #> [13707,]  265 #> [13708,]  264 #> [13709,]  264 #> [13710,]  264 #> [13711,]  265 #> [13712,]  265 #> [13713,]  265 #> [13714,]  265 #> [13715,]  265 #> [13716,]  265 #> [13717,]  265 #> [13718,]  265 #> [13719,]  265 #> [13720,]  265 #> [13721,]  265 #> [13722,]  265 #> [13723,]  265 #> [13724,]  265 #> [13725,]  265 #> [13726,]  265 #> [13727,]  265 #> [13728,]  265 #> [13729,]  265 #> [13730,]  265 #> [13731,]  265 #> [13732,]  265 #> [13733,]  265 #> [13734,]  265 #> [13735,]  265 #> [13736,]  265 #> [13737,]  265 #> [13738,]  265 #> [13739,]  265 #> [13740,]  265 #> [13741,]  265 #> [13742,]  265 #> [13743,]  264 #> [13744,]  265 #> [13745,]  265 #> [13746,]  265 #> [13747,]  265 #> [13748,]  265 #> [13749,]  265 #> [13750,]  265 #> [13751,]  264 #> [13752,]  265 #> [13753,]  265 #> [13754,]  265 #> [13755,]  265 #> [13756,]  265 #> [13757,]  265 #> [13758,]  265 #> [13759,]  265 #> [13760,]  264 #> [13761,]  265 #> [13762,]  265 #> [13763,]  265 #> [13764,]  264 #> [13765,]  265 #> [13766,]  265 #> [13767,]  264 #> [13768,]  265 #> [13769,]  265 #> [13770,]  265 #> [13771,]  265 #> [13772,]  265 #> [13773,]  265 #> [13774,]  265 #> [13775,]  265 #> [13776,]  265 #> [13777,]  265 #> [13778,]  265 #> [13779,]  265 #> [13780,]  265 #> [13781,]  265 #> [13782,]  265 #> [13783,]  265 #> [13784,]  265 #> [13785,]  264 #> [13786,]  265 #> [13787,]  265 #> [13788,]  265 #> [13789,]  265 #> [13790,]  265 #> [13791,]  264 #> [13792,]  265 #> [13793,]  265 #> [13794,]  265 #> [13795,]  264 #> [13796,]  265 #> [13797,]  265 #> [13798,]  265 #> [13799,]  265 #> [13800,]  265 #> [13801,]  267 #> [13802,]  266 #> [13803,]  266 #> [13804,]  266 #> [13805,]  267 #> [13806,]  266 #> [13807,]  266 #> [13808,]  266 #> [13809,]  266 #> [13810,]  266 #> [13811,]  266 #> [13812,]  266 #> [13813,]  266 #> [13814,]  267 #> [13815,]  267 #> [13816,]  266 #> [13817,]  266 #> [13818,]  267 #> [13819,]  266 #> [13820,]  266 #> [13821,]  266 #> [13822,]  266 #> [13823,]  266 #> [13824,]  266 #> [13825,]  266 #> [13826,]  266 #> [13827,]  267 #> [13828,]  266 #> [13829,]  266 #> [13830,]  266 #> [13831,]  266 #> [13832,]  267 #> [13833,]  266 #> [13834,]  266 #> [13835,]  266 #> [13836,]  266 #> [13837,]  266 #> [13838,]  266 #> [13839,]  266 #> [13840,]  266 #> [13841,]  266 #> [13842,]  266 #> [13843,]  267 #> [13844,]  266 #> [13845,]  266 #> [13846,]  266 #> [13847,]  266 #> [13848,]  266 #> [13849,]  266 #> [13850,]  266 #> [13851,]  266 #> [13852,]  266 #> [13853,]  266 #> [13854,]  266 #> [13855,]  266 #> [13856,]  266 #> [13857,]  266 #> [13858,]  267 #> [13859,]  266 #> [13860,]  266 #> [13861,]  266 #> [13862,]  266 #> [13863,]  266 #> [13864,]  266 #> [13865,]  266 #> [13866,]  266 #> [13867,]  266 #> [13868,]  266 #> [13869,]  266 #> [13870,]  267 #> [13871,]  267 #> [13872,]  266 #> [13873,]  266 #> [13874,]  266 #> [13875,]  267 #> [13876,]  266 #> [13877,]  266 #> [13878,]  266 #> [13879,]  267 #> [13880,]  266 #> [13881,]  266 #> [13882,]  266 #> [13883,]  266 #> [13884,]  266 #> [13885,]  266 #> [13886,]  266 #> [13887,]  267 #> [13888,]  266 #> [13889,]  266 #> [13890,]  266 #> [13891,]  267 #> [13892,]  266 #> [13893,]  266 #> [13894,]  266 #> [13895,]  267 #> [13896,]  266 #> [13897,]  266 #> [13898,]  266 #> [13899,]  266 #> [13900,]  267 #> [13901,]  268 #> [13902,]  268 #> [13903,]  268 #> [13904,]  268 #> [13905,]  268 #> [13906,]  268 #> [13907,]  269 #> [13908,]  268 #> [13909,]  268 #> [13910,]  268 #> [13911,]  268 #> [13912,]  268 #> [13913,]  268 #> [13914,]  268 #> [13915,]  268 #> [13916,]  269 #> [13917,]  268 #> [13918,]  268 #> [13919,]  268 #> [13920,]  269 #> [13921,]  268 #> [13922,]  268 #> [13923,]  268 #> [13924,]  269 #> [13925,]  268 #> [13926,]  268 #> [13927,]  268 #> [13928,]  269 #> [13929,]  268 #> [13930,]  268 #> [13931,]  268 #> [13932,]  268 #> [13933,]  268 #> [13934,]  268 #> [13935,]  268 #> [13936,]  268 #> [13937,]  268 #> [13938,]  268 #> [13939,]  268 #> [13940,]  268 #> [13941,]  268 #> [13942,]  268 #> [13943,]  268 #> [13944,]  268 #> [13945,]  268 #> [13946,]  268 #> [13947,]  268 #> [13948,]  268 #> [13949,]  268 #> [13950,]  269 #> [13951,]  268 #> [13952,]  269 #> [13953,]  268 #> [13954,]  268 #> [13955,]  268 #> [13956,]  268 #> [13957,]  268 #> [13958,]  268 #> [13959,]  268 #> [13960,]  268 #> [13961,]  268 #> [13962,]  268 #> [13963,]  268 #> [13964,]  268 #> [13965,]  268 #> [13966,]  268 #> [13967,]  268 #> [13968,]  268 #> [13969,]  268 #> [13970,]  268 #> [13971,]  268 #> [13972,]  268 #> [13973,]  268 #> [13974,]  268 #> [13975,]  268 #> [13976,]  269 #> [13977,]  268 #> [13978,]  268 #> [13979,]  268 #> [13980,]  268 #> [13981,]  268 #> [13982,]  268 #> [13983,]  268 #> [13984,]  268 #> [13985,]  268 #> [13986,]  269 #> [13987,]  268 #> [13988,]  268 #> [13989,]  268 #> [13990,]  268 #> [13991,]  269 #> [13992,]  268 #> [13993,]  268 #> [13994,]  268 #> [13995,]  268 #> [13996,]  268 #> [13997,]  268 #> [13998,]  268 #> [13999,]  268 #> [14000,]  268 #> [14001,]  271 #> [14002,]  271 #> [14003,]  270 #> [14004,]  271 #> [14005,]  271 #> [14006,]  271 #> [14007,]  270 #> [14008,]  271 #> [14009,]  271 #> [14010,]  271 #> [14011,]  271 #> [14012,]  271 #> [14013,]  271 #> [14014,]  271 #> [14015,]  271 #> [14016,]  271 #> [14017,]  271 #> [14018,]  271 #> [14019,]  271 #> [14020,]  271 #> [14021,]  271 #> [14022,]  271 #> [14023,]  271 #> [14024,]  271 #> [14025,]  271 #> [14026,]  271 #> [14027,]  271 #> [14028,]  271 #> [14029,]  271 #> [14030,]  271 #> [14031,]  271 #> [14032,]  271 #> [14033,]  271 #> [14034,]  271 #> [14035,]  271 #> [14036,]  271 #> [14037,]  271 #> [14038,]  271 #> [14039,]  271 #> [14040,]  271 #> [14041,]  271 #> [14042,]  271 #> [14043,]  271 #> [14044,]  271 #> [14045,]  271 #> [14046,]  271 #> [14047,]  271 #> [14048,]  271 #> [14049,]  270 #> [14050,]  271 #> [14051,]  271 #> [14052,]  271 #> [14053,]  270 #> [14054,]  271 #> [14055,]  271 #> [14056,]  270 #> [14057,]  271 #> [14058,]  271 #> [14059,]  271 #> [14060,]  271 #> [14061,]  271 #> [14062,]  271 #> [14063,]  271 #> [14064,]  271 #> [14065,]  271 #> [14066,]  271 #> [14067,]  271 #> [14068,]  271 #> [14069,]  271 #> [14070,]  271 #> [14071,]  271 #> [14072,]  271 #> [14073,]  271 #> [14074,]  271 #> [14075,]  271 #> [14076,]  271 #> [14077,]  271 #> [14078,]  271 #> [14079,]  271 #> [14080,]  271 #> [14081,]  271 #> [14082,]  271 #> [14083,]  271 #> [14084,]  271 #> [14085,]  271 #> [14086,]  271 #> [14087,]  271 #> [14088,]  271 #> [14089,]  271 #> [14090,]  271 #> [14091,]  271 #> [14092,]  271 #> [14093,]  271 #> [14094,]  271 #> [14095,]  271 #> [14096,]  271 #> [14097,]  271 #> [14098,]  271 #> [14099,]  271 #> [14100,]  271 #> [14101,]  272 #> [14102,]  272 #> [14103,]  272 #> [14104,]  272 #> [14105,]  272 #> [14106,]  272 #> [14107,]  272 #> [14108,]  272 #> [14109,]  272 #> [14110,]  273 #> [14111,]  272 #> [14112,]  272 #> [14113,]  272 #> [14114,]  272 #> [14115,]  272 #> [14116,]  272 #> [14117,]  272 #> [14118,]  273 #> [14119,]  272 #> [14120,]  272 #> [14121,]  272 #> [14122,]  272 #> [14123,]  272 #> [14124,]  272 #> [14125,]  273 #> [14126,]  272 #> [14127,]  272 #> [14128,]  272 #> [14129,]  272 #> [14130,]  272 #> [14131,]  272 #> [14132,]  272 #> [14133,]  272 #> [14134,]  272 #> [14135,]  272 #> [14136,]  272 #> [14137,]  272 #> [14138,]  272 #> [14139,]  273 #> [14140,]  272 #> [14141,]  272 #> [14142,]  272 #> [14143,]  273 #> [14144,]  272 #> [14145,]  273 #> [14146,]  272 #> [14147,]  272 #> [14148,]  272 #> [14149,]  272 #> [14150,]  272 #> [14151,]  272 #> [14152,]  272 #> [14153,]  272 #> [14154,]  272 #> [14155,]  272 #> [14156,]  272 #> [14157,]  272 #> [14158,]  272 #> [14159,]  272 #> [14160,]  272 #> [14161,]  272 #> [14162,]  272 #> [14163,]  272 #> [14164,]  272 #> [14165,]  272 #> [14166,]  272 #> [14167,]  272 #> [14168,]  272 #> [14169,]  272 #> [14170,]  272 #> [14171,]  272 #> [14172,]  272 #> [14173,]  273 #> [14174,]  272 #> [14175,]  273 #> [14176,]  272 #> [14177,]  273 #> [14178,]  272 #> [14179,]  272 #> [14180,]  272 #> [14181,]  272 #> [14182,]  272 #> [14183,]  272 #> [14184,]  272 #> [14185,]  272 #> [14186,]  272 #> [14187,]  272 #> [14188,]  272 #> [14189,]  272 #> [14190,]  272 #> [14191,]  272 #> [14192,]  272 #> [14193,]  272 #> [14194,]  272 #> [14195,]  272 #> [14196,]  272 #> [14197,]  272 #> [14198,]  272 #> [14199,]  272 #> [14200,]  272 #> [14201,]  275 #> [14202,]  275 #> [14203,]  274 #> [14204,]  275 #> [14205,]  275 #> [14206,]  275 #> [14207,]  275 #> [14208,]  275 #> [14209,]  275 #> [14210,]  274 #> [14211,]  274 #> [14212,]  275 #> [14213,]  275 #> [14214,]  274 #> [14215,]  275 #> [14216,]  275 #> [14217,]  275 #> [14218,]  275 #> [14219,]  275 #> [14220,]  275 #> [14221,]  275 #> [14222,]  275 #> [14223,]  275 #> [14224,]  275 #> [14225,]  275 #> [14226,]  275 #> [14227,]  275 #> [14228,]  275 #> [14229,]  275 #> [14230,]  275 #> [14231,]  275 #> [14232,]  274 #> [14233,]  275 #> [14234,]  275 #> [14235,]  275 #> [14236,]  275 #> [14237,]  275 #> [14238,]  275 #> [14239,]  275 #> [14240,]  274 #> [14241,]  275 #> [14242,]  275 #> [14243,]  275 #> [14244,]  275 #> [14245,]  275 #> [14246,]  275 #> [14247,]  275 #> [14248,]  274 #> [14249,]  275 #> [14250,]  275 #> [14251,]  275 #> [14252,]  275 #> [14253,]  275 #> [14254,]  275 #> [14255,]  275 #> [14256,]  275 #> [14257,]  275 #> [14258,]  275 #> [14259,]  275 #> [14260,]  275 #> [14261,]  275 #> [14262,]  275 #> [14263,]  275 #> [14264,]  275 #> [14265,]  275 #> [14266,]  275 #> [14267,]  275 #> [14268,]  275 #> [14269,]  275 #> [14270,]  274 #> [14271,]  275 #> [14272,]  275 #> [14273,]  275 #> [14274,]  275 #> [14275,]  275 #> [14276,]  275 #> [14277,]  275 #> [14278,]  275 #> [14279,]  275 #> [14280,]  275 #> [14281,]  275 #> [14282,]  275 #> [14283,]  275 #> [14284,]  275 #> [14285,]  275 #> [14286,]  275 #> [14287,]  275 #> [14288,]  275 #> [14289,]  275 #> [14290,]  275 #> [14291,]  275 #> [14292,]  275 #> [14293,]  275 #> [14294,]  275 #> [14295,]  275 #> [14296,]  275 #> [14297,]  275 #> [14298,]  274 #> [14299,]  275 #> [14300,]  275 #> [14301,]  276 #> [14302,]  276 #> [14303,]  276 #> [14304,]  276 #> [14305,]  276 #> [14306,]  276 #> [14307,]  276 #> [14308,]  276 #> [14309,]  277 #> [14310,]  276 #> [14311,]  276 #> [14312,]  276 #> [14313,]  277 #> [14314,]  276 #> [14315,]  276 #> [14316,]  276 #> [14317,]  276 #> [14318,]  277 #> [14319,]  276 #> [14320,]  276 #> [14321,]  276 #> [14322,]  276 #> [14323,]  276 #> [14324,]  276 #> [14325,]  276 #> [14326,]  276 #> [14327,]  276 #> [14328,]  276 #> [14329,]  276 #> [14330,]  276 #> [14331,]  276 #> [14332,]  276 #> [14333,]  276 #> [14334,]  276 #> [14335,]  276 #> [14336,]  276 #> [14337,]  276 #> [14338,]  276 #> [14339,]  276 #> [14340,]  276 #> [14341,]  276 #> [14342,]  277 #> [14343,]  276 #> [14344,]  276 #> [14345,]  276 #> [14346,]  276 #> [14347,]  276 #> [14348,]  276 #> [14349,]  276 #> [14350,]  276 #> [14351,]  277 #> [14352,]  276 #> [14353,]  277 #> [14354,]  276 #> [14355,]  276 #> [14356,]  276 #> [14357,]  276 #> [14358,]  276 #> [14359,]  276 #> [14360,]  276 #> [14361,]  276 #> [14362,]  276 #> [14363,]  276 #> [14364,]  276 #> [14365,]  277 #> [14366,]  276 #> [14367,]  276 #> [14368,]  276 #> [14369,]  276 #> [14370,]  276 #> [14371,]  276 #> [14372,]  276 #> [14373,]  276 #> [14374,]  276 #> [14375,]  276 #> [14376,]  276 #> [14377,]  276 #> [14378,]  276 #> [14379,]  277 #> [14380,]  276 #> [14381,]  276 #> [14382,]  277 #> [14383,]  276 #> [14384,]  277 #> [14385,]  276 #> [14386,]  276 #> [14387,]  276 #> [14388,]  276 #> [14389,]  276 #> [14390,]  276 #> [14391,]  277 #> [14392,]  276 #> [14393,]  277 #> [14394,]  277 #> [14395,]  276 #> [14396,]  276 #> [14397,]  276 #> [14398,]  276 #> [14399,]  276 #> [14400,]  276 #> [14401,]  279 #> [14402,]  279 #> [14403,]  279 #> [14404,]  278 #> [14405,]  279 #> [14406,]  279 #> [14407,]  279 #> [14408,]  278 #> [14409,]  278 #> [14410,]  279 #> [14411,]  278 #> [14412,]  279 #> [14413,]  278 #> [14414,]  279 #> [14415,]  279 #> [14416,]  279 #> [14417,]  278 #> [14418,]  279 #> [14419,]  279 #> [14420,]  279 #> [14421,]  279 #> [14422,]  278 #> [14423,]  279 #> [14424,]  279 #> [14425,]  279 #> [14426,]  279 #> [14427,]  278 #> [14428,]  279 #> [14429,]  279 #> [14430,]  279 #> [14431,]  279 #> [14432,]  279 #> [14433,]  279 #> [14434,]  279 #> [14435,]  278 #> [14436,]  279 #> [14437,]  279 #> [14438,]  279 #> [14439,]  279 #> [14440,]  279 #> [14441,]  279 #> [14442,]  279 #> [14443,]  278 #> [14444,]  278 #> [14445,]  279 #> [14446,]  279 #> [14447,]  279 #> [14448,]  279 #> [14449,]  278 #> [14450,]  279 #> [14451,]  279 #> [14452,]  278 #> [14453,]  279 #> [14454,]  279 #> [14455,]  278 #> [14456,]  279 #> [14457,]  279 #> [14458,]  278 #> [14459,]  279 #> [14460,]  279 #> [14461,]  279 #> [14462,]  279 #> [14463,]  279 #> [14464,]  279 #> [14465,]  279 #> [14466,]  278 #> [14467,]  279 #> [14468,]  279 #> [14469,]  279 #> [14470,]  279 #> [14471,]  279 #> [14472,]  279 #> [14473,]  279 #> [14474,]  279 #> [14475,]  279 #> [14476,]  279 #> [14477,]  279 #> [14478,]  279 #> [14479,]  278 #> [14480,]  278 #> [14481,]  278 #> [14482,]  278 #> [14483,]  278 #> [14484,]  279 #> [14485,]  279 #> [14486,]  279 #> [14487,]  278 #> [14488,]  278 #> [14489,]  278 #> [14490,]  278 #> [14491,]  279 #> [14492,]  278 #> [14493,]  279 #> [14494,]  279 #> [14495,]  278 #> [14496,]  279 #> [14497,]  279 #> [14498,]  279 #> [14499,]  278 #> [14500,]  279 #> [14501,]  280 #> [14502,]  281 #> [14503,]  280 #> [14504,]  280 #> [14505,]  281 #> [14506,]  280 #> [14507,]  281 #> [14508,]  280 #> [14509,]  281 #> [14510,]  281 #> [14511,]  280 #> [14512,]  281 #> [14513,]  281 #> [14514,]  280 #> [14515,]  280 #> [14516,]  280 #> [14517,]  281 #> [14518,]  281 #> [14519,]  280 #> [14520,]  281 #> [14521,]  281 #> [14522,]  281 #> [14523,]  281 #> [14524,]  281 #> [14525,]  281 #> [14526,]  280 #> [14527,]  281 #> [14528,]  280 #> [14529,]  281 #> [14530,]  281 #> [14531,]  281 #> [14532,]  281 #> [14533,]  281 #> [14534,]  280 #> [14535,]  280 #> [14536,]  281 #> [14537,]  280 #> [14538,]  280 #> [14539,]  281 #> [14540,]  281 #> [14541,]  281 #> [14542,]  280 #> [14543,]  280 #> [14544,]  281 #> [14545,]  280 #> [14546,]  280 #> [14547,]  281 #> [14548,]  281 #> [14549,]  280 #> [14550,]  281 #> [14551,]  281 #> [14552,]  280 #> [14553,]  281 #> [14554,]  281 #> [14555,]  280 #> [14556,]  280 #> [14557,]  280 #> [14558,]  281 #> [14559,]  280 #> [14560,]  281 #> [14561,]  281 #> [14562,]  280 #> [14563,]  281 #> [14564,]  280 #> [14565,]  280 #> [14566,]  281 #> [14567,]  280 #> [14568,]  280 #> [14569,]  280 #> [14570,]  281 #> [14571,]  281 #> [14572,]  280 #> [14573,]  280 #> [14574,]  281 #> [14575,]  281 #> [14576,]  281 #> [14577,]  280 #> [14578,]  281 #> [14579,]  280 #> [14580,]  281 #> [14581,]  281 #> [14582,]  280 #> [14583,]  281 #> [14584,]  281 #> [14585,]  280 #> [14586,]  281 #> [14587,]  281 #> [14588,]  281 #> [14589,]  280 #> [14590,]  281 #> [14591,]  280 #> [14592,]  281 #> [14593,]  281 #> [14594,]  280 #> [14595,]  281 #> [14596,]  280 #> [14597,]  280 #> [14598,]  280 #> [14599,]  281 #> [14600,]  280 #> [14601,]  283 #> [14602,]  282 #> [14603,]  283 #> [14604,]  283 #> [14605,]  283 #> [14606,]  282 #> [14607,]  283 #> [14608,]  283 #> [14609,]  283 #> [14610,]  283 #> [14611,]  282 #> [14612,]  282 #> [14613,]  283 #> [14614,]  283 #> [14615,]  282 #> [14616,]  283 #> [14617,]  282 #> [14618,]  283 #> [14619,]  283 #> [14620,]  283 #> [14621,]  283 #> [14622,]  283 #> [14623,]  282 #> [14624,]  283 #> [14625,]  283 #> [14626,]  283 #> [14627,]  283 #> [14628,]  283 #> [14629,]  282 #> [14630,]  282 #> [14631,]  282 #> [14632,]  283 #> [14633,]  283 #> [14634,]  282 #> [14635,]  282 #> [14636,]  283 #> [14637,]  282 #> [14638,]  283 #> [14639,]  283 #> [14640,]  283 #> [14641,]  283 #> [14642,]  282 #> [14643,]  282 #> [14644,]  282 #> [14645,]  283 #> [14646,]  283 #> [14647,]  282 #> [14648,]  282 #> [14649,]  283 #> [14650,]  283 #> [14651,]  283 #> [14652,]  283 #> [14653,]  283 #> [14654,]  283 #> [14655,]  283 #> [14656,]  282 #> [14657,]  283 #> [14658,]  283 #> [14659,]  283 #> [14660,]  282 #> [14661,]  282 #> [14662,]  283 #> [14663,]  282 #> [14664,]  282 #> [14665,]  282 #> [14666,]  282 #> [14667,]  283 #> [14668,]  283 #> [14669,]  283 #> [14670,]  282 #> [14671,]  283 #> [14672,]  283 #> [14673,]  283 #> [14674,]  283 #> [14675,]  282 #> [14676,]  283 #> [14677,]  283 #> [14678,]  282 #> [14679,]  282 #> [14680,]  283 #> [14681,]  282 #> [14682,]  283 #> [14683,]  283 #> [14684,]  283 #> [14685,]  283 #> [14686,]  283 #> [14687,]  283 #> [14688,]  283 #> [14689,]  283 #> [14690,]  283 #> [14691,]  283 #> [14692,]  282 #> [14693,]  283 #> [14694,]  282 #> [14695,]  282 #> [14696,]  283 #> [14697,]  283 #> [14698,]  283 #> [14699,]  283 #> [14700,]  282 #> [14701,]  284 #> [14702,]  284 #> [14703,]  284 #> [14704,]  284 #> [14705,]  284 #> [14706,]  284 #> [14707,]  284 #> [14708,]  285 #> [14709,]  285 #> [14710,]  284 #> [14711,]  284 #> [14712,]  284 #> [14713,]  284 #> [14714,]  284 #> [14715,]  284 #> [14716,]  284 #> [14717,]  284 #> [14718,]  284 #> [14719,]  284 #> [14720,]  284 #> [14721,]  284 #> [14722,]  284 #> [14723,]  284 #> [14724,]  284 #> [14725,]  284 #> [14726,]  285 #> [14727,]  284 #> [14728,]  284 #> [14729,]  284 #> [14730,]  284 #> [14731,]  284 #> [14732,]  284 #> [14733,]  284 #> [14734,]  284 #> [14735,]  284 #> [14736,]  284 #> [14737,]  284 #> [14738,]  284 #> [14739,]  284 #> [14740,]  284 #> [14741,]  284 #> [14742,]  284 #> [14743,]  285 #> [14744,]  284 #> [14745,]  284 #> [14746,]  285 #> [14747,]  284 #> [14748,]  284 #> [14749,]  284 #> [14750,]  284 #> [14751,]  284 #> [14752,]  284 #> [14753,]  284 #> [14754,]  284 #> [14755,]  284 #> [14756,]  285 #> [14757,]  284 #> [14758,]  284 #> [14759,]  284 #> [14760,]  284 #> [14761,]  285 #> [14762,]  284 #> [14763,]  284 #> [14764,]  285 #> [14765,]  284 #> [14766,]  284 #> [14767,]  284 #> [14768,]  284 #> [14769,]  284 #> [14770,]  284 #> [14771,]  284 #> [14772,]  284 #> [14773,]  284 #> [14774,]  284 #> [14775,]  284 #> [14776,]  285 #> [14777,]  284 #> [14778,]  284 #> [14779,]  284 #> [14780,]  284 #> [14781,]  284 #> [14782,]  284 #> [14783,]  284 #> [14784,]  284 #> [14785,]  284 #> [14786,]  284 #> [14787,]  284 #> [14788,]  284 #> [14789,]  284 #> [14790,]  284 #> [14791,]  284 #> [14792,]  284 #> [14793,]  284 #> [14794,]  285 #> [14795,]  284 #> [14796,]  284 #> [14797,]  284 #> [14798,]  284 #> [14799,]  284 #> [14800,]  284 #> [14801,]  286 #> [14802,]  286 #> [14803,]  286 #> [14804,]  286 #> [14805,]  286 #> [14806,]  286 #> [14807,]  286 #> [14808,]  286 #> [14809,]  286 #> [14810,]  287 #> [14811,]  286 #> [14812,]  286 #> [14813,]  286 #> [14814,]  286 #> [14815,]  286 #> [14816,]  286 #> [14817,]  286 #> [14818,]  287 #> [14819,]  286 #> [14820,]  286 #> [14821,]  286 #> [14822,]  286 #> [14823,]  286 #> [14824,]  286 #> [14825,]  287 #> [14826,]  286 #> [14827,]  286 #> [14828,]  286 #> [14829,]  286 #> [14830,]  286 #> [14831,]  286 #> [14832,]  286 #> [14833,]  286 #> [14834,]  286 #> [14835,]  286 #> [14836,]  286 #> [14837,]  286 #> [14838,]  286 #> [14839,]  287 #> [14840,]  286 #> [14841,]  286 #> [14842,]  286 #> [14843,]  287 #> [14844,]  286 #> [14845,]  287 #> [14846,]  286 #> [14847,]  286 #> [14848,]  286 #> [14849,]  286 #> [14850,]  286 #> [14851,]  286 #> [14852,]  286 #> [14853,]  286 #> [14854,]  286 #> [14855,]  286 #> [14856,]  286 #> [14857,]  286 #> [14858,]  286 #> [14859,]  286 #> [14860,]  286 #> [14861,]  286 #> [14862,]  286 #> [14863,]  286 #> [14864,]  286 #> [14865,]  286 #> [14866,]  286 #> [14867,]  286 #> [14868,]  286 #> [14869,]  286 #> [14870,]  286 #> [14871,]  286 #> [14872,]  286 #> [14873,]  287 #> [14874,]  287 #> [14875,]  287 #> [14876,]  287 #> [14877,]  287 #> [14878,]  286 #> [14879,]  286 #> [14880,]  286 #> [14881,]  286 #> [14882,]  286 #> [14883,]  286 #> [14884,]  286 #> [14885,]  286 #> [14886,]  286 #> [14887,]  286 #> [14888,]  286 #> [14889,]  286 #> [14890,]  286 #> [14891,]  286 #> [14892,]  286 #> [14893,]  286 #> [14894,]  286 #> [14895,]  286 #> [14896,]  286 #> [14897,]  286 #> [14898,]  286 #> [14899,]  286 #> [14900,]  286 #> [14901,]  288 #> [14902,]  288 #> [14903,]  288 #> [14904,]  289 #> [14905,]  288 #> [14906,]  288 #> [14907,]  289 #> [14908,]  288 #> [14909,]  288 #> [14910,]  289 #> [14911,]  288 #> [14912,]  288 #> [14913,]  288 #> [14914,]  288 #> [14915,]  288 #> [14916,]  289 #> [14917,]  288 #> [14918,]  288 #> [14919,]  288 #> [14920,]  289 #> [14921,]  288 #> [14922,]  288 #> [14923,]  288 #> [14924,]  289 #> [14925,]  288 #> [14926,]  288 #> [14927,]  288 #> [14928,]  289 #> [14929,]  288 #> [14930,]  288 #> [14931,]  288 #> [14932,]  288 #> [14933,]  288 #> [14934,]  288 #> [14935,]  288 #> [14936,]  288 #> [14937,]  288 #> [14938,]  288 #> [14939,]  288 #> [14940,]  288 #> [14941,]  288 #> [14942,]  288 #> [14943,]  288 #> [14944,]  288 #> [14945,]  288 #> [14946,]  288 #> [14947,]  288 #> [14948,]  288 #> [14949,]  288 #> [14950,]  289 #> [14951,]  288 #> [14952,]  289 #> [14953,]  288 #> [14954,]  289 #> [14955,]  288 #> [14956,]  288 #> [14957,]  288 #> [14958,]  288 #> [14959,]  288 #> [14960,]  288 #> [14961,]  288 #> [14962,]  288 #> [14963,]  288 #> [14964,]  288 #> [14965,]  288 #> [14966,]  288 #> [14967,]  288 #> [14968,]  288 #> [14969,]  288 #> [14970,]  288 #> [14971,]  288 #> [14972,]  288 #> [14973,]  289 #> [14974,]  288 #> [14975,]  288 #> [14976,]  289 #> [14977,]  288 #> [14978,]  288 #> [14979,]  288 #> [14980,]  288 #> [14981,]  288 #> [14982,]  288 #> [14983,]  288 #> [14984,]  288 #> [14985,]  288 #> [14986,]  289 #> [14987,]  288 #> [14988,]  288 #> [14989,]  288 #> [14990,]  288 #> [14991,]  289 #> [14992,]  288 #> [14993,]  288 #> [14994,]  288 #> [14995,]  288 #> [14996,]  288 #> [14997,]  288 #> [14998,]  288 #> [14999,]  288 #> [15000,]  288 #> [15001,]  290 #> [15002,]  291 #> [15003,]  291 #> [15004,]  290 #> [15005,]  290 #> [15006,]  291 #> [15007,]  291 #> [15008,]  290 #> [15009,]  290 #> [15010,]  290 #> [15011,]  290 #> [15012,]  291 #> [15013,]  290 #> [15014,]  290 #> [15015,]  290 #> [15016,]  290 #> [15017,]  290 #> [15018,]  291 #> [15019,]  291 #> [15020,]  291 #> [15021,]  290 #> [15022,]  290 #> [15023,]  291 #> [15024,]  290 #> [15025,]  291 #> [15026,]  290 #> [15027,]  290 #> [15028,]  291 #> [15029,]  290 #> [15030,]  290 #> [15031,]  291 #> [15032,]  291 #> [15033,]  291 #> [15034,]  291 #> [15035,]  290 #> [15036,]  290 #> [15037,]  290 #> [15038,]  290 #> [15039,]  290 #> [15040,]  291 #> [15041,]  290 #> [15042,]  291 #> [15043,]  290 #> [15044,]  290 #> [15045,]  290 #> [15046,]  290 #> [15047,]  290 #> [15048,]  290 #> [15049,]  290 #> [15050,]  290 #> [15051,]  290 #> [15052,]  290 #> [15053,]  290 #> [15054,]  290 #> [15055,]  290 #> [15056,]  291 #> [15057,]  290 #> [15058,]  290 #> [15059,]  290 #> [15060,]  291 #> [15061,]  290 #> [15062,]  290 #> [15063,]  290 #> [15064,]  291 #> [15065,]  291 #> [15066,]  290 #> [15067,]  290 #> [15068,]  290 #> [15069,]  290 #> [15070,]  291 #> [15071,]  291 #> [15072,]  290 #> [15073,]  291 #> [15074,]  290 #> [15075,]  290 #> [15076,]  290 #> [15077,]  290 #> [15078,]  290 #> [15079,]  290 #> [15080,]  290 #> [15081,]  290 #> [15082,]  290 #> [15083,]  290 #> [15084,]  291 #> [15085,]  290 #> [15086,]  290 #> [15087,]  290 #> [15088,]  290 #> [15089,]  290 #> [15090,]  290 #> [15091,]  290 #> [15092,]  290 #> [15093,]  291 #> [15094,]  290 #> [15095,]  290 #> [15096,]  290 #> [15097,]  291 #> [15098,]  291 #> [15099,]  290 #> [15100,]  291 #> [15101,]  293 #> [15102,]  293 #> [15103,]  292 #> [15104,]  293 #> [15105,]  293 #> [15106,]  293 #> [15107,]  292 #> [15108,]  292 #> [15109,]  293 #> [15110,]  293 #> [15111,]  293 #> [15112,]  293 #> [15113,]  293 #> [15114,]  293 #> [15115,]  293 #> [15116,]  293 #> [15117,]  293 #> [15118,]  293 #> [15119,]  293 #> [15120,]  292 #> [15121,]  293 #> [15122,]  293 #> [15123,]  293 #> [15124,]  293 #> [15125,]  292 #> [15126,]  293 #> [15127,]  293 #> [15128,]  293 #> [15129,]  293 #> [15130,]  293 #> [15131,]  293 #> [15132,]  293 #> [15133,]  293 #> [15134,]  293 #> [15135,]  293 #> [15136,]  293 #> [15137,]  293 #> [15138,]  293 #> [15139,]  292 #> [15140,]  293 #> [15141,]  293 #> [15142,]  293 #> [15143,]  293 #> [15144,]  292 #> [15145,]  293 #> [15146,]  292 #> [15147,]  293 #> [15148,]  293 #> [15149,]  292 #> [15150,]  292 #> [15151,]  293 #> [15152,]  293 #> [15153,]  292 #> [15154,]  293 #> [15155,]  292 #> [15156,]  292 #> [15157,]  293 #> [15158,]  293 #> [15159,]  292 #> [15160,]  293 #> [15161,]  293 #> [15162,]  293 #> [15163,]  293 #> [15164,]  293 #> [15165,]  292 #> [15166,]  292 #> [15167,]  293 #> [15168,]  293 #> [15169,]  293 #> [15170,]  292 #> [15171,]  293 #> [15172,]  292 #> [15173,]  293 #> [15174,]  293 #> [15175,]  293 #> [15176,]  293 #> [15177,]  293 #> [15178,]  293 #> [15179,]  293 #> [15180,]  293 #> [15181,]  293 #> [15182,]  293 #> [15183,]  293 #> [15184,]  292 #> [15185,]  293 #> [15186,]  292 #> [15187,]  293 #> [15188,]  293 #> [15189,]  293 #> [15190,]  292 #> [15191,]  293 #> [15192,]  293 #> [15193,]  293 #> [15194,]  293 #> [15195,]  293 #> [15196,]  293 #> [15197,]  293 #> [15198,]  292 #> [15199,]  293 #> [15200,]  292 #> [15201,]  295 #> [15202,]  294 #> [15203,]  294 #> [15204,]  295 #> [15205,]  295 #> [15206,]  295 #> [15207,]  294 #> [15208,]  295 #> [15209,]  295 #> [15210,]  294 #> [15211,]  295 #> [15212,]  295 #> [15213,]  294 #> [15214,]  295 #> [15215,]  295 #> [15216,]  294 #> [15217,]  294 #> [15218,]  294 #> [15219,]  294 #> [15220,]  295 #> [15221,]  294 #> [15222,]  294 #> [15223,]  294 #> [15224,]  294 #> [15225,]  294 #> [15226,]  295 #> [15227,]  295 #> [15228,]  295 #> [15229,]  294 #> [15230,]  294 #> [15231,]  294 #> [15232,]  294 #> [15233,]  295 #> [15234,]  294 #> [15235,]  294 #> [15236,]  294 #> [15237,]  294 #> [15238,]  295 #> [15239,]  294 #> [15240,]  294 #> [15241,]  295 #> [15242,]  295 #> [15243,]  295 #> [15244,]  294 #> [15245,]  295 #> [15246,]  295 #> [15247,]  294 #> [15248,]  294 #> [15249,]  294 #> [15250,]  295 #> [15251,]  295 #> [15252,]  295 #> [15253,]  295 #> [15254,]  294 #> [15255,]  295 #> [15256,]  295 #> [15257,]  295 #> [15258,]  295 #> [15259,]  294 #> [15260,]  295 #> [15261,]  295 #> [15262,]  294 #> [15263,]  295 #> [15264,]  295 #> [15265,]  295 #> [15266,]  295 #> [15267,]  295 #> [15268,]  295 #> [15269,]  295 #> [15270,]  294 #> [15271,]  295 #> [15272,]  295 #> [15273,]  295 #> [15274,]  295 #> [15275,]  295 #> [15276,]  295 #> [15277,]  294 #> [15278,]  295 #> [15279,]  294 #> [15280,]  294 #> [15281,]  295 #> [15282,]  295 #> [15283,]  294 #> [15284,]  295 #> [15285,]  294 #> [15286,]  294 #> [15287,]  295 #> [15288,]  295 #> [15289,]  295 #> [15290,]  295 #> [15291,]  295 #> [15292,]  295 #> [15293,]  294 #> [15294,]  295 #> [15295,]  294 #> [15296,]  295 #> [15297,]  295 #> [15298,]  294 #> [15299,]  295 #> [15300,]  294 #> [15301,]  296 #> [15302,]  297 #> [15303,]  297 #> [15304,]  296 #> [15305,]  297 #> [15306,]  297 #> [15307,]  297 #> [15308,]  296 #> [15309,]  296 #> [15310,]  297 #> [15311,]  296 #> [15312,]  297 #> [15313,]  296 #> [15314,]  297 #> [15315,]  297 #> [15316,]  297 #> [15317,]  296 #> [15318,]  297 #> [15319,]  297 #> [15320,]  297 #> [15321,]  297 #> [15322,]  296 #> [15323,]  297 #> [15324,]  297 #> [15325,]  297 #> [15326,]  297 #> [15327,]  296 #> [15328,]  297 #> [15329,]  297 #> [15330,]  296 #> [15331,]  297 #> [15332,]  297 #> [15333,]  297 #> [15334,]  297 #> [15335,]  296 #> [15336,]  297 #> [15337,]  297 #> [15338,]  297 #> [15339,]  297 #> [15340,]  297 #> [15341,]  297 #> [15342,]  297 #> [15343,]  296 #> [15344,]  296 #> [15345,]  297 #> [15346,]  296 #> [15347,]  297 #> [15348,]  297 #> [15349,]  296 #> [15350,]  297 #> [15351,]  297 #> [15352,]  296 #> [15353,]  297 #> [15354,]  296 #> [15355,]  296 #> [15356,]  297 #> [15357,]  297 #> [15358,]  296 #> [15359,]  297 #> [15360,]  297 #> [15361,]  297 #> [15362,]  297 #> [15363,]  297 #> [15364,]  297 #> [15365,]  297 #> [15366,]  296 #> [15367,]  297 #> [15368,]  297 #> [15369,]  296 #> [15370,]  297 #> [15371,]  297 #> [15372,]  297 #> [15373,]  297 #> [15374,]  297 #> [15375,]  297 #> [15376,]  297 #> [15377,]  297 #> [15378,]  297 #> [15379,]  296 #> [15380,]  296 #> [15381,]  296 #> [15382,]  296 #> [15383,]  296 #> [15384,]  297 #> [15385,]  297 #> [15386,]  297 #> [15387,]  296 #> [15388,]  296 #> [15389,]  296 #> [15390,]  296 #> [15391,]  297 #> [15392,]  296 #> [15393,]  297 #> [15394,]  297 #> [15395,]  296 #> [15396,]  296 #> [15397,]  297 #> [15398,]  297 #> [15399,]  296 #> [15400,]  297 #> [15401,]  298 #> [15402,]  298 #> [15403,]  298 #> [15404,]  298 #> [15405,]  298 #> [15406,]  298 #> [15407,]  299 #> [15408,]  298 #> [15409,]  298 #> [15410,]  299 #> [15411,]  298 #> [15412,]  298 #> [15413,]  298 #> [15414,]  298 #> [15415,]  298 #> [15416,]  299 #> [15417,]  298 #> [15418,]  298 #> [15419,]  298 #> [15420,]  299 #> [15421,]  298 #> [15422,]  298 #> [15423,]  298 #> [15424,]  299 #> [15425,]  298 #> [15426,]  298 #> [15427,]  298 #> [15428,]  299 #> [15429,]  298 #> [15430,]  298 #> [15431,]  298 #> [15432,]  298 #> [15433,]  298 #> [15434,]  298 #> [15435,]  298 #> [15436,]  298 #> [15437,]  298 #> [15438,]  298 #> [15439,]  298 #> [15440,]  298 #> [15441,]  298 #> [15442,]  298 #> [15443,]  298 #> [15444,]  298 #> [15445,]  298 #> [15446,]  298 #> [15447,]  298 #> [15448,]  298 #> [15449,]  298 #> [15450,]  299 #> [15451,]  298 #> [15452,]  299 #> [15453,]  298 #> [15454,]  299 #> [15455,]  298 #> [15456,]  298 #> [15457,]  298 #> [15458,]  298 #> [15459,]  298 #> [15460,]  298 #> [15461,]  298 #> [15462,]  298 #> [15463,]  298 #> [15464,]  298 #> [15465,]  298 #> [15466,]  298 #> [15467,]  298 #> [15468,]  298 #> [15469,]  298 #> [15470,]  298 #> [15471,]  298 #> [15472,]  298 #> [15473,]  298 #> [15474,]  298 #> [15475,]  298 #> [15476,]  299 #> [15477,]  298 #> [15478,]  298 #> [15479,]  298 #> [15480,]  298 #> [15481,]  298 #> [15482,]  298 #> [15483,]  298 #> [15484,]  298 #> [15485,]  298 #> [15486,]  299 #> [15487,]  298 #> [15488,]  298 #> [15489,]  298 #> [15490,]  298 #> [15491,]  299 #> [15492,]  298 #> [15493,]  298 #> [15494,]  298 #> [15495,]  298 #> [15496,]  298 #> [15497,]  298 #> [15498,]  298 #> [15499,]  298 #> [15500,]  298 #> [15501,]  301 #> [15502,]  301 #> [15503,]  301 #> [15504,]  300 #> [15505,]  301 #> [15506,]  301 #> [15507,]  301 #> [15508,]  300 #> [15509,]  300 #> [15510,]  300 #> [15511,]  301 #> [15512,]  301 #> [15513,]  301 #> [15514,]  301 #> [15515,]  301 #> [15516,]  301 #> [15517,]  301 #> [15518,]  301 #> [15519,]  301 #> [15520,]  301 #> [15521,]  301 #> [15522,]  301 #> [15523,]  301 #> [15524,]  301 #> [15525,]  301 #> [15526,]  301 #> [15527,]  301 #> [15528,]  301 #> [15529,]  301 #> [15530,]  301 #> [15531,]  301 #> [15532,]  301 #> [15533,]  301 #> [15534,]  301 #> [15535,]  301 #> [15536,]  301 #> [15537,]  301 #> [15538,]  301 #> [15539,]  301 #> [15540,]  301 #> [15541,]  301 #> [15542,]  301 #> [15543,]  300 #> [15544,]  301 #> [15545,]  301 #> [15546,]  301 #> [15547,]  301 #> [15548,]  301 #> [15549,]  301 #> [15550,]  301 #> [15551,]  300 #> [15552,]  301 #> [15553,]  301 #> [15554,]  301 #> [15555,]  301 #> [15556,]  301 #> [15557,]  301 #> [15558,]  301 #> [15559,]  301 #> [15560,]  300 #> [15561,]  301 #> [15562,]  301 #> [15563,]  301 #> [15564,]  301 #> [15565,]  301 #> [15566,]  301 #> [15567,]  301 #> [15568,]  301 #> [15569,]  301 #> [15570,]  301 #> [15571,]  301 #> [15572,]  301 #> [15573,]  301 #> [15574,]  301 #> [15575,]  301 #> [15576,]  301 #> [15577,]  301 #> [15578,]  301 #> [15579,]  301 #> [15580,]  301 #> [15581,]  301 #> [15582,]  301 #> [15583,]  301 #> [15584,]  301 #> [15585,]  300 #> [15586,]  301 #> [15587,]  301 #> [15588,]  301 #> [15589,]  301 #> [15590,]  301 #> [15591,]  300 #> [15592,]  301 #> [15593,]  301 #> [15594,]  301 #> [15595,]  300 #> [15596,]  301 #> [15597,]  301 #> [15598,]  301 #> [15599,]  301 #> [15600,]  301 #> [15601,]  303 #> [15602,]  303 #> [15603,]  303 #> [15604,]  302 #> [15605,]  303 #> [15606,]  303 #> [15607,]  303 #> [15608,]  302 #> [15609,]  302 #> [15610,]  303 #> [15611,]  302 #> [15612,]  303 #> [15613,]  302 #> [15614,]  303 #> [15615,]  303 #> [15616,]  303 #> [15617,]  302 #> [15618,]  303 #> [15619,]  303 #> [15620,]  303 #> [15621,]  303 #> [15622,]  302 #> [15623,]  303 #> [15624,]  303 #> [15625,]  303 #> [15626,]  303 #> [15627,]  302 #> [15628,]  303 #> [15629,]  303 #> [15630,]  302 #> [15631,]  303 #> [15632,]  303 #> [15633,]  303 #> [15634,]  303 #> [15635,]  302 #> [15636,]  303 #> [15637,]  303 #> [15638,]  303 #> [15639,]  303 #> [15640,]  303 #> [15641,]  303 #> [15642,]  303 #> [15643,]  302 #> [15644,]  302 #> [15645,]  303 #> [15646,]  303 #> [15647,]  303 #> [15648,]  303 #> [15649,]  302 #> [15650,]  303 #> [15651,]  303 #> [15652,]  302 #> [15653,]  303 #> [15654,]  302 #> [15655,]  302 #> [15656,]  303 #> [15657,]  303 #> [15658,]  302 #> [15659,]  303 #> [15660,]  303 #> [15661,]  303 #> [15662,]  303 #> [15663,]  303 #> [15664,]  303 #> [15665,]  303 #> [15666,]  302 #> [15667,]  303 #> [15668,]  303 #> [15669,]  302 #> [15670,]  303 #> [15671,]  303 #> [15672,]  303 #> [15673,]  303 #> [15674,]  303 #> [15675,]  303 #> [15676,]  303 #> [15677,]  303 #> [15678,]  303 #> [15679,]  302 #> [15680,]  302 #> [15681,]  302 #> [15682,]  302 #> [15683,]  302 #> [15684,]  303 #> [15685,]  303 #> [15686,]  303 #> [15687,]  302 #> [15688,]  302 #> [15689,]  302 #> [15690,]  302 #> [15691,]  303 #> [15692,]  302 #> [15693,]  303 #> [15694,]  303 #> [15695,]  302 #> [15696,]  302 #> [15697,]  303 #> [15698,]  303 #> [15699,]  302 #> [15700,]  303 #> [15701,]  304 #> [15702,]  304 #> [15703,]  304 #> [15704,]  304 #> [15705,]  304 #> [15706,]  304 #> [15707,]  304 #> [15708,]  304 #> [15709,]  304 #> [15710,]  305 #> [15711,]  304 #> [15712,]  304 #> [15713,]  304 #> [15714,]  304 #> [15715,]  304 #> [15716,]  304 #> [15717,]  304 #> [15718,]  305 #> [15719,]  304 #> [15720,]  304 #> [15721,]  304 #> [15722,]  304 #> [15723,]  304 #> [15724,]  304 #> [15725,]  305 #> [15726,]  304 #> [15727,]  304 #> [15728,]  304 #> [15729,]  304 #> [15730,]  304 #> [15731,]  304 #> [15732,]  304 #> [15733,]  304 #> [15734,]  304 #> [15735,]  304 #> [15736,]  304 #> [15737,]  304 #> [15738,]  304 #> [15739,]  305 #> [15740,]  304 #> [15741,]  304 #> [15742,]  304 #> [15743,]  305 #> [15744,]  304 #> [15745,]  305 #> [15746,]  304 #> [15747,]  304 #> [15748,]  304 #> [15749,]  304 #> [15750,]  304 #> [15751,]  304 #> [15752,]  304 #> [15753,]  304 #> [15754,]  304 #> [15755,]  304 #> [15756,]  304 #> [15757,]  304 #> [15758,]  304 #> [15759,]  304 #> [15760,]  304 #> [15761,]  304 #> [15762,]  304 #> [15763,]  304 #> [15764,]  304 #> [15765,]  304 #> [15766,]  304 #> [15767,]  304 #> [15768,]  304 #> [15769,]  304 #> [15770,]  304 #> [15771,]  304 #> [15772,]  304 #> [15773,]  305 #> [15774,]  304 #> [15775,]  305 #> [15776,]  304 #> [15777,]  305 #> [15778,]  304 #> [15779,]  304 #> [15780,]  304 #> [15781,]  304 #> [15782,]  304 #> [15783,]  304 #> [15784,]  304 #> [15785,]  304 #> [15786,]  304 #> [15787,]  304 #> [15788,]  304 #> [15789,]  304 #> [15790,]  304 #> [15791,]  304 #> [15792,]  304 #> [15793,]  304 #> [15794,]  304 #> [15795,]  304 #> [15796,]  304 #> [15797,]  304 #> [15798,]  304 #> [15799,]  304 #> [15800,]  304 #> [15801,]  307 #> [15802,]  307 #> [15803,]  307 #> [15804,]  306 #> [15805,]  307 #> [15806,]  307 #> [15807,]  307 #> [15808,]  306 #> [15809,]  306 #> [15810,]  306 #> [15811,]  307 #> [15812,]  307 #> [15813,]  307 #> [15814,]  307 #> [15815,]  307 #> [15816,]  307 #> [15817,]  307 #> [15818,]  307 #> [15819,]  307 #> [15820,]  307 #> [15821,]  307 #> [15822,]  307 #> [15823,]  307 #> [15824,]  307 #> [15825,]  307 #> [15826,]  307 #> [15827,]  307 #> [15828,]  307 #> [15829,]  307 #> [15830,]  307 #> [15831,]  307 #> [15832,]  307 #> [15833,]  307 #> [15834,]  307 #> [15835,]  307 #> [15836,]  307 #> [15837,]  307 #> [15838,]  307 #> [15839,]  307 #> [15840,]  307 #> [15841,]  307 #> [15842,]  307 #> [15843,]  307 #> [15844,]  307 #> [15845,]  307 #> [15846,]  307 #> [15847,]  307 #> [15848,]  307 #> [15849,]  307 #> [15850,]  307 #> [15851,]  307 #> [15852,]  307 #> [15853,]  307 #> [15854,]  307 #> [15855,]  307 #> [15856,]  307 #> [15857,]  307 #> [15858,]  307 #> [15859,]  307 #> [15860,]  307 #> [15861,]  307 #> [15862,]  307 #> [15863,]  307 #> [15864,]  307 #> [15865,]  307 #> [15866,]  307 #> [15867,]  307 #> [15868,]  307 #> [15869,]  307 #> [15870,]  307 #> [15871,]  307 #> [15872,]  307 #> [15873,]  307 #> [15874,]  307 #> [15875,]  307 #> [15876,]  307 #> [15877,]  307 #> [15878,]  307 #> [15879,]  307 #> [15880,]  307 #> [15881,]  307 #> [15882,]  307 #> [15883,]  307 #> [15884,]  307 #> [15885,]  307 #> [15886,]  307 #> [15887,]  307 #> [15888,]  307 #> [15889,]  307 #> [15890,]  307 #> [15891,]  306 #> [15892,]  307 #> [15893,]  307 #> [15894,]  307 #> [15895,]  306 #> [15896,]  307 #> [15897,]  307 #> [15898,]  307 #> [15899,]  307 #> [15900,]  307 #> [15901,]  308 #> [15902,]  308 #> [15903,]  308 #> [15904,]  309 #> [15905,]  308 #> [15906,]  308 #> [15907,]  309 #> [15908,]  308 #> [15909,]  309 #> [15910,]  309 #> [15911,]  308 #> [15912,]  308 #> [15913,]  309 #> [15914,]  309 #> [15915,]  308 #> [15916,]  309 #> [15917,]  308 #> [15918,]  308 #> [15919,]  308 #> [15920,]  309 #> [15921,]  308 #> [15922,]  309 #> [15923,]  308 #> [15924,]  309 #> [15925,]  309 #> [15926,]  308 #> [15927,]  308 #> [15928,]  309 #> [15929,]  308 #> [15930,]  308 #> [15931,]  308 #> [15932,]  308 #> [15933,]  308 #> [15934,]  308 #> [15935,]  308 #> [15936,]  309 #> [15937,]  308 #> [15938,]  308 #> [15939,]  309 #> [15940,]  308 #> [15941,]  308 #> [15942,]  308 #> [15943,]  308 #> [15944,]  308 #> [15945,]  308 #> [15946,]  308 #> [15947,]  308 #> [15948,]  308 #> [15949,]  308 #> [15950,]  309 #> [15951,]  308 #> [15952,]  309 #> [15953,]  308 #> [15954,]  309 #> [15955,]  309 #> [15956,]  308 #> [15957,]  309 #> [15958,]  308 #> [15959,]  309 #> [15960,]  308 #> [15961,]  308 #> [15962,]  308 #> [15963,]  308 #> [15964,]  308 #> [15965,]  308 #> [15966,]  308 #> [15967,]  309 #> [15968,]  308 #> [15969,]  308 #> [15970,]  308 #> [15971,]  308 #> [15972,]  308 #> [15973,]  309 #> [15974,]  308 #> [15975,]  308 #> [15976,]  309 #> [15977,]  308 #> [15978,]  308 #> [15979,]  308 #> [15980,]  308 #> [15981,]  308 #> [15982,]  308 #> [15983,]  308 #> [15984,]  308 #> [15985,]  308 #> [15986,]  309 #> [15987,]  308 #> [15988,]  308 #> [15989,]  308 #> [15990,]  309 #> [15991,]  309 #> [15992,]  308 #> [15993,]  308 #> [15994,]  308 #> [15995,]  308 #> [15996,]  308 #> [15997,]  308 #> [15998,]  308 #> [15999,]  308 #> [16000,]  308 #> [16001,]  310 #> [16002,]  311 #> [16003,]  310 #> [16004,]  311 #> [16005,]  311 #> [16006,]  310 #> [16007,]  311 #> [16008,]  311 #> [16009,]  311 #> [16010,]  311 #> [16011,]  310 #> [16012,]  311 #> [16013,]  311 #> [16014,]  311 #> [16015,]  311 #> [16016,]  310 #> [16017,]  311 #> [16018,]  311 #> [16019,]  310 #> [16020,]  311 #> [16021,]  311 #> [16022,]  311 #> [16023,]  311 #> [16024,]  311 #> [16025,]  311 #> [16026,]  311 #> [16027,]  311 #> [16028,]  310 #> [16029,]  311 #> [16030,]  311 #> [16031,]  311 #> [16032,]  311 #> [16033,]  311 #> [16034,]  310 #> [16035,]  310 #> [16036,]  311 #> [16037,]  310 #> [16038,]  310 #> [16039,]  311 #> [16040,]  311 #> [16041,]  311 #> [16042,]  311 #> [16043,]  311 #> [16044,]  311 #> [16045,]  310 #> [16046,]  311 #> [16047,]  311 #> [16048,]  311 #> [16049,]  310 #> [16050,]  311 #> [16051,]  311 #> [16052,]  310 #> [16053,]  311 #> [16054,]  311 #> [16055,]  311 #> [16056,]  311 #> [16057,]  311 #> [16058,]  311 #> [16059,]  311 #> [16060,]  311 #> [16061,]  311 #> [16062,]  311 #> [16063,]  311 #> [16064,]  310 #> [16065,]  311 #> [16066,]  311 #> [16067,]  311 #> [16068,]  310 #> [16069,]  311 #> [16070,]  311 #> [16071,]  311 #> [16072,]  310 #> [16073,]  310 #> [16074,]  311 #> [16075,]  311 #> [16076,]  311 #> [16077,]  310 #> [16078,]  311 #> [16079,]  311 #> [16080,]  311 #> [16081,]  311 #> [16082,]  311 #> [16083,]  311 #> [16084,]  311 #> [16085,]  311 #> [16086,]  311 #> [16087,]  311 #> [16088,]  311 #> [16089,]  311 #> [16090,]  311 #> [16091,]  311 #> [16092,]  311 #> [16093,]  311 #> [16094,]  310 #> [16095,]  311 #> [16096,]  310 #> [16097,]  310 #> [16098,]  311 #> [16099,]  311 #> [16100,]  310 #> [16101,]  313 #> [16102,]  313 #> [16103,]  313 #> [16104,]  313 #> [16105,]  313 #> [16106,]  313 #> [16107,]  313 #> [16108,]  313 #> [16109,]  313 #> [16110,]  313 #> [16111,]  313 #> [16112,]  313 #> [16113,]  313 #> [16114,]  313 #> [16115,]  313 #> [16116,]  313 #> [16117,]  313 #> [16118,]  313 #> [16119,]  313 #> [16120,]  312 #> [16121,]  312 #> [16122,]  313 #> [16123,]  313 #> [16124,]  313 #> [16125,]  312 #> [16126,]  313 #> [16127,]  313 #> [16128,]  313 #> [16129,]  313 #> [16130,]  313 #> [16131,]  313 #> [16132,]  313 #> [16133,]  313 #> [16134,]  313 #> [16135,]  313 #> [16136,]  313 #> [16137,]  313 #> [16138,]  313 #> [16139,]  313 #> [16140,]  313 #> [16141,]  313 #> [16142,]  313 #> [16143,]  313 #> [16144,]  313 #> [16145,]  313 #> [16146,]  313 #> [16147,]  313 #> [16148,]  313 #> [16149,]  313 #> [16150,]  313 #> [16151,]  313 #> [16152,]  313 #> [16153,]  313 #> [16154,]  313 #> [16155,]  313 #> [16156,]  312 #> [16157,]  313 #> [16158,]  313 #> [16159,]  313 #> [16160,]  313 #> [16161,]  313 #> [16162,]  313 #> [16163,]  313 #> [16164,]  313 #> [16165,]  312 #> [16166,]  313 #> [16167,]  313 #> [16168,]  313 #> [16169,]  313 #> [16170,]  313 #> [16171,]  313 #> [16172,]  313 #> [16173,]  313 #> [16174,]  312 #> [16175,]  313 #> [16176,]  313 #> [16177,]  313 #> [16178,]  313 #> [16179,]  313 #> [16180,]  312 #> [16181,]  313 #> [16182,]  313 #> [16183,]  313 #> [16184,]  313 #> [16185,]  312 #> [16186,]  313 #> [16187,]  313 #> [16188,]  313 #> [16189,]  312 #> [16190,]  313 #> [16191,]  313 #> [16192,]  313 #> [16193,]  313 #> [16194,]  313 #> [16195,]  313 #> [16196,]  313 #> [16197,]  313 #> [16198,]  313 #> [16199,]  313 #> [16200,]  313 #> [16201,]  315 #> [16202,]  315 #> [16203,]  315 #> [16204,]  314 #> [16205,]  315 #> [16206,]  315 #> [16207,]  315 #> [16208,]  314 #> [16209,]  314 #> [16210,]  314 #> [16211,]  315 #> [16212,]  315 #> [16213,]  315 #> [16214,]  315 #> [16215,]  315 #> [16216,]  315 #> [16217,]  315 #> [16218,]  314 #> [16219,]  315 #> [16220,]  314 #> [16221,]  315 #> [16222,]  315 #> [16223,]  315 #> [16224,]  315 #> [16225,]  315 #> [16226,]  315 #> [16227,]  315 #> [16228,]  315 #> [16229,]  315 #> [16230,]  314 #> [16231,]  315 #> [16232,]  315 #> [16233,]  315 #> [16234,]  315 #> [16235,]  315 #> [16236,]  315 #> [16237,]  315 #> [16238,]  315 #> [16239,]  314 #> [16240,]  315 #> [16241,]  315 #> [16242,]  315 #> [16243,]  314 #> [16244,]  315 #> [16245,]  314 #> [16246,]  315 #> [16247,]  315 #> [16248,]  315 #> [16249,]  314 #> [16250,]  315 #> [16251,]  314 #> [16252,]  315 #> [16253,]  314 #> [16254,]  315 #> [16255,]  315 #> [16256,]  314 #> [16257,]  315 #> [16258,]  315 #> [16259,]  315 #> [16260,]  314 #> [16261,]  315 #> [16262,]  315 #> [16263,]  315 #> [16264,]  314 #> [16265,]  314 #> [16266,]  314 #> [16267,]  314 #> [16268,]  315 #> [16269,]  315 #> [16270,]  315 #> [16271,]  315 #> [16272,]  315 #> [16273,]  315 #> [16274,]  315 #> [16275,]  315 #> [16276,]  315 #> [16277,]  315 #> [16278,]  314 #> [16279,]  315 #> [16280,]  315 #> [16281,]  315 #> [16282,]  315 #> [16283,]  315 #> [16284,]  315 #> [16285,]  314 #> [16286,]  315 #> [16287,]  315 #> [16288,]  315 #> [16289,]  314 #> [16290,]  315 #> [16291,]  314 #> [16292,]  315 #> [16293,]  315 #> [16294,]  315 #> [16295,]  314 #> [16296,]  315 #> [16297,]  315 #> [16298,]  315 #> [16299,]  315 #> [16300,]  315 #> [16301,]  317 #> [16302,]  317 #> [16303,]  317 #> [16304,]  316 #> [16305,]  317 #> [16306,]  317 #> [16307,]  317 #> [16308,]  316 #> [16309,]  316 #> [16310,]  316 #> [16311,]  317 #> [16312,]  317 #> [16313,]  317 #> [16314,]  317 #> [16315,]  317 #> [16316,]  317 #> [16317,]  317 #> [16318,]  317 #> [16319,]  317 #> [16320,]  317 #> [16321,]  317 #> [16322,]  317 #> [16323,]  317 #> [16324,]  317 #> [16325,]  317 #> [16326,]  317 #> [16327,]  317 #> [16328,]  317 #> [16329,]  317 #> [16330,]  317 #> [16331,]  317 #> [16332,]  317 #> [16333,]  317 #> [16334,]  317 #> [16335,]  317 #> [16336,]  317 #> [16337,]  317 #> [16338,]  317 #> [16339,]  317 #> [16340,]  317 #> [16341,]  317 #> [16342,]  317 #> [16343,]  316 #> [16344,]  317 #> [16345,]  317 #> [16346,]  317 #> [16347,]  317 #> [16348,]  317 #> [16349,]  317 #> [16350,]  317 #> [16351,]  316 #> [16352,]  317 #> [16353,]  317 #> [16354,]  317 #> [16355,]  317 #> [16356,]  317 #> [16357,]  317 #> [16358,]  317 #> [16359,]  317 #> [16360,]  316 #> [16361,]  317 #> [16362,]  317 #> [16363,]  317 #> [16364,]  317 #> [16365,]  317 #> [16366,]  317 #> [16367,]  316 #> [16368,]  317 #> [16369,]  317 #> [16370,]  317 #> [16371,]  317 #> [16372,]  317 #> [16373,]  317 #> [16374,]  317 #> [16375,]  317 #> [16376,]  317 #> [16377,]  317 #> [16378,]  317 #> [16379,]  317 #> [16380,]  317 #> [16381,]  317 #> [16382,]  317 #> [16383,]  317 #> [16384,]  317 #> [16385,]  316 #> [16386,]  317 #> [16387,]  317 #> [16388,]  317 #> [16389,]  317 #> [16390,]  317 #> [16391,]  316 #> [16392,]  317 #> [16393,]  317 #> [16394,]  317 #> [16395,]  316 #> [16396,]  317 #> [16397,]  317 #> [16398,]  317 #> [16399,]  317 #> [16400,]  317 #> [16401,]  318 #> [16402,]  318 #> [16403,]  318 #> [16404,]  318 #> [16405,]  318 #> [16406,]  318 #> [16407,]  318 #> [16408,]  318 #> [16409,]  318 #> [16410,]  318 #> [16411,]  318 #> [16412,]  318 #> [16413,]  318 #> [16414,]  318 #> [16415,]  318 #> [16416,]  318 #> [16417,]  318 #> [16418,]  318 #> [16419,]  318 #> [16420,]  318 #> [16421,]  318 #> [16422,]  318 #> [16423,]  318 #> [16424,]  318 #> [16425,]  318 #> [16426,]  318 #> [16427,]  318 #> [16428,]  318 #> [16429,]  318 #> [16430,]  318 #> [16431,]  318 #> [16432,]  318 #> [16433,]  318 #> [16434,]  318 #> [16435,]  318 #> [16436,]  318 #> [16437,]  318 #> [16438,]  318 #> [16439,]  318 #> [16440,]  318 #> [16441,]  318 #> [16442,]  318 #> [16443,]  318 #> [16444,]  318 #> [16445,]  318 #> [16446,]  318 #> [16447,]  318 #> [16448,]  318 #> [16449,]  318 #> [16450,]  318 #> [16451,]  318 #> [16452,]  318 #> [16453,]  318 #> [16454,]  318 #> [16455,]  318 #> [16456,]  318 #> [16457,]  318 #> [16458,]  318 #> [16459,]  318 #> [16460,]  318 #> [16461,]  318 #> [16462,]  318 #> [16463,]  318 #> [16464,]  318 #> [16465,]  318 #> [16466,]  318 #> [16467,]  318 #> [16468,]  318 #> [16469,]  318 #> [16470,]  318 #> [16471,]  318 #> [16472,]  318 #> [16473,]  318 #> [16474,]  318 #> [16475,]  318 #> [16476,]  318 #> [16477,]  318 #> [16478,]  318 #> [16479,]  318 #> [16480,]  318 #> [16481,]  318 #> [16482,]  318 #> [16483,]  318 #> [16484,]  318 #> [16485,]  318 #> [16486,]  318 #> [16487,]  318 #> [16488,]  318 #> [16489,]  318 #> [16490,]  318 #> [16491,]  318 #> [16492,]  318 #> [16493,]  318 #> [16494,]  318 #> [16495,]  318 #> [16496,]  318 #> [16497,]  318 #> [16498,]  318 #> [16499,]  318 #> [16500,]  318 #> [16501,]  320 #> [16502,]  320 #> [16503,]  319 #> [16504,]  320 #> [16505,]  320 #> [16506,]  320 #> [16507,]  320 #> [16508,]  320 #> [16509,]  320 #> [16510,]  320 #> [16511,]  319 #> [16512,]  319 #> [16513,]  320 #> [16514,]  319 #> [16515,]  320 #> [16516,]  320 #> [16517,]  320 #> [16518,]  320 #> [16519,]  319 #> [16520,]  319 #> [16521,]  320 #> [16522,]  319 #> [16523,]  320 #> [16524,]  320 #> [16525,]  320 #> [16526,]  319 #> [16527,]  320 #> [16528,]  320 #> [16529,]  319 #> [16530,]  320 #> [16531,]  320 #> [16532,]  319 #> [16533,]  320 #> [16534,]  320 #> [16535,]  320 #> [16536,]  319 #> [16537,]  320 #> [16538,]  320 #> [16539,]  320 #> [16540,]  319 #> [16541,]  319 #> [16542,]  319 #> [16543,]  320 #> [16544,]  320 #> [16545,]  320 #> [16546,]  320 #> [16547,]  320 #> [16548,]  319 #> [16549,]  320 #> [16550,]  320 #> [16551,]  319 #> [16552,]  320 #> [16553,]  320 #> [16554,]  319 #> [16555,]  320 #> [16556,]  320 #> [16557,]  320 #> [16558,]  320 #> [16559,]  320 #> [16560,]  319 #> [16561,]  320 #> [16562,]  319 #> [16563,]  319 #> [16564,]  320 #> [16565,]  320 #> [16566,]  319 #> [16567,]  320 #> [16568,]  319 #> [16569,]  319 #> [16570,]  320 #> [16571,]  320 #> [16572,]  320 #> [16573,]  320 #> [16574,]  320 #> [16575,]  320 #> [16576,]  320 #> [16577,]  320 #> [16578,]  320 #> [16579,]  320 #> [16580,]  319 #> [16581,]  319 #> [16582,]  320 #> [16583,]  319 #> [16584,]  320 #> [16585,]  320 #> [16586,]  320 #> [16587,]  320 #> [16588,]  320 #> [16589,]  319 #> [16590,]  320 #> [16591,]  319 #> [16592,]  320 #> [16593,]  320 #> [16594,]  320 #> [16595,]  320 #> [16596,]  320 #> [16597,]  320 #> [16598,]  320 #> [16599,]  320 #> [16600,]  320 #> [16601,]  322 #> [16602,]  322 #> [16603,]  322 #> [16604,]  321 #> [16605,]  322 #> [16606,]  322 #> [16607,]  322 #> [16608,]  321 #> [16609,]  321 #> [16610,]  322 #> [16611,]  322 #> [16612,]  322 #> [16613,]  322 #> [16614,]  322 #> [16615,]  322 #> [16616,]  322 #> [16617,]  321 #> [16618,]  322 #> [16619,]  322 #> [16620,]  322 #> [16621,]  322 #> [16622,]  322 #> [16623,]  322 #> [16624,]  322 #> [16625,]  322 #> [16626,]  322 #> [16627,]  321 #> [16628,]  322 #> [16629,]  322 #> [16630,]  322 #> [16631,]  322 #> [16632,]  322 #> [16633,]  322 #> [16634,]  322 #> [16635,]  322 #> [16636,]  322 #> [16637,]  322 #> [16638,]  322 #> [16639,]  322 #> [16640,]  322 #> [16641,]  322 #> [16642,]  322 #> [16643,]  322 #> [16644,]  321 #> [16645,]  322 #> [16646,]  322 #> [16647,]  322 #> [16648,]  322 #> [16649,]  322 #> [16650,]  322 #> [16651,]  322 #> [16652,]  321 #> [16653,]  322 #> [16654,]  322 #> [16655,]  322 #> [16656,]  322 #> [16657,]  322 #> [16658,]  322 #> [16659,]  322 #> [16660,]  322 #> [16661,]  322 #> [16662,]  322 #> [16663,]  322 #> [16664,]  322 #> [16665,]  322 #> [16666,]  322 #> [16667,]  322 #> [16668,]  322 #> [16669,]  322 #> [16670,]  322 #> [16671,]  322 #> [16672,]  322 #> [16673,]  322 #> [16674,]  322 #> [16675,]  322 #> [16676,]  322 #> [16677,]  322 #> [16678,]  322 #> [16679,]  322 #> [16680,]  322 #> [16681,]  321 #> [16682,]  321 #> [16683,]  322 #> [16684,]  322 #> [16685,]  322 #> [16686,]  322 #> [16687,]  322 #> [16688,]  322 #> [16689,]  322 #> [16690,]  321 #> [16691,]  322 #> [16692,]  321 #> [16693,]  322 #> [16694,]  322 #> [16695,]  321 #> [16696,]  322 #> [16697,]  322 #> [16698,]  322 #> [16699,]  321 #> [16700,]  322 #> [16701,]  324 #> [16702,]  323 #> [16703,]  323 #> [16704,]  323 #> [16705,]  324 #> [16706,]  324 #> [16707,]  323 #> [16708,]  324 #> [16709,]  324 #> [16710,]  323 #> [16711,]  323 #> [16712,]  324 #> [16713,]  323 #> [16714,]  324 #> [16715,]  324 #> [16716,]  323 #> [16717,]  323 #> [16718,]  323 #> [16719,]  323 #> [16720,]  324 #> [16721,]  323 #> [16722,]  323 #> [16723,]  323 #> [16724,]  323 #> [16725,]  323 #> [16726,]  324 #> [16727,]  323 #> [16728,]  323 #> [16729,]  323 #> [16730,]  323 #> [16731,]  323 #> [16732,]  323 #> [16733,]  324 #> [16734,]  323 #> [16735,]  323 #> [16736,]  323 #> [16737,]  323 #> [16738,]  323 #> [16739,]  323 #> [16740,]  323 #> [16741,]  323 #> [16742,]  323 #> [16743,]  324 #> [16744,]  323 #> [16745,]  324 #> [16746,]  324 #> [16747,]  323 #> [16748,]  323 #> [16749,]  323 #> [16750,]  324 #> [16751,]  324 #> [16752,]  323 #> [16753,]  324 #> [16754,]  323 #> [16755,]  324 #> [16756,]  324 #> [16757,]  324 #> [16758,]  324 #> [16759,]  323 #> [16760,]  324 #> [16761,]  324 #> [16762,]  323 #> [16763,]  323 #> [16764,]  324 #> [16765,]  324 #> [16766,]  324 #> [16767,]  323 #> [16768,]  324 #> [16769,]  323 #> [16770,]  323 #> [16771,]  324 #> [16772,]  324 #> [16773,]  324 #> [16774,]  324 #> [16775,]  324 #> [16776,]  324 #> [16777,]  323 #> [16778,]  324 #> [16779,]  323 #> [16780,]  323 #> [16781,]  324 #> [16782,]  323 #> [16783,]  323 #> [16784,]  323 #> [16785,]  323 #> [16786,]  323 #> [16787,]  323 #> [16788,]  323 #> [16789,]  323 #> [16790,]  323 #> [16791,]  323 #> [16792,]  324 #> [16793,]  323 #> [16794,]  324 #> [16795,]  323 #> [16796,]  324 #> [16797,]  324 #> [16798,]  323 #> [16799,]  323 #> [16800,]  323 #> [16801,]  325 #> [16802,]  326 #> [16803,]  325 #> [16804,]  325 #> [16805,]  325 #> [16806,]  325 #> [16807,]  325 #> [16808,]  326 #> [16809,]  325 #> [16810,]  325 #> [16811,]  325 #> [16812,]  325 #> [16813,]  326 #> [16814,]  325 #> [16815,]  326 #> [16816,]  326 #> [16817,]  325 #> [16818,]  325 #> [16819,]  326 #> [16820,]  326 #> [16821,]  325 #> [16822,]  326 #> [16823,]  325 #> [16824,]  325 #> [16825,]  325 #> [16826,]  326 #> [16827,]  326 #> [16828,]  325 #> [16829,]  326 #> [16830,]  326 #> [16831,]  325 #> [16832,]  325 #> [16833,]  326 #> [16834,]  325 #> [16835,]  325 #> [16836,]  326 #> [16837,]  326 #> [16838,]  326 #> [16839,]  325 #> [16840,]  325 #> [16841,]  326 #> [16842,]  325 #> [16843,]  326 #> [16844,]  326 #> [16845,]  325 #> [16846,]  326 #> [16847,]  325 #> [16848,]  325 #> [16849,]  325 #> [16850,]  326 #> [16851,]  326 #> [16852,]  325 #> [16853,]  326 #> [16854,]  325 #> [16855,]  326 #> [16856,]  326 #> [16857,]  325 #> [16858,]  326 #> [16859,]  326 #> [16860,]  326 #> [16861,]  326 #> [16862,]  325 #> [16863,]  326 #> [16864,]  326 #> [16865,]  325 #> [16866,]  326 #> [16867,]  325 #> [16868,]  326 #> [16869,]  326 #> [16870,]  325 #> [16871,]  326 #> [16872,]  325 #> [16873,]  325 #> [16874,]  325 #> [16875,]  326 #> [16876,]  325 #> [16877,]  326 #> [16878,]  326 #> [16879,]  325 #> [16880,]  326 #> [16881,]  326 #> [16882,]  325 #> [16883,]  326 #> [16884,]  326 #> [16885,]  326 #> [16886,]  325 #> [16887,]  326 #> [16888,]  325 #> [16889,]  325 #> [16890,]  326 #> [16891,]  325 #> [16892,]  325 #> [16893,]  326 #> [16894,]  325 #> [16895,]  326 #> [16896,]  326 #> [16897,]  326 #> [16898,]  325 #> [16899,]  325 #> [16900,]  326 #> [16901,]  328 #> [16902,]  328 #> [16903,]  327 #> [16904,]  328 #> [16905,]  327 #> [16906,]  327 #> [16907,]  328 #> [16908,]  328 #> [16909,]  328 #> [16910,]  328 #> [16911,]  327 #> [16912,]  327 #> [16913,]  328 #> [16914,]  327 #> [16915,]  328 #> [16916,]  328 #> [16917,]  328 #> [16918,]  328 #> [16919,]  327 #> [16920,]  327 #> [16921,]  328 #> [16922,]  327 #> [16923,]  328 #> [16924,]  327 #> [16925,]  328 #> [16926,]  327 #> [16927,]  328 #> [16928,]  328 #> [16929,]  327 #> [16930,]  327 #> [16931,]  328 #> [16932,]  327 #> [16933,]  328 #> [16934,]  327 #> [16935,]  328 #> [16936,]  327 #> [16937,]  328 #> [16938,]  328 #> [16939,]  328 #> [16940,]  327 #> [16941,]  327 #> [16942,]  327 #> [16943,]  328 #> [16944,]  328 #> [16945,]  328 #> [16946,]  328 #> [16947,]  328 #> [16948,]  327 #> [16949,]  328 #> [16950,]  328 #> [16951,]  327 #> [16952,]  328 #> [16953,]  328 #> [16954,]  327 #> [16955,]  327 #> [16956,]  328 #> [16957,]  328 #> [16958,]  328 #> [16959,]  328 #> [16960,]  327 #> [16961,]  328 #> [16962,]  327 #> [16963,]  327 #> [16964,]  328 #> [16965,]  328 #> [16966,]  327 #> [16967,]  327 #> [16968,]  327 #> [16969,]  327 #> [16970,]  328 #> [16971,]  328 #> [16972,]  328 #> [16973,]  328 #> [16974,]  328 #> [16975,]  328 #> [16976,]  328 #> [16977,]  328 #> [16978,]  327 #> [16979,]  328 #> [16980,]  327 #> [16981,]  327 #> [16982,]  328 #> [16983,]  327 #> [16984,]  328 #> [16985,]  328 #> [16986,]  328 #> [16987,]  328 #> [16988,]  328 #> [16989,]  327 #> [16990,]  328 #> [16991,]  327 #> [16992,]  328 #> [16993,]  327 #> [16994,]  328 #> [16995,]  328 #> [16996,]  328 #> [16997,]  328 #> [16998,]  327 #> [16999,]  327 #> [17000,]  328 #> [17001,]  329 #> [17002,]  329 #> [17003,]  329 #> [17004,]  330 #> [17005,]  329 #> [17006,]  329 #> [17007,]  329 #> [17008,]  329 #> [17009,]  329 #> [17010,]  330 #> [17011,]  329 #> [17012,]  329 #> [17013,]  329 #> [17014,]  329 #> [17015,]  329 #> [17016,]  329 #> [17017,]  329 #> [17018,]  330 #> [17019,]  329 #> [17020,]  329 #> [17021,]  329 #> [17022,]  329 #> [17023,]  329 #> [17024,]  329 #> [17025,]  330 #> [17026,]  329 #> [17027,]  329 #> [17028,]  329 #> [17029,]  329 #> [17030,]  329 #> [17031,]  329 #> [17032,]  329 #> [17033,]  329 #> [17034,]  329 #> [17035,]  329 #> [17036,]  329 #> [17037,]  329 #> [17038,]  329 #> [17039,]  330 #> [17040,]  329 #> [17041,]  329 #> [17042,]  329 #> [17043,]  330 #> [17044,]  329 #> [17045,]  330 #> [17046,]  329 #> [17047,]  329 #> [17048,]  329 #> [17049,]  329 #> [17050,]  329 #> [17051,]  329 #> [17052,]  329 #> [17053,]  329 #> [17054,]  329 #> [17055,]  329 #> [17056,]  329 #> [17057,]  329 #> [17058,]  329 #> [17059,]  329 #> [17060,]  329 #> [17061,]  329 #> [17062,]  329 #> [17063,]  329 #> [17064,]  329 #> [17065,]  329 #> [17066,]  329 #> [17067,]  329 #> [17068,]  329 #> [17069,]  329 #> [17070,]  329 #> [17071,]  329 #> [17072,]  329 #> [17073,]  330 #> [17074,]  330 #> [17075,]  330 #> [17076,]  330 #> [17077,]  330 #> [17078,]  329 #> [17079,]  329 #> [17080,]  329 #> [17081,]  329 #> [17082,]  329 #> [17083,]  329 #> [17084,]  329 #> [17085,]  329 #> [17086,]  329 #> [17087,]  329 #> [17088,]  329 #> [17089,]  329 #> [17090,]  329 #> [17091,]  329 #> [17092,]  329 #> [17093,]  329 #> [17094,]  329 #> [17095,]  329 #> [17096,]  329 #> [17097,]  329 #> [17098,]  329 #> [17099,]  329 #> [17100,]  329 #> [17101,]  331 #> [17102,]  331 #> [17103,]  331 #> [17104,]  331 #> [17105,]  331 #> [17106,]  331 #> [17107,]  331 #> [17108,]  331 #> [17109,]  331 #> [17110,]  331 #> [17111,]  331 #> [17112,]  331 #> [17113,]  331 #> [17114,]  331 #> [17115,]  331 #> [17116,]  331 #> [17117,]  331 #> [17118,]  331 #> [17119,]  331 #> [17120,]  331 #> [17121,]  331 #> [17122,]  331 #> [17123,]  331 #> [17124,]  331 #> [17125,]  331 #> [17126,]  331 #> [17127,]  331 #> [17128,]  331 #> [17129,]  331 #> [17130,]  331 #> [17131,]  331 #> [17132,]  331 #> [17133,]  331 #> [17134,]  331 #> [17135,]  331 #> [17136,]  331 #> [17137,]  331 #> [17138,]  331 #> [17139,]  331 #> [17140,]  331 #> [17141,]  331 #> [17142,]  331 #> [17143,]  331 #> [17144,]  331 #> [17145,]  331 #> [17146,]  331 #> [17147,]  331 #> [17148,]  331 #> [17149,]  331 #> [17150,]  331 #> [17151,]  331 #> [17152,]  331 #> [17153,]  331 #> [17154,]  331 #> [17155,]  331 #> [17156,]  331 #> [17157,]  331 #> [17158,]  331 #> [17159,]  331 #> [17160,]  331 #> [17161,]  331 #> [17162,]  331 #> [17163,]  331 #> [17164,]  331 #> [17165,]  331 #> [17166,]  331 #> [17167,]  331 #> [17168,]  331 #> [17169,]  331 #> [17170,]  331 #> [17171,]  331 #> [17172,]  331 #> [17173,]  331 #> [17174,]  331 #> [17175,]  331 #> [17176,]  331 #> [17177,]  331 #> [17178,]  331 #> [17179,]  331 #> [17180,]  331 #> [17181,]  331 #> [17182,]  331 #> [17183,]  331 #> [17184,]  331 #> [17185,]  331 #> [17186,]  331 #> [17187,]  331 #> [17188,]  331 #> [17189,]  331 #> [17190,]  331 #> [17191,]  331 #> [17192,]  331 #> [17193,]  331 #> [17194,]  331 #> [17195,]  331 #> [17196,]  331 #> [17197,]  331 #> [17198,]  331 #> [17199,]  331 #> [17200,]  331 #> [17201,]  333 #> [17202,]  333 #> [17203,]  333 #> [17204,]  332 #> [17205,]  333 #> [17206,]  333 #> [17207,]  333 #> [17208,]  332 #> [17209,]  332 #> [17210,]  332 #> [17211,]  333 #> [17212,]  333 #> [17213,]  333 #> [17214,]  333 #> [17215,]  333 #> [17216,]  333 #> [17217,]  333 #> [17218,]  333 #> [17219,]  333 #> [17220,]  332 #> [17221,]  333 #> [17222,]  333 #> [17223,]  333 #> [17224,]  333 #> [17225,]  333 #> [17226,]  333 #> [17227,]  333 #> [17228,]  333 #> [17229,]  333 #> [17230,]  332 #> [17231,]  333 #> [17232,]  333 #> [17233,]  333 #> [17234,]  333 #> [17235,]  333 #> [17236,]  333 #> [17237,]  333 #> [17238,]  333 #> [17239,]  333 #> [17240,]  333 #> [17241,]  333 #> [17242,]  333 #> [17243,]  332 #> [17244,]  333 #> [17245,]  333 #> [17246,]  333 #> [17247,]  333 #> [17248,]  333 #> [17249,]  333 #> [17250,]  333 #> [17251,]  332 #> [17252,]  333 #> [17253,]  332 #> [17254,]  333 #> [17255,]  333 #> [17256,]  332 #> [17257,]  333 #> [17258,]  333 #> [17259,]  333 #> [17260,]  332 #> [17261,]  333 #> [17262,]  333 #> [17263,]  333 #> [17264,]  332 #> [17265,]  333 #> [17266,]  333 #> [17267,]  332 #> [17268,]  333 #> [17269,]  333 #> [17270,]  333 #> [17271,]  333 #> [17272,]  333 #> [17273,]  333 #> [17274,]  333 #> [17275,]  333 #> [17276,]  333 #> [17277,]  333 #> [17278,]  332 #> [17279,]  333 #> [17280,]  333 #> [17281,]  333 #> [17282,]  333 #> [17283,]  333 #> [17284,]  333 #> [17285,]  332 #> [17286,]  333 #> [17287,]  333 #> [17288,]  333 #> [17289,]  332 #> [17290,]  333 #> [17291,]  332 #> [17292,]  333 #> [17293,]  333 #> [17294,]  333 #> [17295,]  332 #> [17296,]  333 #> [17297,]  333 #> [17298,]  333 #> [17299,]  333 #> [17300,]  333 #> [17301,]  334 #> [17302,]  334 #> [17303,]  334 #> [17304,]  335 #> [17305,]  334 #> [17306,]  334 #> [17307,]  334 #> [17308,]  334 #> [17309,]  334 #> [17310,]  334 #> [17311,]  334 #> [17312,]  334 #> [17313,]  334 #> [17314,]  335 #> [17315,]  334 #> [17316,]  334 #> [17317,]  334 #> [17318,]  334 #> [17319,]  334 #> [17320,]  334 #> [17321,]  334 #> [17322,]  334 #> [17323,]  334 #> [17324,]  334 #> [17325,]  334 #> [17326,]  334 #> [17327,]  335 #> [17328,]  334 #> [17329,]  334 #> [17330,]  334 #> [17331,]  334 #> [17332,]  334 #> [17333,]  334 #> [17334,]  334 #> [17335,]  334 #> [17336,]  334 #> [17337,]  334 #> [17338,]  334 #> [17339,]  334 #> [17340,]  334 #> [17341,]  334 #> [17342,]  334 #> [17343,]  334 #> [17344,]  334 #> [17345,]  334 #> [17346,]  334 #> [17347,]  334 #> [17348,]  334 #> [17349,]  334 #> [17350,]  334 #> [17351,]  334 #> [17352,]  334 #> [17353,]  334 #> [17354,]  334 #> [17355,]  334 #> [17356,]  334 #> [17357,]  334 #> [17358,]  334 #> [17359,]  334 #> [17360,]  334 #> [17361,]  335 #> [17362,]  334 #> [17363,]  334 #> [17364,]  334 #> [17365,]  334 #> [17366,]  334 #> [17367,]  334 #> [17368,]  334 #> [17369,]  334 #> [17370,]  334 #> [17371,]  334 #> [17372,]  334 #> [17373,]  334 #> [17374,]  334 #> [17375,]  334 #> [17376,]  334 #> [17377,]  334 #> [17378,]  334 #> [17379,]  334 #> [17380,]  334 #> [17381,]  334 #> [17382,]  335 #> [17383,]  334 #> [17384,]  334 #> [17385,]  334 #> [17386,]  334 #> [17387,]  334 #> [17388,]  334 #> [17389,]  334 #> [17390,]  334 #> [17391,]  334 #> [17392,]  335 #> [17393,]  335 #> [17394,]  334 #> [17395,]  334 #> [17396,]  335 #> [17397,]  334 #> [17398,]  334 #> [17399,]  334 #> [17400,]  334 #> [17401,]  337 #> [17402,]  337 #> [17403,]  336 #> [17404,]  337 #> [17405,]  337 #> [17406,]  337 #> [17407,]  337 #> [17408,]  337 #> [17409,]  337 #> [17410,]  337 #> [17411,]  336 #> [17412,]  336 #> [17413,]  337 #> [17414,]  336 #> [17415,]  337 #> [17416,]  337 #> [17417,]  337 #> [17418,]  337 #> [17419,]  336 #> [17420,]  336 #> [17421,]  337 #> [17422,]  336 #> [17423,]  337 #> [17424,]  337 #> [17425,]  337 #> [17426,]  336 #> [17427,]  337 #> [17428,]  337 #> [17429,]  336 #> [17430,]  337 #> [17431,]  337 #> [17432,]  336 #> [17433,]  337 #> [17434,]  337 #> [17435,]  337 #> [17436,]  336 #> [17437,]  337 #> [17438,]  337 #> [17439,]  337 #> [17440,]  336 #> [17441,]  336 #> [17442,]  336 #> [17443,]  337 #> [17444,]  337 #> [17445,]  337 #> [17446,]  337 #> [17447,]  337 #> [17448,]  336 #> [17449,]  337 #> [17450,]  337 #> [17451,]  336 #> [17452,]  337 #> [17453,]  337 #> [17454,]  336 #> [17455,]  337 #> [17456,]  337 #> [17457,]  337 #> [17458,]  337 #> [17459,]  337 #> [17460,]  336 #> [17461,]  337 #> [17462,]  336 #> [17463,]  336 #> [17464,]  337 #> [17465,]  337 #> [17466,]  336 #> [17467,]  337 #> [17468,]  336 #> [17469,]  336 #> [17470,]  337 #> [17471,]  337 #> [17472,]  337 #> [17473,]  337 #> [17474,]  337 #> [17475,]  337 #> [17476,]  337 #> [17477,]  337 #> [17478,]  337 #> [17479,]  337 #> [17480,]  336 #> [17481,]  336 #> [17482,]  337 #> [17483,]  336 #> [17484,]  337 #> [17485,]  337 #> [17486,]  337 #> [17487,]  337 #> [17488,]  337 #> [17489,]  336 #> [17490,]  337 #> [17491,]  336 #> [17492,]  337 #> [17493,]  337 #> [17494,]  337 #> [17495,]  337 #> [17496,]  337 #> [17497,]  337 #> [17498,]  337 #> [17499,]  337 #> [17500,]  337 #> [17501,]  338 #> [17502,]  338 #> [17503,]  338 #> [17504,]  338 #> [17505,]  338 #> [17506,]  338 #> [17507,]  339 #> [17508,]  338 #> [17509,]  338 #> [17510,]  338 #> [17511,]  338 #> [17512,]  338 #> [17513,]  338 #> [17514,]  338 #> [17515,]  338 #> [17516,]  339 #> [17517,]  338 #> [17518,]  338 #> [17519,]  338 #> [17520,]  339 #> [17521,]  338 #> [17522,]  338 #> [17523,]  338 #> [17524,]  339 #> [17525,]  338 #> [17526,]  338 #> [17527,]  338 #> [17528,]  339 #> [17529,]  338 #> [17530,]  338 #> [17531,]  338 #> [17532,]  338 #> [17533,]  338 #> [17534,]  338 #> [17535,]  338 #> [17536,]  338 #> [17537,]  338 #> [17538,]  338 #> [17539,]  338 #> [17540,]  338 #> [17541,]  338 #> [17542,]  338 #> [17543,]  338 #> [17544,]  338 #> [17545,]  338 #> [17546,]  338 #> [17547,]  338 #> [17548,]  338 #> [17549,]  338 #> [17550,]  339 #> [17551,]  338 #> [17552,]  339 #> [17553,]  338 #> [17554,]  338 #> [17555,]  338 #> [17556,]  338 #> [17557,]  338 #> [17558,]  338 #> [17559,]  338 #> [17560,]  338 #> [17561,]  338 #> [17562,]  338 #> [17563,]  338 #> [17564,]  338 #> [17565,]  338 #> [17566,]  338 #> [17567,]  338 #> [17568,]  338 #> [17569,]  338 #> [17570,]  338 #> [17571,]  338 #> [17572,]  338 #> [17573,]  338 #> [17574,]  338 #> [17575,]  338 #> [17576,]  339 #> [17577,]  338 #> [17578,]  338 #> [17579,]  338 #> [17580,]  338 #> [17581,]  338 #> [17582,]  338 #> [17583,]  338 #> [17584,]  338 #> [17585,]  338 #> [17586,]  339 #> [17587,]  338 #> [17588,]  338 #> [17589,]  338 #> [17590,]  338 #> [17591,]  339 #> [17592,]  338 #> [17593,]  338 #> [17594,]  338 #> [17595,]  338 #> [17596,]  338 #> [17597,]  338 #> [17598,]  338 #> [17599,]  338 #> [17600,]  338 #> [17601,]  340 #> [17602,]  340 #> [17603,]  340 #> [17604,]  340 #> [17605,]  340 #> [17606,]  340 #> [17607,]  340 #> [17608,]  340 #> [17609,]  340 #> [17610,]  340 #> [17611,]  340 #> [17612,]  340 #> [17613,]  340 #> [17614,]  340 #> [17615,]  340 #> [17616,]  340 #> [17617,]  340 #> [17618,]  340 #> [17619,]  340 #> [17620,]  340 #> [17621,]  340 #> [17622,]  340 #> [17623,]  340 #> [17624,]  340 #> [17625,]  340 #> [17626,]  340 #> [17627,]  340 #> [17628,]  340 #> [17629,]  340 #> [17630,]  340 #> [17631,]  340 #> [17632,]  340 #> [17633,]  340 #> [17634,]  340 #> [17635,]  340 #> [17636,]  340 #> [17637,]  340 #> [17638,]  340 #> [17639,]  340 #> [17640,]  340 #> [17641,]  340 #> [17642,]  340 #> [17643,]  340 #> [17644,]  340 #> [17645,]  340 #> [17646,]  340 #> [17647,]  340 #> [17648,]  340 #> [17649,]  340 #> [17650,]  340 #> [17651,]  340 #> [17652,]  340 #> [17653,]  340 #> [17654,]  340 #> [17655,]  340 #> [17656,]  340 #> [17657,]  340 #> [17658,]  340 #> [17659,]  340 #> [17660,]  340 #> [17661,]  340 #> [17662,]  340 #> [17663,]  340 #> [17664,]  340 #> [17665,]  340 #> [17666,]  340 #> [17667,]  340 #> [17668,]  340 #> [17669,]  340 #> [17670,]  340 #> [17671,]  340 #> [17672,]  340 #> [17673,]  340 #> [17674,]  340 #> [17675,]  340 #> [17676,]  340 #> [17677,]  340 #> [17678,]  340 #> [17679,]  340 #> [17680,]  340 #> [17681,]  340 #> [17682,]  340 #> [17683,]  340 #> [17684,]  340 #> [17685,]  340 #> [17686,]  340 #> [17687,]  340 #> [17688,]  340 #> [17689,]  340 #> [17690,]  340 #> [17691,]  340 #> [17692,]  340 #> [17693,]  340 #> [17694,]  340 #> [17695,]  340 #> [17696,]  340 #> [17697,]  340 #> [17698,]  340 #> [17699,]  340 #> [17700,]  340 #> [17701,]  342 #> [17702,]  342 #> [17703,]  341 #> [17704,]  341 #> [17705,]  342 #> [17706,]  342 #> [17707,]  341 #> [17708,]  341 #> [17709,]  342 #> [17710,]  342 #> [17711,]  342 #> [17712,]  341 #> [17713,]  342 #> [17714,]  342 #> [17715,]  342 #> [17716,]  342 #> [17717,]  342 #> [17718,]  342 #> [17719,]  342 #> [17720,]  342 #> [17721,]  342 #> [17722,]  342 #> [17723,]  342 #> [17724,]  342 #> [17725,]  341 #> [17726,]  342 #> [17727,]  342 #> [17728,]  342 #> [17729,]  342 #> [17730,]  342 #> [17731,]  341 #> [17732,]  342 #> [17733,]  342 #> [17734,]  342 #> [17735,]  342 #> [17736,]  342 #> [17737,]  342 #> [17738,]  342 #> [17739,]  342 #> [17740,]  342 #> [17741,]  342 #> [17742,]  342 #> [17743,]  342 #> [17744,]  342 #> [17745,]  342 #> [17746,]  342 #> [17747,]  342 #> [17748,]  342 #> [17749,]  342 #> [17750,]  342 #> [17751,]  342 #> [17752,]  341 #> [17753,]  342 #> [17754,]  342 #> [17755,]  342 #> [17756,]  342 #> [17757,]  341 #> [17758,]  342 #> [17759,]  341 #> [17760,]  341 #> [17761,]  342 #> [17762,]  342 #> [17763,]  342 #> [17764,]  342 #> [17765,]  342 #> [17766,]  342 #> [17767,]  342 #> [17768,]  341 #> [17769,]  342 #> [17770,]  342 #> [17771,]  342 #> [17772,]  342 #> [17773,]  342 #> [17774,]  342 #> [17775,]  342 #> [17776,]  342 #> [17777,]  342 #> [17778,]  342 #> [17779,]  342 #> [17780,]  342 #> [17781,]  342 #> [17782,]  342 #> [17783,]  342 #> [17784,]  342 #> [17785,]  342 #> [17786,]  341 #> [17787,]  342 #> [17788,]  342 #> [17789,]  342 #> [17790,]  342 #> [17791,]  342 #> [17792,]  342 #> [17793,]  342 #> [17794,]  342 #> [17795,]  342 #> [17796,]  341 #> [17797,]  341 #> [17798,]  342 #> [17799,]  342 #> [17800,]  342 #> [17801,]  343 #> [17802,]  343 #> [17803,]  343 #> [17804,]  343 #> [17805,]  343 #> [17806,]  343 #> [17807,]  343 #> [17808,]  343 #> [17809,]  343 #> [17810,]  343 #> [17811,]  343 #> [17812,]  343 #> [17813,]  343 #> [17814,]  343 #> [17815,]  343 #> [17816,]  343 #> [17817,]  343 #> [17818,]  343 #> [17819,]  343 #> [17820,]  343 #> [17821,]  343 #> [17822,]  343 #> [17823,]  343 #> [17824,]  343 #> [17825,]  343 #> [17826,]  343 #> [17827,]  343 #> [17828,]  343 #> [17829,]  343 #> [17830,]  343 #> [17831,]  343 #> [17832,]  343 #> [17833,]  343 #> [17834,]  343 #> [17835,]  343 #> [17836,]  343 #> [17837,]  343 #> [17838,]  343 #> [17839,]  343 #> [17840,]  343 #> [17841,]  343 #> [17842,]  343 #> [17843,]  343 #> [17844,]  343 #> [17845,]  343 #> [17846,]  343 #> [17847,]  343 #> [17848,]  343 #> [17849,]  343 #> [17850,]  343 #> [17851,]  343 #> [17852,]  343 #> [17853,]  343 #> [17854,]  343 #> [17855,]  343 #> [17856,]  343 #> [17857,]  343 #> [17858,]  343 #> [17859,]  343 #> [17860,]  343 #> [17861,]  343 #> [17862,]  343 #> [17863,]  343 #> [17864,]  343 #> [17865,]  343 #> [17866,]  343 #> [17867,]  343 #> [17868,]  343 #> [17869,]  343 #> [17870,]  343 #> [17871,]  343 #> [17872,]  343 #> [17873,]  343 #> [17874,]  343 #> [17875,]  343 #> [17876,]  343 #> [17877,]  343 #> [17878,]  343 #> [17879,]  343 #> [17880,]  343 #> [17881,]  343 #> [17882,]  343 #> [17883,]  343 #> [17884,]  343 #> [17885,]  343 #> [17886,]  343 #> [17887,]  343 #> [17888,]  343 #> [17889,]  343 #> [17890,]  343 #> [17891,]  343 #> [17892,]  343 #> [17893,]  343 #> [17894,]  343 #> [17895,]  343 #> [17896,]  343 #> [17897,]  343 #> [17898,]  343 #> [17899,]  343 #> [17900,]  343 #> [17901,]  345 #> [17902,]  345 #> [17903,]  344 #> [17904,]  344 #> [17905,]  345 #> [17906,]  345 #> [17907,]  344 #> [17908,]  344 #> [17909,]  345 #> [17910,]  345 #> [17911,]  345 #> [17912,]  344 #> [17913,]  345 #> [17914,]  345 #> [17915,]  345 #> [17916,]  345 #> [17917,]  345 #> [17918,]  345 #> [17919,]  345 #> [17920,]  345 #> [17921,]  345 #> [17922,]  345 #> [17923,]  344 #> [17924,]  345 #> [17925,]  344 #> [17926,]  345 #> [17927,]  345 #> [17928,]  345 #> [17929,]  345 #> [17930,]  345 #> [17931,]  344 #> [17932,]  345 #> [17933,]  345 #> [17934,]  345 #> [17935,]  345 #> [17936,]  345 #> [17937,]  344 #> [17938,]  345 #> [17939,]  345 #> [17940,]  344 #> [17941,]  345 #> [17942,]  345 #> [17943,]  345 #> [17944,]  345 #> [17945,]  345 #> [17946,]  345 #> [17947,]  344 #> [17948,]  345 #> [17949,]  345 #> [17950,]  345 #> [17951,]  345 #> [17952,]  344 #> [17953,]  345 #> [17954,]  345 #> [17955,]  345 #> [17956,]  345 #> [17957,]  344 #> [17958,]  345 #> [17959,]  344 #> [17960,]  344 #> [17961,]  345 #> [17962,]  345 #> [17963,]  345 #> [17964,]  345 #> [17965,]  345 #> [17966,]  345 #> [17967,]  345 #> [17968,]  344 #> [17969,]  345 #> [17970,]  345 #> [17971,]  345 #> [17972,]  345 #> [17973,]  345 #> [17974,]  345 #> [17975,]  345 #> [17976,]  345 #> [17977,]  345 #> [17978,]  345 #> [17979,]  345 #> [17980,]  344 #> [17981,]  345 #> [17982,]  345 #> [17983,]  345 #> [17984,]  345 #> [17985,]  345 #> [17986,]  344 #> [17987,]  345 #> [17988,]  345 #> [17989,]  345 #> [17990,]  345 #> [17991,]  345 #> [17992,]  345 #> [17993,]  345 #> [17994,]  345 #> [17995,]  345 #> [17996,]  344 #> [17997,]  344 #> [17998,]  344 #> [17999,]  345 #> [18000,]  345 #> [18001,]  346 #> [18002,]  346 #> [18003,]  346 #> [18004,]  346 #> [18005,]  346 #> [18006,]  346 #> [18007,]  346 #> [18008,]  346 #> [18009,]  346 #> [18010,]  346 #> [18011,]  346 #> [18012,]  346 #> [18013,]  347 #> [18014,]  346 #> [18015,]  347 #> [18016,]  346 #> [18017,]  346 #> [18018,]  346 #> [18019,]  347 #> [18020,]  347 #> [18021,]  346 #> [18022,]  347 #> [18023,]  346 #> [18024,]  346 #> [18025,]  346 #> [18026,]  346 #> [18027,]  347 #> [18028,]  346 #> [18029,]  347 #> [18030,]  346 #> [18031,]  346 #> [18032,]  346 #> [18033,]  346 #> [18034,]  346 #> [18035,]  346 #> [18036,]  347 #> [18037,]  347 #> [18038,]  347 #> [18039,]  346 #> [18040,]  346 #> [18041,]  347 #> [18042,]  346 #> [18043,]  346 #> [18044,]  346 #> [18045,]  346 #> [18046,]  347 #> [18047,]  346 #> [18048,]  346 #> [18049,]  346 #> [18050,]  347 #> [18051,]  347 #> [18052,]  346 #> [18053,]  347 #> [18054,]  346 #> [18055,]  347 #> [18056,]  346 #> [18057,]  346 #> [18058,]  347 #> [18059,]  346 #> [18060,]  347 #> [18061,]  346 #> [18062,]  346 #> [18063,]  346 #> [18064,]  347 #> [18065,]  346 #> [18066,]  347 #> [18067,]  346 #> [18068,]  346 #> [18069,]  347 #> [18070,]  346 #> [18071,]  347 #> [18072,]  346 #> [18073,]  346 #> [18074,]  346 #> [18075,]  346 #> [18076,]  346 #> [18077,]  347 #> [18078,]  346 #> [18079,]  346 #> [18080,]  347 #> [18081,]  347 #> [18082,]  346 #> [18083,]  347 #> [18084,]  346 #> [18085,]  346 #> [18086,]  346 #> [18087,]  347 #> [18088,]  346 #> [18089,]  346 #> [18090,]  347 #> [18091,]  346 #> [18092,]  346 #> [18093,]  346 #> [18094,]  346 #> [18095,]  346 #> [18096,]  347 #> [18097,]  347 #> [18098,]  346 #> [18099,]  346 #> [18100,]  347 #> [18101,]  348 #> [18102,]  348 #> [18103,]  348 #> [18104,]  349 #> [18105,]  348 #> [18106,]  348 #> [18107,]  348 #> [18108,]  348 #> [18109,]  348 #> [18110,]  349 #> [18111,]  348 #> [18112,]  348 #> [18113,]  348 #> [18114,]  348 #> [18115,]  349 #> [18116,]  349 #> [18117,]  348 #> [18118,]  349 #> [18119,]  348 #> [18120,]  348 #> [18121,]  349 #> [18122,]  348 #> [18123,]  349 #> [18124,]  348 #> [18125,]  349 #> [18126,]  348 #> [18127,]  349 #> [18128,]  348 #> [18129,]  348 #> [18130,]  348 #> [18131,]  348 #> [18132,]  348 #> [18133,]  348 #> [18134,]  348 #> [18135,]  348 #> [18136,]  348 #> [18137,]  348 #> [18138,]  348 #> [18139,]  349 #> [18140,]  348 #> [18141,]  348 #> [18142,]  348 #> [18143,]  349 #> [18144,]  348 #> [18145,]  349 #> [18146,]  348 #> [18147,]  348 #> [18148,]  348 #> [18149,]  348 #> [18150,]  348 #> [18151,]  348 #> [18152,]  348 #> [18153,]  349 #> [18154,]  348 #> [18155,]  348 #> [18156,]  348 #> [18157,]  348 #> [18158,]  348 #> [18159,]  348 #> [18160,]  348 #> [18161,]  349 #> [18162,]  348 #> [18163,]  348 #> [18164,]  348 #> [18165,]  348 #> [18166,]  348 #> [18167,]  348 #> [18168,]  348 #> [18169,]  348 #> [18170,]  348 #> [18171,]  348 #> [18172,]  349 #> [18173,]  349 #> [18174,]  349 #> [18175,]  349 #> [18176,]  349 #> [18177,]  349 #> [18178,]  348 #> [18179,]  348 #> [18180,]  348 #> [18181,]  348 #> [18182,]  348 #> [18183,]  348 #> [18184,]  349 #> [18185,]  348 #> [18186,]  348 #> [18187,]  348 #> [18188,]  348 #> [18189,]  348 #> [18190,]  348 #> [18191,]  348 #> [18192,]  348 #> [18193,]  348 #> [18194,]  349 #> [18195,]  349 #> [18196,]  348 #> [18197,]  348 #> [18198,]  348 #> [18199,]  348 #> [18200,]  349 #> [18201,]  351 #> [18202,]  350 #> [18203,]  351 #> [18204,]  351 #> [18205,]  351 #> [18206,]  350 #> [18207,]  351 #> [18208,]  351 #> [18209,]  351 #> [18210,]  351 #> [18211,]  350 #> [18212,]  350 #> [18213,]  351 #> [18214,]  351 #> [18215,]  350 #> [18216,]  351 #> [18217,]  350 #> [18218,]  351 #> [18219,]  351 #> [18220,]  351 #> [18221,]  351 #> [18222,]  351 #> [18223,]  350 #> [18224,]  351 #> [18225,]  351 #> [18226,]  351 #> [18227,]  351 #> [18228,]  351 #> [18229,]  350 #> [18230,]  350 #> [18231,]  350 #> [18232,]  351 #> [18233,]  351 #> [18234,]  350 #> [18235,]  350 #> [18236,]  351 #> [18237,]  350 #> [18238,]  351 #> [18239,]  351 #> [18240,]  351 #> [18241,]  351 #> [18242,]  350 #> [18243,]  350 #> [18244,]  350 #> [18245,]  351 #> [18246,]  351 #> [18247,]  350 #> [18248,]  350 #> [18249,]  351 #> [18250,]  351 #> [18251,]  351 #> [18252,]  351 #> [18253,]  351 #> [18254,]  351 #> [18255,]  351 #> [18256,]  350 #> [18257,]  351 #> [18258,]  351 #> [18259,]  351 #> [18260,]  350 #> [18261,]  350 #> [18262,]  351 #> [18263,]  350 #> [18264,]  350 #> [18265,]  350 #> [18266,]  350 #> [18267,]  351 #> [18268,]  351 #> [18269,]  351 #> [18270,]  350 #> [18271,]  351 #> [18272,]  351 #> [18273,]  351 #> [18274,]  351 #> [18275,]  350 #> [18276,]  351 #> [18277,]  351 #> [18278,]  350 #> [18279,]  350 #> [18280,]  351 #> [18281,]  350 #> [18282,]  351 #> [18283,]  351 #> [18284,]  351 #> [18285,]  351 #> [18286,]  351 #> [18287,]  351 #> [18288,]  351 #> [18289,]  351 #> [18290,]  351 #> [18291,]  351 #> [18292,]  350 #> [18293,]  351 #> [18294,]  350 #> [18295,]  350 #> [18296,]  351 #> [18297,]  351 #> [18298,]  351 #> [18299,]  351 #> [18300,]  350 #> [18301,]  352 #> [18302,]  352 #> [18303,]  352 #> [18304,]  352 #> [18305,]  352 #> [18306,]  352 #> [18307,]  352 #> [18308,]  353 #> [18309,]  353 #> [18310,]  352 #> [18311,]  352 #> [18312,]  352 #> [18313,]  352 #> [18314,]  352 #> [18315,]  352 #> [18316,]  352 #> [18317,]  352 #> [18318,]  352 #> [18319,]  352 #> [18320,]  352 #> [18321,]  352 #> [18322,]  352 #> [18323,]  352 #> [18324,]  352 #> [18325,]  352 #> [18326,]  353 #> [18327,]  352 #> [18328,]  352 #> [18329,]  352 #> [18330,]  352 #> [18331,]  352 #> [18332,]  352 #> [18333,]  352 #> [18334,]  352 #> [18335,]  352 #> [18336,]  352 #> [18337,]  352 #> [18338,]  352 #> [18339,]  352 #> [18340,]  352 #> [18341,]  352 #> [18342,]  352 #> [18343,]  352 #> [18344,]  352 #> [18345,]  352 #> [18346,]  352 #> [18347,]  352 #> [18348,]  352 #> [18349,]  352 #> [18350,]  352 #> [18351,]  352 #> [18352,]  352 #> [18353,]  352 #> [18354,]  352 #> [18355,]  352 #> [18356,]  353 #> [18357,]  352 #> [18358,]  352 #> [18359,]  352 #> [18360,]  352 #> [18361,]  353 #> [18362,]  352 #> [18363,]  352 #> [18364,]  352 #> [18365,]  352 #> [18366,]  352 #> [18367,]  352 #> [18368,]  352 #> [18369,]  352 #> [18370,]  352 #> [18371,]  352 #> [18372,]  352 #> [18373,]  352 #> [18374,]  352 #> [18375,]  352 #> [18376,]  353 #> [18377,]  352 #> [18378,]  352 #> [18379,]  352 #> [18380,]  352 #> [18381,]  352 #> [18382,]  352 #> [18383,]  352 #> [18384,]  352 #> [18385,]  352 #> [18386,]  352 #> [18387,]  352 #> [18388,]  352 #> [18389,]  352 #> [18390,]  352 #> [18391,]  352 #> [18392,]  352 #> [18393,]  352 #> [18394,]  352 #> [18395,]  352 #> [18396,]  352 #> [18397,]  352 #> [18398,]  352 #> [18399,]  352 #> [18400,]  352 #> [18401,]  354 #> [18402,]  354 #> [18403,]  354 #> [18404,]  354 #> [18405,]  354 #> [18406,]  354 #> [18407,]  354 #> [18408,]  354 #> [18409,]  354 #> [18410,]  354 #> [18411,]  354 #> [18412,]  354 #> [18413,]  354 #> [18414,]  354 #> [18415,]  355 #> [18416,]  354 #> [18417,]  354 #> [18418,]  354 #> [18419,]  355 #> [18420,]  355 #> [18421,]  354 #> [18422,]  355 #> [18423,]  354 #> [18424,]  354 #> [18425,]  354 #> [18426,]  354 #> [18427,]  355 #> [18428,]  354 #> [18429,]  355 #> [18430,]  354 #> [18431,]  354 #> [18432,]  354 #> [18433,]  354 #> [18434,]  354 #> [18435,]  354 #> [18436,]  355 #> [18437,]  355 #> [18438,]  355 #> [18439,]  354 #> [18440,]  354 #> [18441,]  354 #> [18442,]  354 #> [18443,]  354 #> [18444,]  354 #> [18445,]  354 #> [18446,]  355 #> [18447,]  354 #> [18448,]  354 #> [18449,]  354 #> [18450,]  354 #> [18451,]  354 #> [18452,]  354 #> [18453,]  355 #> [18454,]  354 #> [18455,]  355 #> [18456,]  354 #> [18457,]  354 #> [18458,]  355 #> [18459,]  354 #> [18460,]  354 #> [18461,]  354 #> [18462,]  354 #> [18463,]  354 #> [18464,]  355 #> [18465,]  354 #> [18466,]  355 #> [18467,]  354 #> [18468,]  354 #> [18469,]  355 #> [18470,]  354 #> [18471,]  354 #> [18472,]  354 #> [18473,]  354 #> [18474,]  354 #> [18475,]  354 #> [18476,]  354 #> [18477,]  355 #> [18478,]  354 #> [18479,]  354 #> [18480,]  355 #> [18481,]  355 #> [18482,]  354 #> [18483,]  355 #> [18484,]  354 #> [18485,]  354 #> [18486,]  354 #> [18487,]  355 #> [18488,]  354 #> [18489,]  354 #> [18490,]  355 #> [18491,]  354 #> [18492,]  354 #> [18493,]  354 #> [18494,]  354 #> [18495,]  354 #> [18496,]  354 #> [18497,]  355 #> [18498,]  354 #> [18499,]  354 #> [18500,]  355 #> [18501,]  357 #> [18502,]  357 #> [18503,]  356 #> [18504,]  356 #> [18505,]  357 #> [18506,]  357 #> [18507,]  356 #> [18508,]  356 #> [18509,]  357 #> [18510,]  357 #> [18511,]  357 #> [18512,]  356 #> [18513,]  357 #> [18514,]  357 #> [18515,]  357 #> [18516,]  357 #> [18517,]  357 #> [18518,]  357 #> [18519,]  357 #> [18520,]  357 #> [18521,]  357 #> [18522,]  357 #> [18523,]  357 #> [18524,]  357 #> [18525,]  356 #> [18526,]  357 #> [18527,]  357 #> [18528,]  357 #> [18529,]  357 #> [18530,]  357 #> [18531,]  356 #> [18532,]  357 #> [18533,]  357 #> [18534,]  357 #> [18535,]  357 #> [18536,]  357 #> [18537,]  357 #> [18538,]  357 #> [18539,]  357 #> [18540,]  357 #> [18541,]  357 #> [18542,]  357 #> [18543,]  357 #> [18544,]  357 #> [18545,]  357 #> [18546,]  357 #> [18547,]  357 #> [18548,]  357 #> [18549,]  357 #> [18550,]  357 #> [18551,]  357 #> [18552,]  356 #> [18553,]  357 #> [18554,]  357 #> [18555,]  357 #> [18556,]  357 #> [18557,]  356 #> [18558,]  357 #> [18559,]  356 #> [18560,]  356 #> [18561,]  357 #> [18562,]  357 #> [18563,]  357 #> [18564,]  357 #> [18565,]  357 #> [18566,]  357 #> [18567,]  357 #> [18568,]  357 #> [18569,]  357 #> [18570,]  357 #> [18571,]  357 #> [18572,]  357 #> [18573,]  357 #> [18574,]  357 #> [18575,]  357 #> [18576,]  357 #> [18577,]  357 #> [18578,]  357 #> [18579,]  357 #> [18580,]  357 #> [18581,]  357 #> [18582,]  357 #> [18583,]  357 #> [18584,]  357 #> [18585,]  357 #> [18586,]  357 #> [18587,]  357 #> [18588,]  357 #> [18589,]  357 #> [18590,]  357 #> [18591,]  357 #> [18592,]  357 #> [18593,]  357 #> [18594,]  357 #> [18595,]  357 #> [18596,]  356 #> [18597,]  356 #> [18598,]  357 #> [18599,]  357 #> [18600,]  357 #> [18601,]  359 #> [18602,]  358 #> [18603,]  358 #> [18604,]  358 #> [18605,]  358 #> [18606,]  358 #> [18607,]  358 #> [18608,]  358 #> [18609,]  358 #> [18610,]  358 #> [18611,]  358 #> [18612,]  358 #> [18613,]  358 #> [18614,]  359 #> [18615,]  358 #> [18616,]  359 #> [18617,]  358 #> [18618,]  358 #> [18619,]  358 #> [18620,]  358 #> [18621,]  358 #> [18622,]  358 #> [18623,]  358 #> [18624,]  358 #> [18625,]  358 #> [18626,]  358 #> [18627,]  358 #> [18628,]  358 #> [18629,]  358 #> [18630,]  358 #> [18631,]  358 #> [18632,]  358 #> [18633,]  358 #> [18634,]  358 #> [18635,]  358 #> [18636,]  358 #> [18637,]  358 #> [18638,]  358 #> [18639,]  358 #> [18640,]  358 #> [18641,]  359 #> [18642,]  358 #> [18643,]  358 #> [18644,]  358 #> [18645,]  358 #> [18646,]  358 #> [18647,]  358 #> [18648,]  358 #> [18649,]  358 #> [18650,]  358 #> [18651,]  358 #> [18652,]  358 #> [18653,]  358 #> [18654,]  358 #> [18655,]  358 #> [18656,]  358 #> [18657,]  358 #> [18658,]  358 #> [18659,]  358 #> [18660,]  358 #> [18661,]  358 #> [18662,]  358 #> [18663,]  358 #> [18664,]  358 #> [18665,]  358 #> [18666,]  358 #> [18667,]  358 #> [18668,]  358 #> [18669,]  358 #> [18670,]  358 #> [18671,]  358 #> [18672,]  358 #> [18673,]  358 #> [18674,]  358 #> [18675,]  358 #> [18676,]  358 #> [18677,]  358 #> [18678,]  358 #> [18679,]  358 #> [18680,]  358 #> [18681,]  358 #> [18682,]  358 #> [18683,]  358 #> [18684,]  358 #> [18685,]  358 #> [18686,]  358 #> [18687,]  358 #> [18688,]  358 #> [18689,]  358 #> [18690,]  358 #> [18691,]  358 #> [18692,]  358 #> [18693,]  358 #> [18694,]  358 #> [18695,]  358 #> [18696,]  358 #> [18697,]  358 #> [18698,]  358 #> [18699,]  359 #> [18700,]  358 #> [18701,]  361 #> [18702,]  361 #> [18703,]  360 #> [18704,]  361 #> [18705,]  361 #> [18706,]  360 #> [18707,]  361 #> [18708,]  361 #> [18709,]  361 #> [18710,]  361 #> [18711,]  361 #> [18712,]  361 #> [18713,]  361 #> [18714,]  361 #> [18715,]  361 #> [18716,]  361 #> [18717,]  361 #> [18718,]  361 #> [18719,]  360 #> [18720,]  361 #> [18721,]  361 #> [18722,]  361 #> [18723,]  361 #> [18724,]  361 #> [18725,]  361 #> [18726,]  361 #> [18727,]  361 #> [18728,]  361 #> [18729,]  361 #> [18730,]  361 #> [18731,]  361 #> [18732,]  361 #> [18733,]  361 #> [18734,]  360 #> [18735,]  361 #> [18736,]  361 #> [18737,]  361 #> [18738,]  360 #> [18739,]  361 #> [18740,]  361 #> [18741,]  361 #> [18742,]  361 #> [18743,]  361 #> [18744,]  361 #> [18745,]  360 #> [18746,]  361 #> [18747,]  361 #> [18748,]  361 #> [18749,]  360 #> [18750,]  361 #> [18751,]  361 #> [18752,]  360 #> [18753,]  361 #> [18754,]  361 #> [18755,]  361 #> [18756,]  361 #> [18757,]  361 #> [18758,]  361 #> [18759,]  361 #> [18760,]  361 #> [18761,]  361 #> [18762,]  361 #> [18763,]  361 #> [18764,]  361 #> [18765,]  361 #> [18766,]  361 #> [18767,]  361 #> [18768,]  360 #> [18769,]  361 #> [18770,]  361 #> [18771,]  361 #> [18772,]  360 #> [18773,]  361 #> [18774,]  361 #> [18775,]  361 #> [18776,]  361 #> [18777,]  361 #> [18778,]  361 #> [18779,]  361 #> [18780,]  361 #> [18781,]  361 #> [18782,]  361 #> [18783,]  361 #> [18784,]  361 #> [18785,]  361 #> [18786,]  361 #> [18787,]  361 #> [18788,]  361 #> [18789,]  361 #> [18790,]  361 #> [18791,]  361 #> [18792,]  361 #> [18793,]  361 #> [18794,]  361 #> [18795,]  361 #> [18796,]  360 #> [18797,]  361 #> [18798,]  361 #> [18799,]  361 #> [18800,]  361 #> [18801,]  363 #> [18802,]  363 #> [18803,]  363 #> [18804,]  363 #> [18805,]  363 #> [18806,]  363 #> [18807,]  363 #> [18808,]  363 #> [18809,]  363 #> [18810,]  363 #> [18811,]  363 #> [18812,]  363 #> [18813,]  363 #> [18814,]  363 #> [18815,]  362 #> [18816,]  363 #> [18817,]  362 #> [18818,]  363 #> [18819,]  363 #> [18820,]  363 #> [18821,]  363 #> [18822,]  363 #> [18823,]  363 #> [18824,]  363 #> [18825,]  363 #> [18826,]  363 #> [18827,]  363 #> [18828,]  363 #> [18829,]  363 #> [18830,]  363 #> [18831,]  362 #> [18832,]  363 #> [18833,]  363 #> [18834,]  362 #> [18835,]  363 #> [18836,]  363 #> [18837,]  362 #> [18838,]  363 #> [18839,]  363 #> [18840,]  363 #> [18841,]  363 #> [18842,]  362 #> [18843,]  362 #> [18844,]  362 #> [18845,]  363 #> [18846,]  363 #> [18847,]  363 #> [18848,]  362 #> [18849,]  363 #> [18850,]  363 #> [18851,]  363 #> [18852,]  363 #> [18853,]  363 #> [18854,]  363 #> [18855,]  363 #> [18856,]  363 #> [18857,]  363 #> [18858,]  363 #> [18859,]  363 #> [18860,]  363 #> [18861,]  363 #> [18862,]  363 #> [18863,]  362 #> [18864,]  363 #> [18865,]  363 #> [18866,]  363 #> [18867,]  363 #> [18868,]  363 #> [18869,]  363 #> [18870,]  362 #> [18871,]  363 #> [18872,]  363 #> [18873,]  363 #> [18874,]  363 #> [18875,]  362 #> [18876,]  363 #> [18877,]  363 #> [18878,]  362 #> [18879,]  362 #> [18880,]  363 #> [18881,]  363 #> [18882,]  363 #> [18883,]  363 #> [18884,]  363 #> [18885,]  363 #> [18886,]  363 #> [18887,]  363 #> [18888,]  363 #> [18889,]  363 #> [18890,]  363 #> [18891,]  363 #> [18892,]  363 #> [18893,]  363 #> [18894,]  362 #> [18895,]  362 #> [18896,]  363 #> [18897,]  363 #> [18898,]  363 #> [18899,]  363 #> [18900,]  362 #> [18901,]  365 #> [18902,]  364 #> [18903,]  364 #> [18904,]  364 #> [18905,]  365 #> [18906,]  364 #> [18907,]  364 #> [18908,]  364 #> [18909,]  364 #> [18910,]  365 #> [18911,]  365 #> [18912,]  365 #> [18913,]  365 #> [18914,]  365 #> [18915,]  365 #> [18916,]  365 #> [18917,]  365 #> [18918,]  365 #> [18919,]  365 #> [18920,]  364 #> [18921,]  364 #> [18922,]  365 #> [18923,]  364 #> [18924,]  365 #> [18925,]  364 #> [18926,]  365 #> [18927,]  365 #> [18928,]  365 #> [18929,]  364 #> [18930,]  364 #> [18931,]  365 #> [18932,]  365 #> [18933,]  365 #> [18934,]  364 #> [18935,]  364 #> [18936,]  364 #> [18937,]  364 #> [18938,]  365 #> [18939,]  365 #> [18940,]  364 #> [18941,]  364 #> [18942,]  364 #> [18943,]  365 #> [18944,]  364 #> [18945,]  364 #> [18946,]  365 #> [18947,]  365 #> [18948,]  365 #> [18949,]  364 #> [18950,]  364 #> [18951,]  365 #> [18952,]  365 #> [18953,]  364 #> [18954,]  364 #> [18955,]  364 #> [18956,]  364 #> [18957,]  364 #> [18958,]  365 #> [18959,]  365 #> [18960,]  364 #> [18961,]  365 #> [18962,]  364 #> [18963,]  364 #> [18964,]  364 #> [18965,]  364 #> [18966,]  365 #> [18967,]  364 #> [18968,]  365 #> [18969,]  364 #> [18970,]  365 #> [18971,]  365 #> [18972,]  364 #> [18973,]  364 #> [18974,]  364 #> [18975,]  365 #> [18976,]  364 #> [18977,]  365 #> [18978,]  364 #> [18979,]  365 #> [18980,]  364 #> [18981,]  364 #> [18982,]  364 #> [18983,]  365 #> [18984,]  364 #> [18985,]  364 #> [18986,]  364 #> [18987,]  365 #> [18988,]  364 #> [18989,]  364 #> [18990,]  365 #> [18991,]  365 #> [18992,]  365 #> [18993,]  364 #> [18994,]  364 #> [18995,]  365 #> [18996,]  365 #> [18997,]  364 #> [18998,]  364 #> [18999,]  364 #> [19000,]  365 #> [19001,]  366 #> [19002,]  367 #> [19003,]  366 #> [19004,]  366 #> [19005,]  366 #> [19006,]  366 #> [19007,]  366 #> [19008,]  366 #> [19009,]  367 #> [19010,]  367 #> [19011,]  366 #> [19012,]  367 #> [19013,]  367 #> [19014,]  366 #> [19015,]  366 #> [19016,]  366 #> [19017,]  367 #> [19018,]  367 #> [19019,]  366 #> [19020,]  366 #> [19021,]  367 #> [19022,]  366 #> [19023,]  366 #> [19024,]  367 #> [19025,]  366 #> [19026,]  366 #> [19027,]  366 #> [19028,]  366 #> [19029,]  367 #> [19030,]  366 #> [19031,]  367 #> [19032,]  367 #> [19033,]  367 #> [19034,]  366 #> [19035,]  366 #> [19036,]  366 #> [19037,]  366 #> [19038,]  366 #> [19039,]  366 #> [19040,]  367 #> [19041,]  366 #> [19042,]  366 #> [19043,]  366 #> [19044,]  366 #> [19045,]  366 #> [19046,]  366 #> [19047,]  366 #> [19048,]  366 #> [19049,]  366 #> [19050,]  366 #> [19051,]  366 #> [19052,]  366 #> [19053,]  367 #> [19054,]  366 #> [19055,]  366 #> [19056,]  366 #> [19057,]  366 #> [19058,]  366 #> [19059,]  366 #> [19060,]  367 #> [19061,]  367 #> [19062,]  366 #> [19063,]  367 #> [19064,]  366 #> [19065,]  366 #> [19066,]  366 #> [19067,]  366 #> [19068,]  366 #> [19069,]  366 #> [19070,]  367 #> [19071,]  366 #> [19072,]  366 #> [19073,]  366 #> [19074,]  366 #> [19075,]  367 #> [19076,]  366 #> [19077,]  366 #> [19078,]  366 #> [19079,]  366 #> [19080,]  367 #> [19081,]  367 #> [19082,]  366 #> [19083,]  367 #> [19084,]  366 #> [19085,]  366 #> [19086,]  367 #> [19087,]  366 #> [19088,]  366 #> [19089,]  366 #> [19090,]  366 #> [19091,]  366 #> [19092,]  366 #> [19093,]  366 #> [19094,]  366 #> [19095,]  366 #> [19096,]  366 #> [19097,]  366 #> [19098,]  366 #> [19099,]  366 #> [19100,]  366 #> [19101,]  369 #> [19102,]  369 #> [19103,]  368 #> [19104,]  369 #> [19105,]  369 #> [19106,]  369 #> [19107,]  368 #> [19108,]  369 #> [19109,]  369 #> [19110,]  369 #> [19111,]  369 #> [19112,]  368 #> [19113,]  369 #> [19114,]  369 #> [19115,]  369 #> [19116,]  369 #> [19117,]  369 #> [19118,]  369 #> [19119,]  369 #> [19120,]  369 #> [19121,]  369 #> [19122,]  369 #> [19123,]  369 #> [19124,]  369 #> [19125,]  369 #> [19126,]  369 #> [19127,]  369 #> [19128,]  369 #> [19129,]  369 #> [19130,]  369 #> [19131,]  368 #> [19132,]  369 #> [19133,]  369 #> [19134,]  369 #> [19135,]  369 #> [19136,]  369 #> [19137,]  369 #> [19138,]  369 #> [19139,]  369 #> [19140,]  369 #> [19141,]  369 #> [19142,]  369 #> [19143,]  369 #> [19144,]  369 #> [19145,]  369 #> [19146,]  369 #> [19147,]  369 #> [19148,]  369 #> [19149,]  369 #> [19150,]  369 #> [19151,]  369 #> [19152,]  368 #> [19153,]  369 #> [19154,]  369 #> [19155,]  369 #> [19156,]  369 #> [19157,]  369 #> [19158,]  369 #> [19159,]  368 #> [19160,]  368 #> [19161,]  369 #> [19162,]  369 #> [19163,]  369 #> [19164,]  369 #> [19165,]  369 #> [19166,]  369 #> [19167,]  369 #> [19168,]  369 #> [19169,]  369 #> [19170,]  369 #> [19171,]  369 #> [19172,]  369 #> [19173,]  369 #> [19174,]  369 #> [19175,]  369 #> [19176,]  369 #> [19177,]  369 #> [19178,]  369 #> [19179,]  369 #> [19180,]  369 #> [19181,]  369 #> [19182,]  369 #> [19183,]  369 #> [19184,]  369 #> [19185,]  369 #> [19186,]  369 #> [19187,]  369 #> [19188,]  369 #> [19189,]  369 #> [19190,]  369 #> [19191,]  369 #> [19192,]  369 #> [19193,]  369 #> [19194,]  369 #> [19195,]  369 #> [19196,]  369 #> [19197,]  368 #> [19198,]  369 #> [19199,]  369 #> [19200,]  369 #> [19201,]  371 #> [19202,]  371 #> [19203,]  370 #> [19204,]  371 #> [19205,]  371 #> [19206,]  371 #> [19207,]  370 #> [19208,]  371 #> [19209,]  371 #> [19210,]  371 #> [19211,]  371 #> [19212,]  371 #> [19213,]  371 #> [19214,]  371 #> [19215,]  371 #> [19216,]  371 #> [19217,]  371 #> [19218,]  371 #> [19219,]  371 #> [19220,]  370 #> [19221,]  371 #> [19222,]  371 #> [19223,]  371 #> [19224,]  371 #> [19225,]  370 #> [19226,]  371 #> [19227,]  371 #> [19228,]  371 #> [19229,]  371 #> [19230,]  371 #> [19231,]  371 #> [19232,]  371 #> [19233,]  371 #> [19234,]  371 #> [19235,]  371 #> [19236,]  371 #> [19237,]  371 #> [19238,]  371 #> [19239,]  370 #> [19240,]  371 #> [19241,]  371 #> [19242,]  371 #> [19243,]  371 #> [19244,]  370 #> [19245,]  371 #> [19246,]  371 #> [19247,]  371 #> [19248,]  371 #> [19249,]  370 #> [19250,]  371 #> [19251,]  371 #> [19252,]  371 #> [19253,]  370 #> [19254,]  371 #> [19255,]  370 #> [19256,]  370 #> [19257,]  371 #> [19258,]  371 #> [19259,]  370 #> [19260,]  371 #> [19261,]  371 #> [19262,]  371 #> [19263,]  371 #> [19264,]  371 #> [19265,]  370 #> [19266,]  370 #> [19267,]  371 #> [19268,]  371 #> [19269,]  371 #> [19270,]  371 #> [19271,]  371 #> [19272,]  371 #> [19273,]  371 #> [19274,]  371 #> [19275,]  371 #> [19276,]  371 #> [19277,]  371 #> [19278,]  371 #> [19279,]  371 #> [19280,]  371 #> [19281,]  371 #> [19282,]  371 #> [19283,]  371 #> [19284,]  371 #> [19285,]  371 #> [19286,]  371 #> [19287,]  371 #> [19288,]  371 #> [19289,]  371 #> [19290,]  370 #> [19291,]  371 #> [19292,]  371 #> [19293,]  371 #> [19294,]  371 #> [19295,]  371 #> [19296,]  371 #> [19297,]  371 #> [19298,]  370 #> [19299,]  371 #> [19300,]  370 #> [19301,]  373 #> [19302,]  373 #> [19303,]  372 #> [19304,]  373 #> [19305,]  373 #> [19306,]  373 #> [19307,]  373 #> [19308,]  373 #> [19309,]  373 #> [19310,]  373 #> [19311,]  372 #> [19312,]  372 #> [19313,]  373 #> [19314,]  372 #> [19315,]  373 #> [19316,]  373 #> [19317,]  373 #> [19318,]  373 #> [19319,]  372 #> [19320,]  372 #> [19321,]  373 #> [19322,]  372 #> [19323,]  373 #> [19324,]  373 #> [19325,]  373 #> [19326,]  372 #> [19327,]  373 #> [19328,]  373 #> [19329,]  372 #> [19330,]  373 #> [19331,]  373 #> [19332,]  372 #> [19333,]  373 #> [19334,]  373 #> [19335,]  373 #> [19336,]  372 #> [19337,]  373 #> [19338,]  373 #> [19339,]  373 #> [19340,]  372 #> [19341,]  372 #> [19342,]  372 #> [19343,]  373 #> [19344,]  373 #> [19345,]  373 #> [19346,]  373 #> [19347,]  373 #> [19348,]  372 #> [19349,]  373 #> [19350,]  373 #> [19351,]  372 #> [19352,]  373 #> [19353,]  373 #> [19354,]  372 #> [19355,]  373 #> [19356,]  373 #> [19357,]  373 #> [19358,]  373 #> [19359,]  373 #> [19360,]  372 #> [19361,]  373 #> [19362,]  372 #> [19363,]  372 #> [19364,]  373 #> [19365,]  373 #> [19366,]  372 #> [19367,]  373 #> [19368,]  372 #> [19369,]  372 #> [19370,]  373 #> [19371,]  373 #> [19372,]  373 #> [19373,]  373 #> [19374,]  373 #> [19375,]  373 #> [19376,]  373 #> [19377,]  373 #> [19378,]  373 #> [19379,]  373 #> [19380,]  372 #> [19381,]  372 #> [19382,]  373 #> [19383,]  372 #> [19384,]  373 #> [19385,]  373 #> [19386,]  373 #> [19387,]  373 #> [19388,]  373 #> [19389,]  372 #> [19390,]  373 #> [19391,]  372 #> [19392,]  373 #> [19393,]  373 #> [19394,]  373 #> [19395,]  373 #> [19396,]  373 #> [19397,]  373 #> [19398,]  373 #> [19399,]  373 #> [19400,]  373 #> [19401,]  374 #> [19402,]  375 #> [19403,]  374 #> [19404,]  374 #> [19405,]  375 #> [19406,]  374 #> [19407,]  375 #> [19408,]  374 #> [19409,]  375 #> [19410,]  375 #> [19411,]  374 #> [19412,]  375 #> [19413,]  375 #> [19414,]  374 #> [19415,]  375 #> [19416,]  374 #> [19417,]  375 #> [19418,]  375 #> [19419,]  374 #> [19420,]  375 #> [19421,]  375 #> [19422,]  375 #> [19423,]  375 #> [19424,]  375 #> [19425,]  375 #> [19426,]  374 #> [19427,]  375 #> [19428,]  374 #> [19429,]  375 #> [19430,]  375 #> [19431,]  375 #> [19432,]  375 #> [19433,]  375 #> [19434,]  374 #> [19435,]  374 #> [19436,]  375 #> [19437,]  374 #> [19438,]  374 #> [19439,]  375 #> [19440,]  375 #> [19441,]  375 #> [19442,]  374 #> [19443,]  375 #> [19444,]  375 #> [19445,]  374 #> [19446,]  375 #> [19447,]  375 #> [19448,]  375 #> [19449,]  374 #> [19450,]  375 #> [19451,]  375 #> [19452,]  374 #> [19453,]  375 #> [19454,]  375 #> [19455,]  374 #> [19456,]  374 #> [19457,]  375 #> [19458,]  375 #> [19459,]  374 #> [19460,]  375 #> [19461,]  375 #> [19462,]  374 #> [19463,]  375 #> [19464,]  374 #> [19465,]  374 #> [19466,]  375 #> [19467,]  375 #> [19468,]  374 #> [19469,]  374 #> [19470,]  375 #> [19471,]  375 #> [19472,]  374 #> [19473,]  374 #> [19474,]  375 #> [19475,]  375 #> [19476,]  375 #> [19477,]  374 #> [19478,]  375 #> [19479,]  374 #> [19480,]  375 #> [19481,]  375 #> [19482,]  375 #> [19483,]  375 #> [19484,]  375 #> [19485,]  375 #> [19486,]  375 #> [19487,]  375 #> [19488,]  375 #> [19489,]  374 #> [19490,]  375 #> [19491,]  374 #> [19492,]  375 #> [19493,]  375 #> [19494,]  374 #> [19495,]  375 #> [19496,]  374 #> [19497,]  374 #> [19498,]  375 #> [19499,]  375 #> [19500,]  374 #> [19501,]  377 #> [19502,]  376 #> [19503,]  376 #> [19504,]  377 #> [19505,]  377 #> [19506,]  376 #> [19507,]  376 #> [19508,]  376 #> [19509,]  376 #> [19510,]  377 #> [19511,]  377 #> [19512,]  377 #> [19513,]  377 #> [19514,]  377 #> [19515,]  377 #> [19516,]  377 #> [19517,]  377 #> [19518,]  377 #> [19519,]  377 #> [19520,]  376 #> [19521,]  376 #> [19522,]  377 #> [19523,]  376 #> [19524,]  377 #> [19525,]  376 #> [19526,]  377 #> [19527,]  377 #> [19528,]  377 #> [19529,]  376 #> [19530,]  376 #> [19531,]  377 #> [19532,]  377 #> [19533,]  377 #> [19534,]  376 #> [19535,]  376 #> [19536,]  376 #> [19537,]  376 #> [19538,]  377 #> [19539,]  377 #> [19540,]  376 #> [19541,]  376 #> [19542,]  376 #> [19543,]  377 #> [19544,]  376 #> [19545,]  376 #> [19546,]  377 #> [19547,]  377 #> [19548,]  377 #> [19549,]  376 #> [19550,]  376 #> [19551,]  377 #> [19552,]  377 #> [19553,]  376 #> [19554,]  376 #> [19555,]  376 #> [19556,]  376 #> [19557,]  376 #> [19558,]  377 #> [19559,]  377 #> [19560,]  376 #> [19561,]  377 #> [19562,]  376 #> [19563,]  377 #> [19564,]  376 #> [19565,]  376 #> [19566,]  377 #> [19567,]  376 #> [19568,]  377 #> [19569,]  377 #> [19570,]  377 #> [19571,]  377 #> [19572,]  376 #> [19573,]  376 #> [19574,]  376 #> [19575,]  377 #> [19576,]  376 #> [19577,]  377 #> [19578,]  377 #> [19579,]  377 #> [19580,]  376 #> [19581,]  376 #> [19582,]  376 #> [19583,]  377 #> [19584,]  376 #> [19585,]  376 #> [19586,]  376 #> [19587,]  377 #> [19588,]  376 #> [19589,]  376 #> [19590,]  377 #> [19591,]  377 #> [19592,]  377 #> [19593,]  377 #> [19594,]  376 #> [19595,]  377 #> [19596,]  377 #> [19597,]  376 #> [19598,]  376 #> [19599,]  376 #> [19600,]  377 #> [19601,]  378 #> [19602,]  378 #> [19603,]  378 #> [19604,]  378 #> [19605,]  378 #> [19606,]  378 #> [19607,]  378 #> [19608,]  378 #> [19609,]  378 #> [19610,]  378 #> [19611,]  378 #> [19612,]  378 #> [19613,]  379 #> [19614,]  378 #> [19615,]  379 #> [19616,]  378 #> [19617,]  378 #> [19618,]  378 #> [19619,]  379 #> [19620,]  379 #> [19621,]  378 #> [19622,]  379 #> [19623,]  378 #> [19624,]  378 #> [19625,]  378 #> [19626,]  378 #> [19627,]  379 #> [19628,]  378 #> [19629,]  379 #> [19630,]  378 #> [19631,]  378 #> [19632,]  378 #> [19633,]  378 #> [19634,]  378 #> [19635,]  378 #> [19636,]  379 #> [19637,]  379 #> [19638,]  379 #> [19639,]  378 #> [19640,]  378 #> [19641,]  378 #> [19642,]  378 #> [19643,]  378 #> [19644,]  378 #> [19645,]  378 #> [19646,]  379 #> [19647,]  378 #> [19648,]  378 #> [19649,]  378 #> [19650,]  378 #> [19651,]  379 #> [19652,]  378 #> [19653,]  379 #> [19654,]  378 #> [19655,]  379 #> [19656,]  378 #> [19657,]  378 #> [19658,]  379 #> [19659,]  378 #> [19660,]  378 #> [19661,]  378 #> [19662,]  378 #> [19663,]  378 #> [19664,]  379 #> [19665,]  378 #> [19666,]  379 #> [19667,]  378 #> [19668,]  378 #> [19669,]  379 #> [19670,]  378 #> [19671,]  379 #> [19672,]  378 #> [19673,]  378 #> [19674,]  378 #> [19675,]  378 #> [19676,]  378 #> [19677,]  379 #> [19678,]  378 #> [19679,]  378 #> [19680,]  379 #> [19681,]  379 #> [19682,]  378 #> [19683,]  379 #> [19684,]  378 #> [19685,]  378 #> [19686,]  378 #> [19687,]  379 #> [19688,]  378 #> [19689,]  378 #> [19690,]  379 #> [19691,]  378 #> [19692,]  378 #> [19693,]  378 #> [19694,]  378 #> [19695,]  378 #> [19696,]  379 #> [19697,]  379 #> [19698,]  378 #> [19699,]  378 #> [19700,]  379 #> [19701,]  381 #> [19702,]  381 #> [19703,]  381 #> [19704,]  380 #> [19705,]  381 #> [19706,]  381 #> [19707,]  381 #> [19708,]  380 #> [19709,]  380 #> [19710,]  381 #> [19711,]  380 #> [19712,]  381 #> [19713,]  380 #> [19714,]  381 #> [19715,]  381 #> [19716,]  381 #> [19717,]  380 #> [19718,]  381 #> [19719,]  381 #> [19720,]  381 #> [19721,]  381 #> [19722,]  380 #> [19723,]  381 #> [19724,]  381 #> [19725,]  381 #> [19726,]  381 #> [19727,]  380 #> [19728,]  381 #> [19729,]  381 #> [19730,]  381 #> [19731,]  381 #> [19732,]  381 #> [19733,]  381 #> [19734,]  381 #> [19735,]  380 #> [19736,]  381 #> [19737,]  381 #> [19738,]  381 #> [19739,]  381 #> [19740,]  381 #> [19741,]  381 #> [19742,]  381 #> [19743,]  380 #> [19744,]  380 #> [19745,]  381 #> [19746,]  381 #> [19747,]  381 #> [19748,]  381 #> [19749,]  380 #> [19750,]  381 #> [19751,]  381 #> [19752,]  380 #> [19753,]  381 #> [19754,]  381 #> [19755,]  380 #> [19756,]  381 #> [19757,]  381 #> [19758,]  380 #> [19759,]  381 #> [19760,]  381 #> [19761,]  381 #> [19762,]  381 #> [19763,]  381 #> [19764,]  381 #> [19765,]  381 #> [19766,]  380 #> [19767,]  381 #> [19768,]  381 #> [19769,]  380 #> [19770,]  381 #> [19771,]  381 #> [19772,]  381 #> [19773,]  381 #> [19774,]  381 #> [19775,]  381 #> [19776,]  381 #> [19777,]  381 #> [19778,]  381 #> [19779,]  380 #> [19780,]  380 #> [19781,]  380 #> [19782,]  380 #> [19783,]  380 #> [19784,]  381 #> [19785,]  381 #> [19786,]  381 #> [19787,]  380 #> [19788,]  380 #> [19789,]  380 #> [19790,]  380 #> [19791,]  381 #> [19792,]  380 #> [19793,]  381 #> [19794,]  381 #> [19795,]  380 #> [19796,]  381 #> [19797,]  381 #> [19798,]  381 #> [19799,]  380 #> [19800,]  381 #> [19801,]  383 #> [19802,]  383 #> [19803,]  382 #> [19804,]  383 #> [19805,]  383 #> [19806,]  382 #> [19807,]  383 #> [19808,]  383 #> [19809,]  383 #> [19810,]  383 #> [19811,]  382 #> [19812,]  383 #> [19813,]  383 #> [19814,]  383 #> [19815,]  383 #> [19816,]  382 #> [19817,]  383 #> [19818,]  383 #> [19819,]  382 #> [19820,]  383 #> [19821,]  383 #> [19822,]  383 #> [19823,]  383 #> [19824,]  383 #> [19825,]  383 #> [19826,]  383 #> [19827,]  383 #> [19828,]  383 #> [19829,]  383 #> [19830,]  383 #> [19831,]  383 #> [19832,]  383 #> [19833,]  383 #> [19834,]  382 #> [19835,]  382 #> [19836,]  383 #> [19837,]  382 #> [19838,]  382 #> [19839,]  383 #> [19840,]  383 #> [19841,]  383 #> [19842,]  383 #> [19843,]  383 #> [19844,]  383 #> [19845,]  382 #> [19846,]  383 #> [19847,]  383 #> [19848,]  383 #> [19849,]  382 #> [19850,]  383 #> [19851,]  383 #> [19852,]  382 #> [19853,]  383 #> [19854,]  383 #> [19855,]  383 #> [19856,]  383 #> [19857,]  383 #> [19858,]  383 #> [19859,]  383 #> [19860,]  383 #> [19861,]  383 #> [19862,]  383 #> [19863,]  383 #> [19864,]  382 #> [19865,]  383 #> [19866,]  383 #> [19867,]  383 #> [19868,]  382 #> [19869,]  383 #> [19870,]  383 #> [19871,]  383 #> [19872,]  382 #> [19873,]  383 #> [19874,]  383 #> [19875,]  383 #> [19876,]  383 #> [19877,]  383 #> [19878,]  383 #> [19879,]  383 #> [19880,]  383 #> [19881,]  383 #> [19882,]  383 #> [19883,]  383 #> [19884,]  383 #> [19885,]  383 #> [19886,]  383 #> [19887,]  383 #> [19888,]  383 #> [19889,]  383 #> [19890,]  383 #> [19891,]  383 #> [19892,]  383 #> [19893,]  383 #> [19894,]  383 #> [19895,]  383 #> [19896,]  382 #> [19897,]  382 #> [19898,]  383 #> [19899,]  383 #> [19900,]  383 #> [19901,]  385 #> [19902,]  385 #> [19903,]  384 #> [19904,]  384 #> [19905,]  385 #> [19906,]  385 #> [19907,]  384 #> [19908,]  384 #> [19909,]  385 #> [19910,]  384 #> [19911,]  385 #> [19912,]  384 #> [19913,]  385 #> [19914,]  384 #> [19915,]  384 #> [19916,]  384 #> [19917,]  385 #> [19918,]  385 #> [19919,]  385 #> [19920,]  385 #> [19921,]  385 #> [19922,]  385 #> [19923,]  384 #> [19924,]  385 #> [19925,]  384 #> [19926,]  384 #> [19927,]  385 #> [19928,]  385 #> [19929,]  385 #> [19930,]  384 #> [19931,]  384 #> [19932,]  384 #> [19933,]  385 #> [19934,]  384 #> [19935,]  384 #> [19936,]  385 #> [19937,]  384 #> [19938,]  385 #> [19939,]  385 #> [19940,]  384 #> [19941,]  385 #> [19942,]  385 #> [19943,]  385 #> [19944,]  384 #> [19945,]  384 #> [19946,]  384 #> [19947,]  384 #> [19948,]  385 #> [19949,]  384 #> [19950,]  385 #> [19951,]  385 #> [19952,]  384 #> [19953,]  385 #> [19954,]  385 #> [19955,]  384 #> [19956,]  385 #> [19957,]  384 #> [19958,]  385 #> [19959,]  384 #> [19960,]  384 #> [19961,]  385 #> [19962,]  385 #> [19963,]  385 #> [19964,]  385 #> [19965,]  385 #> [19966,]  385 #> [19967,]  384 #> [19968,]  384 #> [19969,]  384 #> [19970,]  385 #> [19971,]  384 #> [19972,]  384 #> [19973,]  385 #> [19974,]  384 #> [19975,]  384 #> [19976,]  384 #> [19977,]  385 #> [19978,]  384 #> [19979,]  385 #> [19980,]  384 #> [19981,]  385 #> [19982,]  385 #> [19983,]  385 #> [19984,]  385 #> [19985,]  385 #> [19986,]  384 #> [19987,]  385 #> [19988,]  384 #> [19989,]  385 #> [19990,]  385 #> [19991,]  385 #> [19992,]  384 #> [19993,]  385 #> [19994,]  385 #> [19995,]  384 #> [19996,]  384 #> [19997,]  384 #> [19998,]  384 #> [19999,]  385 #> [20000,]  385 computeForestLeafIndices(bart_model, X, \"mean\", c(1,3,9)) #>          [,1] [,2] [,3] #>     [1,]    1    0    0 #>     [2,]    0    2    1 #>     [3,]    0    2    1 #>     [4,]    0    1    1 #>     [5,]    1    0    0 #>     [6,]    1    0    0 #>     [7,]    0    2    1 #>     [8,]    1    0    0 #>     [9,]    1    0    0 #>    [10,]    0    2    1 #>    [11,]    0    1    1 #>    [12,]    1    0    0 #>    [13,]    0    1    1 #>    [14,]    1    0    0 #>    [15,]    1    0    0 #>    [16,]    0    2    1 #>    [17,]    0    1    1 #>    [18,]    0    2    1 #>    [19,]    0    2    1 #>    [20,]    1    0    0 #>    [21,]    0    1    1 #>    [22,]    0    1    1 #>    [23,]    0    2    1 #>    [24,]    0    2    1 #>    [25,]    0    2    1 #>    [26,]    1    0    0 #>    [27,]    0    1    1 #>    [28,]    1    0    0 #>    [29,]    0    2    1 #>    [30,]    0    1    1 #>    [31,]    0    2    1 #>    [32,]    0    2    1 #>    [33,]    1    0    0 #>    [34,]    0    2    1 #>    [35,]    0    1    1 #>    [36,]    0    2    1 #>    [37,]    0    2    1 #>    [38,]    1    0    0 #>    [39,]    0    2    1 #>    [40,]    0    2    1 #>    [41,]    1    0    0 #>    [42,]    0    2    1 #>    [43,]    1    0    0 #>    [44,]    0    1    1 #>    [45,]    1    0    0 #>    [46,]    1    0    0 #>    [47,]    0    2    1 #>    [48,]    0    2    1 #>    [49,]    0    1    1 #>    [50,]    1    0    0 #>    [51,]    1    0    0 #>    [52,]    0    1    1 #>    [53,]    1    0    0 #>    [54,]    0    1    1 #>    [55,]    1    0    0 #>    [56,]    1    0    0 #>    [57,]    1    0    0 #>    [58,]    1    0    0 #>    [59,]    0    2    1 #>    [60,]    1    0    0 #>    [61,]    1    0    0 #>    [62,]    0    2    1 #>    [63,]    0    2    1 #>    [64,]    1    0    0 #>    [65,]    1    0    0 #>    [66,]    1    0    0 #>    [67,]    0    2    1 #>    [68,]    1    0    0 #>    [69,]    0    1    1 #>    [70,]    0    2    1 #>    [71,]    1    0    0 #>    [72,]    1    0    0 #>    [73,]    1    0    0 #>    [74,]    1    0    0 #>    [75,]    1    0    0 #>    [76,]    1    0    0 #>    [77,]    0    2    1 #>    [78,]    1    0    0 #>    [79,]    0    1    1 #>    [80,]    0    1    1 #>    [81,]    1    0    0 #>    [82,]    0    1    1 #>    [83,]    0    1    1 #>    [84,]    0    2    1 #>    [85,]    0    2    1 #>    [86,]    0    2    1 #>    [87,]    1    0    0 #>    [88,]    0    1    1 #>    [89,]    0    1    1 #>    [90,]    0    1    1 #>    [91,]    0    1    1 #>    [92,]    1    0    0 #>    [93,]    0    2    1 #>    [94,]    1    0    0 #>    [95,]    0    1    1 #>    [96,]    1    0    0 #>    [97,]    1    0    0 #>    [98,]    0    2    1 #>    [99,]    0    1    1 #>   [100,]    0    2    1 #>   [101,]    2    3    2 #>   [102,]    3    4    3 #>   [103,]    2    3    2 #>   [104,]    3    4    3 #>   [105,]    3    4    3 #>   [106,]    2    3    2 #>   [107,]    3    4    3 #>   [108,]    3    4    3 #>   [109,]    3    4    3 #>   [110,]    3    4    3 #>   [111,]    2    3    2 #>   [112,]    3    4    3 #>   [113,]    3    4    3 #>   [114,]    2    3    2 #>   [115,]    3    4    3 #>   [116,]    2    3    2 #>   [117,]    3    4    3 #>   [118,]    3    4    3 #>   [119,]    2    3    2 #>   [120,]    3    4    3 #>   [121,]    3    4    3 #>   [122,]    3    4    3 #>   [123,]    3    4    3 #>   [124,]    3    4    3 #>   [125,]    3    4    3 #>   [126,]    2    3    2 #>   [127,]    3    4    3 #>   [128,]    2    3    2 #>   [129,]    3    4    3 #>   [130,]    3    4    3 #>   [131,]    3    4    3 #>   [132,]    3    4    3 #>   [133,]    3    4    3 #>   [134,]    2    3    2 #>   [135,]    2    3    2 #>   [136,]    3    4    3 #>   [137,]    2    3    2 #>   [138,]    2    3    2 #>   [139,]    3    4    3 #>   [140,]    3    4    3 #>   [141,]    3    4    3 #>   [142,]    2    3    2 #>   [143,]    3    4    3 #>   [144,]    3    4    3 #>   [145,]    2    3    2 #>   [146,]    3    4    3 #>   [147,]    3    4    3 #>   [148,]    3    4    3 #>   [149,]    2    3    2 #>   [150,]    3    4    3 #>   [151,]    3    4    3 #>   [152,]    2    3    2 #>   [153,]    3    4    3 #>   [154,]    3    4    3 #>   [155,]    3    4    3 #>   [156,]    2    3    2 #>   [157,]    3    4    3 #>   [158,]    3    4    3 #>   [159,]    2    3    2 #>   [160,]    3    4    3 #>   [161,]    3    4    3 #>   [162,]    3    4    3 #>   [163,]    3    4    3 #>   [164,]    2    3    2 #>   [165,]    2    3    2 #>   [166,]    3    4    3 #>   [167,]    3    4    3 #>   [168,]    2    3    2 #>   [169,]    2    3    2 #>   [170,]    3    4    3 #>   [171,]    3    4    3 #>   [172,]    2    3    2 #>   [173,]    2    3    2 #>   [174,]    3    4    3 #>   [175,]    3    4    3 #>   [176,]    3    4    3 #>   [177,]    2    3    2 #>   [178,]    3    4    3 #>   [179,]    2    3    2 #>   [180,]    3    4    3 #>   [181,]    3    4    3 #>   [182,]    3    4    3 #>   [183,]    3    4    3 #>   [184,]    3    4    3 #>   [185,]    3    4    3 #>   [186,]    3    4    3 #>   [187,]    3    4    3 #>   [188,]    3    4    3 #>   [189,]    2    3    2 #>   [190,]    3    4    3 #>   [191,]    3    4    3 #>   [192,]    3    4    3 #>   [193,]    3    4    3 #>   [194,]    2    3    2 #>   [195,]    3    4    3 #>   [196,]    2    3    2 #>   [197,]    2    3    2 #>   [198,]    3    4    3 #>   [199,]    3    4    3 #>   [200,]    2    3    2 #>   [201,]    5    6    4 #>   [202,]    4    5    5 #>   [203,]    5    6    4 #>   [204,]    5    6    4 #>   [205,]    5    6    4 #>   [206,]    4    5    5 #>   [207,]    5    6    4 #>   [208,]    5    6    4 #>   [209,]    5    6    4 #>   [210,]    5    6    4 #>   [211,]    4    5    5 #>   [212,]    4    5    5 #>   [213,]    5    6    4 #>   [214,]    5    6    4 #>   [215,]    4    5    5 #>   [216,]    5    6    4 #>   [217,]    4    5    5 #>   [218,]    4    5    5 #>   [219,]    4    5    5 #>   [220,]    5    6    4 #>   [221,]    4    5    5 #>   [222,]    5    6    4 #>   [223,]    4    5    5 #>   [224,]    5    6    4 #>   [225,]    5    6    4 #>   [226,]    4    5    5 #>   [227,]    5    6    4 #>   [228,]    5    6    4 #>   [229,]    4    5    5 #>   [230,]    4    5    5 #>   [231,]    4    5    5 #>   [232,]    4    5    5 #>   [233,]    5    6    4 #>   [234,]    4    5    5 #>   [235,]    4    5    5 #>   [236,]    5    6    4 #>   [237,]    4    5    5 #>   [238,]    4    5    5 #>   [239,]    5    6    4 #>   [240,]    5    6    4 #>   [241,]    5    6    4 #>   [242,]    4    5    5 #>   [243,]    4    5    5 #>   [244,]    4    5    5 #>   [245,]    5    6    4 #>   [246,]    4    5    5 #>   [247,]    4    5    5 #>   [248,]    4    5    5 #>   [249,]    5    6    4 #>   [250,]    5    6    4 #>   [251,]    4    5    5 #>   [252,]    5    6    4 #>   [253,]    5    6    4 #>   [254,]    5    6    4 #>   [255,]    5    6    4 #>   [256,]    4    5    5 #>   [257,]    5    6    4 #>   [258,]    5    6    4 #>   [259,]    5    6    4 #>   [260,]    4    5    5 #>   [261,]    4    5    5 #>   [262,]    4    5    5 #>   [263,]    4    5    5 #>   [264,]    4    5    5 #>   [265,]    4    5    5 #>   [266,]    4    5    5 #>   [267,]    5    6    4 #>   [268,]    4    5    5 #>   [269,]    4    5    5 #>   [270,]    4    5    5 #>   [271,]    5    6    4 #>   [272,]    5    6    4 #>   [273,]    5    6    4 #>   [274,]    5    6    4 #>   [275,]    4    5    5 #>   [276,]    5    6    4 #>   [277,]    5    6    4 #>   [278,]    4    5    5 #>   [279,]    4    5    5 #>   [280,]    5    6    4 #>   [281,]    4    5    5 #>   [282,]    4    5    5 #>   [283,]    4    5    5 #>   [284,]    5    6    4 #>   [285,]    5    6    4 #>   [286,]    5    6    4 #>   [287,]    5    6    4 #>   [288,]    5    6    4 #>   [289,]    4    5    5 #>   [290,]    5    6    4 #>   [291,]    5    6    4 #>   [292,]    4    5    5 #>   [293,]    4    5    5 #>   [294,]    4    5    5 #>   [295,]    4    5    5 #>   [296,]    4    5    5 #>   [297,]    4    5    5 #>   [298,]    4    5    5 #>   [299,]    5    6    4 #>   [300,]    4    5    5 #>   [301,]    6    8    7 #>   [302,]    6    8    7 #>   [303,]    6    7    6 #>   [304,]    6    8    7 #>   [305,]    6    8    7 #>   [306,]    6    8    7 #>   [307,]    6    8    7 #>   [308,]    6    8    7 #>   [309,]    6    8    7 #>   [310,]    6    8    7 #>   [311,]    6    8    7 #>   [312,]    6    7    6 #>   [313,]    6    8    7 #>   [314,]    6    7    6 #>   [315,]    6    8    7 #>   [316,]    6    8    7 #>   [317,]    6    8    7 #>   [318,]    6    8    7 #>   [319,]    6    8    7 #>   [320,]    6    8    7 #>   [321,]    6    8    7 #>   [322,]    6    8    7 #>   [323,]    6    8    7 #>   [324,]    6    8    7 #>   [325,]    6    8    7 #>   [326,]    6    7    6 #>   [327,]    6    8    7 #>   [328,]    6    8    7 #>   [329,]    6    8    7 #>   [330,]    6    8    7 #>   [331,]    6    8    7 #>   [332,]    6    7    6 #>   [333,]    6    8    7 #>   [334,]    6    8    7 #>   [335,]    6    8    7 #>   [336,]    6    8    7 #>   [337,]    6    8    7 #>   [338,]    6    8    7 #>   [339,]    6    8    7 #>   [340,]    6    8    7 #>   [341,]    6    8    7 #>   [342,]    6    7    6 #>   [343,]    6    8    7 #>   [344,]    6    8    7 #>   [345,]    6    8    7 #>   [346,]    6    8    7 #>   [347,]    6    8    7 #>   [348,]    6    7    6 #>   [349,]    6    8    7 #>   [350,]    6    8    7 #>   [351,]    6    7    6 #>   [352,]    6    8    7 #>   [353,]    6    8    7 #>   [354,]    6    7    6 #>   [355,]    6    8    7 #>   [356,]    6    8    7 #>   [357,]    6    8    7 #>   [358,]    6    8    7 #>   [359,]    6    8    7 #>   [360,]    6    8    7 #>   [361,]    6    8    7 #>   [362,]    6    7    6 #>   [363,]    6    8    7 #>   [364,]    6    8    7 #>   [365,]    6    8    7 #>   [366,]    6    7    6 #>   [367,]    6    8    7 #>   [368,]    6    8    7 #>   [369,]    6    7    6 #>   [370,]    6    8    7 #>   [371,]    6    8    7 #>   [372,]    6    8    7 #>   [373,]    6    8    7 #>   [374,]    6    8    7 #>   [375,]    6    8    7 #>   [376,]    6    8    7 #>   [377,]    6    8    7 #>   [378,]    6    8    7 #>   [379,]    6    8    7 #>   [380,]    6    7    6 #>   [381,]    6    7    6 #>   [382,]    6    8    7 #>   [383,]    6    8    7 #>   [384,]    6    8    7 #>   [385,]    6    8    7 #>   [386,]    6    8    7 #>   [387,]    6    8    7 #>   [388,]    6    8    7 #>   [389,]    6    7    6 #>   [390,]    6    8    7 #>   [391,]    6    8    7 #>   [392,]    6    8    7 #>   [393,]    6    8    7 #>   [394,]    6    8    7 #>   [395,]    6    8    7 #>   [396,]    6    8    7 #>   [397,]    6    8    7 #>   [398,]    6    8    7 #>   [399,]    6    8    7 #>   [400,]    6    8    7 #>   [401,]    8   10    9 #>   [402,]    7    9    9 #>   [403,]    8   10    9 #>   [404,]    8   10    9 #>   [405,]    7    9    9 #>   [406,]    7    9    9 #>   [407,]    8   10    9 #>   [408,]    7    9    9 #>   [409,]    8   10    9 #>   [410,]    8   10    9 #>   [411,]    7    9    9 #>   [412,]    7    9    9 #>   [413,]    8   10    9 #>   [414,]    8   10    9 #>   [415,]    7    9    8 #>   [416,]    8   10    9 #>   [417,]    7    9    8 #>   [418,]    7    9    9 #>   [419,]    7    9    9 #>   [420,]    8   10    9 #>   [421,]    7    9    9 #>   [422,]    8   10    9 #>   [423,]    7    9    9 #>   [424,]    8   10    9 #>   [425,]    8   10    9 #>   [426,]    7    9    9 #>   [427,]    8   10    9 #>   [428,]    8   10    9 #>   [429,]    7    9    9 #>   [430,]    7    9    9 #>   [431,]    7    9    8 #>   [432,]    7    9    9 #>   [433,]    8   10    9 #>   [434,]    7    9    8 #>   [435,]    7    9    9 #>   [436,]    8   10    9 #>   [437,]    7    9    8 #>   [438,]    7    9    9 #>   [439,]    8   10    9 #>   [440,]    7    9    9 #>   [441,]    8   10    9 #>   [442,]    7    9    8 #>   [443,]    7    9    8 #>   [444,]    7    9    8 #>   [445,]    8   10    9 #>   [446,]    7    9    9 #>   [447,]    7    9    9 #>   [448,]    7    9    9 #>   [449,]    8   10    9 #>   [450,]    8   10    9 #>   [451,]    7    9    9 #>   [452,]    8   10    9 #>   [453,]    8   10    9 #>   [454,]    8   10    9 #>   [455,]    8   10    9 #>   [456,]    7    9    9 #>   [457,]    8   10    9 #>   [458,]    8   10    9 #>   [459,]    8   10    9 #>   [460,]    7    9    9 #>   [461,]    7    9    9 #>   [462,]    7    9    9 #>   [463,]    7    9    8 #>   [464,]    7    9    9 #>   [465,]    7    9    9 #>   [466,]    7    9    9 #>   [467,]    8   10    9 #>   [468,]    7    9    9 #>   [469,]    7    9    9 #>   [470,]    7    9    9 #>   [471,]    8   10    9 #>   [472,]    8   10    9 #>   [473,]    8   10    9 #>   [474,]    8   10    9 #>   [475,]    7    9    8 #>   [476,]    8   10    9 #>   [477,]    8   10    9 #>   [478,]    7    9    8 #>   [479,]    7    9    8 #>   [480,]    8   10    9 #>   [481,]    7    9    9 #>   [482,]    7    9    9 #>   [483,]    7    9    9 #>   [484,]    8   10    9 #>   [485,]    8   10    9 #>   [486,]    8   10    9 #>   [487,]    8   10    9 #>   [488,]    8   10    9 #>   [489,]    7    9    9 #>   [490,]    8   10    9 #>   [491,]    8   10    9 #>   [492,]    7    9    9 #>   [493,]    7    9    9 #>   [494,]    7    9    9 #>   [495,]    7    9    8 #>   [496,]    7    9    9 #>   [497,]    7    9    9 #>   [498,]    7    9    9 #>   [499,]    7    9    9 #>   [500,]    7    9    8 #>   [501,]    9   11   10 #>   [502,]    9   11   10 #>   [503,]    9   11   10 #>   [504,]   10   12   10 #>   [505,]    9   11   10 #>   [506,]    9   11   10 #>   [507,]    9   11   10 #>   [508,]    9   11   10 #>   [509,]    9   11   10 #>   [510,]    9   11   10 #>   [511,]   10   12   10 #>   [512,]   10   12   10 #>   [513,]    9   11   10 #>   [514,]   10   12   10 #>   [515,]   10   12   10 #>   [516,]    9   11   10 #>   [517,]    9   11   10 #>   [518,]    9   11   10 #>   [519,]   10   12   10 #>   [520,]    9   11   10 #>   [521,]   10   12   10 #>   [522,]    9   11   10 #>   [523,]    9   11   10 #>   [524,]    9   11   10 #>   [525,]    9   11   10 #>   [526,]    9   11   10 #>   [527,]   10   12   10 #>   [528,]    9   11   10 #>   [529,]    9   11   10 #>   [530,]    9   11   10 #>   [531,]    9   11   10 #>   [532,]    9   11   10 #>   [533,]    9   11   10 #>   [534,]    9   11   10 #>   [535,]    9   11   10 #>   [536,]    9   11   10 #>   [537,]    9   11   10 #>   [538,]   10   12   10 #>   [539,]    9   11   10 #>   [540,]    9   11   10 #>   [541,]   10   12   10 #>   [542,]   10   12   10 #>   [543,]    9   11   10 #>   [544,]    9   11   10 #>   [545,]    9   11   10 #>   [546,]    9   11   10 #>   [547,]    9   11   10 #>   [548,]   10   12   10 #>   [549,]    9   11   10 #>   [550,]    9   11   10 #>   [551,]    9   11   10 #>   [552,]    9   11   10 #>   [553,]    9   11   10 #>   [554,]    9   11   10 #>   [555,]    9   11   10 #>   [556,]    9   11   10 #>   [557,]    9   11   10 #>   [558,]   10   12   10 #>   [559,]    9   11   10 #>   [560,]    9   11   10 #>   [561,]   10   12   10 #>   [562,]    9   11   10 #>   [563,]    9   11   10 #>   [564,]    9   11   10 #>   [565,]    9   11   10 #>   [566,]    9   11   10 #>   [567,]    9   11   10 #>   [568,]   10   12   10 #>   [569,]   10   12   10 #>   [570,]    9   11   10 #>   [571,]    9   11   10 #>   [572,]    9   11   10 #>   [573,]    9   11   10 #>   [574,]   10   12   10 #>   [575,]   10   12   10 #>   [576,]    9   11   10 #>   [577,]    9   11   10 #>   [578,]    9   11   10 #>   [579,]    9   11   10 #>   [580,]    9   11   10 #>   [581,]    9   11   10 #>   [582,]   10   12   10 #>   [583,]    9   11   10 #>   [584,]    9   11   10 #>   [585,]    9   11   10 #>   [586,]    9   11   10 #>   [587,]    9   11   10 #>   [588,]    9   11   10 #>   [589,]    9   11   10 #>   [590,]    9   11   10 #>   [591,]    9   11   10 #>   [592,]   10   12   10 #>   [593,]   10   12   10 #>   [594,]    9   11   10 #>   [595,]    9   11   10 #>   [596,]   10   12   10 #>   [597,]   10   12   10 #>   [598,]    9   11   10 #>   [599,]    9   11   10 #>   [600,]    9   11   10 #>   [601,]   12   14   12 #>   [602,]   11   13   11 #>   [603,]   12   14   11 #>   [604,]   12   14   12 #>   [605,]   12   14   11 #>   [606,]   11   13   11 #>   [607,]   12   14   12 #>   [608,]   12   14   11 #>   [609,]   12   14   12 #>   [610,]   12   14   12 #>   [611,]   11   13   11 #>   [612,]   11   13   11 #>   [613,]   12   14   12 #>   [614,]   12   14   12 #>   [615,]   11   13   11 #>   [616,]   12   14   12 #>   [617,]   11   13   11 #>   [618,]   11   13   11 #>   [619,]   11   13   11 #>   [620,]   12   14   12 #>   [621,]   11   13   11 #>   [622,]   12   14   12 #>   [623,]   11   13   11 #>   [624,]   12   14   12 #>   [625,]   12   14   12 #>   [626,]   11   13   11 #>   [627,]   12   14   11 #>   [628,]   12   14   12 #>   [629,]   11   13   11 #>   [630,]   11   13   11 #>   [631,]   11   13   11 #>   [632,]   11   13   11 #>   [633,]   12   14   11 #>   [634,]   11   13   11 #>   [635,]   11   13   11 #>   [636,]   12   14   12 #>   [637,]   11   13   11 #>   [638,]   11   13   11 #>   [639,]   12   14   12 #>   [640,]   11   13   11 #>   [641,]   12   14   11 #>   [642,]   11   13   11 #>   [643,]   11   13   11 #>   [644,]   11   13   11 #>   [645,]   12   14   12 #>   [646,]   11   13   11 #>   [647,]   11   13   11 #>   [648,]   11   13   11 #>   [649,]   12   14   12 #>   [650,]   12   14   12 #>   [651,]   11   13   11 #>   [652,]   12   14   12 #>   [653,]   12   14   12 #>   [654,]   12   14   12 #>   [655,]   12   14   12 #>   [656,]   11   13   11 #>   [657,]   12   14   12 #>   [658,]   12   14   12 #>   [659,]   12   14   12 #>   [660,]   11   13   11 #>   [661,]   11   13   11 #>   [662,]   11   13   11 #>   [663,]   11   13   11 #>   [664,]   11   13   11 #>   [665,]   11   13   11 #>   [666,]   11   13   11 #>   [667,]   12   14   12 #>   [668,]   11   13   11 #>   [669,]   11   13   11 #>   [670,]   11   13   11 #>   [671,]   12   14   11 #>   [672,]   12   14   12 #>   [673,]   12   14   12 #>   [674,]   12   14   11 #>   [675,]   11   13   11 #>   [676,]   12   14   12 #>   [677,]   12   14   11 #>   [678,]   11   13   11 #>   [679,]   11   13   11 #>   [680,]   12   14   11 #>   [681,]   11   13   11 #>   [682,]   11   13   11 #>   [683,]   11   13   11 #>   [684,]   12   14   11 #>   [685,]   12   14   12 #>   [686,]   12   14   12 #>   [687,]   12   14   12 #>   [688,]   12   14   12 #>   [689,]   11   13   11 #>   [690,]   12   14   12 #>   [691,]   12   14   12 #>   [692,]   11   13   11 #>   [693,]   11   13   11 #>   [694,]   11   13   11 #>   [695,]   11   13   11 #>   [696,]   11   13   11 #>   [697,]   11   13   11 #>   [698,]   11   13   11 #>   [699,]   11   13   11 #>   [700,]   11   13   11 #>   [701,]   13   15   14 #>   [702,]   13   15   14 #>   [703,]   14   16   13 #>   [704,]   15   16   13 #>   [705,]   13   15   14 #>   [706,]   13   15   14 #>   [707,]   14   16   13 #>   [708,]   14   16   13 #>   [709,]   13   15   14 #>   [710,]   15   16   13 #>   [711,]   13   15   14 #>   [712,]   15   16   13 #>   [713,]   13   15   14 #>   [714,]   15   16   13 #>   [715,]   13   15   14 #>   [716,]   14   16   13 #>   [717,]   13   15   14 #>   [718,]   13   15   14 #>   [719,]   13   15   14 #>   [720,]   13   15   14 #>   [721,]   13   15   14 #>   [722,]   13   15   14 #>   [723,]   14   16   13 #>   [724,]   13   15   14 #>   [725,]   14   16   13 #>   [726,]   13   15   14 #>   [727,]   13   15   14 #>   [728,]   13   15   14 #>   [729,]   13   15   14 #>   [730,]   13   15   14 #>   [731,]   15   16   13 #>   [732,]   15   16   13 #>   [733,]   13   15   14 #>   [734,]   13   15   14 #>   [735,]   14   16   13 #>   [736,]   13   15   14 #>   [737,]   14   16   13 #>   [738,]   13   15   14 #>   [739,]   13   15   14 #>   [740,]   14   16   13 #>   [741,]   13   15   14 #>   [742,]   13   15   14 #>   [743,]   13   15   14 #>   [744,]   14   16   13 #>   [745,]   13   15   14 #>   [746,]   14   16   13 #>   [747,]   14   16   13 #>   [748,]   13   15   14 #>   [749,]   13   15   14 #>   [750,]   13   15   14 #>   [751,]   13   15   14 #>   [752,]   14   16   13 #>   [753,]   13   15   14 #>   [754,]   13   15   14 #>   [755,]   14   16   13 #>   [756,]   13   15   14 #>   [757,]   14   16   13 #>   [758,]   13   15   14 #>   [759,]   14   16   13 #>   [760,]   15   16   13 #>   [761,]   13   15   14 #>   [762,]   13   15   14 #>   [763,]   13   15   14 #>   [764,]   13   15   14 #>   [765,]   13   15   14 #>   [766,]   13   15   14 #>   [767,]   14   16   13 #>   [768,]   15   16   13 #>   [769,]   13   15   14 #>   [770,]   13   15   14 #>   [771,]   13   15   14 #>   [772,]   14   16   13 #>   [773,]   13   15   14 #>   [774,]   15   16   13 #>   [775,]   15   16   13 #>   [776,]   14   16   13 #>   [777,]   13   15   14 #>   [778,]   14   16   13 #>   [779,]   13   15   14 #>   [780,]   14   16   13 #>   [781,]   13   15   14 #>   [782,]   13   15   14 #>   [783,]   13   15   14 #>   [784,]   13   15   14 #>   [785,]   13   15   14 #>   [786,]   14   16   13 #>   [787,]   13   15   14 #>   [788,]   14   16   13 #>   [789,]   13   15   14 #>   [790,]   13   15   14 #>   [791,]   13   15   14 #>   [792,]   15   16   13 #>   [793,]   13   15   14 #>   [794,]   13   15   14 #>   [795,]   14   16   13 #>   [796,]   15   16   13 #>   [797,]   15   16   13 #>   [798,]   14   16   13 #>   [799,]   13   15   14 #>   [800,]   13   15   14 #>   [801,]   16   17   16 #>   [802,]   17   18   15 #>   [803,]   17   18   15 #>   [804,]   16   17   16 #>   [805,]   16   17   16 #>   [806,]   17   18   15 #>   [807,]   17   18   15 #>   [808,]   16   17   16 #>   [809,]   16   17   16 #>   [810,]   17   18   15 #>   [811,]   16   17   16 #>   [812,]   17   18   15 #>   [813,]   16   17   16 #>   [814,]   16   17   16 #>   [815,]   16   17   16 #>   [816,]   16   17   16 #>   [817,]   16   17   16 #>   [818,]   17   18   15 #>   [819,]   17   18   15 #>   [820,]   17   18   15 #>   [821,]   16   17   16 #>   [822,]   16   17   16 #>   [823,]   17   18   15 #>   [824,]   16   17   16 #>   [825,]   17   18   15 #>   [826,]   16   17   16 #>   [827,]   16   17   16 #>   [828,]   17   18   15 #>   [829,]   17   18   15 #>   [830,]   16   17   16 #>   [831,]   17   18   15 #>   [832,]   17   18   15 #>   [833,]   17   18   15 #>   [834,]   17   18   15 #>   [835,]   16   17   16 #>   [836,]   16   17   16 #>   [837,]   16   17   16 #>   [838,]   16   17   16 #>   [839,]   17   18   15 #>   [840,]   17   18   15 #>   [841,]   16   17   16 #>   [842,]   17   18   15 #>   [843,]   16   17   16 #>   [844,]   16   17   16 #>   [845,]   16   17   16 #>   [846,]   16   17   16 #>   [847,]   17   18   15 #>   [848,]   17   18   15 #>   [849,]   16   17   16 #>   [850,]   17   18   15 #>   [851,]   16   17   16 #>   [852,]   16   17   16 #>   [853,]   16   17   16 #>   [854,]   16   17   16 #>   [855,]   16   17   16 #>   [856,]   17   18   15 #>   [857,]   17   18   15 #>   [858,]   16   17   16 #>   [859,]   16   17   16 #>   [860,]   17   18   15 #>   [861,]   17   18   15 #>   [862,]   16   17   16 #>   [863,]   16   17   16 #>   [864,]   17   18   15 #>   [865,]   17   18   15 #>   [866,]   16   17   16 #>   [867,]   16   17   16 #>   [868,]   16   17   16 #>   [869,]   16   17   16 #>   [870,]   17   18   15 #>   [871,]   17   18   15 #>   [872,]   16   17   16 #>   [873,]   17   18   15 #>   [874,]   16   17   16 #>   [875,]   17   18   15 #>   [876,]   16   17   16 #>   [877,]   17   18   15 #>   [878,]   17   18   15 #>   [879,]   16   17   16 #>   [880,]   16   17   16 #>   [881,]   16   17   16 #>   [882,]   16   17   16 #>   [883,]   16   17   16 #>   [884,]   17   18   15 #>   [885,]   16   17   16 #>   [886,]   17   18   15 #>   [887,]   16   17   16 #>   [888,]   16   17   16 #>   [889,]   16   17   16 #>   [890,]   16   17   16 #>   [891,]   16   17   16 #>   [892,]   16   17   16 #>   [893,]   17   18   15 #>   [894,]   17   18   15 #>   [895,]   16   17   16 #>   [896,]   16   17   16 #>   [897,]   17   18   15 #>   [898,]   17   18   15 #>   [899,]   16   17   16 #>   [900,]   17   18   15 #>   [901,]   18   19   17 #>   [902,]   19   20   17 #>   [903,]   18   19   17 #>   [904,]   18   19   17 #>   [905,]   18   19   17 #>   [906,]   18   19   18 #>   [907,]   18   19   17 #>   [908,]   18   19   18 #>   [909,]   19   20   18 #>   [910,]   19   20   17 #>   [911,]   18   19   17 #>   [912,]   19   20   18 #>   [913,]   19   20   17 #>   [914,]   18   19   17 #>   [915,]   18   19   18 #>   [916,]   18   19   17 #>   [917,]   19   20   17 #>   [918,]   19   20   17 #>   [919,]   18   19   17 #>   [920,]   19   20   17 #>   [921,]   19   20   17 #>   [922,]   18   19   17 #>   [923,]   19   20   17 #>   [924,]   19   20   17 #>   [925,]   18   19   17 #>   [926,]   18   19   18 #>   [927,]   19   20   17 #>   [928,]   18   19   17 #>   [929,]   19   20   17 #>   [930,]   18   19   17 #>   [931,]   19   20   17 #>   [932,]   19   20   17 #>   [933,]   19   20   18 #>   [934,]   18   19   17 #>   [935,]   18   19   17 #>   [936,]   19   20   17 #>   [937,]   18   19   17 #>   [938,]   18   19   17 #>   [939,]   18   19   17 #>   [940,]   19   20   17 #>   [941,]   18   19   17 #>   [942,]   18   19   17 #>   [943,]   18   19   18 #>   [944,]   18   19   17 #>   [945,]   18   19   18 #>   [946,]   18   19   18 #>   [947,]   18   19   17 #>   [948,]   18   19   17 #>   [949,]   18   19   17 #>   [950,]   18   19   17 #>   [951,]   18   19   18 #>   [952,]   18   19   17 #>   [953,]   19   20   17 #>   [954,]   18   19   17 #>   [955,]   18   19   17 #>   [956,]   18   19   18 #>   [957,]   18   19   18 #>   [958,]   18   19   17 #>   [959,]   18   19   17 #>   [960,]   19   20   17 #>   [961,]   19   20   18 #>   [962,]   18   19   17 #>   [963,]   19   20   17 #>   [964,]   18   19   18 #>   [965,]   18   19   17 #>   [966,]   18   19   18 #>   [967,]   18   19   17 #>   [968,]   18   19   18 #>   [969,]   18   19   17 #>   [970,]   19   20   17 #>   [971,]   18   19   17 #>   [972,]   18   19   17 #>   [973,]   18   19   17 #>   [974,]   18   19   17 #>   [975,]   19   20   17 #>   [976,]   18   19   18 #>   [977,]   18   19   17 #>   [978,]   18   19   17 #>   [979,]   18   19   17 #>   [980,]   19   20   17 #>   [981,]   19   20   17 #>   [982,]   18   19   17 #>   [983,]   19   20   17 #>   [984,]   19   20   17 #>   [985,]   18   19   17 #>   [986,]   19   20   17 #>   [987,]   18   19   17 #>   [988,]   19   20   17 #>   [989,]   18   19   17 #>   [990,]   18   19   17 #>   [991,]   18   19   17 #>   [992,]   18   19   17 #>   [993,]   18   19   17 #>   [994,]   18   19   18 #>   [995,]   18   19   17 #>   [996,]   18   19   18 #>   [997,]   18   19   17 #>   [998,]   18   19   17 #>   [999,]   18   19   17 #>  [1000,]   18   19   17 #>  [1001,]   21   22   19 #>  [1002,]   20   21   19 #>  [1003,]   20   21   19 #>  [1004,]   20   21   19 #>  [1005,]   21   22   19 #>  [1006,]   20   21   19 #>  [1007,]   20   21   19 #>  [1008,]   20   21   19 #>  [1009,]   21   22   19 #>  [1010,]   20   21   19 #>  [1011,]   21   22   19 #>  [1012,]   20   21   19 #>  [1013,]   21   22   19 #>  [1014,]   20   21   19 #>  [1015,]   20   21   19 #>  [1016,]   20   21   19 #>  [1017,]   21   22   19 #>  [1018,]   21   22   19 #>  [1019,]   20   21   19 #>  [1020,]   21   22   19 #>  [1021,]   21   22   19 #>  [1022,]   20   21   19 #>  [1023,]   20   21   19 #>  [1024,]   21   22   19 #>  [1025,]   20   21   19 #>  [1026,]   20   21   19 #>  [1027,]   21   22   19 #>  [1028,]   21   22   19 #>  [1029,]   21   22   19 #>  [1030,]   20   21   19 #>  [1031,]   20   21   19 #>  [1032,]   20   21   19 #>  [1033,]   21   22   19 #>  [1034,]   20   21   19 #>  [1035,]   20   21   19 #>  [1036,]   21   22   19 #>  [1037,]   20   21   19 #>  [1038,]   21   22   19 #>  [1039,]   21   22   19 #>  [1040,]   20   21   19 #>  [1041,]   21   22   19 #>  [1042,]   21   22   19 #>  [1043,]   20   21   19 #>  [1044,]   20   21   19 #>  [1045,]   20   21   19 #>  [1046,]   20   21   19 #>  [1047,]   20   21   19 #>  [1048,]   20   21   19 #>  [1049,]   20   21   19 #>  [1050,]   20   21   19 #>  [1051,]   21   22   19 #>  [1052,]   20   21   19 #>  [1053,]   21   22   19 #>  [1054,]   21   22   19 #>  [1055,]   20   21   19 #>  [1056,]   21   22   19 #>  [1057,]   20   21   19 #>  [1058,]   21   22   19 #>  [1059,]   20   21   19 #>  [1060,]   20   21   19 #>  [1061,]   21   22   19 #>  [1062,]   21   22   19 #>  [1063,]   20   21   19 #>  [1064,]   21   22   19 #>  [1065,]   21   22   19 #>  [1066,]   21   22   19 #>  [1067,]   20   21   19 #>  [1068,]   20   21   19 #>  [1069,]   20   21   19 #>  [1070,]   21   22   19 #>  [1071,]   20   21   19 #>  [1072,]   20   21   19 #>  [1073,]   20   21   19 #>  [1074,]   20   21   19 #>  [1075,]   20   21   19 #>  [1076,]   20   21   19 #>  [1077,]   21   22   19 #>  [1078,]   20   21   19 #>  [1079,]   21   22   19 #>  [1080,]   20   21   19 #>  [1081,]   20   21   19 #>  [1082,]   21   22   19 #>  [1083,]   21   22   19 #>  [1084,]   21   22   19 #>  [1085,]   21   22   19 #>  [1086,]   20   21   19 #>  [1087,]   21   22   19 #>  [1088,]   20   21   19 #>  [1089,]   21   22   19 #>  [1090,]   21   22   19 #>  [1091,]   21   22   19 #>  [1092,]   20   21   19 #>  [1093,]   21   22   19 #>  [1094,]   21   22   19 #>  [1095,]   20   21   19 #>  [1096,]   20   21   19 #>  [1097,]   20   21   19 #>  [1098,]   20   21   19 #>  [1099,]   21   22   19 #>  [1100,]   20   21   19 #>  [1101,]   23   24   20 #>  [1102,]   22   23   22 #>  [1103,]   22   23   22 #>  [1104,]   22   23   21 #>  [1105,]   23   24   20 #>  [1106,]   22   23   22 #>  [1107,]   22   23   22 #>  [1108,]   22   23   21 #>  [1109,]   22   23   21 #>  [1110,]   23   24   20 #>  [1111,]   23   24   20 #>  [1112,]   23   24   20 #>  [1113,]   22   23   21 #>  [1114,]   23   24   20 #>  [1115,]   23   24   20 #>  [1116,]   22   23   22 #>  [1117,]   23   24   20 #>  [1118,]   23   24   20 #>  [1119,]   22   23   22 #>  [1120,]   22   23   22 #>  [1121,]   22   23   21 #>  [1122,]   23   24   20 #>  [1123,]   22   23   22 #>  [1124,]   22   23   22 #>  [1125,]   22   23   22 #>  [1126,]   23   24   20 #>  [1127,]   23   24   20 #>  [1128,]   22   23   22 #>  [1129,]   22   23   22 #>  [1130,]   22   23   21 #>  [1131,]   23   24   20 #>  [1132,]   23   24   20 #>  [1133,]   22   23   22 #>  [1134,]   22   23   22 #>  [1135,]   22   23   21 #>  [1136,]   22   23   22 #>  [1137,]   22   23   22 #>  [1138,]   23   24   20 #>  [1139,]   22   23   22 #>  [1140,]   22   23   22 #>  [1141,]   22   23   22 #>  [1142,]   22   23   22 #>  [1143,]   23   24   20 #>  [1144,]   22   23   21 #>  [1145,]   22   23   21 #>  [1146,]   22   23   21 #>  [1147,]   23   24   20 #>  [1148,]   22   23   22 #>  [1149,]   22   23   21 #>  [1150,]   22   23   22 #>  [1151,]   22   23   22 #>  [1152,]   23   24   20 #>  [1153,]   22   23   22 #>  [1154,]   22   23   21 #>  [1155,]   22   23   21 #>  [1156,]   22   23   22 #>  [1157,]   22   23   22 #>  [1158,]   23   24   20 #>  [1159,]   23   24   20 #>  [1160,]   22   23   22 #>  [1161,]   23   24   20 #>  [1162,]   22   23   21 #>  [1163,]   22   23   22 #>  [1164,]   22   23   22 #>  [1165,]   22   23   22 #>  [1166,]   23   24   20 #>  [1167,]   22   23   21 #>  [1168,]   22   23   21 #>  [1169,]   22   23   21 #>  [1170,]   23   24   20 #>  [1171,]   23   24   20 #>  [1172,]   22   23   22 #>  [1173,]   22   23   22 #>  [1174,]   22   23   21 #>  [1175,]   23   24   20 #>  [1176,]   22   23   22 #>  [1177,]   23   24   20 #>  [1178,]   22   23   22 #>  [1179,]   23   24   20 #>  [1180,]   22   23   21 #>  [1181,]   22   23   21 #>  [1182,]   22   23   21 #>  [1183,]   22   23   21 #>  [1184,]   22   23   22 #>  [1185,]   22   23   21 #>  [1186,]   22   23   22 #>  [1187,]   23   24   20 #>  [1188,]   22   23   21 #>  [1189,]   22   23   21 #>  [1190,]   23   24   20 #>  [1191,]   23   24   20 #>  [1192,]   23   24   20 #>  [1193,]   22   23   22 #>  [1194,]   22   23   22 #>  [1195,]   23   24   20 #>  [1196,]   22   23   21 #>  [1197,]   22   23   22 #>  [1198,]   22   23   22 #>  [1199,]   22   23   21 #>  [1200,]   23   24   20 #>  [1201,]   25   26   23 #>  [1202,]   25   26   23 #>  [1203,]   25   26   23 #>  [1204,]   24   25   25 #>  [1205,]   25   26   23 #>  [1206,]   25   26   23 #>  [1207,]   25   26   23 #>  [1208,]   24   25   24 #>  [1209,]   24   25   25 #>  [1210,]   24   25   25 #>  [1211,]   25   26   23 #>  [1212,]   25   26   23 #>  [1213,]   25   26   23 #>  [1214,]   25   26   23 #>  [1215,]   25   26   23 #>  [1216,]   25   26   23 #>  [1217,]   25   26   23 #>  [1218,]   25   26   23 #>  [1219,]   25   26   23 #>  [1220,]   25   26   23 #>  [1221,]   25   26   23 #>  [1222,]   25   26   23 #>  [1223,]   25   26   23 #>  [1224,]   25   26   23 #>  [1225,]   25   26   23 #>  [1226,]   25   26   23 #>  [1227,]   25   26   23 #>  [1228,]   25   26   23 #>  [1229,]   25   26   23 #>  [1230,]   25   26   23 #>  [1231,]   25   26   23 #>  [1232,]   25   26   23 #>  [1233,]   25   26   23 #>  [1234,]   25   26   23 #>  [1235,]   25   26   23 #>  [1236,]   25   26   23 #>  [1237,]   25   26   23 #>  [1238,]   25   26   23 #>  [1239,]   25   26   23 #>  [1240,]   25   26   23 #>  [1241,]   25   26   23 #>  [1242,]   25   26   23 #>  [1243,]   24   25   24 #>  [1244,]   25   26   23 #>  [1245,]   25   26   23 #>  [1246,]   25   26   23 #>  [1247,]   25   26   23 #>  [1248,]   25   26   23 #>  [1249,]   25   26   23 #>  [1250,]   25   26   23 #>  [1251,]   24   25   24 #>  [1252,]   25   26   23 #>  [1253,]   25   26   23 #>  [1254,]   25   26   23 #>  [1255,]   25   26   23 #>  [1256,]   25   26   23 #>  [1257,]   25   26   23 #>  [1258,]   25   26   23 #>  [1259,]   25   26   23 #>  [1260,]   24   25   25 #>  [1261,]   25   26   23 #>  [1262,]   25   26   23 #>  [1263,]   25   26   23 #>  [1264,]   24   25   25 #>  [1265,]   25   26   23 #>  [1266,]   25   26   23 #>  [1267,]   24   25   25 #>  [1268,]   25   26   23 #>  [1269,]   25   26   23 #>  [1270,]   25   26   23 #>  [1271,]   25   26   23 #>  [1272,]   25   26   23 #>  [1273,]   25   26   23 #>  [1274,]   25   26   23 #>  [1275,]   25   26   23 #>  [1276,]   25   26   23 #>  [1277,]   25   26   23 #>  [1278,]   24   25   24 #>  [1279,]   25   26   23 #>  [1280,]   25   26   23 #>  [1281,]   25   26   23 #>  [1282,]   25   26   23 #>  [1283,]   25   26   23 #>  [1284,]   25   26   23 #>  [1285,]   24   25   25 #>  [1286,]   25   26   23 #>  [1287,]   25   26   23 #>  [1288,]   25   26   23 #>  [1289,]   24   25   24 #>  [1290,]   25   26   23 #>  [1291,]   24   25   24 #>  [1292,]   25   26   23 #>  [1293,]   25   26   23 #>  [1294,]   25   26   23 #>  [1295,]   24   25   24 #>  [1296,]   25   26   23 #>  [1297,]   25   26   23 #>  [1298,]   25   26   23 #>  [1299,]   25   26   23 #>  [1300,]   25   26   23 #>  [1301,]   26   27   27 #>  [1302,]   27   28   26 #>  [1303,]   27   28   26 #>  [1304,]   28   28   26 #>  [1305,]   26   27   27 #>  [1306,]   27   28   26 #>  [1307,]   27   28   26 #>  [1308,]   27   28   26 #>  [1309,]   27   28   26 #>  [1310,]   26   27   27 #>  [1311,]   26   27   27 #>  [1312,]   26   27   27 #>  [1313,]   27   28   26 #>  [1314,]   26   27   27 #>  [1315,]   26   27   27 #>  [1316,]   26   27   27 #>  [1317,]   26   27   27 #>  [1318,]   26   27   27 #>  [1319,]   26   27   27 #>  [1320,]   27   28   26 #>  [1321,]   28   28   26 #>  [1322,]   26   27   27 #>  [1323,]   28   28   26 #>  [1324,]   26   27   27 #>  [1325,]   28   28   26 #>  [1326,]   26   27   27 #>  [1327,]   26   27   27 #>  [1328,]   27   28   26 #>  [1329,]   27   28   26 #>  [1330,]   27   28   26 #>  [1331,]   26   27   27 #>  [1332,]   26   27   27 #>  [1333,]   27   28   26 #>  [1334,]   27   28   26 #>  [1335,]   27   28   26 #>  [1336,]   27   28   26 #>  [1337,]   27   28   26 #>  [1338,]   26   27   27 #>  [1339,]   26   27   27 #>  [1340,]   27   28   26 #>  [1341,]   27   28   26 #>  [1342,]   27   28   26 #>  [1343,]   26   27   27 #>  [1344,]   27   28   26 #>  [1345,]   28   28   26 #>  [1346,]   27   28   26 #>  [1347,]   26   27   27 #>  [1348,]   27   28   26 #>  [1349,]   27   28   26 #>  [1350,]   27   28   26 #>  [1351,]   26   27   27 #>  [1352,]   26   27   27 #>  [1353,]   28   28   26 #>  [1354,]   27   28   26 #>  [1355,]   27   28   26 #>  [1356,]   27   28   26 #>  [1357,]   27   28   26 #>  [1358,]   26   27   27 #>  [1359,]   26   27   27 #>  [1360,]   27   28   26 #>  [1361,]   26   27   27 #>  [1362,]   27   28   26 #>  [1363,]   27   28   26 #>  [1364,]   27   28   26 #>  [1365,]   27   28   26 #>  [1366,]   26   27   27 #>  [1367,]   27   28   26 #>  [1368,]   26   27   27 #>  [1369,]   27   28   26 #>  [1370,]   26   27   27 #>  [1371,]   26   27   27 #>  [1372,]   28   28   26 #>  [1373,]   28   28   26 #>  [1374,]   28   28   26 #>  [1375,]   26   27   27 #>  [1376,]   28   28   26 #>  [1377,]   26   27   27 #>  [1378,]   27   28   26 #>  [1379,]   26   27   27 #>  [1380,]   27   28   26 #>  [1381,]   27   28   26 #>  [1382,]   27   28   26 #>  [1383,]   26   27   27 #>  [1384,]   28   28   26 #>  [1385,]   27   28   26 #>  [1386,]   27   28   26 #>  [1387,]   26   27   27 #>  [1388,]   27   28   26 #>  [1389,]   27   28   26 #>  [1390,]   26   27   27 #>  [1391,]   26   27   27 #>  [1392,]   26   27   27 #>  [1393,]   27   28   26 #>  [1394,]   28   28   26 #>  [1395,]   26   27   27 #>  [1396,]   26   27   27 #>  [1397,]   27   28   26 #>  [1398,]   27   28   26 #>  [1399,]   27   28   26 #>  [1400,]   26   27   27 #>  [1401,]   30   30   29 #>  [1402,]   30   30   29 #>  [1403,]   29   29   28 #>  [1404,]   29   29   28 #>  [1405,]   30   30   29 #>  [1406,]   30   30   29 #>  [1407,]   29   29   28 #>  [1408,]   29   29   28 #>  [1409,]   30   30   29 #>  [1410,]   30   30   29 #>  [1411,]   30   30   29 #>  [1412,]   29   29   28 #>  [1413,]   30   30   29 #>  [1414,]   30   30   29 #>  [1415,]   30   30   29 #>  [1416,]   30   30   29 #>  [1417,]   30   30   29 #>  [1418,]   30   30   29 #>  [1419,]   30   30   29 #>  [1420,]   30   30   29 #>  [1421,]   30   30   29 #>  [1422,]   30   30   29 #>  [1423,]   30   30   29 #>  [1424,]   30   30   29 #>  [1425,]   29   29   28 #>  [1426,]   30   30   29 #>  [1427,]   30   30   29 #>  [1428,]   30   30   29 #>  [1429,]   30   30   29 #>  [1430,]   30   30   29 #>  [1431,]   29   29   28 #>  [1432,]   30   30   29 #>  [1433,]   30   30   29 #>  [1434,]   30   30   29 #>  [1435,]   30   30   29 #>  [1436,]   30   30   29 #>  [1437,]   30   30   29 #>  [1438,]   30   30   29 #>  [1439,]   30   30   29 #>  [1440,]   30   30   29 #>  [1441,]   30   30   29 #>  [1442,]   30   30   29 #>  [1443,]   30   30   29 #>  [1444,]   30   30   29 #>  [1445,]   30   30   29 #>  [1446,]   30   30   29 #>  [1447,]   30   30   29 #>  [1448,]   30   30   29 #>  [1449,]   30   30   29 #>  [1450,]   30   30   29 #>  [1451,]   30   30   29 #>  [1452,]   29   29   28 #>  [1453,]   30   30   29 #>  [1454,]   30   30   29 #>  [1455,]   30   30   29 #>  [1456,]   30   30   29 #>  [1457,]   29   29   28 #>  [1458,]   30   30   29 #>  [1459,]   29   29   28 #>  [1460,]   29   29   28 #>  [1461,]   30   30   29 #>  [1462,]   30   30   29 #>  [1463,]   30   30   29 #>  [1464,]   30   30   29 #>  [1465,]   30   30   29 #>  [1466,]   30   30   29 #>  [1467,]   30   30   29 #>  [1468,]   29   29   28 #>  [1469,]   30   30   29 #>  [1470,]   30   30   29 #>  [1471,]   30   30   29 #>  [1472,]   30   30   29 #>  [1473,]   30   30   29 #>  [1474,]   30   30   29 #>  [1475,]   30   30   29 #>  [1476,]   30   30   29 #>  [1477,]   30   30   29 #>  [1478,]   30   30   29 #>  [1479,]   30   30   29 #>  [1480,]   30   30   29 #>  [1481,]   30   30   29 #>  [1482,]   30   30   29 #>  [1483,]   30   30   29 #>  [1484,]   30   30   29 #>  [1485,]   30   30   29 #>  [1486,]   30   30   29 #>  [1487,]   30   30   29 #>  [1488,]   30   30   29 #>  [1489,]   30   30   29 #>  [1490,]   30   30   29 #>  [1491,]   30   30   29 #>  [1492,]   30   30   29 #>  [1493,]   30   30   29 #>  [1494,]   30   30   29 #>  [1495,]   30   30   29 #>  [1496,]   29   29   28 #>  [1497,]   29   29   28 #>  [1498,]   30   30   29 #>  [1499,]   30   30   29 #>  [1500,]   30   30   29 #>  [1501,]   32   32   30 #>  [1502,]   31   31   30 #>  [1503,]   31   31   30 #>  [1504,]   31   31   30 #>  [1505,]   32   32   30 #>  [1506,]   31   31   30 #>  [1507,]   31   31   30 #>  [1508,]   31   31   30 #>  [1509,]   31   31   30 #>  [1510,]   31   31   30 #>  [1511,]   31   31   30 #>  [1512,]   31   31   30 #>  [1513,]   31   31   30 #>  [1514,]   32   32   30 #>  [1515,]   32   32   30 #>  [1516,]   31   31   30 #>  [1517,]   31   31   30 #>  [1518,]   32   32   30 #>  [1519,]   31   31   30 #>  [1520,]   31   31   30 #>  [1521,]   31   31   30 #>  [1522,]   31   31   30 #>  [1523,]   31   31   30 #>  [1524,]   31   31   30 #>  [1525,]   31   31   30 #>  [1526,]   31   31   30 #>  [1527,]   32   32   30 #>  [1528,]   31   31   30 #>  [1529,]   31   31   30 #>  [1530,]   31   31   30 #>  [1531,]   31   31   30 #>  [1532,]   32   32   30 #>  [1533,]   31   31   30 #>  [1534,]   31   31   30 #>  [1535,]   31   31   30 #>  [1536,]   31   31   30 #>  [1537,]   31   31   30 #>  [1538,]   31   31   30 #>  [1539,]   31   31   30 #>  [1540,]   31   31   30 #>  [1541,]   31   31   30 #>  [1542,]   31   31   30 #>  [1543,]   31   31   30 #>  [1544,]   31   31   30 #>  [1545,]   31   31   30 #>  [1546,]   31   31   30 #>  [1547,]   31   31   30 #>  [1548,]   31   31   30 #>  [1549,]   31   31   30 #>  [1550,]   31   31   30 #>  [1551,]   31   31   30 #>  [1552,]   31   31   30 #>  [1553,]   31   31   30 #>  [1554,]   31   31   30 #>  [1555,]   31   31   30 #>  [1556,]   31   31   30 #>  [1557,]   31   31   30 #>  [1558,]   31   31   30 #>  [1559,]   31   31   30 #>  [1560,]   31   31   30 #>  [1561,]   31   31   30 #>  [1562,]   31   31   30 #>  [1563,]   31   31   30 #>  [1564,]   31   31   30 #>  [1565,]   31   31   30 #>  [1566,]   31   31   30 #>  [1567,]   31   31   30 #>  [1568,]   31   31   30 #>  [1569,]   31   31   30 #>  [1570,]   31   31   30 #>  [1571,]   32   32   30 #>  [1572,]   31   31   30 #>  [1573,]   31   31   30 #>  [1574,]   31   31   30 #>  [1575,]   32   32   30 #>  [1576,]   31   31   30 #>  [1577,]   31   31   30 #>  [1578,]   31   31   30 #>  [1579,]   31   31   30 #>  [1580,]   31   31   30 #>  [1581,]   31   31   30 #>  [1582,]   31   31   30 #>  [1583,]   31   31   30 #>  [1584,]   31   31   30 #>  [1585,]   31   31   30 #>  [1586,]   31   31   30 #>  [1587,]   31   31   30 #>  [1588,]   31   31   30 #>  [1589,]   31   31   30 #>  [1590,]   31   31   30 #>  [1591,]   32   32   30 #>  [1592,]   31   31   30 #>  [1593,]   31   31   30 #>  [1594,]   31   31   30 #>  [1595,]   32   32   30 #>  [1596,]   31   31   30 #>  [1597,]   31   31   30 #>  [1598,]   31   31   30 #>  [1599,]   31   31   30 #>  [1600,]   32   32   30 #>  [1601,]   34   34   32 #>  [1602,]   34   34   32 #>  [1603,]   33   33   31 #>  [1604,]   34   34   32 #>  [1605,]   33   33   31 #>  [1606,]   34   34   32 #>  [1607,]   33   33   31 #>  [1608,]   33   33   31 #>  [1609,]   34   34   32 #>  [1610,]   34   34   32 #>  [1611,]   34   34   32 #>  [1612,]   34   34   32 #>  [1613,]   33   33   31 #>  [1614,]   34   34   32 #>  [1615,]   34   34   32 #>  [1616,]   33   33   31 #>  [1617,]   33   33   31 #>  [1618,]   34   34   32 #>  [1619,]   34   34   32 #>  [1620,]   33   33   31 #>  [1621,]   34   34   32 #>  [1622,]   33   33   31 #>  [1623,]   34   34   32 #>  [1624,]   33   33   31 #>  [1625,]   33   33   31 #>  [1626,]   34   34   32 #>  [1627,]   34   34   32 #>  [1628,]   34   34   32 #>  [1629,]   33   33   31 #>  [1630,]   34   34   32 #>  [1631,]   34   34   32 #>  [1632,]   34   34   32 #>  [1633,]   34   34   32 #>  [1634,]   34   34   32 #>  [1635,]   34   34   32 #>  [1636,]   34   34   32 #>  [1637,]   34   34   32 #>  [1638,]   34   34   32 #>  [1639,]   33   33   31 #>  [1640,]   33   33   31 #>  [1641,]   34   34   32 #>  [1642,]   34   34   32 #>  [1643,]   33   33   31 #>  [1644,]   33   33   31 #>  [1645,]   33   33   31 #>  [1646,]   33   33   31 #>  [1647,]   33   33   31 #>  [1648,]   34   34   32 #>  [1649,]   33   33   31 #>  [1650,]   33   33   31 #>  [1651,]   33   33   31 #>  [1652,]   34   34   32 #>  [1653,]   33   33   31 #>  [1654,]   33   33   31 #>  [1655,]   33   33   31 #>  [1656,]   33   33   31 #>  [1657,]   34   34   32 #>  [1658,]   34   34   32 #>  [1659,]   33   33   31 #>  [1660,]   34   34   32 #>  [1661,]   34   34   32 #>  [1662,]   34   34   32 #>  [1663,]   33   33   31 #>  [1664,]   34   34   32 #>  [1665,]   33   33   31 #>  [1666,]   33   33   31 #>  [1667,]   34   34   32 #>  [1668,]   34   34   32 #>  [1669,]   34   34   32 #>  [1670,]   33   33   31 #>  [1671,]   33   33   31 #>  [1672,]   33   33   31 #>  [1673,]   34   34   32 #>  [1674,]   34   34   32 #>  [1675,]   34   34   32 #>  [1676,]   33   33   31 #>  [1677,]   33   33   31 #>  [1678,]   33   33   31 #>  [1679,]   33   33   31 #>  [1680,]   34   34   32 #>  [1681,]   34   34   32 #>  [1682,]   34   34   32 #>  [1683,]   33   33   31 #>  [1684,]   33   33   31 #>  [1685,]   34   34   32 #>  [1686,]   33   33   31 #>  [1687,]   34   34   32 #>  [1688,]   34   34   32 #>  [1689,]   33   33   31 #>  [1690,]   33   33   31 #>  [1691,]   34   34   32 #>  [1692,]   34   34   32 #>  [1693,]   34   34   32 #>  [1694,]   33   33   31 #>  [1695,]   34   34   32 #>  [1696,]   34   34   32 #>  [1697,]   34   34   32 #>  [1698,]   33   33   31 #>  [1699,]   34   34   32 #>  [1700,]   33   33   31 #>  [1701,]   36   36   34 #>  [1702,]   37   36   34 #>  [1703,]   36   36   34 #>  [1704,]   36   36   34 #>  [1705,]   37   36   34 #>  [1706,]   36   36   34 #>  [1707,]   37   36   34 #>  [1708,]   37   36   34 #>  [1709,]   37   36   34 #>  [1710,]   35   35   33 #>  [1711,]   36   36   34 #>  [1712,]   37   36   34 #>  [1713,]   37   36   34 #>  [1714,]   36   36   34 #>  [1715,]   37   36   34 #>  [1716,]   36   36   34 #>  [1717,]   37   36   34 #>  [1718,]   35   35   33 #>  [1719,]   36   36   34 #>  [1720,]   37   36   34 #>  [1721,]   37   36   34 #>  [1722,]   37   36   34 #>  [1723,]   37   36   34 #>  [1724,]   37   36   34 #>  [1725,]   35   35   33 #>  [1726,]   36   36   34 #>  [1727,]   37   36   34 #>  [1728,]   36   36   34 #>  [1729,]   37   36   34 #>  [1730,]   37   36   34 #>  [1731,]   37   36   34 #>  [1732,]   37   36   34 #>  [1733,]   37   36   34 #>  [1734,]   36   36   34 #>  [1735,]   36   36   34 #>  [1736,]   37   36   34 #>  [1737,]   36   36   34 #>  [1738,]   36   36   34 #>  [1739,]   35   35   33 #>  [1740,]   37   36   34 #>  [1741,]   37   36   34 #>  [1742,]   36   36   34 #>  [1743,]   35   35   33 #>  [1744,]   37   36   34 #>  [1745,]   35   35   33 #>  [1746,]   37   36   34 #>  [1747,]   37   36   34 #>  [1748,]   37   36   34 #>  [1749,]   36   36   34 #>  [1750,]   37   36   34 #>  [1751,]   37   36   34 #>  [1752,]   36   36   34 #>  [1753,]   37   36   34 #>  [1754,]   37   36   34 #>  [1755,]   37   36   34 #>  [1756,]   36   36   34 #>  [1757,]   37   36   34 #>  [1758,]   37   36   34 #>  [1759,]   36   36   34 #>  [1760,]   37   36   34 #>  [1761,]   37   36   34 #>  [1762,]   37   36   34 #>  [1763,]   37   36   34 #>  [1764,]   36   36   34 #>  [1765,]   36   36   34 #>  [1766,]   37   36   34 #>  [1767,]   37   36   34 #>  [1768,]   36   36   34 #>  [1769,]   36   36   34 #>  [1770,]   37   36   34 #>  [1771,]   37   36   34 #>  [1772,]   36   36   34 #>  [1773,]   35   35   33 #>  [1774,]   37   36   34 #>  [1775,]   35   35   33 #>  [1776,]   37   36   34 #>  [1777,]   35   35   33 #>  [1778,]   37   36   34 #>  [1779,]   36   36   34 #>  [1780,]   37   36   34 #>  [1781,]   37   36   34 #>  [1782,]   37   36   34 #>  [1783,]   37   36   34 #>  [1784,]   37   36   34 #>  [1785,]   37   36   34 #>  [1786,]   37   36   34 #>  [1787,]   37   36   34 #>  [1788,]   37   36   34 #>  [1789,]   36   36   34 #>  [1790,]   37   36   34 #>  [1791,]   37   36   34 #>  [1792,]   37   36   34 #>  [1793,]   37   36   34 #>  [1794,]   36   36   34 #>  [1795,]   37   36   34 #>  [1796,]   36   36   34 #>  [1797,]   36   36   34 #>  [1798,]   37   36   34 #>  [1799,]   37   36   34 #>  [1800,]   36   36   34 #>  [1801,]   39   38   35 #>  [1802,]   38   37   37 #>  [1803,]   39   38   35 #>  [1804,]   39   38   35 #>  [1805,]   39   38   35 #>  [1806,]   38   37   36 #>  [1807,]   39   38   35 #>  [1808,]   39   38   35 #>  [1809,]   39   38   35 #>  [1810,]   39   38   35 #>  [1811,]   38   37   36 #>  [1812,]   38   37   37 #>  [1813,]   39   38   35 #>  [1814,]   39   38   35 #>  [1815,]   38   37   36 #>  [1816,]   39   38   35 #>  [1817,]   38   37   37 #>  [1818,]   39   38   35 #>  [1819,]   38   37   36 #>  [1820,]   39   38   35 #>  [1821,]   39   38   35 #>  [1822,]   39   38   35 #>  [1823,]   38   37   36 #>  [1824,]   39   38   35 #>  [1825,]   39   38   35 #>  [1826,]   38   37   36 #>  [1827,]   39   38   35 #>  [1828,]   39   38   35 #>  [1829,]   38   37   37 #>  [1830,]   38   37   36 #>  [1831,]   38   37   36 #>  [1832,]   39   38   35 #>  [1833,]   39   38   35 #>  [1834,]   38   37   36 #>  [1835,]   38   37   36 #>  [1836,]   39   38   35 #>  [1837,]   38   37   36 #>  [1838,]   39   38   35 #>  [1839,]   39   38   35 #>  [1840,]   39   38   35 #>  [1841,]   39   38   35 #>  [1842,]   38   37   36 #>  [1843,]   38   37   36 #>  [1844,]   38   37   36 #>  [1845,]   39   38   35 #>  [1846,]   38   37   36 #>  [1847,]   38   37   36 #>  [1848,]   38   37   36 #>  [1849,]   39   38   35 #>  [1850,]   39   38   35 #>  [1851,]   39   38   35 #>  [1852,]   39   38   35 #>  [1853,]   39   38   35 #>  [1854,]   39   38   35 #>  [1855,]   39   38   35 #>  [1856,]   38   37   36 #>  [1857,]   39   38   35 #>  [1858,]   39   38   35 #>  [1859,]   39   38   35 #>  [1860,]   38   37   37 #>  [1861,]   38   37   36 #>  [1862,]   39   38   35 #>  [1863,]   38   37   37 #>  [1864,]   38   37   36 #>  [1865,]   38   37   36 #>  [1866,]   38   37   36 #>  [1867,]   39   38   35 #>  [1868,]   38   37   36 #>  [1869,]   39   38   35 #>  [1870,]   38   37   37 #>  [1871,]   39   38   35 #>  [1872,]   39   38   35 #>  [1873,]   39   38   35 #>  [1874,]   39   38   35 #>  [1875,]   38   37   36 #>  [1876,]   39   38   35 #>  [1877,]   39   38   35 #>  [1878,]   38   37   36 #>  [1879,]   38   37   36 #>  [1880,]   39   38   35 #>  [1881,]   38   37   37 #>  [1882,]   39   38   35 #>  [1883,]   39   38   35 #>  [1884,]   39   38   35 #>  [1885,]   39   38   35 #>  [1886,]   39   38   35 #>  [1887,]   39   38   35 #>  [1888,]   39   38   35 #>  [1889,]   39   38   35 #>  [1890,]   39   38   35 #>  [1891,]   39   38   35 #>  [1892,]   38   37   36 #>  [1893,]   38   37   36 #>  [1894,]   38   37   36 #>  [1895,]   38   37   36 #>  [1896,]   38   37   36 #>  [1897,]   39   38   35 #>  [1898,]   39   38   35 #>  [1899,]   39   38   35 #>  [1900,]   38   37   36 #>  [1901,]   41   40   39 #>  [1902,]   40   39   38 #>  [1903,]   40   39   38 #>  [1904,]   41   40   39 #>  [1905,]   41   40   39 #>  [1906,]   41   40   39 #>  [1907,]   40   39   38 #>  [1908,]   41   40   39 #>  [1909,]   41   40   39 #>  [1910,]   41   40   39 #>  [1911,]   41   40   39 #>  [1912,]   41   40   39 #>  [1913,]   40   39   38 #>  [1914,]   41   40   39 #>  [1915,]   41   40   39 #>  [1916,]   40   39   38 #>  [1917,]   41   40   39 #>  [1918,]   40   39   38 #>  [1919,]   40   39   38 #>  [1920,]   41   40   39 #>  [1921,]   40   39   38 #>  [1922,]   40   39   38 #>  [1923,]   40   39   38 #>  [1924,]   40   39   38 #>  [1925,]   41   40   39 #>  [1926,]   41   40   39 #>  [1927,]   41   40   39 #>  [1928,]   41   40   39 #>  [1929,]   40   39   38 #>  [1930,]   40   39   38 #>  [1931,]   40   39   38 #>  [1932,]   40   39   38 #>  [1933,]   41   40   39 #>  [1934,]   40   39   38 #>  [1935,]   40   39   38 #>  [1936,]   40   39   38 #>  [1937,]   40   39   38 #>  [1938,]   41   40   39 #>  [1939,]   40   39   38 #>  [1940,]   40   39   38 #>  [1941,]   41   40   39 #>  [1942,]   41   40   39 #>  [1943,]   41   40   39 #>  [1944,]   40   39   38 #>  [1945,]   41   40   39 #>  [1946,]   41   40   39 #>  [1947,]   40   39   38 #>  [1948,]   40   39   38 #>  [1949,]   40   39   38 #>  [1950,]   41   40   39 #>  [1951,]   41   40   39 #>  [1952,]   41   40   39 #>  [1953,]   41   40   39 #>  [1954,]   40   39   38 #>  [1955,]   41   40   39 #>  [1956,]   41   40   39 #>  [1957,]   41   40   39 #>  [1958,]   41   40   39 #>  [1959,]   40   39   38 #>  [1960,]   41   40   39 #>  [1961,]   41   40   39 #>  [1962,]   40   39   38 #>  [1963,]   41   40   39 #>  [1964,]   41   40   39 #>  [1965,]   41   40   39 #>  [1966,]   41   40   39 #>  [1967,]   41   40   39 #>  [1968,]   41   40   39 #>  [1969,]   41   40   39 #>  [1970,]   40   39   38 #>  [1971,]   41   40   39 #>  [1972,]   41   40   39 #>  [1973,]   41   40   39 #>  [1974,]   41   40   39 #>  [1975,]   41   40   39 #>  [1976,]   41   40   39 #>  [1977,]   40   39   38 #>  [1978,]   41   40   39 #>  [1979,]   40   39   38 #>  [1980,]   40   39   38 #>  [1981,]   41   40   39 #>  [1982,]   41   40   39 #>  [1983,]   40   39   38 #>  [1984,]   41   40   39 #>  [1985,]   40   39   38 #>  [1986,]   40   39   38 #>  [1987,]   41   40   39 #>  [1988,]   41   40   39 #>  [1989,]   41   40   39 #>  [1990,]   41   40   39 #>  [1991,]   41   40   39 #>  [1992,]   41   40   39 #>  [1993,]   40   39   38 #>  [1994,]   41   40   39 #>  [1995,]   40   39   38 #>  [1996,]   41   40   39 #>  [1997,]   41   40   39 #>  [1998,]   40   39   38 #>  [1999,]   41   40   39 #>  [2000,]   40   39   38 #>  [2001,]   42   43   41 #>  [2002,]   42   43   40 #>  [2003,]   42   42   40 #>  [2004,]   42   42   40 #>  [2005,]   42   42   40 #>  [2006,]   43   41   40 #>  [2007,]   42   43   40 #>  [2008,]   43   41   40 #>  [2009,]   43   41   40 #>  [2010,]   42   42   40 #>  [2011,]   42   42   40 #>  [2012,]   43   41   40 #>  [2013,]   42   43   41 #>  [2014,]   42   42   41 #>  [2015,]   43   41   41 #>  [2016,]   42   43   41 #>  [2017,]   42   43   40 #>  [2018,]   42   43   40 #>  [2019,]   42   43   40 #>  [2020,]   43   41   40 #>  [2021,]   42   42   41 #>  [2022,]   42   43   40 #>  [2023,]   42   43   40 #>  [2024,]   42   42   40 #>  [2025,]   42   42   40 #>  [2026,]   43   41   40 #>  [2027,]   42   43   40 #>  [2028,]   42   42   40 #>  [2029,]   42   43   41 #>  [2030,]   42   43   40 #>  [2031,]   42   42   40 #>  [2032,]   42   42   40 #>  [2033,]   43   41   41 #>  [2034,]   42   42   40 #>  [2035,]   42   42   40 #>  [2036,]   42   43   40 #>  [2037,]   42   43   40 #>  [2038,]   42   43   40 #>  [2039,]   42   42   40 #>  [2040,]   42   42   40 #>  [2041,]   42   43   41 #>  [2042,]   42   42   40 #>  [2043,]   43   41   40 #>  [2044,]   42   43   41 #>  [2045,]   43   41   40 #>  [2046,]   43   41   40 #>  [2047,]   42   42   40 #>  [2048,]   42   42   40 #>  [2049,]   42   43   40 #>  [2050,]   43   41   41 #>  [2051,]   43   41   40 #>  [2052,]   42   42   40 #>  [2053,]   43   41   40 #>  [2054,]   42   42   40 #>  [2055,]   42   43   40 #>  [2056,]   43   41   40 #>  [2057,]   43   41   40 #>  [2058,]   43   41   40 #>  [2059,]   42   43   41 #>  [2060,]   42   43   40 #>  [2061,]   43   41   40 #>  [2062,]   42   42   40 #>  [2063,]   42   43   40 #>  [2064,]   43   41   40 #>  [2065,]   43   41   40 #>  [2066,]   43   41   40 #>  [2067,]   42   42   40 #>  [2068,]   43   41   41 #>  [2069,]   42   43   40 #>  [2070,]   42   42   41 #>  [2071,]   42   43   40 #>  [2072,]   43   41   40 #>  [2073,]   42   42   41 #>  [2074,]   42   42   40 #>  [2075,]   42   43   40 #>  [2076,]   43   41   40 #>  [2077,]   42   43   40 #>  [2078,]   43   41   40 #>  [2079,]   42   42   40 #>  [2080,]   42   43   40 #>  [2081,]   43   41   40 #>  [2082,]   42   42   40 #>  [2083,]   42   43   40 #>  [2084,]   42   43   40 #>  [2085,]   42   43   40 #>  [2086,]   42   42   40 #>  [2087,]   42   43   40 #>  [2088,]   42   42   40 #>  [2089,]   42   42   40 #>  [2090,]   42   43   40 #>  [2091,]   42   42   40 #>  [2092,]   43   41   40 #>  [2093,]   42   43   40 #>  [2094,]   43   41   40 #>  [2095,]   42   43   40 #>  [2096,]   43   41   41 #>  [2097,]   43   41   40 #>  [2098,]   42   42   40 #>  [2099,]   42   43   41 #>  [2100,]   42   43   40 #>  [2101,]   44   44   43 #>  [2102,]   45   45   42 #>  [2103,]   44   44   42 #>  [2104,]   44   44   43 #>  [2105,]   44   44   43 #>  [2106,]   44   44   43 #>  [2107,]   44   44   42 #>  [2108,]   44   44   43 #>  [2109,]   45   45   43 #>  [2110,]   45   45   43 #>  [2111,]   44   44   43 #>  [2112,]   45   45   43 #>  [2113,]   44   44   42 #>  [2114,]   44   44   43 #>  [2115,]   44   44   43 #>  [2116,]   44   44   42 #>  [2117,]   44   44   43 #>  [2118,]   44   44   42 #>  [2119,]   44   44   42 #>  [2120,]   44   44   43 #>  [2121,]   45   45   42 #>  [2122,]   44   44   42 #>  [2123,]   44   44   42 #>  [2124,]   44   44   42 #>  [2125,]   44   44   43 #>  [2126,]   44   44   43 #>  [2127,]   44   44   43 #>  [2128,]   44   44   43 #>  [2129,]   45   45   42 #>  [2130,]   44   44   42 #>  [2131,]   44   44   42 #>  [2132,]   44   44   42 #>  [2133,]   45   45   43 #>  [2134,]   44   44   42 #>  [2135,]   44   44   42 #>  [2136,]   44   44   42 #>  [2137,]   44   44   42 #>  [2138,]   44   44   43 #>  [2139,]   44   44   42 #>  [2140,]   44   44   42 #>  [2141,]   44   44   43 #>  [2142,]   44   44   43 #>  [2143,]   44   44   43 #>  [2144,]   44   44   42 #>  [2145,]   44   44   43 #>  [2146,]   44   44   43 #>  [2147,]   44   44   42 #>  [2148,]   44   44   43 #>  [2149,]   44   44   42 #>  [2150,]   44   44   43 #>  [2151,]   44   44   43 #>  [2152,]   44   44   43 #>  [2153,]   44   44   43 #>  [2154,]   44   44   42 #>  [2155,]   44   44   43 #>  [2156,]   44   44   43 #>  [2157,]   44   44   43 #>  [2158,]   44   44   43 #>  [2159,]   44   44   42 #>  [2160,]   45   45   43 #>  [2161,]   44   44   43 #>  [2162,]   44   44   42 #>  [2163,]   45   45   43 #>  [2164,]   44   44   43 #>  [2165,]   44   44   43 #>  [2166,]   44   44   43 #>  [2167,]   44   44   43 #>  [2168,]   44   44   43 #>  [2169,]   44   44   43 #>  [2170,]   45   45   42 #>  [2171,]   44   44   43 #>  [2172,]   44   44   43 #>  [2173,]   44   44   43 #>  [2174,]   44   44   43 #>  [2175,]   44   44   43 #>  [2176,]   44   44   43 #>  [2177,]   44   44   42 #>  [2178,]   44   44   43 #>  [2179,]   44   44   42 #>  [2180,]   44   44   42 #>  [2181,]   45   45   43 #>  [2182,]   44   44   43 #>  [2183,]   44   44   42 #>  [2184,]   44   44   43 #>  [2185,]   44   44   42 #>  [2186,]   45   45   42 #>  [2187,]   44   44   43 #>  [2188,]   44   44   43 #>  [2189,]   44   44   43 #>  [2190,]   44   44   43 #>  [2191,]   44   44   43 #>  [2192,]   44   44   43 #>  [2193,]   44   44   42 #>  [2194,]   44   44   43 #>  [2195,]   44   44   42 #>  [2196,]   44   44   43 #>  [2197,]   44   44   43 #>  [2198,]   44   44   42 #>  [2199,]   44   44   43 #>  [2200,]   44   44   42 #>  [2201,]   47   47   44 #>  [2202,]   46   46   46 #>  [2203,]   46   46   46 #>  [2204,]   47   47   45 #>  [2205,]   46   46   46 #>  [2206,]   46   46   46 #>  [2207,]   47   47   44 #>  [2208,]   47   47   44 #>  [2209,]   47   47   45 #>  [2210,]   47   47   45 #>  [2211,]   46   46   46 #>  [2212,]   46   46   46 #>  [2213,]   47   47   44 #>  [2214,]   46   46   46 #>  [2215,]   47   47   45 #>  [2216,]   47   47   44 #>  [2217,]   47   47   44 #>  [2218,]   47   47   45 #>  [2219,]   46   46   47 #>  [2220,]   46   46   47 #>  [2221,]   47   47   45 #>  [2222,]   46   46   47 #>  [2223,]   47   47   45 #>  [2224,]   46   46   46 #>  [2225,]   47   47   44 #>  [2226,]   46   46   47 #>  [2227,]   47   47   45 #>  [2228,]   47   47   44 #>  [2229,]   46   46   47 #>  [2230,]   46   46   47 #>  [2231,]   46   46   46 #>  [2232,]   46   46   46 #>  [2233,]   46   46   46 #>  [2234,]   46   46   46 #>  [2235,]   46   46   46 #>  [2236,]   46   46   47 #>  [2237,]   47   47   44 #>  [2238,]   47   47   45 #>  [2239,]   47   47   44 #>  [2240,]   46   46   46 #>  [2241,]   46   46   47 #>  [2242,]   46   46   46 #>  [2243,]   47   47   44 #>  [2244,]   47   47   44 #>  [2245,]   47   47   44 #>  [2246,]   47   47   44 #>  [2247,]   47   47   44 #>  [2248,]   46   46   46 #>  [2249,]   46   46   46 #>  [2250,]   46   46   47 #>  [2251,]   46   46   47 #>  [2252,]   46   46   46 #>  [2253,]   47   47   44 #>  [2254,]   46   46   46 #>  [2255,]   46   46   47 #>  [2256,]   47   47   44 #>  [2257,]   46   46   46 #>  [2258,]   46   46   47 #>  [2259,]   46   46   47 #>  [2260,]   46   46   47 #>  [2261,]   47   47   45 #>  [2262,]   46   46   46 #>  [2263,]   46   46   46 #>  [2264,]   47   47   45 #>  [2265,]   46   46   46 #>  [2266,]   46   46   47 #>  [2267,]   46   46   46 #>  [2268,]   46   46   46 #>  [2269,]   46   46   47 #>  [2270,]   47   47   44 #>  [2271,]   47   47   44 #>  [2272,]   47   47   44 #>  [2273,]   47   47   45 #>  [2274,]   47   47   45 #>  [2275,]   47   47   45 #>  [2276,]   47   47   44 #>  [2277,]   47   47   44 #>  [2278,]   46   46   46 #>  [2279,]   47   47   44 #>  [2280,]   46   46   47 #>  [2281,]   46   46   47 #>  [2282,]   47   47   45 #>  [2283,]   46   46   47 #>  [2284,]   47   47   44 #>  [2285,]   46   46   47 #>  [2286,]   47   47   44 #>  [2287,]   47   47   44 #>  [2288,]   47   47   44 #>  [2289,]   46   46   46 #>  [2290,]   47   47   44 #>  [2291,]   46   46   46 #>  [2292,]   46   46   46 #>  [2293,]   46   46   46 #>  [2294,]   47   47   44 #>  [2295,]   47   47   44 #>  [2296,]   47   47   45 #>  [2297,]   46   46   47 #>  [2298,]   46   46   46 #>  [2299,]   46   46   46 #>  [2300,]   47   47   44 #>  [2301,]   49   48   48 #>  [2302,]   49   48   48 #>  [2303,]   48   49   49 #>  [2304,]   49   48   48 #>  [2305,]   49   48   48 #>  [2306,]   48   49   49 #>  [2307,]   49   48   48 #>  [2308,]   49   48   48 #>  [2309,]   49   48   48 #>  [2310,]   49   48   48 #>  [2311,]   48   50   49 #>  [2312,]   49   48   48 #>  [2313,]   49   48   48 #>  [2314,]   49   48   48 #>  [2315,]   49   48   48 #>  [2316,]   48   49   49 #>  [2317,]   49   48   48 #>  [2318,]   49   48   48 #>  [2319,]   48   50   49 #>  [2320,]   49   48   48 #>  [2321,]   49   48   48 #>  [2322,]   49   48   48 #>  [2323,]   49   48   48 #>  [2324,]   49   48   48 #>  [2325,]   49   48   48 #>  [2326,]   49   48   48 #>  [2327,]   49   48   48 #>  [2328,]   49   48   48 #>  [2329,]   49   48   48 #>  [2330,]   49   48   48 #>  [2331,]   49   48   48 #>  [2332,]   49   48   48 #>  [2333,]   49   48   48 #>  [2334,]   48   49   49 #>  [2335,]   48   49   49 #>  [2336,]   49   48   48 #>  [2337,]   48   49   49 #>  [2338,]   48   50   49 #>  [2339,]   49   48   48 #>  [2340,]   49   48   48 #>  [2341,]   49   48   48 #>  [2342,]   49   48   48 #>  [2343,]   49   48   48 #>  [2344,]   49   48   48 #>  [2345,]   48   49   49 #>  [2346,]   49   48   48 #>  [2347,]   49   48   48 #>  [2348,]   49   48   48 #>  [2349,]   48   49   49 #>  [2350,]   49   48   48 #>  [2351,]   49   48   48 #>  [2352,]   48   49   49 #>  [2353,]   49   48   48 #>  [2354,]   49   48   48 #>  [2355,]   49   48   48 #>  [2356,]   49   48   48 #>  [2357,]   49   48   48 #>  [2358,]   49   48   48 #>  [2359,]   49   48   48 #>  [2360,]   49   48   48 #>  [2361,]   49   48   48 #>  [2362,]   49   48   48 #>  [2363,]   49   48   48 #>  [2364,]   48   49   49 #>  [2365,]   49   48   48 #>  [2366,]   49   48   48 #>  [2367,]   49   48   48 #>  [2368,]   48   50   49 #>  [2369,]   49   48   48 #>  [2370,]   49   48   48 #>  [2371,]   49   48   48 #>  [2372,]   48   49   49 #>  [2373,]   49   48   48 #>  [2374,]   49   48   48 #>  [2375,]   49   48   48 #>  [2376,]   49   48   48 #>  [2377,]   49   48   48 #>  [2378,]   49   48   48 #>  [2379,]   49   48   48 #>  [2380,]   49   48   48 #>  [2381,]   49   48   48 #>  [2382,]   49   48   48 #>  [2383,]   49   48   48 #>  [2384,]   49   48   48 #>  [2385,]   49   48   48 #>  [2386,]   49   48   48 #>  [2387,]   49   48   48 #>  [2388,]   49   48   48 #>  [2389,]   49   48   48 #>  [2390,]   49   48   48 #>  [2391,]   49   48   48 #>  [2392,]   49   48   48 #>  [2393,]   49   48   48 #>  [2394,]   49   48   48 #>  [2395,]   49   48   48 #>  [2396,]   48   50   49 #>  [2397,]   48   50   49 #>  [2398,]   49   48   48 #>  [2399,]   49   48   48 #>  [2400,]   49   48   48 #>  [2401,]   50   51   50 #>  [2402,]   51   52   51 #>  [2403,]   51   52   51 #>  [2404,]   50   51   50 #>  [2405,]   51   52   51 #>  [2406,]   51   52   51 #>  [2407,]   51   52   51 #>  [2408,]   50   51   50 #>  [2409,]   50   51   50 #>  [2410,]   51   52   51 #>  [2411,]   50   51   50 #>  [2412,]   51   52   51 #>  [2413,]   50   51   50 #>  [2414,]   50   51   50 #>  [2415,]   50   51   50 #>  [2416,]   50   51   50 #>  [2417,]   50   51   50 #>  [2418,]   51   53   51 #>  [2419,]   51   52   51 #>  [2420,]   51   53   51 #>  [2421,]   50   51   50 #>  [2422,]   50   51   50 #>  [2423,]   51   52   51 #>  [2424,]   50   51   50 #>  [2425,]   51   52   51 #>  [2426,]   51   52   51 #>  [2427,]   50   51   50 #>  [2428,]   51   53   51 #>  [2429,]   51   53   51 #>  [2430,]   50   51   50 #>  [2431,]   51   52   51 #>  [2432,]   51   52   51 #>  [2433,]   51   53   51 #>  [2434,]   51   52   51 #>  [2435,]   50   51   50 #>  [2436,]   51   53   51 #>  [2437,]   50   51   50 #>  [2438,]   50   51   50 #>  [2439,]   51   53   51 #>  [2440,]   51   52   51 #>  [2441,]   50   51   50 #>  [2442,]   51   53   51 #>  [2443,]   50   51   50 #>  [2444,]   50   51   50 #>  [2445,]   50   51   50 #>  [2446,]   50   51   50 #>  [2447,]   51   52   51 #>  [2448,]   51   52   51 #>  [2449,]   50   51   50 #>  [2450,]   51   52   51 #>  [2451,]   50   51   50 #>  [2452,]   50   51   50 #>  [2453,]   51   53   51 #>  [2454,]   50   51   50 #>  [2455,]   50   51   50 #>  [2456,]   51   53   51 #>  [2457,]   51   52   51 #>  [2458,]   50   51   50 #>  [2459,]   50   51   50 #>  [2460,]   51   52   51 #>  [2461,]   51   52   51 #>  [2462,]   50   51   50 #>  [2463,]   51   52   51 #>  [2464,]   51   52   51 #>  [2465,]   51   53   51 #>  [2466,]   50   51   50 #>  [2467,]   50   51   50 #>  [2468,]   50   51   50 #>  [2469,]   50   51   50 #>  [2470,]   51   53   51 #>  [2471,]   51   52   51 #>  [2472,]   51   52   51 #>  [2473,]   51   52   51 #>  [2474,]   50   51   50 #>  [2475,]   51   52   51 #>  [2476,]   51   52   51 #>  [2477,]   51   53   51 #>  [2478,]   51   52   51 #>  [2479,]   50   51   50 #>  [2480,]   50   51   50 #>  [2481,]   50   51   50 #>  [2482,]   50   51   50 #>  [2483,]   50   51   50 #>  [2484,]   51   53   51 #>  [2485,]   50   51   50 #>  [2486,]   51   52   51 #>  [2487,]   50   51   50 #>  [2488,]   50   51   50 #>  [2489,]   50   51   50 #>  [2490,]   50   51   50 #>  [2491,]   50   51   50 #>  [2492,]   50   51   50 #>  [2493,]   51   53   51 #>  [2494,]   51   53   51 #>  [2495,]   50   51   50 #>  [2496,]   50   51   50 #>  [2497,]   51   52   51 #>  [2498,]   51   52   51 #>  [2499,]   50   51   50 #>  [2500,]   51   52   51 #>  [2501,]   52   54   52 #>  [2502,]   53   56   52 #>  [2503,]   52   54   52 #>  [2504,]   52   54   52 #>  [2505,]   53   55   52 #>  [2506,]   52   54   52 #>  [2507,]   53   55   52 #>  [2508,]   52   54   52 #>  [2509,]   53   56   52 #>  [2510,]   53   56   52 #>  [2511,]   52   54   52 #>  [2512,]   53   56   52 #>  [2513,]   53   55   52 #>  [2514,]   52   54   52 #>  [2515,]   52   54   52 #>  [2516,]   52   54   52 #>  [2517,]   53   55   52 #>  [2518,]   53   56   52 #>  [2519,]   52   54   52 #>  [2520,]   53   55   52 #>  [2521,]   53   56   52 #>  [2522,]   53   55   52 #>  [2523,]   53   56   52 #>  [2524,]   53   55   52 #>  [2525,]   53   55   52 #>  [2526,]   52   54   52 #>  [2527,]   53   56   52 #>  [2528,]   52   54   52 #>  [2529,]   53   55   52 #>  [2530,]   53   56   52 #>  [2531,]   53   56   52 #>  [2532,]   53   56   52 #>  [2533,]   53   56   52 #>  [2534,]   52   54   52 #>  [2535,]   52   54   52 #>  [2536,]   53   56   52 #>  [2537,]   52   54   52 #>  [2538,]   52   54   52 #>  [2539,]   53   55   52 #>  [2540,]   53   55   52 #>  [2541,]   53   56   52 #>  [2542,]   52   54   52 #>  [2543,]   53   55   52 #>  [2544,]   53   55   52 #>  [2545,]   52   54   52 #>  [2546,]   52   54   52 #>  [2547,]   53   55   52 #>  [2548,]   53   56   52 #>  [2549,]   52   54   52 #>  [2550,]   53   55   52 #>  [2551,]   53   55   52 #>  [2552,]   52   54   52 #>  [2553,]   53   55   52 #>  [2554,]   53   55   52 #>  [2555,]   52   54   52 #>  [2556,]   52   54   52 #>  [2557,]   52   54   52 #>  [2558,]   53   56   52 #>  [2559,]   52   54   52 #>  [2560,]   53   56   52 #>  [2561,]   53   56   52 #>  [2562,]   52   54   52 #>  [2563,]   53   55   52 #>  [2564,]   52   54   52 #>  [2565,]   52   54   52 #>  [2566,]   53   55   52 #>  [2567,]   52   54   52 #>  [2568,]   52   54   52 #>  [2569,]   52   54   52 #>  [2570,]   53   55   52 #>  [2571,]   53   55   52 #>  [2572,]   52   54   52 #>  [2573,]   52   54   52 #>  [2574,]   53   56   52 #>  [2575,]   53   56   52 #>  [2576,]   53   55   52 #>  [2577,]   52   54   52 #>  [2578,]   53   55   52 #>  [2579,]   52   54   52 #>  [2580,]   53   56   52 #>  [2581,]   53   56   52 #>  [2582,]   52   54   52 #>  [2583,]   53   55   52 #>  [2584,]   53   55   52 #>  [2585,]   52   54   52 #>  [2586,]   53   55   52 #>  [2587,]   53   56   52 #>  [2588,]   53   56   52 #>  [2589,]   52   54   52 #>  [2590,]   53   55   52 #>  [2591,]   52   54   52 #>  [2592,]   53   56   52 #>  [2593,]   53   56   52 #>  [2594,]   52   54   52 #>  [2595,]   53   56   52 #>  [2596,]   52   54   52 #>  [2597,]   52   54   52 #>  [2598,]   52   54   52 #>  [2599,]   53   56   52 #>  [2600,]   52   54   52 #>  [2601,]   54   57   56 #>  [2602,]   55   58   53 #>  [2603,]   55   58   53 #>  [2604,]   54   57   56 #>  [2605,]   54   57   56 #>  [2606,]   55   58   53 #>  [2607,]   55   58   53 #>  [2608,]   54   57   56 #>  [2609,]   54   57   54 #>  [2610,]   55   58   53 #>  [2611,]   54   57   56 #>  [2612,]   55   58   53 #>  [2613,]   54   57   56 #>  [2614,]   54   57   56 #>  [2615,]   54   57   56 #>  [2616,]   54   57   56 #>  [2617,]   54   57   54 #>  [2618,]   55   58   53 #>  [2619,]   55   58   53 #>  [2620,]   55   58   53 #>  [2621,]   54   57   54 #>  [2622,]   54   57   56 #>  [2623,]   55   58   53 #>  [2624,]   54   57   56 #>  [2625,]   55   58   53 #>  [2626,]   54   57   56 #>  [2627,]   54   57   56 #>  [2628,]   55   58   53 #>  [2629,]   55   58   53 #>  [2630,]   54   57   56 #>  [2631,]   55   58   53 #>  [2632,]   55   58   53 #>  [2633,]   55   58   53 #>  [2634,]   55   58   53 #>  [2635,]   54   57   55 #>  [2636,]   54   57   56 #>  [2637,]   54   57   56 #>  [2638,]   54   57   56 #>  [2639,]   55   58   53 #>  [2640,]   55   58   53 #>  [2641,]   54   57   56 #>  [2642,]   55   58   53 #>  [2643,]   54   57   56 #>  [2644,]   54   57   55 #>  [2645,]   54   57   56 #>  [2646,]   54   57   56 #>  [2647,]   55   58   53 #>  [2648,]   55   58   53 #>  [2649,]   54   57   56 #>  [2650,]   55   58   53 #>  [2651,]   54   57   56 #>  [2652,]   54   57   56 #>  [2653,]   54   57   55 #>  [2654,]   54   57   56 #>  [2655,]   54   57   56 #>  [2656,]   55   58   53 #>  [2657,]   55   58   53 #>  [2658,]   54   57   56 #>  [2659,]   54   57   56 #>  [2660,]   55   58   53 #>  [2661,]   55   58   53 #>  [2662,]   54   57   56 #>  [2663,]   54   57   54 #>  [2664,]   55   58   53 #>  [2665,]   55   58   53 #>  [2666,]   54   57   56 #>  [2667,]   54   57   56 #>  [2668,]   54   57   56 #>  [2669,]   54   57   56 #>  [2670,]   55   58   53 #>  [2671,]   55   58   53 #>  [2672,]   54   57   56 #>  [2673,]   55   58   53 #>  [2674,]   54   57   55 #>  [2675,]   55   58   53 #>  [2676,]   54   57   56 #>  [2677,]   55   58   53 #>  [2678,]   55   58   53 #>  [2679,]   54   57   56 #>  [2680,]   54   57   54 #>  [2681,]   54   57   54 #>  [2682,]   54   57   56 #>  [2683,]   54   57   56 #>  [2684,]   55   58   53 #>  [2685,]   54   57   55 #>  [2686,]   55   58   53 #>  [2687,]   54   57   56 #>  [2688,]   54   57   56 #>  [2689,]   54   57   55 #>  [2690,]   54   57   56 #>  [2691,]   54   57   56 #>  [2692,]   54   57   56 #>  [2693,]   55   58   53 #>  [2694,]   55   58   53 #>  [2695,]   54   57   56 #>  [2696,]   54   57   56 #>  [2697,]   55   58   53 #>  [2698,]   55   58   53 #>  [2699,]   54   57   55 #>  [2700,]   55   58   53 #>  [2701,]   56   59   57 #>  [2702,]   56   59   57 #>  [2703,]   56   59   57 #>  [2704,]   57   59   57 #>  [2705,]   56   59   57 #>  [2706,]   56   59   57 #>  [2707,]   56   59   57 #>  [2708,]   56   59   58 #>  [2709,]   56   59   57 #>  [2710,]   56   59   57 #>  [2711,]   56   59   57 #>  [2712,]   57   59   57 #>  [2713,]   56   59   58 #>  [2714,]   57   59   57 #>  [2715,]   57   59   58 #>  [2716,]   56   59   57 #>  [2717,]   56   59   57 #>  [2718,]   56   59   57 #>  [2719,]   57   59   58 #>  [2720,]   56   59   58 #>  [2721,]   56   59   57 #>  [2722,]   56   59   58 #>  [2723,]   56   59   57 #>  [2724,]   56   59   57 #>  [2725,]   56   59   57 #>  [2726,]   56   59   57 #>  [2727,]   57   59   58 #>  [2728,]   56   59   57 #>  [2729,]   56   59   58 #>  [2730,]   56   59   57 #>  [2731,]   56   59   57 #>  [2732,]   56   59   57 #>  [2733,]   56   59   57 #>  [2734,]   56   59   57 #>  [2735,]   56   59   57 #>  [2736,]   56   59   58 #>  [2737,]   56   59   58 #>  [2738,]   57   59   58 #>  [2739,]   56   59   57 #>  [2740,]   56   59   57 #>  [2741,]   57   59   58 #>  [2742,]   57   59   57 #>  [2743,]   56   59   58 #>  [2744,]   56   59   57 #>  [2745,]   56   59   57 #>  [2746,]   56   59   58 #>  [2747,]   56   59   57 #>  [2748,]   57   59   57 #>  [2749,]   56   59   57 #>  [2750,]   56   59   58 #>  [2751,]   56   59   58 #>  [2752,]   56   59   57 #>  [2753,]   56   59   58 #>  [2754,]   56   59   57 #>  [2755,]   56   59   58 #>  [2756,]   56   59   57 #>  [2757,]   56   59   57 #>  [2758,]   56   59   58 #>  [2759,]   56   59   58 #>  [2760,]   56   59   58 #>  [2761,]   57   59   57 #>  [2762,]   56   59   57 #>  [2763,]   56   59   57 #>  [2764,]   56   59   58 #>  [2765,]   56   59   57 #>  [2766,]   56   59   58 #>  [2767,]   56   59   57 #>  [2768,]   56   59   57 #>  [2769,]   57   59   58 #>  [2770,]   56   59   57 #>  [2771,]   56   59   58 #>  [2772,]   56   59   57 #>  [2773,]   56   59   57 #>  [2774,]   57   59   57 #>  [2775,]   57   59   57 #>  [2776,]   56   59   57 #>  [2777,]   56   59   58 #>  [2778,]   56   59   57 #>  [2779,]   56   59   57 #>  [2780,]   56   59   58 #>  [2781,]   56   59   58 #>  [2782,]   57   59   57 #>  [2783,]   56   59   58 #>  [2784,]   56   59   58 #>  [2785,]   56   59   58 #>  [2786,]   56   59   57 #>  [2787,]   56   59   58 #>  [2788,]   56   59   57 #>  [2789,]   56   59   57 #>  [2790,]   56   59   58 #>  [2791,]   56   59   57 #>  [2792,]   57   59   57 #>  [2793,]   57   59   57 #>  [2794,]   56   59   57 #>  [2795,]   56   59   58 #>  [2796,]   57   59   58 #>  [2797,]   57   59   58 #>  [2798,]   56   59   57 #>  [2799,]   56   59   57 #>  [2800,]   56   59   58 #>  [2801,]   58   62   61 #>  [2802,]   58   62   61 #>  [2803,]   58   61   60 #>  [2804,]   59   60   59 #>  [2805,]   58   62   61 #>  [2806,]   58   62   61 #>  [2807,]   59   60   59 #>  [2808,]   58   61   60 #>  [2809,]   59   60   59 #>  [2810,]   59   60   59 #>  [2811,]   58   62   61 #>  [2812,]   58   62   61 #>  [2813,]   58   61   60 #>  [2814,]   59   60   59 #>  [2815,]   58   62   61 #>  [2816,]   59   60   59 #>  [2817,]   58   61   60 #>  [2818,]   58   62   61 #>  [2819,]   58   62   61 #>  [2820,]   59   60   59 #>  [2821,]   58   62   61 #>  [2822,]   58   61   60 #>  [2823,]   58   62   61 #>  [2824,]   59   60   59 #>  [2825,]   59   60   59 #>  [2826,]   58   62   61 #>  [2827,]   58   62   61 #>  [2828,]   59   60   59 #>  [2829,]   58   62   61 #>  [2830,]   58   62   61 #>  [2831,]   58   62   61 #>  [2832,]   58   62   61 #>  [2833,]   58   62   61 #>  [2834,]   58   62   61 #>  [2835,]   58   62   61 #>  [2836,]   59   60   59 #>  [2837,]   58   62   61 #>  [2838,]   58   62   61 #>  [2839,]   59   60   59 #>  [2840,]   58   61   60 #>  [2841,]   58   62   61 #>  [2842,]   58   62   61 #>  [2843,]   58   61   60 #>  [2844,]   58   61   60 #>  [2845,]   58   61   60 #>  [2846,]   58   61   60 #>  [2847,]   58   61   60 #>  [2848,]   58   62   61 #>  [2849,]   58   61   60 #>  [2850,]   59   60   59 #>  [2851,]   58   61   60 #>  [2852,]   59   60   59 #>  [2853,]   58   61   60 #>  [2854,]   59   60   59 #>  [2855,]   58   61   60 #>  [2856,]   58   61   60 #>  [2857,]   59   60   59 #>  [2858,]   58   62   61 #>  [2859,]   59   60   59 #>  [2860,]   58   62   61 #>  [2861,]   58   62   61 #>  [2862,]   58   62   61 #>  [2863,]   58   61   60 #>  [2864,]   58   62   61 #>  [2865,]   58   61   60 #>  [2866,]   58   61   60 #>  [2867,]   59   60   59 #>  [2868,]   58   62   61 #>  [2869,]   58   62   61 #>  [2870,]   58   61   60 #>  [2871,]   58   62   61 #>  [2872,]   58   61   60 #>  [2873,]   59   60   59 #>  [2874,]   58   62   61 #>  [2875,]   58   62   61 #>  [2876,]   59   60   59 #>  [2877,]   58   61   60 #>  [2878,]   58   61   60 #>  [2879,]   58   61   60 #>  [2880,]   58   62   61 #>  [2881,]   58   62   61 #>  [2882,]   58   62   61 #>  [2883,]   58   61   60 #>  [2884,]   58   61   60 #>  [2885,]   58   62   61 #>  [2886,]   59   60   59 #>  [2887,]   58   62   61 #>  [2888,]   58   62   61 #>  [2889,]   58   61   60 #>  [2890,]   59   60   59 #>  [2891,]   59   60   59 #>  [2892,]   58   62   61 #>  [2893,]   58   62   61 #>  [2894,]   58   61   60 #>  [2895,]   58   62   61 #>  [2896,]   58   62   61 #>  [2897,]   58   62   61 #>  [2898,]   58   61   60 #>  [2899,]   58   62   61 #>  [2900,]   58   61   60 #>  [2901,]   61   64   63 #>  [2902,]   60   63   62 #>  [2903,]   61   64   63 #>  [2904,]   61   64   63 #>  [2905,]   61   64   63 #>  [2906,]   60   63   62 #>  [2907,]   61   64   63 #>  [2908,]   61   64   63 #>  [2909,]   61   64   63 #>  [2910,]   61   64   63 #>  [2911,]   60   63   62 #>  [2912,]   60   63   62 #>  [2913,]   61   64   63 #>  [2914,]   61   64   63 #>  [2915,]   60   63   62 #>  [2916,]   61   64   63 #>  [2917,]   60   63   62 #>  [2918,]   61   64   63 #>  [2919,]   61   64   63 #>  [2920,]   61   64   63 #>  [2921,]   61   64   63 #>  [2922,]   61   64   63 #>  [2923,]   60   63   62 #>  [2924,]   61   64   63 #>  [2925,]   61   64   63 #>  [2926,]   61   64   63 #>  [2927,]   61   64   63 #>  [2928,]   61   64   63 #>  [2929,]   60   63   62 #>  [2930,]   60   63   62 #>  [2931,]   60   63   62 #>  [2932,]   61   64   63 #>  [2933,]   61   64   63 #>  [2934,]   60   63   62 #>  [2935,]   60   63   62 #>  [2936,]   61   64   63 #>  [2937,]   60   63   62 #>  [2938,]   61   64   63 #>  [2939,]   61   64   63 #>  [2940,]   61   64   63 #>  [2941,]   61   64   63 #>  [2942,]   60   63   62 #>  [2943,]   60   63   62 #>  [2944,]   60   63   62 #>  [2945,]   61   64   63 #>  [2946,]   61   64   63 #>  [2947,]   60   63   62 #>  [2948,]   60   63   62 #>  [2949,]   61   64   63 #>  [2950,]   61   64   63 #>  [2951,]   61   64   63 #>  [2952,]   61   64   63 #>  [2953,]   61   64   63 #>  [2954,]   61   64   63 #>  [2955,]   61   64   63 #>  [2956,]   60   63   62 #>  [2957,]   61   64   63 #>  [2958,]   61   64   63 #>  [2959,]   61   64   63 #>  [2960,]   60   63   62 #>  [2961,]   60   63   62 #>  [2962,]   61   64   63 #>  [2963,]   60   63   62 #>  [2964,]   60   63   62 #>  [2965,]   60   63   62 #>  [2966,]   60   63   62 #>  [2967,]   61   64   63 #>  [2968,]   61   64   63 #>  [2969,]   61   64   63 #>  [2970,]   60   63   62 #>  [2971,]   61   64   63 #>  [2972,]   61   64   63 #>  [2973,]   61   64   63 #>  [2974,]   61   64   63 #>  [2975,]   60   63   62 #>  [2976,]   61   64   63 #>  [2977,]   61   64   63 #>  [2978,]   60   63   62 #>  [2979,]   60   63   62 #>  [2980,]   61   64   63 #>  [2981,]   60   63   62 #>  [2982,]   61   64   63 #>  [2983,]   61   64   63 #>  [2984,]   61   64   63 #>  [2985,]   61   64   63 #>  [2986,]   61   64   63 #>  [2987,]   61   64   63 #>  [2988,]   61   64   63 #>  [2989,]   61   64   63 #>  [2990,]   61   64   63 #>  [2991,]   61   64   63 #>  [2992,]   60   63   62 #>  [2993,]   61   64   63 #>  [2994,]   60   63   62 #>  [2995,]   60   63   62 #>  [2996,]   61   64   63 #>  [2997,]   61   64   63 #>  [2998,]   61   64   63 #>  [2999,]   61   64   63 #>  [3000,]   60   63   62 #>  [3001,]   62   65   64 #>  [3002,]   62   65   64 #>  [3003,]   63   66   65 #>  [3004,]   62   65   64 #>  [3005,]   62   65   64 #>  [3006,]   63   66   65 #>  [3007,]   62   65   64 #>  [3008,]   62   65   64 #>  [3009,]   62   65   64 #>  [3010,]   62   65   64 #>  [3011,]   62   65   64 #>  [3012,]   63   66   65 #>  [3013,]   62   65   64 #>  [3014,]   62   65   64 #>  [3015,]   62   65   64 #>  [3016,]   62   65   64 #>  [3017,]   62   65   64 #>  [3018,]   62   65   64 #>  [3019,]   63   66   65 #>  [3020,]   63   66   65 #>  [3021,]   62   65   64 #>  [3022,]   62   65   64 #>  [3023,]   62   65   64 #>  [3024,]   62   65   64 #>  [3025,]   63   66   65 #>  [3026,]   62   65   64 #>  [3027,]   62   65   64 #>  [3028,]   63   66   65 #>  [3029,]   62   65   64 #>  [3030,]   62   65   64 #>  [3031,]   62   65   64 #>  [3032,]   62   65   64 #>  [3033,]   63   66   65 #>  [3034,]   63   66   65 #>  [3035,]   62   65   64 #>  [3036,]   62   65   64 #>  [3037,]   62   65   64 #>  [3038,]   62   65   64 #>  [3039,]   62   65   64 #>  [3040,]   62   65   64 #>  [3041,]   62   65   64 #>  [3042,]   62   65   64 #>  [3043,]   62   65   64 #>  [3044,]   62   65   64 #>  [3045,]   62   65   64 #>  [3046,]   62   65   64 #>  [3047,]   62   65   64 #>  [3048,]   62   65   64 #>  [3049,]   62   65   64 #>  [3050,]   62   65   64 #>  [3051,]   62   65   64 #>  [3052,]   62   65   64 #>  [3053,]   62   65   64 #>  [3054,]   62   65   64 #>  [3055,]   62   65   64 #>  [3056,]   62   65   64 #>  [3057,]   62   65   64 #>  [3058,]   62   65   64 #>  [3059,]   62   65   64 #>  [3060,]   63   66   65 #>  [3061,]   62   65   64 #>  [3062,]   62   65   64 #>  [3063,]   62   65   64 #>  [3064,]   62   65   64 #>  [3065,]   63   66   65 #>  [3066,]   62   65   64 #>  [3067,]   62   65   64 #>  [3068,]   62   65   64 #>  [3069,]   62   65   64 #>  [3070,]   63   66   65 #>  [3071,]   62   65   64 #>  [3072,]   62   65   64 #>  [3073,]   63   66   65 #>  [3074,]   62   65   64 #>  [3075,]   62   65   64 #>  [3076,]   62   65   64 #>  [3077,]   62   65   64 #>  [3078,]   62   65   64 #>  [3079,]   62   65   64 #>  [3080,]   62   65   64 #>  [3081,]   62   65   64 #>  [3082,]   62   65   64 #>  [3083,]   62   65   64 #>  [3084,]   62   65   64 #>  [3085,]   62   65   64 #>  [3086,]   62   65   64 #>  [3087,]   62   65   64 #>  [3088,]   62   65   64 #>  [3089,]   62   65   64 #>  [3090,]   62   65   64 #>  [3091,]   62   65   64 #>  [3092,]   62   65   64 #>  [3093,]   63   66   65 #>  [3094,]   62   65   64 #>  [3095,]   62   65   64 #>  [3096,]   62   65   64 #>  [3097,]   63   66   65 #>  [3098,]   63   66   65 #>  [3099,]   62   65   64 #>  [3100,]   62   65   64 #>  [3101,]   64   67   66 #>  [3102,]   65   67   66 #>  [3103,]   64   67   66 #>  [3104,]   64   68   67 #>  [3105,]   64   67   66 #>  [3106,]   64   67   66 #>  [3107,]   64   67   66 #>  [3108,]   64   67   66 #>  [3109,]   65   67   66 #>  [3110,]   65   67   66 #>  [3111,]   64   67   66 #>  [3112,]   65   67   66 #>  [3113,]   64   67   66 #>  [3114,]   64   68   67 #>  [3115,]   64   67   66 #>  [3116,]   64   67   66 #>  [3117,]   64   67   66 #>  [3118,]   64   67   66 #>  [3119,]   64   67   66 #>  [3120,]   64   67   66 #>  [3121,]   65   67   66 #>  [3122,]   64   67   66 #>  [3123,]   64   67   66 #>  [3124,]   64   67   66 #>  [3125,]   64   67   66 #>  [3126,]   64   67   66 #>  [3127,]   64   68   67 #>  [3128,]   64   67   66 #>  [3129,]   65   67   66 #>  [3130,]   64   67   66 #>  [3131,]   64   67   66 #>  [3132,]   64   67   66 #>  [3133,]   65   67   66 #>  [3134,]   64   67   66 #>  [3135,]   64   67   66 #>  [3136,]   64   67   66 #>  [3137,]   64   67   66 #>  [3138,]   64   67   66 #>  [3139,]   64   67   66 #>  [3140,]   64   67   66 #>  [3141,]   64   67   66 #>  [3142,]   64   67   66 #>  [3143,]   64   67   66 #>  [3144,]   64   67   66 #>  [3145,]   64   67   66 #>  [3146,]   64   67   66 #>  [3147,]   64   67   66 #>  [3148,]   64   67   66 #>  [3149,]   64   67   66 #>  [3150,]   64   67   66 #>  [3151,]   64   67   66 #>  [3152,]   64   67   66 #>  [3153,]   64   67   66 #>  [3154,]   64   67   66 #>  [3155,]   64   67   66 #>  [3156,]   64   67   66 #>  [3157,]   64   67   66 #>  [3158,]   64   67   66 #>  [3159,]   64   67   66 #>  [3160,]   64   67   66 #>  [3161,]   64   68   67 #>  [3162,]   64   67   66 #>  [3163,]   64   67   66 #>  [3164,]   64   67   66 #>  [3165,]   64   67   66 #>  [3166,]   64   67   66 #>  [3167,]   64   67   66 #>  [3168,]   64   67   66 #>  [3169,]   64   67   66 #>  [3170,]   65   67   66 #>  [3171,]   64   67   66 #>  [3172,]   64   67   66 #>  [3173,]   64   67   66 #>  [3174,]   64   67   66 #>  [3175,]   64   67   66 #>  [3176,]   64   67   66 #>  [3177,]   64   67   66 #>  [3178,]   64   67   66 #>  [3179,]   64   67   66 #>  [3180,]   64   67   66 #>  [3181,]   64   67   66 #>  [3182,]   64   68   67 #>  [3183,]   64   67   66 #>  [3184,]   64   67   66 #>  [3185,]   64   67   66 #>  [3186,]   65   67   66 #>  [3187,]   64   67   66 #>  [3188,]   64   67   66 #>  [3189,]   64   67   66 #>  [3190,]   64   67   66 #>  [3191,]   64   67   66 #>  [3192,]   64   68   67 #>  [3193,]   64   68   67 #>  [3194,]   64   67   66 #>  [3195,]   64   67   66 #>  [3196,]   64   68   67 #>  [3197,]   64   68   67 #>  [3198,]   64   67   66 #>  [3199,]   64   67   66 #>  [3200,]   64   67   66 #>  [3201,]   66   71   70 #>  [3202,]   67   69   68 #>  [3203,]   66   70   69 #>  [3204,]   66   71   70 #>  [3205,]   67   69   68 #>  [3206,]   66   71   70 #>  [3207,]   67   69   68 #>  [3208,]   66   70   69 #>  [3209,]   67   69   68 #>  [3210,]   67   69   68 #>  [3211,]   66   71   70 #>  [3212,]   67   69   68 #>  [3213,]   67   69   68 #>  [3214,]   66   71   70 #>  [3215,]   66   71   70 #>  [3216,]   66   70   69 #>  [3217,]   67   69   68 #>  [3218,]   67   69   68 #>  [3219,]   66   71   70 #>  [3220,]   67   69   68 #>  [3221,]   67   69   68 #>  [3222,]   67   69   68 #>  [3223,]   67   69   68 #>  [3224,]   67   69   68 #>  [3225,]   67   69   68 #>  [3226,]   66   71   70 #>  [3227,]   67   69   68 #>  [3228,]   66   70   69 #>  [3229,]   67   69   68 #>  [3230,]   67   69   68 #>  [3231,]   67   69   68 #>  [3232,]   67   69   68 #>  [3233,]   67   69   68 #>  [3234,]   66   71   70 #>  [3235,]   66   71   70 #>  [3236,]   67   69   68 #>  [3237,]   66   71   70 #>  [3238,]   66   71   70 #>  [3239,]   67   69   68 #>  [3240,]   67   69   68 #>  [3241,]   67   69   68 #>  [3242,]   66   71   70 #>  [3243,]   67   69   68 #>  [3244,]   67   69   68 #>  [3245,]   66   70   69 #>  [3246,]   66   70   69 #>  [3247,]   67   69   68 #>  [3248,]   67   69   68 #>  [3249,]   66   70   69 #>  [3250,]   67   69   68 #>  [3251,]   67   69   68 #>  [3252,]   66   71   70 #>  [3253,]   67   69   68 #>  [3254,]   67   69   68 #>  [3255,]   66   70   69 #>  [3256,]   66   70   69 #>  [3257,]   66   71   70 #>  [3258,]   67   69   68 #>  [3259,]   66   70   69 #>  [3260,]   67   69   68 #>  [3261,]   67   69   68 #>  [3262,]   66   71   70 #>  [3263,]   67   69   68 #>  [3264,]   66   71   70 #>  [3265,]   66   70   69 #>  [3266,]   67   69   68 #>  [3267,]   66   71   70 #>  [3268,]   66   71   70 #>  [3269,]   66   71   70 #>  [3270,]   67   69   68 #>  [3271,]   67   69   68 #>  [3272,]   66   70   69 #>  [3273,]   66   71   70 #>  [3274,]   67   69   68 #>  [3275,]   67   69   68 #>  [3276,]   67   69   68 #>  [3277,]   66   70   69 #>  [3278,]   67   69   68 #>  [3279,]   66   70   69 #>  [3280,]   67   69   68 #>  [3281,]   67   69   68 #>  [3282,]   66   71   70 #>  [3283,]   67   69   68 #>  [3284,]   67   69   68 #>  [3285,]   66   71   70 #>  [3286,]   67   69   68 #>  [3287,]   67   69   68 #>  [3288,]   67   69   68 #>  [3289,]   66   70   69 #>  [3290,]   67   69   68 #>  [3291,]   66   71   70 #>  [3292,]   67   69   68 #>  [3293,]   67   69   68 #>  [3294,]   66   70   69 #>  [3295,]   67   69   68 #>  [3296,]   66   71   70 #>  [3297,]   66   71   70 #>  [3298,]   66   70   69 #>  [3299,]   67   69   68 #>  [3300,]   66   70   69 #>  [3301,]   68   72   71 #>  [3302,]   68   72   71 #>  [3303,]   68   72   71 #>  [3304,]   68   72   71 #>  [3305,]   68   72   71 #>  [3306,]   68   72   71 #>  [3307,]   68   72   71 #>  [3308,]   68   72   71 #>  [3309,]   68   72   71 #>  [3310,]   68   72   71 #>  [3311,]   68   72   71 #>  [3312,]   68   72   71 #>  [3313,]   68   72   71 #>  [3314,]   68   72   71 #>  [3315,]   68   72   71 #>  [3316,]   68   72   71 #>  [3317,]   68   72   71 #>  [3318,]   68   72   71 #>  [3319,]   69   73   72 #>  [3320,]   69   73   73 #>  [3321,]   68   72   71 #>  [3322,]   69   73   72 #>  [3323,]   68   72   71 #>  [3324,]   68   72   71 #>  [3325,]   68   72   71 #>  [3326,]   68   72   71 #>  [3327,]   69   73   73 #>  [3328,]   68   72   71 #>  [3329,]   69   73   73 #>  [3330,]   68   72   71 #>  [3331,]   68   72   71 #>  [3332,]   68   72   71 #>  [3333,]   68   72   71 #>  [3334,]   68   72   71 #>  [3335,]   68   72   71 #>  [3336,]   69   73   73 #>  [3337,]   68   72   71 #>  [3338,]   68   72   71 #>  [3339,]   68   72   71 #>  [3340,]   68   72   71 #>  [3341,]   68   72   71 #>  [3342,]   68   72   71 #>  [3343,]   68   72   71 #>  [3344,]   68   72   71 #>  [3345,]   68   72   71 #>  [3346,]   68   72   71 #>  [3347,]   68   72   71 #>  [3348,]   68   72   71 #>  [3349,]   68   72   71 #>  [3350,]   68   72   71 #>  [3351,]   68   72   71 #>  [3352,]   68   72   71 #>  [3353,]   68   72   71 #>  [3354,]   68   72   71 #>  [3355,]   68   72   71 #>  [3356,]   68   72   71 #>  [3357,]   68   72   71 #>  [3358,]   69   73   73 #>  [3359,]   68   72   71 #>  [3360,]   68   72   71 #>  [3361,]   68   72   71 #>  [3362,]   68   72   71 #>  [3363,]   68   72   71 #>  [3364,]   69   73   72 #>  [3365,]   68   72   71 #>  [3366,]   69   73   73 #>  [3367,]   68   72   71 #>  [3368,]   68   72   71 #>  [3369,]   68   72   71 #>  [3370,]   68   72   71 #>  [3371,]   68   72   71 #>  [3372,]   68   72   71 #>  [3373,]   68   72   71 #>  [3374,]   68   72   71 #>  [3375,]   68   72   71 #>  [3376,]   68   72   71 #>  [3377,]   69   73   73 #>  [3378,]   68   72   71 #>  [3379,]   68   72   71 #>  [3380,]   68   72   71 #>  [3381,]   69   73   72 #>  [3382,]   68   72   71 #>  [3383,]   68   72   71 #>  [3384,]   68   72   71 #>  [3385,]   68   72   71 #>  [3386,]   68   72   71 #>  [3387,]   69   73   73 #>  [3388,]   68   72   71 #>  [3389,]   68   72   71 #>  [3390,]   68   72   71 #>  [3391,]   68   72   71 #>  [3392,]   68   72   71 #>  [3393,]   68   72   71 #>  [3394,]   68   72   71 #>  [3395,]   68   72   71 #>  [3396,]   68   72   71 #>  [3397,]   69   73   72 #>  [3398,]   68   72   71 #>  [3399,]   68   72   71 #>  [3400,]   69   73   72 #>  [3401,]   71   75   74 #>  [3402,]   70   74   75 #>  [3403,]   70   74   75 #>  [3404,]   71   75   74 #>  [3405,]   70   74   75 #>  [3406,]   70   74   75 #>  [3407,]   71   75   74 #>  [3408,]   70   74   75 #>  [3409,]   71   75   74 #>  [3410,]   71   75   74 #>  [3411,]   70   74   75 #>  [3412,]   70   74   75 #>  [3413,]   71   75   74 #>  [3414,]   71   75   74 #>  [3415,]   70   74   75 #>  [3416,]   71   75   74 #>  [3417,]   70   74   75 #>  [3418,]   70   74   75 #>  [3419,]   70   74   75 #>  [3420,]   71   75   74 #>  [3421,]   70   74   75 #>  [3422,]   71   75   74 #>  [3423,]   70   74   75 #>  [3424,]   71   75   74 #>  [3425,]   71   75   74 #>  [3426,]   70   74   75 #>  [3427,]   70   74   75 #>  [3428,]   71   75   74 #>  [3429,]   70   74   75 #>  [3430,]   70   74   75 #>  [3431,]   70   74   75 #>  [3432,]   70   74   75 #>  [3433,]   70   74   75 #>  [3434,]   70   74   75 #>  [3435,]   70   74   75 #>  [3436,]   71   75   74 #>  [3437,]   70   74   75 #>  [3438,]   70   74   75 #>  [3439,]   71   75   74 #>  [3440,]   70   74   75 #>  [3441,]   70   74   75 #>  [3442,]   70   74   75 #>  [3443,]   70   74   75 #>  [3444,]   70   74   75 #>  [3445,]   71   75   74 #>  [3446,]   70   74   75 #>  [3447,]   70   74   75 #>  [3448,]   70   74   75 #>  [3449,]   71   75   74 #>  [3450,]   71   75   74 #>  [3451,]   70   74   75 #>  [3452,]   71   75   74 #>  [3453,]   71   75   74 #>  [3454,]   71   75   74 #>  [3455,]   71   75   74 #>  [3456,]   70   74   75 #>  [3457,]   71   75   74 #>  [3458,]   71   75   74 #>  [3459,]   71   75   74 #>  [3460,]   70   74   75 #>  [3461,]   70   74   75 #>  [3462,]   70   74   75 #>  [3463,]   70   74   75 #>  [3464,]   70   74   75 #>  [3465,]   70   74   75 #>  [3466,]   70   74   75 #>  [3467,]   71   75   74 #>  [3468,]   70   74   75 #>  [3469,]   70   74   75 #>  [3470,]   70   74   75 #>  [3471,]   70   74   75 #>  [3472,]   71   75   74 #>  [3473,]   71   75   74 #>  [3474,]   70   74   75 #>  [3475,]   70   74   75 #>  [3476,]   71   75   74 #>  [3477,]   70   74   75 #>  [3478,]   70   74   75 #>  [3479,]   70   74   75 #>  [3480,]   70   74   75 #>  [3481,]   70   74   75 #>  [3482,]   70   74   75 #>  [3483,]   70   74   75 #>  [3484,]   70   74   75 #>  [3485,]   71   75   74 #>  [3486,]   71   75   74 #>  [3487,]   71   75   74 #>  [3488,]   70   74   75 #>  [3489,]   70   74   75 #>  [3490,]   71   75   74 #>  [3491,]   71   75   74 #>  [3492,]   70   74   75 #>  [3493,]   70   74   75 #>  [3494,]   70   74   75 #>  [3495,]   70   74   75 #>  [3496,]   70   74   75 #>  [3497,]   70   74   75 #>  [3498,]   70   74   75 #>  [3499,]   70   74   75 #>  [3500,]   70   74   75 #>  [3501,]   73   77   77 #>  [3502,]   73   77   77 #>  [3503,]   72   76   76 #>  [3504,]   73   77   77 #>  [3505,]   73   77   77 #>  [3506,]   73   77   77 #>  [3507,]   72   76   76 #>  [3508,]   72   76   76 #>  [3509,]   73   77   77 #>  [3510,]   73   77   77 #>  [3511,]   73   77   77 #>  [3512,]   73   77   77 #>  [3513,]   72   76   76 #>  [3514,]   73   77   77 #>  [3515,]   73   77   77 #>  [3516,]   72   76   76 #>  [3517,]   73   77   77 #>  [3518,]   73   77   77 #>  [3519,]   73   77   77 #>  [3520,]   72   76   76 #>  [3521,]   73   77   77 #>  [3522,]   72   76   76 #>  [3523,]   73   77   77 #>  [3524,]   72   76   76 #>  [3525,]   72   76   76 #>  [3526,]   73   77   77 #>  [3527,]   73   77   77 #>  [3528,]   73   77   77 #>  [3529,]   73   77   77 #>  [3530,]   73   77   77 #>  [3531,]   73   77   77 #>  [3532,]   73   77   77 #>  [3533,]   73   77   77 #>  [3534,]   73   77   77 #>  [3535,]   73   77   77 #>  [3536,]   73   77   77 #>  [3537,]   73   77   77 #>  [3538,]   73   77   77 #>  [3539,]   72   76   76 #>  [3540,]   72   76   76 #>  [3541,]   73   77   77 #>  [3542,]   73   77   77 #>  [3543,]   73   77   77 #>  [3544,]   72   76   76 #>  [3545,]   72   76   76 #>  [3546,]   72   76   76 #>  [3547,]   73   77   77 #>  [3548,]   73   77   77 #>  [3549,]   72   76   76 #>  [3550,]   72   76   76 #>  [3551,]   73   77   77 #>  [3552,]   73   77   77 #>  [3553,]   72   76   76 #>  [3554,]   72   76   76 #>  [3555,]   72   76   76 #>  [3556,]   72   76   76 #>  [3557,]   73   77   77 #>  [3558,]   73   77   77 #>  [3559,]   72   76   76 #>  [3560,]   73   77   77 #>  [3561,]   73   77   77 #>  [3562,]   73   77   77 #>  [3563,]   72   76   76 #>  [3564,]   73   77   77 #>  [3565,]   72   76   76 #>  [3566,]   72   76   76 #>  [3567,]   73   77   77 #>  [3568,]   73   77   77 #>  [3569,]   73   77   77 #>  [3570,]   72   76   76 #>  [3571,]   73   77   77 #>  [3572,]   72   76   76 #>  [3573,]   73   77   77 #>  [3574,]   73   77   77 #>  [3575,]   73   77   77 #>  [3576,]   73   77   77 #>  [3577,]   73   77   77 #>  [3578,]   72   76   76 #>  [3579,]   73   77   77 #>  [3580,]   73   77   77 #>  [3581,]   73   77   77 #>  [3582,]   73   77   77 #>  [3583,]   73   77   77 #>  [3584,]   72   76   76 #>  [3585,]   73   77   77 #>  [3586,]   72   76   76 #>  [3587,]   73   77   77 #>  [3588,]   73   77   77 #>  [3589,]   72   76   76 #>  [3590,]   72   76   76 #>  [3591,]   73   77   77 #>  [3592,]   73   77   77 #>  [3593,]   73   77   77 #>  [3594,]   72   76   76 #>  [3595,]   73   77   77 #>  [3596,]   73   77   77 #>  [3597,]   73   77   77 #>  [3598,]   72   76   76 #>  [3599,]   73   77   77 #>  [3600,]   72   76   76 #>  [3601,]   75   79   80 #>  [3602,]   75   79   80 #>  [3603,]   74   78   78 #>  [3604,]   74   78   78 #>  [3605,]   74   78   78 #>  [3606,]   74   78   78 #>  [3607,]   75   79   79 #>  [3608,]   75   79   80 #>  [3609,]   74   78   78 #>  [3610,]   74   78   78 #>  [3611,]   74   78   78 #>  [3612,]   75   79   80 #>  [3613,]   75   79   80 #>  [3614,]   74   78   78 #>  [3615,]   75   79   80 #>  [3616,]   75   79   80 #>  [3617,]   75   79   80 #>  [3618,]   75   79   80 #>  [3619,]   75   79   80 #>  [3620,]   75   79   79 #>  [3621,]   74   78   78 #>  [3622,]   75   79   80 #>  [3623,]   75   79   79 #>  [3624,]   74   78   78 #>  [3625,]   74   78   78 #>  [3626,]   75   79   80 #>  [3627,]   75   79   80 #>  [3628,]   74   78   78 #>  [3629,]   75   79   80 #>  [3630,]   75   79   80 #>  [3631,]   74   78   78 #>  [3632,]   74   78   78 #>  [3633,]   75   79   80 #>  [3634,]   74   78   78 #>  [3635,]   74   78   78 #>  [3636,]   75   79   80 #>  [3637,]   75   79   79 #>  [3638,]   75   79   80 #>  [3639,]   74   78   78 #>  [3640,]   74   78   78 #>  [3641,]   75   79   80 #>  [3642,]   74   78   78 #>  [3643,]   75   79   80 #>  [3644,]   75   79   79 #>  [3645,]   75   79   80 #>  [3646,]   75   79   80 #>  [3647,]   74   78   78 #>  [3648,]   74   78   78 #>  [3649,]   75   79   80 #>  [3650,]   75   79   80 #>  [3651,]   75   79   80 #>  [3652,]   74   78   78 #>  [3653,]   75   79   79 #>  [3654,]   74   78   78 #>  [3655,]   75   79   79 #>  [3656,]   75   79   79 #>  [3657,]   74   78   78 #>  [3658,]   75   79   80 #>  [3659,]   75   79   80 #>  [3660,]   75   79   80 #>  [3661,]   75   79   80 #>  [3662,]   74   78   78 #>  [3663,]   75   79   80 #>  [3664,]   75   79   79 #>  [3665,]   74   78   78 #>  [3666,]   75   79   80 #>  [3667,]   74   78   78 #>  [3668,]   75   79   80 #>  [3669,]   75   79   80 #>  [3670,]   74   78   78 #>  [3671,]   75   79   80 #>  [3672,]   74   78   78 #>  [3673,]   74   78   78 #>  [3674,]   74   78   78 #>  [3675,]   75   79   80 #>  [3676,]   74   78   78 #>  [3677,]   75   79   80 #>  [3678,]   75   79   80 #>  [3679,]   74   78   78 #>  [3680,]   75   79   79 #>  [3681,]   75   79   80 #>  [3682,]   74   78   78 #>  [3683,]   75   79   80 #>  [3684,]   75   79   79 #>  [3685,]   75   79   79 #>  [3686,]   74   78   78 #>  [3687,]   75   79   80 #>  [3688,]   74   78   78 #>  [3689,]   74   78   78 #>  [3690,]   75   79   80 #>  [3691,]   74   78   78 #>  [3692,]   74   78   78 #>  [3693,]   75   79   80 #>  [3694,]   74   78   78 #>  [3695,]   75   79   80 #>  [3696,]   75   79   80 #>  [3697,]   75   79   80 #>  [3698,]   74   78   78 #>  [3699,]   75   79   79 #>  [3700,]   75   79   80 #>  [3701,]   76   81   81 #>  [3702,]   77   81   83 #>  [3703,]   76   81   82 #>  [3704,]   76   80   85 #>  [3705,]   77   81   82 #>  [3706,]   76   81   83 #>  [3707,]   77   81   82 #>  [3708,]   76   80   84 #>  [3709,]   77   80   85 #>  [3710,]   77   81   82 #>  [3711,]   76   80   84 #>  [3712,]   77   81   82 #>  [3713,]   77   80   84 #>  [3714,]   76   81   81 #>  [3715,]   76   81   81 #>  [3716,]   76   81   81 #>  [3717,]   77   80   84 #>  [3718,]   77   81   82 #>  [3719,]   76   81   82 #>  [3720,]   77   81   82 #>  [3721,]   77   81   81 #>  [3722,]   77   80   85 #>  [3723,]   77   81   82 #>  [3724,]   77   81   82 #>  [3725,]   77   81   82 #>  [3726,]   76   81   82 #>  [3727,]   77   80   84 #>  [3728,]   76   81   82 #>  [3729,]   77   81   81 #>  [3730,]   77   81   82 #>  [3731,]   77   81   82 #>  [3732,]   77   81   82 #>  [3733,]   77   81   81 #>  [3734,]   76   81   82 #>  [3735,]   76   80   84 #>  [3736,]   77   81   82 #>  [3737,]   76   81   82 #>  [3738,]   76   81   82 #>  [3739,]   77   81   82 #>  [3740,]   77   81   82 #>  [3741,]   77   81   81 #>  [3742,]   76   81   82 #>  [3743,]   77   80   84 #>  [3744,]   77   80   84 #>  [3745,]   76   81   82 #>  [3746,]   76   81   82 #>  [3747,]   77   81   82 #>  [3748,]   77   81   82 #>  [3749,]   76   80   84 #>  [3750,]   77   81   81 #>  [3751,]   77   81   82 #>  [3752,]   76   80   85 #>  [3753,]   77   81   82 #>  [3754,]   77   81   82 #>  [3755,]   76   80   85 #>  [3756,]   76   81   82 #>  [3757,]   76   81   82 #>  [3758,]   77   80   84 #>  [3759,]   76   81   81 #>  [3760,]   77   81   82 #>  [3761,]   77   81   83 #>  [3762,]   76   81   82 #>  [3763,]   77   81   82 #>  [3764,]   76   81   82 #>  [3765,]   76   81   82 #>  [3766,]   77   80   84 #>  [3767,]   76   81   82 #>  [3768,]   76   81   81 #>  [3769,]   76   81   82 #>  [3770,]   77   81   81 #>  [3771,]   77   81   82 #>  [3772,]   76   81   82 #>  [3773,]   76   81   81 #>  [3774,]   77   81   82 #>  [3775,]   77   81   82 #>  [3776,]   77   81   83 #>  [3777,]   76   81   83 #>  [3778,]   77   81   82 #>  [3779,]   76   80   84 #>  [3780,]   77   80   84 #>  [3781,]   77   80   84 #>  [3782,]   76   80   84 #>  [3783,]   77   80   84 #>  [3784,]   77   81   82 #>  [3785,]   76   81   82 #>  [3786,]   77   81   83 #>  [3787,]   77   80   84 #>  [3788,]   77   80   84 #>  [3789,]   76   80   84 #>  [3790,]   77   80   85 #>  [3791,]   76   81   82 #>  [3792,]   77   80   84 #>  [3793,]   77   81   83 #>  [3794,]   76   81   82 #>  [3795,]   77   80   84 #>  [3796,]   76   81   81 #>  [3797,]   76   81   82 #>  [3798,]   76   81   82 #>  [3799,]   77   80   84 #>  [3800,]   76   81   82 #>  [3801,]   79   83   87 #>  [3802,]   79   83   87 #>  [3803,]   78   82   87 #>  [3804,]   78   82   87 #>  [3805,]   78   82   87 #>  [3806,]   79   83   86 #>  [3807,]   79   83   87 #>  [3808,]   78   82   87 #>  [3809,]   78   82   87 #>  [3810,]   78   82   87 #>  [3811,]   79   83   87 #>  [3812,]   78   82   87 #>  [3813,]   79   83   87 #>  [3814,]   79   83   87 #>  [3815,]   79   83   87 #>  [3816,]   79   83   87 #>  [3817,]   79   83   87 #>  [3818,]   78   82   87 #>  [3819,]   79   83   87 #>  [3820,]   78   82   86 #>  [3821,]   79   83   86 #>  [3822,]   79   83   87 #>  [3823,]   78   82   87 #>  [3824,]   78   82   87 #>  [3825,]   79   83   86 #>  [3826,]   79   83   87 #>  [3827,]   79   83   87 #>  [3828,]   78   82   87 #>  [3829,]   79   83   87 #>  [3830,]   78   82   87 #>  [3831,]   78   82   87 #>  [3832,]   78   82   87 #>  [3833,]   79   83   87 #>  [3834,]   78   82   87 #>  [3835,]   79   83   86 #>  [3836,]   78   82   87 #>  [3837,]   79   83   87 #>  [3838,]   78   82   87 #>  [3839,]   78   82   87 #>  [3840,]   79   83   87 #>  [3841,]   79   83   87 #>  [3842,]   78   82   86 #>  [3843,]   78   82   87 #>  [3844,]   79   83   86 #>  [3845,]   78   82   87 #>  [3846,]   79   83   87 #>  [3847,]   79   83   87 #>  [3848,]   78   82   87 #>  [3849,]   78   82   87 #>  [3850,]   79   83   87 #>  [3851,]   78   82   87 #>  [3852,]   79   83   87 #>  [3853,]   78   82   86 #>  [3854,]   79   83   87 #>  [3855,]   79   83   87 #>  [3856,]   78   82   86 #>  [3857,]   78   82   87 #>  [3858,]   79   83   87 #>  [3859,]   79   83   87 #>  [3860,]   78   82   87 #>  [3861,]   79   83   87 #>  [3862,]   78   82   87 #>  [3863,]   79   83   87 #>  [3864,]   78   82   87 #>  [3865,]   78   82   86 #>  [3866,]   78   82   87 #>  [3867,]   78   82   87 #>  [3868,]   79   83   87 #>  [3869,]   79   83   87 #>  [3870,]   79   83   87 #>  [3871,]   79   83   87 #>  [3872,]   78   82   87 #>  [3873,]   79   83   86 #>  [3874,]   79   83   86 #>  [3875,]   79   83   87 #>  [3876,]   79   83   87 #>  [3877,]   79   83   87 #>  [3878,]   78   82   87 #>  [3879,]   79   83   87 #>  [3880,]   79   83   86 #>  [3881,]   79   83   87 #>  [3882,]   79   83   86 #>  [3883,]   79   83   87 #>  [3884,]   79   83   86 #>  [3885,]   78   82   86 #>  [3886,]   79   83   86 #>  [3887,]   79   83   87 #>  [3888,]   78   82   87 #>  [3889,]   78   82   86 #>  [3890,]   79   83   87 #>  [3891,]   78   82   87 #>  [3892,]   79   83   87 #>  [3893,]   79   83   87 #>  [3894,]   79   83   86 #>  [3895,]   78   82   87 #>  [3896,]   79   83   87 #>  [3897,]   79   83   87 #>  [3898,]   79   83   87 #>  [3899,]   79   83   86 #>  [3900,]   79   83   87 #>  [3901,]   81   86   89 #>  [3902,]   81   85   89 #>  [3903,]   81   86   89 #>  [3904,]   80   84   88 #>  [3905,]   81   86   89 #>  [3906,]   81   85   89 #>  [3907,]   81   86   89 #>  [3908,]   80   84   88 #>  [3909,]   80   84   88 #>  [3910,]   81   86   89 #>  [3911,]   80   84   88 #>  [3912,]   81   85   89 #>  [3913,]   80   84   88 #>  [3914,]   81   86   89 #>  [3915,]   81   85   89 #>  [3916,]   81   86   89 #>  [3917,]   80   84   88 #>  [3918,]   81   86   89 #>  [3919,]   81   86   89 #>  [3920,]   81   86   89 #>  [3921,]   81   86   89 #>  [3922,]   80   84   88 #>  [3923,]   81   85   89 #>  [3924,]   81   86   89 #>  [3925,]   81   86   89 #>  [3926,]   81   86   89 #>  [3927,]   80   84   88 #>  [3928,]   81   86   89 #>  [3929,]   81   85   89 #>  [3930,]   81   85   89 #>  [3931,]   81   85   89 #>  [3932,]   81   86   89 #>  [3933,]   81   86   89 #>  [3934,]   81   85   89 #>  [3935,]   80   84   88 #>  [3936,]   81   86   89 #>  [3937,]   81   85   89 #>  [3938,]   81   86   89 #>  [3939,]   81   86   89 #>  [3940,]   81   86   89 #>  [3941,]   81   86   89 #>  [3942,]   81   85   89 #>  [3943,]   81   85   89 #>  [3944,]   80   84   88 #>  [3945,]   81   86   89 #>  [3946,]   81   86   89 #>  [3947,]   81   85   89 #>  [3948,]   81   85   89 #>  [3949,]   80   84   88 #>  [3950,]   81   86   89 #>  [3951,]   81   86   89 #>  [3952,]   80   84   88 #>  [3953,]   81   86   89 #>  [3954,]   81   86   89 #>  [3955,]   80   84   88 #>  [3956,]   81   85   89 #>  [3957,]   81   86   89 #>  [3958,]   80   84   88 #>  [3959,]   81   86   89 #>  [3960,]   81   85   89 #>  [3961,]   81   85   89 #>  [3962,]   81   86   89 #>  [3963,]   81   85   89 #>  [3964,]   81   85   89 #>  [3965,]   81   85   89 #>  [3966,]   80   84   88 #>  [3967,]   81   86   89 #>  [3968,]   81   86   89 #>  [3969,]   81   86   89 #>  [3970,]   81   85   89 #>  [3971,]   81   86   89 #>  [3972,]   81   86   89 #>  [3973,]   81   86   89 #>  [3974,]   81   86   89 #>  [3975,]   81   85   89 #>  [3976,]   81   86   89 #>  [3977,]   81   86   89 #>  [3978,]   81   85   89 #>  [3979,]   81   85   89 #>  [3980,]   81   86   89 #>  [3981,]   80   84   88 #>  [3982,]   80   84   88 #>  [3983,]   81   86   89 #>  [3984,]   81   86   89 #>  [3985,]   81   86   89 #>  [3986,]   81   86   89 #>  [3987,]   80   84   88 #>  [3988,]   81   86   89 #>  [3989,]   81   86   89 #>  [3990,]   80   84   88 #>  [3991,]   81   86   89 #>  [3992,]   80   84   88 #>  [3993,]   81   86   89 #>  [3994,]   81   85   89 #>  [3995,]   80   84   88 #>  [3996,]   81   86   89 #>  [3997,]   81   86   89 #>  [3998,]   81   86   89 #>  [3999,]   80   84   88 #>  [4000,]   81   85   89 #>  [4001,]   83   88   90 #>  [4002,]   82   87   92 #>  [4003,]   82   87   92 #>  [4004,]   82   87   92 #>  [4005,]   83   88   90 #>  [4006,]   82   87   92 #>  [4007,]   82   87   92 #>  [4008,]   82   87   92 #>  [4009,]   83   88   90 #>  [4010,]   82   87   92 #>  [4011,]   83   88   90 #>  [4012,]   82   87   92 #>  [4013,]   83   88   90 #>  [4014,]   82   87   92 #>  [4015,]   82   87   92 #>  [4016,]   82   87   92 #>  [4017,]   83   88   90 #>  [4018,]   83   88   90 #>  [4019,]   82   87   92 #>  [4020,]   83   88   90 #>  [4021,]   83   88   90 #>  [4022,]   82   87   92 #>  [4023,]   82   87   92 #>  [4024,]   82   87   92 #>  [4025,]   82   87   92 #>  [4026,]   82   87   92 #>  [4027,]   83   88   90 #>  [4028,]   83   88   91 #>  [4029,]   83   88   90 #>  [4030,]   82   87   92 #>  [4031,]   82   87   92 #>  [4032,]   82   87   92 #>  [4033,]   83   88   91 #>  [4034,]   82   87   92 #>  [4035,]   82   87   92 #>  [4036,]   83   88   90 #>  [4037,]   82   87   92 #>  [4038,]   83   88   90 #>  [4039,]   83   88   90 #>  [4040,]   82   87   92 #>  [4041,]   83   88   90 #>  [4042,]   83   88   90 #>  [4043,]   82   87   92 #>  [4044,]   82   87   92 #>  [4045,]   82   87   92 #>  [4046,]   82   87   92 #>  [4047,]   82   87   92 #>  [4048,]   82   87   92 #>  [4049,]   82   87   92 #>  [4050,]   82   87   92 #>  [4051,]   83   88   90 #>  [4052,]   82   87   92 #>  [4053,]   83   88   90 #>  [4054,]   83   88   90 #>  [4055,]   82   87   92 #>  [4056,]   83   88   90 #>  [4057,]   82   87   92 #>  [4058,]   83   88   90 #>  [4059,]   82   87   92 #>  [4060,]   82   87   92 #>  [4061,]   83   88   90 #>  [4062,]   83   88   90 #>  [4063,]   82   87   92 #>  [4064,]   83   88   90 #>  [4065,]   83   88   91 #>  [4066,]   83   88   90 #>  [4067,]   82   87   92 #>  [4068,]   82   87   92 #>  [4069,]   82   87   92 #>  [4070,]   83   88   91 #>  [4071,]   82   87   92 #>  [4072,]   82   87   92 #>  [4073,]   82   87   92 #>  [4074,]   82   87   92 #>  [4075,]   82   87   92 #>  [4076,]   82   87   92 #>  [4077,]   83   88   90 #>  [4078,]   82   87   92 #>  [4079,]   83   88   90 #>  [4080,]   82   87   92 #>  [4081,]   82   87   92 #>  [4082,]   83   88   90 #>  [4083,]   83   88   90 #>  [4084,]   83   88   90 #>  [4085,]   83   88   90 #>  [4086,]   82   87   92 #>  [4087,]   83   88   90 #>  [4088,]   82   87   92 #>  [4089,]   83   88   90 #>  [4090,]   83   88   90 #>  [4091,]   83   88   90 #>  [4092,]   82   87   92 #>  [4093,]   83   88   91 #>  [4094,]   83   88   90 #>  [4095,]   82   87   92 #>  [4096,]   82   87   92 #>  [4097,]   82   87   92 #>  [4098,]   82   87   92 #>  [4099,]   83   88   90 #>  [4100,]   82   87   92 #>  [4101,]   85   90   94 #>  [4102,]   85   90   94 #>  [4103,]   85   90   94 #>  [4104,]   84   89   93 #>  [4105,]   85   90   94 #>  [4106,]   85   90   94 #>  [4107,]   85   90   94 #>  [4108,]   84   89   93 #>  [4109,]   84   89   93 #>  [4110,]   84   89   93 #>  [4111,]   85   90   94 #>  [4112,]   85   90   94 #>  [4113,]   85   90   94 #>  [4114,]   85   90   94 #>  [4115,]   85   90   94 #>  [4116,]   85   90   94 #>  [4117,]   85   90   94 #>  [4118,]   85   90   94 #>  [4119,]   85   90   94 #>  [4120,]   84   89   93 #>  [4121,]   85   90   94 #>  [4122,]   85   90   94 #>  [4123,]   85   90   94 #>  [4124,]   85   90   94 #>  [4125,]   85   90   94 #>  [4126,]   85   90   94 #>  [4127,]   85   90   94 #>  [4128,]   85   90   94 #>  [4129,]   85   90   94 #>  [4130,]   84   89   93 #>  [4131,]   85   90   94 #>  [4132,]   85   90   94 #>  [4133,]   85   90   94 #>  [4134,]   85   90   94 #>  [4135,]   85   90   94 #>  [4136,]   85   90   94 #>  [4137,]   85   90   94 #>  [4138,]   85   90   94 #>  [4139,]   85   90   94 #>  [4140,]   85   90   94 #>  [4141,]   85   90   94 #>  [4142,]   85   90   94 #>  [4143,]   84   89   93 #>  [4144,]   85   90   94 #>  [4145,]   85   90   94 #>  [4146,]   85   90   94 #>  [4147,]   85   90   94 #>  [4148,]   85   90   94 #>  [4149,]   85   90   94 #>  [4150,]   85   90   94 #>  [4151,]   84   89   93 #>  [4152,]   85   90   94 #>  [4153,]   84   89   93 #>  [4154,]   85   90   94 #>  [4155,]   85   90   94 #>  [4156,]   84   89   93 #>  [4157,]   85   90   94 #>  [4158,]   85   90   94 #>  [4159,]   85   90   94 #>  [4160,]   84   89   93 #>  [4161,]   85   90   94 #>  [4162,]   85   90   94 #>  [4163,]   85   90   94 #>  [4164,]   84   89   93 #>  [4165,]   85   90   94 #>  [4166,]   84   89   93 #>  [4167,]   84   89   93 #>  [4168,]   85   90   94 #>  [4169,]   85   90   94 #>  [4170,]   85   90   94 #>  [4171,]   85   90   94 #>  [4172,]   85   90   94 #>  [4173,]   85   90   94 #>  [4174,]   85   90   94 #>  [4175,]   85   90   94 #>  [4176,]   85   90   94 #>  [4177,]   85   90   94 #>  [4178,]   84   89   93 #>  [4179,]   85   90   94 #>  [4180,]   85   90   94 #>  [4181,]   85   90   94 #>  [4182,]   85   90   94 #>  [4183,]   85   90   94 #>  [4184,]   85   90   94 #>  [4185,]   84   89   93 #>  [4186,]   85   90   94 #>  [4187,]   85   90   94 #>  [4188,]   85   90   94 #>  [4189,]   84   89   93 #>  [4190,]   85   90   94 #>  [4191,]   84   89   93 #>  [4192,]   85   90   94 #>  [4193,]   85   90   94 #>  [4194,]   85   90   94 #>  [4195,]   84   89   93 #>  [4196,]   85   90   94 #>  [4197,]   85   90   94 #>  [4198,]   85   90   94 #>  [4199,]   85   90   94 #>  [4200,]   85   90   94 #>  [4201,]   87   92   96 #>  [4202,]   87   92   96 #>  [4203,]   86   91   95 #>  [4204,]   86   91   95 #>  [4205,]   86   91   95 #>  [4206,]   87   92   96 #>  [4207,]   86   91   95 #>  [4208,]   86   91   95 #>  [4209,]   86   91   95 #>  [4210,]   86   91   95 #>  [4211,]   86   91   95 #>  [4212,]   86   91   95 #>  [4213,]   87   92   96 #>  [4214,]   87   92   96 #>  [4215,]   87   92   96 #>  [4216,]   87   92   96 #>  [4217,]   87   92   96 #>  [4218,]   86   91   95 #>  [4219,]   86   91   95 #>  [4220,]   86   91   95 #>  [4221,]   87   92   96 #>  [4222,]   87   92   96 #>  [4223,]   86   91   95 #>  [4224,]   86   91   95 #>  [4225,]   86   91   95 #>  [4226,]   87   92   96 #>  [4227,]   87   92   96 #>  [4228,]   86   91   95 #>  [4229,]   87   92   96 #>  [4230,]   86   91   95 #>  [4231,]   86   91   95 #>  [4232,]   86   91   95 #>  [4233,]   87   92   96 #>  [4234,]   86   91   95 #>  [4235,]   87   92   96 #>  [4236,]   86   91   95 #>  [4237,]   87   92   96 #>  [4238,]   86   91   95 #>  [4239,]   86   91   95 #>  [4240,]   86   91   95 #>  [4241,]   87   92   96 #>  [4242,]   86   91   95 #>  [4243,]   86   91   95 #>  [4244,]   87   92   96 #>  [4245,]   86   91   95 #>  [4246,]   86   91   95 #>  [4247,]   87   92   96 #>  [4248,]   86   91   95 #>  [4249,]   86   91   95 #>  [4250,]   87   92   96 #>  [4251,]   86   91   95 #>  [4252,]   87   92   96 #>  [4253,]   86   91   95 #>  [4254,]   86   91   95 #>  [4255,]   86   91   95 #>  [4256,]   86   91   95 #>  [4257,]   86   91   95 #>  [4258,]   87   92   96 #>  [4259,]   87   92   96 #>  [4260,]   86   91   95 #>  [4261,]   87   92   96 #>  [4262,]   86   91   95 #>  [4263,]   86   91   95 #>  [4264,]   86   91   95 #>  [4265,]   86   91   95 #>  [4266,]   86   91   95 #>  [4267,]   86   91   95 #>  [4268,]   87   92   96 #>  [4269,]   86   91   95 #>  [4270,]   87   92   96 #>  [4271,]   87   92   96 #>  [4272,]   86   91   95 #>  [4273,]   87   92   96 #>  [4274,]   86   91   95 #>  [4275,]   86   91   95 #>  [4276,]   87   92   96 #>  [4277,]   87   92   96 #>  [4278,]   86   91   95 #>  [4279,]   87   92   96 #>  [4280,]   86   91   95 #>  [4281,]   87   92   96 #>  [4282,]   86   91   95 #>  [4283,]   87   92   96 #>  [4284,]   86   91   95 #>  [4285,]   86   91   95 #>  [4286,]   87   92   96 #>  [4287,]   86   91   95 #>  [4288,]   86   91   95 #>  [4289,]   86   91   95 #>  [4290,]   87   92   96 #>  [4291,]   86   91   95 #>  [4292,]   86   91   95 #>  [4293,]   87   92   96 #>  [4294,]   87   92   96 #>  [4295,]   86   91   95 #>  [4296,]   87   92   96 #>  [4297,]   86   91   95 #>  [4298,]   86   91   95 #>  [4299,]   87   92   96 #>  [4300,]   87   92   96 #>  [4301,]   88   93   98 #>  [4302,]   88   94   98 #>  [4303,]   89   95   97 #>  [4304,]   88   93   98 #>  [4305,]   88   94   98 #>  [4306,]   88   93   98 #>  [4307,]   88   93   98 #>  [4308,]   88   93   98 #>  [4309,]   88   94   98 #>  [4310,]   89   95   97 #>  [4311,]   90   95   97 #>  [4312,]   88   94   98 #>  [4313,]   88   94   98 #>  [4314,]   90   95   97 #>  [4315,]   88   93   98 #>  [4316,]   88   93   98 #>  [4317,]   88   94   98 #>  [4318,]   88   94   98 #>  [4319,]   88   93   98 #>  [4320,]   88   94   98 #>  [4321,]   88   94   98 #>  [4322,]   88   94   98 #>  [4323,]   88   94   98 #>  [4324,]   88   94   98 #>  [4325,]   88   93   98 #>  [4326,]   88   93   98 #>  [4327,]   88   94   98 #>  [4328,]   88   93   98 #>  [4329,]   88   94   98 #>  [4330,]   88   93   98 #>  [4331,]   89   95   97 #>  [4332,]   89   95   97 #>  [4333,]   88   94   98 #>  [4334,]   88   93   98 #>  [4335,]   88   93   98 #>  [4336,]   88   94   98 #>  [4337,]   88   93   98 #>  [4338,]   88   93   98 #>  [4339,]   88   93   98 #>  [4340,]   90   95   97 #>  [4341,]   88   93   98 #>  [4342,]   88   93   98 #>  [4343,]   88   93   98 #>  [4344,]   88   94   98 #>  [4345,]   88   93   98 #>  [4346,]   88   93   98 #>  [4347,]   88   93   98 #>  [4348,]   89   95   97 #>  [4349,]   88   93   98 #>  [4350,]   88   93   98 #>  [4351,]   88   93   98 #>  [4352,]   88   93   98 #>  [4353,]   88   94   98 #>  [4354,]   88   93   98 #>  [4355,]   88   93   98 #>  [4356,]   88   93   98 #>  [4357,]   88   93   98 #>  [4358,]   88   93   98 #>  [4359,]   88   93   98 #>  [4360,]   88   94   98 #>  [4361,]   88   94   98 #>  [4362,]   88   93   98 #>  [4363,]   88   94   98 #>  [4364,]   88   93   98 #>  [4365,]   88   93   98 #>  [4366,]   88   93   98 #>  [4367,]   88   93   98 #>  [4368,]   88   93   98 #>  [4369,]   88   93   98 #>  [4370,]   90   95   97 #>  [4371,]   88   93   98 #>  [4372,]   88   93   98 #>  [4373,]   88   93   98 #>  [4374,]   90   95   97 #>  [4375,]   88   94   98 #>  [4376,]   88   93   98 #>  [4377,]   88   93   98 #>  [4378,]   88   93   98 #>  [4379,]   88   93   98 #>  [4380,]   88   94   98 #>  [4381,]   88   94   98 #>  [4382,]   88   93   98 #>  [4383,]   88   94   98 #>  [4384,]   88   94   98 #>  [4385,]   88   93   98 #>  [4386,]   88   94   98 #>  [4387,]   88   93   98 #>  [4388,]   88   94   98 #>  [4389,]   88   93   98 #>  [4390,]   88   93   98 #>  [4391,]   88   93   98 #>  [4392,]   88   94   98 #>  [4393,]   88   93   98 #>  [4394,]   88   93   98 #>  [4395,]   88   93   98 #>  [4396,]   88   93   98 #>  [4397,]   88   93   98 #>  [4398,]   90   95   97 #>  [4399,]   88   93   98 #>  [4400,]   88   93   98 #>  [4401,]   92   97  100 #>  [4402,]   91   96  100 #>  [4403,]   91   96   99 #>  [4404,]   92   97  100 #>  [4405,]   91   96   99 #>  [4406,]   91   96  100 #>  [4407,]   92   97   99 #>  [4408,]   91   96   99 #>  [4409,]   92   98  100 #>  [4410,]   92   98  100 #>  [4411,]   91   96  100 #>  [4412,]   91   96  100 #>  [4413,]   92   98   99 #>  [4414,]   92   97  100 #>  [4415,]   91   96  100 #>  [4416,]   92   97   99 #>  [4417,]   91   96   99 #>  [4418,]   91   96  100 #>  [4419,]   91   96  100 #>  [4420,]   92   98   99 #>  [4421,]   91   96  100 #>  [4422,]   92   97   99 #>  [4423,]   91   96  100 #>  [4424,]   92   98   99 #>  [4425,]   92   97   99 #>  [4426,]   91   96  100 #>  [4427,]   91   96  100 #>  [4428,]   92   97  100 #>  [4429,]   91   96   99 #>  [4430,]   91   96  100 #>  [4431,]   91   96  100 #>  [4432,]   91   96  100 #>  [4433,]   91   96  100 #>  [4434,]   91   96  100 #>  [4435,]   91   96  100 #>  [4436,]   92   98  100 #>  [4437,]   91   96  100 #>  [4438,]   91   96  100 #>  [4439,]   92   97   99 #>  [4440,]   91   96   99 #>  [4441,]   91   96  100 #>  [4442,]   91   96  100 #>  [4443,]   91   96   99 #>  [4444,]   91   96   99 #>  [4445,]   92   97   99 #>  [4446,]   91   96   99 #>  [4447,]   91   96   99 #>  [4448,]   91   96  100 #>  [4449,]   92   97   99 #>  [4450,]   92   97   99 #>  [4451,]   91   96   99 #>  [4452,]   92   97  100 #>  [4453,]   92   98   99 #>  [4454,]   92   97   99 #>  [4455,]   92   97   99 #>  [4456,]   91   96   99 #>  [4457,]   92   97  100 #>  [4458,]   92   97  100 #>  [4459,]   92   97   99 #>  [4460,]   91   96  100 #>  [4461,]   91   96  100 #>  [4462,]   91   96  100 #>  [4463,]   91   96   99 #>  [4464,]   91   96  100 #>  [4465,]   91   96   99 #>  [4466,]   91   96   99 #>  [4467,]   92   97  100 #>  [4468,]   91   96  100 #>  [4469,]   91   96  100 #>  [4470,]   91   96   99 #>  [4471,]   91   96   99 #>  [4472,]   92   97   99 #>  [4473,]   92   97  100 #>  [4474,]   91   96  100 #>  [4475,]   91   96  100 #>  [4476,]   92   97   99 #>  [4477,]   91   96   99 #>  [4478,]   91   96   99 #>  [4479,]   91   96   99 #>  [4480,]   91   96  100 #>  [4481,]   91   96   99 #>  [4482,]   91   96  100 #>  [4483,]   91   96   99 #>  [4484,]   91   96   99 #>  [4485,]   92   97  100 #>  [4486,]   92   98   99 #>  [4487,]   92   97  100 #>  [4488,]   92   98  100 #>  [4489,]   91   96   99 #>  [4490,]   92   97   99 #>  [4491,]   92   97  100 #>  [4492,]   91   96  100 #>  [4493,]   91   96  100 #>  [4494,]   91   96   99 #>  [4495,]   91   96  100 #>  [4496,]   91   96  100 #>  [4497,]   91   96  100 #>  [4498,]   91   96   99 #>  [4499,]   91   96  100 #>  [4500,]   91   96   99 #>  [4501,]   94  100  102 #>  [4502,]   94  100  102 #>  [4503,]   93   99  101 #>  [4504,]   93   99  101 #>  [4505,]   94  100  102 #>  [4506,]   94  100  102 #>  [4507,]   93   99  101 #>  [4508,]   94  100  102 #>  [4509,]   94  100  102 #>  [4510,]   94  100  102 #>  [4511,]   94  100  102 #>  [4512,]   93   99  101 #>  [4513,]   94  100  102 #>  [4514,]   94  100  102 #>  [4515,]   94  100  102 #>  [4516,]   94  100  102 #>  [4517,]   94  100  102 #>  [4518,]   94  100  102 #>  [4519,]   94  100  102 #>  [4520,]   94  100  102 #>  [4521,]   94  100  102 #>  [4522,]   94  100  102 #>  [4523,]   94  100  102 #>  [4524,]   94  100  102 #>  [4525,]   93   99  101 #>  [4526,]   94  100  102 #>  [4527,]   94  100  102 #>  [4528,]   94  100  102 #>  [4529,]   94  100  102 #>  [4530,]   94  100  102 #>  [4531,]   93   99  101 #>  [4532,]   94  100  102 #>  [4533,]   94  100  102 #>  [4534,]   94  100  102 #>  [4535,]   94  100  102 #>  [4536,]   94  100  102 #>  [4537,]   94  100  102 #>  [4538,]   94  100  102 #>  [4539,]   94  100  102 #>  [4540,]   94  100  102 #>  [4541,]   94  100  102 #>  [4542,]   94  100  102 #>  [4543,]   94  100  102 #>  [4544,]   94  100  102 #>  [4545,]   94  100  102 #>  [4546,]   94  100  102 #>  [4547,]   94  100  102 #>  [4548,]   94  100  102 #>  [4549,]   94  100  102 #>  [4550,]   94  100  102 #>  [4551,]   94  100  102 #>  [4552,]   93   99  101 #>  [4553,]   94  100  102 #>  [4554,]   94  100  102 #>  [4555,]   94  100  102 #>  [4556,]   94  100  102 #>  [4557,]   94  100  102 #>  [4558,]   94  100  102 #>  [4559,]   93   99  101 #>  [4560,]   93   99  101 #>  [4561,]   94  100  102 #>  [4562,]   94  100  102 #>  [4563,]   94  100  102 #>  [4564,]   94  100  102 #>  [4565,]   94  100  102 #>  [4566,]   94  100  102 #>  [4567,]   94  100  102 #>  [4568,]   94  100  102 #>  [4569,]   94  100  102 #>  [4570,]   94  100  102 #>  [4571,]   94  100  102 #>  [4572,]   94  100  102 #>  [4573,]   94  100  102 #>  [4574,]   94  100  102 #>  [4575,]   94  100  102 #>  [4576,]   94  100  102 #>  [4577,]   94  100  102 #>  [4578,]   94  100  102 #>  [4579,]   94  100  102 #>  [4580,]   94  100  102 #>  [4581,]   94  100  102 #>  [4582,]   94  100  102 #>  [4583,]   94  100  102 #>  [4584,]   94  100  102 #>  [4585,]   94  100  102 #>  [4586,]   94  100  102 #>  [4587,]   94  100  102 #>  [4588,]   94  100  102 #>  [4589,]   94  100  102 #>  [4590,]   94  100  102 #>  [4591,]   94  100  102 #>  [4592,]   94  100  102 #>  [4593,]   94  100  102 #>  [4594,]   94  100  102 #>  [4595,]   94  100  102 #>  [4596,]   93   99  101 #>  [4597,]   93   99  101 #>  [4598,]   94  100  102 #>  [4599,]   94  100  102 #>  [4600,]   94  100  102 #>  [4601,]   96  102  104 #>  [4602,]   96  102  104 #>  [4603,]   95  101  103 #>  [4604,]   96  102  104 #>  [4605,]   95  101  103 #>  [4606,]   96  102  104 #>  [4607,]   96  102  104 #>  [4608,]   96  102  104 #>  [4609,]   95  101  103 #>  [4610,]   95  101  103 #>  [4611,]   95  101  103 #>  [4612,]   96  102  104 #>  [4613,]   96  102  104 #>  [4614,]   95  101  103 #>  [4615,]   96  102  104 #>  [4616,]   96  102  104 #>  [4617,]   96  102  104 #>  [4618,]   96  102  104 #>  [4619,]   96  102  104 #>  [4620,]   96  102  104 #>  [4621,]   95  101  103 #>  [4622,]   96  102  104 #>  [4623,]   96  102  104 #>  [4624,]   95  101  103 #>  [4625,]   95  101  103 #>  [4626,]   96  102  104 #>  [4627,]   96  102  104 #>  [4628,]   95  101  103 #>  [4629,]   96  102  104 #>  [4630,]   96  102  104 #>  [4631,]   95  101  103 #>  [4632,]   95  101  103 #>  [4633,]   96  102  104 #>  [4634,]   95  101  103 #>  [4635,]   95  101  103 #>  [4636,]   96  102  104 #>  [4637,]   96  102  104 #>  [4638,]   96  102  104 #>  [4639,]   95  101  103 #>  [4640,]   95  101  103 #>  [4641,]   96  102  104 #>  [4642,]   96  102  104 #>  [4643,]   96  102  104 #>  [4644,]   96  102  104 #>  [4645,]   96  102  104 #>  [4646,]   96  102  104 #>  [4647,]   95  101  103 #>  [4648,]   95  101  103 #>  [4649,]   96  102  104 #>  [4650,]   96  102  104 #>  [4651,]   96  102  104 #>  [4652,]   95  101  103 #>  [4653,]   96  102  104 #>  [4654,]   95  101  103 #>  [4655,]   96  102  104 #>  [4656,]   96  102  104 #>  [4657,]   96  102  104 #>  [4658,]   96  102  104 #>  [4659,]   96  102  104 #>  [4660,]   96  102  104 #>  [4661,]   96  102  104 #>  [4662,]   95  101  103 #>  [4663,]   96  102  104 #>  [4664,]   96  102  104 #>  [4665,]   95  101  103 #>  [4666,]   96  102  104 #>  [4667,]   96  102  104 #>  [4668,]   96  102  104 #>  [4669,]   96  102  104 #>  [4670,]   95  101  103 #>  [4671,]   96  102  104 #>  [4672,]   95  101  103 #>  [4673,]   96  102  104 #>  [4674,]   95  101  103 #>  [4675,]   96  102  104 #>  [4676,]   95  101  103 #>  [4677,]   96  102  104 #>  [4678,]   96  102  104 #>  [4679,]   96  102  104 #>  [4680,]   96  102  104 #>  [4681,]   96  102  104 #>  [4682,]   95  101  103 #>  [4683,]   96  102  104 #>  [4684,]   96  102  104 #>  [4685,]   96  102  104 #>  [4686,]   96  102  104 #>  [4687,]   96  102  104 #>  [4688,]   96  102  104 #>  [4689,]   96  102  104 #>  [4690,]   96  102  104 #>  [4691,]   95  101  103 #>  [4692,]   96  102  104 #>  [4693,]   96  102  104 #>  [4694,]   96  102  104 #>  [4695,]   96  102  104 #>  [4696,]   96  102  104 #>  [4697,]   96  102  104 #>  [4698,]   95  101  103 #>  [4699,]   96  102  104 #>  [4700,]   96  102  104 #>  [4701,]   97  103  105 #>  [4702,]   97  103  105 #>  [4703,]   97  103  105 #>  [4704,]   97  103  105 #>  [4705,]   97  103  105 #>  [4706,]   97  103  105 #>  [4707,]   97  103  105 #>  [4708,]   97  103  105 #>  [4709,]   97  103  105 #>  [4710,]   97  103  105 #>  [4711,]   97  103  105 #>  [4712,]   97  103  105 #>  [4713,]   97  103  105 #>  [4714,]   97  103  105 #>  [4715,]   97  103  105 #>  [4716,]   97  103  105 #>  [4717,]   97  103  105 #>  [4718,]   97  103  105 #>  [4719,]   97  103  105 #>  [4720,]   97  103  105 #>  [4721,]   97  103  105 #>  [4722,]   98  104  106 #>  [4723,]   97  103  105 #>  [4724,]   97  103  105 #>  [4725,]   97  103  105 #>  [4726,]   97  103  105 #>  [4727,]   97  103  105 #>  [4728,]   97  103  105 #>  [4729,]   98  104  106 #>  [4730,]   97  103  105 #>  [4731,]   97  103  105 #>  [4732,]   97  103  105 #>  [4733,]   97  103  105 #>  [4734,]   97  103  105 #>  [4735,]   97  103  105 #>  [4736,]   97  103  105 #>  [4737,]   97  103  105 #>  [4738,]   97  103  105 #>  [4739,]   97  103  105 #>  [4740,]   97  103  105 #>  [4741,]   97  103  105 #>  [4742,]   97  103  105 #>  [4743,]   97  103  105 #>  [4744,]   97  103  105 #>  [4745,]   97  103  105 #>  [4746,]   97  103  105 #>  [4747,]   97  103  105 #>  [4748,]   97  103  105 #>  [4749,]   97  103  105 #>  [4750,]   97  103  105 #>  [4751,]   97  103  105 #>  [4752,]   97  103  105 #>  [4753,]   97  103  105 #>  [4754,]   97  103  105 #>  [4755,]   97  103  105 #>  [4756,]   97  103  105 #>  [4757,]   97  103  105 #>  [4758,]   98  104  106 #>  [4759,]   97  103  105 #>  [4760,]   97  103  105 #>  [4761,]   97  103  105 #>  [4762,]   97  103  105 #>  [4763,]   97  103  105 #>  [4764,]   98  104  106 #>  [4765,]   97  103  105 #>  [4766,]   97  103  105 #>  [4767,]   97  103  105 #>  [4768,]   97  103  105 #>  [4769,]   97  103  105 #>  [4770,]   97  103  105 #>  [4771,]   97  103  105 #>  [4772,]   97  103  105 #>  [4773,]   97  103  105 #>  [4774,]   97  103  105 #>  [4775,]   97  103  105 #>  [4776,]   97  103  105 #>  [4777,]   98  104  106 #>  [4778,]   97  103  105 #>  [4779,]   97  103  105 #>  [4780,]   97  103  105 #>  [4781,]   97  103  105 #>  [4782,]   97  103  105 #>  [4783,]   97  103  105 #>  [4784,]   97  103  105 #>  [4785,]   97  103  105 #>  [4786,]   97  103  105 #>  [4787,]   98  104  106 #>  [4788,]   97  103  105 #>  [4789,]   97  103  105 #>  [4790,]   97  103  105 #>  [4791,]   97  103  105 #>  [4792,]   97  103  105 #>  [4793,]   97  103  105 #>  [4794,]   97  103  105 #>  [4795,]   97  103  105 #>  [4796,]   97  103  105 #>  [4797,]   97  103  105 #>  [4798,]   97  103  105 #>  [4799,]   97  103  105 #>  [4800,]   97  103  105 #>  [4801,]   99  107  108 #>  [4802,]   99  107  108 #>  [4803,]   99  106  108 #>  [4804,]   99  107  108 #>  [4805,]   99  107  108 #>  [4806,]   99  107  108 #>  [4807,]   99  107  108 #>  [4808,]  100  105  107 #>  [4809,]   99  107  108 #>  [4810,]   99  107  108 #>  [4811,]   99  107  108 #>  [4812,]   99  106  108 #>  [4813,]  100  105  107 #>  [4814,]   99  106  108 #>  [4815,]  100  105  107 #>  [4816,]   99  107  108 #>  [4817,]   99  107  108 #>  [4818,]   99  107  108 #>  [4819,]  100  105  107 #>  [4820,]  100  105  107 #>  [4821,]   99  107  108 #>  [4822,]  100  105  107 #>  [4823,]   99  107  108 #>  [4824,]   99  107  108 #>  [4825,]   99  107  108 #>  [4826,]   99  106  108 #>  [4827,]  100  105  107 #>  [4828,]   99  107  108 #>  [4829,]  100  105  107 #>  [4830,]   99  107  108 #>  [4831,]   99  107  108 #>  [4832,]   99  106  108 #>  [4833,]   99  107  108 #>  [4834,]   99  107  108 #>  [4835,]   99  107  108 #>  [4836,]  100  105  107 #>  [4837,]  100  105  107 #>  [4838,]  100  105  107 #>  [4839,]   99  107  108 #>  [4840,]   99  107  108 #>  [4841,]  100  105  107 #>  [4842,]   99  106  108 #>  [4843,]   99  107  108 #>  [4844,]   99  107  108 #>  [4845,]   99  107  108 #>  [4846,]  100  105  107 #>  [4847,]   99  107  108 #>  [4848,]   99  106  108 #>  [4849,]   99  107  108 #>  [4850,]  100  105  107 #>  [4851,]  100  105  107 #>  [4852,]   99  107  108 #>  [4853,]  100  105  107 #>  [4854,]   99  106  108 #>  [4855,]  100  105  107 #>  [4856,]   99  107  108 #>  [4857,]   99  107  108 #>  [4858,]  100  105  107 #>  [4859,]   99  107  108 #>  [4860,]  100  105  107 #>  [4861,]   99  107  108 #>  [4862,]   99  106  108 #>  [4863,]   99  107  108 #>  [4864,]  100  105  107 #>  [4865,]   99  107  108 #>  [4866,]  100  105  107 #>  [4867,]   99  107  108 #>  [4868,]   99  107  108 #>  [4869,]  100  105  107 #>  [4870,]   99  107  108 #>  [4871,]  100  105  107 #>  [4872,]   99  107  108 #>  [4873,]   99  107  108 #>  [4874,]   99  107  108 #>  [4875,]   99  107  108 #>  [4876,]   99  107  108 #>  [4877,]  100  105  107 #>  [4878,]   99  107  108 #>  [4879,]   99  107  108 #>  [4880,]  100  105  107 #>  [4881,]  100  105  107 #>  [4882,]   99  107  108 #>  [4883,]  100  105  107 #>  [4884,]   99  107  108 #>  [4885,]   99  107  108 #>  [4886,]   99  107  108 #>  [4887,]  100  105  107 #>  [4888,]   99  107  108 #>  [4889,]   99  106  108 #>  [4890,]  100  105  107 #>  [4891,]   99  107  108 #>  [4892,]   99  107  108 #>  [4893,]   99  107  108 #>  [4894,]   99  107  108 #>  [4895,]   99  107  108 #>  [4896,]  100  105  107 #>  [4897,]  100  105  107 #>  [4898,]   99  107  108 #>  [4899,]   99  107  108 #>  [4900,]  100  105  107 #>  [4901,]  101  108  109 #>  [4902,]  101  108  110 #>  [4903,]  101  108  109 #>  [4904,]  102  108  109 #>  [4905,]  101  108  110 #>  [4906,]  101  108  109 #>  [4907,]  101  108  110 #>  [4908,]  101  108  109 #>  [4909,]  102  108  110 #>  [4910,]  101  108  110 #>  [4911,]  102  108  109 #>  [4912,]  102  108  110 #>  [4913,]  101  108  110 #>  [4914,]  102  108  109 #>  [4915,]  102  108  110 #>  [4916,]  101  108  109 #>  [4917,]  101  108  110 #>  [4918,]  102  108  110 #>  [4919,]  102  108  109 #>  [4920,]  101  108  110 #>  [4921,]  102  108  110 #>  [4922,]  101  108  110 #>  [4923,]  101  108  110 #>  [4924,]  101  108  110 #>  [4925,]  101  108  110 #>  [4926,]  101  108  109 #>  [4927,]  102  108  110 #>  [4928,]  101  108  109 #>  [4929,]  101  108  110 #>  [4930,]  101  108  110 #>  [4931,]  102  108  110 #>  [4932,]  101  108  110 #>  [4933,]  102  108  110 #>  [4934,]  101  108  109 #>  [4935,]  101  108  109 #>  [4936,]  102  108  110 #>  [4937,]  101  108  109 #>  [4938,]  102  108  109 #>  [4939,]  101  108  110 #>  [4940,]  101  108  110 #>  [4941,]  102  108  110 #>  [4942,]  102  108  109 #>  [4943,]  101  108  110 #>  [4944,]  101  108  110 #>  [4945,]  101  108  109 #>  [4946,]  101  108  110 #>  [4947,]  101  108  110 #>  [4948,]  102  108  110 #>  [4949,]  101  108  109 #>  [4950,]  101  108  110 #>  [4951,]  101  108  110 #>  [4952,]  101  108  109 #>  [4953,]  101  108  110 #>  [4954,]  101  108  110 #>  [4955,]  101  108  109 #>  [4956,]  101  108  109 #>  [4957,]  101  108  109 #>  [4958,]  102  108  110 #>  [4959,]  101  108  109 #>  [4960,]  101  108  110 #>  [4961,]  102  108  110 #>  [4962,]  101  108  109 #>  [4963,]  101  108  110 #>  [4964,]  101  108  109 #>  [4965,]  101  108  109 #>  [4966,]  101  108  110 #>  [4967,]  101  108  110 #>  [4968,]  102  108  109 #>  [4969,]  102  108  109 #>  [4970,]  101  108  110 #>  [4971,]  101  108  110 #>  [4972,]  101  108  109 #>  [4973,]  101  108  109 #>  [4974,]  102  108  110 #>  [4975,]  102  108  110 #>  [4976,]  101  108  110 #>  [4977,]  101  108  109 #>  [4978,]  101  108  110 #>  [4979,]  101  108  109 #>  [4980,]  101  108  110 #>  [4981,]  101  108  110 #>  [4982,]  102  108  109 #>  [4983,]  101  108  110 #>  [4984,]  101  108  110 #>  [4985,]  102  108  110 #>  [4986,]  101  108  110 #>  [4987,]  101  108  110 #>  [4988,]  101  108  110 #>  [4989,]  101  108  109 #>  [4990,]  101  108  110 #>  [4991,]  101  108  109 #>  [4992,]  102  108  110 #>  [4993,]  102  108  110 #>  [4994,]  101  108  109 #>  [4995,]  101  108  110 #>  [4996,]  102  108  109 #>  [4997,]  102  108  109 #>  [4998,]  101  108  110 #>  [4999,]  101  108  110 #>  [5000,]  101  108  109 #>  [5001,]  104  110  111 #>  [5002,]  104  110  111 #>  [5003,]  103  109  113 #>  [5004,]  103  109  113 #>  [5005,]  103  109  113 #>  [5006,]  103  109  112 #>  [5007,]  103  109  113 #>  [5008,]  104  110  111 #>  [5009,]  103  109  113 #>  [5010,]  103  109  113 #>  [5011,]  103  109  112 #>  [5012,]  103  109  112 #>  [5013,]  104  110  111 #>  [5014,]  103  109  113 #>  [5015,]  104  110  111 #>  [5016,]  104  110  111 #>  [5017,]  103  109  112 #>  [5018,]  103  109  113 #>  [5019,]  104  110  111 #>  [5020,]  104  110  111 #>  [5021,]  103  109  113 #>  [5022,]  104  110  111 #>  [5023,]  104  110  111 #>  [5024,]  103  109  113 #>  [5025,]  103  109  113 #>  [5026,]  104  110  111 #>  [5027,]  104  110  111 #>  [5028,]  103  109  113 #>  [5029,]  104  110  111 #>  [5030,]  104  110  111 #>  [5031,]  103  109  112 #>  [5032,]  103  109  113 #>  [5033,]  104  110  111 #>  [5034,]  103  109  112 #>  [5035,]  103  109  113 #>  [5036,]  104  110  111 #>  [5037,]  104  110  111 #>  [5038,]  104  110  111 #>  [5039,]  103  109  113 #>  [5040,]  103  109  113 #>  [5041,]  104  110  111 #>  [5042,]  103  109  112 #>  [5043,]  104  110  111 #>  [5044,]  104  110  111 #>  [5045,]  104  110  111 #>  [5046,]  104  110  111 #>  [5047,]  103  109  112 #>  [5048,]  103  109  112 #>  [5049,]  103  109  113 #>  [5050,]  104  110  111 #>  [5051,]  104  110  111 #>  [5052,]  103  109  113 #>  [5053,]  104  110  111 #>  [5054,]  103  109  113 #>  [5055,]  104  110  111 #>  [5056,]  104  110  111 #>  [5057,]  103  109  113 #>  [5058,]  104  110  111 #>  [5059,]  104  110  111 #>  [5060,]  104  110  111 #>  [5061,]  104  110  111 #>  [5062,]  103  109  113 #>  [5063,]  104  110  111 #>  [5064,]  104  110  111 #>  [5065,]  103  109  112 #>  [5066,]  104  110  111 #>  [5067,]  103  109  113 #>  [5068,]  104  110  111 #>  [5069,]  104  110  111 #>  [5070,]  103  109  112 #>  [5071,]  104  110  111 #>  [5072,]  103  109  113 #>  [5073,]  103  109  113 #>  [5074,]  103  109  113 #>  [5075,]  104  110  111 #>  [5076,]  103  109  113 #>  [5077,]  104  110  111 #>  [5078,]  104  110  111 #>  [5079,]  103  109  112 #>  [5080,]  104  110  111 #>  [5081,]  104  110  111 #>  [5082,]  103  109  113 #>  [5083,]  104  110  111 #>  [5084,]  104  110  111 #>  [5085,]  104  110  111 #>  [5086,]  103  109  113 #>  [5087,]  104  110  111 #>  [5088,]  103  109  113 #>  [5089,]  103  109  113 #>  [5090,]  104  110  111 #>  [5091,]  103  109  113 #>  [5092,]  103  109  112 #>  [5093,]  104  110  111 #>  [5094,]  103  109  112 #>  [5095,]  104  110  111 #>  [5096,]  104  110  111 #>  [5097,]  104  110  111 #>  [5098,]  103  109  113 #>  [5099,]  103  109  113 #>  [5100,]  104  110  111 #>  [5101,]  105  111  114 #>  [5102,]  105  111  114 #>  [5103,]  105  111  114 #>  [5104,]  105  112  115 #>  [5105,]  105  111  114 #>  [5106,]  105  111  114 #>  [5107,]  105  111  114 #>  [5108,]  105  111  114 #>  [5109,]  105  112  115 #>  [5110,]  105  111  114 #>  [5111,]  105  112  115 #>  [5112,]  105  112  115 #>  [5113,]  105  111  114 #>  [5114,]  105  112  115 #>  [5115,]  105  112  115 #>  [5116,]  105  111  114 #>  [5117,]  105  111  114 #>  [5118,]  105  112  115 #>  [5119,]  105  112  115 #>  [5120,]  105  111  114 #>  [5121,]  105  112  115 #>  [5122,]  105  111  114 #>  [5123,]  105  111  114 #>  [5124,]  105  111  114 #>  [5125,]  105  111  114 #>  [5126,]  105  112  115 #>  [5127,]  105  112  115 #>  [5128,]  105  111  114 #>  [5129,]  105  111  114 #>  [5130,]  105  112  115 #>  [5131,]  105  112  115 #>  [5132,]  105  111  114 #>  [5133,]  105  112  115 #>  [5134,]  105  111  114 #>  [5135,]  105  111  114 #>  [5136,]  105  112  115 #>  [5137,]  105  111  114 #>  [5138,]  105  112  115 #>  [5139,]  105  111  114 #>  [5140,]  105  111  114 #>  [5141,]  105  112  115 #>  [5142,]  105  112  115 #>  [5143,]  105  111  114 #>  [5144,]  105  111  114 #>  [5145,]  105  111  114 #>  [5146,]  105  111  114 #>  [5147,]  105  111  114 #>  [5148,]  105  112  115 #>  [5149,]  105  111  114 #>  [5150,]  105  111  114 #>  [5151,]  105  111  114 #>  [5152,]  105  111  114 #>  [5153,]  105  111  114 #>  [5154,]  105  111  114 #>  [5155,]  105  111  114 #>  [5156,]  105  111  114 #>  [5157,]  105  111  114 #>  [5158,]  105  112  115 #>  [5159,]  105  111  114 #>  [5160,]  105  112  115 #>  [5161,]  105  112  115 #>  [5162,]  105  111  114 #>  [5163,]  105  111  114 #>  [5164,]  105  111  114 #>  [5165,]  105  111  114 #>  [5166,]  105  111  114 #>  [5167,]  105  111  114 #>  [5168,]  105  112  115 #>  [5169,]  105  112  115 #>  [5170,]  105  111  114 #>  [5171,]  105  111  114 #>  [5172,]  105  111  114 #>  [5173,]  105  111  114 #>  [5174,]  105  112  115 #>  [5175,]  105  112  115 #>  [5176,]  105  111  114 #>  [5177,]  105  111  114 #>  [5178,]  105  111  114 #>  [5179,]  105  111  114 #>  [5180,]  105  111  114 #>  [5181,]  105  111  114 #>  [5182,]  105  112  115 #>  [5183,]  105  111  114 #>  [5184,]  105  111  114 #>  [5185,]  105  112  115 #>  [5186,]  105  111  114 #>  [5187,]  105  111  114 #>  [5188,]  105  111  114 #>  [5189,]  105  111  114 #>  [5190,]  105  111  114 #>  [5191,]  105  111  114 #>  [5192,]  105  112  115 #>  [5193,]  105  112  115 #>  [5194,]  105  111  114 #>  [5195,]  105  111  114 #>  [5196,]  105  112  115 #>  [5197,]  105  112  115 #>  [5198,]  105  111  114 #>  [5199,]  105  111  114 #>  [5200,]  105  111  114 #>  [5201,]  107  114  117 #>  [5202,]  107  114  117 #>  [5203,]  107  114  117 #>  [5204,]  106  113  116 #>  [5205,]  107  114  117 #>  [5206,]  107  115  117 #>  [5207,]  107  114  117 #>  [5208,]  106  113  116 #>  [5209,]  106  113  116 #>  [5210,]  107  115  117 #>  [5211,]  106  113  116 #>  [5212,]  107  115  117 #>  [5213,]  106  113  116 #>  [5214,]  107  115  117 #>  [5215,]  107  115  117 #>  [5216,]  107  114  117 #>  [5217,]  106  113  116 #>  [5218,]  107  115  117 #>  [5219,]  107  115  117 #>  [5220,]  107  114  117 #>  [5221,]  107  115  117 #>  [5222,]  106  113  116 #>  [5223,]  107  114  117 #>  [5224,]  107  114  117 #>  [5225,]  107  114  117 #>  [5226,]  107  115  117 #>  [5227,]  106  113  116 #>  [5228,]  107  114  117 #>  [5229,]  107  114  117 #>  [5230,]  107  115  117 #>  [5231,]  107  115  117 #>  [5232,]  107  115  117 #>  [5233,]  107  115  117 #>  [5234,]  107  115  117 #>  [5235,]  106  113  116 #>  [5236,]  107  115  117 #>  [5237,]  107  114  117 #>  [5238,]  107  115  117 #>  [5239,]  107  114  117 #>  [5240,]  107  114  117 #>  [5241,]  107  115  117 #>  [5242,]  107  115  117 #>  [5243,]  106  113  116 #>  [5244,]  106  113  116 #>  [5245,]  107  114  117 #>  [5246,]  107  114  117 #>  [5247,]  107  114  117 #>  [5248,]  107  115  117 #>  [5249,]  106  113  116 #>  [5250,]  107  114  117 #>  [5251,]  107  114  117 #>  [5252,]  106  113  116 #>  [5253,]  107  114  117 #>  [5254,]  107  114  117 #>  [5255,]  106  113  116 #>  [5256,]  107  114  117 #>  [5257,]  107  114  117 #>  [5258,]  106  113  116 #>  [5259,]  107  114  117 #>  [5260,]  107  115  117 #>  [5261,]  107  115  117 #>  [5262,]  107  115  117 #>  [5263,]  107  114  117 #>  [5264,]  107  115  117 #>  [5265,]  107  114  117 #>  [5266,]  106  113  116 #>  [5267,]  107  115  117 #>  [5268,]  107  115  117 #>  [5269,]  106  113  116 #>  [5270,]  107  114  117 #>  [5271,]  107  114  117 #>  [5272,]  107  114  117 #>  [5273,]  107  115  117 #>  [5274,]  107  115  117 #>  [5275,]  107  115  117 #>  [5276,]  107  114  117 #>  [5277,]  107  114  117 #>  [5278,]  107  114  117 #>  [5279,]  106  113  116 #>  [5280,]  106  113  116 #>  [5281,]  106  113  116 #>  [5282,]  106  113  116 #>  [5283,]  106  113  116 #>  [5284,]  107  114  117 #>  [5285,]  107  115  117 #>  [5286,]  107  114  117 #>  [5287,]  106  113  116 #>  [5288,]  106  113  116 #>  [5289,]  106  113  116 #>  [5290,]  106  113  116 #>  [5291,]  107  114  117 #>  [5292,]  106  113  116 #>  [5293,]  107  115  117 #>  [5294,]  107  114  117 #>  [5295,]  106  113  116 #>  [5296,]  107  115  117 #>  [5297,]  107  115  117 #>  [5298,]  107  114  117 #>  [5299,]  106  113  116 #>  [5300,]  107  114  117 #>  [5301,]  109  117  119 #>  [5302,]  109  117  119 #>  [5303,]  108  116  118 #>  [5304,]  108  116  118 #>  [5305,]  108  116  118 #>  [5306,]  109  117  119 #>  [5307,]  108  116  118 #>  [5308,]  108  116  118 #>  [5309,]  108  116  118 #>  [5310,]  108  116  118 #>  [5311,]  109  117  119 #>  [5312,]  108  116  118 #>  [5313,]  109  117  119 #>  [5314,]  109  117  119 #>  [5315,]  109  117  119 #>  [5316,]  109  117  119 #>  [5317,]  109  117  119 #>  [5318,]  108  116  118 #>  [5319,]  109  117  119 #>  [5320,]  108  116  118 #>  [5321,]  109  117  119 #>  [5322,]  109  117  119 #>  [5323,]  108  116  118 #>  [5324,]  108  116  118 #>  [5325,]  108  116  118 #>  [5326,]  109  117  119 #>  [5327,]  109  117  119 #>  [5328,]  108  116  118 #>  [5329,]  109  117  119 #>  [5330,]  108  116  118 #>  [5331,]  108  116  118 #>  [5332,]  108  116  118 #>  [5333,]  109  117  119 #>  [5334,]  108  116  118 #>  [5335,]  109  117  119 #>  [5336,]  108  116  118 #>  [5337,]  109  117  119 #>  [5338,]  108  116  118 #>  [5339,]  108  116  118 #>  [5340,]  108  116  118 #>  [5341,]  109  117  119 #>  [5342,]  108  116  118 #>  [5343,]  108  116  118 #>  [5344,]  109  117  119 #>  [5345,]  108  116  118 #>  [5346,]  108  116  118 #>  [5347,]  109  117  119 #>  [5348,]  108  116  118 #>  [5349,]  108  116  118 #>  [5350,]  109  117  119 #>  [5351,]  108  116  118 #>  [5352,]  109  117  119 #>  [5353,]  108  116  118 #>  [5354,]  108  116  118 #>  [5355,]  109  117  119 #>  [5356,]  108  116  118 #>  [5357,]  108  116  118 #>  [5358,]  109  117  119 #>  [5359,]  109  117  119 #>  [5360,]  108  116  118 #>  [5361,]  109  117  119 #>  [5362,]  108  116  118 #>  [5363,]  108  116  118 #>  [5364,]  108  116  118 #>  [5365,]  108  116  118 #>  [5366,]  108  116  118 #>  [5367,]  108  116  118 #>  [5368,]  109  117  119 #>  [5369,]  109  117  119 #>  [5370,]  109  117  119 #>  [5371,]  109  117  119 #>  [5372,]  108  116  118 #>  [5373,]  109  117  119 #>  [5374,]  109  117  119 #>  [5375,]  109  117  119 #>  [5376,]  109  117  119 #>  [5377,]  109  117  119 #>  [5378,]  108  116  118 #>  [5379,]  109  117  119 #>  [5380,]  108  116  118 #>  [5381,]  109  117  119 #>  [5382,]  108  116  118 #>  [5383,]  109  117  119 #>  [5384,]  109  117  119 #>  [5385,]  108  116  118 #>  [5386,]  109  117  119 #>  [5387,]  109  117  119 #>  [5388,]  108  116  118 #>  [5389,]  108  116  118 #>  [5390,]  109  117  119 #>  [5391,]  108  116  118 #>  [5392,]  109  117  119 #>  [5393,]  109  117  119 #>  [5394,]  109  117  119 #>  [5395,]  108  116  118 #>  [5396,]  109  117  119 #>  [5397,]  109  117  119 #>  [5398,]  109  117  119 #>  [5399,]  109  117  119 #>  [5400,]  109  117  119 #>  [5401,]  111  119  121 #>  [5402,]  111  119  121 #>  [5403,]  110  118  120 #>  [5404,]  111  119  121 #>  [5405,]  111  119  121 #>  [5406,]  111  119  121 #>  [5407,]  111  119  121 #>  [5408,]  111  119  121 #>  [5409,]  111  119  121 #>  [5410,]  110  118  120 #>  [5411,]  110  118  120 #>  [5412,]  111  119  121 #>  [5413,]  111  119  121 #>  [5414,]  110  118  120 #>  [5415,]  111  119  121 #>  [5416,]  111  119  121 #>  [5417,]  111  119  121 #>  [5418,]  111  119  121 #>  [5419,]  111  119  121 #>  [5420,]  111  119  121 #>  [5421,]  111  119  121 #>  [5422,]  111  119  121 #>  [5423,]  111  119  121 #>  [5424,]  111  119  121 #>  [5425,]  111  119  121 #>  [5426,]  111  119  121 #>  [5427,]  111  119  121 #>  [5428,]  111  119  121 #>  [5429,]  111  119  121 #>  [5430,]  111  119  121 #>  [5431,]  111  119  121 #>  [5432,]  110  118  120 #>  [5433,]  111  119  121 #>  [5434,]  111  119  121 #>  [5435,]  111  119  121 #>  [5436,]  111  119  121 #>  [5437,]  111  119  121 #>  [5438,]  111  119  121 #>  [5439,]  111  119  121 #>  [5440,]  110  118  120 #>  [5441,]  111  119  121 #>  [5442,]  111  119  121 #>  [5443,]  111  119  121 #>  [5444,]  111  119  121 #>  [5445,]  111  119  121 #>  [5446,]  111  119  121 #>  [5447,]  111  119  121 #>  [5448,]  110  118  120 #>  [5449,]  111  119  121 #>  [5450,]  111  119  121 #>  [5451,]  111  119  121 #>  [5452,]  111  119  121 #>  [5453,]  111  119  121 #>  [5454,]  111  119  121 #>  [5455,]  111  119  121 #>  [5456,]  111  119  121 #>  [5457,]  111  119  121 #>  [5458,]  111  119  121 #>  [5459,]  111  119  121 #>  [5460,]  111  119  121 #>  [5461,]  111  119  121 #>  [5462,]  111  119  121 #>  [5463,]  111  119  121 #>  [5464,]  111  119  121 #>  [5465,]  111  119  121 #>  [5466,]  111  119  121 #>  [5467,]  111  119  121 #>  [5468,]  111  119  121 #>  [5469,]  111  119  121 #>  [5470,]  110  118  120 #>  [5471,]  111  119  121 #>  [5472,]  111  119  121 #>  [5473,]  111  119  121 #>  [5474,]  111  119  121 #>  [5475,]  111  119  121 #>  [5476,]  111  119  121 #>  [5477,]  111  119  121 #>  [5478,]  111  119  121 #>  [5479,]  111  119  121 #>  [5480,]  111  119  121 #>  [5481,]  111  119  121 #>  [5482,]  111  119  121 #>  [5483,]  111  119  121 #>  [5484,]  111  119  121 #>  [5485,]  111  119  121 #>  [5486,]  111  119  121 #>  [5487,]  111  119  121 #>  [5488,]  111  119  121 #>  [5489,]  111  119  121 #>  [5490,]  111  119  121 #>  [5491,]  111  119  121 #>  [5492,]  111  119  121 #>  [5493,]  111  119  121 #>  [5494,]  111  119  121 #>  [5495,]  111  119  121 #>  [5496,]  111  119  121 #>  [5497,]  111  119  121 #>  [5498,]  110  118  120 #>  [5499,]  111  119  121 #>  [5500,]  111  119  121 #>  [5501,]  113  121  122 #>  [5502,]  113  121  122 #>  [5503,]  113  120  122 #>  [5504,]  112  120  124 #>  [5505,]  113  120  122 #>  [5506,]  113  121  122 #>  [5507,]  113  120  122 #>  [5508,]  112  120  124 #>  [5509,]  112  120  124 #>  [5510,]  113  120  122 #>  [5511,]  112  120  122 #>  [5512,]  113  120  122 #>  [5513,]  112  121  122 #>  [5514,]  113  121  122 #>  [5515,]  113  121  122 #>  [5516,]  113  121  122 #>  [5517,]  112  121  123 #>  [5518,]  113  120  122 #>  [5519,]  113  120  122 #>  [5520,]  113  120  122 #>  [5521,]  113  121  122 #>  [5522,]  112  120  124 #>  [5523,]  113  120  122 #>  [5524,]  113  120  122 #>  [5525,]  113  120  122 #>  [5526,]  113  121  122 #>  [5527,]  112  121  124 #>  [5528,]  113  120  122 #>  [5529,]  113  121  122 #>  [5530,]  113  120  122 #>  [5531,]  113  120  122 #>  [5532,]  113  120  122 #>  [5533,]  113  121  122 #>  [5534,]  113  120  122 #>  [5535,]  112  121  123 #>  [5536,]  113  120  122 #>  [5537,]  113  121  122 #>  [5538,]  113  120  122 #>  [5539,]  113  120  122 #>  [5540,]  113  120  122 #>  [5541,]  113  121  122 #>  [5542,]  113  120  122 #>  [5543,]  113  120  122 #>  [5544,]  112  121  123 #>  [5545,]  113  120  122 #>  [5546,]  113  120  122 #>  [5547,]  113  120  122 #>  [5548,]  113  120  122 #>  [5549,]  112  120  122 #>  [5550,]  113  121  122 #>  [5551,]  113  120  122 #>  [5552,]  112  121  124 #>  [5553,]  113  120  122 #>  [5554,]  113  120  122 #>  [5555,]  112  120  122 #>  [5556,]  113  120  122 #>  [5557,]  113  120  122 #>  [5558,]  112  120  124 #>  [5559,]  113  121  122 #>  [5560,]  113  120  122 #>  [5561,]  113  121  122 #>  [5562,]  113  120  122 #>  [5563,]  113  120  122 #>  [5564,]  113  120  122 #>  [5565,]  113  120  122 #>  [5566,]  112  120  123 #>  [5567,]  113  120  122 #>  [5568,]  113  121  122 #>  [5569,]  113  120  122 #>  [5570,]  113  121  122 #>  [5571,]  113  121  122 #>  [5572,]  113  120  122 #>  [5573,]  113  121  122 #>  [5574,]  113  120  122 #>  [5575,]  113  120  122 #>  [5576,]  113  121  122 #>  [5577,]  113  121  122 #>  [5578,]  113  120  122 #>  [5579,]  113  121  122 #>  [5580,]  112  120  122 #>  [5581,]  112  121  123 #>  [5582,]  112  120  124 #>  [5583,]  112  121  122 #>  [5584,]  113  120  122 #>  [5585,]  113  120  122 #>  [5586,]  113  121  122 #>  [5587,]  112  120  124 #>  [5588,]  112  120  122 #>  [5589,]  113  120  122 #>  [5590,]  112  120  124 #>  [5591,]  113  120  122 #>  [5592,]  112  120  123 #>  [5593,]  113  121  122 #>  [5594,]  113  121  122 #>  [5595,]  112  120  123 #>  [5596,]  113  121  122 #>  [5597,]  113  120  122 #>  [5598,]  113  120  122 #>  [5599,]  112  121  124 #>  [5600,]  113  121  122 #>  [5601,]  115  123  126 #>  [5602,]  115  122  125 #>  [5603,]  115  122  125 #>  [5604,]  115  122  125 #>  [5605,]  115  123  126 #>  [5606,]  114  122  125 #>  [5607,]  115  122  125 #>  [5608,]  115  122  125 #>  [5609,]  115  122  125 #>  [5610,]  115  123  126 #>  [5611,]  115  123  126 #>  [5612,]  115  123  126 #>  [5613,]  115  122  125 #>  [5614,]  115  123  126 #>  [5615,]  115  123  126 #>  [5616,]  115  122  125 #>  [5617,]  115  123  126 #>  [5618,]  115  123  126 #>  [5619,]  115  122  125 #>  [5620,]  114  122  125 #>  [5621,]  114  122  125 #>  [5622,]  115  123  126 #>  [5623,]  115  122  125 #>  [5624,]  115  122  125 #>  [5625,]  114  122  125 #>  [5626,]  115  123  126 #>  [5627,]  115  123  126 #>  [5628,]  115  122  125 #>  [5629,]  115  122  125 #>  [5630,]  115  122  125 #>  [5631,]  115  123  126 #>  [5632,]  115  123  126 #>  [5633,]  115  122  125 #>  [5634,]  115  122  125 #>  [5635,]  114  122  125 #>  [5636,]  115  122  125 #>  [5637,]  115  122  125 #>  [5638,]  115  123  126 #>  [5639,]  115  122  125 #>  [5640,]  115  122  125 #>  [5641,]  115  122  125 #>  [5642,]  114  122  125 #>  [5643,]  115  123  126 #>  [5644,]  114  122  125 #>  [5645,]  115  122  125 #>  [5646,]  115  122  125 #>  [5647,]  115  123  126 #>  [5648,]  115  122  125 #>  [5649,]  115  122  125 #>  [5650,]  115  122  125 #>  [5651,]  115  122  125 #>  [5652,]  115  123  126 #>  [5653,]  114  122  125 #>  [5654,]  115  122  125 #>  [5655,]  115  122  125 #>  [5656,]  114  122  125 #>  [5657,]  115  122  125 #>  [5658,]  115  123  126 #>  [5659,]  115  123  126 #>  [5660,]  115  122  125 #>  [5661,]  115  123  126 #>  [5662,]  115  122  125 #>  [5663,]  115  122  125 #>  [5664,]  115  122  125 #>  [5665,]  114  122  125 #>  [5666,]  115  123  126 #>  [5667,]  115  122  125 #>  [5668,]  115  123  126 #>  [5669,]  115  122  125 #>  [5670,]  115  123  126 #>  [5671,]  115  123  126 #>  [5672,]  115  122  125 #>  [5673,]  114  122  125 #>  [5674,]  114  122  125 #>  [5675,]  115  123  126 #>  [5676,]  115  122  125 #>  [5677,]  115  123  126 #>  [5678,]  115  122  125 #>  [5679,]  115  123  126 #>  [5680,]  114  122  125 #>  [5681,]  115  122  125 #>  [5682,]  114  122  125 #>  [5683,]  115  122  125 #>  [5684,]  114  122  125 #>  [5685,]  114  122  125 #>  [5686,]  114  122  125 #>  [5687,]  115  123  126 #>  [5688,]  115  122  125 #>  [5689,]  114  122  125 #>  [5690,]  115  123  126 #>  [5691,]  115  123  126 #>  [5692,]  115  123  126 #>  [5693,]  115  122  125 #>  [5694,]  114  122  125 #>  [5695,]  115  123  126 #>  [5696,]  115  123  126 #>  [5697,]  115  122  125 #>  [5698,]  115  122  125 #>  [5699,]  114  122  125 #>  [5700,]  115  123  126 #>  [5701,]  117  125  128 #>  [5702,]  117  124  127 #>  [5703,]  116  124  127 #>  [5704,]  117  124  127 #>  [5705,]  117  125  128 #>  [5706,]  117  124  127 #>  [5707,]  117  124  127 #>  [5708,]  117  124  127 #>  [5709,]  117  125  128 #>  [5710,]  117  124  127 #>  [5711,]  116  125  128 #>  [5712,]  116  124  127 #>  [5713,]  117  125  128 #>  [5714,]  116  124  127 #>  [5715,]  117  124  127 #>  [5716,]  117  124  127 #>  [5717,]  117  125  128 #>  [5718,]  117  125  128 #>  [5719,]  117  124  127 #>  [5720,]  116  125  128 #>  [5721,]  117  125  128 #>  [5722,]  117  124  127 #>  [5723,]  117  124  127 #>  [5724,]  117  124  127 #>  [5725,]  117  124  127 #>  [5726,]  116  124  127 #>  [5727,]  117  125  128 #>  [5728,]  117  125  128 #>  [5729,]  116  125  128 #>  [5730,]  117  124  127 #>  [5731,]  117  124  127 #>  [5732,]  116  124  127 #>  [5733,]  117  125  128 #>  [5734,]  117  124  127 #>  [5735,]  117  124  127 #>  [5736,]  116  125  128 #>  [5737,]  117  124  127 #>  [5738,]  117  125  128 #>  [5739,]  117  125  128 #>  [5740,]  116  124  127 #>  [5741,]  116  125  128 #>  [5742,]  116  125  128 #>  [5743,]  117  124  127 #>  [5744,]  117  124  127 #>  [5745,]  117  124  127 #>  [5746,]  117  124  127 #>  [5747,]  117  124  127 #>  [5748,]  116  124  127 #>  [5749,]  117  124  127 #>  [5750,]  117  124  127 #>  [5751,]  116  125  128 #>  [5752,]  117  124  127 #>  [5753,]  117  125  128 #>  [5754,]  116  125  128 #>  [5755,]  117  124  127 #>  [5756,]  117  125  128 #>  [5757,]  117  124  127 #>  [5758,]  117  125  128 #>  [5759,]  117  124  127 #>  [5760,]  116  124  127 #>  [5761,]  117  125  128 #>  [5762,]  116  125  128 #>  [5763,]  117  124  127 #>  [5764,]  117  124  127 #>  [5765,]  117  125  128 #>  [5766,]  116  125  128 #>  [5767,]  117  124  127 #>  [5768,]  116  124  127 #>  [5769,]  116  124  127 #>  [5770,]  117  125  128 #>  [5771,]  117  124  127 #>  [5772,]  117  124  127 #>  [5773,]  117  124  127 #>  [5774,]  117  124  127 #>  [5775,]  117  124  127 #>  [5776,]  117  124  127 #>  [5777,]  117  125  128 #>  [5778,]  117  124  127 #>  [5779,]  117  125  128 #>  [5780,]  116  124  127 #>  [5781,]  116  124  127 #>  [5782,]  117  125  128 #>  [5783,]  116  125  128 #>  [5784,]  117  125  128 #>  [5785,]  117  125  128 #>  [5786,]  117  124  127 #>  [5787,]  117  125  128 #>  [5788,]  117  124  127 #>  [5789,]  116  125  128 #>  [5790,]  117  125  128 #>  [5791,]  116  125  128 #>  [5792,]  117  124  127 #>  [5793,]  117  125  128 #>  [5794,]  117  125  128 #>  [5795,]  117  124  127 #>  [5796,]  117  124  127 #>  [5797,]  117  124  127 #>  [5798,]  117  124  127 #>  [5799,]  117  124  127 #>  [5800,]  117  124  127 #>  [5801,]  119  127  130 #>  [5802,]  119  127  130 #>  [5803,]  118  126  129 #>  [5804,]  118  126  129 #>  [5805,]  119  127  130 #>  [5806,]  119  127  130 #>  [5807,]  118  126  129 #>  [5808,]  118  126  129 #>  [5809,]  119  127  130 #>  [5810,]  119  127  130 #>  [5811,]  119  127  130 #>  [5812,]  118  126  129 #>  [5813,]  119  127  130 #>  [5814,]  118  126  129 #>  [5815,]  119  127  130 #>  [5816,]  119  127  130 #>  [5817,]  119  127  130 #>  [5818,]  119  127  130 #>  [5819,]  119  127  130 #>  [5820,]  119  127  130 #>  [5821,]  119  127  130 #>  [5822,]  119  127  130 #>  [5823,]  118  126  129 #>  [5824,]  119  127  130 #>  [5825,]  118  126  129 #>  [5826,]  119  127  130 #>  [5827,]  119  127  130 #>  [5828,]  119  127  130 #>  [5829,]  119  127  130 #>  [5830,]  119  127  130 #>  [5831,]  118  126  129 #>  [5832,]  118  126  129 #>  [5833,]  119  127  130 #>  [5834,]  119  127  130 #>  [5835,]  119  127  130 #>  [5836,]  119  127  130 #>  [5837,]  118  126  129 #>  [5838,]  119  127  130 #>  [5839,]  119  127  130 #>  [5840,]  118  126  129 #>  [5841,]  119  127  130 #>  [5842,]  119  127  130 #>  [5843,]  119  127  130 #>  [5844,]  119  127  130 #>  [5845,]  119  127  130 #>  [5846,]  118  126  129 #>  [5847,]  118  126  129 #>  [5848,]  119  127  130 #>  [5849,]  119  127  130 #>  [5850,]  119  127  130 #>  [5851,]  119  127  130 #>  [5852,]  118  126  129 #>  [5853,]  119  127  130 #>  [5854,]  119  127  130 #>  [5855,]  118  126  129 #>  [5856,]  119  127  130 #>  [5857,]  118  126  129 #>  [5858,]  119  127  130 #>  [5859,]  118  126  129 #>  [5860,]  118  126  129 #>  [5861,]  119  127  130 #>  [5862,]  119  127  130 #>  [5863,]  119  127  130 #>  [5864,]  119  127  130 #>  [5865,]  119  127  130 #>  [5866,]  119  127  130 #>  [5867,]  118  126  129 #>  [5868,]  118  126  129 #>  [5869,]  119  127  130 #>  [5870,]  119  127  130 #>  [5871,]  119  127  130 #>  [5872,]  118  126  129 #>  [5873,]  119  127  130 #>  [5874,]  118  126  129 #>  [5875,]  118  126  129 #>  [5876,]  118  126  129 #>  [5877,]  119  127  130 #>  [5878,]  118  126  129 #>  [5879,]  119  127  130 #>  [5880,]  118  126  129 #>  [5881,]  119  127  130 #>  [5882,]  119  127  130 #>  [5883,]  119  127  130 #>  [5884,]  119  127  130 #>  [5885,]  119  127  130 #>  [5886,]  118  126  129 #>  [5887,]  119  127  130 #>  [5888,]  119  127  130 #>  [5889,]  119  127  130 #>  [5890,]  119  127  130 #>  [5891,]  119  127  130 #>  [5892,]  118  126  129 #>  [5893,]  119  127  130 #>  [5894,]  119  127  130 #>  [5895,]  119  127  130 #>  [5896,]  118  126  129 #>  [5897,]  118  126  129 #>  [5898,]  118  126  129 #>  [5899,]  119  127  130 #>  [5900,]  119  127  130 #>  [5901,]  121  129  131 #>  [5902,]  120  128  132 #>  [5903,]  120  128  133 #>  [5904,]  121  129  131 #>  [5905,]  120  128  134 #>  [5906,]  120  128  132 #>  [5907,]  121  129  131 #>  [5908,]  121  129  131 #>  [5909,]  121  129  131 #>  [5910,]  121  129  131 #>  [5911,]  120  128  132 #>  [5912,]  120  128  133 #>  [5913,]  121  129  131 #>  [5914,]  120  128  132 #>  [5915,]  121  129  131 #>  [5916,]  121  129  131 #>  [5917,]  121  129  131 #>  [5918,]  121  129  131 #>  [5919,]  120  128  132 #>  [5920,]  120  128  134 #>  [5921,]  121  129  131 #>  [5922,]  120  128  132 #>  [5923,]  121  129  131 #>  [5924,]  120  128  134 #>  [5925,]  121  129  131 #>  [5926,]  120  128  132 #>  [5927,]  121  129  131 #>  [5928,]  121  129  131 #>  [5929,]  120  128  132 #>  [5930,]  120  128  134 #>  [5931,]  120  128  134 #>  [5932,]  120  128  133 #>  [5933,]  120  128  132 #>  [5934,]  120  128  134 #>  [5935,]  120  128  132 #>  [5936,]  120  128  133 #>  [5937,]  121  129  131 #>  [5938,]  120  128  134 #>  [5939,]  121  129  131 #>  [5940,]  120  128  132 #>  [5941,]  120  128  132 #>  [5942,]  120  128  133 #>  [5943,]  121  129  131 #>  [5944,]  120  128  132 #>  [5945,]  121  129  131 #>  [5946,]  121  129  131 #>  [5947,]  121  129  131 #>  [5948,]  120  128  133 #>  [5949,]  120  128  134 #>  [5950,]  120  128  132 #>  [5951,]  120  128  133 #>  [5952,]  120  128  132 #>  [5953,]  121  129  131 #>  [5954,]  120  128  133 #>  [5955,]  120  128  132 #>  [5956,]  121  129  131 #>  [5957,]  120  128  134 #>  [5958,]  120  128  132 #>  [5959,]  120  128  132 #>  [5960,]  120  128  133 #>  [5961,]  121  129  131 #>  [5962,]  120  128  133 #>  [5963,]  120  128  132 #>  [5964,]  121  129  131 #>  [5965,]  120  128  134 #>  [5966,]  120  128  133 #>  [5967,]  120  128  134 #>  [5968,]  120  128  132 #>  [5969,]  120  128  132 #>  [5970,]  121  129  131 #>  [5971,]  121  129  131 #>  [5972,]  121  129  131 #>  [5973,]  121  129  131 #>  [5974,]  121  129  131 #>  [5975,]  121  129  131 #>  [5976,]  121  129  131 #>  [5977,]  121  129  131 #>  [5978,]  120  128  134 #>  [5979,]  120  128  132 #>  [5980,]  120  128  133 #>  [5981,]  120  128  132 #>  [5982,]  121  129  131 #>  [5983,]  120  128  132 #>  [5984,]  121  129  131 #>  [5985,]  120  128  134 #>  [5986,]  120  128  132 #>  [5987,]  121  129  131 #>  [5988,]  121  129  131 #>  [5989,]  120  128  133 #>  [5990,]  121  129  131 #>  [5991,]  120  128  133 #>  [5992,]  120  128  132 #>  [5993,]  120  128  132 #>  [5994,]  121  129  131 #>  [5995,]  121  129  131 #>  [5996,]  121  129  131 #>  [5997,]  120  128  132 #>  [5998,]  120  128  132 #>  [5999,]  120  128  132 #>  [6000,]  121  129  131 #>  [6001,]  123  131  136 #>  [6002,]  123  131  136 #>  [6003,]  122  130  135 #>  [6004,]  122  130  135 #>  [6005,]  123  131  136 #>  [6006,]  123  131  136 #>  [6007,]  122  130  135 #>  [6008,]  122  130  135 #>  [6009,]  123  131  136 #>  [6010,]  123  131  136 #>  [6011,]  123  131  136 #>  [6012,]  122  130  135 #>  [6013,]  123  131  136 #>  [6014,]  122  130  136 #>  [6015,]  123  131  136 #>  [6016,]  123  131  136 #>  [6017,]  123  131  136 #>  [6018,]  123  131  136 #>  [6019,]  123  131  136 #>  [6020,]  123  131  136 #>  [6021,]  123  131  136 #>  [6022,]  123  131  136 #>  [6023,]  122  130  136 #>  [6024,]  123  131  136 #>  [6025,]  122  130  135 #>  [6026,]  123  131  136 #>  [6027,]  123  131  136 #>  [6028,]  123  131  136 #>  [6029,]  123  131  136 #>  [6030,]  123  131  136 #>  [6031,]  122  130  135 #>  [6032,]  122  130  136 #>  [6033,]  123  131  136 #>  [6034,]  123  131  136 #>  [6035,]  123  131  136 #>  [6036,]  123  131  136 #>  [6037,]  122  130  136 #>  [6038,]  123  131  136 #>  [6039,]  123  131  136 #>  [6040,]  122  130  136 #>  [6041,]  123  131  136 #>  [6042,]  123  131  136 #>  [6043,]  123  131  136 #>  [6044,]  123  131  136 #>  [6045,]  123  131  136 #>  [6046,]  122  130  136 #>  [6047,]  122  130  136 #>  [6048,]  123  131  136 #>  [6049,]  123  131  136 #>  [6050,]  123  131  136 #>  [6051,]  123  131  136 #>  [6052,]  122  130  135 #>  [6053,]  123  131  136 #>  [6054,]  123  131  136 #>  [6055,]  122  130  136 #>  [6056,]  123  131  136 #>  [6057,]  122  130  135 #>  [6058,]  123  131  136 #>  [6059,]  122  130  135 #>  [6060,]  122  130  135 #>  [6061,]  123  131  136 #>  [6062,]  123  131  136 #>  [6063,]  123  131  136 #>  [6064,]  123  131  136 #>  [6065,]  123  131  136 #>  [6066,]  123  131  136 #>  [6067,]  122  130  136 #>  [6068,]  122  130  135 #>  [6069,]  123  131  136 #>  [6070,]  123  131  136 #>  [6071,]  123  131  136 #>  [6072,]  122  130  136 #>  [6073,]  123  131  136 #>  [6074,]  122  130  136 #>  [6075,]  123  131  136 #>  [6076,]  122  130  136 #>  [6077,]  123  131  136 #>  [6078,]  122  130  136 #>  [6079,]  123  131  136 #>  [6080,]  122  130  136 #>  [6081,]  123  131  136 #>  [6082,]  123  131  136 #>  [6083,]  123  131  136 #>  [6084,]  123  131  136 #>  [6085,]  123  131  136 #>  [6086,]  122  130  135 #>  [6087,]  123  131  136 #>  [6088,]  123  131  136 #>  [6089,]  123  131  136 #>  [6090,]  123  131  136 #>  [6091,]  123  131  136 #>  [6092,]  122  130  136 #>  [6093,]  123  131  136 #>  [6094,]  123  131  136 #>  [6095,]  123  131  136 #>  [6096,]  122  130  135 #>  [6097,]  122  130  135 #>  [6098,]  122  130  135 #>  [6099,]  123  131  136 #>  [6100,]  123  131  136 #>  [6101,]  124  132  137 #>  [6102,]  124  132  137 #>  [6103,]  124  132  137 #>  [6104,]  125  133  138 #>  [6105,]  124  132  137 #>  [6106,]  124  132  137 #>  [6107,]  124  132  137 #>  [6108,]  124  132  137 #>  [6109,]  124  132  137 #>  [6110,]  124  132  137 #>  [6111,]  125  133  138 #>  [6112,]  125  133  138 #>  [6113,]  124  132  137 #>  [6114,]  125  133  138 #>  [6115,]  125  133  138 #>  [6116,]  124  132  137 #>  [6117,]  124  132  137 #>  [6118,]  124  132  137 #>  [6119,]  125  133  138 #>  [6120,]  124  132  137 #>  [6121,]  125  133  138 #>  [6122,]  124  132  137 #>  [6123,]  124  132  137 #>  [6124,]  124  132  137 #>  [6125,]  124  132  137 #>  [6126,]  124  132  137 #>  [6127,]  125  133  138 #>  [6128,]  124  132  137 #>  [6129,]  124  132  137 #>  [6130,]  124  132  137 #>  [6131,]  124  132  137 #>  [6132,]  124  132  137 #>  [6133,]  124  132  137 #>  [6134,]  124  132  137 #>  [6135,]  124  132  137 #>  [6136,]  124  132  137 #>  [6137,]  124  132  137 #>  [6138,]  125  133  138 #>  [6139,]  124  132  137 #>  [6140,]  124  132  137 #>  [6141,]  125  133  138 #>  [6142,]  125  133  138 #>  [6143,]  124  132  137 #>  [6144,]  124  132  137 #>  [6145,]  124  132  137 #>  [6146,]  124  132  137 #>  [6147,]  124  132  137 #>  [6148,]  125  133  138 #>  [6149,]  124  132  137 #>  [6150,]  124  132  137 #>  [6151,]  124  132  137 #>  [6152,]  124  132  137 #>  [6153,]  124  132  137 #>  [6154,]  124  132  137 #>  [6155,]  124  132  137 #>  [6156,]  124  132  137 #>  [6157,]  124  132  137 #>  [6158,]  124  132  137 #>  [6159,]  124  132  137 #>  [6160,]  124  132  137 #>  [6161,]  125  133  138 #>  [6162,]  124  132  137 #>  [6163,]  124  132  137 #>  [6164,]  124  132  137 #>  [6165,]  124  132  137 #>  [6166,]  124  132  137 #>  [6167,]  124  132  137 #>  [6168,]  124  132  137 #>  [6169,]  125  133  138 #>  [6170,]  124  132  137 #>  [6171,]  124  132  137 #>  [6172,]  124  132  137 #>  [6173,]  124  132  137 #>  [6174,]  125  133  138 #>  [6175,]  125  133  138 #>  [6176,]  124  132  137 #>  [6177,]  124  132  137 #>  [6178,]  124  132  137 #>  [6179,]  124  132  137 #>  [6180,]  124  132  137 #>  [6181,]  124  132  137 #>  [6182,]  125  133  138 #>  [6183,]  124  132  137 #>  [6184,]  124  132  137 #>  [6185,]  124  132  137 #>  [6186,]  124  132  137 #>  [6187,]  124  132  137 #>  [6188,]  124  132  137 #>  [6189,]  124  132  137 #>  [6190,]  124  132  137 #>  [6191,]  124  132  137 #>  [6192,]  125  133  138 #>  [6193,]  125  133  138 #>  [6194,]  124  132  137 #>  [6195,]  124  132  137 #>  [6196,]  125  133  138 #>  [6197,]  125  133  138 #>  [6198,]  124  132  137 #>  [6199,]  124  132  137 #>  [6200,]  124  132  137 #>  [6201,]  126  134  140 #>  [6202,]  126  134  139 #>  [6203,]  126  134  140 #>  [6204,]  126  134  140 #>  [6205,]  127  135  140 #>  [6206,]  126  134  139 #>  [6207,]  126  134  140 #>  [6208,]  126  134  140 #>  [6209,]  126  134  140 #>  [6210,]  126  134  140 #>  [6211,]  126  134  139 #>  [6212,]  126  134  139 #>  [6213,]  126  134  140 #>  [6214,]  126  134  140 #>  [6215,]  126  134  139 #>  [6216,]  126  134  140 #>  [6217,]  126  134  139 #>  [6218,]  127  135  140 #>  [6219,]  126  134  139 #>  [6220,]  126  134  140 #>  [6221,]  126  134  140 #>  [6222,]  126  134  140 #>  [6223,]  126  134  139 #>  [6224,]  126  134  140 #>  [6225,]  126  134  140 #>  [6226,]  126  134  139 #>  [6227,]  126  134  140 #>  [6228,]  126  134  140 #>  [6229,]  126  134  139 #>  [6230,]  126  134  139 #>  [6231,]  126  134  139 #>  [6232,]  127  135  140 #>  [6233,]  126  134  140 #>  [6234,]  126  134  139 #>  [6235,]  126  134  139 #>  [6236,]  126  134  140 #>  [6237,]  126  134  139 #>  [6238,]  126  134  140 #>  [6239,]  126  134  140 #>  [6240,]  126  134  140 #>  [6241,]  126  134  140 #>  [6242,]  126  134  139 #>  [6243,]  126  134  139 #>  [6244,]  126  134  139 #>  [6245,]  126  134  140 #>  [6246,]  126  134  139 #>  [6247,]  126  134  139 #>  [6248,]  126  134  139 #>  [6249,]  126  134  140 #>  [6250,]  126  134  140 #>  [6251,]  126  134  140 #>  [6252,]  126  134  140 #>  [6253,]  126  134  140 #>  [6254,]  126  134  140 #>  [6255,]  126  134  140 #>  [6256,]  126  134  139 #>  [6257,]  126  134  140 #>  [6258,]  126  134  140 #>  [6259,]  126  134  140 #>  [6260,]  126  134  139 #>  [6261,]  126  134  139 #>  [6262,]  126  134  140 #>  [6263,]  126  134  139 #>  [6264,]  126  134  139 #>  [6265,]  126  134  139 #>  [6266,]  126  134  139 #>  [6267,]  126  134  140 #>  [6268,]  126  134  139 #>  [6269,]  126  134  140 #>  [6270,]  126  134  139 #>  [6271,]  127  135  140 #>  [6272,]  126  134  140 #>  [6273,]  126  134  140 #>  [6274,]  126  134  140 #>  [6275,]  127  135  139 #>  [6276,]  126  134  140 #>  [6277,]  126  134  140 #>  [6278,]  126  134  139 #>  [6279,]  126  134  139 #>  [6280,]  126  134  140 #>  [6281,]  126  134  139 #>  [6282,]  126  134  140 #>  [6283,]  126  134  140 #>  [6284,]  126  134  140 #>  [6285,]  126  134  140 #>  [6286,]  126  134  140 #>  [6287,]  126  134  140 #>  [6288,]  126  134  140 #>  [6289,]  126  134  140 #>  [6290,]  126  134  140 #>  [6291,]  126  134  140 #>  [6292,]  126  134  139 #>  [6293,]  126  134  139 #>  [6294,]  126  134  139 #>  [6295,]  127  135  139 #>  [6296,]  126  134  139 #>  [6297,]  126  134  140 #>  [6298,]  126  134  140 #>  [6299,]  126  134  140 #>  [6300,]  127  135  139 #>  [6301,]  129  137  141 #>  [6302,]  129  137  141 #>  [6303,]  129  137  141 #>  [6304,]  128  136  141 #>  [6305,]  129  137  141 #>  [6306,]  129  137  141 #>  [6307,]  129  137  141 #>  [6308,]  128  136  141 #>  [6309,]  128  136  141 #>  [6310,]  128  136  141 #>  [6311,]  129  137  141 #>  [6312,]  129  137  141 #>  [6313,]  129  137  141 #>  [6314,]  129  137  141 #>  [6315,]  129  137  141 #>  [6316,]  129  137  141 #>  [6317,]  129  137  141 #>  [6318,]  129  137  141 #>  [6319,]  129  137  141 #>  [6320,]  129  137  141 #>  [6321,]  129  137  141 #>  [6322,]  129  137  141 #>  [6323,]  129  137  141 #>  [6324,]  129  137  141 #>  [6325,]  129  137  141 #>  [6326,]  129  137  141 #>  [6327,]  129  137  141 #>  [6328,]  129  137  141 #>  [6329,]  129  137  141 #>  [6330,]  129  137  141 #>  [6331,]  129  137  141 #>  [6332,]  129  137  141 #>  [6333,]  129  137  141 #>  [6334,]  129  137  141 #>  [6335,]  129  137  141 #>  [6336,]  129  137  141 #>  [6337,]  129  137  141 #>  [6338,]  129  137  141 #>  [6339,]  129  137  141 #>  [6340,]  129  137  141 #>  [6341,]  129  137  141 #>  [6342,]  129  137  141 #>  [6343,]  128  136  141 #>  [6344,]  129  137  141 #>  [6345,]  129  137  141 #>  [6346,]  129  137  141 #>  [6347,]  129  137  141 #>  [6348,]  129  137  141 #>  [6349,]  129  137  141 #>  [6350,]  129  137  141 #>  [6351,]  128  136  141 #>  [6352,]  129  137  141 #>  [6353,]  129  137  141 #>  [6354,]  129  137  141 #>  [6355,]  129  137  141 #>  [6356,]  129  137  141 #>  [6357,]  129  137  141 #>  [6358,]  129  137  141 #>  [6359,]  129  137  141 #>  [6360,]  128  136  141 #>  [6361,]  129  137  141 #>  [6362,]  129  137  141 #>  [6363,]  129  137  141 #>  [6364,]  129  137  141 #>  [6365,]  129  137  141 #>  [6366,]  129  137  141 #>  [6367,]  128  136  141 #>  [6368,]  129  137  141 #>  [6369,]  129  137  141 #>  [6370,]  129  137  141 #>  [6371,]  129  137  141 #>  [6372,]  129  137  141 #>  [6373,]  129  137  141 #>  [6374,]  129  137  141 #>  [6375,]  129  137  141 #>  [6376,]  129  137  141 #>  [6377,]  129  137  141 #>  [6378,]  129  137  141 #>  [6379,]  129  137  141 #>  [6380,]  129  137  141 #>  [6381,]  129  137  141 #>  [6382,]  129  137  141 #>  [6383,]  129  137  141 #>  [6384,]  129  137  141 #>  [6385,]  128  136  141 #>  [6386,]  129  137  141 #>  [6387,]  129  137  141 #>  [6388,]  129  137  141 #>  [6389,]  129  137  141 #>  [6390,]  129  137  141 #>  [6391,]  128  136  141 #>  [6392,]  129  137  141 #>  [6393,]  129  137  141 #>  [6394,]  129  137  141 #>  [6395,]  128  136  141 #>  [6396,]  129  137  141 #>  [6397,]  129  137  141 #>  [6398,]  129  137  141 #>  [6399,]  129  137  141 #>  [6400,]  129  137  141 #>  [6401,]  131  138  142 #>  [6402,]  131  138  142 #>  [6403,]  130  138  142 #>  [6404,]  130  138  142 #>  [6405,]  130  138  142 #>  [6406,]  131  138  142 #>  [6407,]  131  138  142 #>  [6408,]  130  138  142 #>  [6409,]  130  138  142 #>  [6410,]  130  138  142 #>  [6411,]  131  138  142 #>  [6412,]  130  138  142 #>  [6413,]  131  138  142 #>  [6414,]  131  138  142 #>  [6415,]  131  138  142 #>  [6416,]  131  138  142 #>  [6417,]  131  138  142 #>  [6418,]  130  138  142 #>  [6419,]  131  138  143 #>  [6420,]  130  138  143 #>  [6421,]  131  138  142 #>  [6422,]  131  138  143 #>  [6423,]  130  138  142 #>  [6424,]  130  138  142 #>  [6425,]  130  138  142 #>  [6426,]  131  138  142 #>  [6427,]  131  138  143 #>  [6428,]  130  138  142 #>  [6429,]  131  138  143 #>  [6430,]  130  138  142 #>  [6431,]  130  138  142 #>  [6432,]  130  138  142 #>  [6433,]  131  138  142 #>  [6434,]  130  138  142 #>  [6435,]  131  138  142 #>  [6436,]  130  138  143 #>  [6437,]  131  138  142 #>  [6438,]  130  138  142 #>  [6439,]  130  138  142 #>  [6440,]  131  138  142 #>  [6441,]  131  138  142 #>  [6442,]  130  138  142 #>  [6443,]  130  138  142 #>  [6444,]  131  138  142 #>  [6445,]  130  138  142 #>  [6446,]  131  138  142 #>  [6447,]  131  138  142 #>  [6448,]  130  138  142 #>  [6449,]  130  138  142 #>  [6450,]  131  138  142 #>  [6451,]  130  138  142 #>  [6452,]  131  138  142 #>  [6453,]  130  138  142 #>  [6454,]  130  138  142 #>  [6455,]  131  138  142 #>  [6456,]  130  138  142 #>  [6457,]  130  138  142 #>  [6458,]  131  138  143 #>  [6459,]  131  138  142 #>  [6460,]  130  138  142 #>  [6461,]  131  138  142 #>  [6462,]  130  138  142 #>  [6463,]  131  138  142 #>  [6464,]  130  138  143 #>  [6465,]  130  138  142 #>  [6466,]  130  138  143 #>  [6467,]  130  138  142 #>  [6468,]  131  138  142 #>  [6469,]  131  138  142 #>  [6470,]  131  138  142 #>  [6471,]  131  138  142 #>  [6472,]  130  138  142 #>  [6473,]  131  138  142 #>  [6474,]  131  138  142 #>  [6475,]  131  138  142 #>  [6476,]  131  138  142 #>  [6477,]  131  138  143 #>  [6478,]  130  138  142 #>  [6479,]  131  138  142 #>  [6480,]  130  138  142 #>  [6481,]  131  138  143 #>  [6482,]  131  138  142 #>  [6483,]  131  138  142 #>  [6484,]  131  138  142 #>  [6485,]  130  138  142 #>  [6486,]  131  138  142 #>  [6487,]  131  138  143 #>  [6488,]  130  138  142 #>  [6489,]  130  138  142 #>  [6490,]  131  138  142 #>  [6491,]  130  138  142 #>  [6492,]  131  138  142 #>  [6493,]  131  138  142 #>  [6494,]  131  138  142 #>  [6495,]  130  138  142 #>  [6496,]  131  138  142 #>  [6497,]  131  138  143 #>  [6498,]  131  138  142 #>  [6499,]  131  138  142 #>  [6500,]  131  138  143 #>  [6501,]  133  140  145 #>  [6502,]  133  140  145 #>  [6503,]  132  139  144 #>  [6504,]  132  139  144 #>  [6505,]  132  139  144 #>  [6506,]  133  140  145 #>  [6507,]  132  139  144 #>  [6508,]  132  139  144 #>  [6509,]  132  139  144 #>  [6510,]  132  139  144 #>  [6511,]  132  139  144 #>  [6512,]  132  139  144 #>  [6513,]  133  140  145 #>  [6514,]  133  140  145 #>  [6515,]  133  140  145 #>  [6516,]  133  140  145 #>  [6517,]  133  140  145 #>  [6518,]  132  139  144 #>  [6519,]  132  139  144 #>  [6520,]  132  139  144 #>  [6521,]  133  140  145 #>  [6522,]  132  139  144 #>  [6523,]  132  139  144 #>  [6524,]  132  139  144 #>  [6525,]  132  139  144 #>  [6526,]  132  139  144 #>  [6527,]  132  139  144 #>  [6528,]  132  139  144 #>  [6529,]  133  140  145 #>  [6530,]  132  139  144 #>  [6531,]  132  139  144 #>  [6532,]  132  139  144 #>  [6533,]  133  140  145 #>  [6534,]  132  139  144 #>  [6535,]  133  140  145 #>  [6536,]  132  139  144 #>  [6537,]  132  139  144 #>  [6538,]  132  139  144 #>  [6539,]  132  139  144 #>  [6540,]  132  139  144 #>  [6541,]  133  140  145 #>  [6542,]  132  139  144 #>  [6543,]  132  139  144 #>  [6544,]  133  140  145 #>  [6545,]  132  139  144 #>  [6546,]  132  139  144 #>  [6547,]  132  139  144 #>  [6548,]  132  139  144 #>  [6549,]  132  139  144 #>  [6550,]  133  140  145 #>  [6551,]  132  139  144 #>  [6552,]  132  139  144 #>  [6553,]  132  139  144 #>  [6554,]  132  139  144 #>  [6555,]  132  139  144 #>  [6556,]  132  139  144 #>  [6557,]  132  139  144 #>  [6558,]  132  139  144 #>  [6559,]  133  140  145 #>  [6560,]  132  139  144 #>  [6561,]  133  140  145 #>  [6562,]  132  139  144 #>  [6563,]  132  139  144 #>  [6564,]  132  139  144 #>  [6565,]  132  139  144 #>  [6566,]  132  139  144 #>  [6567,]  132  139  144 #>  [6568,]  133  140  145 #>  [6569,]  132  139  144 #>  [6570,]  133  140  145 #>  [6571,]  132  139  144 #>  [6572,]  132  139  144 #>  [6573,]  133  140  145 #>  [6574,]  132  139  144 #>  [6575,]  132  139  144 #>  [6576,]  133  140  145 #>  [6577,]  133  140  145 #>  [6578,]  132  139  144 #>  [6579,]  133  140  145 #>  [6580,]  132  139  144 #>  [6581,]  133  140  145 #>  [6582,]  132  139  144 #>  [6583,]  133  140  145 #>  [6584,]  132  139  144 #>  [6585,]  132  139  144 #>  [6586,]  133  140  145 #>  [6587,]  132  139  144 #>  [6588,]  132  139  144 #>  [6589,]  132  139  144 #>  [6590,]  132  139  144 #>  [6591,]  132  139  144 #>  [6592,]  132  139  144 #>  [6593,]  133  140  145 #>  [6594,]  132  139  144 #>  [6595,]  132  139  144 #>  [6596,]  133  140  145 #>  [6597,]  132  139  144 #>  [6598,]  132  139  144 #>  [6599,]  133  140  145 #>  [6600,]  132  139  144 #>  [6601,]  134  141  146 #>  [6602,]  135  142  147 #>  [6603,]  134  141  146 #>  [6604,]  134  141  146 #>  [6605,]  134  141  146 #>  [6606,]  134  141  146 #>  [6607,]  134  141  146 #>  [6608,]  134  141  146 #>  [6609,]  135  142  147 #>  [6610,]  135  142  147 #>  [6611,]  134  141  146 #>  [6612,]  135  142  147 #>  [6613,]  135  142  147 #>  [6614,]  134  141  146 #>  [6615,]  134  141  146 #>  [6616,]  134  141  146 #>  [6617,]  135  142  147 #>  [6618,]  134  141  146 #>  [6619,]  134  141  146 #>  [6620,]  134  141  146 #>  [6621,]  135  142  147 #>  [6622,]  134  141  146 #>  [6623,]  134  141  146 #>  [6624,]  135  142  147 #>  [6625,]  134  141  146 #>  [6626,]  134  141  146 #>  [6627,]  134  141  146 #>  [6628,]  134  141  146 #>  [6629,]  135  142  147 #>  [6630,]  134  141  146 #>  [6631,]  134  141  146 #>  [6632,]  135  142  147 #>  [6633,]  135  142  147 #>  [6634,]  134  141  146 #>  [6635,]  134  141  146 #>  [6636,]  134  141  146 #>  [6637,]  134  141  146 #>  [6638,]  134  141  146 #>  [6639,]  134  141  146 #>  [6640,]  135  142  147 #>  [6641,]  134  141  146 #>  [6642,]  134  141  146 #>  [6643,]  134  141  146 #>  [6644,]  134  141  146 #>  [6645,]  134  141  146 #>  [6646,]  134  141  146 #>  [6647,]  134  141  146 #>  [6648,]  134  141  146 #>  [6649,]  134  141  146 #>  [6650,]  134  141  146 #>  [6651,]  134  141  146 #>  [6652,]  134  141  146 #>  [6653,]  135  142  147 #>  [6654,]  134  141  146 #>  [6655,]  134  141  146 #>  [6656,]  134  141  146 #>  [6657,]  134  141  146 #>  [6658,]  134  141  146 #>  [6659,]  134  141  146 #>  [6660,]  135  142  147 #>  [6661,]  134  141  146 #>  [6662,]  134  141  146 #>  [6663,]  135  142  147 #>  [6664,]  134  141  146 #>  [6665,]  134  141  146 #>  [6666,]  134  141  146 #>  [6667,]  134  141  146 #>  [6668,]  134  141  146 #>  [6669,]  134  141  146 #>  [6670,]  135  142  147 #>  [6671,]  134  141  146 #>  [6672,]  134  141  146 #>  [6673,]  134  141  146 #>  [6674,]  134  141  146 #>  [6675,]  135  142  147 #>  [6676,]  134  141  146 #>  [6677,]  134  141  146 #>  [6678,]  134  141  146 #>  [6679,]  134  141  146 #>  [6680,]  135  142  147 #>  [6681,]  135  142  147 #>  [6682,]  134  141  146 #>  [6683,]  135  142  147 #>  [6684,]  134  141  146 #>  [6685,]  134  141  146 #>  [6686,]  135  142  147 #>  [6687,]  134  141  146 #>  [6688,]  134  141  146 #>  [6689,]  134  141  146 #>  [6690,]  134  141  146 #>  [6691,]  134  141  146 #>  [6692,]  134  141  146 #>  [6693,]  134  141  146 #>  [6694,]  134  141  146 #>  [6695,]  134  141  146 #>  [6696,]  134  141  146 #>  [6697,]  134  141  146 #>  [6698,]  134  141  146 #>  [6699,]  134  141  146 #>  [6700,]  134  141  146 #>  [6701,]  136  143  149 #>  [6702,]  137  144  149 #>  [6703,]  136  143  148 #>  [6704,]  136  143  148 #>  [6705,]  137  144  148 #>  [6706,]  136  143  148 #>  [6707,]  136  143  148 #>  [6708,]  136  143  149 #>  [6709,]  137  144  148 #>  [6710,]  137  144  148 #>  [6711,]  136  143  148 #>  [6712,]  137  144  148 #>  [6713,]  137  144  149 #>  [6714,]  136  143  148 #>  [6715,]  136  143  149 #>  [6716,]  136  143  149 #>  [6717,]  137  144  148 #>  [6718,]  137  144  148 #>  [6719,]  136  143  149 #>  [6720,]  137  144  149 #>  [6721,]  137  144  148 #>  [6722,]  137  144  149 #>  [6723,]  137  144  149 #>  [6724,]  137  144  148 #>  [6725,]  136  143  148 #>  [6726,]  136  143  149 #>  [6727,]  137  144  149 #>  [6728,]  136  143  148 #>  [6729,]  137  144  149 #>  [6730,]  136  143  149 #>  [6731,]  137  144  148 #>  [6732,]  137  144  148 #>  [6733,]  137  144  149 #>  [6734,]  136  143  148 #>  [6735,]  136  143  148 #>  [6736,]  137  144  149 #>  [6737,]  136  143  149 #>  [6738,]  136  143  149 #>  [6739,]  136  143  148 #>  [6740,]  137  144  148 #>  [6741,]  136  143  149 #>  [6742,]  136  143  148 #>  [6743,]  136  143  149 #>  [6744,]  137  144  149 #>  [6745,]  136  143  149 #>  [6746,]  136  143  149 #>  [6747,]  136  143  148 #>  [6748,]  136  143  148 #>  [6749,]  136  143  148 #>  [6750,]  137  144  149 #>  [6751,]  136  143  149 #>  [6752,]  136  143  148 #>  [6753,]  137  144  149 #>  [6754,]  136  143  148 #>  [6755,]  136  143  149 #>  [6756,]  136  143  149 #>  [6757,]  136  143  148 #>  [6758,]  136  143  149 #>  [6759,]  136  143  149 #>  [6760,]  137  144  149 #>  [6761,]  137  144  149 #>  [6762,]  136  143  148 #>  [6763,]  137  144  149 #>  [6764,]  136  143  149 #>  [6765,]  136  143  148 #>  [6766,]  136  143  149 #>  [6767,]  136  143  148 #>  [6768,]  136  143  149 #>  [6769,]  136  143  149 #>  [6770,]  137  144  148 #>  [6771,]  136  143  149 #>  [6772,]  136  143  148 #>  [6773,]  136  143  148 #>  [6774,]  136  143  148 #>  [6775,]  137  144  149 #>  [6776,]  136  143  148 #>  [6777,]  136  143  149 #>  [6778,]  136  143  149 #>  [6779,]  136  143  148 #>  [6780,]  137  144  149 #>  [6781,]  137  144  149 #>  [6782,]  136  143  148 #>  [6783,]  137  144  149 #>  [6784,]  137  144  149 #>  [6785,]  136  143  149 #>  [6786,]  137  144  148 #>  [6787,]  136  143  149 #>  [6788,]  137  144  148 #>  [6789,]  136  143  148 #>  [6790,]  136  143  149 #>  [6791,]  136  143  148 #>  [6792,]  137  144  148 #>  [6793,]  137  144  149 #>  [6794,]  136  143  148 #>  [6795,]  136  143  149 #>  [6796,]  136  143  149 #>  [6797,]  136  143  149 #>  [6798,]  136  143  148 #>  [6799,]  136  143  148 #>  [6800,]  136  143  149 #>  [6801,]  139  146  151 #>  [6802,]  139  146  151 #>  [6803,]  138  145  150 #>  [6804,]  139  146  151 #>  [6805,]  138  145  150 #>  [6806,]  138  145  150 #>  [6807,]  139  146  151 #>  [6808,]  139  146  151 #>  [6809,]  139  146  151 #>  [6810,]  139  146  151 #>  [6811,]  138  145  150 #>  [6812,]  138  145  150 #>  [6813,]  139  146  151 #>  [6814,]  138  145  150 #>  [6815,]  139  146  151 #>  [6816,]  139  146  151 #>  [6817,]  139  146  151 #>  [6818,]  139  146  151 #>  [6819,]  138  145  150 #>  [6820,]  138  145  150 #>  [6821,]  139  146  151 #>  [6822,]  138  145  150 #>  [6823,]  139  146  151 #>  [6824,]  138  145  150 #>  [6825,]  139  146  151 #>  [6826,]  138  145  150 #>  [6827,]  139  146  151 #>  [6828,]  139  146  151 #>  [6829,]  138  145  150 #>  [6830,]  138  145  150 #>  [6831,]  139  146  151 #>  [6832,]  138  145  150 #>  [6833,]  139  146  151 #>  [6834,]  138  145  150 #>  [6835,]  138  145  150 #>  [6836,]  138  145  150 #>  [6837,]  139  146  151 #>  [6838,]  139  146  151 #>  [6839,]  139  146  151 #>  [6840,]  138  145  150 #>  [6841,]  138  145  150 #>  [6842,]  138  145  150 #>  [6843,]  139  146  151 #>  [6844,]  139  146  151 #>  [6845,]  139  146  151 #>  [6846,]  139  146  151 #>  [6847,]  139  146  151 #>  [6848,]  138  145  150 #>  [6849,]  139  146  151 #>  [6850,]  139  146  151 #>  [6851,]  138  145  150 #>  [6852,]  138  145  150 #>  [6853,]  139  146  151 #>  [6854,]  138  145  150 #>  [6855,]  138  145  150 #>  [6856,]  139  146  151 #>  [6857,]  138  145  150 #>  [6858,]  138  145  150 #>  [6859,]  139  146  151 #>  [6860,]  138  145  150 #>  [6861,]  139  146  151 #>  [6862,]  138  145  150 #>  [6863,]  138  145  150 #>  [6864,]  139  146  151 #>  [6865,]  139  146  151 #>  [6866,]  138  145  150 #>  [6867,]  138  145  150 #>  [6868,]  138  145  150 #>  [6869,]  138  145  150 #>  [6870,]  139  146  151 #>  [6871,]  139  146  151 #>  [6872,]  139  146  151 #>  [6873,]  139  146  151 #>  [6874,]  139  146  151 #>  [6875,]  139  146  151 #>  [6876,]  139  146  151 #>  [6877,]  139  146  151 #>  [6878,]  138  145  150 #>  [6879,]  139  146  151 #>  [6880,]  138  145  150 #>  [6881,]  138  145  150 #>  [6882,]  139  146  151 #>  [6883,]  138  145  150 #>  [6884,]  139  146  151 #>  [6885,]  139  146  151 #>  [6886,]  139  146  151 #>  [6887,]  139  146  151 #>  [6888,]  139  146  151 #>  [6889,]  138  145  150 #>  [6890,]  139  146  151 #>  [6891,]  138  145  150 #>  [6892,]  139  146  151 #>  [6893,]  138  145  150 #>  [6894,]  139  146  151 #>  [6895,]  139  146  151 #>  [6896,]  139  146  151 #>  [6897,]  139  146  151 #>  [6898,]  138  145  150 #>  [6899,]  138  145  150 #>  [6900,]  139  146  151 #>  [6901,]  140  147  152 #>  [6902,]  140  147  152 #>  [6903,]  140  147  152 #>  [6904,]  140  147  152 #>  [6905,]  141  148  153 #>  [6906,]  140  147  152 #>  [6907,]  140  147  152 #>  [6908,]  140  147  152 #>  [6909,]  140  147  152 #>  [6910,]  140  147  152 #>  [6911,]  140  147  152 #>  [6912,]  140  147  152 #>  [6913,]  140  147  152 #>  [6914,]  140  147  152 #>  [6915,]  141  148  153 #>  [6916,]  140  147  152 #>  [6917,]  140  147  152 #>  [6918,]  141  148  153 #>  [6919,]  140  147  152 #>  [6920,]  140  147  152 #>  [6921,]  140  147  152 #>  [6922,]  140  147  152 #>  [6923,]  140  147  152 #>  [6924,]  140  147  152 #>  [6925,]  140  147  152 #>  [6926,]  140  147  152 #>  [6927,]  141  148  153 #>  [6928,]  140  147  152 #>  [6929,]  140  147  152 #>  [6930,]  140  147  152 #>  [6931,]  140  147  152 #>  [6932,]  141  148  153 #>  [6933,]  140  147  152 #>  [6934,]  140  147  152 #>  [6935,]  140  147  152 #>  [6936,]  140  147  152 #>  [6937,]  140  147  152 #>  [6938,]  140  147  152 #>  [6939,]  140  147  152 #>  [6940,]  140  147  152 #>  [6941,]  140  147  152 #>  [6942,]  140  147  152 #>  [6943,]  140  147  152 #>  [6944,]  140  147  152 #>  [6945,]  140  147  152 #>  [6946,]  140  147  152 #>  [6947,]  140  147  152 #>  [6948,]  140  147  152 #>  [6949,]  140  147  152 #>  [6950,]  140  147  152 #>  [6951,]  140  147  152 #>  [6952,]  140  147  152 #>  [6953,]  140  147  152 #>  [6954,]  140  147  152 #>  [6955,]  140  147  152 #>  [6956,]  140  147  152 #>  [6957,]  140  147  152 #>  [6958,]  140  147  152 #>  [6959,]  140  147  152 #>  [6960,]  140  147  152 #>  [6961,]  140  147  152 #>  [6962,]  140  147  152 #>  [6963,]  140  147  152 #>  [6964,]  140  147  152 #>  [6965,]  140  147  152 #>  [6966,]  140  147  152 #>  [6967,]  140  147  152 #>  [6968,]  140  147  152 #>  [6969,]  140  147  152 #>  [6970,]  140  147  152 #>  [6971,]  141  148  153 #>  [6972,]  140  147  152 #>  [6973,]  140  147  152 #>  [6974,]  140  147  152 #>  [6975,]  141  148  153 #>  [6976,]  140  147  152 #>  [6977,]  140  147  152 #>  [6978,]  140  147  152 #>  [6979,]  140  147  152 #>  [6980,]  140  147  152 #>  [6981,]  140  147  152 #>  [6982,]  140  147  152 #>  [6983,]  140  147  152 #>  [6984,]  140  147  152 #>  [6985,]  140  147  152 #>  [6986,]  140  147  152 #>  [6987,]  140  147  152 #>  [6988,]  140  147  152 #>  [6989,]  140  147  152 #>  [6990,]  140  147  152 #>  [6991,]  141  148  153 #>  [6992,]  140  147  152 #>  [6993,]  140  147  152 #>  [6994,]  140  147  152 #>  [6995,]  141  148  153 #>  [6996,]  140  147  152 #>  [6997,]  140  147  152 #>  [6998,]  140  147  152 #>  [6999,]  140  147  152 #>  [7000,]  141  148  153 #>  [7001,]  142  149  154 #>  [7002,]  143  150  155 #>  [7003,]  142  149  154 #>  [7004,]  142  149  154 #>  [7005,]  142  149  154 #>  [7006,]  142  149  154 #>  [7007,]  142  149  154 #>  [7008,]  142  149  154 #>  [7009,]  143  150  155 #>  [7010,]  143  150  155 #>  [7011,]  142  149  154 #>  [7012,]  143  150  155 #>  [7013,]  142  149  154 #>  [7014,]  142  149  154 #>  [7015,]  142  149  154 #>  [7016,]  142  149  154 #>  [7017,]  142  149  154 #>  [7018,]  142  149  154 #>  [7019,]  142  149  154 #>  [7020,]  142  149  154 #>  [7021,]  143  150  155 #>  [7022,]  142  149  154 #>  [7023,]  142  149  154 #>  [7024,]  142  149  154 #>  [7025,]  142  149  154 #>  [7026,]  142  149  154 #>  [7027,]  142  149  154 #>  [7028,]  142  149  154 #>  [7029,]  143  150  155 #>  [7030,]  142  149  154 #>  [7031,]  142  149  154 #>  [7032,]  142  149  154 #>  [7033,]  143  150  155 #>  [7034,]  142  149  154 #>  [7035,]  142  149  154 #>  [7036,]  142  149  154 #>  [7037,]  142  149  154 #>  [7038,]  142  149  154 #>  [7039,]  142  149  154 #>  [7040,]  142  149  154 #>  [7041,]  142  149  154 #>  [7042,]  142  149  154 #>  [7043,]  142  149  154 #>  [7044,]  142  149  154 #>  [7045,]  142  149  154 #>  [7046,]  142  149  154 #>  [7047,]  142  149  154 #>  [7048,]  142  149  154 #>  [7049,]  142  149  154 #>  [7050,]  142  149  154 #>  [7051,]  142  149  154 #>  [7052,]  142  149  154 #>  [7053,]  142  149  154 #>  [7054,]  142  149  154 #>  [7055,]  142  149  154 #>  [7056,]  142  149  154 #>  [7057,]  142  149  154 #>  [7058,]  142  149  154 #>  [7059,]  142  149  154 #>  [7060,]  142  149  154 #>  [7061,]  142  149  154 #>  [7062,]  142  149  154 #>  [7063,]  142  149  154 #>  [7064,]  142  149  154 #>  [7065,]  142  149  154 #>  [7066,]  142  149  154 #>  [7067,]  142  149  154 #>  [7068,]  142  149  154 #>  [7069,]  142  149  154 #>  [7070,]  143  150  155 #>  [7071,]  142  149  154 #>  [7072,]  142  149  154 #>  [7073,]  142  149  154 #>  [7074,]  142  149  154 #>  [7075,]  142  149  154 #>  [7076,]  142  149  154 #>  [7077,]  142  149  154 #>  [7078,]  142  149  154 #>  [7079,]  142  149  154 #>  [7080,]  142  149  154 #>  [7081,]  142  149  154 #>  [7082,]  142  149  154 #>  [7083,]  142  149  154 #>  [7084,]  142  149  154 #>  [7085,]  142  149  154 #>  [7086,]  143  150  155 #>  [7087,]  142  149  154 #>  [7088,]  142  149  154 #>  [7089,]  142  149  154 #>  [7090,]  142  149  154 #>  [7091,]  142  149  154 #>  [7092,]  142  149  154 #>  [7093,]  142  149  154 #>  [7094,]  142  149  154 #>  [7095,]  142  149  154 #>  [7096,]  142  149  154 #>  [7097,]  142  149  154 #>  [7098,]  142  149  154 #>  [7099,]  142  149  154 #>  [7100,]  142  149  154 #>  [7101,]  145  152  157 #>  [7102,]  145  152  157 #>  [7103,]  145  152  157 #>  [7104,]  144  151  156 #>  [7105,]  145  152  157 #>  [7106,]  145  152  157 #>  [7107,]  145  152  157 #>  [7108,]  144  151  156 #>  [7109,]  144  151  156 #>  [7110,]  145  152  157 #>  [7111,]  145  153  158 #>  [7112,]  145  153  158 #>  [7113,]  145  152  157 #>  [7114,]  145  153  158 #>  [7115,]  145  153  158 #>  [7116,]  145  152  157 #>  [7117,]  144  151  156 #>  [7118,]  145  152  157 #>  [7119,]  145  153  158 #>  [7120,]  145  152  157 #>  [7121,]  145  153  158 #>  [7122,]  144  151  156 #>  [7123,]  145  152  157 #>  [7124,]  145  152  157 #>  [7125,]  145  152  157 #>  [7126,]  145  152  157 #>  [7127,]  144  151  156 #>  [7128,]  145  152  157 #>  [7129,]  145  152  157 #>  [7130,]  145  152  157 #>  [7131,]  145  152  157 #>  [7132,]  145  152  157 #>  [7133,]  145  152  157 #>  [7134,]  145  152  157 #>  [7135,]  144  151  156 #>  [7136,]  145  152  157 #>  [7137,]  145  152  157 #>  [7138,]  145  153  158 #>  [7139,]  145  152  157 #>  [7140,]  145  152  157 #>  [7141,]  145  153  158 #>  [7142,]  145  153  158 #>  [7143,]  145  152  157 #>  [7144,]  144  151  156 #>  [7145,]  145  152  157 #>  [7146,]  145  152  157 #>  [7147,]  145  152  157 #>  [7148,]  145  153  158 #>  [7149,]  145  152  157 #>  [7150,]  145  152  157 #>  [7151,]  145  152  157 #>  [7152,]  144  151  156 #>  [7153,]  145  152  157 #>  [7154,]  145  152  157 #>  [7155,]  145  152  157 #>  [7156,]  145  152  157 #>  [7157,]  145  152  157 #>  [7158,]  144  151  156 #>  [7159,]  145  152  157 #>  [7160,]  145  152  157 #>  [7161,]  145  153  158 #>  [7162,]  145  152  157 #>  [7163,]  145  152  157 #>  [7164,]  145  152  157 #>  [7165,]  145  152  157 #>  [7166,]  144  151  156 #>  [7167,]  145  152  157 #>  [7168,]  145  152  157 #>  [7169,]  145  153  158 #>  [7170,]  145  152  157 #>  [7171,]  145  152  157 #>  [7172,]  145  152  157 #>  [7173,]  145  152  157 #>  [7174,]  145  153  158 #>  [7175,]  145  153  158 #>  [7176,]  145  152  157 #>  [7177,]  145  152  157 #>  [7178,]  145  152  157 #>  [7179,]  145  152  157 #>  [7180,]  145  152  157 #>  [7181,]  144  151  156 #>  [7182,]  144  151  156 #>  [7183,]  145  152  157 #>  [7184,]  145  152  157 #>  [7185,]  145  152  157 #>  [7186,]  145  152  157 #>  [7187,]  144  151  156 #>  [7188,]  145  152  157 #>  [7189,]  145  152  157 #>  [7190,]  144  151  156 #>  [7191,]  145  152  157 #>  [7192,]  144  151  156 #>  [7193,]  145  153  158 #>  [7194,]  145  152  157 #>  [7195,]  144  151  156 #>  [7196,]  145  153  158 #>  [7197,]  145  153  158 #>  [7198,]  145  152  157 #>  [7199,]  144  151  156 #>  [7200,]  145  152  157 #>  [7201,]  147  154  159 #>  [7202,]  147  154  159 #>  [7203,]  147  154  159 #>  [7204,]  146  155  160 #>  [7205,]  147  154  159 #>  [7206,]  147  154  159 #>  [7207,]  147  154  159 #>  [7208,]  146  155  160 #>  [7209,]  146  156  160 #>  [7210,]  146  155  160 #>  [7211,]  147  154  159 #>  [7212,]  147  154  159 #>  [7213,]  147  154  159 #>  [7214,]  147  154  159 #>  [7215,]  147  154  159 #>  [7216,]  147  154  159 #>  [7217,]  147  154  159 #>  [7218,]  147  154  159 #>  [7219,]  147  154  159 #>  [7220,]  146  156  160 #>  [7221,]  147  154  159 #>  [7222,]  147  154  159 #>  [7223,]  147  154  159 #>  [7224,]  147  154  159 #>  [7225,]  147  154  159 #>  [7226,]  147  154  159 #>  [7227,]  147  154  159 #>  [7228,]  147  154  159 #>  [7229,]  147  154  159 #>  [7230,]  146  155  160 #>  [7231,]  147  154  159 #>  [7232,]  147  154  159 #>  [7233,]  147  154  159 #>  [7234,]  147  154  159 #>  [7235,]  147  154  159 #>  [7236,]  147  154  159 #>  [7237,]  147  154  159 #>  [7238,]  147  154  159 #>  [7239,]  147  154  159 #>  [7240,]  147  154  159 #>  [7241,]  147  154  159 #>  [7242,]  147  154  159 #>  [7243,]  146  155  160 #>  [7244,]  147  154  159 #>  [7245,]  147  154  159 #>  [7246,]  147  154  159 #>  [7247,]  147  154  159 #>  [7248,]  147  154  159 #>  [7249,]  147  154  159 #>  [7250,]  147  154  159 #>  [7251,]  146  156  160 #>  [7252,]  147  154  159 #>  [7253,]  147  154  159 #>  [7254,]  147  154  159 #>  [7255,]  147  154  159 #>  [7256,]  146  156  160 #>  [7257,]  147  154  159 #>  [7258,]  147  154  159 #>  [7259,]  147  154  159 #>  [7260,]  146  155  160 #>  [7261,]  147  154  159 #>  [7262,]  147  154  159 #>  [7263,]  147  154  159 #>  [7264,]  146  155  160 #>  [7265,]  147  154  159 #>  [7266,]  147  154  159 #>  [7267,]  146  155  160 #>  [7268,]  147  154  159 #>  [7269,]  147  154  159 #>  [7270,]  147  154  159 #>  [7271,]  147  154  159 #>  [7272,]  147  154  159 #>  [7273,]  147  154  159 #>  [7274,]  147  154  159 #>  [7275,]  147  154  159 #>  [7276,]  147  154  159 #>  [7277,]  147  154  159 #>  [7278,]  146  155  160 #>  [7279,]  147  154  159 #>  [7280,]  147  154  159 #>  [7281,]  147  154  159 #>  [7282,]  147  154  159 #>  [7283,]  147  154  159 #>  [7284,]  147  154  159 #>  [7285,]  146  156  160 #>  [7286,]  147  154  159 #>  [7287,]  147  154  159 #>  [7288,]  147  154  159 #>  [7289,]  146  156  160 #>  [7290,]  147  154  159 #>  [7291,]  146  156  160 #>  [7292,]  147  154  159 #>  [7293,]  147  154  159 #>  [7294,]  147  154  159 #>  [7295,]  146  155  160 #>  [7296,]  147  154  159 #>  [7297,]  147  154  159 #>  [7298,]  147  154  159 #>  [7299,]  147  154  159 #>  [7300,]  147  154  159 #>  [7301,]  149  158  162 #>  [7302,]  149  158  162 #>  [7303,]  149  158  162 #>  [7304,]  148  157  161 #>  [7305,]  149  158  162 #>  [7306,]  149  158  162 #>  [7307,]  149  158  162 #>  [7308,]  148  157  161 #>  [7309,]  148  157  161 #>  [7310,]  148  157  161 #>  [7311,]  149  158  162 #>  [7312,]  149  158  162 #>  [7313,]  149  158  162 #>  [7314,]  149  158  162 #>  [7315,]  149  158  162 #>  [7316,]  149  158  162 #>  [7317,]  149  158  162 #>  [7318,]  149  158  162 #>  [7319,]  149  158  162 #>  [7320,]  149  158  162 #>  [7321,]  149  158  162 #>  [7322,]  149  158  162 #>  [7323,]  149  158  162 #>  [7324,]  149  158  162 #>  [7325,]  149  158  162 #>  [7326,]  149  158  162 #>  [7327,]  149  158  162 #>  [7328,]  149  158  162 #>  [7329,]  149  158  162 #>  [7330,]  149  158  162 #>  [7331,]  149  158  162 #>  [7332,]  149  158  162 #>  [7333,]  149  158  162 #>  [7334,]  149  158  162 #>  [7335,]  149  158  162 #>  [7336,]  149  158  162 #>  [7337,]  149  158  162 #>  [7338,]  149  158  162 #>  [7339,]  149  158  162 #>  [7340,]  149  158  162 #>  [7341,]  149  158  162 #>  [7342,]  149  158  162 #>  [7343,]  148  157  161 #>  [7344,]  149  158  162 #>  [7345,]  149  158  162 #>  [7346,]  149  158  162 #>  [7347,]  149  158  162 #>  [7348,]  149  158  162 #>  [7349,]  149  158  162 #>  [7350,]  149  158  162 #>  [7351,]  148  157  161 #>  [7352,]  149  158  162 #>  [7353,]  149  158  162 #>  [7354,]  149  158  162 #>  [7355,]  149  158  162 #>  [7356,]  149  158  162 #>  [7357,]  149  158  162 #>  [7358,]  149  158  162 #>  [7359,]  149  158  162 #>  [7360,]  148  157  161 #>  [7361,]  149  158  162 #>  [7362,]  149  158  162 #>  [7363,]  149  158  162 #>  [7364,]  149  158  162 #>  [7365,]  149  158  162 #>  [7366,]  149  158  162 #>  [7367,]  148  157  161 #>  [7368,]  149  158  162 #>  [7369,]  149  158  162 #>  [7370,]  149  158  162 #>  [7371,]  149  158  162 #>  [7372,]  149  158  162 #>  [7373,]  149  158  162 #>  [7374,]  149  158  162 #>  [7375,]  149  158  162 #>  [7376,]  149  158  162 #>  [7377,]  149  158  162 #>  [7378,]  149  158  162 #>  [7379,]  149  158  162 #>  [7380,]  149  158  162 #>  [7381,]  149  158  162 #>  [7382,]  149  158  162 #>  [7383,]  149  158  162 #>  [7384,]  149  158  162 #>  [7385,]  148  157  161 #>  [7386,]  149  158  162 #>  [7387,]  149  158  162 #>  [7388,]  149  158  162 #>  [7389,]  149  158  162 #>  [7390,]  149  158  162 #>  [7391,]  148  157  161 #>  [7392,]  149  158  162 #>  [7393,]  149  158  162 #>  [7394,]  149  158  162 #>  [7395,]  148  157  161 #>  [7396,]  149  158  162 #>  [7397,]  149  158  162 #>  [7398,]  149  158  162 #>  [7399,]  149  158  162 #>  [7400,]  149  158  162 #>  [7401,]  150  159  164 #>  [7402,]  151  160  163 #>  [7403,]  150  159  164 #>  [7404,]  150  159  164 #>  [7405,]  151  160  163 #>  [7406,]  150  159  164 #>  [7407,]  151  160  163 #>  [7408,]  150  159  164 #>  [7409,]  151  160  163 #>  [7410,]  151  160  163 #>  [7411,]  150  159  164 #>  [7412,]  151  160  163 #>  [7413,]  151  160  163 #>  [7414,]  150  159  164 #>  [7415,]  150  159  164 #>  [7416,]  150  159  164 #>  [7417,]  151  160  163 #>  [7418,]  151  160  163 #>  [7419,]  150  159  164 #>  [7420,]  151  160  163 #>  [7421,]  151  160  163 #>  [7422,]  151  160  163 #>  [7423,]  151  160  163 #>  [7424,]  151  160  163 #>  [7425,]  150  159  164 #>  [7426,]  150  159  164 #>  [7427,]  151  160  163 #>  [7428,]  150  159  164 #>  [7429,]  151  160  163 #>  [7430,]  151  160  163 #>  [7431,]  151  160  163 #>  [7432,]  151  160  163 #>  [7433,]  151  160  163 #>  [7434,]  150  159  164 #>  [7435,]  150  159  164 #>  [7436,]  151  160  163 #>  [7437,]  150  159  164 #>  [7438,]  150  159  164 #>  [7439,]  150  159  164 #>  [7440,]  151  160  163 #>  [7441,]  151  160  163 #>  [7442,]  150  159  164 #>  [7443,]  150  159  164 #>  [7444,]  151  160  163 #>  [7445,]  150  159  164 #>  [7446,]  150  159  164 #>  [7447,]  151  160  163 #>  [7448,]  151  160  163 #>  [7449,]  150  159  164 #>  [7450,]  151  160  163 #>  [7451,]  150  159  164 #>  [7452,]  150  159  164 #>  [7453,]  151  160  163 #>  [7454,]  151  160  163 #>  [7455,]  150  159  164 #>  [7456,]  150  159  164 #>  [7457,]  150  159  164 #>  [7458,]  151  160  163 #>  [7459,]  150  159  164 #>  [7460,]  151  160  163 #>  [7461,]  151  160  163 #>  [7462,]  150  159  164 #>  [7463,]  151  160  163 #>  [7464,]  150  159  164 #>  [7465,]  150  159  164 #>  [7466,]  150  159  164 #>  [7467,]  150  159  164 #>  [7468,]  150  159  164 #>  [7469,]  150  159  164 #>  [7470,]  151  160  163 #>  [7471,]  150  159  164 #>  [7472,]  150  159  164 #>  [7473,]  150  159  164 #>  [7474,]  150  159  164 #>  [7475,]  151  160  163 #>  [7476,]  150  159  164 #>  [7477,]  150  159  164 #>  [7478,]  151  160  163 #>  [7479,]  150  159  164 #>  [7480,]  151  160  163 #>  [7481,]  151  160  163 #>  [7482,]  150  159  164 #>  [7483,]  151  160  163 #>  [7484,]  151  160  163 #>  [7485,]  150  159  164 #>  [7486,]  151  160  163 #>  [7487,]  151  160  163 #>  [7488,]  151  160  163 #>  [7489,]  150  159  164 #>  [7490,]  150  159  164 #>  [7491,]  150  159  164 #>  [7492,]  151  160  163 #>  [7493,]  151  160  163 #>  [7494,]  150  159  164 #>  [7495,]  151  160  163 #>  [7496,]  150  159  164 #>  [7497,]  150  159  164 #>  [7498,]  150  159  164 #>  [7499,]  150  159  164 #>  [7500,]  150  159  164 #>  [7501,]  153  162  166 #>  [7502,]  152  161  166 #>  [7503,]  152  161  166 #>  [7504,]  152  161  165 #>  [7505,]  152  161  166 #>  [7506,]  152  161  166 #>  [7507,]  152  161  166 #>  [7508,]  152  161  165 #>  [7509,]  152  161  165 #>  [7510,]  152  161  166 #>  [7511,]  152  161  165 #>  [7512,]  152  161  166 #>  [7513,]  153  162  165 #>  [7514,]  153  162  166 #>  [7515,]  153  162  166 #>  [7516,]  153  162  166 #>  [7517,]  152  161  165 #>  [7518,]  152  161  166 #>  [7519,]  152  161  166 #>  [7520,]  152  161  166 #>  [7521,]  153  162  166 #>  [7522,]  152  161  165 #>  [7523,]  152  161  166 #>  [7524,]  152  161  166 #>  [7525,]  152  161  166 #>  [7526,]  152  161  166 #>  [7527,]  152  161  165 #>  [7528,]  152  161  166 #>  [7529,]  153  162  166 #>  [7530,]  152  161  166 #>  [7531,]  152  161  166 #>  [7532,]  152  161  166 #>  [7533,]  153  162  166 #>  [7534,]  152  161  166 #>  [7535,]  152  161  165 #>  [7536,]  152  161  166 #>  [7537,]  152  161  166 #>  [7538,]  152  161  166 #>  [7539,]  152  161  166 #>  [7540,]  152  161  166 #>  [7541,]  153  162  166 #>  [7542,]  152  161  166 #>  [7543,]  152  161  166 #>  [7544,]  153  162  165 #>  [7545,]  152  161  166 #>  [7546,]  152  161  166 #>  [7547,]  152  161  166 #>  [7548,]  152  161  166 #>  [7549,]  152  161  165 #>  [7550,]  153  162  166 #>  [7551,]  152  161  166 #>  [7552,]  152  161  165 #>  [7553,]  152  161  166 #>  [7554,]  152  161  166 #>  [7555,]  152  161  165 #>  [7556,]  152  161  166 #>  [7557,]  152  161  166 #>  [7558,]  152  161  165 #>  [7559,]  153  162  166 #>  [7560,]  152  161  166 #>  [7561,]  152  161  166 #>  [7562,]  152  161  166 #>  [7563,]  152  161  166 #>  [7564,]  152  161  166 #>  [7565,]  152  161  166 #>  [7566,]  152  161  165 #>  [7567,]  152  161  166 #>  [7568,]  153  162  166 #>  [7569,]  152  161  166 #>  [7570,]  153  162  166 #>  [7571,]  152  161  166 #>  [7572,]  152  161  166 #>  [7573,]  153  162  166 #>  [7574,]  152  161  166 #>  [7575,]  152  161  166 #>  [7576,]  152  161  166 #>  [7577,]  152  161  166 #>  [7578,]  152  161  166 #>  [7579,]  152  161  165 #>  [7580,]  152  161  165 #>  [7581,]  152  161  165 #>  [7582,]  152  161  165 #>  [7583,]  152  161  165 #>  [7584,]  152  161  166 #>  [7585,]  152  161  166 #>  [7586,]  152  161  166 #>  [7587,]  152  161  165 #>  [7588,]  152  161  165 #>  [7589,]  152  161  166 #>  [7590,]  152  161  165 #>  [7591,]  152  161  166 #>  [7592,]  152  161  165 #>  [7593,]  152  161  166 #>  [7594,]  152  161  166 #>  [7595,]  152  161  165 #>  [7596,]  153  162  166 #>  [7597,]  152  161  166 #>  [7598,]  152  161  166 #>  [7599,]  153  162  165 #>  [7600,]  152  161  166 #>  [7601,]  155  164  168 #>  [7602,]  155  165  168 #>  [7603,]  154  163  167 #>  [7604,]  155  164  168 #>  [7605,]  155  165  168 #>  [7606,]  155  165  168 #>  [7607,]  155  165  168 #>  [7608,]  155  164  168 #>  [7609,]  155  164  168 #>  [7610,]  155  165  168 #>  [7611,]  155  164  168 #>  [7612,]  154  163  167 #>  [7613,]  155  164  168 #>  [7614,]  154  163  167 #>  [7615,]  155  165  168 #>  [7616,]  155  165  168 #>  [7617,]  155  164  168 #>  [7618,]  155  165  168 #>  [7619,]  155  165  168 #>  [7620,]  155  165  168 #>  [7621,]  155  164  168 #>  [7622,]  155  164  168 #>  [7623,]  155  165  168 #>  [7624,]  155  165  168 #>  [7625,]  155  165  168 #>  [7626,]  154  163  167 #>  [7627,]  155  164  168 #>  [7628,]  155  165  168 #>  [7629,]  155  165  168 #>  [7630,]  155  164  168 #>  [7631,]  155  165  168 #>  [7632,]  154  163  167 #>  [7633,]  155  165  168 #>  [7634,]  155  165  168 #>  [7635,]  155  164  168 #>  [7636,]  155  165  168 #>  [7637,]  155  165  168 #>  [7638,]  155  165  168 #>  [7639,]  155  165  168 #>  [7640,]  155  165  168 #>  [7641,]  155  165  168 #>  [7642,]  155  165  168 #>  [7643,]  155  164  168 #>  [7644,]  155  164  168 #>  [7645,]  155  165  168 #>  [7646,]  155  164  168 #>  [7647,]  155  165  168 #>  [7648,]  155  165  168 #>  [7649,]  155  164  168 #>  [7650,]  155  165  168 #>  [7651,]  154  163  167 #>  [7652,]  155  164  168 #>  [7653,]  155  165  168 #>  [7654,]  154  163  167 #>  [7655,]  155  164  168 #>  [7656,]  155  165  168 #>  [7657,]  155  165  168 #>  [7658,]  155  164  168 #>  [7659,]  155  165  168 #>  [7660,]  155  165  168 #>  [7661,]  155  165  168 #>  [7662,]  155  165  168 #>  [7663,]  155  165  168 #>  [7664,]  155  165  168 #>  [7665,]  155  165  168 #>  [7666,]  154  163  167 #>  [7667,]  155  165  168 #>  [7668,]  155  165  168 #>  [7669,]  154  163  167 #>  [7670,]  155  165  168 #>  [7671,]  155  165  168 #>  [7672,]  155  165  168 #>  [7673,]  155  165  168 #>  [7674,]  155  165  168 #>  [7675,]  155  165  168 #>  [7676,]  155  165  168 #>  [7677,]  155  165  168 #>  [7678,]  155  165  168 #>  [7679,]  155  164  168 #>  [7680,]  154  163  167 #>  [7681,]  155  164  168 #>  [7682,]  155  164  168 #>  [7683,]  155  164  168 #>  [7684,]  155  165  168 #>  [7685,]  155  165  168 #>  [7686,]  155  165  168 #>  [7687,]  155  164  168 #>  [7688,]  155  164  168 #>  [7689,]  154  163  167 #>  [7690,]  155  164  168 #>  [7691,]  155  164  168 #>  [7692,]  155  164  168 #>  [7693,]  155  165  168 #>  [7694,]  155  165  168 #>  [7695,]  155  164  168 #>  [7696,]  155  164  168 #>  [7697,]  155  165  168 #>  [7698,]  155  165  168 #>  [7699,]  155  164  168 #>  [7700,]  155  165  168 #>  [7701,]  157  167  170 #>  [7702,]  157  167  170 #>  [7703,]  156  166  169 #>  [7704,]  157  167  170 #>  [7705,]  157  167  170 #>  [7706,]  157  167  170 #>  [7707,]  157  167  170 #>  [7708,]  157  167  170 #>  [7709,]  157  167  170 #>  [7710,]  156  166  169 #>  [7711,]  156  166  169 #>  [7712,]  157  167  170 #>  [7713,]  157  167  170 #>  [7714,]  156  166  169 #>  [7715,]  157  167  170 #>  [7716,]  157  167  170 #>  [7717,]  157  167  170 #>  [7718,]  157  167  170 #>  [7719,]  157  167  170 #>  [7720,]  157  167  170 #>  [7721,]  157  167  170 #>  [7722,]  157  167  170 #>  [7723,]  157  167  170 #>  [7724,]  157  167  170 #>  [7725,]  157  167  170 #>  [7726,]  157  167  170 #>  [7727,]  157  167  170 #>  [7728,]  157  167  170 #>  [7729,]  157  167  170 #>  [7730,]  157  167  170 #>  [7731,]  157  167  170 #>  [7732,]  156  166  169 #>  [7733,]  157  167  170 #>  [7734,]  157  167  170 #>  [7735,]  157  167  170 #>  [7736,]  157  167  170 #>  [7737,]  157  167  170 #>  [7738,]  157  167  170 #>  [7739,]  157  167  170 #>  [7740,]  156  166  169 #>  [7741,]  157  167  170 #>  [7742,]  157  167  170 #>  [7743,]  157  167  170 #>  [7744,]  157  167  170 #>  [7745,]  157  167  170 #>  [7746,]  157  167  170 #>  [7747,]  157  167  170 #>  [7748,]  156  166  169 #>  [7749,]  157  167  170 #>  [7750,]  157  167  170 #>  [7751,]  157  167  170 #>  [7752,]  157  167  170 #>  [7753,]  157  167  170 #>  [7754,]  157  167  170 #>  [7755,]  157  167  170 #>  [7756,]  157  167  170 #>  [7757,]  157  167  170 #>  [7758,]  157  167  170 #>  [7759,]  157  167  170 #>  [7760,]  157  167  170 #>  [7761,]  157  167  170 #>  [7762,]  157  167  170 #>  [7763,]  157  167  170 #>  [7764,]  157  167  170 #>  [7765,]  157  167  170 #>  [7766,]  157  167  170 #>  [7767,]  157  167  170 #>  [7768,]  157  167  170 #>  [7769,]  157  167  170 #>  [7770,]  156  166  169 #>  [7771,]  157  167  170 #>  [7772,]  157  167  170 #>  [7773,]  157  167  170 #>  [7774,]  157  167  170 #>  [7775,]  157  167  170 #>  [7776,]  157  167  170 #>  [7777,]  157  167  170 #>  [7778,]  157  167  170 #>  [7779,]  157  167  170 #>  [7780,]  157  167  170 #>  [7781,]  157  167  170 #>  [7782,]  157  167  170 #>  [7783,]  157  167  170 #>  [7784,]  157  167  170 #>  [7785,]  157  167  170 #>  [7786,]  157  167  170 #>  [7787,]  157  167  170 #>  [7788,]  157  167  170 #>  [7789,]  157  167  170 #>  [7790,]  157  167  170 #>  [7791,]  157  167  170 #>  [7792,]  157  167  170 #>  [7793,]  157  167  170 #>  [7794,]  157  167  170 #>  [7795,]  157  167  170 #>  [7796,]  157  167  170 #>  [7797,]  157  167  170 #>  [7798,]  157  167  170 #>  [7799,]  157  167  170 #>  [7800,]  157  167  170 #>  [7801,]  159  169  171 #>  [7802,]  159  169  171 #>  [7803,]  159  169  171 #>  [7804,]  159  169  171 #>  [7805,]  159  169  171 #>  [7806,]  159  169  173 #>  [7807,]  158  168  171 #>  [7808,]  159  169  172 #>  [7809,]  159  169  173 #>  [7810,]  159  169  171 #>  [7811,]  159  169  171 #>  [7812,]  159  169  172 #>  [7813,]  159  169  171 #>  [7814,]  159  169  171 #>  [7815,]  159  169  173 #>  [7816,]  159  169  171 #>  [7817,]  159  169  171 #>  [7818,]  159  169  171 #>  [7819,]  159  169  171 #>  [7820,]  159  169  173 #>  [7821,]  158  168  171 #>  [7822,]  159  169  171 #>  [7823,]  159  169  171 #>  [7824,]  159  169  171 #>  [7825,]  159  169  171 #>  [7826,]  159  169  173 #>  [7827,]  159  169  171 #>  [7828,]  159  169  171 #>  [7829,]  159  169  171 #>  [7830,]  159  169  171 #>  [7831,]  159  169  171 #>  [7832,]  159  169  171 #>  [7833,]  159  169  173 #>  [7834,]  159  169  171 #>  [7835,]  159  169  171 #>  [7836,]  159  169  171 #>  [7837,]  159  169  171 #>  [7838,]  159  169  171 #>  [7839,]  158  168  171 #>  [7840,]  159  169  171 #>  [7841,]  159  169  171 #>  [7842,]  159  169  171 #>  [7843,]  159  169  173 #>  [7844,]  159  169  171 #>  [7845,]  159  169  173 #>  [7846,]  159  169  172 #>  [7847,]  159  169  171 #>  [7848,]  159  169  171 #>  [7849,]  158  168  171 #>  [7850,]  159  169  173 #>  [7851,]  159  169  173 #>  [7852,]  159  169  171 #>  [7853,]  159  169  173 #>  [7854,]  159  169  171 #>  [7855,]  159  169  171 #>  [7856,]  159  169  173 #>  [7857,]  159  169  172 #>  [7858,]  159  169  173 #>  [7859,]  159  169  171 #>  [7860,]  159  169  171 #>  [7861,]  159  169  173 #>  [7862,]  158  168  171 #>  [7863,]  159  169  171 #>  [7864,]  159  169  173 #>  [7865,]  159  169  173 #>  [7866,]  159  169  173 #>  [7867,]  159  169  171 #>  [7868,]  159  169  172 #>  [7869,]  159  169  171 #>  [7870,]  158  168  171 #>  [7871,]  159  169  171 #>  [7872,]  159  169  172 #>  [7873,]  159  169  171 #>  [7874,]  159  169  171 #>  [7875,]  159  169  171 #>  [7876,]  159  169  172 #>  [7877,]  159  169  171 #>  [7878,]  159  169  172 #>  [7879,]  159  169  171 #>  [7880,]  158  168  171 #>  [7881,]  159  169  173 #>  [7882,]  159  169  171 #>  [7883,]  159  169  171 #>  [7884,]  159  169  171 #>  [7885,]  159  169  171 #>  [7886,]  159  169  171 #>  [7887,]  159  169  171 #>  [7888,]  159  169  171 #>  [7889,]  159  169  171 #>  [7890,]  159  169  171 #>  [7891,]  159  169  171 #>  [7892,]  159  169  172 #>  [7893,]  159  169  171 #>  [7894,]  159  169  173 #>  [7895,]  158  168  171 #>  [7896,]  159  169  172 #>  [7897,]  159  169  172 #>  [7898,]  159  169  171 #>  [7899,]  159  169  171 #>  [7900,]  159  169  171 #>  [7901,]  160  170  174 #>  [7902,]  160  170  174 #>  [7903,]  160  170  174 #>  [7904,]  160  170  174 #>  [7905,]  160  170  174 #>  [7906,]  161  171  175 #>  [7907,]  160  170  174 #>  [7908,]  161  171  175 #>  [7909,]  161  171  175 #>  [7910,]  160  170  174 #>  [7911,]  160  170  174 #>  [7912,]  161  171  175 #>  [7913,]  160  170  174 #>  [7914,]  160  170  174 #>  [7915,]  161  171  175 #>  [7916,]  160  170  174 #>  [7917,]  160  170  174 #>  [7918,]  160  170  174 #>  [7919,]  160  170  174 #>  [7920,]  160  170  174 #>  [7921,]  160  170  174 #>  [7922,]  160  170  174 #>  [7923,]  160  170  174 #>  [7924,]  160  170  174 #>  [7925,]  160  170  174 #>  [7926,]  161  171  175 #>  [7927,]  160  170  174 #>  [7928,]  160  170  174 #>  [7929,]  160  170  174 #>  [7930,]  160  170  174 #>  [7931,]  160  170  174 #>  [7932,]  160  170  174 #>  [7933,]  160  170  174 #>  [7934,]  160  170  174 #>  [7935,]  160  170  174 #>  [7936,]  160  170  174 #>  [7937,]  160  170  174 #>  [7938,]  160  170  174 #>  [7939,]  160  170  174 #>  [7940,]  160  170  174 #>  [7941,]  160  170  174 #>  [7942,]  160  170  174 #>  [7943,]  161  171  175 #>  [7944,]  160  170  174 #>  [7945,]  160  170  174 #>  [7946,]  161  171  175 #>  [7947,]  160  170  174 #>  [7948,]  160  170  174 #>  [7949,]  160  170  174 #>  [7950,]  160  170  174 #>  [7951,]  161  171  175 #>  [7952,]  160  170  174 #>  [7953,]  160  170  174 #>  [7954,]  160  170  174 #>  [7955,]  160  170  174 #>  [7956,]  161  171  175 #>  [7957,]  160  170  174 #>  [7958,]  160  170  174 #>  [7959,]  160  170  174 #>  [7960,]  160  170  174 #>  [7961,]  161  171  175 #>  [7962,]  160  170  174 #>  [7963,]  160  170  174 #>  [7964,]  161  171  175 #>  [7965,]  160  170  174 #>  [7966,]  161  171  175 #>  [7967,]  160  170  174 #>  [7968,]  160  170  174 #>  [7969,]  160  170  174 #>  [7970,]  160  170  174 #>  [7971,]  160  170  174 #>  [7972,]  160  170  174 #>  [7973,]  160  170  174 #>  [7974,]  160  170  174 #>  [7975,]  160  170  174 #>  [7976,]  161  171  175 #>  [7977,]  160  170  174 #>  [7978,]  160  170  174 #>  [7979,]  160  170  174 #>  [7980,]  160  170  174 #>  [7981,]  160  170  174 #>  [7982,]  160  170  174 #>  [7983,]  160  170  174 #>  [7984,]  160  170  174 #>  [7985,]  160  170  174 #>  [7986,]  160  170  174 #>  [7987,]  160  170  174 #>  [7988,]  160  170  174 #>  [7989,]  160  170  174 #>  [7990,]  160  170  174 #>  [7991,]  160  170  174 #>  [7992,]  160  170  174 #>  [7993,]  160  170  174 #>  [7994,]  161  171  175 #>  [7995,]  160  170  174 #>  [7996,]  160  170  174 #>  [7997,]  160  170  174 #>  [7998,]  160  170  174 #>  [7999,]  160  170  174 #>  [8000,]  160  170  174 #>  [8001,]  162  172  176 #>  [8002,]  162  172  176 #>  [8003,]  162  172  176 #>  [8004,]  163  173  177 #>  [8005,]  162  172  176 #>  [8006,]  162  172  176 #>  [8007,]  162  172  176 #>  [8008,]  162  172  176 #>  [8009,]  163  173  177 #>  [8010,]  162  172  176 #>  [8011,]  163  173  177 #>  [8012,]  163  173  177 #>  [8013,]  162  172  176 #>  [8014,]  163  173  177 #>  [8015,]  163  173  177 #>  [8016,]  162  172  176 #>  [8017,]  162  172  176 #>  [8018,]  163  173  177 #>  [8019,]  163  173  177 #>  [8020,]  162  172  176 #>  [8021,]  163  173  177 #>  [8022,]  162  172  176 #>  [8023,]  162  172  176 #>  [8024,]  162  172  176 #>  [8025,]  162  172  176 #>  [8026,]  163  173  177 #>  [8027,]  163  173  177 #>  [8028,]  162  172  176 #>  [8029,]  162  172  176 #>  [8030,]  163  173  177 #>  [8031,]  163  173  177 #>  [8032,]  162  172  176 #>  [8033,]  163  173  177 #>  [8034,]  162  172  176 #>  [8035,]  162  172  176 #>  [8036,]  163  173  177 #>  [8037,]  162  172  176 #>  [8038,]  163  173  177 #>  [8039,]  162  172  176 #>  [8040,]  162  172  176 #>  [8041,]  163  173  177 #>  [8042,]  163  173  177 #>  [8043,]  162  172  176 #>  [8044,]  162  172  176 #>  [8045,]  162  172  176 #>  [8046,]  162  172  176 #>  [8047,]  162  172  176 #>  [8048,]  163  173  177 #>  [8049,]  162  172  176 #>  [8050,]  162  172  176 #>  [8051,]  162  172  176 #>  [8052,]  162  172  176 #>  [8053,]  162  172  176 #>  [8054,]  162  172  176 #>  [8055,]  162  172  176 #>  [8056,]  162  172  176 #>  [8057,]  162  172  176 #>  [8058,]  163  173  177 #>  [8059,]  162  172  176 #>  [8060,]  163  173  177 #>  [8061,]  163  173  177 #>  [8062,]  163  173  177 #>  [8063,]  162  172  176 #>  [8064,]  162  172  176 #>  [8065,]  162  172  176 #>  [8066,]  162  172  176 #>  [8067,]  162  172  176 #>  [8068,]  163  173  177 #>  [8069,]  163  173  177 #>  [8070,]  162  172  176 #>  [8071,]  162  172  176 #>  [8072,]  162  172  176 #>  [8073,]  162  172  176 #>  [8074,]  163  173  177 #>  [8075,]  163  173  177 #>  [8076,]  162  172  176 #>  [8077,]  162  172  176 #>  [8078,]  162  172  176 #>  [8079,]  162  172  176 #>  [8080,]  162  172  176 #>  [8081,]  162  172  176 #>  [8082,]  163  173  177 #>  [8083,]  162  172  176 #>  [8084,]  162  172  176 #>  [8085,]  163  173  177 #>  [8086,]  162  172  176 #>  [8087,]  162  172  176 #>  [8088,]  162  172  176 #>  [8089,]  162  172  176 #>  [8090,]  162  172  176 #>  [8091,]  162  172  176 #>  [8092,]  163  173  177 #>  [8093,]  163  173  177 #>  [8094,]  162  172  176 #>  [8095,]  162  172  176 #>  [8096,]  163  173  177 #>  [8097,]  163  173  177 #>  [8098,]  162  172  176 #>  [8099,]  163  173  177 #>  [8100,]  162  172  176 #>  [8101,]  165  175  179 #>  [8102,]  164  174  178 #>  [8103,]  164  174  178 #>  [8104,]  165  175  179 #>  [8105,]  164  174  178 #>  [8106,]  164  174  178 #>  [8107,]  165  175  179 #>  [8108,]  165  175  179 #>  [8109,]  165  175  179 #>  [8110,]  165  175  179 #>  [8111,]  164  174  178 #>  [8112,]  164  174  178 #>  [8113,]  165  175  179 #>  [8114,]  164  174  178 #>  [8115,]  165  175  179 #>  [8116,]  165  175  179 #>  [8117,]  165  175  179 #>  [8118,]  165  175  179 #>  [8119,]  164  174  178 #>  [8120,]  164  174  178 #>  [8121,]  165  175  179 #>  [8122,]  164  174  178 #>  [8123,]  165  175  179 #>  [8124,]  164  174  178 #>  [8125,]  165  175  179 #>  [8126,]  164  174  178 #>  [8127,]  165  176  179 #>  [8128,]  165  175  179 #>  [8129,]  164  174  178 #>  [8130,]  164  174  178 #>  [8131,]  164  174  178 #>  [8132,]  164  174  178 #>  [8133,]  164  174  178 #>  [8134,]  164  174  178 #>  [8135,]  164  174  178 #>  [8136,]  164  174  178 #>  [8137,]  165  175  179 #>  [8138,]  165  175  179 #>  [8139,]  165  175  179 #>  [8140,]  164  174  178 #>  [8141,]  164  174  178 #>  [8142,]  164  174  178 #>  [8143,]  165  175  179 #>  [8144,]  165  175  179 #>  [8145,]  165  175  179 #>  [8146,]  165  175  179 #>  [8147,]  165  175  179 #>  [8148,]  164  174  178 #>  [8149,]  164  174  178 #>  [8150,]  164  174  178 #>  [8151,]  164  174  178 #>  [8152,]  164  174  178 #>  [8153,]  165  175  179 #>  [8154,]  164  174  178 #>  [8155,]  164  174  178 #>  [8156,]  165  175  179 #>  [8157,]  164  174  178 #>  [8158,]  164  174  178 #>  [8159,]  164  174  178 #>  [8160,]  164  174  178 #>  [8161,]  165  175  179 #>  [8162,]  164  174  178 #>  [8163,]  164  174  178 #>  [8164,]  165  176  179 #>  [8165,]  164  174  178 #>  [8166,]  164  174  178 #>  [8167,]  164  174  178 #>  [8168,]  164  174  178 #>  [8169,]  164  174  178 #>  [8170,]  165  175  179 #>  [8171,]  165  175  179 #>  [8172,]  165  175  179 #>  [8173,]  165  175  179 #>  [8174,]  165  175  179 #>  [8175,]  165  175  179 #>  [8176,]  165  175  179 #>  [8177,]  165  176  179 #>  [8178,]  164  174  178 #>  [8179,]  165  175  179 #>  [8180,]  164  174  178 #>  [8181,]  164  174  178 #>  [8182,]  165  175  179 #>  [8183,]  164  174  178 #>  [8184,]  165  175  179 #>  [8185,]  164  174  178 #>  [8186,]  165  175  179 #>  [8187,]  165  176  179 #>  [8188,]  165  175  179 #>  [8189,]  164  174  178 #>  [8190,]  165  175  179 #>  [8191,]  164  174  178 #>  [8192,]  164  174  178 #>  [8193,]  164  174  178 #>  [8194,]  165  175  179 #>  [8195,]  165  175  179 #>  [8196,]  165  175  179 #>  [8197,]  164  174  178 #>  [8198,]  164  174  178 #>  [8199,]  164  174  178 #>  [8200,]  165  176  179 #>  [8201,]  167  177  181 #>  [8202,]  167  177  181 #>  [8203,]  167  177  181 #>  [8204,]  166  178  180 #>  [8205,]  167  177  181 #>  [8206,]  167  177  181 #>  [8207,]  167  177  181 #>  [8208,]  166  178  180 #>  [8209,]  166  178  180 #>  [8210,]  166  178  180 #>  [8211,]  167  177  181 #>  [8212,]  167  177  181 #>  [8213,]  167  177  181 #>  [8214,]  167  177  181 #>  [8215,]  167  177  181 #>  [8216,]  167  177  181 #>  [8217,]  167  177  181 #>  [8218,]  166  179  180 #>  [8219,]  167  177  181 #>  [8220,]  166  178  180 #>  [8221,]  167  177  181 #>  [8222,]  167  177  181 #>  [8223,]  167  177  181 #>  [8224,]  167  177  181 #>  [8225,]  167  177  181 #>  [8226,]  167  177  181 #>  [8227,]  167  177  181 #>  [8228,]  167  177  181 #>  [8229,]  167  177  181 #>  [8230,]  166  178  180 #>  [8231,]  167  177  181 #>  [8232,]  167  177  181 #>  [8233,]  167  177  181 #>  [8234,]  167  177  181 #>  [8235,]  167  177  181 #>  [8236,]  167  177  181 #>  [8237,]  167  177  181 #>  [8238,]  167  177  181 #>  [8239,]  166  178  180 #>  [8240,]  167  177  181 #>  [8241,]  167  177  181 #>  [8242,]  167  177  181 #>  [8243,]  166  179  180 #>  [8244,]  167  177  181 #>  [8245,]  166  178  180 #>  [8246,]  167  177  181 #>  [8247,]  167  177  181 #>  [8248,]  167  177  181 #>  [8249,]  166  178  180 #>  [8250,]  167  177  181 #>  [8251,]  166  178  180 #>  [8252,]  167  177  181 #>  [8253,]  166  178  180 #>  [8254,]  167  177  181 #>  [8255,]  167  177  181 #>  [8256,]  166  178  180 #>  [8257,]  167  177  181 #>  [8258,]  167  177  181 #>  [8259,]  167  177  181 #>  [8260,]  166  178  180 #>  [8261,]  167  177  181 #>  [8262,]  167  177  181 #>  [8263,]  167  177  181 #>  [8264,]  166  178  180 #>  [8265,]  166  178  180 #>  [8266,]  166  179  180 #>  [8267,]  166  178  180 #>  [8268,]  167  177  181 #>  [8269,]  167  177  181 #>  [8270,]  167  177  181 #>  [8271,]  167  177  181 #>  [8272,]  167  177  181 #>  [8273,]  167  177  181 #>  [8274,]  167  177  181 #>  [8275,]  167  177  181 #>  [8276,]  167  177  181 #>  [8277,]  167  177  181 #>  [8278,]  166  178  180 #>  [8279,]  167  177  181 #>  [8280,]  167  177  181 #>  [8281,]  167  177  181 #>  [8282,]  167  177  181 #>  [8283,]  167  177  181 #>  [8284,]  167  177  181 #>  [8285,]  166  178  180 #>  [8286,]  167  177  181 #>  [8287,]  167  177  181 #>  [8288,]  167  177  181 #>  [8289,]  166  178  180 #>  [8290,]  167  177  181 #>  [8291,]  166  179  180 #>  [8292,]  167  177  181 #>  [8293,]  167  177  181 #>  [8294,]  167  177  181 #>  [8295,]  166  179  180 #>  [8296,]  167  177  181 #>  [8297,]  167  177  181 #>  [8298,]  167  177  181 #>  [8299,]  167  177  181 #>  [8300,]  167  177  181 #>  [8301,]  168  181  183 #>  [8302,]  168  181  183 #>  [8303,]  168  180  182 #>  [8304,]  168  180  182 #>  [8305,]  168  180  182 #>  [8306,]  168  180  182 #>  [8307,]  168  181  183 #>  [8308,]  168  181  183 #>  [8309,]  168  180  182 #>  [8310,]  168  180  182 #>  [8311,]  168  180  182 #>  [8312,]  168  181  183 #>  [8313,]  168  181  183 #>  [8314,]  168  180  182 #>  [8315,]  168  181  183 #>  [8316,]  168  181  183 #>  [8317,]  168  181  183 #>  [8318,]  168  181  183 #>  [8319,]  168  181  183 #>  [8320,]  168  181  183 #>  [8321,]  168  180  182 #>  [8322,]  168  181  183 #>  [8323,]  168  181  183 #>  [8324,]  168  180  182 #>  [8325,]  168  180  182 #>  [8326,]  168  181  183 #>  [8327,]  168  181  183 #>  [8328,]  168  180  182 #>  [8329,]  168  181  183 #>  [8330,]  168  181  183 #>  [8331,]  168  180  182 #>  [8332,]  168  180  182 #>  [8333,]  168  181  183 #>  [8334,]  168  180  182 #>  [8335,]  168  180  182 #>  [8336,]  168  181  183 #>  [8337,]  168  181  183 #>  [8338,]  168  181  183 #>  [8339,]  168  180  182 #>  [8340,]  168  180  182 #>  [8341,]  168  181  183 #>  [8342,]  168  180  182 #>  [8343,]  168  181  183 #>  [8344,]  168  181  183 #>  [8345,]  168  181  183 #>  [8346,]  168  181  183 #>  [8347,]  168  180  182 #>  [8348,]  168  180  182 #>  [8349,]  168  181  183 #>  [8350,]  168  181  183 #>  [8351,]  168  181  183 #>  [8352,]  168  180  182 #>  [8353,]  168  181  183 #>  [8354,]  168  180  182 #>  [8355,]  168  181  183 #>  [8356,]  168  181  183 #>  [8357,]  168  180  182 #>  [8358,]  168  181  183 #>  [8359,]  168  181  183 #>  [8360,]  168  181  183 #>  [8361,]  168  181  183 #>  [8362,]  168  180  182 #>  [8363,]  168  181  183 #>  [8364,]  168  181  183 #>  [8365,]  168  180  182 #>  [8366,]  168  181  183 #>  [8367,]  168  180  182 #>  [8368,]  168  181  183 #>  [8369,]  168  181  183 #>  [8370,]  168  180  182 #>  [8371,]  168  181  183 #>  [8372,]  168  180  182 #>  [8373,]  168  180  182 #>  [8374,]  168  180  182 #>  [8375,]  168  181  183 #>  [8376,]  168  180  182 #>  [8377,]  168  181  183 #>  [8378,]  168  181  183 #>  [8379,]  168  180  182 #>  [8380,]  168  181  183 #>  [8381,]  168  181  183 #>  [8382,]  168  180  182 #>  [8383,]  168  181  183 #>  [8384,]  168  181  183 #>  [8385,]  168  181  183 #>  [8386,]  168  180  182 #>  [8387,]  168  181  183 #>  [8388,]  168  180  182 #>  [8389,]  168  180  182 #>  [8390,]  168  181  183 #>  [8391,]  168  180  182 #>  [8392,]  168  181  183 #>  [8393,]  168  181  183 #>  [8394,]  168  180  182 #>  [8395,]  168  181  183 #>  [8396,]  168  181  183 #>  [8397,]  168  181  183 #>  [8398,]  168  180  182 #>  [8399,]  168  181  183 #>  [8400,]  168  181  183 #>  [8401,]  169  182  185 #>  [8402,]  169  182  184 #>  [8403,]  169  182  184 #>  [8404,]  169  182  184 #>  [8405,]  169  182  185 #>  [8406,]  169  182  185 #>  [8407,]  170  183  184 #>  [8408,]  169  182  185 #>  [8409,]  169  182  185 #>  [8410,]  169  182  184 #>  [8411,]  169  182  185 #>  [8412,]  169  182  185 #>  [8413,]  169  182  184 #>  [8414,]  169  182  185 #>  [8415,]  169  182  185 #>  [8416,]  170  183  184 #>  [8417,]  169  182  184 #>  [8418,]  169  182  184 #>  [8419,]  169  182  184 #>  [8420,]  170  183  185 #>  [8421,]  169  182  184 #>  [8422,]  169  182  184 #>  [8423,]  169  182  184 #>  [8424,]  170  183  184 #>  [8425,]  169  182  184 #>  [8426,]  169  182  185 #>  [8427,]  169  182  184 #>  [8428,]  170  183  185 #>  [8429,]  169  182  184 #>  [8430,]  169  182  184 #>  [8431,]  169  182  184 #>  [8432,]  169  182  184 #>  [8433,]  169  182  185 #>  [8434,]  169  182  184 #>  [8435,]  169  182  184 #>  [8436,]  169  182  184 #>  [8437,]  169  182  184 #>  [8438,]  169  182  185 #>  [8439,]  169  182  184 #>  [8440,]  169  182  184 #>  [8441,]  169  182  185 #>  [8442,]  169  182  185 #>  [8443,]  169  182  185 #>  [8444,]  169  182  184 #>  [8445,]  169  182  185 #>  [8446,]  169  182  185 #>  [8447,]  169  182  184 #>  [8448,]  169  182  184 #>  [8449,]  169  182  184 #>  [8450,]  170  183  185 #>  [8451,]  169  182  185 #>  [8452,]  170  183  185 #>  [8453,]  169  182  185 #>  [8454,]  169  182  184 #>  [8455,]  169  182  185 #>  [8456,]  169  182  185 #>  [8457,]  169  182  185 #>  [8458,]  169  182  185 #>  [8459,]  169  182  184 #>  [8460,]  169  182  185 #>  [8461,]  169  182  185 #>  [8462,]  169  182  184 #>  [8463,]  169  182  185 #>  [8464,]  169  182  185 #>  [8465,]  169  182  185 #>  [8466,]  169  182  185 #>  [8467,]  169  182  185 #>  [8468,]  169  182  185 #>  [8469,]  169  182  184 #>  [8470,]  169  182  184 #>  [8471,]  169  182  185 #>  [8472,]  169  182  185 #>  [8473,]  169  182  185 #>  [8474,]  169  182  185 #>  [8475,]  169  182  185 #>  [8476,]  170  183  185 #>  [8477,]  169  182  184 #>  [8478,]  169  182  185 #>  [8479,]  169  182  184 #>  [8480,]  169  182  184 #>  [8481,]  169  182  185 #>  [8482,]  169  182  184 #>  [8483,]  169  182  184 #>  [8484,]  169  182  185 #>  [8485,]  169  182  184 #>  [8486,]  170  183  184 #>  [8487,]  169  182  185 #>  [8488,]  169  182  185 #>  [8489,]  169  182  184 #>  [8490,]  169  182  185 #>  [8491,]  170  183  185 #>  [8492,]  169  182  185 #>  [8493,]  169  182  184 #>  [8494,]  169  182  185 #>  [8495,]  169  182  184 #>  [8496,]  169  182  185 #>  [8497,]  169  182  185 #>  [8498,]  169  182  184 #>  [8499,]  169  182  184 #>  [8500,]  169  182  184 #>  [8501,]  171  184  187 #>  [8502,]  171  184  187 #>  [8503,]  171  184  186 #>  [8504,]  172  185  186 #>  [8505,]  171  184  187 #>  [8506,]  171  184  187 #>  [8507,]  171  184  186 #>  [8508,]  171  184  186 #>  [8509,]  171  184  187 #>  [8510,]  171  184  187 #>  [8511,]  172  185  187 #>  [8512,]  172  185  186 #>  [8513,]  171  184  187 #>  [8514,]  172  185  187 #>  [8515,]  172  185  187 #>  [8516,]  171  184  187 #>  [8517,]  171  184  187 #>  [8518,]  171  184  187 #>  [8519,]  172  185  187 #>  [8520,]  171  184  187 #>  [8521,]  172  185  187 #>  [8522,]  171  184  187 #>  [8523,]  171  184  186 #>  [8524,]  171  184  187 #>  [8525,]  171  184  186 #>  [8526,]  171  184  187 #>  [8527,]  172  185  187 #>  [8528,]  171  184  187 #>  [8529,]  171  184  187 #>  [8530,]  171  184  187 #>  [8531,]  171  184  186 #>  [8532,]  171  184  186 #>  [8533,]  171  184  187 #>  [8534,]  171  184  187 #>  [8535,]  171  184  187 #>  [8536,]  171  184  187 #>  [8537,]  171  184  186 #>  [8538,]  172  185  187 #>  [8539,]  171  184  187 #>  [8540,]  171  184  186 #>  [8541,]  172  185  187 #>  [8542,]  172  185  187 #>  [8543,]  171  184  187 #>  [8544,]  171  184  187 #>  [8545,]  171  184  187 #>  [8546,]  171  184  186 #>  [8547,]  171  184  186 #>  [8548,]  172  185  187 #>  [8549,]  171  184  187 #>  [8550,]  171  184  187 #>  [8551,]  171  184  187 #>  [8552,]  171  184  186 #>  [8553,]  171  184  187 #>  [8554,]  171  184  187 #>  [8555,]  171  184  186 #>  [8556,]  171  184  187 #>  [8557,]  171  184  186 #>  [8558,]  171  184  187 #>  [8559,]  171  184  186 #>  [8560,]  171  184  186 #>  [8561,]  172  185  187 #>  [8562,]  171  184  187 #>  [8563,]  171  184  187 #>  [8564,]  171  184  187 #>  [8565,]  171  184  187 #>  [8566,]  171  184  187 #>  [8567,]  171  184  186 #>  [8568,]  171  184  186 #>  [8569,]  172  185  187 #>  [8570,]  171  184  187 #>  [8571,]  171  184  187 #>  [8572,]  171  184  186 #>  [8573,]  171  184  187 #>  [8574,]  172  185  186 #>  [8575,]  172  185  187 #>  [8576,]  171  184  186 #>  [8577,]  171  184  187 #>  [8578,]  171  184  186 #>  [8579,]  171  184  187 #>  [8580,]  171  184  186 #>  [8581,]  171  184  187 #>  [8582,]  172  185  187 #>  [8583,]  171  184  187 #>  [8584,]  171  184  187 #>  [8585,]  171  184  187 #>  [8586,]  171  184  186 #>  [8587,]  171  184  187 #>  [8588,]  171  184  187 #>  [8589,]  171  184  187 #>  [8590,]  171  184  187 #>  [8591,]  171  184  187 #>  [8592,]  172  185  186 #>  [8593,]  172  185  187 #>  [8594,]  171  184  187 #>  [8595,]  171  184  187 #>  [8596,]  172  185  186 #>  [8597,]  172  185  186 #>  [8598,]  171  184  186 #>  [8599,]  171  184  187 #>  [8600,]  171  184  187 #>  [8601,]  173  188  189 #>  [8602,]  173  188  189 #>  [8603,]  174  186  188 #>  [8604,]  173  187  189 #>  [8605,]  173  188  189 #>  [8606,]  173  188  189 #>  [8607,]  173  187  189 #>  [8608,]  173  187  189 #>  [8609,]  173  188  189 #>  [8610,]  173  188  189 #>  [8611,]  174  186  188 #>  [8612,]  175  186  188 #>  [8613,]  173  188  189 #>  [8614,]  175  186  188 #>  [8615,]  173  188  189 #>  [8616,]  173  188  189 #>  [8617,]  173  188  189 #>  [8618,]  173  188  189 #>  [8619,]  173  188  189 #>  [8620,]  174  186  188 #>  [8621,]  173  188  189 #>  [8622,]  174  186  188 #>  [8623,]  173  187  189 #>  [8624,]  173  188  189 #>  [8625,]  173  187  189 #>  [8626,]  174  186  188 #>  [8627,]  173  188  189 #>  [8628,]  173  188  189 #>  [8629,]  174  186  188 #>  [8630,]  173  188  189 #>  [8631,]  173  187  189 #>  [8632,]  174  186  188 #>  [8633,]  173  188  189 #>  [8634,]  173  188  189 #>  [8635,]  173  188  189 #>  [8636,]  174  186  188 #>  [8637,]  173  187  189 #>  [8638,]  173  188  189 #>  [8639,]  173  188  189 #>  [8640,]  174  186  188 #>  [8641,]  175  186  188 #>  [8642,]  175  186  188 #>  [8643,]  173  188  189 #>  [8644,]  173  188  189 #>  [8645,]  173  188  189 #>  [8646,]  173  187  189 #>  [8647,]  173  187  189 #>  [8648,]  175  186  188 #>  [8649,]  173  188  189 #>  [8650,]  173  188  189 #>  [8651,]  174  186  188 #>  [8652,]  173  187  189 #>  [8653,]  173  188  189 #>  [8654,]  174  186  188 #>  [8655,]  173  187  189 #>  [8656,]  173  188  189 #>  [8657,]  173  187  189 #>  [8658,]  173  188  189 #>  [8659,]  173  187  189 #>  [8660,]  174  186  188 #>  [8661,]  173  188  189 #>  [8662,]  174  186  188 #>  [8663,]  173  188  189 #>  [8664,]  173  188  189 #>  [8665,]  173  188  189 #>  [8666,]  174  186  188 #>  [8667,]  173  188  189 #>  [8668,]  174  186  188 #>  [8669,]  175  186  188 #>  [8670,]  173  188  189 #>  [8671,]  173  188  189 #>  [8672,]  173  188  189 #>  [8673,]  173  188  189 #>  [8674,]  173  187  189 #>  [8675,]  173  188  189 #>  [8676,]  173  188  189 #>  [8677,]  173  188  189 #>  [8678,]  173  188  189 #>  [8679,]  173  188  189 #>  [8680,]  174  186  188 #>  [8681,]  174  186  188 #>  [8682,]  173  188  189 #>  [8683,]  174  186  188 #>  [8684,]  173  188  189 #>  [8685,]  173  188  189 #>  [8686,]  173  187  189 #>  [8687,]  173  188  189 #>  [8688,]  173  188  189 #>  [8689,]  174  186  188 #>  [8690,]  173  188  189 #>  [8691,]  174  186  188 #>  [8692,]  173  188  189 #>  [8693,]  173  188  189 #>  [8694,]  173  188  189 #>  [8695,]  173  188  189 #>  [8696,]  173  187  189 #>  [8697,]  173  187  189 #>  [8698,]  173  187  189 #>  [8699,]  173  188  189 #>  [8700,]  173  188  189 #>  [8701,]  177  190  191 #>  [8702,]  177  190  191 #>  [8703,]  176  189  190 #>  [8704,]  177  190  191 #>  [8705,]  177  190  191 #>  [8706,]  177  190  191 #>  [8707,]  177  190  191 #>  [8708,]  177  190  191 #>  [8709,]  177  190  191 #>  [8710,]  177  190  191 #>  [8711,]  176  189  190 #>  [8712,]  176  189  190 #>  [8713,]  177  190  191 #>  [8714,]  176  189  190 #>  [8715,]  177  190  191 #>  [8716,]  177  190  191 #>  [8717,]  177  190  191 #>  [8718,]  177  190  191 #>  [8719,]  176  189  190 #>  [8720,]  176  189  190 #>  [8721,]  177  190  191 #>  [8722,]  176  189  190 #>  [8723,]  177  190  191 #>  [8724,]  177  190  191 #>  [8725,]  177  190  191 #>  [8726,]  176  189  190 #>  [8727,]  177  190  191 #>  [8728,]  177  190  191 #>  [8729,]  176  189  190 #>  [8730,]  176  189  190 #>  [8731,]  177  190  191 #>  [8732,]  176  189  190 #>  [8733,]  177  190  191 #>  [8734,]  176  189  190 #>  [8735,]  177  190  191 #>  [8736,]  176  189  190 #>  [8737,]  177  190  191 #>  [8738,]  177  190  191 #>  [8739,]  177  190  191 #>  [8740,]  176  189  190 #>  [8741,]  176  189  190 #>  [8742,]  176  189  190 #>  [8743,]  177  190  191 #>  [8744,]  177  190  191 #>  [8745,]  177  190  191 #>  [8746,]  177  190  191 #>  [8747,]  177  190  191 #>  [8748,]  176  189  190 #>  [8749,]  177  190  191 #>  [8750,]  177  190  191 #>  [8751,]  176  189  190 #>  [8752,]  177  190  191 #>  [8753,]  177  190  191 #>  [8754,]  176  189  190 #>  [8755,]  177  190  191 #>  [8756,]  177  190  191 #>  [8757,]  177  190  191 #>  [8758,]  177  190  191 #>  [8759,]  177  190  191 #>  [8760,]  176  189  190 #>  [8761,]  177  190  191 #>  [8762,]  176  189  190 #>  [8763,]  176  189  190 #>  [8764,]  177  190  191 #>  [8765,]  177  190  191 #>  [8766,]  176  189  190 #>  [8767,]  177  190  191 #>  [8768,]  176  189  190 #>  [8769,]  176  189  190 #>  [8770,]  177  190  191 #>  [8771,]  177  190  191 #>  [8772,]  177  190  191 #>  [8773,]  177  190  191 #>  [8774,]  177  190  191 #>  [8775,]  177  190  191 #>  [8776,]  177  190  191 #>  [8777,]  177  190  191 #>  [8778,]  177  190  191 #>  [8779,]  177  190  191 #>  [8780,]  176  189  190 #>  [8781,]  176  189  190 #>  [8782,]  177  190  191 #>  [8783,]  176  189  190 #>  [8784,]  177  190  191 #>  [8785,]  177  190  191 #>  [8786,]  177  190  191 #>  [8787,]  177  190  191 #>  [8788,]  177  190  191 #>  [8789,]  176  189  190 #>  [8790,]  177  190  191 #>  [8791,]  176  189  190 #>  [8792,]  177  190  191 #>  [8793,]  177  190  191 #>  [8794,]  177  190  191 #>  [8795,]  177  190  191 #>  [8796,]  177  190  191 #>  [8797,]  177  190  191 #>  [8798,]  177  190  191 #>  [8799,]  177  190  191 #>  [8800,]  177  190  191 #>  [8801,]  178  191  192 #>  [8802,]  178  191  193 #>  [8803,]  178  191  192 #>  [8804,]  179  192  193 #>  [8805,]  178  191  193 #>  [8806,]  178  191  192 #>  [8807,]  179  192  193 #>  [8808,]  178  191  193 #>  [8809,]  178  191  193 #>  [8810,]  179  192  193 #>  [8811,]  178  191  192 #>  [8812,]  178  191  193 #>  [8813,]  178  191  193 #>  [8814,]  178  191  192 #>  [8815,]  178  191  193 #>  [8816,]  179  192  192 #>  [8817,]  178  191  193 #>  [8818,]  178  191  193 #>  [8819,]  178  191  192 #>  [8820,]  179  192  193 #>  [8821,]  178  191  193 #>  [8822,]  178  191  193 #>  [8823,]  178  191  193 #>  [8824,]  179  192  193 #>  [8825,]  179  192  193 #>  [8826,]  178  191  192 #>  [8827,]  178  191  193 #>  [8828,]  179  192  192 #>  [8829,]  178  191  193 #>  [8830,]  178  191  193 #>  [8831,]  178  191  193 #>  [8832,]  178  191  193 #>  [8833,]  178  191  193 #>  [8834,]  178  191  192 #>  [8835,]  178  191  192 #>  [8836,]  179  192  193 #>  [8837,]  178  191  192 #>  [8838,]  178  191  192 #>  [8839,]  179  192  193 #>  [8840,]  178  191  193 #>  [8841,]  178  191  193 #>  [8842,]  178  191  192 #>  [8843,]  178  191  193 #>  [8844,]  178  191  193 #>  [8845,]  178  191  192 #>  [8846,]  178  191  193 #>  [8847,]  178  191  193 #>  [8848,]  178  191  193 #>  [8849,]  178  191  192 #>  [8850,]  179  192  193 #>  [8851,]  178  191  193 #>  [8852,]  179  192  192 #>  [8853,]  178  191  193 #>  [8854,]  179  192  193 #>  [8855,]  178  191  193 #>  [8856,]  178  191  193 #>  [8857,]  179  192  193 #>  [8858,]  178  191  193 #>  [8859,]  178  191  192 #>  [8860,]  178  191  193 #>  [8861,]  178  191  193 #>  [8862,]  178  191  193 #>  [8863,]  178  191  193 #>  [8864,]  178  191  192 #>  [8865,]  178  191  192 #>  [8866,]  178  191  193 #>  [8867,]  178  191  193 #>  [8868,]  178  191  192 #>  [8869,]  178  191  193 #>  [8870,]  178  191  193 #>  [8871,]  178  191  193 #>  [8872,]  178  191  192 #>  [8873,]  179  192  192 #>  [8874,]  178  191  193 #>  [8875,]  178  191  193 #>  [8876,]  179  192  193 #>  [8877,]  178  191  192 #>  [8878,]  178  191  193 #>  [8879,]  178  191  192 #>  [8880,]  178  191  193 #>  [8881,]  178  191  193 #>  [8882,]  178  191  193 #>  [8883,]  178  191  193 #>  [8884,]  178  191  193 #>  [8885,]  178  191  193 #>  [8886,]  179  192  193 #>  [8887,]  178  191  193 #>  [8888,]  178  191  193 #>  [8889,]  178  191  192 #>  [8890,]  178  191  193 #>  [8891,]  179  192  193 #>  [8892,]  178  191  193 #>  [8893,]  178  191  193 #>  [8894,]  178  191  192 #>  [8895,]  178  191  193 #>  [8896,]  178  191  192 #>  [8897,]  178  191  192 #>  [8898,]  178  191  193 #>  [8899,]  178  191  193 #>  [8900,]  178  191  192 #>  [8901,]  180  193  196 #>  [8902,]  180  193  195 #>  [8903,]  181  194  194 #>  [8904,]  180  193  196 #>  [8905,]  180  193  195 #>  [8906,]  181  194  194 #>  [8907,]  180  193  195 #>  [8908,]  180  193  195 #>  [8909,]  180  193  196 #>  [8910,]  180  193  196 #>  [8911,]  180  193  196 #>  [8912,]  181  194  194 #>  [8913,]  180  193  195 #>  [8914,]  180  193  196 #>  [8915,]  180  193  196 #>  [8916,]  180  193  195 #>  [8917,]  180  193  195 #>  [8918,]  180  193  196 #>  [8919,]  181  194  194 #>  [8920,]  181  194  194 #>  [8921,]  180  193  196 #>  [8922,]  180  193  195 #>  [8923,]  180  193  196 #>  [8924,]  180  193  195 #>  [8925,]  181  194  194 #>  [8926,]  180  193  196 #>  [8927,]  180  193  196 #>  [8928,]  181  194  194 #>  [8929,]  180  193  195 #>  [8930,]  180  193  196 #>  [8931,]  180  193  196 #>  [8932,]  180  193  196 #>  [8933,]  181  194  194 #>  [8934,]  181  194  194 #>  [8935,]  180  193  196 #>  [8936,]  180  193  196 #>  [8937,]  180  193  196 #>  [8938,]  180  193  196 #>  [8939,]  180  193  195 #>  [8940,]  180  193  195 #>  [8941,]  180  193  196 #>  [8942,]  180  193  196 #>  [8943,]  180  193  195 #>  [8944,]  180  193  195 #>  [8945,]  180  193  195 #>  [8946,]  180  193  195 #>  [8947,]  180  193  195 #>  [8948,]  180  193  196 #>  [8949,]  180  193  195 #>  [8950,]  180  193  195 #>  [8951,]  180  193  195 #>  [8952,]  180  193  196 #>  [8953,]  180  193  195 #>  [8954,]  180  193  195 #>  [8955,]  180  193  195 #>  [8956,]  180  193  195 #>  [8957,]  180  193  196 #>  [8958,]  180  193  196 #>  [8959,]  180  193  195 #>  [8960,]  181  194  194 #>  [8961,]  180  193  196 #>  [8962,]  180  193  196 #>  [8963,]  180  193  195 #>  [8964,]  180  193  196 #>  [8965,]  181  194  194 #>  [8966,]  180  193  195 #>  [8967,]  180  193  196 #>  [8968,]  180  193  196 #>  [8969,]  180  193  196 #>  [8970,]  181  194  194 #>  [8971,]  180  193  195 #>  [8972,]  180  193  195 #>  [8973,]  181  194  194 #>  [8974,]  180  193  196 #>  [8975,]  180  193  196 #>  [8976,]  180  193  195 #>  [8977,]  180  193  195 #>  [8978,]  180  193  195 #>  [8979,]  180  193  195 #>  [8980,]  180  193  196 #>  [8981,]  180  193  195 #>  [8982,]  180  193  196 #>  [8983,]  180  193  195 #>  [8984,]  180  193  195 #>  [8985,]  180  193  196 #>  [8986,]  180  193  195 #>  [8987,]  180  193  196 #>  [8988,]  180  193  196 #>  [8989,]  180  193  195 #>  [8990,]  180  193  195 #>  [8991,]  180  193  196 #>  [8992,]  180  193  196 #>  [8993,]  181  194  194 #>  [8994,]  180  193  195 #>  [8995,]  180  193  196 #>  [8996,]  180  193  196 #>  [8997,]  181  194  194 #>  [8998,]  181  194  194 #>  [8999,]  180  193  196 #>  [9000,]  180  193  195 #>  [9001,]  182  195  197 #>  [9002,]  183  196  198 #>  [9003,]  182  195  197 #>  [9004,]  182  195  197 #>  [9005,]  182  195  197 #>  [9006,]  182  195  197 #>  [9007,]  182  195  197 #>  [9008,]  182  195  197 #>  [9009,]  183  196  198 #>  [9010,]  183  196  198 #>  [9011,]  182  195  197 #>  [9012,]  183  196  198 #>  [9013,]  182  195  197 #>  [9014,]  182  195  197 #>  [9015,]  182  195  197 #>  [9016,]  182  195  197 #>  [9017,]  182  195  197 #>  [9018,]  182  195  197 #>  [9019,]  182  195  197 #>  [9020,]  182  195  197 #>  [9021,]  183  196  198 #>  [9022,]  182  195  197 #>  [9023,]  182  195  197 #>  [9024,]  182  195  197 #>  [9025,]  182  195  197 #>  [9026,]  182  195  197 #>  [9027,]  182  195  197 #>  [9028,]  182  195  197 #>  [9029,]  183  196  198 #>  [9030,]  182  195  197 #>  [9031,]  182  195  197 #>  [9032,]  182  195  197 #>  [9033,]  183  196  198 #>  [9034,]  182  195  197 #>  [9035,]  182  195  197 #>  [9036,]  182  195  197 #>  [9037,]  182  195  197 #>  [9038,]  182  195  197 #>  [9039,]  182  195  197 #>  [9040,]  182  195  197 #>  [9041,]  182  195  197 #>  [9042,]  182  195  197 #>  [9043,]  182  195  197 #>  [9044,]  182  195  197 #>  [9045,]  182  195  197 #>  [9046,]  182  195  197 #>  [9047,]  182  195  197 #>  [9048,]  182  195  197 #>  [9049,]  182  195  197 #>  [9050,]  182  195  197 #>  [9051,]  182  195  197 #>  [9052,]  182  195  197 #>  [9053,]  182  195  197 #>  [9054,]  182  195  197 #>  [9055,]  182  195  197 #>  [9056,]  182  195  197 #>  [9057,]  182  195  197 #>  [9058,]  182  195  197 #>  [9059,]  182  195  197 #>  [9060,]  182  195  197 #>  [9061,]  182  195  197 #>  [9062,]  182  195  197 #>  [9063,]  182  195  197 #>  [9064,]  182  195  197 #>  [9065,]  182  195  197 #>  [9066,]  182  195  197 #>  [9067,]  182  195  197 #>  [9068,]  182  195  197 #>  [9069,]  182  195  197 #>  [9070,]  183  196  198 #>  [9071,]  182  195  197 #>  [9072,]  182  195  197 #>  [9073,]  182  195  197 #>  [9074,]  182  195  197 #>  [9075,]  182  195  197 #>  [9076,]  182  195  197 #>  [9077,]  182  195  197 #>  [9078,]  182  195  197 #>  [9079,]  182  195  197 #>  [9080,]  182  195  197 #>  [9081,]  182  195  197 #>  [9082,]  182  195  197 #>  [9083,]  182  195  197 #>  [9084,]  182  195  197 #>  [9085,]  182  195  197 #>  [9086,]  183  196  198 #>  [9087,]  182  195  197 #>  [9088,]  182  195  197 #>  [9089,]  182  195  197 #>  [9090,]  182  195  197 #>  [9091,]  182  195  197 #>  [9092,]  182  195  197 #>  [9093,]  182  195  197 #>  [9094,]  182  195  197 #>  [9095,]  182  195  197 #>  [9096,]  182  195  197 #>  [9097,]  182  195  197 #>  [9098,]  182  195  197 #>  [9099,]  182  195  197 #>  [9100,]  182  195  197 #>  [9101,]  184  197  200 #>  [9102,]  184  197  200 #>  [9103,]  184  197  200 #>  [9104,]  184  197  200 #>  [9105,]  184  197  200 #>  [9106,]  184  197  200 #>  [9107,]  184  197  200 #>  [9108,]  184  197  200 #>  [9109,]  184  197  200 #>  [9110,]  184  197  200 #>  [9111,]  184  197  200 #>  [9112,]  184  197  200 #>  [9113,]  184  197  200 #>  [9114,]  184  197  200 #>  [9115,]  184  197  200 #>  [9116,]  184  197  200 #>  [9117,]  184  197  200 #>  [9118,]  185  198  199 #>  [9119,]  184  197  200 #>  [9120,]  184  197  200 #>  [9121,]  184  197  200 #>  [9122,]  184  197  200 #>  [9123,]  184  197  200 #>  [9124,]  184  197  200 #>  [9125,]  184  197  200 #>  [9126,]  184  197  200 #>  [9127,]  184  197  200 #>  [9128,]  184  197  200 #>  [9129,]  184  197  200 #>  [9130,]  184  197  200 #>  [9131,]  184  197  200 #>  [9132,]  184  197  200 #>  [9133,]  184  197  200 #>  [9134,]  184  197  200 #>  [9135,]  184  197  200 #>  [9136,]  184  197  200 #>  [9137,]  184  197  200 #>  [9138,]  184  197  200 #>  [9139,]  184  197  200 #>  [9140,]  184  197  200 #>  [9141,]  184  197  200 #>  [9142,]  185  198  199 #>  [9143,]  184  197  200 #>  [9144,]  184  197  200 #>  [9145,]  184  197  200 #>  [9146,]  184  197  200 #>  [9147,]  184  197  200 #>  [9148,]  184  197  200 #>  [9149,]  184  197  200 #>  [9150,]  184  197  200 #>  [9151,]  185  198  199 #>  [9152,]  184  197  200 #>  [9153,]  185  198  199 #>  [9154,]  184  197  200 #>  [9155,]  184  197  200 #>  [9156,]  184  197  200 #>  [9157,]  184  197  200 #>  [9158,]  184  197  200 #>  [9159,]  184  197  200 #>  [9160,]  184  197  200 #>  [9161,]  184  197  200 #>  [9162,]  184  197  200 #>  [9163,]  184  197  200 #>  [9164,]  184  197  200 #>  [9165,]  184  197  200 #>  [9166,]  184  197  200 #>  [9167,]  184  197  200 #>  [9168,]  184  197  200 #>  [9169,]  184  197  200 #>  [9170,]  184  197  200 #>  [9171,]  184  197  200 #>  [9172,]  184  197  200 #>  [9173,]  184  197  200 #>  [9174,]  184  197  200 #>  [9175,]  184  197  200 #>  [9176,]  184  197  200 #>  [9177,]  184  197  200 #>  [9178,]  184  197  200 #>  [9179,]  185  198  199 #>  [9180,]  184  197  200 #>  [9181,]  184  197  200 #>  [9182,]  184  197  200 #>  [9183,]  184  197  200 #>  [9184,]  185  198  199 #>  [9185,]  184  197  200 #>  [9186,]  184  197  200 #>  [9187,]  184  197  200 #>  [9188,]  184  197  200 #>  [9189,]  184  197  200 #>  [9190,]  184  197  200 #>  [9191,]  184  197  200 #>  [9192,]  184  197  200 #>  [9193,]  184  197  200 #>  [9194,]  185  198  199 #>  [9195,]  184  197  200 #>  [9196,]  184  197  200 #>  [9197,]  184  197  200 #>  [9198,]  184  197  200 #>  [9199,]  184  197  200 #>  [9200,]  184  197  200 #>  [9201,]  187  200  202 #>  [9202,]  186  199  201 #>  [9203,]  187  200  202 #>  [9204,]  187  200  202 #>  [9205,]  187  200  202 #>  [9206,]  186  199  201 #>  [9207,]  187  200  202 #>  [9208,]  187  200  202 #>  [9209,]  187  200  202 #>  [9210,]  187  200  202 #>  [9211,]  186  199  201 #>  [9212,]  186  199  201 #>  [9213,]  187  200  202 #>  [9214,]  187  200  202 #>  [9215,]  186  199  201 #>  [9216,]  187  200  202 #>  [9217,]  186  199  201 #>  [9218,]  187  200  202 #>  [9219,]  187  200  202 #>  [9220,]  187  200  202 #>  [9221,]  187  200  202 #>  [9222,]  187  200  202 #>  [9223,]  186  199  201 #>  [9224,]  187  200  202 #>  [9225,]  187  200  202 #>  [9226,]  187  200  202 #>  [9227,]  187  200  202 #>  [9228,]  187  200  202 #>  [9229,]  186  199  201 #>  [9230,]  187  200  202 #>  [9231,]  186  199  201 #>  [9232,]  187  200  202 #>  [9233,]  187  200  202 #>  [9234,]  186  199  201 #>  [9235,]  187  200  202 #>  [9236,]  187  200  202 #>  [9237,]  186  199  201 #>  [9238,]  187  200  202 #>  [9239,]  187  200  202 #>  [9240,]  187  200  202 #>  [9241,]  187  200  202 #>  [9242,]  186  199  201 #>  [9243,]  186  199  201 #>  [9244,]  186  199  201 #>  [9245,]  187  200  202 #>  [9246,]  187  200  202 #>  [9247,]  186  199  201 #>  [9248,]  186  199  201 #>  [9249,]  187  200  202 #>  [9250,]  187  200  202 #>  [9251,]  187  200  202 #>  [9252,]  187  200  202 #>  [9253,]  187  200  202 #>  [9254,]  187  200  202 #>  [9255,]  187  200  202 #>  [9256,]  186  199  201 #>  [9257,]  187  200  202 #>  [9258,]  187  200  202 #>  [9259,]  187  200  202 #>  [9260,]  187  200  202 #>  [9261,]  186  199  201 #>  [9262,]  187  200  202 #>  [9263,]  186  199  201 #>  [9264,]  186  199  201 #>  [9265,]  186  199  201 #>  [9266,]  187  200  202 #>  [9267,]  187  200  202 #>  [9268,]  187  200  202 #>  [9269,]  187  200  202 #>  [9270,]  186  199  201 #>  [9271,]  187  200  202 #>  [9272,]  187  200  202 #>  [9273,]  187  200  202 #>  [9274,]  187  200  202 #>  [9275,]  186  199  201 #>  [9276,]  187  200  202 #>  [9277,]  187  200  202 #>  [9278,]  186  199  201 #>  [9279,]  186  199  201 #>  [9280,]  187  200  202 #>  [9281,]  186  199  201 #>  [9282,]  187  200  202 #>  [9283,]  187  200  202 #>  [9284,]  187  200  202 #>  [9285,]  187  200  202 #>  [9286,]  187  200  202 #>  [9287,]  187  200  202 #>  [9288,]  187  200  202 #>  [9289,]  187  200  202 #>  [9290,]  187  200  202 #>  [9291,]  187  200  202 #>  [9292,]  186  199  201 #>  [9293,]  187  200  202 #>  [9294,]  186  199  201 #>  [9295,]  186  199  201 #>  [9296,]  187  200  202 #>  [9297,]  187  200  202 #>  [9298,]  187  200  202 #>  [9299,]  187  200  202 #>  [9300,]  186  199  201 #>  [9301,]  188  201  203 #>  [9302,]  188  201  203 #>  [9303,]  189  202  204 #>  [9304,]  190  202  204 #>  [9305,]  190  202  204 #>  [9306,]  188  201  203 #>  [9307,]  188  201  203 #>  [9308,]  190  202  204 #>  [9309,]  190  202  204 #>  [9310,]  189  202  204 #>  [9311,]  188  201  203 #>  [9312,]  188  201  203 #>  [9313,]  188  201  203 #>  [9314,]  188  201  203 #>  [9315,]  188  201  203 #>  [9316,]  188  201  203 #>  [9317,]  188  201  203 #>  [9318,]  190  202  204 #>  [9319,]  188  201  203 #>  [9320,]  190  202  204 #>  [9321,]  188  201  203 #>  [9322,]  188  201  203 #>  [9323,]  188  201  203 #>  [9324,]  190  202  204 #>  [9325,]  188  201  203 #>  [9326,]  188  201  203 #>  [9327,]  188  201  203 #>  [9328,]  188  201  203 #>  [9329,]  188  201  203 #>  [9330,]  190  202  204 #>  [9331,]  189  202  204 #>  [9332,]  189  202  204 #>  [9333,]  188  201  203 #>  [9334,]  188  201  203 #>  [9335,]  188  201  203 #>  [9336,]  188  201  203 #>  [9337,]  188  201  203 #>  [9338,]  188  201  203 #>  [9339,]  190  202  204 #>  [9340,]  188  201  203 #>  [9341,]  188  201  203 #>  [9342,]  188  201  203 #>  [9343,]  190  202  204 #>  [9344,]  188  201  203 #>  [9345,]  190  202  204 #>  [9346,]  188  201  203 #>  [9347,]  188  201  203 #>  [9348,]  189  202  204 #>  [9349,]  190  202  204 #>  [9350,]  188  201  203 #>  [9351,]  190  202  204 #>  [9352,]  188  201  203 #>  [9353,]  190  202  204 #>  [9354,]  188  201  203 #>  [9355,]  188  201  203 #>  [9356,]  190  202  204 #>  [9357,]  188  201  203 #>  [9358,]  188  201  203 #>  [9359,]  188  201  203 #>  [9360,]  190  202  204 #>  [9361,]  188  201  203 #>  [9362,]  190  202  204 #>  [9363,]  188  201  203 #>  [9364,]  190  202  204 #>  [9365,]  190  202  204 #>  [9366,]  190  202  204 #>  [9367,]  190  202  204 #>  [9368,]  188  201  203 #>  [9369,]  188  201  203 #>  [9370,]  188  201  203 #>  [9371,]  188  201  203 #>  [9372,]  190  202  204 #>  [9373,]  188  201  203 #>  [9374,]  188  201  203 #>  [9375,]  188  201  203 #>  [9376,]  188  201  203 #>  [9377,]  188  201  203 #>  [9378,]  190  202  204 #>  [9379,]  188  201  203 #>  [9380,]  188  201  203 #>  [9381,]  188  201  203 #>  [9382,]  188  201  203 #>  [9383,]  188  201  203 #>  [9384,]  188  201  203 #>  [9385,]  190  202  204 #>  [9386,]  188  201  203 #>  [9387,]  188  201  203 #>  [9388,]  190  202  204 #>  [9389,]  190  202  204 #>  [9390,]  188  201  203 #>  [9391,]  190  202  204 #>  [9392,]  188  201  203 #>  [9393,]  188  201  203 #>  [9394,]  188  201  203 #>  [9395,]  190  202  204 #>  [9396,]  188  201  203 #>  [9397,]  188  201  203 #>  [9398,]  188  201  203 #>  [9399,]  188  201  203 #>  [9400,]  188  201  203 #>  [9401,]  191  203  205 #>  [9402,]  191  203  205 #>  [9403,]  191  203  205 #>  [9404,]  192  204  206 #>  [9405,]  191  203  205 #>  [9406,]  191  203  205 #>  [9407,]  191  203  205 #>  [9408,]  191  203  205 #>  [9409,]  191  203  205 #>  [9410,]  192  204  206 #>  [9411,]  191  203  205 #>  [9412,]  191  203  205 #>  [9413,]  191  203  205 #>  [9414,]  191  203  205 #>  [9415,]  191  203  205 #>  [9416,]  191  203  205 #>  [9417,]  191  203  205 #>  [9418,]  192  204  206 #>  [9419,]  191  203  205 #>  [9420,]  191  203  205 #>  [9421,]  191  203  205 #>  [9422,]  191  203  205 #>  [9423,]  191  203  205 #>  [9424,]  191  203  205 #>  [9425,]  192  204  206 #>  [9426,]  191  203  205 #>  [9427,]  191  203  205 #>  [9428,]  191  203  205 #>  [9429,]  191  203  205 #>  [9430,]  191  203  205 #>  [9431,]  191  203  205 #>  [9432,]  191  203  205 #>  [9433,]  191  203  205 #>  [9434,]  191  203  205 #>  [9435,]  191  203  205 #>  [9436,]  191  203  205 #>  [9437,]  191  203  205 #>  [9438,]  191  203  205 #>  [9439,]  192  204  206 #>  [9440,]  191  203  205 #>  [9441,]  191  203  205 #>  [9442,]  191  203  205 #>  [9443,]  192  204  206 #>  [9444,]  191  203  205 #>  [9445,]  192  204  206 #>  [9446,]  191  203  205 #>  [9447,]  191  203  205 #>  [9448,]  191  203  205 #>  [9449,]  191  203  205 #>  [9450,]  191  203  205 #>  [9451,]  191  203  205 #>  [9452,]  191  203  205 #>  [9453,]  192  204  206 #>  [9454,]  191  203  205 #>  [9455,]  191  203  205 #>  [9456,]  191  203  205 #>  [9457,]  191  203  205 #>  [9458,]  191  203  205 #>  [9459,]  191  203  205 #>  [9460,]  191  203  205 #>  [9461,]  191  203  205 #>  [9462,]  191  203  205 #>  [9463,]  191  203  205 #>  [9464,]  191  203  205 #>  [9465,]  191  203  205 #>  [9466,]  191  203  205 #>  [9467,]  191  203  205 #>  [9468,]  191  203  205 #>  [9469,]  191  203  205 #>  [9470,]  191  203  205 #>  [9471,]  191  203  205 #>  [9472,]  191  203  205 #>  [9473,]  192  204  206 #>  [9474,]  192  204  206 #>  [9475,]  192  204  206 #>  [9476,]  192  204  206 #>  [9477,]  192  204  206 #>  [9478,]  191  203  205 #>  [9479,]  191  203  205 #>  [9480,]  191  203  205 #>  [9481,]  191  203  205 #>  [9482,]  191  203  205 #>  [9483,]  191  203  205 #>  [9484,]  191  203  205 #>  [9485,]  191  203  205 #>  [9486,]  191  203  205 #>  [9487,]  191  203  205 #>  [9488,]  191  203  205 #>  [9489,]  191  203  205 #>  [9490,]  191  203  205 #>  [9491,]  191  203  205 #>  [9492,]  191  203  205 #>  [9493,]  191  203  205 #>  [9494,]  191  203  205 #>  [9495,]  192  204  206 #>  [9496,]  191  203  205 #>  [9497,]  191  203  205 #>  [9498,]  191  203  205 #>  [9499,]  191  203  205 #>  [9500,]  191  203  205 #>  [9501,]  193  206  208 #>  [9502,]  193  205  207 #>  [9503,]  193  205  207 #>  [9504,]  193  206  208 #>  [9505,]  193  206  208 #>  [9506,]  193  206  208 #>  [9507,]  193  205  207 #>  [9508,]  193  206  208 #>  [9509,]  193  206  208 #>  [9510,]  193  205  207 #>  [9511,]  193  206  208 #>  [9512,]  193  206  208 #>  [9513,]  193  205  207 #>  [9514,]  193  206  208 #>  [9515,]  193  206  208 #>  [9516,]  193  205  207 #>  [9517,]  193  205  207 #>  [9518,]  193  205  207 #>  [9519,]  193  205  207 #>  [9520,]  193  206  208 #>  [9521,]  193  205  207 #>  [9522,]  193  205  207 #>  [9523,]  193  205  207 #>  [9524,]  193  205  207 #>  [9525,]  193  205  207 #>  [9526,]  193  206  208 #>  [9527,]  193  205  207 #>  [9528,]  193  206  208 #>  [9529,]  193  205  207 #>  [9530,]  193  205  207 #>  [9531,]  193  205  207 #>  [9532,]  193  205  207 #>  [9533,]  193  206  208 #>  [9534,]  193  205  207 #>  [9535,]  193  205  207 #>  [9536,]  193  205  207 #>  [9537,]  193  205  207 #>  [9538,]  193  206  208 #>  [9539,]  193  205  207 #>  [9540,]  193  205  207 #>  [9541,]  193  206  208 #>  [9542,]  193  206  208 #>  [9543,]  193  206  208 #>  [9544,]  193  205  207 #>  [9545,]  193  206  208 #>  [9546,]  193  206  208 #>  [9547,]  193  205  207 #>  [9548,]  193  205  207 #>  [9549,]  193  205  207 #>  [9550,]  193  206  208 #>  [9551,]  193  206  208 #>  [9552,]  193  206  208 #>  [9553,]  193  206  208 #>  [9554,]  193  205  207 #>  [9555,]  193  206  208 #>  [9556,]  193  206  208 #>  [9557,]  193  206  208 #>  [9558,]  193  206  208 #>  [9559,]  193  205  207 #>  [9560,]  193  206  208 #>  [9561,]  193  206  208 #>  [9562,]  193  205  207 #>  [9563,]  193  206  208 #>  [9564,]  193  206  208 #>  [9565,]  193  206  208 #>  [9566,]  193  206  208 #>  [9567,]  193  206  208 #>  [9568,]  193  206  208 #>  [9569,]  193  205  207 #>  [9570,]  193  205  207 #>  [9571,]  193  206  208 #>  [9572,]  193  206  208 #>  [9573,]  193  206  208 #>  [9574,]  193  206  208 #>  [9575,]  193  206  208 #>  [9576,]  193  206  208 #>  [9577,]  193  205  207 #>  [9578,]  193  206  208 #>  [9579,]  193  205  207 #>  [9580,]  193  205  207 #>  [9581,]  193  206  208 #>  [9582,]  193  205  207 #>  [9583,]  193  205  207 #>  [9584,]  193  206  208 #>  [9585,]  193  205  207 #>  [9586,]  193  205  207 #>  [9587,]  193  206  208 #>  [9588,]  193  206  208 #>  [9589,]  193  206  208 #>  [9590,]  193  206  208 #>  [9591,]  193  206  208 #>  [9592,]  193  206  208 #>  [9593,]  193  205  207 #>  [9594,]  193  206  208 #>  [9595,]  193  205  207 #>  [9596,]  193  206  208 #>  [9597,]  193  206  208 #>  [9598,]  193  205  207 #>  [9599,]  193  206  208 #>  [9600,]  193  205  207 #>  [9601,]  194  207  209 #>  [9602,]  194  207  209 #>  [9603,]  194  207  209 #>  [9604,]  195  208  210 #>  [9605,]  194  207  209 #>  [9606,]  194  207  209 #>  [9607,]  195  208  210 #>  [9608,]  194  207  209 #>  [9609,]  195  208  210 #>  [9610,]  195  208  210 #>  [9611,]  194  207  209 #>  [9612,]  194  207  209 #>  [9613,]  195  208  210 #>  [9614,]  195  208  210 #>  [9615,]  194  207  209 #>  [9616,]  195  208  210 #>  [9617,]  194  207  209 #>  [9618,]  194  207  209 #>  [9619,]  194  207  209 #>  [9620,]  195  208  210 #>  [9621,]  194  207  209 #>  [9622,]  195  208  210 #>  [9623,]  194  207  209 #>  [9624,]  195  208  210 #>  [9625,]  195  208  210 #>  [9626,]  194  207  209 #>  [9627,]  194  207  209 #>  [9628,]  195  208  210 #>  [9629,]  194  207  209 #>  [9630,]  194  207  209 #>  [9631,]  194  207  209 #>  [9632,]  194  207  209 #>  [9633,]  194  207  209 #>  [9634,]  194  207  209 #>  [9635,]  194  207  209 #>  [9636,]  195  208  210 #>  [9637,]  194  207  209 #>  [9638,]  194  207  209 #>  [9639,]  195  208  210 #>  [9640,]  194  207  209 #>  [9641,]  194  207  209 #>  [9642,]  194  207  209 #>  [9643,]  194  207  209 #>  [9644,]  194  207  209 #>  [9645,]  194  207  209 #>  [9646,]  194  207  209 #>  [9647,]  194  207  209 #>  [9648,]  194  207  209 #>  [9649,]  194  207  209 #>  [9650,]  195  208  210 #>  [9651,]  194  207  209 #>  [9652,]  195  208  210 #>  [9653,]  194  207  209 #>  [9654,]  195  208  210 #>  [9655,]  195  208  210 #>  [9656,]  194  207  209 #>  [9657,]  195  208  210 #>  [9658,]  194  207  209 #>  [9659,]  195  208  210 #>  [9660,]  194  207  209 #>  [9661,]  194  207  209 #>  [9662,]  194  207  209 #>  [9663,]  194  207  209 #>  [9664,]  194  207  209 #>  [9665,]  194  207  209 #>  [9666,]  194  207  209 #>  [9667,]  195  208  210 #>  [9668,]  194  207  209 #>  [9669,]  194  207  209 #>  [9670,]  194  207  209 #>  [9671,]  194  207  209 #>  [9672,]  194  207  209 #>  [9673,]  195  208  210 #>  [9674,]  194  207  209 #>  [9675,]  194  207  209 #>  [9676,]  195  208  210 #>  [9677,]  194  207  209 #>  [9678,]  194  207  209 #>  [9679,]  194  207  209 #>  [9680,]  194  207  209 #>  [9681,]  194  207  209 #>  [9682,]  194  207  209 #>  [9683,]  194  207  209 #>  [9684,]  194  207  209 #>  [9685,]  194  207  209 #>  [9686,]  195  208  210 #>  [9687,]  194  207  209 #>  [9688,]  194  207  209 #>  [9689,]  194  207  209 #>  [9690,]  195  208  210 #>  [9691,]  195  208  210 #>  [9692,]  194  207  209 #>  [9693,]  194  207  209 #>  [9694,]  194  207  209 #>  [9695,]  194  207  209 #>  [9696,]  194  207  209 #>  [9697,]  194  207  209 #>  [9698,]  194  207  209 #>  [9699,]  194  207  209 #>  [9700,]  194  207  209 #>  [9701,]  197  210  211 #>  [9702,]  196  209  212 #>  [9703,]  196  209  212 #>  [9704,]  197  210  211 #>  [9705,]  197  210  211 #>  [9706,]  197  210  211 #>  [9707,]  196  209  212 #>  [9708,]  197  210  211 #>  [9709,]  197  210  211 #>  [9710,]  197  210  211 #>  [9711,]  197  210  211 #>  [9712,]  197  210  211 #>  [9713,]  196  209  212 #>  [9714,]  197  210  211 #>  [9715,]  197  210  211 #>  [9716,]  196  209  212 #>  [9717,]  197  210  211 #>  [9718,]  196  209  212 #>  [9719,]  196  209  212 #>  [9720,]  197  210  211 #>  [9721,]  196  209  212 #>  [9722,]  196  209  212 #>  [9723,]  196  209  212 #>  [9724,]  196  209  212 #>  [9725,]  197  210  211 #>  [9726,]  197  210  211 #>  [9727,]  197  210  211 #>  [9728,]  197  210  211 #>  [9729,]  196  209  212 #>  [9730,]  196  209  212 #>  [9731,]  196  209  212 #>  [9732,]  196  209  212 #>  [9733,]  197  210  211 #>  [9734,]  196  209  212 #>  [9735,]  196  209  212 #>  [9736,]  196  209  212 #>  [9737,]  196  209  212 #>  [9738,]  197  210  211 #>  [9739,]  196  209  212 #>  [9740,]  196  209  212 #>  [9741,]  197  210  211 #>  [9742,]  197  210  211 #>  [9743,]  197  210  211 #>  [9744,]  196  209  212 #>  [9745,]  197  210  211 #>  [9746,]  197  210  211 #>  [9747,]  196  209  212 #>  [9748,]  196  209  212 #>  [9749,]  196  209  212 #>  [9750,]  197  210  211 #>  [9751,]  197  210  211 #>  [9752,]  197  210  211 #>  [9753,]  197  210  211 #>  [9754,]  196  209  212 #>  [9755,]  197  210  211 #>  [9756,]  197  210  211 #>  [9757,]  197  210  211 #>  [9758,]  197  210  211 #>  [9759,]  196  209  212 #>  [9760,]  197  210  211 #>  [9761,]  197  210  211 #>  [9762,]  196  209  212 #>  [9763,]  197  210  211 #>  [9764,]  197  210  211 #>  [9765,]  197  210  211 #>  [9766,]  197  210  211 #>  [9767,]  197  210  211 #>  [9768,]  197  210  211 #>  [9769,]  197  210  211 #>  [9770,]  196  209  212 #>  [9771,]  197  210  211 #>  [9772,]  197  210  211 #>  [9773,]  197  210  211 #>  [9774,]  197  210  211 #>  [9775,]  197  210  211 #>  [9776,]  197  210  211 #>  [9777,]  196  209  212 #>  [9778,]  197  210  211 #>  [9779,]  196  209  212 #>  [9780,]  196  209  212 #>  [9781,]  197  210  211 #>  [9782,]  197  210  211 #>  [9783,]  196  209  212 #>  [9784,]  197  210  211 #>  [9785,]  196  209  212 #>  [9786,]  196  209  212 #>  [9787,]  197  210  211 #>  [9788,]  197  210  211 #>  [9789,]  197  210  211 #>  [9790,]  197  210  211 #>  [9791,]  197  210  211 #>  [9792,]  197  210  211 #>  [9793,]  196  209  212 #>  [9794,]  197  210  211 #>  [9795,]  196  209  212 #>  [9796,]  197  210  211 #>  [9797,]  197  210  211 #>  [9798,]  196  209  212 #>  [9799,]  197  210  211 #>  [9800,]  196  209  212 #>  [9801,]  199  212  214 #>  [9802,]  199  212  214 #>  [9803,]  198  211  213 #>  [9804,]  199  212  214 #>  [9805,]  199  212  214 #>  [9806,]  199  212  214 #>  [9807,]  198  211  213 #>  [9808,]  198  211  213 #>  [9809,]  199  212  214 #>  [9810,]  199  212  214 #>  [9811,]  199  212  214 #>  [9812,]  199  212  214 #>  [9813,]  199  212  214 #>  [9814,]  199  212  214 #>  [9815,]  199  212  214 #>  [9816,]  199  212  214 #>  [9817,]  199  212  214 #>  [9818,]  199  212  214 #>  [9819,]  199  212  214 #>  [9820,]  198  211  213 #>  [9821,]  199  212  214 #>  [9822,]  199  212  214 #>  [9823,]  199  212  214 #>  [9824,]  199  212  214 #>  [9825,]  198  211  213 #>  [9826,]  199  212  214 #>  [9827,]  199  212  214 #>  [9828,]  199  212  214 #>  [9829,]  199  212  214 #>  [9830,]  199  212  214 #>  [9831,]  199  212  214 #>  [9832,]  199  212  214 #>  [9833,]  199  212  214 #>  [9834,]  199  212  214 #>  [9835,]  199  212  214 #>  [9836,]  199  212  214 #>  [9837,]  199  212  214 #>  [9838,]  199  212  214 #>  [9839,]  198  211  213 #>  [9840,]  199  212  214 #>  [9841,]  199  212  214 #>  [9842,]  199  212  214 #>  [9843,]  199  212  214 #>  [9844,]  198  211  213 #>  [9845,]  199  212  214 #>  [9846,]  199  212  214 #>  [9847,]  199  212  214 #>  [9848,]  199  212  214 #>  [9849,]  198  211  213 #>  [9850,]  198  211  213 #>  [9851,]  199  212  214 #>  [9852,]  199  212  214 #>  [9853,]  198  211  213 #>  [9854,]  199  212  214 #>  [9855,]  198  211  213 #>  [9856,]  198  211  213 #>  [9857,]  199  212  214 #>  [9858,]  199  212  214 #>  [9859,]  198  211  213 #>  [9860,]  199  212  214 #>  [9861,]  199  212  214 #>  [9862,]  199  212  214 #>  [9863,]  199  212  214 #>  [9864,]  199  212  214 #>  [9865,]  198  211  213 #>  [9866,]  198  211  213 #>  [9867,]  199  212  214 #>  [9868,]  199  212  214 #>  [9869,]  199  212  214 #>  [9870,]  199  212  214 #>  [9871,]  199  212  214 #>  [9872,]  199  212  214 #>  [9873,]  199  212  214 #>  [9874,]  199  212  214 #>  [9875,]  199  212  214 #>  [9876,]  199  212  214 #>  [9877,]  199  212  214 #>  [9878,]  199  212  214 #>  [9879,]  199  212  214 #>  [9880,]  199  212  214 #>  [9881,]  199  212  214 #>  [9882,]  199  212  214 #>  [9883,]  199  212  214 #>  [9884,]  198  211  213 #>  [9885,]  199  212  214 #>  [9886,]  198  211  213 #>  [9887,]  199  212  214 #>  [9888,]  199  212  214 #>  [9889,]  199  212  214 #>  [9890,]  198  211  213 #>  [9891,]  199  212  214 #>  [9892,]  199  212  214 #>  [9893,]  199  212  214 #>  [9894,]  199  212  214 #>  [9895,]  199  212  214 #>  [9896,]  199  212  214 #>  [9897,]  199  212  214 #>  [9898,]  198  211  213 #>  [9899,]  199  212  214 #>  [9900,]  198  211  213 #>  [9901,]  200  213  215 #>  [9902,]  200  213  215 #>  [9903,]  200  213  215 #>  [9904,]  200  213  215 #>  [9905,]  200  213  215 #>  [9906,]  200  213  215 #>  [9907,]  200  213  215 #>  [9908,]  201  214  216 #>  [9909,]  200  213  215 #>  [9910,]  200  213  215 #>  [9911,]  200  213  215 #>  [9912,]  200  213  215 #>  [9913,]  201  214  217 #>  [9914,]  200  213  215 #>  [9915,]  201  214  216 #>  [9916,]  200  213  215 #>  [9917,]  200  213  215 #>  [9918,]  200  213  215 #>  [9919,]  201  214  217 #>  [9920,]  201  214  217 #>  [9921,]  200  213  215 #>  [9922,]  201  214  217 #>  [9923,]  200  213  215 #>  [9924,]  200  213  215 #>  [9925,]  200  213  215 #>  [9926,]  200  213  215 #>  [9927,]  201  214  217 #>  [9928,]  200  213  215 #>  [9929,]  201  214  217 #>  [9930,]  200  213  215 #>  [9931,]  200  213  215 #>  [9932,]  200  213  215 #>  [9933,]  200  213  215 #>  [9934,]  200  213  215 #>  [9935,]  200  213  215 #>  [9936,]  201  214  217 #>  [9937,]  201  214  216 #>  [9938,]  201  214  217 #>  [9939,]  200  213  215 #>  [9940,]  200  213  215 #>  [9941,]  201  214  217 #>  [9942,]  200  213  215 #>  [9943,]  200  213  215 #>  [9944,]  200  213  215 #>  [9945,]  200  213  215 #>  [9946,]  201  214  216 #>  [9947,]  200  213  215 #>  [9948,]  200  213  215 #>  [9949,]  200  213  215 #>  [9950,]  201  214  217 #>  [9951,]  201  214  217 #>  [9952,]  200  213  215 #>  [9953,]  201  214  217 #>  [9954,]  200  213  215 #>  [9955,]  201  214  216 #>  [9956,]  200  213  215 #>  [9957,]  200  213  215 #>  [9958,]  201  214  217 #>  [9959,]  200  213  215 #>  [9960,]  201  214  216 #>  [9961,]  200  213  215 #>  [9962,]  200  213  215 #>  [9963,]  200  213  215 #>  [9964,]  201  214  217 #>  [9965,]  200  213  215 #>  [9966,]  201  214  217 #>  [9967,]  200  213  215 #>  [9968,]  200  213  215 #>  [9969,]  201  214  216 #>  [9970,]  200  213  215 #>  [9971,]  201  214  216 #>  [9972,]  200  213  215 #>  [9973,]  200  213  215 #>  [9974,]  200  213  215 #>  [9975,]  200  213  215 #>  [9976,]  200  213  215 #>  [9977,]  201  214  217 #>  [9978,]  200  213  215 #>  [9979,]  200  213  215 #>  [9980,]  201  214  216 #>  [9981,]  201  214  217 #>  [9982,]  200  213  215 #>  [9983,]  201  214  217 #>  [9984,]  201  214  217 #>  [9985,]  201  214  217 #>  [9986,]  200  213  215 #>  [9987,]  201  214  217 #>  [9988,]  200  213  215 #>  [9989,]  200  213  215 #>  [9990,]  201  214  217 #>  [9991,]  200  213  215 #>  [9992,]  200  213  215 #>  [9993,]  200  213  215 #>  [9994,]  200  213  215 #>  [9995,]  200  213  215 #>  [9996,]  201  214  216 #>  [9997,]  201  214  216 #>  [9998,]  200  213  215 #>  [9999,]  200  213  215 #> [10000,]  201  214  217 #> [10001,]  202  216  219 #> [10002,]  202  216  219 #> [10003,]  202  216  219 #> [10004,]  202  215  218 #> [10005,]  202  216  219 #> [10006,]  202  216  219 #> [10007,]  202  216  219 #> [10008,]  202  215  218 #> [10009,]  202  215  218 #> [10010,]  202  215  218 #> [10011,]  202  216  219 #> [10012,]  202  216  219 #> [10013,]  202  216  219 #> [10014,]  202  216  219 #> [10015,]  202  216  219 #> [10016,]  202  216  219 #> [10017,]  202  216  219 #> [10018,]  202  216  219 #> [10019,]  202  216  219 #> [10020,]  202  216  219 #> [10021,]  202  216  219 #> [10022,]  202  216  219 #> [10023,]  202  216  219 #> [10024,]  202  216  219 #> [10025,]  202  216  219 #> [10026,]  202  216  219 #> [10027,]  202  216  219 #> [10028,]  202  216  219 #> [10029,]  202  216  219 #> [10030,]  202  216  219 #> [10031,]  202  216  219 #> [10032,]  202  216  219 #> [10033,]  202  216  219 #> [10034,]  202  216  219 #> [10035,]  202  216  219 #> [10036,]  202  216  219 #> [10037,]  202  216  219 #> [10038,]  202  216  219 #> [10039,]  202  216  219 #> [10040,]  202  216  219 #> [10041,]  202  216  219 #> [10042,]  202  216  219 #> [10043,]  202  215  218 #> [10044,]  202  216  219 #> [10045,]  202  216  219 #> [10046,]  202  216  219 #> [10047,]  202  216  219 #> [10048,]  202  216  219 #> [10049,]  202  216  219 #> [10050,]  202  216  219 #> [10051,]  202  215  218 #> [10052,]  202  216  219 #> [10053,]  202  216  219 #> [10054,]  202  216  219 #> [10055,]  202  216  219 #> [10056,]  202  216  219 #> [10057,]  202  216  219 #> [10058,]  202  216  219 #> [10059,]  202  216  219 #> [10060,]  202  215  218 #> [10061,]  202  216  219 #> [10062,]  202  216  219 #> [10063,]  202  216  219 #> [10064,]  202  215  218 #> [10065,]  202  216  219 #> [10066,]  202  216  219 #> [10067,]  202  215  218 #> [10068,]  202  216  219 #> [10069,]  202  216  219 #> [10070,]  202  216  219 #> [10071,]  202  216  219 #> [10072,]  202  216  219 #> [10073,]  202  216  219 #> [10074,]  202  216  219 #> [10075,]  202  216  219 #> [10076,]  202  216  219 #> [10077,]  202  216  219 #> [10078,]  202  216  219 #> [10079,]  202  216  219 #> [10080,]  202  216  219 #> [10081,]  202  216  219 #> [10082,]  202  216  219 #> [10083,]  202  216  219 #> [10084,]  202  216  219 #> [10085,]  202  215  218 #> [10086,]  202  216  219 #> [10087,]  202  216  219 #> [10088,]  202  216  219 #> [10089,]  202  216  219 #> [10090,]  202  216  219 #> [10091,]  202  215  218 #> [10092,]  202  216  219 #> [10093,]  202  216  219 #> [10094,]  202  216  219 #> [10095,]  202  215  218 #> [10096,]  202  216  219 #> [10097,]  202  216  219 #> [10098,]  202  216  219 #> [10099,]  202  216  219 #> [10100,]  202  216  219 #> [10101,]  203  217  220 #> [10102,]  204  218  221 #> [10103,]  204  218  221 #> [10104,]  203  217  220 #> [10105,]  203  217  220 #> [10106,]  204  218  221 #> [10107,]  203  217  220 #> [10108,]  203  217  220 #> [10109,]  203  217  220 #> [10110,]  203  217  220 #> [10111,]  203  217  220 #> [10112,]  204  218  221 #> [10113,]  203  217  220 #> [10114,]  203  217  220 #> [10115,]  203  217  220 #> [10116,]  203  217  220 #> [10117,]  203  217  220 #> [10118,]  204  218  221 #> [10119,]  204  218  221 #> [10120,]  204  218  221 #> [10121,]  203  217  220 #> [10122,]  203  217  220 #> [10123,]  203  217  220 #> [10124,]  203  217  220 #> [10125,]  204  218  221 #> [10126,]  203  217  220 #> [10127,]  203  217  220 #> [10128,]  204  218  221 #> [10129,]  203  217  220 #> [10130,]  203  217  220 #> [10131,]  204  218  221 #> [10132,]  204  218  221 #> [10133,]  204  218  221 #> [10134,]  204  218  221 #> [10135,]  203  217  220 #> [10136,]  203  217  220 #> [10137,]  203  217  220 #> [10138,]  203  217  220 #> [10139,]  203  217  220 #> [10140,]  203  217  220 #> [10141,]  203  217  220 #> [10142,]  204  218  221 #> [10143,]  203  217  220 #> [10144,]  203  217  220 #> [10145,]  203  217  220 #> [10146,]  203  217  220 #> [10147,]  203  217  220 #> [10148,]  203  217  220 #> [10149,]  203  217  220 #> [10150,]  203  217  220 #> [10151,]  203  217  220 #> [10152,]  203  217  220 #> [10153,]  203  217  220 #> [10154,]  203  217  220 #> [10155,]  203  217  220 #> [10156,]  203  217  220 #> [10157,]  203  217  220 #> [10158,]  203  217  220 #> [10159,]  203  217  220 #> [10160,]  204  218  221 #> [10161,]  203  217  220 #> [10162,]  203  217  220 #> [10163,]  203  217  220 #> [10164,]  204  218  221 #> [10165,]  204  218  221 #> [10166,]  203  217  220 #> [10167,]  203  217  220 #> [10168,]  203  217  220 #> [10169,]  203  217  220 #> [10170,]  204  218  221 #> [10171,]  204  218  221 #> [10172,]  203  217  220 #> [10173,]  204  218  221 #> [10174,]  203  217  220 #> [10175,]  203  217  220 #> [10176,]  203  217  220 #> [10177,]  203  217  220 #> [10178,]  203  217  220 #> [10179,]  203  217  220 #> [10180,]  203  217  220 #> [10181,]  203  217  220 #> [10182,]  203  217  220 #> [10183,]  203  217  220 #> [10184,]  204  218  221 #> [10185,]  203  217  220 #> [10186,]  203  217  220 #> [10187,]  203  217  220 #> [10188,]  203  217  220 #> [10189,]  203  217  220 #> [10190,]  203  217  220 #> [10191,]  203  217  220 #> [10192,]  203  217  220 #> [10193,]  204  218  221 #> [10194,]  203  217  220 #> [10195,]  203  217  220 #> [10196,]  203  217  220 #> [10197,]  204  218  221 #> [10198,]  204  218  221 #> [10199,]  203  217  220 #> [10200,]  204  218  221 #> [10201,]  205  219  223 #> [10202,]  205  219  223 #> [10203,]  205  219  223 #> [10204,]  206  220  222 #> [10205,]  205  219  223 #> [10206,]  205  219  223 #> [10207,]  205  219  223 #> [10208,]  205  219  223 #> [10209,]  205  219  223 #> [10210,]  205  219  223 #> [10211,]  206  220  222 #> [10212,]  206  220  222 #> [10213,]  205  219  223 #> [10214,]  206  220  222 #> [10215,]  206  220  222 #> [10216,]  205  219  223 #> [10217,]  205  219  223 #> [10218,]  205  219  223 #> [10219,]  206  220  222 #> [10220,]  205  219  223 #> [10221,]  206  220  222 #> [10222,]  205  219  223 #> [10223,]  205  219  223 #> [10224,]  205  219  223 #> [10225,]  205  219  223 #> [10226,]  205  219  223 #> [10227,]  206  220  222 #> [10228,]  205  219  223 #> [10229,]  205  219  223 #> [10230,]  205  219  223 #> [10231,]  205  219  223 #> [10232,]  205  219  223 #> [10233,]  205  219  223 #> [10234,]  205  219  223 #> [10235,]  205  219  223 #> [10236,]  205  219  223 #> [10237,]  205  219  223 #> [10238,]  206  220  222 #> [10239,]  205  219  223 #> [10240,]  205  219  223 #> [10241,]  206  220  222 #> [10242,]  206  220  222 #> [10243,]  205  219  223 #> [10244,]  205  219  223 #> [10245,]  205  219  223 #> [10246,]  205  219  223 #> [10247,]  205  219  223 #> [10248,]  206  220  222 #> [10249,]  205  219  223 #> [10250,]  205  219  223 #> [10251,]  205  219  223 #> [10252,]  205  219  223 #> [10253,]  205  219  223 #> [10254,]  205  219  223 #> [10255,]  205  219  223 #> [10256,]  205  219  223 #> [10257,]  205  219  223 #> [10258,]  205  219  223 #> [10259,]  205  219  223 #> [10260,]  205  219  223 #> [10261,]  206  220  222 #> [10262,]  205  219  223 #> [10263,]  205  219  223 #> [10264,]  205  219  223 #> [10265,]  205  219  223 #> [10266,]  205  219  223 #> [10267,]  205  219  223 #> [10268,]  206  220  222 #> [10269,]  206  220  222 #> [10270,]  205  219  223 #> [10271,]  205  219  223 #> [10272,]  205  219  223 #> [10273,]  205  219  223 #> [10274,]  206  220  222 #> [10275,]  206  220  222 #> [10276,]  205  219  223 #> [10277,]  205  219  223 #> [10278,]  205  219  223 #> [10279,]  205  219  223 #> [10280,]  205  219  223 #> [10281,]  205  219  223 #> [10282,]  206  220  222 #> [10283,]  205  219  223 #> [10284,]  205  219  223 #> [10285,]  205  219  223 #> [10286,]  205  219  223 #> [10287,]  205  219  223 #> [10288,]  205  219  223 #> [10289,]  205  219  223 #> [10290,]  205  219  223 #> [10291,]  205  219  223 #> [10292,]  206  220  222 #> [10293,]  206  220  222 #> [10294,]  205  219  223 #> [10295,]  205  219  223 #> [10296,]  206  220  222 #> [10297,]  206  220  222 #> [10298,]  205  219  223 #> [10299,]  205  219  223 #> [10300,]  205  219  223 #> [10301,]  207  221  224 #> [10302,]  207  221  224 #> [10303,]  207  223  225 #> [10304,]  207  221  224 #> [10305,]  207  221  224 #> [10306,]  207  223  225 #> [10307,]  207  223  225 #> [10308,]  207  221  224 #> [10309,]  207  221  224 #> [10310,]  207  221  224 #> [10311,]  207  221  224 #> [10312,]  207  221  224 #> [10313,]  207  221  224 #> [10314,]  207  221  224 #> [10315,]  207  221  224 #> [10316,]  207  221  224 #> [10317,]  207  221  224 #> [10318,]  207  221  224 #> [10319,]  207  221  224 #> [10320,]  207  222  225 #> [10321,]  207  222  225 #> [10322,]  207  221  224 #> [10323,]  207  223  225 #> [10324,]  207  221  224 #> [10325,]  207  222  225 #> [10326,]  207  221  224 #> [10327,]  207  221  224 #> [10328,]  207  221  224 #> [10329,]  207  223  225 #> [10330,]  207  221  224 #> [10331,]  207  221  224 #> [10332,]  207  221  224 #> [10333,]  207  221  224 #> [10334,]  207  223  225 #> [10335,]  207  223  225 #> [10336,]  207  223  225 #> [10337,]  207  223  225 #> [10338,]  207  221  224 #> [10339,]  207  221  224 #> [10340,]  207  221  224 #> [10341,]  207  223  225 #> [10342,]  207  223  225 #> [10343,]  207  221  224 #> [10344,]  207  223  225 #> [10345,]  207  223  225 #> [10346,]  207  221  224 #> [10347,]  207  221  224 #> [10348,]  207  221  224 #> [10349,]  207  221  224 #> [10350,]  207  223  225 #> [10351,]  207  221  224 #> [10352,]  207  221  224 #> [10353,]  207  223  225 #> [10354,]  207  223  225 #> [10355,]  207  223  225 #> [10356,]  207  222  225 #> [10357,]  207  223  225 #> [10358,]  207  221  224 #> [10359,]  207  221  224 #> [10360,]  207  223  225 #> [10361,]  207  221  224 #> [10362,]  207  221  224 #> [10363,]  207  221  224 #> [10364,]  207  223  225 #> [10365,]  207  222  225 #> [10366,]  207  221  224 #> [10367,]  207  221  224 #> [10368,]  207  221  224 #> [10369,]  207  221  224 #> [10370,]  207  221  224 #> [10371,]  207  221  224 #> [10372,]  207  221  224 #> [10373,]  207  223  225 #> [10374,]  207  222  225 #> [10375,]  207  221  224 #> [10376,]  207  221  224 #> [10377,]  207  221  224 #> [10378,]  207  221  224 #> [10379,]  207  221  224 #> [10380,]  207  222  225 #> [10381,]  207  223  225 #> [10382,]  207  223  225 #> [10383,]  207  221  224 #> [10384,]  207  223  225 #> [10385,]  207  222  225 #> [10386,]  207  222  225 #> [10387,]  207  221  224 #> [10388,]  207  223  225 #> [10389,]  207  222  225 #> [10390,]  207  221  224 #> [10391,]  207  221  224 #> [10392,]  207  221  224 #> [10393,]  207  221  224 #> [10394,]  207  223  225 #> [10395,]  207  221  224 #> [10396,]  207  221  224 #> [10397,]  207  223  225 #> [10398,]  207  223  225 #> [10399,]  207  223  225 #> [10400,]  207  221  224 #> [10401,]  209  225  228 #> [10402,]  208  224  226 #> [10403,]  208  224  226 #> [10404,]  209  225  228 #> [10405,]  208  224  226 #> [10406,]  208  224  226 #> [10407,]  209  225  227 #> [10408,]  208  224  226 #> [10409,]  208  224  226 #> [10410,]  209  225  228 #> [10411,]  208  224  226 #> [10412,]  208  224  226 #> [10413,]  209  225  227 #> [10414,]  208  224  226 #> [10415,]  209  225  228 #> [10416,]  209  225  227 #> [10417,]  209  225  227 #> [10418,]  209  225  228 #> [10419,]  208  224  226 #> [10420,]  208  224  226 #> [10421,]  209  225  228 #> [10422,]  208  224  226 #> [10423,]  209  225  228 #> [10424,]  208  224  226 #> [10425,]  209  225  227 #> [10426,]  208  224  226 #> [10427,]  209  225  228 #> [10428,]  209  225  228 #> [10429,]  208  224  226 #> [10430,]  208  224  226 #> [10431,]  208  224  226 #> [10432,]  208  224  226 #> [10433,]  208  224  226 #> [10434,]  208  224  226 #> [10435,]  208  224  226 #> [10436,]  208  224  226 #> [10437,]  208  224  226 #> [10438,]  208  224  226 #> [10439,]  209  225  227 #> [10440,]  208  224  226 #> [10441,]  208  224  226 #> [10442,]  208  224  226 #> [10443,]  209  225  227 #> [10444,]  208  224  226 #> [10445,]  209  225  227 #> [10446,]  209  225  227 #> [10447,]  209  225  227 #> [10448,]  208  224  226 #> [10449,]  208  224  226 #> [10450,]  208  224  226 #> [10451,]  208  224  226 #> [10452,]  208  224  226 #> [10453,]  209  225  227 #> [10454,]  208  224  226 #> [10455,]  208  224  226 #> [10456,]  209  225  227 #> [10457,]  208  224  226 #> [10458,]  208  224  226 #> [10459,]  208  224  226 #> [10460,]  208  224  226 #> [10461,]  209  225  228 #> [10462,]  208  224  226 #> [10463,]  208  224  226 #> [10464,]  209  225  228 #> [10465,]  208  224  226 #> [10466,]  208  224  226 #> [10467,]  208  224  226 #> [10468,]  208  224  226 #> [10469,]  208  224  226 #> [10470,]  208  224  226 #> [10471,]  209  225  228 #> [10472,]  209  225  227 #> [10473,]  209  225  228 #> [10474,]  209  225  228 #> [10475,]  209  225  228 #> [10476,]  209  225  228 #> [10477,]  209  225  227 #> [10478,]  208  224  226 #> [10479,]  208  224  226 #> [10480,]  208  224  226 #> [10481,]  208  224  226 #> [10482,]  209  225  228 #> [10483,]  208  224  226 #> [10484,]  209  225  227 #> [10485,]  208  224  226 #> [10486,]  208  224  226 #> [10487,]  208  224  226 #> [10488,]  209  225  228 #> [10489,]  208  224  226 #> [10490,]  208  224  226 #> [10491,]  208  224  226 #> [10492,]  208  224  226 #> [10493,]  208  224  226 #> [10494,]  209  225  227 #> [10495,]  209  225  228 #> [10496,]  208  224  226 #> [10497,]  208  224  226 #> [10498,]  208  224  226 #> [10499,]  208  224  226 #> [10500,]  209  225  227 #> [10501,]  210  226  229 #> [10502,]  210  226  229 #> [10503,]  210  226  229 #> [10504,]  211  227  230 #> [10505,]  210  226  229 #> [10506,]  210  226  229 #> [10507,]  210  226  229 #> [10508,]  210  226  229 #> [10509,]  210  226  229 #> [10510,]  211  227  230 #> [10511,]  210  226  229 #> [10512,]  210  226  229 #> [10513,]  210  226  229 #> [10514,]  210  226  229 #> [10515,]  210  226  229 #> [10516,]  210  226  229 #> [10517,]  210  226  229 #> [10518,]  211  227  230 #> [10519,]  210  226  229 #> [10520,]  210  226  229 #> [10521,]  210  226  229 #> [10522,]  210  226  229 #> [10523,]  210  226  229 #> [10524,]  210  226  229 #> [10525,]  211  227  230 #> [10526,]  210  226  229 #> [10527,]  210  226  229 #> [10528,]  210  226  229 #> [10529,]  210  226  229 #> [10530,]  210  226  229 #> [10531,]  210  226  229 #> [10532,]  210  226  229 #> [10533,]  210  226  229 #> [10534,]  210  226  229 #> [10535,]  210  226  229 #> [10536,]  210  226  229 #> [10537,]  210  226  229 #> [10538,]  210  226  229 #> [10539,]  211  227  230 #> [10540,]  210  226  229 #> [10541,]  210  226  229 #> [10542,]  210  226  229 #> [10543,]  211  227  230 #> [10544,]  210  226  229 #> [10545,]  211  227  230 #> [10546,]  210  226  229 #> [10547,]  210  226  229 #> [10548,]  210  226  229 #> [10549,]  210  226  229 #> [10550,]  210  226  229 #> [10551,]  210  226  229 #> [10552,]  210  226  229 #> [10553,]  210  226  229 #> [10554,]  210  226  229 #> [10555,]  210  226  229 #> [10556,]  210  226  229 #> [10557,]  210  226  229 #> [10558,]  210  226  229 #> [10559,]  210  226  229 #> [10560,]  210  226  229 #> [10561,]  210  226  229 #> [10562,]  210  226  229 #> [10563,]  210  226  229 #> [10564,]  210  226  229 #> [10565,]  210  226  229 #> [10566,]  210  226  229 #> [10567,]  210  226  229 #> [10568,]  210  226  229 #> [10569,]  210  226  229 #> [10570,]  210  226  229 #> [10571,]  210  226  229 #> [10572,]  210  226  229 #> [10573,]  211  227  230 #> [10574,]  211  227  230 #> [10575,]  211  227  230 #> [10576,]  211  227  230 #> [10577,]  211  227  230 #> [10578,]  210  226  229 #> [10579,]  210  226  229 #> [10580,]  210  226  229 #> [10581,]  210  226  229 #> [10582,]  210  226  229 #> [10583,]  210  226  229 #> [10584,]  210  226  229 #> [10585,]  210  226  229 #> [10586,]  210  226  229 #> [10587,]  210  226  229 #> [10588,]  210  226  229 #> [10589,]  210  226  229 #> [10590,]  210  226  229 #> [10591,]  210  226  229 #> [10592,]  210  226  229 #> [10593,]  210  226  229 #> [10594,]  210  226  229 #> [10595,]  210  226  229 #> [10596,]  210  226  229 #> [10597,]  210  226  229 #> [10598,]  210  226  229 #> [10599,]  210  226  229 #> [10600,]  210  226  229 #> [10601,]  212  228  231 #> [10602,]  212  228  231 #> [10603,]  212  228  231 #> [10604,]  213  229  232 #> [10605,]  212  228  231 #> [10606,]  212  228  231 #> [10607,]  212  228  231 #> [10608,]  212  228  231 #> [10609,]  212  228  231 #> [10610,]  212  228  231 #> [10611,]  212  228  231 #> [10612,]  214  229  232 #> [10613,]  212  228  231 #> [10614,]  214  229  232 #> [10615,]  212  228  231 #> [10616,]  212  228  231 #> [10617,]  212  228  231 #> [10618,]  212  228  231 #> [10619,]  213  229  232 #> [10620,]  212  228  231 #> [10621,]  212  228  231 #> [10622,]  212  228  231 #> [10623,]  212  228  231 #> [10624,]  212  228  231 #> [10625,]  212  228  231 #> [10626,]  212  228  231 #> [10627,]  213  229  232 #> [10628,]  212  228  231 #> [10629,]  212  228  231 #> [10630,]  212  228  231 #> [10631,]  212  228  231 #> [10632,]  212  228  231 #> [10633,]  212  228  231 #> [10634,]  212  228  231 #> [10635,]  212  228  231 #> [10636,]  212  228  231 #> [10637,]  212  228  231 #> [10638,]  212  228  231 #> [10639,]  212  228  231 #> [10640,]  212  228  231 #> [10641,]  214  229  232 #> [10642,]  212  228  231 #> [10643,]  212  228  231 #> [10644,]  212  228  231 #> [10645,]  212  228  231 #> [10646,]  212  228  231 #> [10647,]  212  228  231 #> [10648,]  213  229  232 #> [10649,]  212  228  231 #> [10650,]  212  228  231 #> [10651,]  212  228  231 #> [10652,]  212  228  231 #> [10653,]  212  228  231 #> [10654,]  212  228  231 #> [10655,]  212  228  231 #> [10656,]  212  228  231 #> [10657,]  212  228  231 #> [10658,]  212  228  231 #> [10659,]  212  228  231 #> [10660,]  212  228  231 #> [10661,]  214  229  232 #> [10662,]  212  228  231 #> [10663,]  212  228  231 #> [10664,]  212  228  231 #> [10665,]  212  228  231 #> [10666,]  212  228  231 #> [10667,]  212  228  231 #> [10668,]  212  228  231 #> [10669,]  213  229  232 #> [10670,]  212  228  231 #> [10671,]  212  228  231 #> [10672,]  212  228  231 #> [10673,]  212  228  231 #> [10674,]  212  228  231 #> [10675,]  212  228  231 #> [10676,]  212  228  231 #> [10677,]  212  228  231 #> [10678,]  212  228  231 #> [10679,]  212  228  231 #> [10680,]  212  228  231 #> [10681,]  212  228  231 #> [10682,]  213  229  232 #> [10683,]  212  228  231 #> [10684,]  212  228  231 #> [10685,]  212  228  231 #> [10686,]  212  228  231 #> [10687,]  212  228  231 #> [10688,]  212  228  231 #> [10689,]  212  228  231 #> [10690,]  212  228  231 #> [10691,]  212  228  231 #> [10692,]  214  229  232 #> [10693,]  213  229  232 #> [10694,]  212  228  231 #> [10695,]  212  228  231 #> [10696,]  214  229  232 #> [10697,]  214  229  232 #> [10698,]  212  228  231 #> [10699,]  212  228  231 #> [10700,]  212  228  231 #> [10701,]  216  231  234 #> [10702,]  216  232  235 #> [10703,]  215  230  233 #> [10704,]  216  231  234 #> [10705,]  216  232  235 #> [10706,]  216  231  234 #> [10707,]  216  232  235 #> [10708,]  216  231  234 #> [10709,]  216  232  235 #> [10710,]  215  230  233 #> [10711,]  215  230  233 #> [10712,]  216  232  235 #> [10713,]  216  232  235 #> [10714,]  215  230  233 #> [10715,]  216  231  234 #> [10716,]  216  231  234 #> [10717,]  216  232  235 #> [10718,]  216  232  235 #> [10719,]  216  231  234 #> [10720,]  216  232  235 #> [10721,]  216  232  235 #> [10722,]  216  232  235 #> [10723,]  216  232  235 #> [10724,]  216  232  235 #> [10725,]  216  232  235 #> [10726,]  216  231  234 #> [10727,]  216  232  235 #> [10728,]  216  231  234 #> [10729,]  216  232  235 #> [10730,]  216  232  235 #> [10731,]  216  232  235 #> [10732,]  215  230  233 #> [10733,]  216  232  235 #> [10734,]  216  231  234 #> [10735,]  216  231  234 #> [10736,]  216  232  235 #> [10737,]  216  231  234 #> [10738,]  216  231  234 #> [10739,]  216  232  235 #> [10740,]  215  230  233 #> [10741,]  216  232  235 #> [10742,]  216  231  234 #> [10743,]  216  231  234 #> [10744,]  216  232  235 #> [10745,]  216  231  234 #> [10746,]  216  231  234 #> [10747,]  216  232  235 #> [10748,]  215  230  233 #> [10749,]  216  231  234 #> [10750,]  216  232  235 #> [10751,]  216  232  235 #> [10752,]  216  231  234 #> [10753,]  216  232  235 #> [10754,]  216  232  235 #> [10755,]  216  231  234 #> [10756,]  216  231  234 #> [10757,]  216  231  234 #> [10758,]  216  232  235 #> [10759,]  216  231  234 #> [10760,]  216  232  235 #> [10761,]  216  232  235 #> [10762,]  216  231  234 #> [10763,]  216  232  235 #> [10764,]  216  231  234 #> [10765,]  216  231  234 #> [10766,]  216  232  235 #> [10767,]  216  231  234 #> [10768,]  216  231  234 #> [10769,]  216  231  234 #> [10770,]  215  230  233 #> [10771,]  216  232  235 #> [10772,]  216  231  234 #> [10773,]  216  231  234 #> [10774,]  216  232  235 #> [10775,]  216  232  235 #> [10776,]  216  232  235 #> [10777,]  216  231  234 #> [10778,]  216  232  235 #> [10779,]  216  231  234 #> [10780,]  216  232  235 #> [10781,]  216  232  235 #> [10782,]  216  231  234 #> [10783,]  216  232  235 #> [10784,]  216  232  235 #> [10785,]  216  231  234 #> [10786,]  216  232  235 #> [10787,]  216  232  235 #> [10788,]  216  232  235 #> [10789,]  216  231  234 #> [10790,]  216  232  235 #> [10791,]  216  231  234 #> [10792,]  216  232  235 #> [10793,]  216  232  235 #> [10794,]  216  231  234 #> [10795,]  216  232  235 #> [10796,]  216  231  234 #> [10797,]  216  231  234 #> [10798,]  216  231  234 #> [10799,]  216  232  235 #> [10800,]  216  231  234 #> [10801,]  217  234  237 #> [10802,]  217  234  237 #> [10803,]  217  234  237 #> [10804,]  218  233  236 #> [10805,]  217  234  237 #> [10806,]  217  235  238 #> [10807,]  217  234  237 #> [10808,]  217  234  237 #> [10809,]  218  233  236 #> [10810,]  217  235  238 #> [10811,]  218  233  236 #> [10812,]  218  233  236 #> [10813,]  217  234  237 #> [10814,]  218  233  236 #> [10815,]  218  233  236 #> [10816,]  217  234  237 #> [10817,]  217  234  237 #> [10818,]  218  233  236 #> [10819,]  218  233  236 #> [10820,]  217  234  237 #> [10821,]  218  233  236 #> [10822,]  217  234  237 #> [10823,]  217  234  237 #> [10824,]  217  234  237 #> [10825,]  217  234  237 #> [10826,]  218  233  236 #> [10827,]  218  233  236 #> [10828,]  217  234  237 #> [10829,]  217  234  237 #> [10830,]  217  235  238 #> [10831,]  218  233  236 #> [10832,]  217  235  238 #> [10833,]  218  233  236 #> [10834,]  217  234  237 #> [10835,]  217  234  237 #> [10836,]  218  233  236 #> [10837,]  217  234  237 #> [10838,]  218  233  236 #> [10839,]  217  234  237 #> [10840,]  217  234  237 #> [10841,]  218  233  236 #> [10842,]  218  233  236 #> [10843,]  217  234  237 #> [10844,]  217  234  237 #> [10845,]  217  234  237 #> [10846,]  217  234  237 #> [10847,]  217  234  237 #> [10848,]  218  233  236 #> [10849,]  217  234  237 #> [10850,]  217  234  237 #> [10851,]  217  234  237 #> [10852,]  217  235  238 #> [10853,]  217  234  237 #> [10854,]  217  234  237 #> [10855,]  217  234  237 #> [10856,]  217  234  237 #> [10857,]  217  234  237 #> [10858,]  218  233  236 #> [10859,]  217  234  237 #> [10860,]  217  235  238 #> [10861,]  218  233  236 #> [10862,]  217  235  238 #> [10863,]  217  234  237 #> [10864,]  217  235  238 #> [10865,]  217  234  237 #> [10866,]  217  234  237 #> [10867,]  217  235  238 #> [10868,]  218  233  236 #> [10869,]  218  233  236 #> [10870,]  217  234  237 #> [10871,]  217  234  237 #> [10872,]  217  234  237 #> [10873,]  217  235  238 #> [10874,]  218  233  236 #> [10875,]  218  233  236 #> [10876,]  217  234  237 #> [10877,]  217  234  237 #> [10878,]  217  234  237 #> [10879,]  217  234  237 #> [10880,]  217  234  237 #> [10881,]  217  234  237 #> [10882,]  218  233  236 #> [10883,]  217  234  237 #> [10884,]  217  234  237 #> [10885,]  218  233  236 #> [10886,]  217  234  237 #> [10887,]  217  234  237 #> [10888,]  217  234  237 #> [10889,]  217  234  237 #> [10890,]  217  234  237 #> [10891,]  217  234  237 #> [10892,]  218  233  236 #> [10893,]  218  233  236 #> [10894,]  217  234  237 #> [10895,]  217  234  237 #> [10896,]  218  233  236 #> [10897,]  218  233  236 #> [10898,]  217  234  237 #> [10899,]  217  235  238 #> [10900,]  217  234  237 #> [10901,]  219  236  239 #> [10902,]  220  237  240 #> [10903,]  220  237  240 #> [10904,]  219  236  239 #> [10905,]  220  237  240 #> [10906,]  220  237  240 #> [10907,]  220  237  240 #> [10908,]  219  236  239 #> [10909,]  219  236  239 #> [10910,]  220  237  240 #> [10911,]  219  236  239 #> [10912,]  220  237  240 #> [10913,]  219  236  239 #> [10914,]  219  236  239 #> [10915,]  219  236  239 #> [10916,]  219  236  239 #> [10917,]  219  236  239 #> [10918,]  220  238  240 #> [10919,]  220  237  240 #> [10920,]  220  237  240 #> [10921,]  219  236  239 #> [10922,]  219  236  239 #> [10923,]  220  237  240 #> [10924,]  220  237  240 #> [10925,]  220  237  240 #> [10926,]  220  237  240 #> [10927,]  219  236  239 #> [10928,]  220  237  240 #> [10929,]  220  237  240 #> [10930,]  219  236  239 #> [10931,]  220  237  240 #> [10932,]  220  237  240 #> [10933,]  220  237  240 #> [10934,]  220  237  240 #> [10935,]  219  236  239 #> [10936,]  220  237  240 #> [10937,]  220  237  240 #> [10938,]  220  237  240 #> [10939,]  220  237  240 #> [10940,]  220  237  240 #> [10941,]  219  236  239 #> [10942,]  220  238  240 #> [10943,]  219  236  239 #> [10944,]  219  236  239 #> [10945,]  219  236  239 #> [10946,]  219  236  239 #> [10947,]  220  237  240 #> [10948,]  220  237  240 #> [10949,]  219  236  239 #> [10950,]  220  237  240 #> [10951,]  220  238  240 #> [10952,]  219  236  239 #> [10953,]  220  238  240 #> [10954,]  219  236  239 #> [10955,]  219  236  239 #> [10956,]  220  237  240 #> [10957,]  220  237  240 #> [10958,]  219  236  239 #> [10959,]  220  237  240 #> [10960,]  220  237  240 #> [10961,]  220  237  240 #> [10962,]  219  236  239 #> [10963,]  220  237  240 #> [10964,]  220  237  240 #> [10965,]  220  237  240 #> [10966,]  219  236  239 #> [10967,]  219  236  239 #> [10968,]  219  236  239 #> [10969,]  219  236  239 #> [10970,]  220  237  240 #> [10971,]  220  237  240 #> [10972,]  220  237  240 #> [10973,]  220  237  240 #> [10974,]  219  236  239 #> [10975,]  220  237  240 #> [10976,]  220  237  240 #> [10977,]  220  237  240 #> [10978,]  220  237  240 #> [10979,]  219  236  239 #> [10980,]  219  236  239 #> [10981,]  219  236  239 #> [10982,]  219  236  239 #> [10983,]  219  236  239 #> [10984,]  220  238  240 #> [10985,]  219  236  239 #> [10986,]  220  237  240 #> [10987,]  219  236  239 #> [10988,]  219  236  239 #> [10989,]  219  236  239 #> [10990,]  219  236  239 #> [10991,]  219  236  239 #> [10992,]  219  236  239 #> [10993,]  220  237  240 #> [10994,]  220  238  240 #> [10995,]  219  236  239 #> [10996,]  219  236  239 #> [10997,]  220  237  240 #> [10998,]  220  237  240 #> [10999,]  219  236  239 #> [11000,]  220  237  240 #> [11001,]  222  240  242 #> [11002,]  222  240  242 #> [11003,]  221  239  241 #> [11004,]  222  240  242 #> [11005,]  222  240  242 #> [11006,]  221  239  241 #> [11007,]  221  239  241 #> [11008,]  222  240  242 #> [11009,]  222  240  242 #> [11010,]  222  240  242 #> [11011,]  222  240  242 #> [11012,]  222  240  242 #> [11013,]  222  240  242 #> [11014,]  222  240  242 #> [11015,]  222  240  242 #> [11016,]  222  240  242 #> [11017,]  222  240  242 #> [11018,]  222  240  242 #> [11019,]  222  240  242 #> [11020,]  221  239  241 #> [11021,]  221  239  241 #> [11022,]  222  240  242 #> [11023,]  221  239  241 #> [11024,]  222  240  242 #> [11025,]  221  239  241 #> [11026,]  222  240  242 #> [11027,]  222  240  242 #> [11028,]  222  240  242 #> [11029,]  222  240  242 #> [11030,]  222  240  242 #> [11031,]  222  240  242 #> [11032,]  222  240  242 #> [11033,]  222  240  242 #> [11034,]  221  239  241 #> [11035,]  221  239  241 #> [11036,]  222  240  242 #> [11037,]  221  239  241 #> [11038,]  222  240  242 #> [11039,]  222  240  242 #> [11040,]  222  240  242 #> [11041,]  222  240  242 #> [11042,]  221  239  241 #> [11043,]  222  240  242 #> [11044,]  221  239  241 #> [11045,]  222  240  242 #> [11046,]  222  240  242 #> [11047,]  222  240  242 #> [11048,]  222  240  242 #> [11049,]  222  240  242 #> [11050,]  222  240  242 #> [11051,]  222  240  242 #> [11052,]  222  240  242 #> [11053,]  221  239  241 #> [11054,]  222  240  242 #> [11055,]  222  240  242 #> [11056,]  221  239  241 #> [11057,]  221  239  241 #> [11058,]  222  240  242 #> [11059,]  222  240  242 #> [11060,]  222  240  242 #> [11061,]  222  240  242 #> [11062,]  222  240  242 #> [11063,]  222  240  242 #> [11064,]  222  240  242 #> [11065,]  221  239  241 #> [11066,]  222  240  242 #> [11067,]  222  240  242 #> [11068,]  222  240  242 #> [11069,]  222  240  242 #> [11070,]  222  240  242 #> [11071,]  222  240  242 #> [11072,]  222  240  242 #> [11073,]  221  239  241 #> [11074,]  221  239  241 #> [11075,]  222  240  242 #> [11076,]  222  240  242 #> [11077,]  222  240  242 #> [11078,]  222  240  242 #> [11079,]  222  240  242 #> [11080,]  221  239  241 #> [11081,]  222  240  242 #> [11082,]  221  239  241 #> [11083,]  222  240  242 #> [11084,]  221  239  241 #> [11085,]  221  239  241 #> [11086,]  221  239  241 #> [11087,]  222  240  242 #> [11088,]  222  240  242 #> [11089,]  221  239  241 #> [11090,]  222  240  242 #> [11091,]  222  240  242 #> [11092,]  222  240  242 #> [11093,]  222  240  242 #> [11094,]  221  239  241 #> [11095,]  222  240  242 #> [11096,]  222  240  242 #> [11097,]  222  240  242 #> [11098,]  221  239  241 #> [11099,]  221  239  241 #> [11100,]  222  240  242 #> [11101,]  223  242  244 #> [11102,]  223  243  244 #> [11103,]  223  242  244 #> [11104,]  224  241  243 #> [11105,]  223  243  244 #> [11106,]  223  242  244 #> [11107,]  223  243  244 #> [11108,]  223  243  244 #> [11109,]  224  241  243 #> [11110,]  223  243  244 #> [11111,]  224  241  243 #> [11112,]  224  241  243 #> [11113,]  223  243  244 #> [11114,]  224  241  243 #> [11115,]  224  241  243 #> [11116,]  223  242  244 #> [11117,]  223  243  244 #> [11118,]  224  241  243 #> [11119,]  224  241  243 #> [11120,]  223  243  244 #> [11121,]  224  241  243 #> [11122,]  223  243  244 #> [11123,]  223  243  244 #> [11124,]  223  243  244 #> [11125,]  223  243  244 #> [11126,]  224  241  243 #> [11127,]  224  241  243 #> [11128,]  223  242  244 #> [11129,]  223  243  244 #> [11130,]  223  243  244 #> [11131,]  224  241  243 #> [11132,]  223  243  244 #> [11133,]  224  241  243 #> [11134,]  223  242  244 #> [11135,]  223  242  244 #> [11136,]  224  241  243 #> [11137,]  223  242  244 #> [11138,]  224  241  243 #> [11139,]  223  243  244 #> [11140,]  223  243  244 #> [11141,]  224  241  243 #> [11142,]  224  241  243 #> [11143,]  223  243  244 #> [11144,]  223  243  244 #> [11145,]  223  242  244 #> [11146,]  223  243  244 #> [11147,]  223  243  244 #> [11148,]  224  241  243 #> [11149,]  223  242  244 #> [11150,]  223  243  244 #> [11151,]  223  243  244 #> [11152,]  223  242  244 #> [11153,]  223  243  244 #> [11154,]  223  243  244 #> [11155,]  223  243  244 #> [11156,]  223  243  244 #> [11157,]  223  243  244 #> [11158,]  224  241  243 #> [11159,]  223  243  244 #> [11160,]  223  243  244 #> [11161,]  224  241  243 #> [11162,]  223  243  244 #> [11163,]  223  243  244 #> [11164,]  223  242  244 #> [11165,]  223  243  244 #> [11166,]  223  243  244 #> [11167,]  223  243  244 #> [11168,]  224  241  243 #> [11169,]  224  241  243 #> [11170,]  223  243  244 #> [11171,]  223  243  244 #> [11172,]  223  242  244 #> [11173,]  223  242  244 #> [11174,]  224  241  243 #> [11175,]  224  241  243 #> [11176,]  223  243  244 #> [11177,]  223  242  244 #> [11178,]  223  243  244 #> [11179,]  223  243  244 #> [11180,]  223  243  244 #> [11181,]  223  243  244 #> [11182,]  224  241  243 #> [11183,]  223  243  244 #> [11184,]  223  243  244 #> [11185,]  224  241  243 #> [11186,]  223  243  244 #> [11187,]  223  243  244 #> [11188,]  223  243  244 #> [11189,]  223  242  244 #> [11190,]  223  243  244 #> [11191,]  223  243  244 #> [11192,]  224  241  243 #> [11193,]  224  241  243 #> [11194,]  223  242  244 #> [11195,]  223  243  244 #> [11196,]  224  241  243 #> [11197,]  224  241  243 #> [11198,]  223  243  244 #> [11199,]  223  243  244 #> [11200,]  223  242  244 #> [11201,]  225  244  245 #> [11202,]  226  245  246 #> [11203,]  226  245  246 #> [11204,]  225  244  245 #> [11205,]  226  245  246 #> [11206,]  226  245  246 #> [11207,]  226  245  246 #> [11208,]  225  244  245 #> [11209,]  225  244  245 #> [11210,]  226  245  246 #> [11211,]  225  244  245 #> [11212,]  226  245  246 #> [11213,]  225  244  245 #> [11214,]  226  245  246 #> [11215,]  226  245  246 #> [11216,]  226  245  246 #> [11217,]  225  244  245 #> [11218,]  226  245  246 #> [11219,]  226  245  246 #> [11220,]  226  245  246 #> [11221,]  225  244  245 #> [11222,]  225  244  245 #> [11223,]  226  245  246 #> [11224,]  226  245  246 #> [11225,]  226  245  246 #> [11226,]  226  245  246 #> [11227,]  225  244  245 #> [11228,]  226  245  246 #> [11229,]  226  245  246 #> [11230,]  225  244  245 #> [11231,]  226  245  246 #> [11232,]  226  245  246 #> [11233,]  226  245  246 #> [11234,]  226  245  246 #> [11235,]  225  244  245 #> [11236,]  226  245  246 #> [11237,]  226  245  246 #> [11238,]  226  245  246 #> [11239,]  226  245  246 #> [11240,]  226  245  246 #> [11241,]  226  245  246 #> [11242,]  226  245  246 #> [11243,]  225  244  245 #> [11244,]  225  244  245 #> [11245,]  225  244  245 #> [11246,]  225  244  245 #> [11247,]  226  245  246 #> [11248,]  226  245  246 #> [11249,]  225  244  245 #> [11250,]  226  245  246 #> [11251,]  226  245  246 #> [11252,]  225  244  245 #> [11253,]  226  245  246 #> [11254,]  225  244  245 #> [11255,]  225  244  245 #> [11256,]  226  245  246 #> [11257,]  226  245  246 #> [11258,]  225  244  245 #> [11259,]  226  245  246 #> [11260,]  226  245  246 #> [11261,]  226  245  246 #> [11262,]  226  245  246 #> [11263,]  226  245  246 #> [11264,]  226  245  246 #> [11265,]  226  245  246 #> [11266,]  225  244  245 #> [11267,]  226  245  246 #> [11268,]  225  244  245 #> [11269,]  225  244  245 #> [11270,]  226  245  246 #> [11271,]  226  245  246 #> [11272,]  226  245  246 #> [11273,]  226  245  246 #> [11274,]  226  245  246 #> [11275,]  226  245  246 #> [11276,]  226  245  246 #> [11277,]  226  245  246 #> [11278,]  226  245  246 #> [11279,]  225  244  245 #> [11280,]  225  244  245 #> [11281,]  225  244  245 #> [11282,]  225  244  245 #> [11283,]  225  244  245 #> [11284,]  226  245  246 #> [11285,]  226  245  246 #> [11286,]  226  245  246 #> [11287,]  225  244  245 #> [11288,]  225  244  245 #> [11289,]  225  244  245 #> [11290,]  225  244  245 #> [11291,]  225  244  245 #> [11292,]  225  244  245 #> [11293,]  226  245  246 #> [11294,]  226  245  246 #> [11295,]  225  244  245 #> [11296,]  225  244  245 #> [11297,]  226  245  246 #> [11298,]  226  245  246 #> [11299,]  225  244  245 #> [11300,]  226  245  246 #> [11301,]  228  247  249 #> [11302,]  227  246  247 #> [11303,]  228  247  249 #> [11304,]  228  248  249 #> [11305,]  228  247  249 #> [11306,]  227  246  248 #> [11307,]  228  248  249 #> [11308,]  228  247  249 #> [11309,]  228  247  249 #> [11310,]  228  248  249 #> [11311,]  227  246  248 #> [11312,]  227  246  248 #> [11313,]  228  247  249 #> [11314,]  228  247  249 #> [11315,]  227  246  248 #> [11316,]  228  248  249 #> [11317,]  227  246  248 #> [11318,]  228  248  249 #> [11319,]  228  247  249 #> [11320,]  228  247  249 #> [11321,]  228  248  249 #> [11322,]  228  247  249 #> [11323,]  227  246  247 #> [11324,]  228  247  249 #> [11325,]  228  248  249 #> [11326,]  228  247  249 #> [11327,]  228  248  249 #> [11328,]  228  247  249 #> [11329,]  227  246  248 #> [11330,]  228  247  249 #> [11331,]  227  246  247 #> [11332,]  228  247  249 #> [11333,]  228  247  249 #> [11334,]  227  246  247 #> [11335,]  228  247  249 #> [11336,]  228  247  249 #> [11337,]  227  246  247 #> [11338,]  228  247  249 #> [11339,]  228  248  249 #> [11340,]  228  247  249 #> [11341,]  228  247  249 #> [11342,]  227  246  248 #> [11343,]  227  246  248 #> [11344,]  227  246  247 #> [11345,]  228  248  249 #> [11346,]  228  247  249 #> [11347,]  227  246  247 #> [11348,]  227  246  248 #> [11349,]  228  247  249 #> [11350,]  228  247  249 #> [11351,]  228  247  249 #> [11352,]  228  247  249 #> [11353,]  228  248  249 #> [11354,]  228  247  249 #> [11355,]  228  247  249 #> [11356,]  227  246  248 #> [11357,]  228  247  249 #> [11358,]  228  247  249 #> [11359,]  228  247  249 #> [11360,]  228  247  249 #> [11361,]  227  246  248 #> [11362,]  228  247  249 #> [11363,]  227  246  248 #> [11364,]  227  246  248 #> [11365,]  227  246  248 #> [11366,]  228  247  249 #> [11367,]  228  247  249 #> [11368,]  228  247  249 #> [11369,]  228  247  249 #> [11370,]  227  246  247 #> [11371,]  228  248  249 #> [11372,]  228  248  249 #> [11373,]  228  248  249 #> [11374,]  228  248  249 #> [11375,]  227  246  248 #> [11376,]  228  248  249 #> [11377,]  228  248  249 #> [11378,]  227  246  248 #> [11379,]  227  246  247 #> [11380,]  228  247  249 #> [11381,]  227  246  248 #> [11382,]  228  247  249 #> [11383,]  228  247  249 #> [11384,]  228  248  249 #> [11385,]  228  247  249 #> [11386,]  228  247  249 #> [11387,]  228  247  249 #> [11388,]  228  247  249 #> [11389,]  228  247  249 #> [11390,]  228  247  249 #> [11391,]  228  247  249 #> [11392,]  227  246  248 #> [11393,]  228  247  249 #> [11394,]  227  246  248 #> [11395,]  227  246  247 #> [11396,]  228  247  249 #> [11397,]  228  247  249 #> [11398,]  228  247  249 #> [11399,]  228  247  249 #> [11400,]  227  246  247 #> [11401,]  230  250  251 #> [11402,]  230  250  251 #> [11403,]  230  250  251 #> [11404,]  230  250  251 #> [11405,]  230  250  251 #> [11406,]  229  249  250 #> [11407,]  230  250  251 #> [11408,]  230  250  251 #> [11409,]  230  250  251 #> [11410,]  230  250  251 #> [11411,]  230  250  251 #> [11412,]  230  250  251 #> [11413,]  230  250  251 #> [11414,]  230  250  251 #> [11415,]  230  250  251 #> [11416,]  230  250  251 #> [11417,]  230  250  251 #> [11418,]  230  250  251 #> [11419,]  229  249  250 #> [11420,]  230  250  251 #> [11421,]  230  250  251 #> [11422,]  230  250  251 #> [11423,]  230  250  251 #> [11424,]  230  250  251 #> [11425,]  230  250  251 #> [11426,]  230  250  251 #> [11427,]  230  250  251 #> [11428,]  230  250  251 #> [11429,]  230  250  251 #> [11430,]  230  250  251 #> [11431,]  230  250  251 #> [11432,]  230  250  251 #> [11433,]  230  250  251 #> [11434,]  229  249  250 #> [11435,]  230  250  251 #> [11436,]  230  250  251 #> [11437,]  230  250  251 #> [11438,]  229  249  250 #> [11439,]  230  250  251 #> [11440,]  230  250  251 #> [11441,]  230  250  251 #> [11442,]  230  250  251 #> [11443,]  230  250  251 #> [11444,]  230  250  251 #> [11445,]  230  250  251 #> [11446,]  230  250  251 #> [11447,]  230  250  251 #> [11448,]  230  250  251 #> [11449,]  229  249  250 #> [11450,]  230  250  251 #> [11451,]  230  250  251 #> [11452,]  230  250  251 #> [11453,]  230  250  251 #> [11454,]  230  250  251 #> [11455,]  230  250  251 #> [11456,]  230  250  251 #> [11457,]  230  250  251 #> [11458,]  230  250  251 #> [11459,]  230  250  251 #> [11460,]  230  250  251 #> [11461,]  230  250  251 #> [11462,]  230  250  251 #> [11463,]  230  250  251 #> [11464,]  230  250  251 #> [11465,]  230  250  251 #> [11466,]  230  250  251 #> [11467,]  230  250  251 #> [11468,]  230  250  251 #> [11469,]  230  250  251 #> [11470,]  230  250  251 #> [11471,]  230  250  251 #> [11472,]  229  249  250 #> [11473,]  230  250  251 #> [11474,]  230  250  251 #> [11475,]  230  250  251 #> [11476,]  230  250  251 #> [11477,]  230  250  251 #> [11478,]  230  250  251 #> [11479,]  230  250  251 #> [11480,]  230  250  251 #> [11481,]  230  250  251 #> [11482,]  230  250  251 #> [11483,]  230  250  251 #> [11484,]  230  250  251 #> [11485,]  230  250  251 #> [11486,]  230  250  251 #> [11487,]  230  250  251 #> [11488,]  230  250  251 #> [11489,]  230  250  251 #> [11490,]  230  250  251 #> [11491,]  230  250  251 #> [11492,]  230  250  251 #> [11493,]  230  250  251 #> [11494,]  230  250  251 #> [11495,]  230  250  251 #> [11496,]  230  250  251 #> [11497,]  230  250  251 #> [11498,]  230  250  251 #> [11499,]  230  250  251 #> [11500,]  230  250  251 #> [11501,]  232  252  253 #> [11502,]  231  251  252 #> [11503,]  231  251  252 #> [11504,]  231  251  252 #> [11505,]  232  252  254 #> [11506,]  231  251  252 #> [11507,]  231  251  252 #> [11508,]  231  251  252 #> [11509,]  232  252  253 #> [11510,]  231  251  252 #> [11511,]  232  252  253 #> [11512,]  231  251  252 #> [11513,]  232  252  253 #> [11514,]  231  251  252 #> [11515,]  231  251  252 #> [11516,]  231  251  252 #> [11517,]  232  252  253 #> [11518,]  232  252  254 #> [11519,]  231  251  252 #> [11520,]  232  252  254 #> [11521,]  232  252  253 #> [11522,]  231  251  252 #> [11523,]  231  251  252 #> [11524,]  231  251  252 #> [11525,]  231  251  252 #> [11526,]  231  251  252 #> [11527,]  232  252  253 #> [11528,]  232  252  254 #> [11529,]  232  252  254 #> [11530,]  231  251  252 #> [11531,]  231  251  252 #> [11532,]  231  251  252 #> [11533,]  232  252  254 #> [11534,]  231  251  252 #> [11535,]  231  251  252 #> [11536,]  232  252  254 #> [11537,]  231  251  252 #> [11538,]  232  252  254 #> [11539,]  232  252  254 #> [11540,]  231  251  252 #> [11541,]  232  252  254 #> [11542,]  232  252  254 #> [11543,]  231  251  252 #> [11544,]  231  251  252 #> [11545,]  231  251  252 #> [11546,]  231  251  252 #> [11547,]  231  251  252 #> [11548,]  231  251  252 #> [11549,]  231  251  252 #> [11550,]  231  251  252 #> [11551,]  232  252  254 #> [11552,]  231  251  252 #> [11553,]  232  252  254 #> [11554,]  232  252  253 #> [11555,]  231  251  252 #> [11556,]  232  252  254 #> [11557,]  231  251  252 #> [11558,]  232  252  253 #> [11559,]  231  251  252 #> [11560,]  231  251  252 #> [11561,]  232  252  254 #> [11562,]  232  252  254 #> [11563,]  231  251  252 #> [11564,]  231  251  252 #> [11565,]  232  252  254 #> [11566,]  232  252  253 #> [11567,]  231  251  252 #> [11568,]  231  251  252 #> [11569,]  231  251  252 #> [11570,]  232  252  254 #> [11571,]  231  251  252 #> [11572,]  231  251  252 #> [11573,]  231  251  252 #> [11574,]  231  251  252 #> [11575,]  231  251  252 #> [11576,]  231  251  252 #> [11577,]  232  252  254 #> [11578,]  231  251  252 #> [11579,]  232  252  253 #> [11580,]  231  251  252 #> [11581,]  231  251  252 #> [11582,]  232  252  253 #> [11583,]  232  252  253 #> [11584,]  232  252  254 #> [11585,]  232  252  254 #> [11586,]  231  251  252 #> [11587,]  232  252  253 #> [11588,]  231  251  252 #> [11589,]  232  252  253 #> [11590,]  232  252  253 #> [11591,]  232  252  253 #> [11592,]  231  251  252 #> [11593,]  232  252  254 #> [11594,]  232  252  254 #> [11595,]  231  251  252 #> [11596,]  231  251  252 #> [11597,]  231  251  252 #> [11598,]  231  251  252 #> [11599,]  231  251  252 #> [11600,]  231  251  252 #> [11601,]  234  254  256 #> [11602,]  234  254  256 #> [11603,]  233  253  255 #> [11604,]  234  254  256 #> [11605,]  234  254  256 #> [11606,]  234  254  256 #> [11607,]  234  254  256 #> [11608,]  234  254  256 #> [11609,]  234  254  256 #> [11610,]  234  254  256 #> [11611,]  234  254  256 #> [11612,]  233  253  255 #> [11613,]  234  254  256 #> [11614,]  233  253  255 #> [11615,]  234  254  256 #> [11616,]  234  254  256 #> [11617,]  234  254  256 #> [11618,]  234  254  256 #> [11619,]  234  254  256 #> [11620,]  234  254  256 #> [11621,]  234  254  256 #> [11622,]  234  254  256 #> [11623,]  234  254  256 #> [11624,]  234  254  256 #> [11625,]  234  254  256 #> [11626,]  233  253  255 #> [11627,]  234  254  256 #> [11628,]  234  254  256 #> [11629,]  234  254  256 #> [11630,]  234  254  256 #> [11631,]  234  254  256 #> [11632,]  233  253  255 #> [11633,]  234  254  256 #> [11634,]  234  254  256 #> [11635,]  234  254  256 #> [11636,]  234  254  256 #> [11637,]  234  254  256 #> [11638,]  234  254  256 #> [11639,]  234  254  256 #> [11640,]  234  254  256 #> [11641,]  234  254  256 #> [11642,]  233  253  255 #> [11643,]  234  254  256 #> [11644,]  234  254  256 #> [11645,]  234  254  256 #> [11646,]  234  254  256 #> [11647,]  234  254  256 #> [11648,]  233  253  255 #> [11649,]  234  254  256 #> [11650,]  234  254  256 #> [11651,]  233  253  255 #> [11652,]  234  254  256 #> [11653,]  234  254  256 #> [11654,]  233  253  255 #> [11655,]  234  254  256 #> [11656,]  234  254  256 #> [11657,]  234  254  256 #> [11658,]  234  254  256 #> [11659,]  234  254  256 #> [11660,]  234  254  256 #> [11661,]  234  254  256 #> [11662,]  233  253  255 #> [11663,]  234  254  256 #> [11664,]  234  254  256 #> [11665,]  234  254  256 #> [11666,]  233  253  255 #> [11667,]  234  254  256 #> [11668,]  234  254  256 #> [11669,]  233  253  255 #> [11670,]  234  254  256 #> [11671,]  234  254  256 #> [11672,]  234  254  256 #> [11673,]  234  254  256 #> [11674,]  234  254  256 #> [11675,]  234  254  256 #> [11676,]  234  254  256 #> [11677,]  234  254  256 #> [11678,]  234  254  256 #> [11679,]  234  254  256 #> [11680,]  233  253  255 #> [11681,]  233  253  255 #> [11682,]  234  254  256 #> [11683,]  234  254  256 #> [11684,]  234  254  256 #> [11685,]  234  254  256 #> [11686,]  234  254  256 #> [11687,]  234  254  256 #> [11688,]  234  254  256 #> [11689,]  233  253  255 #> [11690,]  234  254  256 #> [11691,]  234  254  256 #> [11692,]  234  254  256 #> [11693,]  234  254  256 #> [11694,]  234  254  256 #> [11695,]  234  254  256 #> [11696,]  234  254  256 #> [11697,]  234  254  256 #> [11698,]  234  254  256 #> [11699,]  234  254  256 #> [11700,]  234  254  256 #> [11701,]  236  256  257 #> [11702,]  235  255  258 #> [11703,]  235  255  258 #> [11704,]  236  256  257 #> [11705,]  236  256  257 #> [11706,]  235  255  258 #> [11707,]  235  255  258 #> [11708,]  235  255  258 #> [11709,]  235  255  258 #> [11710,]  236  256  257 #> [11711,]  236  256  257 #> [11712,]  236  256  257 #> [11713,]  236  256  257 #> [11714,]  236  256  257 #> [11715,]  236  256  257 #> [11716,]  236  256  257 #> [11717,]  236  256  257 #> [11718,]  236  256  257 #> [11719,]  236  256  257 #> [11720,]  235  255  258 #> [11721,]  235  255  258 #> [11722,]  236  256  257 #> [11723,]  235  255  258 #> [11724,]  236  256  257 #> [11725,]  235  255  258 #> [11726,]  236  256  257 #> [11727,]  236  256  257 #> [11728,]  236  256  257 #> [11729,]  235  255  258 #> [11730,]  235  255  258 #> [11731,]  236  256  257 #> [11732,]  236  256  257 #> [11733,]  236  256  257 #> [11734,]  235  255  258 #> [11735,]  235  255  258 #> [11736,]  235  255  258 #> [11737,]  235  255  258 #> [11738,]  236  256  257 #> [11739,]  236  256  257 #> [11740,]  235  255  258 #> [11741,]  235  255  258 #> [11742,]  235  255  258 #> [11743,]  236  256  257 #> [11744,]  235  255  258 #> [11745,]  235  255  258 #> [11746,]  236  256  257 #> [11747,]  236  256  257 #> [11748,]  236  256  257 #> [11749,]  235  255  258 #> [11750,]  235  255  258 #> [11751,]  236  256  257 #> [11752,]  236  256  257 #> [11753,]  235  255  258 #> [11754,]  235  255  258 #> [11755,]  235  255  258 #> [11756,]  235  255  258 #> [11757,]  235  255  258 #> [11758,]  236  256  257 #> [11759,]  236  256  257 #> [11760,]  235  255  258 #> [11761,]  236  256  257 #> [11762,]  235  255  258 #> [11763,]  236  256  257 #> [11764,]  235  255  258 #> [11765,]  235  255  258 #> [11766,]  236  256  257 #> [11767,]  235  255  258 #> [11768,]  236  256  257 #> [11769,]  236  256  257 #> [11770,]  236  256  257 #> [11771,]  236  256  257 #> [11772,]  235  255  258 #> [11773,]  235  255  258 #> [11774,]  235  255  258 #> [11775,]  236  256  257 #> [11776,]  235  255  258 #> [11777,]  236  256  257 #> [11778,]  236  256  257 #> [11779,]  236  256  257 #> [11780,]  235  255  258 #> [11781,]  235  255  258 #> [11782,]  235  255  258 #> [11783,]  236  256  257 #> [11784,]  235  255  258 #> [11785,]  235  255  258 #> [11786,]  235  255  258 #> [11787,]  236  256  257 #> [11788,]  235  255  258 #> [11789,]  235  255  258 #> [11790,]  236  256  257 #> [11791,]  236  256  257 #> [11792,]  236  256  257 #> [11793,]  236  256  257 #> [11794,]  235  255  258 #> [11795,]  236  256  257 #> [11796,]  236  256  257 #> [11797,]  235  255  258 #> [11798,]  235  255  258 #> [11799,]  235  255  258 #> [11800,]  236  256  257 #> [11801,]  237  257  259 #> [11802,]  237  257  259 #> [11803,]  239  258  260 #> [11804,]  237  257  259 #> [11805,]  237  257  259 #> [11806,]  239  258  260 #> [11807,]  239  258  260 #> [11808,]  237  257  259 #> [11809,]  237  257  259 #> [11810,]  237  257  259 #> [11811,]  237  257  259 #> [11812,]  237  257  259 #> [11813,]  237  257  259 #> [11814,]  237  257  259 #> [11815,]  237  257  259 #> [11816,]  237  257  259 #> [11817,]  237  257  259 #> [11818,]  237  257  259 #> [11819,]  237  257  259 #> [11820,]  239  258  260 #> [11821,]  239  258  260 #> [11822,]  237  257  259 #> [11823,]  239  258  260 #> [11824,]  237  257  259 #> [11825,]  239  258  260 #> [11826,]  237  257  259 #> [11827,]  237  257  259 #> [11828,]  237  257  259 #> [11829,]  237  257  259 #> [11830,]  237  257  259 #> [11831,]  237  257  259 #> [11832,]  237  257  259 #> [11833,]  237  257  259 #> [11834,]  238  258  260 #> [11835,]  239  258  260 #> [11836,]  237  257  259 #> [11837,]  238  258  260 #> [11838,]  237  257  259 #> [11839,]  237  257  259 #> [11840,]  237  257  259 #> [11841,]  237  257  259 #> [11842,]  238  258  260 #> [11843,]  237  257  259 #> [11844,]  238  258  260 #> [11845,]  237  257  259 #> [11846,]  237  257  259 #> [11847,]  237  257  259 #> [11848,]  237  257  259 #> [11849,]  237  257  259 #> [11850,]  237  257  259 #> [11851,]  237  257  259 #> [11852,]  237  257  259 #> [11853,]  239  258  260 #> [11854,]  239  258  260 #> [11855,]  239  258  260 #> [11856,]  239  258  260 #> [11857,]  239  258  260 #> [11858,]  237  257  259 #> [11859,]  237  257  259 #> [11860,]  237  257  259 #> [11861,]  237  257  259 #> [11862,]  237  257  259 #> [11863,]  237  257  259 #> [11864,]  239  258  260 #> [11865,]  239  258  260 #> [11866,]  237  257  259 #> [11867,]  237  257  259 #> [11868,]  237  257  259 #> [11869,]  237  257  259 #> [11870,]  237  257  259 #> [11871,]  237  257  259 #> [11872,]  237  257  259 #> [11873,]  239  258  260 #> [11874,]  239  258  260 #> [11875,]  237  257  259 #> [11876,]  237  257  259 #> [11877,]  237  257  259 #> [11878,]  237  257  259 #> [11879,]  237  257  259 #> [11880,]  239  258  260 #> [11881,]  237  257  259 #> [11882,]  239  258  260 #> [11883,]  237  257  259 #> [11884,]  239  258  260 #> [11885,]  239  258  260 #> [11886,]  239  258  260 #> [11887,]  237  257  259 #> [11888,]  239  258  260 #> [11889,]  239  258  260 #> [11890,]  237  257  259 #> [11891,]  237  257  259 #> [11892,]  237  257  259 #> [11893,]  237  257  259 #> [11894,]  238  258  260 #> [11895,]  237  257  259 #> [11896,]  237  257  259 #> [11897,]  237  257  259 #> [11898,]  239  258  260 #> [11899,]  239  258  260 #> [11900,]  237  257  259 #> [11901,]  241  260  262 #> [11902,]  241  260  262 #> [11903,]  240  259  261 #> [11904,]  241  260  262 #> [11905,]  241  260  262 #> [11906,]  241  260  262 #> [11907,]  240  259  261 #> [11908,]  241  260  262 #> [11909,]  241  260  262 #> [11910,]  241  260  262 #> [11911,]  241  260  262 #> [11912,]  240  259  261 #> [11913,]  241  260  262 #> [11914,]  241  260  262 #> [11915,]  241  260  262 #> [11916,]  241  260  262 #> [11917,]  241  260  262 #> [11918,]  241  260  262 #> [11919,]  241  260  262 #> [11920,]  241  260  262 #> [11921,]  241  260  262 #> [11922,]  241  260  262 #> [11923,]  241  260  262 #> [11924,]  241  260  262 #> [11925,]  241  260  262 #> [11926,]  241  260  262 #> [11927,]  241  260  262 #> [11928,]  241  260  262 #> [11929,]  241  260  262 #> [11930,]  241  260  262 #> [11931,]  240  259  261 #> [11932,]  241  260  262 #> [11933,]  241  260  262 #> [11934,]  241  260  262 #> [11935,]  241  260  262 #> [11936,]  241  260  262 #> [11937,]  241  260  262 #> [11938,]  241  260  262 #> [11939,]  241  260  262 #> [11940,]  241  260  262 #> [11941,]  241  260  262 #> [11942,]  241  260  262 #> [11943,]  241  260  262 #> [11944,]  241  260  262 #> [11945,]  241  260  262 #> [11946,]  241  260  262 #> [11947,]  241  260  262 #> [11948,]  241  260  262 #> [11949,]  241  260  262 #> [11950,]  241  260  262 #> [11951,]  241  260  262 #> [11952,]  240  259  261 #> [11953,]  241  260  262 #> [11954,]  241  260  262 #> [11955,]  241  260  262 #> [11956,]  241  260  262 #> [11957,]  241  260  262 #> [11958,]  241  260  262 #> [11959,]  240  259  261 #> [11960,]  240  259  261 #> [11961,]  241  260  262 #> [11962,]  241  260  262 #> [11963,]  241  260  262 #> [11964,]  241  260  262 #> [11965,]  241  260  262 #> [11966,]  241  260  262 #> [11967,]  241  260  262 #> [11968,]  241  260  262 #> [11969,]  241  260  262 #> [11970,]  241  260  262 #> [11971,]  241  260  262 #> [11972,]  241  260  262 #> [11973,]  241  260  262 #> [11974,]  241  260  262 #> [11975,]  241  260  262 #> [11976,]  241  260  262 #> [11977,]  241  260  262 #> [11978,]  241  260  262 #> [11979,]  241  260  262 #> [11980,]  241  260  262 #> [11981,]  241  260  262 #> [11982,]  241  260  262 #> [11983,]  241  260  262 #> [11984,]  241  260  262 #> [11985,]  241  260  262 #> [11986,]  241  260  262 #> [11987,]  241  260  262 #> [11988,]  241  260  262 #> [11989,]  241  260  262 #> [11990,]  241  260  262 #> [11991,]  241  260  262 #> [11992,]  241  260  262 #> [11993,]  241  260  262 #> [11994,]  241  260  262 #> [11995,]  241  260  262 #> [11996,]  241  260  262 #> [11997,]  240  259  261 #> [11998,]  241  260  262 #> [11999,]  241  260  262 #> [12000,]  241  260  262 #> [12001,]  242  263  263 #> [12002,]  243  261  265 #> [12003,]  242  262  263 #> [12004,]  242  263  263 #> [12005,]  243  261  265 #> [12006,]  242  262  263 #> [12007,]  243  261  264 #> [12008,]  242  263  263 #> [12009,]  243  261  265 #> [12010,]  243  261  265 #> [12011,]  242  263  263 #> [12012,]  243  261  265 #> [12013,]  243  261  265 #> [12014,]  242  263  263 #> [12015,]  243  261  265 #> [12016,]  242  263  263 #> [12017,]  243  261  265 #> [12018,]  243  261  265 #> [12019,]  242  263  263 #> [12020,]  243  261  264 #> [12021,]  243  261  264 #> [12022,]  243  261  265 #> [12023,]  243  261  264 #> [12024,]  243  261  265 #> [12025,]  243  261  264 #> [12026,]  242  263  263 #> [12027,]  243  261  265 #> [12028,]  242  263  263 #> [12029,]  243  261  265 #> [12030,]  243  261  265 #> [12031,]  243  261  265 #> [12032,]  243  261  265 #> [12033,]  243  261  265 #> [12034,]  242  262  263 #> [12035,]  242  262  263 #> [12036,]  243  261  265 #> [12037,]  242  262  263 #> [12038,]  242  263  263 #> [12039,]  243  261  265 #> [12040,]  243  261  265 #> [12041,]  243  261  265 #> [12042,]  242  262  263 #> [12043,]  243  261  265 #> [12044,]  243  261  264 #> [12045,]  242  263  263 #> [12046,]  243  261  265 #> [12047,]  243  261  265 #> [12048,]  243  261  265 #> [12049,]  242  263  263 #> [12050,]  243  261  264 #> [12051,]  243  261  265 #> [12052,]  242  263  263 #> [12053,]  243  261  264 #> [12054,]  243  261  264 #> [12055,]  243  261  264 #> [12056,]  242  262  263 #> [12057,]  243  261  264 #> [12058,]  243  261  265 #> [12059,]  242  263  263 #> [12060,]  243  261  265 #> [12061,]  243  261  265 #> [12062,]  242  263  263 #> [12063,]  243  261  265 #> [12064,]  242  262  263 #> [12065,]  242  262  263 #> [12066,]  243  261  265 #> [12067,]  243  261  265 #> [12068,]  242  263  263 #> [12069,]  242  263  263 #> [12070,]  243  261  265 #> [12071,]  243  261  265 #> [12072,]  242  263  263 #> [12073,]  242  262  263 #> [12074,]  243  261  264 #> [12075,]  243  261  265 #> [12076,]  243  261  265 #> [12077,]  242  263  263 #> [12078,]  243  261  265 #> [12079,]  242  263  263 #> [12080,]  243  261  264 #> [12081,]  243  261  264 #> [12082,]  243  261  264 #> [12083,]  243  261  265 #> [12084,]  243  261  264 #> [12085,]  243  261  264 #> [12086,]  243  261  264 #> [12087,]  243  261  265 #> [12088,]  243  261  264 #> [12089,]  242  262  263 #> [12090,]  243  261  265 #> [12091,]  242  263  263 #> [12092,]  243  261  265 #> [12093,]  243  261  265 #> [12094,]  242  262  263 #> [12095,]  243  261  265 #> [12096,]  242  263  263 #> [12097,]  242  262  263 #> [12098,]  243  261  264 #> [12099,]  243  261  264 #> [12100,]  242  263  263 #> [12101,]  246  265  267 #> [12102,]  246  265  267 #> [12103,]  246  265  267 #> [12104,]  244  264  266 #> [12105,]  246  265  267 #> [12106,]  246  265  267 #> [12107,]  246  265  267 #> [12108,]  246  265  267 #> [12109,]  244  264  266 #> [12110,]  245  265  267 #> [12111,]  245  265  267 #> [12112,]  246  265  267 #> [12113,]  246  265  267 #> [12114,]  245  265  267 #> [12115,]  246  265  267 #> [12116,]  246  265  267 #> [12117,]  244  264  266 #> [12118,]  246  265  267 #> [12119,]  246  265  267 #> [12120,]  246  265  267 #> [12121,]  246  265  267 #> [12122,]  246  265  267 #> [12123,]  246  265  267 #> [12124,]  246  265  267 #> [12125,]  246  265  267 #> [12126,]  246  265  267 #> [12127,]  246  265  267 #> [12128,]  246  265  267 #> [12129,]  246  265  267 #> [12130,]  246  265  267 #> [12131,]  246  265  267 #> [12132,]  246  265  267 #> [12133,]  246  265  267 #> [12134,]  246  265  267 #> [12135,]  246  265  267 #> [12136,]  246  265  267 #> [12137,]  246  265  267 #> [12138,]  246  265  267 #> [12139,]  246  265  267 #> [12140,]  246  265  267 #> [12141,]  246  265  267 #> [12142,]  246  265  267 #> [12143,]  246  265  267 #> [12144,]  246  265  267 #> [12145,]  246  265  267 #> [12146,]  246  265  267 #> [12147,]  246  265  267 #> [12148,]  245  265  267 #> [12149,]  246  265  267 #> [12150,]  246  265  267 #> [12151,]  246  265  267 #> [12152,]  244  264  266 #> [12153,]  246  265  267 #> [12154,]  246  265  267 #> [12155,]  246  265  267 #> [12156,]  246  265  267 #> [12157,]  246  265  267 #> [12158,]  246  265  267 #> [12159,]  246  265  267 #> [12160,]  246  265  267 #> [12161,]  246  265  267 #> [12162,]  246  265  267 #> [12163,]  246  265  267 #> [12164,]  246  265  267 #> [12165,]  246  265  267 #> [12166,]  246  265  267 #> [12167,]  246  265  267 #> [12168,]  246  265  267 #> [12169,]  246  265  267 #> [12170,]  245  265  267 #> [12171,]  246  265  267 #> [12172,]  246  265  267 #> [12173,]  246  265  267 #> [12174,]  246  265  267 #> [12175,]  246  265  267 #> [12176,]  246  265  267 #> [12177,]  246  265  267 #> [12178,]  246  265  267 #> [12179,]  246  265  267 #> [12180,]  246  265  267 #> [12181,]  244  264  266 #> [12182,]  244  264  266 #> [12183,]  246  265  267 #> [12184,]  246  265  267 #> [12185,]  246  265  267 #> [12186,]  246  265  267 #> [12187,]  246  265  267 #> [12188,]  246  265  267 #> [12189,]  246  265  267 #> [12190,]  246  265  267 #> [12191,]  246  265  267 #> [12192,]  246  265  267 #> [12193,]  246  265  267 #> [12194,]  246  265  267 #> [12195,]  244  264  266 #> [12196,]  246  265  267 #> [12197,]  246  265  267 #> [12198,]  246  265  267 #> [12199,]  246  265  267 #> [12200,]  246  265  267 #> [12201,]  248  266  269 #> [12202,]  248  266  270 #> [12203,]  247  266  270 #> [12204,]  247  266  268 #> [12205,]  248  266  269 #> [12206,]  248  266  270 #> [12207,]  247  266  269 #> [12208,]  247  266  268 #> [12209,]  248  266  268 #> [12210,]  248  266  269 #> [12211,]  248  266  269 #> [12212,]  247  266  270 #> [12213,]  248  266  269 #> [12214,]  248  266  269 #> [12215,]  248  266  269 #> [12216,]  248  266  269 #> [12217,]  248  266  268 #> [12218,]  248  266  270 #> [12219,]  248  266  270 #> [12220,]  248  266  270 #> [12221,]  248  266  269 #> [12222,]  248  266  269 #> [12223,]  247  266  269 #> [12224,]  248  266  269 #> [12225,]  247  266  270 #> [12226,]  248  266  269 #> [12227,]  248  266  268 #> [12228,]  248  266  270 #> [12229,]  248  266  269 #> [12230,]  248  266  269 #> [12231,]  247  266  270 #> [12232,]  247  266  270 #> [12233,]  248  266  270 #> [12234,]  248  266  270 #> [12235,]  248  266  269 #> [12236,]  248  266  269 #> [12237,]  247  266  269 #> [12238,]  248  266  269 #> [12239,]  248  266  269 #> [12240,]  247  266  269 #> [12241,]  248  266  269 #> [12242,]  248  266  269 #> [12243,]  248  266  269 #> [12244,]  248  266  268 #> [12245,]  248  266  269 #> [12246,]  247  266  269 #> [12247,]  247  266  269 #> [12248,]  248  266  269 #> [12249,]  248  266  269 #> [12250,]  248  266  269 #> [12251,]  248  266  269 #> [12252,]  247  266  268 #> [12253,]  248  266  269 #> [12254,]  248  266  269 #> [12255,]  247  266  269 #> [12256,]  248  266  269 #> [12257,]  247  266  269 #> [12258,]  248  266  269 #> [12259,]  247  266  269 #> [12260,]  247  266  270 #> [12261,]  248  266  269 #> [12262,]  248  266  269 #> [12263,]  248  266  269 #> [12264,]  248  266  269 #> [12265,]  248  266  270 #> [12266,]  248  266  268 #> [12267,]  248  266  269 #> [12268,]  247  266  269 #> [12269,]  248  266  269 #> [12270,]  248  266  270 #> [12271,]  248  266  270 #> [12272,]  247  266  269 #> [12273,]  248  266  270 #> [12274,]  247  266  269 #> [12275,]  248  266  269 #> [12276,]  247  266  269 #> [12277,]  248  266  269 #> [12278,]  247  266  269 #> [12279,]  248  266  269 #> [12280,]  247  266  269 #> [12281,]  248  266  268 #> [12282,]  248  266  268 #> [12283,]  248  266  269 #> [12284,]  248  266  270 #> [12285,]  248  266  269 #> [12286,]  247  266  269 #> [12287,]  248  266  269 #> [12288,]  248  266  269 #> [12289,]  248  266  269 #> [12290,]  248  266  268 #> [12291,]  248  266  269 #> [12292,]  247  266  268 #> [12293,]  248  266  270 #> [12294,]  248  266  269 #> [12295,]  248  266  268 #> [12296,]  247  266  269 #> [12297,]  247  266  270 #> [12298,]  247  266  270 #> [12299,]  248  266  268 #> [12300,]  248  266  270 #> [12301,]  249  269  271 #> [12302,]  249  267  271 #> [12303,]  249  267  271 #> [12304,]  249  269  271 #> [12305,]  249  267  271 #> [12306,]  249  267  271 #> [12307,]  249  267  271 #> [12308,]  249  269  271 #> [12309,]  249  269  271 #> [12310,]  249  267  271 #> [12311,]  249  268  271 #> [12312,]  249  267  271 #> [12313,]  249  269  271 #> [12314,]  249  267  271 #> [12315,]  249  267  271 #> [12316,]  249  267  271 #> [12317,]  249  268  271 #> [12318,]  249  267  271 #> [12319,]  249  267  271 #> [12320,]  249  267  271 #> [12321,]  249  267  271 #> [12322,]  249  269  271 #> [12323,]  249  267  271 #> [12324,]  249  267  271 #> [12325,]  249  267  271 #> [12326,]  249  267  271 #> [12327,]  249  269  271 #> [12328,]  249  267  271 #> [12329,]  249  267  271 #> [12330,]  249  268  271 #> [12331,]  249  267  271 #> [12332,]  249  267  271 #> [12333,]  249  267  271 #> [12334,]  249  267  271 #> [12335,]  249  268  271 #> [12336,]  249  267  271 #> [12337,]  249  267  271 #> [12338,]  249  267  271 #> [12339,]  249  267  271 #> [12340,]  249  267  271 #> [12341,]  249  267  271 #> [12342,]  249  267  271 #> [12343,]  249  268  271 #> [12344,]  249  268  271 #> [12345,]  249  267  271 #> [12346,]  249  269  271 #> [12347,]  249  267  271 #> [12348,]  249  267  271 #> [12349,]  249  269  271 #> [12350,]  249  267  271 #> [12351,]  249  267  271 #> [12352,]  249  269  271 #> [12353,]  249  267  271 #> [12354,]  249  269  271 #> [12355,]  249  269  271 #> [12356,]  249  267  271 #> [12357,]  249  267  271 #> [12358,]  249  269  271 #> [12359,]  249  267  271 #> [12360,]  249  267  271 #> [12361,]  249  267  271 #> [12362,]  249  267  271 #> [12363,]  249  267  271 #> [12364,]  249  267  271 #> [12365,]  249  267  271 #> [12366,]  249  268  271 #> [12367,]  249  267  271 #> [12368,]  249  267  271 #> [12369,]  249  269  271 #> [12370,]  249  267  271 #> [12371,]  249  267  271 #> [12372,]  249  267  271 #> [12373,]  249  267  271 #> [12374,]  249  267  271 #> [12375,]  249  267  271 #> [12376,]  249  267  271 #> [12377,]  249  267  271 #> [12378,]  249  267  271 #> [12379,]  249  268  271 #> [12380,]  249  269  271 #> [12381,]  249  268  271 #> [12382,]  249  269  271 #> [12383,]  249  269  271 #> [12384,]  249  267  271 #> [12385,]  249  267  271 #> [12386,]  249  267  271 #> [12387,]  249  269  271 #> [12388,]  249  269  271 #> [12389,]  249  269  271 #> [12390,]  249  269  271 #> [12391,]  249  267  271 #> [12392,]  249  268  271 #> [12393,]  249  267  271 #> [12394,]  249  267  271 #> [12395,]  249  268  271 #> [12396,]  249  268  271 #> [12397,]  249  267  271 #> [12398,]  249  267  271 #> [12399,]  249  269  271 #> [12400,]  249  267  271 #> [12401,]  251  271  272 #> [12402,]  251  271  273 #> [12403,]  250  270  272 #> [12404,]  250  270  273 #> [12405,]  250  270  273 #> [12406,]  250  270  272 #> [12407,]  251  271  273 #> [12408,]  251  271  273 #> [12409,]  250  270  273 #> [12410,]  250  270  273 #> [12411,]  250  270  272 #> [12412,]  251  271  273 #> [12413,]  251  271  273 #> [12414,]  250  270  273 #> [12415,]  251  271  273 #> [12416,]  251  271  272 #> [12417,]  251  271  273 #> [12418,]  251  271  273 #> [12419,]  251  271  272 #> [12420,]  251  271  273 #> [12421,]  250  270  273 #> [12422,]  251  271  273 #> [12423,]  251  271  273 #> [12424,]  250  270  273 #> [12425,]  250  270  273 #> [12426,]  251  271  273 #> [12427,]  251  271  273 #> [12428,]  250  270  272 #> [12429,]  251  271  273 #> [12430,]  251  271  273 #> [12431,]  250  270  273 #> [12432,]  250  270  273 #> [12433,]  251  271  273 #> [12434,]  250  270  272 #> [12435,]  250  270  272 #> [12436,]  251  271  273 #> [12437,]  251  271  272 #> [12438,]  251  271  272 #> [12439,]  250  270  273 #> [12440,]  250  270  273 #> [12441,]  251  271  273 #> [12442,]  250  270  272 #> [12443,]  251  271  273 #> [12444,]  251  271  273 #> [12445,]  251  271  272 #> [12446,]  251  271  273 #> [12447,]  250  270  273 #> [12448,]  250  270  273 #> [12449,]  251  271  272 #> [12450,]  251  271  273 #> [12451,]  251  271  273 #> [12452,]  250  270  272 #> [12453,]  251  271  273 #> [12454,]  250  270  273 #> [12455,]  251  271  273 #> [12456,]  251  271  273 #> [12457,]  250  270  273 #> [12458,]  251  271  273 #> [12459,]  251  271  273 #> [12460,]  251  271  273 #> [12461,]  251  271  273 #> [12462,]  250  270  273 #> [12463,]  251  271  273 #> [12464,]  251  271  272 #> [12465,]  250  270  273 #> [12466,]  251  271  273 #> [12467,]  250  270  273 #> [12468,]  251  271  272 #> [12469,]  251  271  273 #> [12470,]  250  270  273 #> [12471,]  251  271  273 #> [12472,]  250  270  272 #> [12473,]  250  270  272 #> [12474,]  250  270  273 #> [12475,]  251  271  273 #> [12476,]  250  270  273 #> [12477,]  251  271  272 #> [12478,]  251  271  273 #> [12479,]  250  270  273 #> [12480,]  251  271  273 #> [12481,]  251  271  273 #> [12482,]  250  270  273 #> [12483,]  251  271  273 #> [12484,]  251  271  273 #> [12485,]  251  271  273 #> [12486,]  250  270  273 #> [12487,]  251  271  273 #> [12488,]  250  270  273 #> [12489,]  250  270  273 #> [12490,]  251  271  273 #> [12491,]  250  270  273 #> [12492,]  250  270  273 #> [12493,]  251  271  273 #> [12494,]  250  270  272 #> [12495,]  251  271  273 #> [12496,]  251  271  272 #> [12497,]  251  271  272 #> [12498,]  250  270  273 #> [12499,]  250  270  273 #> [12500,]  251  271  272 #> [12501,]  253  273  275 #> [12502,]  253  273  275 #> [12503,]  252  272  274 #> [12504,]  253  273  275 #> [12505,]  253  273  275 #> [12506,]  253  273  275 #> [12507,]  252  272  274 #> [12508,]  252  272  274 #> [12509,]  253  273  275 #> [12510,]  253  273  275 #> [12511,]  253  273  275 #> [12512,]  253  273  275 #> [12513,]  252  272  274 #> [12514,]  253  273  275 #> [12515,]  253  273  275 #> [12516,]  252  272  274 #> [12517,]  252  272  274 #> [12518,]  253  273  275 #> [12519,]  253  273  275 #> [12520,]  252  272  274 #> [12521,]  253  273  275 #> [12522,]  252  272  274 #> [12523,]  253  273  275 #> [12524,]  252  272  274 #> [12525,]  252  272  274 #> [12526,]  253  273  275 #> [12527,]  253  273  275 #> [12528,]  253  273  275 #> [12529,]  253  273  275 #> [12530,]  253  273  275 #> [12531,]  253  273  275 #> [12532,]  253  273  275 #> [12533,]  253  273  275 #> [12534,]  253  273  275 #> [12535,]  253  273  275 #> [12536,]  253  273  275 #> [12537,]  253  273  275 #> [12538,]  253  273  275 #> [12539,]  252  272  274 #> [12540,]  252  272  274 #> [12541,]  253  273  275 #> [12542,]  253  273  275 #> [12543,]  252  272  274 #> [12544,]  252  272  274 #> [12545,]  252  272  274 #> [12546,]  252  272  274 #> [12547,]  252  272  274 #> [12548,]  253  273  275 #> [12549,]  252  272  274 #> [12550,]  252  272  274 #> [12551,]  252  272  274 #> [12552,]  253  273  275 #> [12553,]  252  272  274 #> [12554,]  252  272  274 #> [12555,]  252  272  274 #> [12556,]  252  272  274 #> [12557,]  253  273  275 #> [12558,]  253  273  275 #> [12559,]  252  272  274 #> [12560,]  253  273  275 #> [12561,]  253  273  275 #> [12562,]  253  273  275 #> [12563,]  252  272  274 #> [12564,]  253  273  275 #> [12565,]  252  272  274 #> [12566,]  252  272  274 #> [12567,]  253  273  275 #> [12568,]  253  273  275 #> [12569,]  253  273  275 #> [12570,]  252  272  274 #> [12571,]  253  273  275 #> [12572,]  252  272  274 #> [12573,]  253  273  275 #> [12574,]  253  273  275 #> [12575,]  253  273  275 #> [12576,]  252  272  274 #> [12577,]  252  272  274 #> [12578,]  252  272  274 #> [12579,]  252  272  274 #> [12580,]  253  273  275 #> [12581,]  253  273  275 #> [12582,]  253  273  275 #> [12583,]  252  272  274 #> [12584,]  252  272  274 #> [12585,]  253  273  275 #> [12586,]  252  272  274 #> [12587,]  253  273  275 #> [12588,]  253  273  275 #> [12589,]  252  272  274 #> [12590,]  252  272  274 #> [12591,]  253  273  275 #> [12592,]  253  273  275 #> [12593,]  253  273  275 #> [12594,]  252  272  274 #> [12595,]  253  273  275 #> [12596,]  253  273  275 #> [12597,]  253  273  275 #> [12598,]  252  272  274 #> [12599,]  253  273  275 #> [12600,]  252  272  274 #> [12601,]  255  275  277 #> [12602,]  255  275  277 #> [12603,]  254  274  276 #> [12604,]  255  275  277 #> [12605,]  255  275  277 #> [12606,]  255  275  277 #> [12607,]  254  274  276 #> [12608,]  254  274  276 #> [12609,]  255  275  277 #> [12610,]  255  275  277 #> [12611,]  255  275  277 #> [12612,]  255  275  277 #> [12613,]  255  275  277 #> [12614,]  255  275  277 #> [12615,]  255  275  277 #> [12616,]  255  275  277 #> [12617,]  255  275  277 #> [12618,]  255  275  277 #> [12619,]  255  275  277 #> [12620,]  254  274  276 #> [12621,]  255  275  277 #> [12622,]  255  275  277 #> [12623,]  255  275  277 #> [12624,]  255  275  277 #> [12625,]  254  274  276 #> [12626,]  255  275  277 #> [12627,]  255  275  277 #> [12628,]  255  275  277 #> [12629,]  255  275  277 #> [12630,]  255  275  277 #> [12631,]  255  275  277 #> [12632,]  255  275  277 #> [12633,]  255  275  277 #> [12634,]  255  275  277 #> [12635,]  255  275  277 #> [12636,]  255  275  277 #> [12637,]  255  275  277 #> [12638,]  255  275  277 #> [12639,]  254  274  276 #> [12640,]  255  275  277 #> [12641,]  255  275  277 #> [12642,]  255  275  277 #> [12643,]  255  275  277 #> [12644,]  254  274  276 #> [12645,]  255  275  277 #> [12646,]  254  274  276 #> [12647,]  255  275  277 #> [12648,]  255  275  277 #> [12649,]  254  274  276 #> [12650,]  254  274  276 #> [12651,]  255  275  277 #> [12652,]  255  275  277 #> [12653,]  254  274  276 #> [12654,]  255  275  277 #> [12655,]  254  274  276 #> [12656,]  254  274  276 #> [12657,]  255  275  277 #> [12658,]  255  275  277 #> [12659,]  254  274  276 #> [12660,]  255  275  277 #> [12661,]  255  275  277 #> [12662,]  255  275  277 #> [12663,]  255  275  277 #> [12664,]  255  275  277 #> [12665,]  254  274  276 #> [12666,]  254  274  276 #> [12667,]  255  275  277 #> [12668,]  255  275  277 #> [12669,]  255  275  277 #> [12670,]  254  274  276 #> [12671,]  255  275  277 #> [12672,]  254  274  276 #> [12673,]  255  275  277 #> [12674,]  255  275  277 #> [12675,]  255  275  277 #> [12676,]  255  275  277 #> [12677,]  255  275  277 #> [12678,]  255  275  277 #> [12679,]  255  275  277 #> [12680,]  255  275  277 #> [12681,]  255  275  277 #> [12682,]  255  275  277 #> [12683,]  255  275  277 #> [12684,]  254  274  276 #> [12685,]  255  275  277 #> [12686,]  254  274  276 #> [12687,]  255  275  277 #> [12688,]  255  275  277 #> [12689,]  255  275  277 #> [12690,]  254  274  276 #> [12691,]  255  275  277 #> [12692,]  255  275  277 #> [12693,]  255  275  277 #> [12694,]  255  275  277 #> [12695,]  255  275  277 #> [12696,]  255  275  277 #> [12697,]  255  275  277 #> [12698,]  254  274  276 #> [12699,]  255  275  277 #> [12700,]  254  274  276 #> [12701,]  257  276  280 #> [12702,]  257  276  278 #> [12703,]  257  276  278 #> [12704,]  257  276  278 #> [12705,]  257  276  279 #> [12706,]  257  276  278 #> [12707,]  257  277  278 #> [12708,]  257  276  278 #> [12709,]  257  276  278 #> [12710,]  256  276  279 #> [12711,]  256  276  279 #> [12712,]  257  276  279 #> [12713,]  257  276  278 #> [12714,]  256  276  280 #> [12715,]  257  276  280 #> [12716,]  257  277  278 #> [12717,]  257  276  280 #> [12718,]  257  276  279 #> [12719,]  257  276  279 #> [12720,]  257  277  278 #> [12721,]  257  276  278 #> [12722,]  257  276  279 #> [12723,]  257  276  278 #> [12724,]  257  277  279 #> [12725,]  257  276  278 #> [12726,]  257  276  280 #> [12727,]  257  276  280 #> [12728,]  257  277  278 #> [12729,]  257  276  278 #> [12730,]  257  276  278 #> [12731,]  257  276  279 #> [12732,]  257  276  279 #> [12733,]  257  276  278 #> [12734,]  257  276  278 #> [12735,]  257  276  278 #> [12736,]  257  276  278 #> [12737,]  257  276  278 #> [12738,]  257  276  279 #> [12739,]  257  276  279 #> [12740,]  257  276  278 #> [12741,]  257  276  278 #> [12742,]  257  276  278 #> [12743,]  257  276  279 #> [12744,]  257  276  278 #> [12745,]  257  276  278 #> [12746,]  257  276  278 #> [12747,]  257  276  279 #> [12748,]  256  276  278 #> [12749,]  257  276  278 #> [12750,]  257  277  278 #> [12751,]  257  276  279 #> [12752,]  257  277  280 #> [12753,]  257  276  278 #> [12754,]  257  276  278 #> [12755,]  257  276  278 #> [12756,]  257  276  278 #> [12757,]  257  276  278 #> [12758,]  257  276  280 #> [12759,]  257  276  280 #> [12760,]  257  276  278 #> [12761,]  257  276  280 #> [12762,]  257  276  278 #> [12763,]  257  276  278 #> [12764,]  257  276  278 #> [12765,]  257  276  278 #> [12766,]  257  276  279 #> [12767,]  257  276  278 #> [12768,]  257  276  280 #> [12769,]  257  276  278 #> [12770,]  256  276  280 #> [12771,]  257  276  280 #> [12772,]  257  276  278 #> [12773,]  257  276  278 #> [12774,]  257  276  278 #> [12775,]  257  276  279 #> [12776,]  257  277  278 #> [12777,]  257  276  280 #> [12778,]  257  276  278 #> [12779,]  257  276  280 #> [12780,]  257  276  278 #> [12781,]  257  276  278 #> [12782,]  257  276  278 #> [12783,]  257  276  280 #> [12784,]  257  276  278 #> [12785,]  257  276  278 #> [12786,]  257  277  278 #> [12787,]  257  276  279 #> [12788,]  257  276  278 #> [12789,]  257  276  278 #> [12790,]  257  276  280 #> [12791,]  257  277  279 #> [12792,]  257  276  279 #> [12793,]  257  276  278 #> [12794,]  257  276  278 #> [12795,]  257  276  279 #> [12796,]  257  276  280 #> [12797,]  257  276  278 #> [12798,]  257  276  278 #> [12799,]  257  276  278 #> [12800,]  257  276  280 #> [12801,]  259  279  282 #> [12802,]  259  279  282 #> [12803,]  259  279  282 #> [12804,]  259  279  282 #> [12805,]  259  279  282 #> [12806,]  259  279  282 #> [12807,]  258  278  281 #> [12808,]  259  279  282 #> [12809,]  259  279  282 #> [12810,]  259  279  282 #> [12811,]  259  279  282 #> [12812,]  259  279  282 #> [12813,]  259  279  282 #> [12814,]  259  279  282 #> [12815,]  259  279  282 #> [12816,]  259  279  282 #> [12817,]  259  279  282 #> [12818,]  259  279  282 #> [12819,]  259  279  282 #> [12820,]  259  279  282 #> [12821,]  258  278  281 #> [12822,]  259  279  282 #> [12823,]  258  278  281 #> [12824,]  259  279  282 #> [12825,]  259  279  282 #> [12826,]  259  279  282 #> [12827,]  259  279  282 #> [12828,]  259  279  282 #> [12829,]  259  279  282 #> [12830,]  258  278  281 #> [12831,]  259  279  282 #> [12832,]  259  279  282 #> [12833,]  259  279  282 #> [12834,]  259  279  282 #> [12835,]  259  279  282 #> [12836,]  259  279  282 #> [12837,]  259  279  282 #> [12838,]  259  279  282 #> [12839,]  258  278  281 #> [12840,]  259  279  282 #> [12841,]  259  279  282 #> [12842,]  259  279  282 #> [12843,]  259  279  282 #> [12844,]  259  279  282 #> [12845,]  259  279  282 #> [12846,]  259  279  282 #> [12847,]  259  279  282 #> [12848,]  259  279  282 #> [12849,]  258  278  281 #> [12850,]  259  279  282 #> [12851,]  259  279  282 #> [12852,]  259  279  282 #> [12853,]  259  279  282 #> [12854,]  258  278  281 #> [12855,]  259  279  282 #> [12856,]  259  279  282 #> [12857,]  259  279  282 #> [12858,]  259  279  282 #> [12859,]  259  279  282 #> [12860,]  259  279  282 #> [12861,]  259  279  282 #> [12862,]  258  278  281 #> [12863,]  259  279  282 #> [12864,]  259  279  282 #> [12865,]  259  279  282 #> [12866,]  259  279  282 #> [12867,]  259  279  282 #> [12868,]  259  279  282 #> [12869,]  259  279  282 #> [12870,]  258  278  281 #> [12871,]  259  279  282 #> [12872,]  259  279  282 #> [12873,]  259  279  282 #> [12874,]  259  279  282 #> [12875,]  259  279  282 #> [12876,]  259  279  282 #> [12877,]  259  279  282 #> [12878,]  259  279  282 #> [12879,]  259  279  282 #> [12880,]  258  278  281 #> [12881,]  259  279  282 #> [12882,]  259  279  282 #> [12883,]  258  278  281 #> [12884,]  259  279  282 #> [12885,]  259  279  282 #> [12886,]  259  279  282 #> [12887,]  259  279  282 #> [12888,]  259  279  282 #> [12889,]  259  279  282 #> [12890,]  259  279  282 #> [12891,]  259  279  282 #> [12892,]  259  279  282 #> [12893,]  259  279  282 #> [12894,]  259  279  282 #> [12895,]  258  278  281 #> [12896,]  259  279  282 #> [12897,]  259  279  282 #> [12898,]  258  278  281 #> [12899,]  259  279  282 #> [12900,]  259  279  282 #> [12901,]  261  280  283 #> [12902,]  261  280  283 #> [12903,]  260  281  284 #> [12904,]  261  280  283 #> [12905,]  260  281  284 #> [12906,]  260  281  284 #> [12907,]  261  280  283 #> [12908,]  261  280  283 #> [12909,]  261  280  283 #> [12910,]  261  280  283 #> [12911,]  260  281  284 #> [12912,]  260  281  284 #> [12913,]  261  280  283 #> [12914,]  260  281  284 #> [12915,]  261  280  283 #> [12916,]  261  280  283 #> [12917,]  261  280  283 #> [12918,]  261  280  283 #> [12919,]  260  282  284 #> [12920,]  260  282  284 #> [12921,]  261  280  283 #> [12922,]  260  282  284 #> [12923,]  261  280  283 #> [12924,]  260  281  284 #> [12925,]  261  280  283 #> [12926,]  260  281  284 #> [12927,]  261  280  283 #> [12928,]  261  280  283 #> [12929,]  260  282  284 #> [12930,]  260  281  284 #> [12931,]  261  280  283 #> [12932,]  260  281  284 #> [12933,]  260  281  284 #> [12934,]  260  281  284 #> [12935,]  260  281  284 #> [12936,]  260  282  284 #> [12937,]  261  280  283 #> [12938,]  261  280  283 #> [12939,]  261  280  283 #> [12940,]  260  281  284 #> [12941,]  260  281  284 #> [12942,]  260  281  284 #> [12943,]  261  280  283 #> [12944,]  261  280  283 #> [12945,]  261  280  283 #> [12946,]  261  280  283 #> [12947,]  261  280  283 #> [12948,]  260  281  284 #> [12949,]  261  280  283 #> [12950,]  261  280  283 #> [12951,]  260  281  284 #> [12952,]  260  281  284 #> [12953,]  261  280  283 #> [12954,]  260  281  284 #> [12955,]  260  282  284 #> [12956,]  261  280  283 #> [12957,]  260  281  284 #> [12958,]  260  282  284 #> [12959,]  261  280  283 #> [12960,]  260  281  284 #> [12961,]  261  280  283 #> [12962,]  260  281  284 #> [12963,]  260  281  284 #> [12964,]  261  280  283 #> [12965,]  261  280  283 #> [12966,]  260  282  284 #> [12967,]  260  281  284 #> [12968,]  260  281  284 #> [12969,]  260  281  284 #> [12970,]  261  280  283 #> [12971,]  261  280  283 #> [12972,]  261  280  283 #> [12973,]  261  280  283 #> [12974,]  261  280  283 #> [12975,]  261  280  283 #> [12976,]  261  280  283 #> [12977,]  261  280  283 #> [12978,]  260  281  284 #> [12979,]  261  280  283 #> [12980,]  260  281  284 #> [12981,]  260  282  284 #> [12982,]  261  280  283 #> [12983,]  260  282  284 #> [12984,]  261  280  283 #> [12985,]  260  281  284 #> [12986,]  261  280  283 #> [12987,]  261  280  283 #> [12988,]  261  280  283 #> [12989,]  260  281  284 #> [12990,]  261  280  283 #> [12991,]  260  281  284 #> [12992,]  261  280  283 #> [12993,]  260  281  284 #> [12994,]  261  280  283 #> [12995,]  261  280  283 #> [12996,]  261  280  283 #> [12997,]  260  282  284 #> [12998,]  260  281  284 #> [12999,]  260  281  284 #> [13000,]  261  280  283 #> [13001,]  262  283  286 #> [13002,]  262  283  286 #> [13003,]  262  283  286 #> [13004,]  262  283  285 #> [13005,]  262  283  286 #> [13006,]  262  283  286 #> [13007,]  262  283  286 #> [13008,]  262  283  285 #> [13009,]  262  283  285 #> [13010,]  262  283  285 #> [13011,]  262  283  286 #> [13012,]  262  283  286 #> [13013,]  262  283  286 #> [13014,]  262  283  286 #> [13015,]  263  283  286 #> [13016,]  262  283  286 #> [13017,]  262  283  286 #> [13018,]  262  283  286 #> [13019,]  263  283  286 #> [13020,]  263  283  285 #> [13021,]  262  283  286 #> [13022,]  263  283  286 #> [13023,]  262  283  286 #> [13024,]  262  283  286 #> [13025,]  262  283  286 #> [13026,]  262  283  286 #> [13027,]  263  283  286 #> [13028,]  262  283  286 #> [13029,]  263  283  286 #> [13030,]  262  283  285 #> [13031,]  262  283  286 #> [13032,]  262  283  286 #> [13033,]  262  283  286 #> [13034,]  262  283  286 #> [13035,]  262  283  286 #> [13036,]  263  283  286 #> [13037,]  263  283  286 #> [13038,]  263  283  286 #> [13039,]  262  283  286 #> [13040,]  262  283  286 #> [13041,]  262  283  286 #> [13042,]  262  283  286 #> [13043,]  262  283  285 #> [13044,]  262  283  286 #> [13045,]  262  283  286 #> [13046,]  263  283  286 #> [13047,]  262  283  286 #> [13048,]  262  283  286 #> [13049,]  262  283  286 #> [13050,]  262  283  286 #> [13051,]  262  283  285 #> [13052,]  262  283  286 #> [13053,]  263  283  285 #> [13054,]  262  283  286 #> [13055,]  263  283  286 #> [13056,]  262  283  285 #> [13057,]  262  283  286 #> [13058,]  263  283  286 #> [13059,]  262  283  286 #> [13060,]  262  283  285 #> [13061,]  262  283  286 #> [13062,]  262  283  286 #> [13063,]  262  283  286 #> [13064,]  263  283  285 #> [13065,]  262  283  286 #> [13066,]  263  283  285 #> [13067,]  262  283  285 #> [13068,]  262  283  286 #> [13069,]  263  283  286 #> [13070,]  262  283  286 #> [13071,]  262  283  286 #> [13072,]  262  283  286 #> [13073,]  262  283  286 #> [13074,]  262  283  286 #> [13075,]  262  283  286 #> [13076,]  262  283  286 #> [13077,]  263  283  286 #> [13078,]  262  283  285 #> [13079,]  262  283  286 #> [13080,]  263  283  286 #> [13081,]  263  283  286 #> [13082,]  262  283  286 #> [13083,]  263  283  286 #> [13084,]  262  283  286 #> [13085,]  262  283  285 #> [13086,]  262  283  286 #> [13087,]  263  283  286 #> [13088,]  262  283  286 #> [13089,]  262  283  285 #> [13090,]  263  283  286 #> [13091,]  262  283  285 #> [13092,]  262  283  286 #> [13093,]  262  283  286 #> [13094,]  262  283  286 #> [13095,]  262  283  285 #> [13096,]  262  283  286 #> [13097,]  263  283  286 #> [13098,]  262  283  286 #> [13099,]  262  283  286 #> [13100,]  263  283  286 #> [13101,]  265  285  288 #> [13102,]  264  284  287 #> [13103,]  264  284  287 #> [13104,]  264  284  287 #> [13105,]  265  286  288 #> [13106,]  265  285  288 #> [13107,]  264  284  287 #> [13108,]  265  285  288 #> [13109,]  265  286  288 #> [13110,]  264  284  287 #> [13111,]  265  285  288 #> [13112,]  265  286  288 #> [13113,]  264  284  287 #> [13114,]  265  285  288 #> [13115,]  265  285  288 #> [13116,]  264  284  287 #> [13117,]  264  284  287 #> [13118,]  264  284  287 #> [13119,]  264  284  287 #> [13120,]  265  286  288 #> [13121,]  264  284  287 #> [13122,]  264  284  287 #> [13123,]  264  284  287 #> [13124,]  264  284  287 #> [13125,]  264  284  287 #> [13126,]  265  285  288 #> [13127,]  264  284  287 #> [13128,]  265  285  288 #> [13129,]  264  284  287 #> [13130,]  264  284  287 #> [13131,]  264  284  287 #> [13132,]  264  284  287 #> [13133,]  265  286  288 #> [13134,]  264  284  287 #> [13135,]  264  284  287 #> [13136,]  264  284  287 #> [13137,]  264  284  287 #> [13138,]  265  285  288 #> [13139,]  264  284  287 #> [13140,]  264  284  287 #> [13141,]  265  286  288 #> [13142,]  265  285  288 #> [13143,]  265  285  288 #> [13144,]  264  284  287 #> [13145,]  265  285  288 #> [13146,]  265  285  288 #> [13147,]  264  284  287 #> [13148,]  264  284  287 #> [13149,]  264  284  287 #> [13150,]  265  286  288 #> [13151,]  265  285  288 #> [13152,]  265  285  288 #> [13153,]  265  286  288 #> [13154,]  264  284  287 #> [13155,]  265  285  288 #> [13156,]  265  285  288 #> [13157,]  265  285  288 #> [13158,]  265  286  288 #> [13159,]  264  284  287 #> [13160,]  265  286  288 #> [13161,]  265  286  288 #> [13162,]  264  284  287 #> [13163,]  265  286  288 #> [13164,]  265  285  288 #> [13165,]  265  285  288 #> [13166,]  265  285  288 #> [13167,]  265  285  288 #> [13168,]  265  285  288 #> [13169,]  264  284  287 #> [13170,]  264  284  287 #> [13171,]  265  285  288 #> [13172,]  265  285  288 #> [13173,]  265  285  288 #> [13174,]  265  285  288 #> [13175,]  265  286  288 #> [13176,]  265  285  288 #> [13177,]  264  284  287 #> [13178,]  265  286  288 #> [13179,]  264  284  287 #> [13180,]  264  284  287 #> [13181,]  265  286  288 #> [13182,]  264  284  287 #> [13183,]  264  284  287 #> [13184,]  265  286  288 #> [13185,]  264  284  287 #> [13186,]  264  284  287 #> [13187,]  265  286  288 #> [13188,]  265  286  288 #> [13189,]  264  284  287 #> [13190,]  265  285  288 #> [13191,]  265  285  288 #> [13192,]  265  286  288 #> [13193,]  264  284  287 #> [13194,]  265  285  288 #> [13195,]  264  284  287 #> [13196,]  265  285  288 #> [13197,]  265  285  288 #> [13198,]  264  284  287 #> [13199,]  264  284  287 #> [13200,]  264  284  287 #> [13201,]  267  288  289 #> [13202,]  266  287  290 #> [13203,]  266  287  290 #> [13204,]  266  287  290 #> [13205,]  266  287  290 #> [13206,]  266  287  290 #> [13207,]  266  287  290 #> [13208,]  266  287  290 #> [13209,]  267  288  289 #> [13210,]  266  287  290 #> [13211,]  266  287  290 #> [13212,]  266  287  290 #> [13213,]  267  288  289 #> [13214,]  266  287  290 #> [13215,]  266  287  290 #> [13216,]  266  287  290 #> [13217,]  267  288  289 #> [13218,]  267  288  289 #> [13219,]  266  287  290 #> [13220,]  267  288  289 #> [13221,]  266  287  290 #> [13222,]  266  287  290 #> [13223,]  266  287  290 #> [13224,]  266  287  290 #> [13225,]  266  287  290 #> [13226,]  266  287  290 #> [13227,]  267  288  289 #> [13228,]  266  287  290 #> [13229,]  266  287  290 #> [13230,]  266  287  290 #> [13231,]  266  287  290 #> [13232,]  266  287  290 #> [13233,]  267  288  289 #> [13234,]  266  287  290 #> [13235,]  266  287  290 #> [13236,]  267  288  289 #> [13237,]  266  287  290 #> [13238,]  267  288  289 #> [13239,]  266  287  290 #> [13240,]  266  287  290 #> [13241,]  266  287  290 #> [13242,]  267  288  289 #> [13243,]  266  287  290 #> [13244,]  266  287  290 #> [13245,]  266  287  290 #> [13246,]  266  287  290 #> [13247,]  266  287  290 #> [13248,]  266  287  290 #> [13249,]  266  287  290 #> [13250,]  266  287  290 #> [13251,]  267  288  289 #> [13252,]  266  287  290 #> [13253,]  267  288  289 #> [13254,]  267  288  289 #> [13255,]  266  287  290 #> [13256,]  267  288  289 #> [13257,]  266  287  290 #> [13258,]  266  287  290 #> [13259,]  266  287  290 #> [13260,]  266  287  290 #> [13261,]  266  287  290 #> [13262,]  267  288  289 #> [13263,]  266  287  290 #> [13264,]  266  287  290 #> [13265,]  267  288  289 #> [13266,]  267  288  289 #> [13267,]  266  287  290 #> [13268,]  266  287  290 #> [13269,]  266  287  290 #> [13270,]  266  287  290 #> [13271,]  266  287  290 #> [13272,]  266  287  290 #> [13273,]  266  287  290 #> [13274,]  266  287  290 #> [13275,]  266  287  290 #> [13276,]  266  287  290 #> [13277,]  267  288  289 #> [13278,]  266  287  290 #> [13279,]  267  288  289 #> [13280,]  266  287  290 #> [13281,]  266  287  290 #> [13282,]  267  288  289 #> [13283,]  267  288  289 #> [13284,]  267  288  289 #> [13285,]  267  288  289 #> [13286,]  266  287  290 #> [13287,]  267  288  289 #> [13288,]  266  287  290 #> [13289,]  267  288  289 #> [13290,]  266  287  290 #> [13291,]  267  288  289 #> [13292,]  266  287  290 #> [13293,]  267  288  289 #> [13294,]  267  288  289 #> [13295,]  266  287  290 #> [13296,]  266  287  290 #> [13297,]  266  287  290 #> [13298,]  266  287  290 #> [13299,]  266  287  290 #> [13300,]  266  287  290 #> [13301,]  270  290  291 #> [13302,]  270  290  291 #> [13303,]  268  289  291 #> [13304,]  269  290  291 #> [13305,]  270  290  291 #> [13306,]  270  290  291 #> [13307,]  270  290  291 #> [13308,]  270  290  291 #> [13309,]  269  290  291 #> [13310,]  268  289  291 #> [13311,]  268  289  291 #> [13312,]  270  290  291 #> [13313,]  270  290  291 #> [13314,]  268  289  291 #> [13315,]  270  290  291 #> [13316,]  270  290  291 #> [13317,]  269  290  291 #> [13318,]  270  290  291 #> [13319,]  270  290  291 #> [13320,]  270  290  291 #> [13321,]  270  290  291 #> [13322,]  270  290  291 #> [13323,]  270  290  291 #> [13324,]  270  290  291 #> [13325,]  270  290  291 #> [13326,]  270  290  291 #> [13327,]  270  290  291 #> [13328,]  270  290  291 #> [13329,]  270  290  291 #> [13330,]  270  290  291 #> [13331,]  268  289  291 #> [13332,]  268  289  291 #> [13333,]  270  290  291 #> [13334,]  270  290  291 #> [13335,]  270  290  291 #> [13336,]  270  290  291 #> [13337,]  270  290  291 #> [13338,]  270  290  291 #> [13339,]  270  290  291 #> [13340,]  268  289  291 #> [13341,]  270  290  291 #> [13342,]  270  290  291 #> [13343,]  270  290  291 #> [13344,]  270  290  291 #> [13345,]  270  290  291 #> [13346,]  270  290  291 #> [13347,]  270  290  291 #> [13348,]  268  289  291 #> [13349,]  270  290  291 #> [13350,]  270  290  291 #> [13351,]  270  290  291 #> [13352,]  269  290  291 #> [13353,]  270  290  291 #> [13354,]  270  290  291 #> [13355,]  270  290  291 #> [13356,]  270  290  291 #> [13357,]  270  290  291 #> [13358,]  270  290  291 #> [13359,]  270  290  291 #> [13360,]  270  290  291 #> [13361,]  270  290  291 #> [13362,]  270  290  291 #> [13363,]  270  290  291 #> [13364,]  270  290  291 #> [13365,]  270  290  291 #> [13366,]  270  290  291 #> [13367,]  270  290  291 #> [13368,]  270  290  291 #> [13369,]  270  290  291 #> [13370,]  268  289  291 #> [13371,]  270  290  291 #> [13372,]  270  290  291 #> [13373,]  270  290  291 #> [13374,]  268  289  291 #> [13375,]  270  290  291 #> [13376,]  270  290  291 #> [13377,]  270  290  291 #> [13378,]  270  290  291 #> [13379,]  270  290  291 #> [13380,]  270  290  291 #> [13381,]  269  290  291 #> [13382,]  269  290  291 #> [13383,]  270  290  291 #> [13384,]  270  290  291 #> [13385,]  270  290  291 #> [13386,]  270  290  291 #> [13387,]  270  290  291 #> [13388,]  270  290  291 #> [13389,]  270  290  291 #> [13390,]  270  290  291 #> [13391,]  270  290  291 #> [13392,]  270  290  291 #> [13393,]  270  290  291 #> [13394,]  270  290  291 #> [13395,]  269  290  291 #> [13396,]  270  290  291 #> [13397,]  270  290  291 #> [13398,]  268  289  291 #> [13399,]  270  290  291 #> [13400,]  270  290  291 #> [13401,]  271  291  292 #> [13402,]  271  292  293 #> [13403,]  271  292  293 #> [13404,]  271  291  292 #> [13405,]  271  291  292 #> [13406,]  271  292  294 #> [13407,]  271  292  293 #> [13408,]  271  291  292 #> [13409,]  271  291  292 #> [13410,]  271  291  292 #> [13411,]  271  291  292 #> [13412,]  271  292  294 #> [13413,]  271  291  292 #> [13414,]  271  291  292 #> [13415,]  271  291  292 #> [13416,]  271  291  292 #> [13417,]  271  291  292 #> [13418,]  271  292  293 #> [13419,]  271  292  293 #> [13420,]  271  292  294 #> [13421,]  271  291  292 #> [13422,]  271  291  292 #> [13423,]  271  292  293 #> [13424,]  271  291  292 #> [13425,]  271  292  293 #> [13426,]  271  291  292 #> [13427,]  271  291  292 #> [13428,]  271  292  293 #> [13429,]  271  291  292 #> [13430,]  271  291  292 #> [13431,]  271  292  293 #> [13432,]  271  292  293 #> [13433,]  271  292  294 #> [13434,]  271  292  293 #> [13435,]  271  291  292 #> [13436,]  271  291  292 #> [13437,]  271  291  292 #> [13438,]  271  291  292 #> [13439,]  271  291  292 #> [13440,]  271  292  293 #> [13441,]  271  291  292 #> [13442,]  271  292  293 #> [13443,]  271  291  292 #> [13444,]  271  291  292 #> [13445,]  271  291  292 #> [13446,]  271  291  292 #> [13447,]  271  291  292 #> [13448,]  271  292  293 #> [13449,]  271  291  292 #> [13450,]  271  291  292 #> [13451,]  271  291  292 #> [13452,]  271  291  292 #> [13453,]  271  291  292 #> [13454,]  271  291  292 #> [13455,]  271  291  292 #> [13456,]  271  292  294 #> [13457,]  271  291  292 #> [13458,]  271  291  292 #> [13459,]  271  291  292 #> [13460,]  271  292  293 #> [13461,]  271  291  292 #> [13462,]  271  291  292 #> [13463,]  271  291  292 #> [13464,]  271  292  294 #> [13465,]  271  292  294 #> [13466,]  271  291  292 #> [13467,]  271  291  292 #> [13468,]  271  291  292 #> [13469,]  271  291  292 #> [13470,]  271  292  293 #> [13471,]  271  292  293 #> [13472,]  271  291  292 #> [13473,]  271  292  293 #> [13474,]  271  291  292 #> [13475,]  271  291  292 #> [13476,]  271  291  292 #> [13477,]  271  291  292 #> [13478,]  271  292  294 #> [13479,]  271  291  292 #> [13480,]  271  291  292 #> [13481,]  271  291  292 #> [13482,]  271  291  292 #> [13483,]  271  291  292 #> [13484,]  271  292  293 #> [13485,]  271  291  292 #> [13486,]  271  291  292 #> [13487,]  271  291  292 #> [13488,]  271  291  292 #> [13489,]  271  291  292 #> [13490,]  271  291  292 #> [13491,]  271  291  292 #> [13492,]  271  291  292 #> [13493,]  271  292  293 #> [13494,]  271  291  292 #> [13495,]  271  291  292 #> [13496,]  271  291  292 #> [13497,]  271  292  294 #> [13498,]  271  292  293 #> [13499,]  271  291  292 #> [13500,]  271  292  293 #> [13501,]  272  293  295 #> [13502,]  273  294  296 #> [13503,]  272  293  295 #> [13504,]  272  293  295 #> [13505,]  273  294  296 #> [13506,]  272  293  295 #> [13507,]  273  294  296 #> [13508,]  272  293  295 #> [13509,]  273  294  296 #> [13510,]  273  294  296 #> [13511,]  272  293  295 #> [13512,]  273  294  296 #> [13513,]  273  294  296 #> [13514,]  272  293  295 #> [13515,]  272  293  295 #> [13516,]  272  293  295 #> [13517,]  273  294  296 #> [13518,]  273  294  296 #> [13519,]  272  293  295 #> [13520,]  273  294  296 #> [13521,]  273  294  296 #> [13522,]  273  294  296 #> [13523,]  273  294  296 #> [13524,]  273  294  296 #> [13525,]  273  294  296 #> [13526,]  272  293  295 #> [13527,]  273  294  296 #> [13528,]  272  293  295 #> [13529,]  273  294  296 #> [13530,]  273  294  296 #> [13531,]  273  294  296 #> [13532,]  273  294  296 #> [13533,]  273  294  296 #> [13534,]  272  293  295 #> [13535,]  272  293  295 #> [13536,]  273  294  296 #> [13537,]  272  293  295 #> [13538,]  272  293  295 #> [13539,]  273  294  296 #> [13540,]  273  294  296 #> [13541,]  273  294  296 #> [13542,]  272  293  295 #> [13543,]  273  294  296 #> [13544,]  273  294  296 #> [13545,]  272  293  295 #> [13546,]  272  293  295 #> [13547,]  273  294  296 #> [13548,]  273  294  296 #> [13549,]  272  293  295 #> [13550,]  273  294  296 #> [13551,]  273  294  296 #> [13552,]  272  293  295 #> [13553,]  273  294  296 #> [13554,]  273  294  296 #> [13555,]  272  293  295 #> [13556,]  272  293  295 #> [13557,]  272  293  295 #> [13558,]  273  294  296 #> [13559,]  272  293  295 #> [13560,]  273  294  296 #> [13561,]  273  294  296 #> [13562,]  272  293  295 #> [13563,]  273  294  296 #> [13564,]  272  293  295 #> [13565,]  272  293  295 #> [13566,]  273  294  296 #> [13567,]  273  294  296 #> [13568,]  272  293  295 #> [13569,]  272  293  295 #> [13570,]  273  294  296 #> [13571,]  273  294  296 #> [13572,]  272  293  295 #> [13573,]  272  293  295 #> [13574,]  273  294  296 #> [13575,]  273  294  296 #> [13576,]  273  294  296 #> [13577,]  272  293  295 #> [13578,]  273  294  296 #> [13579,]  272  293  295 #> [13580,]  273  294  296 #> [13581,]  273  294  296 #> [13582,]  272  293  295 #> [13583,]  273  294  296 #> [13584,]  273  294  296 #> [13585,]  272  293  295 #> [13586,]  273  294  296 #> [13587,]  273  294  296 #> [13588,]  273  294  296 #> [13589,]  272  293  295 #> [13590,]  273  294  296 #> [13591,]  272  293  295 #> [13592,]  273  294  296 #> [13593,]  273  294  296 #> [13594,]  272  293  295 #> [13595,]  273  294  296 #> [13596,]  272  293  295 #> [13597,]  272  293  295 #> [13598,]  272  293  295 #> [13599,]  273  294  296 #> [13600,]  272  293  295 #> [13601,]  276  296  298 #> [13602,]  274  295  297 #> [13603,]  274  295  297 #> [13604,]  276  296  298 #> [13605,]  276  296  298 #> [13606,]  274  295  297 #> [13607,]  276  296  298 #> [13608,]  276  296  298 #> [13609,]  276  296  298 #> [13610,]  276  296  298 #> [13611,]  275  296  298 #> [13612,]  274  295  297 #> [13613,]  276  296  298 #> [13614,]  276  296  298 #> [13615,]  275  296  298 #> [13616,]  276  296  298 #> [13617,]  275  296  298 #> [13618,]  274  295  297 #> [13619,]  274  295  297 #> [13620,]  274  295  297 #> [13621,]  276  296  298 #> [13622,]  276  296  298 #> [13623,]  275  296  298 #> [13624,]  276  296  298 #> [13625,]  274  295  297 #> [13626,]  275  296  298 #> [13627,]  276  296  298 #> [13628,]  274  295  297 #> [13629,]  275  296  298 #> [13630,]  275  296  298 #> [13631,]  274  295  297 #> [13632,]  276  296  298 #> [13633,]  274  295  297 #> [13634,]  274  295  297 #> [13635,]  275  296  298 #> [13636,]  276  296  298 #> [13637,]  275  296  298 #> [13638,]  276  296  298 #> [13639,]  276  296  298 #> [13640,]  276  296  298 #> [13641,]  276  296  298 #> [13642,]  275  296  298 #> [13643,]  275  296  298 #> [13644,]  275  296  298 #> [13645,]  276  296  298 #> [13646,]  275  296  298 #> [13647,]  275  296  298 #> [13648,]  275  296  298 #> [13649,]  276  296  298 #> [13650,]  276  296  298 #> [13651,]  275  296  298 #> [13652,]  276  296  298 #> [13653,]  276  296  298 #> [13654,]  276  296  298 #> [13655,]  276  296  298 #> [13656,]  275  296  298 #> [13657,]  276  296  298 #> [13658,]  276  296  298 #> [13659,]  276  296  298 #> [13660,]  274  295  297 #> [13661,]  275  296  298 #> [13662,]  275  296  298 #> [13663,]  275  296  298 #> [13664,]  275  296  298 #> [13665,]  274  295  297 #> [13666,]  275  296  298 #> [13667,]  276  296  298 #> [13668,]  275  296  298 #> [13669,]  275  296  298 #> [13670,]  274  295  297 #> [13671,]  274  295  297 #> [13672,]  276  296  298 #> [13673,]  274  295  297 #> [13674,]  276  296  298 #> [13675,]  275  296  298 #> [13676,]  276  296  298 #> [13677,]  276  296  298 #> [13678,]  275  296  298 #> [13679,]  275  296  298 #> [13680,]  276  296  298 #> [13681,]  275  296  298 #> [13682,]  276  296  298 #> [13683,]  276  296  298 #> [13684,]  274  295  297 #> [13685,]  276  296  298 #> [13686,]  276  296  298 #> [13687,]  276  296  298 #> [13688,]  276  296  298 #> [13689,]  276  296  298 #> [13690,]  276  296  298 #> [13691,]  276  296  298 #> [13692,]  275  296  298 #> [13693,]  274  295  297 #> [13694,]  275  296  298 #> [13695,]  275  296  298 #> [13696,]  275  296  298 #> [13697,]  274  295  297 #> [13698,]  274  295  297 #> [13699,]  276  296  298 #> [13700,]  274  295  297 #> [13701,]  277  299  300 #> [13702,]  277  297  299 #> [13703,]  277  297  299 #> [13704,]  277  299  300 #> [13705,]  277  297  299 #> [13706,]  277  297  299 #> [13707,]  277  299  300 #> [13708,]  277  298  300 #> [13709,]  277  299  300 #> [13710,]  277  299  300 #> [13711,]  277  297  299 #> [13712,]  277  297  299 #> [13713,]  277  299  300 #> [13714,]  277  297  299 #> [13715,]  277  298  300 #> [13716,]  277  299  300 #> [13717,]  277  298  300 #> [13718,]  277  298  300 #> [13719,]  277  297  299 #> [13720,]  277  297  299 #> [13721,]  277  298  300 #> [13722,]  277  297  299 #> [13723,]  277  298  300 #> [13724,]  277  297  299 #> [13725,]  277  299  300 #> [13726,]  277  297  299 #> [13727,]  277  298  300 #> [13728,]  277  299  300 #> [13729,]  277  297  299 #> [13730,]  277  297  299 #> [13731,]  277  297  299 #> [13732,]  277  297  299 #> [13733,]  277  297  299 #> [13734,]  277  297  299 #> [13735,]  277  297  299 #> [13736,]  277  297  299 #> [13737,]  277  297  299 #> [13738,]  277  297  299 #> [13739,]  277  299  300 #> [13740,]  277  297  299 #> [13741,]  277  297  299 #> [13742,]  277  297  299 #> [13743,]  277  298  300 #> [13744,]  277  297  299 #> [13745,]  277  299  300 #> [13746,]  277  298  300 #> [13747,]  277  298  300 #> [13748,]  277  297  299 #> [13749,]  277  297  299 #> [13750,]  277  297  299 #> [13751,]  277  297  299 #> [13752,]  277  297  299 #> [13753,]  277  299  300 #> [13754,]  277  297  299 #> [13755,]  277  297  299 #> [13756,]  277  298  300 #> [13757,]  277  297  299 #> [13758,]  277  297  299 #> [13759,]  277  297  299 #> [13760,]  277  297  299 #> [13761,]  277  298  300 #> [13762,]  277  297  299 #> [13763,]  277  297  299 #> [13764,]  277  298  300 #> [13765,]  277  297  299 #> [13766,]  277  297  299 #> [13767,]  277  297  299 #> [13768,]  277  297  299 #> [13769,]  277  297  299 #> [13770,]  277  298  300 #> [13771,]  277  298  300 #> [13772,]  277  299  300 #> [13773,]  277  299  300 #> [13774,]  277  298  300 #> [13775,]  277  298  300 #> [13776,]  277  299  300 #> [13777,]  277  298  300 #> [13778,]  277  297  299 #> [13779,]  277  297  299 #> [13780,]  277  297  299 #> [13781,]  277  297  299 #> [13782,]  277  298  300 #> [13783,]  277  297  299 #> [13784,]  277  298  300 #> [13785,]  277  297  299 #> [13786,]  277  297  299 #> [13787,]  277  299  300 #> [13788,]  277  298  300 #> [13789,]  277  297  299 #> [13790,]  277  299  300 #> [13791,]  277  297  299 #> [13792,]  277  297  299 #> [13793,]  277  297  299 #> [13794,]  277  298  300 #> [13795,]  277  298  300 #> [13796,]  277  298  300 #> [13797,]  277  297  299 #> [13798,]  277  297  299 #> [13799,]  277  297  299 #> [13800,]  277  298  300 #> [13801,]  279  301  302 #> [13802,]  278  300  301 #> [13803,]  278  300  301 #> [13804,]  278  300  301 #> [13805,]  279  301  302 #> [13806,]  278  300  301 #> [13807,]  278  300  301 #> [13808,]  278  300  301 #> [13809,]  278  300  301 #> [13810,]  278  300  301 #> [13811,]  278  300  301 #> [13812,]  278  300  301 #> [13813,]  278  300  301 #> [13814,]  279  301  302 #> [13815,]  279  301  302 #> [13816,]  278  300  301 #> [13817,]  278  300  301 #> [13818,]  279  301  302 #> [13819,]  278  300  301 #> [13820,]  278  300  301 #> [13821,]  278  300  301 #> [13822,]  278  300  301 #> [13823,]  278  300  301 #> [13824,]  278  300  301 #> [13825,]  278  300  301 #> [13826,]  278  300  301 #> [13827,]  279  301  302 #> [13828,]  278  300  301 #> [13829,]  278  300  301 #> [13830,]  278  300  301 #> [13831,]  278  300  301 #> [13832,]  279  301  302 #> [13833,]  278  300  301 #> [13834,]  278  300  301 #> [13835,]  278  300  301 #> [13836,]  278  300  301 #> [13837,]  278  300  301 #> [13838,]  278  300  301 #> [13839,]  278  300  301 #> [13840,]  278  300  301 #> [13841,]  278  300  301 #> [13842,]  278  300  301 #> [13843,]  279  301  302 #> [13844,]  278  300  301 #> [13845,]  278  300  301 #> [13846,]  278  300  301 #> [13847,]  278  300  301 #> [13848,]  278  300  301 #> [13849,]  278  300  301 #> [13850,]  278  300  301 #> [13851,]  278  300  301 #> [13852,]  278  300  301 #> [13853,]  278  300  301 #> [13854,]  278  300  301 #> [13855,]  278  300  301 #> [13856,]  278  300  301 #> [13857,]  278  300  301 #> [13858,]  279  301  302 #> [13859,]  278  300  301 #> [13860,]  278  300  301 #> [13861,]  278  300  301 #> [13862,]  278  300  301 #> [13863,]  278  300  301 #> [13864,]  278  300  301 #> [13865,]  278  300  301 #> [13866,]  278  300  301 #> [13867,]  278  300  301 #> [13868,]  278  300  301 #> [13869,]  278  300  301 #> [13870,]  279  301  302 #> [13871,]  279  301  302 #> [13872,]  278  300  301 #> [13873,]  278  300  301 #> [13874,]  278  300  301 #> [13875,]  279  301  302 #> [13876,]  278  300  301 #> [13877,]  278  300  301 #> [13878,]  278  300  301 #> [13879,]  279  301  302 #> [13880,]  278  300  301 #> [13881,]  278  300  301 #> [13882,]  278  300  301 #> [13883,]  278  300  301 #> [13884,]  278  300  301 #> [13885,]  278  300  301 #> [13886,]  278  300  301 #> [13887,]  279  301  302 #> [13888,]  278  300  301 #> [13889,]  278  300  301 #> [13890,]  278  300  301 #> [13891,]  279  301  302 #> [13892,]  278  300  301 #> [13893,]  278  300  301 #> [13894,]  278  300  301 #> [13895,]  279  301  302 #> [13896,]  278  300  301 #> [13897,]  278  300  301 #> [13898,]  278  300  301 #> [13899,]  278  300  301 #> [13900,]  279  301  302 #> [13901,]  280  302  304 #> [13902,]  280  302  303 #> [13903,]  280  302  304 #> [13904,]  280  302  304 #> [13905,]  280  302  303 #> [13906,]  280  302  303 #> [13907,]  281  303  304 #> [13908,]  280  302  303 #> [13909,]  280  302  304 #> [13910,]  280  302  304 #> [13911,]  280  302  303 #> [13912,]  280  302  303 #> [13913,]  280  302  304 #> [13914,]  280  302  304 #> [13915,]  280  302  303 #> [13916,]  281  303  304 #> [13917,]  280  302  303 #> [13918,]  280  302  303 #> [13919,]  280  302  303 #> [13920,]  281  303  304 #> [13921,]  280  302  303 #> [13922,]  280  302  304 #> [13923,]  280  302  303 #> [13924,]  282  304  304 #> [13925,]  280  302  304 #> [13926,]  280  302  303 #> [13927,]  280  302  303 #> [13928,]  282  304  304 #> [13929,]  280  302  303 #> [13930,]  280  302  303 #> [13931,]  280  302  303 #> [13932,]  280  302  303 #> [13933,]  280  302  303 #> [13934,]  280  302  303 #> [13935,]  280  302  303 #> [13936,]  280  302  304 #> [13937,]  280  302  303 #> [13938,]  280  302  303 #> [13939,]  280  302  304 #> [13940,]  280  302  303 #> [13941,]  280  302  304 #> [13942,]  280  302  303 #> [13943,]  280  302  303 #> [13944,]  280  302  303 #> [13945,]  280  302  304 #> [13946,]  280  302  303 #> [13947,]  280  302  303 #> [13948,]  280  302  303 #> [13949,]  280  302  304 #> [13950,]  281  303  304 #> [13951,]  280  302  303 #> [13952,]  282  304  304 #> [13953,]  280  302  304 #> [13954,]  280  302  304 #> [13955,]  280  302  304 #> [13956,]  280  302  303 #> [13957,]  280  302  304 #> [13958,]  280  302  304 #> [13959,]  280  302  304 #> [13960,]  280  302  303 #> [13961,]  280  302  303 #> [13962,]  280  302  303 #> [13963,]  280  302  303 #> [13964,]  280  302  303 #> [13965,]  280  302  303 #> [13966,]  280  302  303 #> [13967,]  280  302  304 #> [13968,]  280  302  303 #> [13969,]  280  302  303 #> [13970,]  280  302  303 #> [13971,]  280  302  304 #> [13972,]  280  302  304 #> [13973,]  280  302  304 #> [13974,]  280  302  303 #> [13975,]  280  302  303 #> [13976,]  282  304  304 #> [13977,]  280  302  303 #> [13978,]  280  302  303 #> [13979,]  280  302  303 #> [13980,]  280  302  303 #> [13981,]  280  302  303 #> [13982,]  280  302  303 #> [13983,]  280  302  303 #> [13984,]  280  302  303 #> [13985,]  280  302  304 #> [13986,]  282  304  304 #> [13987,]  280  302  304 #> [13988,]  280  302  304 #> [13989,]  280  302  303 #> [13990,]  280  302  304 #> [13991,]  281  303  304 #> [13992,]  280  302  303 #> [13993,]  280  302  303 #> [13994,]  280  302  303 #> [13995,]  280  302  303 #> [13996,]  280  302  303 #> [13997,]  280  302  303 #> [13998,]  280  302  303 #> [13999,]  280  302  303 #> [14000,]  280  302  303 #> [14001,]  284  306  306 #> [14002,]  284  306  306 #> [14003,]  283  305  305 #> [14004,]  284  306  306 #> [14005,]  284  306  306 #> [14006,]  284  306  306 #> [14007,]  283  305  305 #> [14008,]  284  306  306 #> [14009,]  284  306  306 #> [14010,]  284  306  306 #> [14011,]  284  306  306 #> [14012,]  284  306  306 #> [14013,]  284  306  306 #> [14014,]  284  306  306 #> [14015,]  284  306  306 #> [14016,]  284  306  306 #> [14017,]  284  306  306 #> [14018,]  284  306  306 #> [14019,]  284  306  306 #> [14020,]  284  306  306 #> [14021,]  284  306  306 #> [14022,]  284  306  306 #> [14023,]  284  306  306 #> [14024,]  284  306  306 #> [14025,]  284  306  306 #> [14026,]  284  306  306 #> [14027,]  284  306  306 #> [14028,]  284  306  306 #> [14029,]  284  306  306 #> [14030,]  284  306  306 #> [14031,]  284  306  306 #> [14032,]  284  306  306 #> [14033,]  284  306  306 #> [14034,]  284  306  306 #> [14035,]  284  306  306 #> [14036,]  284  306  306 #> [14037,]  284  306  306 #> [14038,]  284  306  306 #> [14039,]  284  306  306 #> [14040,]  284  306  306 #> [14041,]  284  306  306 #> [14042,]  284  306  306 #> [14043,]  284  306  306 #> [14044,]  284  306  306 #> [14045,]  284  306  306 #> [14046,]  284  306  306 #> [14047,]  284  306  306 #> [14048,]  284  306  306 #> [14049,]  283  305  305 #> [14050,]  284  306  306 #> [14051,]  284  306  306 #> [14052,]  284  306  306 #> [14053,]  283  305  305 #> [14054,]  284  306  306 #> [14055,]  284  306  306 #> [14056,]  283  305  305 #> [14057,]  284  306  306 #> [14058,]  284  306  306 #> [14059,]  284  306  306 #> [14060,]  284  306  306 #> [14061,]  284  306  306 #> [14062,]  284  306  306 #> [14063,]  284  306  306 #> [14064,]  284  306  306 #> [14065,]  284  306  306 #> [14066,]  284  306  306 #> [14067,]  284  306  306 #> [14068,]  284  306  306 #> [14069,]  284  306  306 #> [14070,]  284  306  306 #> [14071,]  284  306  306 #> [14072,]  284  306  306 #> [14073,]  284  306  306 #> [14074,]  284  306  306 #> [14075,]  284  306  306 #> [14076,]  284  306  306 #> [14077,]  284  306  306 #> [14078,]  284  306  306 #> [14079,]  284  306  306 #> [14080,]  284  306  306 #> [14081,]  284  306  306 #> [14082,]  284  306  306 #> [14083,]  284  306  306 #> [14084,]  284  306  306 #> [14085,]  284  306  306 #> [14086,]  284  306  306 #> [14087,]  284  306  306 #> [14088,]  284  306  306 #> [14089,]  284  306  306 #> [14090,]  284  306  306 #> [14091,]  284  306  306 #> [14092,]  284  306  306 #> [14093,]  284  306  306 #> [14094,]  284  306  306 #> [14095,]  284  306  306 #> [14096,]  284  306  306 #> [14097,]  284  306  306 #> [14098,]  284  306  306 #> [14099,]  284  306  306 #> [14100,]  284  306  306 #> [14101,]  285  307  307 #> [14102,]  285  307  307 #> [14103,]  285  307  307 #> [14104,]  285  307  307 #> [14105,]  285  307  307 #> [14106,]  285  307  307 #> [14107,]  285  307  307 #> [14108,]  285  307  307 #> [14109,]  285  307  307 #> [14110,]  286  308  308 #> [14111,]  285  307  307 #> [14112,]  285  307  307 #> [14113,]  285  307  307 #> [14114,]  285  307  307 #> [14115,]  285  307  307 #> [14116,]  285  307  307 #> [14117,]  285  307  307 #> [14118,]  286  308  308 #> [14119,]  285  307  307 #> [14120,]  285  307  307 #> [14121,]  285  307  307 #> [14122,]  285  307  307 #> [14123,]  285  307  307 #> [14124,]  285  307  307 #> [14125,]  286  308  308 #> [14126,]  285  307  307 #> [14127,]  285  307  307 #> [14128,]  285  307  307 #> [14129,]  285  307  307 #> [14130,]  285  307  307 #> [14131,]  285  307  307 #> [14132,]  285  307  307 #> [14133,]  285  307  307 #> [14134,]  285  307  307 #> [14135,]  285  307  307 #> [14136,]  285  307  307 #> [14137,]  285  307  307 #> [14138,]  285  307  307 #> [14139,]  286  308  308 #> [14140,]  285  307  307 #> [14141,]  285  307  307 #> [14142,]  285  307  307 #> [14143,]  286  308  308 #> [14144,]  285  307  307 #> [14145,]  286  308  308 #> [14146,]  285  307  307 #> [14147,]  285  307  307 #> [14148,]  285  307  307 #> [14149,]  285  307  307 #> [14150,]  285  307  307 #> [14151,]  285  307  307 #> [14152,]  285  307  307 #> [14153,]  285  307  307 #> [14154,]  285  307  307 #> [14155,]  285  307  307 #> [14156,]  285  307  307 #> [14157,]  285  307  307 #> [14158,]  285  307  307 #> [14159,]  285  307  307 #> [14160,]  285  307  307 #> [14161,]  285  307  307 #> [14162,]  285  307  307 #> [14163,]  285  307  307 #> [14164,]  285  307  307 #> [14165,]  285  307  307 #> [14166,]  285  307  307 #> [14167,]  285  307  307 #> [14168,]  285  307  307 #> [14169,]  285  307  307 #> [14170,]  285  307  307 #> [14171,]  285  307  307 #> [14172,]  285  307  307 #> [14173,]  286  308  308 #> [14174,]  285  307  307 #> [14175,]  286  308  308 #> [14176,]  285  307  307 #> [14177,]  286  308  308 #> [14178,]  285  307  307 #> [14179,]  285  307  307 #> [14180,]  285  307  307 #> [14181,]  285  307  307 #> [14182,]  285  307  307 #> [14183,]  285  307  307 #> [14184,]  285  307  307 #> [14185,]  285  307  307 #> [14186,]  285  307  307 #> [14187,]  285  307  307 #> [14188,]  285  307  307 #> [14189,]  285  307  307 #> [14190,]  285  307  307 #> [14191,]  285  307  307 #> [14192,]  285  307  307 #> [14193,]  285  307  307 #> [14194,]  285  307  307 #> [14195,]  285  307  307 #> [14196,]  285  307  307 #> [14197,]  285  307  307 #> [14198,]  285  307  307 #> [14199,]  285  307  307 #> [14200,]  285  307  307 #> [14201,]  288  309  310 #> [14202,]  288  309  310 #> [14203,]  287  309  310 #> [14204,]  288  309  309 #> [14205,]  288  309  310 #> [14206,]  288  309  310 #> [14207,]  288  309  310 #> [14208,]  288  309  309 #> [14209,]  288  309  309 #> [14210,]  287  309  310 #> [14211,]  287  309  309 #> [14212,]  288  309  310 #> [14213,]  288  309  309 #> [14214,]  287  309  310 #> [14215,]  288  309  310 #> [14216,]  288  309  310 #> [14217,]  288  309  309 #> [14218,]  288  309  310 #> [14219,]  288  309  310 #> [14220,]  288  309  310 #> [14221,]  288  309  310 #> [14222,]  288  309  309 #> [14223,]  288  309  310 #> [14224,]  288  309  310 #> [14225,]  288  309  310 #> [14226,]  288  309  310 #> [14227,]  288  309  309 #> [14228,]  288  309  310 #> [14229,]  288  309  310 #> [14230,]  288  309  310 #> [14231,]  288  309  310 #> [14232,]  287  309  310 #> [14233,]  288  309  310 #> [14234,]  288  309  310 #> [14235,]  288  309  309 #> [14236,]  288  309  310 #> [14237,]  288  309  310 #> [14238,]  288  309  310 #> [14239,]  288  309  310 #> [14240,]  287  309  310 #> [14241,]  288  309  310 #> [14242,]  288  309  310 #> [14243,]  288  309  309 #> [14244,]  288  309  309 #> [14245,]  288  309  310 #> [14246,]  288  309  310 #> [14247,]  288  309  310 #> [14248,]  287  309  310 #> [14249,]  288  309  309 #> [14250,]  288  309  310 #> [14251,]  288  309  310 #> [14252,]  288  309  309 #> [14253,]  288  309  310 #> [14254,]  288  309  310 #> [14255,]  288  309  309 #> [14256,]  288  309  310 #> [14257,]  288  309  310 #> [14258,]  288  309  309 #> [14259,]  288  309  310 #> [14260,]  288  309  310 #> [14261,]  288  309  310 #> [14262,]  288  309  310 #> [14263,]  288  309  310 #> [14264,]  288  309  310 #> [14265,]  288  309  310 #> [14266,]  288  309  309 #> [14267,]  288  309  310 #> [14268,]  288  309  310 #> [14269,]  288  309  309 #> [14270,]  287  309  310 #> [14271,]  288  309  310 #> [14272,]  288  309  310 #> [14273,]  288  309  310 #> [14274,]  288  309  310 #> [14275,]  288  309  310 #> [14276,]  288  309  310 #> [14277,]  288  309  310 #> [14278,]  288  309  310 #> [14279,]  288  309  309 #> [14280,]  288  309  309 #> [14281,]  288  309  309 #> [14282,]  288  309  309 #> [14283,]  288  309  309 #> [14284,]  288  309  310 #> [14285,]  288  309  310 #> [14286,]  288  309  310 #> [14287,]  288  309  309 #> [14288,]  288  309  309 #> [14289,]  288  309  309 #> [14290,]  288  309  309 #> [14291,]  288  309  310 #> [14292,]  288  309  309 #> [14293,]  288  309  310 #> [14294,]  288  309  310 #> [14295,]  288  309  309 #> [14296,]  288  309  310 #> [14297,]  288  309  310 #> [14298,]  287  309  310 #> [14299,]  288  309  309 #> [14300,]  288  309  310 #> [14301,]  289  310  313 #> [14302,]  289  310  313 #> [14303,]  289  310  312 #> [14304,]  289  310  313 #> [14305,]  289  310  312 #> [14306,]  289  310  313 #> [14307,]  289  310  312 #> [14308,]  289  310  312 #> [14309,]  290  311  311 #> [14310,]  289  310  313 #> [14311,]  289  310  313 #> [14312,]  289  310  313 #> [14313,]  290  311  311 #> [14314,]  289  310  313 #> [14315,]  289  310  313 #> [14316,]  289  310  312 #> [14317,]  289  310  312 #> [14318,]  290  311  311 #> [14319,]  289  310  313 #> [14320,]  289  310  312 #> [14321,]  289  310  313 #> [14322,]  289  310  312 #> [14323,]  289  310  313 #> [14324,]  289  310  312 #> [14325,]  289  310  312 #> [14326,]  289  310  313 #> [14327,]  289  310  313 #> [14328,]  289  310  313 #> [14329,]  289  310  312 #> [14330,]  289  310  313 #> [14331,]  289  310  313 #> [14332,]  289  310  313 #> [14333,]  289  310  313 #> [14334,]  289  310  313 #> [14335,]  289  310  313 #> [14336,]  289  310  313 #> [14337,]  289  310  313 #> [14338,]  289  310  313 #> [14339,]  289  310  312 #> [14340,]  289  310  312 #> [14341,]  289  310  313 #> [14342,]  290  311  311 #> [14343,]  289  310  312 #> [14344,]  289  310  312 #> [14345,]  289  310  312 #> [14346,]  289  310  312 #> [14347,]  289  310  312 #> [14348,]  289  310  313 #> [14349,]  289  310  312 #> [14350,]  289  310  312 #> [14351,]  290  311  311 #> [14352,]  289  310  313 #> [14353,]  290  311  311 #> [14354,]  289  310  312 #> [14355,]  289  310  312 #> [14356,]  289  310  312 #> [14357,]  289  310  313 #> [14358,]  289  310  313 #> [14359,]  289  310  312 #> [14360,]  289  310  313 #> [14361,]  289  310  313 #> [14362,]  289  310  313 #> [14363,]  289  310  312 #> [14364,]  289  310  313 #> [14365,]  290  311  311 #> [14366,]  289  310  312 #> [14367,]  289  310  313 #> [14368,]  289  310  313 #> [14369,]  289  310  313 #> [14370,]  289  310  312 #> [14371,]  289  310  312 #> [14372,]  289  310  312 #> [14373,]  289  310  313 #> [14374,]  289  310  313 #> [14375,]  289  310  313 #> [14376,]  289  310  312 #> [14377,]  289  310  312 #> [14378,]  289  310  312 #> [14379,]  290  311  311 #> [14380,]  289  310  313 #> [14381,]  289  310  312 #> [14382,]  290  311  311 #> [14383,]  289  310  312 #> [14384,]  290  311  311 #> [14385,]  289  310  313 #> [14386,]  289  310  312 #> [14387,]  289  310  313 #> [14388,]  289  310  313 #> [14389,]  289  310  312 #> [14390,]  289  310  312 #> [14391,]  290  311  311 #> [14392,]  289  310  313 #> [14393,]  290  311  311 #> [14394,]  290  311  311 #> [14395,]  289  310  313 #> [14396,]  289  310  313 #> [14397,]  289  310  313 #> [14398,]  289  310  312 #> [14399,]  289  310  313 #> [14400,]  289  310  312 #> [14401,]  292  313  315 #> [14402,]  292  313  315 #> [14403,]  292  313  315 #> [14404,]  291  312  314 #> [14405,]  292  313  315 #> [14406,]  292  313  315 #> [14407,]  292  313  315 #> [14408,]  291  312  314 #> [14409,]  291  312  314 #> [14410,]  292  313  315 #> [14411,]  291  312  314 #> [14412,]  292  313  315 #> [14413,]  291  312  314 #> [14414,]  292  313  315 #> [14415,]  292  313  315 #> [14416,]  292  313  315 #> [14417,]  291  312  314 #> [14418,]  292  313  315 #> [14419,]  292  313  315 #> [14420,]  292  313  315 #> [14421,]  292  313  315 #> [14422,]  291  312  314 #> [14423,]  292  313  315 #> [14424,]  292  313  315 #> [14425,]  292  313  315 #> [14426,]  292  313  315 #> [14427,]  291  312  314 #> [14428,]  292  313  315 #> [14429,]  292  313  315 #> [14430,]  292  313  315 #> [14431,]  292  313  315 #> [14432,]  292  313  315 #> [14433,]  292  313  315 #> [14434,]  292  313  315 #> [14435,]  291  312  314 #> [14436,]  292  313  315 #> [14437,]  292  313  315 #> [14438,]  292  313  315 #> [14439,]  292  313  315 #> [14440,]  292  313  315 #> [14441,]  292  313  315 #> [14442,]  292  313  315 #> [14443,]  291  312  314 #> [14444,]  291  312  314 #> [14445,]  292  313  315 #> [14446,]  292  313  315 #> [14447,]  292  313  315 #> [14448,]  292  313  315 #> [14449,]  291  312  314 #> [14450,]  292  313  315 #> [14451,]  292  313  315 #> [14452,]  291  312  314 #> [14453,]  292  313  315 #> [14454,]  292  313  315 #> [14455,]  291  312  314 #> [14456,]  292  313  315 #> [14457,]  292  313  315 #> [14458,]  291  312  314 #> [14459,]  292  313  315 #> [14460,]  292  313  315 #> [14461,]  292  313  315 #> [14462,]  292  313  315 #> [14463,]  292  313  315 #> [14464,]  292  313  315 #> [14465,]  292  313  315 #> [14466,]  291  312  314 #> [14467,]  292  313  315 #> [14468,]  292  313  315 #> [14469,]  292  313  315 #> [14470,]  292  313  315 #> [14471,]  292  313  315 #> [14472,]  292  313  315 #> [14473,]  292  313  315 #> [14474,]  292  313  315 #> [14475,]  292  313  315 #> [14476,]  292  313  315 #> [14477,]  292  313  315 #> [14478,]  292  313  315 #> [14479,]  291  312  314 #> [14480,]  291  312  314 #> [14481,]  291  312  314 #> [14482,]  291  312  314 #> [14483,]  291  312  314 #> [14484,]  292  313  315 #> [14485,]  292  313  315 #> [14486,]  292  313  315 #> [14487,]  291  312  314 #> [14488,]  291  312  314 #> [14489,]  291  312  314 #> [14490,]  291  312  314 #> [14491,]  292  313  315 #> [14492,]  291  312  314 #> [14493,]  292  313  315 #> [14494,]  292  313  315 #> [14495,]  291  312  314 #> [14496,]  292  313  315 #> [14497,]  292  313  315 #> [14498,]  292  313  315 #> [14499,]  291  312  314 #> [14500,]  292  313  315 #> [14501,]  293  314  316 #> [14502,]  294  315  317 #> [14503,]  293  314  316 #> [14504,]  293  314  316 #> [14505,]  294  315  317 #> [14506,]  293  314  316 #> [14507,]  294  315  317 #> [14508,]  293  314  316 #> [14509,]  294  315  317 #> [14510,]  294  315  317 #> [14511,]  293  314  316 #> [14512,]  294  315  317 #> [14513,]  294  315  317 #> [14514,]  293  314  316 #> [14515,]  293  314  316 #> [14516,]  293  314  316 #> [14517,]  294  315  317 #> [14518,]  294  315  317 #> [14519,]  293  314  316 #> [14520,]  294  315  317 #> [14521,]  294  315  317 #> [14522,]  294  315  317 #> [14523,]  294  315  317 #> [14524,]  294  315  317 #> [14525,]  294  315  317 #> [14526,]  293  314  316 #> [14527,]  294  315  317 #> [14528,]  293  314  316 #> [14529,]  294  315  317 #> [14530,]  294  315  317 #> [14531,]  294  315  317 #> [14532,]  294  315  317 #> [14533,]  294  315  317 #> [14534,]  293  314  316 #> [14535,]  293  314  316 #> [14536,]  294  315  317 #> [14537,]  293  314  316 #> [14538,]  293  314  316 #> [14539,]  294  315  317 #> [14540,]  294  315  317 #> [14541,]  294  315  317 #> [14542,]  293  314  316 #> [14543,]  293  314  316 #> [14544,]  294  315  317 #> [14545,]  293  314  316 #> [14546,]  293  314  316 #> [14547,]  294  315  317 #> [14548,]  294  315  317 #> [14549,]  293  314  316 #> [14550,]  294  315  317 #> [14551,]  294  315  317 #> [14552,]  293  314  316 #> [14553,]  294  315  317 #> [14554,]  294  315  317 #> [14555,]  293  314  316 #> [14556,]  293  314  316 #> [14557,]  293  314  316 #> [14558,]  294  315  317 #> [14559,]  293  314  316 #> [14560,]  294  315  317 #> [14561,]  294  315  317 #> [14562,]  293  314  316 #> [14563,]  294  315  317 #> [14564,]  293  314  316 #> [14565,]  293  314  316 #> [14566,]  294  315  317 #> [14567,]  293  314  316 #> [14568,]  293  314  316 #> [14569,]  293  314  316 #> [14570,]  294  315  317 #> [14571,]  294  315  317 #> [14572,]  293  314  316 #> [14573,]  293  314  316 #> [14574,]  294  315  317 #> [14575,]  294  315  317 #> [14576,]  294  315  317 #> [14577,]  293  314  316 #> [14578,]  294  315  317 #> [14579,]  293  314  316 #> [14580,]  294  315  317 #> [14581,]  294  315  317 #> [14582,]  293  314  316 #> [14583,]  294  315  317 #> [14584,]  294  315  317 #> [14585,]  293  314  316 #> [14586,]  294  315  317 #> [14587,]  294  315  317 #> [14588,]  294  315  317 #> [14589,]  293  314  316 #> [14590,]  294  315  317 #> [14591,]  293  314  316 #> [14592,]  294  315  317 #> [14593,]  294  315  317 #> [14594,]  293  314  316 #> [14595,]  294  315  317 #> [14596,]  293  314  316 #> [14597,]  293  314  316 #> [14598,]  293  314  316 #> [14599,]  294  315  317 #> [14600,]  293  314  316 #> [14601,]  296  318  320 #> [14602,]  295  316  318 #> [14603,]  296  317  319 #> [14604,]  296  317  320 #> [14605,]  296  318  320 #> [14606,]  295  316  318 #> [14607,]  296  317  320 #> [14608,]  296  317  320 #> [14609,]  296  318  320 #> [14610,]  296  318  320 #> [14611,]  295  316  318 #> [14612,]  295  316  318 #> [14613,]  296  318  320 #> [14614,]  296  318  319 #> [14615,]  295  316  318 #> [14616,]  296  318  320 #> [14617,]  295  316  318 #> [14618,]  296  318  320 #> [14619,]  296  318  320 #> [14620,]  296  318  319 #> [14621,]  296  318  320 #> [14622,]  296  318  320 #> [14623,]  295  316  318 #> [14624,]  296  318  320 #> [14625,]  296  317  320 #> [14626,]  296  318  319 #> [14627,]  296  318  320 #> [14628,]  296  318  320 #> [14629,]  295  316  318 #> [14630,]  295  316  318 #> [14631,]  295  316  318 #> [14632,]  296  317  319 #> [14633,]  296  318  320 #> [14634,]  295  316  318 #> [14635,]  295  316  318 #> [14636,]  296  318  319 #> [14637,]  295  316  318 #> [14638,]  296  318  320 #> [14639,]  296  318  320 #> [14640,]  296  317  319 #> [14641,]  296  318  319 #> [14642,]  295  316  318 #> [14643,]  295  316  318 #> [14644,]  295  316  318 #> [14645,]  296  318  320 #> [14646,]  296  317  320 #> [14647,]  295  316  318 #> [14648,]  295  316  318 #> [14649,]  296  318  320 #> [14650,]  296  318  320 #> [14651,]  296  318  319 #> [14652,]  296  317  320 #> [14653,]  296  318  320 #> [14654,]  296  318  319 #> [14655,]  296  317  320 #> [14656,]  295  316  318 #> [14657,]  296  317  320 #> [14658,]  296  318  320 #> [14659,]  296  317  320 #> [14660,]  295  316  318 #> [14661,]  295  316  318 #> [14662,]  296  318  319 #> [14663,]  295  316  318 #> [14664,]  295  316  318 #> [14665,]  295  316  318 #> [14666,]  295  316  318 #> [14667,]  296  318  320 #> [14668,]  296  317  319 #> [14669,]  296  318  319 #> [14670,]  295  316  318 #> [14671,]  296  318  320 #> [14672,]  296  317  320 #> [14673,]  296  318  320 #> [14674,]  296  317  320 #> [14675,]  295  316  318 #> [14676,]  296  317  320 #> [14677,]  296  318  320 #> [14678,]  295  316  318 #> [14679,]  295  316  318 #> [14680,]  296  317  319 #> [14681,]  295  316  318 #> [14682,]  296  318  320 #> [14683,]  296  318  319 #> [14684,]  296  318  320 #> [14685,]  296  318  320 #> [14686,]  296  317  320 #> [14687,]  296  318  320 #> [14688,]  296  318  320 #> [14689,]  296  318  319 #> [14690,]  296  318  320 #> [14691,]  296  318  319 #> [14692,]  295  316  318 #> [14693,]  296  318  320 #> [14694,]  295  316  318 #> [14695,]  295  316  318 #> [14696,]  296  317  320 #> [14697,]  296  317  320 #> [14698,]  296  317  320 #> [14699,]  296  318  320 #> [14700,]  295  316  318 #> [14701,]  297  320  322 #> [14702,]  297  320  322 #> [14703,]  297  320  322 #> [14704,]  297  320  322 #> [14705,]  297  320  322 #> [14706,]  297  321  322 #> [14707,]  297  320  322 #> [14708,]  298  319  321 #> [14709,]  298  319  321 #> [14710,]  297  320  322 #> [14711,]  297  320  322 #> [14712,]  297  321  322 #> [14713,]  297  320  322 #> [14714,]  297  320  322 #> [14715,]  297  321  322 #> [14716,]  297  320  322 #> [14717,]  297  320  322 #> [14718,]  297  320  322 #> [14719,]  297  320  322 #> [14720,]  297  320  322 #> [14721,]  297  320  322 #> [14722,]  297  320  322 #> [14723,]  297  320  322 #> [14724,]  297  320  322 #> [14725,]  297  320  322 #> [14726,]  298  319  321 #> [14727,]  297  320  322 #> [14728,]  297  320  322 #> [14729,]  297  320  322 #> [14730,]  297  320  322 #> [14731,]  297  320  322 #> [14732,]  297  320  322 #> [14733,]  297  321  322 #> [14734,]  297  320  322 #> [14735,]  297  320  322 #> [14736,]  297  320  322 #> [14737,]  297  320  322 #> [14738,]  297  320  322 #> [14739,]  297  320  322 #> [14740,]  297  320  322 #> [14741,]  297  320  322 #> [14742,]  297  320  322 #> [14743,]  298  319  321 #> [14744,]  297  320  322 #> [14745,]  297  321  322 #> [14746,]  298  319  321 #> [14747,]  297  320  322 #> [14748,]  297  320  322 #> [14749,]  297  320  322 #> [14750,]  297  320  322 #> [14751,]  297  321  322 #> [14752,]  297  320  322 #> [14753,]  297  320  322 #> [14754,]  297  320  322 #> [14755,]  297  320  322 #> [14756,]  298  319  321 #> [14757,]  297  321  322 #> [14758,]  297  320  322 #> [14759,]  297  320  322 #> [14760,]  297  320  322 #> [14761,]  298  319  321 #> [14762,]  297  320  322 #> [14763,]  297  320  322 #> [14764,]  298  319  321 #> [14765,]  297  320  322 #> [14766,]  297  321  322 #> [14767,]  297  320  322 #> [14768,]  297  321  322 #> [14769,]  297  320  322 #> [14770,]  297  320  322 #> [14771,]  297  320  322 #> [14772,]  297  320  322 #> [14773,]  297  320  322 #> [14774,]  297  320  322 #> [14775,]  297  320  322 #> [14776,]  298  319  321 #> [14777,]  297  320  322 #> [14778,]  297  320  322 #> [14779,]  297  320  322 #> [14780,]  297  320  322 #> [14781,]  297  320  322 #> [14782,]  297  320  322 #> [14783,]  297  320  322 #> [14784,]  297  320  322 #> [14785,]  297  320  322 #> [14786,]  297  320  322 #> [14787,]  297  320  322 #> [14788,]  297  320  322 #> [14789,]  297  320  322 #> [14790,]  297  320  322 #> [14791,]  297  320  322 #> [14792,]  297  320  322 #> [14793,]  297  320  322 #> [14794,]  298  319  321 #> [14795,]  297  320  322 #> [14796,]  297  321  322 #> [14797,]  297  320  322 #> [14798,]  297  320  322 #> [14799,]  297  320  322 #> [14800,]  297  320  322 #> [14801,]  299  322  323 #> [14802,]  299  322  323 #> [14803,]  299  322  323 #> [14804,]  299  322  323 #> [14805,]  299  322  323 #> [14806,]  299  322  323 #> [14807,]  299  322  323 #> [14808,]  299  322  323 #> [14809,]  299  322  323 #> [14810,]  300  323  324 #> [14811,]  299  322  323 #> [14812,]  299  322  323 #> [14813,]  299  322  323 #> [14814,]  299  322  323 #> [14815,]  299  322  323 #> [14816,]  299  322  323 #> [14817,]  299  322  323 #> [14818,]  300  323  324 #> [14819,]  299  322  323 #> [14820,]  299  322  323 #> [14821,]  299  322  323 #> [14822,]  299  322  323 #> [14823,]  299  322  323 #> [14824,]  299  322  323 #> [14825,]  300  323  324 #> [14826,]  299  322  323 #> [14827,]  299  322  323 #> [14828,]  299  322  323 #> [14829,]  299  322  323 #> [14830,]  299  322  323 #> [14831,]  299  322  323 #> [14832,]  299  322  323 #> [14833,]  299  322  323 #> [14834,]  299  322  323 #> [14835,]  299  322  323 #> [14836,]  299  322  323 #> [14837,]  299  322  323 #> [14838,]  299  322  323 #> [14839,]  300  323  324 #> [14840,]  299  322  323 #> [14841,]  299  322  323 #> [14842,]  299  322  323 #> [14843,]  300  323  324 #> [14844,]  299  322  323 #> [14845,]  300  323  324 #> [14846,]  299  322  323 #> [14847,]  299  322  323 #> [14848,]  299  322  323 #> [14849,]  299  322  323 #> [14850,]  299  322  323 #> [14851,]  299  322  323 #> [14852,]  299  322  323 #> [14853,]  299  322  323 #> [14854,]  299  322  323 #> [14855,]  299  322  323 #> [14856,]  299  322  323 #> [14857,]  299  322  323 #> [14858,]  299  322  323 #> [14859,]  299  322  323 #> [14860,]  299  322  323 #> [14861,]  299  322  323 #> [14862,]  299  322  323 #> [14863,]  299  322  323 #> [14864,]  299  322  323 #> [14865,]  299  322  323 #> [14866,]  299  322  323 #> [14867,]  299  322  323 #> [14868,]  299  322  323 #> [14869,]  299  322  323 #> [14870,]  299  322  323 #> [14871,]  299  322  323 #> [14872,]  299  322  323 #> [14873,]  300  323  324 #> [14874,]  300  323  324 #> [14875,]  300  323  324 #> [14876,]  300  323  324 #> [14877,]  300  323  324 #> [14878,]  299  322  323 #> [14879,]  299  322  323 #> [14880,]  299  322  323 #> [14881,]  299  322  323 #> [14882,]  299  322  323 #> [14883,]  299  322  323 #> [14884,]  299  322  323 #> [14885,]  299  322  323 #> [14886,]  299  322  323 #> [14887,]  299  322  323 #> [14888,]  299  322  323 #> [14889,]  299  322  323 #> [14890,]  299  322  323 #> [14891,]  299  322  323 #> [14892,]  299  322  323 #> [14893,]  299  322  323 #> [14894,]  299  322  323 #> [14895,]  299  322  323 #> [14896,]  299  322  323 #> [14897,]  299  322  323 #> [14898,]  299  322  323 #> [14899,]  299  322  323 #> [14900,]  299  322  323 #> [14901,]  301  324  325 #> [14902,]  301  324  325 #> [14903,]  301  324  325 #> [14904,]  302  325  326 #> [14905,]  301  324  325 #> [14906,]  301  324  325 #> [14907,]  302  325  326 #> [14908,]  301  324  325 #> [14909,]  301  324  325 #> [14910,]  302  325  326 #> [14911,]  301  324  325 #> [14912,]  301  324  325 #> [14913,]  301  324  325 #> [14914,]  301  324  325 #> [14915,]  301  324  325 #> [14916,]  302  325  326 #> [14917,]  301  324  325 #> [14918,]  301  324  325 #> [14919,]  301  324  325 #> [14920,]  302  325  326 #> [14921,]  301  324  325 #> [14922,]  301  324  325 #> [14923,]  301  324  325 #> [14924,]  302  325  326 #> [14925,]  301  324  325 #> [14926,]  301  324  325 #> [14927,]  301  324  325 #> [14928,]  302  325  326 #> [14929,]  301  324  325 #> [14930,]  301  324  325 #> [14931,]  301  324  325 #> [14932,]  301  324  325 #> [14933,]  301  324  325 #> [14934,]  301  324  325 #> [14935,]  301  324  325 #> [14936,]  301  324  325 #> [14937,]  301  324  325 #> [14938,]  301  324  325 #> [14939,]  301  324  325 #> [14940,]  301  324  325 #> [14941,]  301  324  325 #> [14942,]  301  324  325 #> [14943,]  301  324  325 #> [14944,]  301  324  325 #> [14945,]  301  324  325 #> [14946,]  301  324  325 #> [14947,]  301  324  325 #> [14948,]  301  324  325 #> [14949,]  301  324  325 #> [14950,]  302  325  326 #> [14951,]  301  324  325 #> [14952,]  302  325  326 #> [14953,]  301  324  325 #> [14954,]  302  325  326 #> [14955,]  301  324  325 #> [14956,]  301  324  325 #> [14957,]  301  324  325 #> [14958,]  301  324  325 #> [14959,]  301  324  325 #> [14960,]  301  324  325 #> [14961,]  301  324  325 #> [14962,]  301  324  325 #> [14963,]  301  324  325 #> [14964,]  301  324  325 #> [14965,]  301  324  325 #> [14966,]  301  324  325 #> [14967,]  301  324  325 #> [14968,]  301  324  325 #> [14969,]  301  324  325 #> [14970,]  301  324  325 #> [14971,]  301  324  325 #> [14972,]  301  324  325 #> [14973,]  302  325  326 #> [14974,]  301  324  325 #> [14975,]  301  324  325 #> [14976,]  302  325  326 #> [14977,]  301  324  325 #> [14978,]  301  324  325 #> [14979,]  301  324  325 #> [14980,]  301  324  325 #> [14981,]  301  324  325 #> [14982,]  301  324  325 #> [14983,]  301  324  325 #> [14984,]  301  324  325 #> [14985,]  301  324  325 #> [14986,]  302  325  326 #> [14987,]  301  324  325 #> [14988,]  301  324  325 #> [14989,]  301  324  325 #> [14990,]  301  324  325 #> [14991,]  302  325  326 #> [14992,]  301  324  325 #> [14993,]  301  324  325 #> [14994,]  301  324  325 #> [14995,]  301  324  325 #> [14996,]  301  324  325 #> [14997,]  301  324  325 #> [14998,]  301  324  325 #> [14999,]  301  324  325 #> [15000,]  301  324  325 #> [15001,]  303  326  329 #> [15002,]  304  327  327 #> [15003,]  304  327  327 #> [15004,]  303  326  328 #> [15005,]  303  326  328 #> [15006,]  304  327  327 #> [15007,]  304  327  327 #> [15008,]  303  326  328 #> [15009,]  303  326  328 #> [15010,]  303  326  328 #> [15011,]  303  326  328 #> [15012,]  304  327  327 #> [15013,]  303  326  328 #> [15014,]  303  326  329 #> [15015,]  303  326  329 #> [15016,]  303  326  329 #> [15017,]  303  326  328 #> [15018,]  304  327  327 #> [15019,]  304  327  327 #> [15020,]  304  327  327 #> [15021,]  303  326  328 #> [15022,]  303  326  328 #> [15023,]  304  327  327 #> [15024,]  303  326  328 #> [15025,]  304  327  327 #> [15026,]  303  326  328 #> [15027,]  303  326  328 #> [15028,]  304  327  327 #> [15029,]  303  326  328 #> [15030,]  303  326  328 #> [15031,]  304  327  327 #> [15032,]  304  327  327 #> [15033,]  304  327  327 #> [15034,]  304  327  327 #> [15035,]  303  326  328 #> [15036,]  303  326  328 #> [15037,]  303  326  328 #> [15038,]  303  326  328 #> [15039,]  303  326  328 #> [15040,]  304  327  327 #> [15041,]  303  326  329 #> [15042,]  304  327  327 #> [15043,]  303  326  328 #> [15044,]  303  326  329 #> [15045,]  303  326  328 #> [15046,]  303  326  328 #> [15047,]  303  326  328 #> [15048,]  303  326  328 #> [15049,]  303  326  328 #> [15050,]  303  326  329 #> [15051,]  303  326  328 #> [15052,]  303  326  328 #> [15053,]  303  326  328 #> [15054,]  303  326  328 #> [15055,]  303  326  328 #> [15056,]  304  327  327 #> [15057,]  303  326  328 #> [15058,]  303  326  328 #> [15059,]  303  326  329 #> [15060,]  304  327  327 #> [15061,]  303  326  328 #> [15062,]  303  326  328 #> [15063,]  303  326  328 #> [15064,]  304  327  327 #> [15065,]  304  327  327 #> [15066,]  303  326  328 #> [15067,]  303  326  328 #> [15068,]  303  326  328 #> [15069,]  303  326  328 #> [15070,]  304  327  327 #> [15071,]  304  327  327 #> [15072,]  303  326  328 #> [15073,]  304  327  327 #> [15074,]  303  326  328 #> [15075,]  303  326  328 #> [15076,]  303  326  328 #> [15077,]  303  326  328 #> [15078,]  303  326  328 #> [15079,]  303  326  328 #> [15080,]  303  326  328 #> [15081,]  303  326  328 #> [15082,]  303  326  328 #> [15083,]  303  326  328 #> [15084,]  304  327  327 #> [15085,]  303  326  328 #> [15086,]  303  326  328 #> [15087,]  303  326  328 #> [15088,]  303  326  328 #> [15089,]  303  326  328 #> [15090,]  303  326  328 #> [15091,]  303  326  328 #> [15092,]  303  326  328 #> [15093,]  304  327  327 #> [15094,]  303  326  328 #> [15095,]  303  326  328 #> [15096,]  303  326  329 #> [15097,]  304  327  327 #> [15098,]  304  327  327 #> [15099,]  303  326  329 #> [15100,]  304  327  327 #> [15101,]  306  329  332 #> [15102,]  306  329  333 #> [15103,]  305  328  330 #> [15104,]  306  329  332 #> [15105,]  306  329  332 #> [15106,]  306  329  333 #> [15107,]  305  328  331 #> [15108,]  305  328  331 #> [15109,]  306  329  332 #> [15110,]  306  329  332 #> [15111,]  306  329  332 #> [15112,]  306  329  333 #> [15113,]  306  329  332 #> [15114,]  306  329  332 #> [15115,]  306  329  332 #> [15116,]  306  329  332 #> [15117,]  306  329  332 #> [15118,]  306  329  333 #> [15119,]  306  329  333 #> [15120,]  305  328  331 #> [15121,]  306  329  332 #> [15122,]  306  329  332 #> [15123,]  306  329  332 #> [15124,]  306  329  332 #> [15125,]  305  328  330 #> [15126,]  306  329  332 #> [15127,]  306  329  332 #> [15128,]  306  329  333 #> [15129,]  306  329  332 #> [15130,]  306  329  332 #> [15131,]  306  329  333 #> [15132,]  306  329  333 #> [15133,]  306  329  333 #> [15134,]  306  329  333 #> [15135,]  306  329  332 #> [15136,]  306  329  332 #> [15137,]  306  329  332 #> [15138,]  306  329  332 #> [15139,]  305  328  330 #> [15140,]  306  329  332 #> [15141,]  306  329  332 #> [15142,]  306  329  333 #> [15143,]  306  329  332 #> [15144,]  305  328  331 #> [15145,]  306  329  332 #> [15146,]  305  328  331 #> [15147,]  306  329  332 #> [15148,]  306  329  332 #> [15149,]  305  328  331 #> [15150,]  305  328  331 #> [15151,]  306  329  332 #> [15152,]  306  329  332 #> [15153,]  305  328  331 #> [15154,]  306  329  332 #> [15155,]  305  328  331 #> [15156,]  305  328  331 #> [15157,]  306  329  332 #> [15158,]  306  329  332 #> [15159,]  305  328  331 #> [15160,]  306  329  333 #> [15161,]  306  329  332 #> [15162,]  306  329  332 #> [15163,]  306  329  332 #> [15164,]  306  329  333 #> [15165,]  305  328  330 #> [15166,]  305  328  331 #> [15167,]  306  329  332 #> [15168,]  306  329  332 #> [15169,]  306  329  332 #> [15170,]  305  328  330 #> [15171,]  306  329  333 #> [15172,]  305  328  330 #> [15173,]  306  329  333 #> [15174,]  306  329  332 #> [15175,]  306  329  332 #> [15176,]  306  329  332 #> [15177,]  306  329  332 #> [15178,]  306  329  332 #> [15179,]  306  329  332 #> [15180,]  306  329  332 #> [15181,]  306  329  332 #> [15182,]  306  329  332 #> [15183,]  306  329  332 #> [15184,]  305  328  331 #> [15185,]  306  329  332 #> [15186,]  305  328  331 #> [15187,]  306  329  332 #> [15188,]  306  329  332 #> [15189,]  306  329  332 #> [15190,]  305  328  331 #> [15191,]  306  329  332 #> [15192,]  306  329  332 #> [15193,]  306  329  333 #> [15194,]  306  329  332 #> [15195,]  306  329  332 #> [15196,]  306  329  332 #> [15197,]  306  329  333 #> [15198,]  305  328  330 #> [15199,]  306  329  332 #> [15200,]  305  328  331 #> [15201,]  308  331  334 #> [15202,]  307  330  335 #> [15203,]  307  330  336 #> [15204,]  308  331  334 #> [15205,]  308  331  334 #> [15206,]  308  331  334 #> [15207,]  307  330  335 #> [15208,]  308  331  334 #> [15209,]  308  331  334 #> [15210,]  307  330  335 #> [15211,]  308  331  334 #> [15212,]  308  331  334 #> [15213,]  307  330  335 #> [15214,]  308  331  334 #> [15215,]  308  331  334 #> [15216,]  307  330  335 #> [15217,]  307  330  335 #> [15218,]  307  330  335 #> [15219,]  307  330  336 #> [15220,]  308  331  334 #> [15221,]  307  330  335 #> [15222,]  307  330  335 #> [15223,]  307  330  335 #> [15224,]  307  330  335 #> [15225,]  307  330  336 #> [15226,]  308  331  334 #> [15227,]  308  331  334 #> [15228,]  308  331  334 #> [15229,]  307  330  335 #> [15230,]  307  330  335 #> [15231,]  307  330  335 #> [15232,]  307  330  335 #> [15233,]  308  331  334 #> [15234,]  307  330  336 #> [15235,]  307  330  335 #> [15236,]  307  330  335 #> [15237,]  307  330  335 #> [15238,]  308  331  334 #> [15239,]  307  330  335 #> [15240,]  307  330  335 #> [15241,]  308  331  334 #> [15242,]  308  331  334 #> [15243,]  308  331  334 #> [15244,]  307  330  335 #> [15245,]  308  331  334 #> [15246,]  308  331  334 #> [15247,]  307  330  335 #> [15248,]  307  330  335 #> [15249,]  307  330  335 #> [15250,]  308  331  334 #> [15251,]  308  331  334 #> [15252,]  308  331  334 #> [15253,]  308  331  334 #> [15254,]  307  330  335 #> [15255,]  308  331  334 #> [15256,]  308  331  334 #> [15257,]  308  331  334 #> [15258,]  308  331  334 #> [15259,]  307  330  335 #> [15260,]  308  331  334 #> [15261,]  308  331  334 #> [15262,]  307  330  335 #> [15263,]  308  331  334 #> [15264,]  308  331  334 #> [15265,]  308  331  334 #> [15266,]  308  331  334 #> [15267,]  308  331  334 #> [15268,]  308  331  334 #> [15269,]  308  331  334 #> [15270,]  307  330  336 #> [15271,]  308  331  334 #> [15272,]  308  331  334 #> [15273,]  308  331  334 #> [15274,]  308  331  334 #> [15275,]  308  331  334 #> [15276,]  308  331  334 #> [15277,]  307  330  335 #> [15278,]  308  331  334 #> [15279,]  307  330  335 #> [15280,]  307  330  335 #> [15281,]  308  331  334 #> [15282,]  308  331  334 #> [15283,]  307  330  335 #> [15284,]  308  331  334 #> [15285,]  307  330  335 #> [15286,]  307  330  335 #> [15287,]  308  331  334 #> [15288,]  308  331  334 #> [15289,]  308  331  334 #> [15290,]  308  331  334 #> [15291,]  308  331  334 #> [15292,]  308  331  334 #> [15293,]  307  330  336 #> [15294,]  308  331  334 #> [15295,]  307  330  335 #> [15296,]  308  331  334 #> [15297,]  308  331  334 #> [15298,]  307  330  336 #> [15299,]  308  331  334 #> [15300,]  307  330  335 #> [15301,]  309  332  337 #> [15302,]  310  333  338 #> [15303,]  310  333  338 #> [15304,]  309  332  337 #> [15305,]  310  333  338 #> [15306,]  310  333  338 #> [15307,]  310  333  338 #> [15308,]  309  332  337 #> [15309,]  309  332  337 #> [15310,]  310  333  338 #> [15311,]  309  332  337 #> [15312,]  310  333  338 #> [15313,]  309  332  337 #> [15314,]  310  333  338 #> [15315,]  310  333  338 #> [15316,]  310  333  338 #> [15317,]  309  332  337 #> [15318,]  310  333  338 #> [15319,]  310  333  338 #> [15320,]  310  333  338 #> [15321,]  310  333  338 #> [15322,]  309  332  337 #> [15323,]  310  333  338 #> [15324,]  310  333  338 #> [15325,]  310  333  338 #> [15326,]  310  333  338 #> [15327,]  309  332  337 #> [15328,]  310  333  338 #> [15329,]  310  333  338 #> [15330,]  309  332  337 #> [15331,]  310  333  338 #> [15332,]  310  333  338 #> [15333,]  310  333  338 #> [15334,]  310  333  338 #> [15335,]  309  332  337 #> [15336,]  310  333  338 #> [15337,]  310  333  338 #> [15338,]  310  333  338 #> [15339,]  310  333  338 #> [15340,]  310  333  338 #> [15341,]  310  333  338 #> [15342,]  310  333  338 #> [15343,]  309  332  337 #> [15344,]  309  332  337 #> [15345,]  310  333  338 #> [15346,]  309  332  337 #> [15347,]  310  333  338 #> [15348,]  310  333  338 #> [15349,]  309  332  337 #> [15350,]  310  333  338 #> [15351,]  310  333  338 #> [15352,]  309  332  337 #> [15353,]  310  333  338 #> [15354,]  309  332  337 #> [15355,]  309  332  337 #> [15356,]  310  333  338 #> [15357,]  310  333  338 #> [15358,]  309  332  337 #> [15359,]  310  333  338 #> [15360,]  310  333  338 #> [15361,]  310  333  338 #> [15362,]  310  333  338 #> [15363,]  310  333  338 #> [15364,]  310  333  338 #> [15365,]  310  333  338 #> [15366,]  309  332  337 #> [15367,]  310  333  338 #> [15368,]  310  333  338 #> [15369,]  309  332  337 #> [15370,]  310  333  338 #> [15371,]  310  333  338 #> [15372,]  310  333  338 #> [15373,]  310  333  338 #> [15374,]  310  333  338 #> [15375,]  310  333  338 #> [15376,]  310  333  338 #> [15377,]  310  333  338 #> [15378,]  310  333  338 #> [15379,]  309  332  337 #> [15380,]  309  332  337 #> [15381,]  309  332  337 #> [15382,]  309  332  337 #> [15383,]  309  332  337 #> [15384,]  310  333  338 #> [15385,]  310  333  338 #> [15386,]  310  333  338 #> [15387,]  309  332  337 #> [15388,]  309  332  337 #> [15389,]  309  332  337 #> [15390,]  309  332  337 #> [15391,]  310  333  338 #> [15392,]  309  332  337 #> [15393,]  310  333  338 #> [15394,]  310  333  338 #> [15395,]  309  332  337 #> [15396,]  309  332  337 #> [15397,]  310  333  338 #> [15398,]  310  333  338 #> [15399,]  309  332  337 #> [15400,]  310  333  338 #> [15401,]  311  334  341 #> [15402,]  311  334  340 #> [15403,]  311  334  340 #> [15404,]  311  334  341 #> [15405,]  311  334  340 #> [15406,]  311  334  341 #> [15407,]  312  335  339 #> [15408,]  311  334  340 #> [15409,]  311  334  341 #> [15410,]  312  335  339 #> [15411,]  311  334  341 #> [15412,]  311  334  341 #> [15413,]  311  334  340 #> [15414,]  311  334  341 #> [15415,]  311  334  341 #> [15416,]  312  335  339 #> [15417,]  311  334  340 #> [15418,]  311  334  341 #> [15419,]  311  334  341 #> [15420,]  312  335  339 #> [15421,]  311  334  341 #> [15422,]  311  334  340 #> [15423,]  311  334  341 #> [15424,]  312  335  339 #> [15425,]  311  334  340 #> [15426,]  311  334  341 #> [15427,]  311  334  341 #> [15428,]  312  335  339 #> [15429,]  311  334  340 #> [15430,]  311  334  341 #> [15431,]  311  334  341 #> [15432,]  311  334  341 #> [15433,]  311  334  341 #> [15434,]  311  334  341 #> [15435,]  311  334  341 #> [15436,]  311  334  341 #> [15437,]  311  334  341 #> [15438,]  311  334  341 #> [15439,]  311  334  340 #> [15440,]  311  334  340 #> [15441,]  311  334  341 #> [15442,]  311  334  341 #> [15443,]  311  334  340 #> [15444,]  311  334  340 #> [15445,]  311  334  340 #> [15446,]  311  334  340 #> [15447,]  311  334  340 #> [15448,]  311  334  341 #> [15449,]  311  334  340 #> [15450,]  312  335  339 #> [15451,]  311  334  340 #> [15452,]  312  335  339 #> [15453,]  311  334  340 #> [15454,]  312  335  339 #> [15455,]  311  334  340 #> [15456,]  311  334  340 #> [15457,]  311  334  341 #> [15458,]  311  334  341 #> [15459,]  311  334  340 #> [15460,]  311  334  341 #> [15461,]  311  334  341 #> [15462,]  311  334  341 #> [15463,]  311  334  340 #> [15464,]  311  334  341 #> [15465,]  311  334  340 #> [15466,]  311  334  340 #> [15467,]  311  334  341 #> [15468,]  311  334  341 #> [15469,]  311  334  341 #> [15470,]  311  334  340 #> [15471,]  311  334  340 #> [15472,]  311  334  340 #> [15473,]  311  334  341 #> [15474,]  311  334  341 #> [15475,]  311  334  341 #> [15476,]  312  335  339 #> [15477,]  311  334  340 #> [15478,]  311  334  340 #> [15479,]  311  334  340 #> [15480,]  311  334  341 #> [15481,]  311  334  340 #> [15482,]  311  334  341 #> [15483,]  311  334  340 #> [15484,]  311  334  340 #> [15485,]  311  334  341 #> [15486,]  312  335  339 #> [15487,]  311  334  341 #> [15488,]  311  334  341 #> [15489,]  311  334  340 #> [15490,]  311  334  340 #> [15491,]  312  335  339 #> [15492,]  311  334  341 #> [15493,]  311  334  341 #> [15494,]  311  334  340 #> [15495,]  311  334  341 #> [15496,]  311  334  341 #> [15497,]  311  334  341 #> [15498,]  311  334  340 #> [15499,]  311  334  341 #> [15500,]  311  334  340 #> [15501,]  314  337  343 #> [15502,]  314  337  343 #> [15503,]  314  337  343 #> [15504,]  313  336  342 #> [15505,]  314  337  343 #> [15506,]  314  337  343 #> [15507,]  314  337  343 #> [15508,]  313  336  342 #> [15509,]  313  336  342 #> [15510,]  313  336  342 #> [15511,]  314  337  343 #> [15512,]  314  337  343 #> [15513,]  314  337  343 #> [15514,]  314  337  343 #> [15515,]  314  337  343 #> [15516,]  314  337  343 #> [15517,]  314  337  343 #> [15518,]  314  337  343 #> [15519,]  314  337  343 #> [15520,]  314  337  343 #> [15521,]  314  337  343 #> [15522,]  314  337  343 #> [15523,]  314  337  343 #> [15524,]  314  337  343 #> [15525,]  314  337  343 #> [15526,]  314  337  343 #> [15527,]  314  337  343 #> [15528,]  314  337  343 #> [15529,]  314  337  343 #> [15530,]  314  337  343 #> [15531,]  314  337  343 #> [15532,]  314  337  343 #> [15533,]  314  337  343 #> [15534,]  314  337  343 #> [15535,]  314  337  343 #> [15536,]  314  337  343 #> [15537,]  314  337  343 #> [15538,]  314  337  343 #> [15539,]  314  337  343 #> [15540,]  314  337  343 #> [15541,]  314  337  343 #> [15542,]  314  337  343 #> [15543,]  313  336  342 #> [15544,]  314  337  343 #> [15545,]  314  337  343 #> [15546,]  314  337  343 #> [15547,]  314  337  343 #> [15548,]  314  337  343 #> [15549,]  314  337  343 #> [15550,]  314  337  343 #> [15551,]  313  336  342 #> [15552,]  314  337  343 #> [15553,]  314  337  343 #> [15554,]  314  337  343 #> [15555,]  314  337  343 #> [15556,]  314  337  343 #> [15557,]  314  337  343 #> [15558,]  314  337  343 #> [15559,]  314  337  343 #> [15560,]  313  336  342 #> [15561,]  314  337  343 #> [15562,]  314  337  343 #> [15563,]  314  337  343 #> [15564,]  314  337  343 #> [15565,]  314  337  343 #> [15566,]  314  337  343 #> [15567,]  314  337  343 #> [15568,]  314  337  343 #> [15569,]  314  337  343 #> [15570,]  314  337  343 #> [15571,]  314  337  343 #> [15572,]  314  337  343 #> [15573,]  314  337  343 #> [15574,]  314  337  343 #> [15575,]  314  337  343 #> [15576,]  314  337  343 #> [15577,]  314  337  343 #> [15578,]  314  337  343 #> [15579,]  314  337  343 #> [15580,]  314  337  343 #> [15581,]  314  337  343 #> [15582,]  314  337  343 #> [15583,]  314  337  343 #> [15584,]  314  337  343 #> [15585,]  313  336  342 #> [15586,]  314  337  343 #> [15587,]  314  337  343 #> [15588,]  314  337  343 #> [15589,]  314  337  343 #> [15590,]  314  337  343 #> [15591,]  313  336  342 #> [15592,]  314  337  343 #> [15593,]  314  337  343 #> [15594,]  314  337  343 #> [15595,]  313  336  342 #> [15596,]  314  337  343 #> [15597,]  314  337  343 #> [15598,]  314  337  343 #> [15599,]  314  337  343 #> [15600,]  314  337  343 #> [15601,]  315  338  344 #> [15602,]  315  338  344 #> [15603,]  315  338  344 #> [15604,]  316  339  345 #> [15605,]  315  338  344 #> [15606,]  315  338  344 #> [15607,]  315  338  344 #> [15608,]  316  339  345 #> [15609,]  316  339  345 #> [15610,]  315  338  344 #> [15611,]  317  339  345 #> [15612,]  315  338  344 #> [15613,]  316  339  345 #> [15614,]  315  338  344 #> [15615,]  315  338  344 #> [15616,]  315  338  344 #> [15617,]  317  339  345 #> [15618,]  315  338  344 #> [15619,]  315  338  344 #> [15620,]  315  338  344 #> [15621,]  315  338  344 #> [15622,]  317  339  345 #> [15623,]  315  338  344 #> [15624,]  315  338  344 #> [15625,]  315  338  344 #> [15626,]  315  338  344 #> [15627,]  317  339  345 #> [15628,]  315  338  344 #> [15629,]  315  338  344 #> [15630,]  316  339  345 #> [15631,]  315  338  344 #> [15632,]  315  338  344 #> [15633,]  315  338  344 #> [15634,]  315  338  344 #> [15635,]  316  339  345 #> [15636,]  315  338  344 #> [15637,]  315  338  344 #> [15638,]  315  338  344 #> [15639,]  315  338  344 #> [15640,]  315  338  344 #> [15641,]  315  338  344 #> [15642,]  315  338  344 #> [15643,]  317  339  345 #> [15644,]  316  339  345 #> [15645,]  315  338  344 #> [15646,]  315  338  344 #> [15647,]  315  338  344 #> [15648,]  315  338  344 #> [15649,]  316  339  345 #> [15650,]  315  338  344 #> [15651,]  315  338  344 #> [15652,]  317  339  345 #> [15653,]  315  338  344 #> [15654,]  316  339  345 #> [15655,]  316  339  345 #> [15656,]  315  338  344 #> [15657,]  315  338  344 #> [15658,]  317  339  345 #> [15659,]  315  338  344 #> [15660,]  315  338  344 #> [15661,]  315  338  344 #> [15662,]  315  338  344 #> [15663,]  315  338  344 #> [15664,]  315  338  344 #> [15665,]  315  338  344 #> [15666,]  317  339  345 #> [15667,]  315  338  344 #> [15668,]  315  338  344 #> [15669,]  316  339  345 #> [15670,]  315  338  344 #> [15671,]  315  338  344 #> [15672,]  315  338  344 #> [15673,]  315  338  344 #> [15674,]  315  338  344 #> [15675,]  315  338  344 #> [15676,]  315  338  344 #> [15677,]  315  338  344 #> [15678,]  315  338  344 #> [15679,]  317  339  345 #> [15680,]  316  339  345 #> [15681,]  316  339  345 #> [15682,]  316  339  345 #> [15683,]  316  339  345 #> [15684,]  315  338  344 #> [15685,]  315  338  344 #> [15686,]  315  338  344 #> [15687,]  317  339  345 #> [15688,]  316  339  345 #> [15689,]  316  339  345 #> [15690,]  317  339  345 #> [15691,]  315  338  344 #> [15692,]  316  339  345 #> [15693,]  315  338  344 #> [15694,]  315  338  344 #> [15695,]  317  339  345 #> [15696,]  316  339  345 #> [15697,]  315  338  344 #> [15698,]  315  338  344 #> [15699,]  316  339  345 #> [15700,]  315  338  344 #> [15701,]  318  340  348 #> [15702,]  318  340  347 #> [15703,]  318  340  347 #> [15704,]  318  340  347 #> [15705,]  318  340  348 #> [15706,]  318  340  348 #> [15707,]  318  340  347 #> [15708,]  318  340  348 #> [15709,]  318  340  348 #> [15710,]  319  341  346 #> [15711,]  318  340  347 #> [15712,]  318  340  348 #> [15713,]  318  340  347 #> [15714,]  318  340  348 #> [15715,]  318  340  348 #> [15716,]  318  340  347 #> [15717,]  318  340  347 #> [15718,]  319  341  346 #> [15719,]  318  340  347 #> [15720,]  318  340  348 #> [15721,]  318  340  347 #> [15722,]  318  340  347 #> [15723,]  318  340  347 #> [15724,]  318  340  347 #> [15725,]  319  341  346 #> [15726,]  318  340  348 #> [15727,]  318  340  347 #> [15728,]  318  340  348 #> [15729,]  318  340  347 #> [15730,]  318  340  347 #> [15731,]  318  340  347 #> [15732,]  318  340  347 #> [15733,]  318  340  348 #> [15734,]  318  340  347 #> [15735,]  318  340  347 #> [15736,]  318  340  347 #> [15737,]  318  340  347 #> [15738,]  318  340  348 #> [15739,]  319  341  346 #> [15740,]  318  340  347 #> [15741,]  318  340  348 #> [15742,]  318  340  348 #> [15743,]  319  341  346 #> [15744,]  318  340  347 #> [15745,]  319  341  346 #> [15746,]  318  340  348 #> [15747,]  318  340  347 #> [15748,]  318  340  347 #> [15749,]  318  340  347 #> [15750,]  318  340  348 #> [15751,]  318  340  348 #> [15752,]  318  340  347 #> [15753,]  318  340  348 #> [15754,]  318  340  347 #> [15755,]  318  340  348 #> [15756,]  318  340  348 #> [15757,]  318  340  348 #> [15758,]  318  340  348 #> [15759,]  318  340  347 #> [15760,]  318  340  348 #> [15761,]  318  340  348 #> [15762,]  318  340  347 #> [15763,]  318  340  348 #> [15764,]  318  340  348 #> [15765,]  318  340  348 #> [15766,]  318  340  348 #> [15767,]  318  340  347 #> [15768,]  318  340  348 #> [15769,]  318  340  347 #> [15770,]  318  340  347 #> [15771,]  318  340  348 #> [15772,]  318  340  348 #> [15773,]  319  341  346 #> [15774,]  318  340  348 #> [15775,]  319  341  346 #> [15776,]  318  340  348 #> [15777,]  319  341  346 #> [15778,]  318  340  348 #> [15779,]  318  340  347 #> [15780,]  318  340  347 #> [15781,]  318  340  348 #> [15782,]  318  340  347 #> [15783,]  318  340  347 #> [15784,]  318  340  348 #> [15785,]  318  340  347 #> [15786,]  318  340  347 #> [15787,]  318  340  348 #> [15788,]  318  340  347 #> [15789,]  318  340  347 #> [15790,]  318  340  348 #> [15791,]  318  340  348 #> [15792,]  318  340  348 #> [15793,]  318  340  347 #> [15794,]  318  340  348 #> [15795,]  318  340  347 #> [15796,]  318  340  348 #> [15797,]  318  340  348 #> [15798,]  318  340  347 #> [15799,]  318  340  347 #> [15800,]  318  340  347 #> [15801,]  321  343  350 #> [15802,]  321  343  350 #> [15803,]  321  343  350 #> [15804,]  320  342  349 #> [15805,]  321  343  350 #> [15806,]  321  343  350 #> [15807,]  321  343  350 #> [15808,]  320  342  349 #> [15809,]  320  342  349 #> [15810,]  320  342  349 #> [15811,]  321  343  350 #> [15812,]  321  343  350 #> [15813,]  321  343  350 #> [15814,]  321  343  350 #> [15815,]  321  343  350 #> [15816,]  321  343  350 #> [15817,]  321  343  350 #> [15818,]  321  343  350 #> [15819,]  321  343  350 #> [15820,]  321  343  350 #> [15821,]  321  343  350 #> [15822,]  321  343  350 #> [15823,]  321  343  350 #> [15824,]  321  343  350 #> [15825,]  321  343  350 #> [15826,]  321  343  350 #> [15827,]  321  343  350 #> [15828,]  321  343  350 #> [15829,]  321  343  350 #> [15830,]  321  343  350 #> [15831,]  321  343  350 #> [15832,]  321  343  350 #> [15833,]  321  343  350 #> [15834,]  321  343  350 #> [15835,]  321  343  350 #> [15836,]  321  343  350 #> [15837,]  321  343  350 #> [15838,]  321  343  350 #> [15839,]  321  343  350 #> [15840,]  321  343  350 #> [15841,]  321  343  350 #> [15842,]  321  343  350 #> [15843,]  321  343  350 #> [15844,]  321  343  350 #> [15845,]  321  343  350 #> [15846,]  321  343  350 #> [15847,]  321  343  350 #> [15848,]  321  343  350 #> [15849,]  321  343  350 #> [15850,]  321  343  350 #> [15851,]  321  343  350 #> [15852,]  321  343  350 #> [15853,]  321  343  350 #> [15854,]  321  343  350 #> [15855,]  321  343  350 #> [15856,]  321  343  350 #> [15857,]  321  343  350 #> [15858,]  321  343  350 #> [15859,]  321  343  350 #> [15860,]  321  343  350 #> [15861,]  321  343  350 #> [15862,]  321  343  350 #> [15863,]  321  343  350 #> [15864,]  321  343  350 #> [15865,]  321  343  350 #> [15866,]  321  343  350 #> [15867,]  321  343  350 #> [15868,]  321  343  350 #> [15869,]  321  343  350 #> [15870,]  321  343  350 #> [15871,]  321  343  350 #> [15872,]  321  343  350 #> [15873,]  321  343  350 #> [15874,]  321  343  350 #> [15875,]  321  343  350 #> [15876,]  321  343  350 #> [15877,]  321  343  350 #> [15878,]  321  343  350 #> [15879,]  321  343  350 #> [15880,]  321  343  350 #> [15881,]  321  343  350 #> [15882,]  321  343  350 #> [15883,]  321  343  350 #> [15884,]  321  343  350 #> [15885,]  321  343  350 #> [15886,]  321  343  350 #> [15887,]  321  343  350 #> [15888,]  321  343  350 #> [15889,]  321  343  350 #> [15890,]  321  343  350 #> [15891,]  320  342  349 #> [15892,]  321  343  350 #> [15893,]  321  343  350 #> [15894,]  321  343  350 #> [15895,]  320  342  349 #> [15896,]  321  343  350 #> [15897,]  321  343  350 #> [15898,]  321  343  350 #> [15899,]  321  343  350 #> [15900,]  321  343  350 #> [15901,]  322  344  351 #> [15902,]  322  344  351 #> [15903,]  322  344  351 #> [15904,]  323  345  352 #> [15905,]  322  344  351 #> [15906,]  322  344  351 #> [15907,]  323  345  352 #> [15908,]  322  344  351 #> [15909,]  323  345  352 #> [15910,]  323  345  352 #> [15911,]  322  344  351 #> [15912,]  322  344  351 #> [15913,]  323  345  352 #> [15914,]  323  345  352 #> [15915,]  322  344  351 #> [15916,]  323  345  352 #> [15917,]  322  344  351 #> [15918,]  322  344  351 #> [15919,]  322  344  351 #> [15920,]  323  345  352 #> [15921,]  322  344  351 #> [15922,]  323  345  352 #> [15923,]  322  344  351 #> [15924,]  323  345  352 #> [15925,]  323  345  352 #> [15926,]  322  344  351 #> [15927,]  322  344  351 #> [15928,]  323  345  352 #> [15929,]  322  344  351 #> [15930,]  322  344  351 #> [15931,]  322  344  351 #> [15932,]  322  344  351 #> [15933,]  322  344  351 #> [15934,]  322  344  351 #> [15935,]  322  344  351 #> [15936,]  323  345  352 #> [15937,]  322  344  351 #> [15938,]  322  344  351 #> [15939,]  323  345  352 #> [15940,]  322  344  351 #> [15941,]  322  344  351 #> [15942,]  322  344  351 #> [15943,]  322  344  351 #> [15944,]  322  344  351 #> [15945,]  322  344  351 #> [15946,]  322  344  351 #> [15947,]  322  344  351 #> [15948,]  322  344  351 #> [15949,]  322  344  351 #> [15950,]  323  345  352 #> [15951,]  322  344  351 #> [15952,]  323  345  352 #> [15953,]  322  344  351 #> [15954,]  323  345  352 #> [15955,]  323  345  352 #> [15956,]  322  344  351 #> [15957,]  323  345  352 #> [15958,]  322  344  351 #> [15959,]  323  345  352 #> [15960,]  322  344  351 #> [15961,]  322  344  351 #> [15962,]  322  344  351 #> [15963,]  322  344  351 #> [15964,]  322  344  351 #> [15965,]  322  344  351 #> [15966,]  322  344  351 #> [15967,]  323  345  352 #> [15968,]  322  344  351 #> [15969,]  322  344  351 #> [15970,]  322  344  351 #> [15971,]  322  344  351 #> [15972,]  322  344  351 #> [15973,]  323  345  352 #> [15974,]  322  344  351 #> [15975,]  322  344  351 #> [15976,]  323  345  352 #> [15977,]  322  344  351 #> [15978,]  322  344  351 #> [15979,]  322  344  351 #> [15980,]  322  344  351 #> [15981,]  322  344  351 #> [15982,]  322  344  351 #> [15983,]  322  344  351 #> [15984,]  322  344  351 #> [15985,]  322  344  351 #> [15986,]  323  345  352 #> [15987,]  322  344  351 #> [15988,]  322  344  351 #> [15989,]  322  344  351 #> [15990,]  323  345  352 #> [15991,]  323  345  352 #> [15992,]  322  344  351 #> [15993,]  322  344  351 #> [15994,]  322  344  351 #> [15995,]  322  344  351 #> [15996,]  322  344  351 #> [15997,]  322  344  351 #> [15998,]  322  344  351 #> [15999,]  322  344  351 #> [16000,]  322  344  351 #> [16001,]  324  346  353 #> [16002,]  325  347  353 #> [16003,]  324  346  353 #> [16004,]  326  348  354 #> [16005,]  326  348  353 #> [16006,]  324  346  353 #> [16007,]  325  347  354 #> [16008,]  325  347  353 #> [16009,]  325  347  353 #> [16010,]  326  348  354 #> [16011,]  324  346  353 #> [16012,]  326  348  353 #> [16013,]  326  348  353 #> [16014,]  326  348  353 #> [16015,]  326  348  353 #> [16016,]  324  346  354 #> [16017,]  326  348  353 #> [16018,]  326  348  353 #> [16019,]  324  346  353 #> [16020,]  325  347  354 #> [16021,]  325  347  353 #> [16022,]  326  348  353 #> [16023,]  325  347  353 #> [16024,]  326  348  354 #> [16025,]  325  347  354 #> [16026,]  326  348  353 #> [16027,]  326  348  353 #> [16028,]  324  346  354 #> [16029,]  325  347  353 #> [16030,]  326  348  353 #> [16031,]  326  348  353 #> [16032,]  326  348  353 #> [16033,]  326  348  353 #> [16034,]  324  346  353 #> [16035,]  324  346  353 #> [16036,]  325  347  353 #> [16037,]  324  346  353 #> [16038,]  324  346  353 #> [16039,]  326  348  354 #> [16040,]  325  347  353 #> [16041,]  325  347  353 #> [16042,]  325  347  353 #> [16043,]  326  348  353 #> [16044,]  325  347  353 #> [16045,]  324  346  353 #> [16046,]  326  348  353 #> [16047,]  326  348  353 #> [16048,]  326  348  353 #> [16049,]  324  346  353 #> [16050,]  325  347  354 #> [16051,]  326  348  353 #> [16052,]  324  346  354 #> [16053,]  325  347  353 #> [16054,]  325  347  354 #> [16055,]  325  347  353 #> [16056,]  325  347  353 #> [16057,]  325  347  353 #> [16058,]  326  348  353 #> [16059,]  326  348  353 #> [16060,]  325  347  353 #> [16061,]  326  348  353 #> [16062,]  325  347  353 #> [16063,]  326  348  353 #> [16064,]  324  346  353 #> [16065,]  325  347  353 #> [16066,]  326  348  353 #> [16067,]  325  347  353 #> [16068,]  324  346  353 #> [16069,]  326  348  353 #> [16070,]  326  348  353 #> [16071,]  326  348  353 #> [16072,]  324  346  353 #> [16073,]  324  346  354 #> [16074,]  325  347  353 #> [16075,]  326  348  353 #> [16076,]  325  347  354 #> [16077,]  324  346  353 #> [16078,]  326  348  353 #> [16079,]  326  348  353 #> [16080,]  325  347  353 #> [16081,]  325  347  353 #> [16082,]  325  347  353 #> [16083,]  326  348  353 #> [16084,]  325  347  353 #> [16085,]  325  347  353 #> [16086,]  325  347  354 #> [16087,]  326  348  353 #> [16088,]  325  347  353 #> [16089,]  325  347  353 #> [16090,]  326  348  353 #> [16091,]  326  348  354 #> [16092,]  326  348  353 #> [16093,]  326  348  353 #> [16094,]  324  346  353 #> [16095,]  326  348  353 #> [16096,]  324  346  353 #> [16097,]  324  346  353 #> [16098,]  325  347  353 #> [16099,]  325  347  353 #> [16100,]  324  346  353 #> [16101,]  327  350  356 #> [16102,]  327  350  356 #> [16103,]  327  349  355 #> [16104,]  327  350  356 #> [16105,]  327  350  356 #> [16106,]  327  350  356 #> [16107,]  327  349  355 #> [16108,]  327  349  355 #> [16109,]  327  350  356 #> [16110,]  327  350  356 #> [16111,]  327  350  356 #> [16112,]  327  350  356 #> [16113,]  327  350  356 #> [16114,]  327  350  356 #> [16115,]  327  350  356 #> [16116,]  327  350  356 #> [16117,]  327  350  356 #> [16118,]  327  350  356 #> [16119,]  327  350  356 #> [16120,]  327  349  355 #> [16121,]  327  350  356 #> [16122,]  327  350  356 #> [16123,]  327  350  356 #> [16124,]  327  349  355 #> [16125,]  327  349  355 #> [16126,]  327  350  356 #> [16127,]  327  350  356 #> [16128,]  327  350  356 #> [16129,]  327  350  356 #> [16130,]  327  350  356 #> [16131,]  327  350  356 #> [16132,]  327  350  356 #> [16133,]  327  350  356 #> [16134,]  327  350  356 #> [16135,]  327  350  356 #> [16136,]  327  350  356 #> [16137,]  327  350  356 #> [16138,]  327  350  356 #> [16139,]  327  349  355 #> [16140,]  327  350  356 #> [16141,]  327  350  356 #> [16142,]  327  350  356 #> [16143,]  327  350  356 #> [16144,]  327  349  355 #> [16145,]  327  350  356 #> [16146,]  327  349  355 #> [16147,]  327  350  356 #> [16148,]  327  350  356 #> [16149,]  327  349  355 #> [16150,]  327  349  355 #> [16151,]  327  350  356 #> [16152,]  327  350  356 #> [16153,]  327  349  355 #> [16154,]  327  350  356 #> [16155,]  327  349  355 #> [16156,]  327  349  355 #> [16157,]  327  350  356 #> [16158,]  327  350  356 #> [16159,]  327  349  355 #> [16160,]  327  350  356 #> [16161,]  327  350  356 #> [16162,]  327  350  356 #> [16163,]  327  350  356 #> [16164,]  327  350  356 #> [16165,]  327  349  355 #> [16166,]  327  349  355 #> [16167,]  327  350  356 #> [16168,]  327  350  356 #> [16169,]  327  350  356 #> [16170,]  327  349  355 #> [16171,]  327  350  356 #> [16172,]  327  349  355 #> [16173,]  327  350  356 #> [16174,]  327  350  356 #> [16175,]  327  350  356 #> [16176,]  327  350  356 #> [16177,]  327  350  356 #> [16178,]  327  350  356 #> [16179,]  327  350  356 #> [16180,]  327  350  356 #> [16181,]  327  350  356 #> [16182,]  327  350  356 #> [16183,]  327  350  356 #> [16184,]  327  349  355 #> [16185,]  327  350  356 #> [16186,]  327  349  355 #> [16187,]  327  350  356 #> [16188,]  327  350  356 #> [16189,]  327  350  356 #> [16190,]  327  349  355 #> [16191,]  327  350  356 #> [16192,]  327  350  356 #> [16193,]  327  350  356 #> [16194,]  327  350  356 #> [16195,]  327  350  356 #> [16196,]  327  350  356 #> [16197,]  327  350  356 #> [16198,]  327  349  355 #> [16199,]  327  350  356 #> [16200,]  327  349  355 #> [16201,]  328  351  357 #> [16202,]  328  351  357 #> [16203,]  328  351  357 #> [16204,]  329  352  359 #> [16205,]  328  351  357 #> [16206,]  328  351  357 #> [16207,]  328  351  357 #> [16208,]  329  352  359 #> [16209,]  329  352  359 #> [16210,]  329  352  359 #> [16211,]  328  351  357 #> [16212,]  328  351  357 #> [16213,]  328  351  357 #> [16214,]  328  351  357 #> [16215,]  328  351  357 #> [16216,]  328  351  357 #> [16217,]  328  351  357 #> [16218,]  330  353  358 #> [16219,]  328  351  357 #> [16220,]  330  353  358 #> [16221,]  328  351  357 #> [16222,]  328  351  357 #> [16223,]  328  351  357 #> [16224,]  328  351  357 #> [16225,]  328  351  357 #> [16226,]  328  351  357 #> [16227,]  328  351  357 #> [16228,]  328  351  357 #> [16229,]  328  351  357 #> [16230,]  329  352  359 #> [16231,]  328  351  357 #> [16232,]  328  351  357 #> [16233,]  328  351  357 #> [16234,]  328  351  357 #> [16235,]  328  351  357 #> [16236,]  328  351  357 #> [16237,]  328  351  357 #> [16238,]  328  351  357 #> [16239,]  329  352  359 #> [16240,]  328  351  357 #> [16241,]  328  351  357 #> [16242,]  328  351  357 #> [16243,]  329  352  359 #> [16244,]  328  351  357 #> [16245,]  329  352  359 #> [16246,]  328  351  357 #> [16247,]  328  351  357 #> [16248,]  328  351  357 #> [16249,]  329  352  359 #> [16250,]  328  351  357 #> [16251,]  329  352  359 #> [16252,]  328  351  357 #> [16253,]  329  352  359 #> [16254,]  328  351  357 #> [16255,]  328  351  357 #> [16256,]  330  353  358 #> [16257,]  328  351  357 #> [16258,]  328  351  357 #> [16259,]  328  351  357 #> [16260,]  330  353  358 #> [16261,]  328  351  357 #> [16262,]  328  351  357 #> [16263,]  328  351  357 #> [16264,]  330  353  358 #> [16265,]  330  353  358 #> [16266,]  329  352  359 #> [16267,]  329  352  359 #> [16268,]  328  351  357 #> [16269,]  328  351  357 #> [16270,]  328  351  357 #> [16271,]  328  351  357 #> [16272,]  328  351  357 #> [16273,]  328  351  357 #> [16274,]  328  351  357 #> [16275,]  328  351  357 #> [16276,]  328  351  357 #> [16277,]  328  351  357 #> [16278,]  330  353  358 #> [16279,]  328  351  357 #> [16280,]  328  351  357 #> [16281,]  328  351  357 #> [16282,]  328  351  357 #> [16283,]  328  351  357 #> [16284,]  328  351  357 #> [16285,]  329  352  359 #> [16286,]  328  351  357 #> [16287,]  328  351  357 #> [16288,]  328  351  357 #> [16289,]  329  352  359 #> [16290,]  328  351  357 #> [16291,]  329  352  359 #> [16292,]  328  351  357 #> [16293,]  328  351  357 #> [16294,]  328  351  357 #> [16295,]  329  352  359 #> [16296,]  328  351  357 #> [16297,]  328  351  357 #> [16298,]  328  351  357 #> [16299,]  328  351  357 #> [16300,]  328  351  357 #> [16301,]  332  355  360 #> [16302,]  332  355  360 #> [16303,]  332  355  360 #> [16304,]  331  354  360 #> [16305,]  332  355  360 #> [16306,]  332  355  360 #> [16307,]  332  355  360 #> [16308,]  331  354  360 #> [16309,]  331  354  360 #> [16310,]  331  354  360 #> [16311,]  332  355  360 #> [16312,]  332  355  360 #> [16313,]  332  355  360 #> [16314,]  332  355  360 #> [16315,]  332  355  360 #> [16316,]  332  355  360 #> [16317,]  332  355  360 #> [16318,]  332  355  360 #> [16319,]  332  355  360 #> [16320,]  332  355  360 #> [16321,]  332  355  360 #> [16322,]  332  355  360 #> [16323,]  332  355  360 #> [16324,]  332  355  360 #> [16325,]  332  355  360 #> [16326,]  332  355  360 #> [16327,]  332  355  360 #> [16328,]  332  355  360 #> [16329,]  332  355  360 #> [16330,]  332  355  360 #> [16331,]  332  355  360 #> [16332,]  332  355  360 #> [16333,]  332  355  360 #> [16334,]  332  355  360 #> [16335,]  332  355  360 #> [16336,]  332  355  360 #> [16337,]  332  355  360 #> [16338,]  332  355  360 #> [16339,]  332  355  360 #> [16340,]  332  355  360 #> [16341,]  332  355  360 #> [16342,]  332  355  360 #> [16343,]  331  354  360 #> [16344,]  332  355  360 #> [16345,]  332  355  360 #> [16346,]  332  355  360 #> [16347,]  332  355  360 #> [16348,]  332  355  360 #> [16349,]  332  355  360 #> [16350,]  332  355  360 #> [16351,]  331  354  360 #> [16352,]  332  355  360 #> [16353,]  332  355  360 #> [16354,]  332  355  360 #> [16355,]  332  355  360 #> [16356,]  332  355  360 #> [16357,]  332  355  360 #> [16358,]  332  355  360 #> [16359,]  332  355  360 #> [16360,]  331  354  360 #> [16361,]  332  355  360 #> [16362,]  332  355  360 #> [16363,]  332  355  360 #> [16364,]  332  355  360 #> [16365,]  332  355  360 #> [16366,]  332  355  360 #> [16367,]  331  354  360 #> [16368,]  332  355  360 #> [16369,]  332  355  360 #> [16370,]  332  355  360 #> [16371,]  332  355  360 #> [16372,]  332  355  360 #> [16373,]  332  355  360 #> [16374,]  332  355  360 #> [16375,]  332  355  360 #> [16376,]  332  355  360 #> [16377,]  332  355  360 #> [16378,]  332  355  360 #> [16379,]  332  355  360 #> [16380,]  332  355  360 #> [16381,]  332  355  360 #> [16382,]  332  355  360 #> [16383,]  332  355  360 #> [16384,]  332  355  360 #> [16385,]  331  354  360 #> [16386,]  332  355  360 #> [16387,]  332  355  360 #> [16388,]  332  355  360 #> [16389,]  332  355  360 #> [16390,]  332  355  360 #> [16391,]  331  354  360 #> [16392,]  332  355  360 #> [16393,]  332  355  360 #> [16394,]  332  355  360 #> [16395,]  331  354  360 #> [16396,]  332  355  360 #> [16397,]  332  355  360 #> [16398,]  332  355  360 #> [16399,]  332  355  360 #> [16400,]  332  355  360 #> [16401,]  333  357  362 #> [16402,]  333  357  362 #> [16403,]  333  356  361 #> [16404,]  333  357  362 #> [16405,]  333  357  362 #> [16406,]  333  357  362 #> [16407,]  333  357  362 #> [16408,]  333  357  362 #> [16409,]  333  357  362 #> [16410,]  333  356  361 #> [16411,]  333  356  361 #> [16412,]  333  357  362 #> [16413,]  333  357  362 #> [16414,]  333  356  361 #> [16415,]  333  357  362 #> [16416,]  333  357  362 #> [16417,]  333  357  362 #> [16418,]  333  357  362 #> [16419,]  333  357  362 #> [16420,]  333  357  362 #> [16421,]  333  357  362 #> [16422,]  333  357  362 #> [16423,]  333  357  362 #> [16424,]  333  357  362 #> [16425,]  333  357  362 #> [16426,]  333  357  362 #> [16427,]  333  357  362 #> [16428,]  333  357  362 #> [16429,]  333  357  362 #> [16430,]  333  357  362 #> [16431,]  333  356  361 #> [16432,]  333  356  361 #> [16433,]  333  357  362 #> [16434,]  333  357  362 #> [16435,]  333  357  362 #> [16436,]  333  357  362 #> [16437,]  333  357  362 #> [16438,]  333  357  362 #> [16439,]  333  357  362 #> [16440,]  333  356  361 #> [16441,]  333  357  362 #> [16442,]  333  357  362 #> [16443,]  333  357  362 #> [16444,]  333  357  362 #> [16445,]  333  357  362 #> [16446,]  333  357  362 #> [16447,]  333  357  362 #> [16448,]  333  356  361 #> [16449,]  333  357  362 #> [16450,]  333  357  362 #> [16451,]  333  357  362 #> [16452,]  333  357  362 #> [16453,]  333  357  362 #> [16454,]  333  357  362 #> [16455,]  333  357  362 #> [16456,]  333  357  362 #> [16457,]  333  357  362 #> [16458,]  333  357  362 #> [16459,]  333  357  362 #> [16460,]  333  357  362 #> [16461,]  333  357  362 #> [16462,]  333  357  362 #> [16463,]  333  357  362 #> [16464,]  333  357  362 #> [16465,]  333  357  362 #> [16466,]  333  357  362 #> [16467,]  333  357  362 #> [16468,]  333  357  362 #> [16469,]  333  357  362 #> [16470,]  333  356  361 #> [16471,]  333  357  362 #> [16472,]  333  357  362 #> [16473,]  333  357  362 #> [16474,]  333  357  362 #> [16475,]  333  357  362 #> [16476,]  333  357  362 #> [16477,]  333  357  362 #> [16478,]  333  357  362 #> [16479,]  333  357  362 #> [16480,]  333  357  362 #> [16481,]  333  357  362 #> [16482,]  333  357  362 #> [16483,]  333  357  362 #> [16484,]  333  357  362 #> [16485,]  333  357  362 #> [16486,]  333  357  362 #> [16487,]  333  357  362 #> [16488,]  333  357  362 #> [16489,]  333  357  362 #> [16490,]  333  357  362 #> [16491,]  333  357  362 #> [16492,]  333  357  362 #> [16493,]  333  357  362 #> [16494,]  333  357  362 #> [16495,]  333  357  362 #> [16496,]  333  357  362 #> [16497,]  333  357  362 #> [16498,]  333  356  361 #> [16499,]  333  357  362 #> [16500,]  333  357  362 #> [16501,]  335  359  364 #> [16502,]  335  359  364 #> [16503,]  334  358  363 #> [16504,]  335  359  364 #> [16505,]  335  359  364 #> [16506,]  335  359  364 #> [16507,]  335  359  364 #> [16508,]  335  359  364 #> [16509,]  335  359  364 #> [16510,]  335  359  364 #> [16511,]  334  358  363 #> [16512,]  334  358  363 #> [16513,]  335  359  364 #> [16514,]  334  358  363 #> [16515,]  335  359  364 #> [16516,]  335  359  364 #> [16517,]  335  359  364 #> [16518,]  335  359  364 #> [16519,]  334  358  363 #> [16520,]  334  358  363 #> [16521,]  335  359  364 #> [16522,]  334  358  363 #> [16523,]  335  359  364 #> [16524,]  335  359  364 #> [16525,]  335  359  364 #> [16526,]  334  358  363 #> [16527,]  335  359  364 #> [16528,]  335  359  364 #> [16529,]  334  358  363 #> [16530,]  335  359  364 #> [16531,]  335  359  364 #> [16532,]  334  358  363 #> [16533,]  335  359  364 #> [16534,]  335  359  364 #> [16535,]  335  359  364 #> [16536,]  334  358  363 #> [16537,]  335  359  364 #> [16538,]  335  359  364 #> [16539,]  335  359  364 #> [16540,]  334  358  363 #> [16541,]  334  358  363 #> [16542,]  334  358  363 #> [16543,]  335  359  364 #> [16544,]  335  359  364 #> [16545,]  335  359  364 #> [16546,]  335  359  364 #> [16547,]  335  359  364 #> [16548,]  334  358  363 #> [16549,]  335  359  364 #> [16550,]  335  359  364 #> [16551,]  334  358  363 #> [16552,]  335  359  364 #> [16553,]  335  359  364 #> [16554,]  334  358  363 #> [16555,]  335  359  364 #> [16556,]  335  359  364 #> [16557,]  335  359  364 #> [16558,]  335  359  364 #> [16559,]  335  359  364 #> [16560,]  334  358  363 #> [16561,]  335  359  364 #> [16562,]  334  358  363 #> [16563,]  334  358  363 #> [16564,]  335  359  364 #> [16565,]  335  359  364 #> [16566,]  334  358  363 #> [16567,]  335  359  364 #> [16568,]  334  358  363 #> [16569,]  334  358  363 #> [16570,]  335  359  364 #> [16571,]  335  359  364 #> [16572,]  335  359  364 #> [16573,]  335  359  364 #> [16574,]  335  359  364 #> [16575,]  335  359  364 #> [16576,]  335  359  364 #> [16577,]  335  359  364 #> [16578,]  335  359  364 #> [16579,]  335  359  364 #> [16580,]  334  358  363 #> [16581,]  334  358  363 #> [16582,]  335  359  364 #> [16583,]  334  358  363 #> [16584,]  335  359  364 #> [16585,]  335  359  364 #> [16586,]  335  359  364 #> [16587,]  335  359  364 #> [16588,]  335  359  364 #> [16589,]  334  358  363 #> [16590,]  335  359  364 #> [16591,]  334  358  363 #> [16592,]  335  359  364 #> [16593,]  335  359  364 #> [16594,]  335  359  364 #> [16595,]  335  359  364 #> [16596,]  335  359  364 #> [16597,]  335  359  364 #> [16598,]  335  359  364 #> [16599,]  335  359  364 #> [16600,]  335  359  364 #> [16601,]  337  360  366 #> [16602,]  337  360  365 #> [16603,]  337  360  365 #> [16604,]  336  360  365 #> [16605,]  337  360  365 #> [16606,]  337  360  365 #> [16607,]  337  360  365 #> [16608,]  336  360  365 #> [16609,]  336  360  366 #> [16610,]  337  360  365 #> [16611,]  337  360  365 #> [16612,]  337  360  365 #> [16613,]  337  360  366 #> [16614,]  337  360  365 #> [16615,]  337  360  365 #> [16616,]  337  360  365 #> [16617,]  336  360  366 #> [16618,]  337  360  366 #> [16619,]  337  360  365 #> [16620,]  337  360  366 #> [16621,]  337  360  365 #> [16622,]  337  360  365 #> [16623,]  337  360  365 #> [16624,]  337  360  365 #> [16625,]  337  360  365 #> [16626,]  337  360  365 #> [16627,]  336  360  366 #> [16628,]  337  360  365 #> [16629,]  337  360  365 #> [16630,]  337  360  365 #> [16631,]  337  360  365 #> [16632,]  337  360  365 #> [16633,]  337  360  366 #> [16634,]  337  360  365 #> [16635,]  337  360  365 #> [16636,]  337  360  366 #> [16637,]  337  360  365 #> [16638,]  337  360  366 #> [16639,]  337  360  365 #> [16640,]  337  360  365 #> [16641,]  337  360  365 #> [16642,]  337  360  366 #> [16643,]  337  360  365 #> [16644,]  336  360  365 #> [16645,]  337  360  365 #> [16646,]  337  360  365 #> [16647,]  337  360  365 #> [16648,]  337  360  365 #> [16649,]  337  360  365 #> [16650,]  337  360  365 #> [16651,]  337  360  366 #> [16652,]  336  360  365 #> [16653,]  337  360  366 #> [16654,]  337  360  366 #> [16655,]  337  360  365 #> [16656,]  337  360  366 #> [16657,]  337  360  365 #> [16658,]  337  360  365 #> [16659,]  337  360  365 #> [16660,]  337  360  365 #> [16661,]  337  360  365 #> [16662,]  337  360  365 #> [16663,]  337  360  365 #> [16664,]  337  360  365 #> [16665,]  337  360  366 #> [16666,]  337  360  366 #> [16667,]  337  360  365 #> [16668,]  337  360  365 #> [16669,]  337  360  365 #> [16670,]  337  360  365 #> [16671,]  337  360  365 #> [16672,]  337  360  365 #> [16673,]  337  360  365 #> [16674,]  337  360  365 #> [16675,]  337  360  365 #> [16676,]  337  360  365 #> [16677,]  337  360  366 #> [16678,]  337  360  365 #> [16679,]  337  360  366 #> [16680,]  337  360  365 #> [16681,]  336  360  365 #> [16682,]  336  360  366 #> [16683,]  337  360  366 #> [16684,]  337  360  366 #> [16685,]  337  360  366 #> [16686,]  337  360  365 #> [16687,]  337  360  366 #> [16688,]  337  360  365 #> [16689,]  337  360  365 #> [16690,]  336  360  365 #> [16691,]  337  360  366 #> [16692,]  336  360  365 #> [16693,]  337  360  366 #> [16694,]  337  360  366 #> [16695,]  336  360  365 #> [16696,]  337  360  365 #> [16697,]  337  360  365 #> [16698,]  337  360  365 #> [16699,]  336  360  365 #> [16700,]  337  360  365 #> [16701,]  339  362  367 #> [16702,]  338  361  369 #> [16703,]  338  361  369 #> [16704,]  338  361  368 #> [16705,]  339  362  367 #> [16706,]  339  362  367 #> [16707,]  338  361  369 #> [16708,]  339  362  367 #> [16709,]  339  362  367 #> [16710,]  338  361  369 #> [16711,]  338  361  368 #> [16712,]  339  362  367 #> [16713,]  338  361  368 #> [16714,]  339  362  367 #> [16715,]  339  362  367 #> [16716,]  338  361  369 #> [16717,]  338  361  368 #> [16718,]  338  361  369 #> [16719,]  338  361  369 #> [16720,]  339  362  367 #> [16721,]  338  361  368 #> [16722,]  338  361  368 #> [16723,]  338  361  369 #> [16724,]  338  361  369 #> [16725,]  338  361  369 #> [16726,]  339  362  367 #> [16727,]  338  361  368 #> [16728,]  338  361  369 #> [16729,]  338  361  369 #> [16730,]  338  361  368 #> [16731,]  338  361  369 #> [16732,]  338  361  369 #> [16733,]  339  362  367 #> [16734,]  338  361  369 #> [16735,]  338  361  368 #> [16736,]  338  361  369 #> [16737,]  338  361  369 #> [16738,]  338  361  369 #> [16739,]  338  361  369 #> [16740,]  338  361  369 #> [16741,]  338  361  369 #> [16742,]  338  361  369 #> [16743,]  339  362  367 #> [16744,]  338  361  368 #> [16745,]  339  362  367 #> [16746,]  339  362  367 #> [16747,]  338  361  369 #> [16748,]  338  361  369 #> [16749,]  338  361  368 #> [16750,]  339  362  367 #> [16751,]  339  362  367 #> [16752,]  338  361  368 #> [16753,]  339  362  367 #> [16754,]  338  361  368 #> [16755,]  339  362  367 #> [16756,]  339  362  367 #> [16757,]  339  362  367 #> [16758,]  339  362  367 #> [16759,]  338  361  369 #> [16760,]  339  362  367 #> [16761,]  339  362  367 #> [16762,]  338  361  369 #> [16763,]  338  361  369 #> [16764,]  339  362  367 #> [16765,]  339  362  367 #> [16766,]  339  362  367 #> [16767,]  338  361  369 #> [16768,]  339  362  367 #> [16769,]  338  361  368 #> [16770,]  338  361  369 #> [16771,]  339  362  367 #> [16772,]  339  362  367 #> [16773,]  339  362  367 #> [16774,]  339  362  367 #> [16775,]  339  362  367 #> [16776,]  339  362  367 #> [16777,]  338  361  369 #> [16778,]  339  362  367 #> [16779,]  338  361  368 #> [16780,]  338  361  368 #> [16781,]  339  362  367 #> [16782,]  338  361  368 #> [16783,]  338  361  368 #> [16784,]  338  361  369 #> [16785,]  338  361  369 #> [16786,]  338  361  369 #> [16787,]  338  361  368 #> [16788,]  338  361  368 #> [16789,]  338  361  368 #> [16790,]  338  361  368 #> [16791,]  338  361  368 #> [16792,]  339  362  367 #> [16793,]  338  361  369 #> [16794,]  339  362  367 #> [16795,]  338  361  368 #> [16796,]  339  362  367 #> [16797,]  339  362  367 #> [16798,]  338  361  369 #> [16799,]  338  361  368 #> [16800,]  338  361  369 #> [16801,]  340  364  371 #> [16802,]  341  364  372 #> [16803,]  340  363  370 #> [16804,]  340  364  371 #> [16805,]  340  364  372 #> [16806,]  340  364  372 #> [16807,]  340  364  372 #> [16808,]  341  364  371 #> [16809,]  340  364  371 #> [16810,]  340  363  370 #> [16811,]  340  363  370 #> [16812,]  340  364  372 #> [16813,]  341  364  371 #> [16814,]  340  363  370 #> [16815,]  341  364  371 #> [16816,]  341  364  372 #> [16817,]  340  364  371 #> [16818,]  340  364  372 #> [16819,]  341  364  372 #> [16820,]  341  364  372 #> [16821,]  340  363  370 #> [16822,]  341  364  371 #> [16823,]  340  364  372 #> [16824,]  340  364  372 #> [16825,]  340  364  372 #> [16826,]  341  364  372 #> [16827,]  341  364  371 #> [16828,]  340  363  370 #> [16829,]  341  364  372 #> [16830,]  341  364  371 #> [16831,]  340  363  370 #> [16832,]  340  363  370 #> [16833,]  341  364  372 #> [16834,]  340  363  370 #> [16835,]  340  363  370 #> [16836,]  341  364  372 #> [16837,]  341  364  372 #> [16838,]  341  364  372 #> [16839,]  340  364  372 #> [16840,]  340  363  370 #> [16841,]  341  364  372 #> [16842,]  340  364  372 #> [16843,]  341  364  371 #> [16844,]  341  364  371 #> [16845,]  340  364  371 #> [16846,]  341  364  371 #> [16847,]  340  364  372 #> [16848,]  340  363  370 #> [16849,]  340  364  371 #> [16850,]  341  364  372 #> [16851,]  341  364  372 #> [16852,]  340  364  371 #> [16853,]  341  364  372 #> [16854,]  340  364  371 #> [16855,]  341  364  371 #> [16856,]  341  364  372 #> [16857,]  340  364  372 #> [16858,]  341  364  371 #> [16859,]  341  364  372 #> [16860,]  341  364  372 #> [16861,]  341  364  372 #> [16862,]  340  364  371 #> [16863,]  341  364  372 #> [16864,]  341  364  372 #> [16865,]  340  364  372 #> [16866,]  341  364  371 #> [16867,]  340  364  371 #> [16868,]  341  364  371 #> [16869,]  341  364  371 #> [16870,]  340  363  370 #> [16871,]  341  364  372 #> [16872,]  340  364  372 #> [16873,]  340  364  372 #> [16874,]  340  363  370 #> [16875,]  341  364  372 #> [16876,]  340  364  372 #> [16877,]  341  364  372 #> [16878,]  341  364  372 #> [16879,]  340  364  371 #> [16880,]  341  364  371 #> [16881,]  341  364  371 #> [16882,]  340  363  370 #> [16883,]  341  364  371 #> [16884,]  341  364  372 #> [16885,]  341  364  371 #> [16886,]  340  364  372 #> [16887,]  341  364  371 #> [16888,]  340  364  371 #> [16889,]  340  364  371 #> [16890,]  341  364  371 #> [16891,]  340  364  371 #> [16892,]  340  364  371 #> [16893,]  341  364  372 #> [16894,]  340  364  372 #> [16895,]  341  364  371 #> [16896,]  341  364  371 #> [16897,]  341  364  372 #> [16898,]  340  363  370 #> [16899,]  340  364  371 #> [16900,]  341  364  372 #> [16901,]  343  366  373 #> [16902,]  343  366  373 #> [16903,]  342  365  374 #> [16904,]  343  366  373 #> [16905,]  342  365  374 #> [16906,]  342  365  374 #> [16907,]  343  366  373 #> [16908,]  343  366  373 #> [16909,]  343  366  373 #> [16910,]  343  366  373 #> [16911,]  342  365  374 #> [16912,]  342  365  374 #> [16913,]  343  366  373 #> [16914,]  342  365  374 #> [16915,]  343  366  373 #> [16916,]  343  366  373 #> [16917,]  343  366  373 #> [16918,]  343  366  373 #> [16919,]  342  365  375 #> [16920,]  342  365  375 #> [16921,]  343  366  373 #> [16922,]  342  365  375 #> [16923,]  343  366  373 #> [16924,]  342  365  374 #> [16925,]  343  366  373 #> [16926,]  342  365  375 #> [16927,]  343  366  373 #> [16928,]  343  366  373 #> [16929,]  342  365  375 #> [16930,]  342  365  375 #> [16931,]  343  366  373 #> [16932,]  342  365  374 #> [16933,]  343  366  373 #> [16934,]  342  365  374 #> [16935,]  343  366  373 #> [16936,]  342  365  375 #> [16937,]  343  366  373 #> [16938,]  343  366  373 #> [16939,]  343  366  373 #> [16940,]  342  365  374 #> [16941,]  342  365  375 #> [16942,]  342  365  374 #> [16943,]  343  366  373 #> [16944,]  343  366  373 #> [16945,]  343  366  373 #> [16946,]  343  366  373 #> [16947,]  343  366  373 #> [16948,]  342  365  374 #> [16949,]  343  366  373 #> [16950,]  343  366  373 #> [16951,]  342  365  375 #> [16952,]  343  366  373 #> [16953,]  343  366  373 #> [16954,]  342  365  374 #> [16955,]  342  365  375 #> [16956,]  343  366  373 #> [16957,]  343  366  373 #> [16958,]  343  366  373 #> [16959,]  343  366  373 #> [16960,]  342  365  375 #> [16961,]  343  366  373 #> [16962,]  342  365  374 #> [16963,]  342  365  374 #> [16964,]  343  366  373 #> [16965,]  343  366  373 #> [16966,]  342  365  375 #> [16967,]  342  365  374 #> [16968,]  342  365  374 #> [16969,]  342  365  375 #> [16970,]  343  366  373 #> [16971,]  343  366  373 #> [16972,]  343  366  373 #> [16973,]  343  366  373 #> [16974,]  343  366  373 #> [16975,]  343  366  373 #> [16976,]  343  366  373 #> [16977,]  343  366  373 #> [16978,]  342  365  375 #> [16979,]  343  366  373 #> [16980,]  342  365  375 #> [16981,]  342  365  375 #> [16982,]  343  366  373 #> [16983,]  342  365  375 #> [16984,]  343  366  373 #> [16985,]  343  366  373 #> [16986,]  343  366  373 #> [16987,]  343  366  373 #> [16988,]  343  366  373 #> [16989,]  342  365  374 #> [16990,]  343  366  373 #> [16991,]  342  365  374 #> [16992,]  343  366  373 #> [16993,]  342  365  374 #> [16994,]  343  366  373 #> [16995,]  343  366  373 #> [16996,]  343  366  373 #> [16997,]  343  366  373 #> [16998,]  342  365  374 #> [16999,]  342  365  374 #> [17000,]  343  366  373 #> [17001,]  344  367  376 #> [17002,]  344  367  376 #> [17003,]  344  367  376 #> [17004,]  345  368  377 #> [17005,]  344  367  376 #> [17006,]  344  367  376 #> [17007,]  344  367  376 #> [17008,]  344  367  376 #> [17009,]  344  367  376 #> [17010,]  345  368  377 #> [17011,]  344  367  376 #> [17012,]  344  367  376 #> [17013,]  344  367  376 #> [17014,]  344  367  376 #> [17015,]  344  367  376 #> [17016,]  344  367  376 #> [17017,]  344  367  376 #> [17018,]  345  368  377 #> [17019,]  344  367  376 #> [17020,]  344  367  376 #> [17021,]  344  367  376 #> [17022,]  344  367  376 #> [17023,]  344  367  376 #> [17024,]  344  367  376 #> [17025,]  345  368  377 #> [17026,]  344  367  376 #> [17027,]  344  367  376 #> [17028,]  344  367  376 #> [17029,]  344  367  376 #> [17030,]  344  367  376 #> [17031,]  344  367  376 #> [17032,]  344  367  376 #> [17033,]  344  367  376 #> [17034,]  344  367  376 #> [17035,]  344  367  376 #> [17036,]  344  367  376 #> [17037,]  344  367  376 #> [17038,]  344  367  376 #> [17039,]  345  368  377 #> [17040,]  344  367  376 #> [17041,]  344  367  376 #> [17042,]  344  367  376 #> [17043,]  345  368  377 #> [17044,]  344  367  376 #> [17045,]  345  368  377 #> [17046,]  344  367  376 #> [17047,]  344  367  376 #> [17048,]  344  367  376 #> [17049,]  344  367  376 #> [17050,]  344  367  376 #> [17051,]  344  367  376 #> [17052,]  344  367  376 #> [17053,]  344  367  376 #> [17054,]  344  367  376 #> [17055,]  344  367  376 #> [17056,]  344  367  376 #> [17057,]  344  367  376 #> [17058,]  344  367  376 #> [17059,]  344  367  376 #> [17060,]  344  367  376 #> [17061,]  344  367  376 #> [17062,]  344  367  376 #> [17063,]  344  367  376 #> [17064,]  344  367  376 #> [17065,]  344  367  376 #> [17066,]  344  367  376 #> [17067,]  344  367  376 #> [17068,]  344  367  376 #> [17069,]  344  367  376 #> [17070,]  344  367  376 #> [17071,]  344  367  376 #> [17072,]  344  367  376 #> [17073,]  345  368  377 #> [17074,]  345  368  377 #> [17075,]  345  368  377 #> [17076,]  345  368  377 #> [17077,]  345  368  377 #> [17078,]  344  367  376 #> [17079,]  344  367  376 #> [17080,]  344  367  376 #> [17081,]  344  367  376 #> [17082,]  344  367  376 #> [17083,]  344  367  376 #> [17084,]  344  367  376 #> [17085,]  344  367  376 #> [17086,]  344  367  376 #> [17087,]  344  367  376 #> [17088,]  344  367  376 #> [17089,]  344  367  376 #> [17090,]  344  367  376 #> [17091,]  344  367  376 #> [17092,]  344  367  376 #> [17093,]  344  367  376 #> [17094,]  344  367  376 #> [17095,]  344  367  376 #> [17096,]  344  367  376 #> [17097,]  344  367  376 #> [17098,]  344  367  376 #> [17099,]  344  367  376 #> [17100,]  344  367  376 #> [17101,]  346  370  378 #> [17102,]  346  370  378 #> [17103,]  346  369  378 #> [17104,]  346  369  378 #> [17105,]  346  370  378 #> [17106,]  346  370  378 #> [17107,]  346  369  378 #> [17108,]  346  370  378 #> [17109,]  346  370  378 #> [17110,]  346  370  378 #> [17111,]  346  370  378 #> [17112,]  346  369  378 #> [17113,]  346  370  378 #> [17114,]  346  370  378 #> [17115,]  346  370  378 #> [17116,]  346  370  378 #> [17117,]  346  370  378 #> [17118,]  346  370  378 #> [17119,]  346  370  378 #> [17120,]  346  370  378 #> [17121,]  346  370  378 #> [17122,]  346  370  378 #> [17123,]  346  370  378 #> [17124,]  346  370  378 #> [17125,]  346  369  378 #> [17126,]  346  370  378 #> [17127,]  346  370  378 #> [17128,]  346  370  378 #> [17129,]  346  370  378 #> [17130,]  346  370  378 #> [17131,]  346  369  378 #> [17132,]  346  370  378 #> [17133,]  346  370  378 #> [17134,]  346  370  378 #> [17135,]  346  370  378 #> [17136,]  346  370  378 #> [17137,]  346  370  378 #> [17138,]  346  370  378 #> [17139,]  346  370  378 #> [17140,]  346  370  378 #> [17141,]  346  370  378 #> [17142,]  346  370  378 #> [17143,]  346  370  378 #> [17144,]  346  370  378 #> [17145,]  346  370  378 #> [17146,]  346  370  378 #> [17147,]  346  370  378 #> [17148,]  346  370  378 #> [17149,]  346  370  378 #> [17150,]  346  370  378 #> [17151,]  346  370  378 #> [17152,]  346  369  378 #> [17153,]  346  370  378 #> [17154,]  346  370  378 #> [17155,]  346  370  378 #> [17156,]  346  370  378 #> [17157,]  346  370  378 #> [17158,]  346  370  378 #> [17159,]  346  369  378 #> [17160,]  346  369  378 #> [17161,]  346  370  378 #> [17162,]  346  370  378 #> [17163,]  346  370  378 #> [17164,]  346  370  378 #> [17165,]  346  370  378 #> [17166,]  346  370  378 #> [17167,]  346  370  378 #> [17168,]  346  370  378 #> [17169,]  346  370  378 #> [17170,]  346  370  378 #> [17171,]  346  370  378 #> [17172,]  346  370  378 #> [17173,]  346  370  378 #> [17174,]  346  370  378 #> [17175,]  346  370  378 #> [17176,]  346  370  378 #> [17177,]  346  370  378 #> [17178,]  346  370  378 #> [17179,]  346  370  378 #> [17180,]  346  370  378 #> [17181,]  346  370  378 #> [17182,]  346  370  378 #> [17183,]  346  370  378 #> [17184,]  346  370  378 #> [17185,]  346  370  378 #> [17186,]  346  370  378 #> [17187,]  346  370  378 #> [17188,]  346  370  378 #> [17189,]  346  370  378 #> [17190,]  346  370  378 #> [17191,]  346  370  378 #> [17192,]  346  370  378 #> [17193,]  346  370  378 #> [17194,]  346  370  378 #> [17195,]  346  370  378 #> [17196,]  346  369  378 #> [17197,]  346  369  378 #> [17198,]  346  370  378 #> [17199,]  346  370  378 #> [17200,]  346  370  378 #> [17201,]  348  372  380 #> [17202,]  348  372  380 #> [17203,]  348  372  380 #> [17204,]  347  371  379 #> [17205,]  348  372  380 #> [17206,]  348  372  380 #> [17207,]  348  372  380 #> [17208,]  347  371  379 #> [17209,]  347  371  379 #> [17210,]  347  371  379 #> [17211,]  348  372  380 #> [17212,]  348  372  380 #> [17213,]  348  372  380 #> [17214,]  348  372  380 #> [17215,]  348  372  380 #> [17216,]  348  372  380 #> [17217,]  348  372  380 #> [17218,]  348  372  380 #> [17219,]  348  372  380 #> [17220,]  347  371  379 #> [17221,]  348  372  380 #> [17222,]  348  372  380 #> [17223,]  348  372  380 #> [17224,]  348  372  380 #> [17225,]  348  372  380 #> [17226,]  348  372  380 #> [17227,]  348  372  380 #> [17228,]  348  372  380 #> [17229,]  348  372  380 #> [17230,]  347  371  379 #> [17231,]  348  372  380 #> [17232,]  348  372  380 #> [17233,]  348  372  380 #> [17234,]  348  372  380 #> [17235,]  348  372  380 #> [17236,]  348  372  380 #> [17237,]  348  372  380 #> [17238,]  348  372  380 #> [17239,]  348  372  380 #> [17240,]  348  372  380 #> [17241,]  348  372  380 #> [17242,]  348  372  380 #> [17243,]  347  371  379 #> [17244,]  348  372  380 #> [17245,]  348  372  380 #> [17246,]  348  372  380 #> [17247,]  348  372  380 #> [17248,]  348  372  380 #> [17249,]  348  372  380 #> [17250,]  348  372  380 #> [17251,]  347  371  379 #> [17252,]  348  372  380 #> [17253,]  347  371  379 #> [17254,]  348  372  380 #> [17255,]  348  372  380 #> [17256,]  347  371  379 #> [17257,]  348  372  380 #> [17258,]  348  372  380 #> [17259,]  348  372  380 #> [17260,]  347  371  379 #> [17261,]  348  372  380 #> [17262,]  348  372  380 #> [17263,]  348  372  380 #> [17264,]  347  371  379 #> [17265,]  348  372  380 #> [17266,]  348  372  380 #> [17267,]  347  371  379 #> [17268,]  348  372  380 #> [17269,]  348  372  380 #> [17270,]  348  372  380 #> [17271,]  348  372  380 #> [17272,]  348  372  380 #> [17273,]  348  372  380 #> [17274,]  348  372  380 #> [17275,]  348  372  380 #> [17276,]  348  372  380 #> [17277,]  348  372  380 #> [17278,]  347  371  379 #> [17279,]  348  372  380 #> [17280,]  348  372  380 #> [17281,]  348  372  380 #> [17282,]  348  372  380 #> [17283,]  348  372  380 #> [17284,]  348  372  380 #> [17285,]  347  371  379 #> [17286,]  348  372  380 #> [17287,]  348  372  380 #> [17288,]  348  372  380 #> [17289,]  347  371  379 #> [17290,]  348  372  380 #> [17291,]  347  371  379 #> [17292,]  348  372  380 #> [17293,]  348  372  380 #> [17294,]  348  372  380 #> [17295,]  347  371  379 #> [17296,]  348  372  380 #> [17297,]  348  372  380 #> [17298,]  348  372  380 #> [17299,]  348  372  380 #> [17300,]  348  372  380 #> [17301,]  351  374  382 #> [17302,]  351  374  382 #> [17303,]  350  374  382 #> [17304,]  349  373  381 #> [17305,]  351  374  382 #> [17306,]  351  374  382 #> [17307,]  350  374  382 #> [17308,]  350  374  382 #> [17309,]  351  374  382 #> [17310,]  351  374  382 #> [17311,]  351  374  382 #> [17312,]  350  374  382 #> [17313,]  351  374  382 #> [17314,]  349  373  381 #> [17315,]  351  374  382 #> [17316,]  351  374  382 #> [17317,]  351  374  382 #> [17318,]  351  374  382 #> [17319,]  351  374  382 #> [17320,]  351  374  382 #> [17321,]  351  374  382 #> [17322,]  351  374  382 #> [17323,]  350  374  382 #> [17324,]  351  374  382 #> [17325,]  350  374  382 #> [17326,]  351  374  382 #> [17327,]  349  373  381 #> [17328,]  351  374  382 #> [17329,]  351  374  382 #> [17330,]  351  374  382 #> [17331,]  350  374  382 #> [17332,]  351  374  382 #> [17333,]  351  374  382 #> [17334,]  351  374  382 #> [17335,]  351  374  382 #> [17336,]  351  374  382 #> [17337,]  351  374  382 #> [17338,]  351  374  382 #> [17339,]  351  374  382 #> [17340,]  351  374  382 #> [17341,]  351  374  382 #> [17342,]  351  374  382 #> [17343,]  351  374  382 #> [17344,]  351  374  382 #> [17345,]  351  374  382 #> [17346,]  351  374  382 #> [17347,]  350  374  382 #> [17348,]  351  374  382 #> [17349,]  351  374  382 #> [17350,]  351  374  382 #> [17351,]  351  374  382 #> [17352,]  350  374  382 #> [17353,]  351  374  382 #> [17354,]  351  374  382 #> [17355,]  351  374  382 #> [17356,]  351  374  382 #> [17357,]  350  374  382 #> [17358,]  351  374  382 #> [17359,]  350  374  382 #> [17360,]  350  374  382 #> [17361,]  349  373  381 #> [17362,]  351  374  382 #> [17363,]  351  374  382 #> [17364,]  351  374  382 #> [17365,]  351  374  382 #> [17366,]  351  374  382 #> [17367,]  351  374  382 #> [17368,]  350  374  382 #> [17369,]  351  374  382 #> [17370,]  351  374  382 #> [17371,]  351  374  382 #> [17372,]  351  374  382 #> [17373,]  351  374  382 #> [17374,]  351  374  382 #> [17375,]  351  374  382 #> [17376,]  351  374  382 #> [17377,]  351  374  382 #> [17378,]  351  374  382 #> [17379,]  351  374  382 #> [17380,]  350  374  382 #> [17381,]  351  374  382 #> [17382,]  349  373  381 #> [17383,]  351  374  382 #> [17384,]  351  374  382 #> [17385,]  351  374  382 #> [17386,]  350  374  382 #> [17387,]  351  374  382 #> [17388,]  351  374  382 #> [17389,]  351  374  382 #> [17390,]  351  374  382 #> [17391,]  351  374  382 #> [17392,]  349  373  381 #> [17393,]  349  373  381 #> [17394,]  351  374  382 #> [17395,]  351  374  382 #> [17396,]  349  373  381 #> [17397,]  350  374  382 #> [17398,]  350  374  382 #> [17399,]  351  374  382 #> [17400,]  351  374  382 #> [17401,]  353  376  384 #> [17402,]  353  376  384 #> [17403,]  352  375  383 #> [17404,]  353  376  384 #> [17405,]  353  376  384 #> [17406,]  353  376  383 #> [17407,]  353  376  384 #> [17408,]  353  376  384 #> [17409,]  353  376  384 #> [17410,]  353  376  384 #> [17411,]  352  375  383 #> [17412,]  352  375  383 #> [17413,]  353  376  384 #> [17414,]  352  375  383 #> [17415,]  353  376  384 #> [17416,]  353  376  384 #> [17417,]  353  376  384 #> [17418,]  353  376  384 #> [17419,]  352  375  383 #> [17420,]  352  375  383 #> [17421,]  353  376  384 #> [17422,]  352  375  383 #> [17423,]  353  376  384 #> [17424,]  353  376  383 #> [17425,]  353  376  384 #> [17426,]  352  375  383 #> [17427,]  353  376  384 #> [17428,]  353  376  384 #> [17429,]  352  375  383 #> [17430,]  353  376  383 #> [17431,]  353  376  384 #> [17432,]  352  375  383 #> [17433,]  353  376  384 #> [17434,]  353  376  383 #> [17435,]  353  376  384 #> [17436,]  352  375  383 #> [17437,]  353  376  384 #> [17438,]  353  376  384 #> [17439,]  353  376  384 #> [17440,]  352  375  383 #> [17441,]  352  375  383 #> [17442,]  352  375  383 #> [17443,]  353  376  384 #> [17444,]  353  376  384 #> [17445,]  353  376  384 #> [17446,]  353  376  384 #> [17447,]  353  376  384 #> [17448,]  352  375  383 #> [17449,]  353  376  384 #> [17450,]  353  376  384 #> [17451,]  352  375  383 #> [17452,]  353  376  384 #> [17453,]  353  376  384 #> [17454,]  352  375  383 #> [17455,]  353  376  383 #> [17456,]  353  376  384 #> [17457,]  353  376  384 #> [17458,]  353  376  384 #> [17459,]  353  376  384 #> [17460,]  352  375  383 #> [17461,]  353  376  384 #> [17462,]  352  375  383 #> [17463,]  352  375  383 #> [17464,]  353  376  384 #> [17465,]  353  376  384 #> [17466,]  352  375  383 #> [17467,]  353  376  383 #> [17468,]  352  375  383 #> [17469,]  352  375  383 #> [17470,]  353  376  384 #> [17471,]  353  376  384 #> [17472,]  353  376  384 #> [17473,]  353  376  384 #> [17474,]  353  376  384 #> [17475,]  353  376  384 #> [17476,]  353  376  384 #> [17477,]  353  376  384 #> [17478,]  353  376  383 #> [17479,]  353  376  384 #> [17480,]  352  375  383 #> [17481,]  352  375  383 #> [17482,]  353  376  384 #> [17483,]  352  375  383 #> [17484,]  353  376  384 #> [17485,]  353  376  384 #> [17486,]  353  376  384 #> [17487,]  353  376  384 #> [17488,]  353  376  384 #> [17489,]  352  375  383 #> [17490,]  353  376  384 #> [17491,]  352  375  383 #> [17492,]  353  376  384 #> [17493,]  353  376  383 #> [17494,]  353  376  384 #> [17495,]  353  376  384 #> [17496,]  353  376  384 #> [17497,]  353  376  384 #> [17498,]  353  376  383 #> [17499,]  353  376  383 #> [17500,]  353  376  384 #> [17501,]  354  377  385 #> [17502,]  354  377  385 #> [17503,]  354  377  385 #> [17504,]  354  377  385 #> [17505,]  354  377  385 #> [17506,]  354  377  385 #> [17507,]  355  379  386 #> [17508,]  354  377  385 #> [17509,]  354  377  385 #> [17510,]  354  377  385 #> [17511,]  354  377  385 #> [17512,]  354  377  385 #> [17513,]  354  377  385 #> [17514,]  354  377  385 #> [17515,]  354  377  385 #> [17516,]  355  379  386 #> [17517,]  354  377  385 #> [17518,]  354  377  385 #> [17519,]  354  377  385 #> [17520,]  355  379  386 #> [17521,]  354  377  385 #> [17522,]  354  377  385 #> [17523,]  354  377  385 #> [17524,]  355  378  386 #> [17525,]  354  377  385 #> [17526,]  354  377  385 #> [17527,]  354  377  385 #> [17528,]  355  378  386 #> [17529,]  354  377  385 #> [17530,]  354  377  385 #> [17531,]  354  377  385 #> [17532,]  354  377  385 #> [17533,]  354  377  385 #> [17534,]  354  377  385 #> [17535,]  354  377  385 #> [17536,]  354  377  385 #> [17537,]  354  377  385 #> [17538,]  354  377  385 #> [17539,]  354  377  385 #> [17540,]  354  377  385 #> [17541,]  354  377  385 #> [17542,]  354  377  385 #> [17543,]  354  377  385 #> [17544,]  354  377  385 #> [17545,]  354  377  385 #> [17546,]  354  377  385 #> [17547,]  354  377  385 #> [17548,]  354  377  385 #> [17549,]  354  377  385 #> [17550,]  355  379  386 #> [17551,]  354  377  385 #> [17552,]  355  378  386 #> [17553,]  354  377  385 #> [17554,]  354  377  385 #> [17555,]  354  377  385 #> [17556,]  354  377  385 #> [17557,]  354  377  385 #> [17558,]  354  377  385 #> [17559,]  354  377  385 #> [17560,]  354  377  385 #> [17561,]  354  377  385 #> [17562,]  354  377  385 #> [17563,]  354  377  385 #> [17564,]  354  377  385 #> [17565,]  354  377  385 #> [17566,]  354  377  385 #> [17567,]  354  377  385 #> [17568,]  354  377  385 #> [17569,]  354  377  385 #> [17570,]  354  377  385 #> [17571,]  354  377  385 #> [17572,]  354  377  385 #> [17573,]  354  377  385 #> [17574,]  354  377  385 #> [17575,]  354  377  385 #> [17576,]  355  378  386 #> [17577,]  354  377  385 #> [17578,]  354  377  385 #> [17579,]  354  377  385 #> [17580,]  354  377  385 #> [17581,]  354  377  385 #> [17582,]  354  377  385 #> [17583,]  354  377  385 #> [17584,]  354  377  385 #> [17585,]  354  377  385 #> [17586,]  355  379  386 #> [17587,]  354  377  385 #> [17588,]  354  377  385 #> [17589,]  354  377  385 #> [17590,]  354  377  385 #> [17591,]  355  378  386 #> [17592,]  354  377  385 #> [17593,]  354  377  385 #> [17594,]  354  377  385 #> [17595,]  354  377  385 #> [17596,]  354  377  385 #> [17597,]  354  377  385 #> [17598,]  354  377  385 #> [17599,]  354  377  385 #> [17600,]  354  377  385 #> [17601,]  356  380  388 #> [17602,]  356  380  388 #> [17603,]  356  380  388 #> [17604,]  356  380  388 #> [17605,]  356  380  388 #> [17606,]  356  380  388 #> [17607,]  356  380  388 #> [17608,]  357  381  387 #> [17609,]  357  381  387 #> [17610,]  356  380  388 #> [17611,]  356  380  388 #> [17612,]  356  380  388 #> [17613,]  356  380  388 #> [17614,]  356  380  388 #> [17615,]  356  380  388 #> [17616,]  356  380  388 #> [17617,]  356  380  388 #> [17618,]  356  380  388 #> [17619,]  356  380  388 #> [17620,]  356  380  388 #> [17621,]  356  380  388 #> [17622,]  356  380  388 #> [17623,]  356  380  388 #> [17624,]  356  380  388 #> [17625,]  356  380  388 #> [17626,]  357  381  387 #> [17627,]  356  380  388 #> [17628,]  356  380  388 #> [17629,]  356  380  388 #> [17630,]  356  380  388 #> [17631,]  356  380  388 #> [17632,]  356  380  388 #> [17633,]  356  380  388 #> [17634,]  356  380  388 #> [17635,]  356  380  388 #> [17636,]  356  380  388 #> [17637,]  356  380  388 #> [17638,]  356  380  388 #> [17639,]  356  380  388 #> [17640,]  356  380  388 #> [17641,]  356  380  388 #> [17642,]  356  380  388 #> [17643,]  357  381  387 #> [17644,]  356  380  388 #> [17645,]  356  380  388 #> [17646,]  356  380  388 #> [17647,]  356  380  388 #> [17648,]  356  380  388 #> [17649,]  356  380  388 #> [17650,]  356  380  388 #> [17651,]  356  380  388 #> [17652,]  356  380  388 #> [17653,]  356  380  388 #> [17654,]  356  380  388 #> [17655,]  356  380  388 #> [17656,]  357  381  387 #> [17657,]  356  380  388 #> [17658,]  356  380  388 #> [17659,]  356  380  388 #> [17660,]  356  380  388 #> [17661,]  357  381  387 #> [17662,]  356  380  388 #> [17663,]  356  380  388 #> [17664,]  356  380  388 #> [17665,]  356  380  388 #> [17666,]  356  380  388 #> [17667,]  356  380  388 #> [17668,]  356  380  388 #> [17669,]  356  380  388 #> [17670,]  356  380  388 #> [17671,]  356  380  388 #> [17672,]  356  380  388 #> [17673,]  356  380  388 #> [17674,]  356  380  388 #> [17675,]  356  380  388 #> [17676,]  357  381  387 #> [17677,]  356  380  388 #> [17678,]  356  380  388 #> [17679,]  356  380  388 #> [17680,]  356  380  388 #> [17681,]  356  380  388 #> [17682,]  356  380  388 #> [17683,]  356  380  388 #> [17684,]  356  380  388 #> [17685,]  356  380  388 #> [17686,]  356  380  388 #> [17687,]  356  380  388 #> [17688,]  356  380  388 #> [17689,]  356  380  388 #> [17690,]  356  380  388 #> [17691,]  356  380  388 #> [17692,]  356  380  388 #> [17693,]  356  380  388 #> [17694,]  356  380  388 #> [17695,]  356  380  388 #> [17696,]  356  380  388 #> [17697,]  356  380  388 #> [17698,]  356  380  388 #> [17699,]  356  380  388 #> [17700,]  356  380  388 #> [17701,]  359  383  390 #> [17702,]  359  383  390 #> [17703,]  358  382  389 #> [17704,]  358  382  389 #> [17705,]  359  383  390 #> [17706,]  359  383  390 #> [17707,]  358  382  389 #> [17708,]  358  382  389 #> [17709,]  359  383  390 #> [17710,]  359  383  390 #> [17711,]  359  383  390 #> [17712,]  358  382  389 #> [17713,]  359  383  390 #> [17714,]  359  383  390 #> [17715,]  359  383  390 #> [17716,]  359  383  390 #> [17717,]  359  383  390 #> [17718,]  359  383  390 #> [17719,]  359  383  390 #> [17720,]  359  383  390 #> [17721,]  359  383  390 #> [17722,]  359  383  390 #> [17723,]  359  383  390 #> [17724,]  359  383  390 #> [17725,]  358  382  389 #> [17726,]  359  383  390 #> [17727,]  359  383  390 #> [17728,]  359  383  390 #> [17729,]  359  383  390 #> [17730,]  359  383  390 #> [17731,]  358  382  389 #> [17732,]  359  383  390 #> [17733,]  359  383  390 #> [17734,]  359  383  390 #> [17735,]  359  383  390 #> [17736,]  359  383  390 #> [17737,]  359  383  390 #> [17738,]  359  383  390 #> [17739,]  359  383  390 #> [17740,]  359  383  390 #> [17741,]  359  383  390 #> [17742,]  359  383  390 #> [17743,]  359  383  390 #> [17744,]  359  383  390 #> [17745,]  359  383  390 #> [17746,]  359  383  390 #> [17747,]  359  383  390 #> [17748,]  359  383  390 #> [17749,]  359  383  390 #> [17750,]  359  383  390 #> [17751,]  359  383  390 #> [17752,]  358  382  389 #> [17753,]  359  383  390 #> [17754,]  359  383  390 #> [17755,]  359  383  390 #> [17756,]  359  383  390 #> [17757,]  358  382  389 #> [17758,]  359  383  390 #> [17759,]  358  382  389 #> [17760,]  358  382  389 #> [17761,]  359  383  390 #> [17762,]  359  383  390 #> [17763,]  359  383  390 #> [17764,]  359  383  390 #> [17765,]  359  383  390 #> [17766,]  359  383  390 #> [17767,]  359  383  390 #> [17768,]  358  382  389 #> [17769,]  359  383  390 #> [17770,]  359  383  390 #> [17771,]  359  383  390 #> [17772,]  359  383  390 #> [17773,]  359  383  390 #> [17774,]  359  383  390 #> [17775,]  359  383  390 #> [17776,]  359  383  390 #> [17777,]  359  383  390 #> [17778,]  359  383  390 #> [17779,]  359  383  390 #> [17780,]  359  383  390 #> [17781,]  359  383  390 #> [17782,]  359  383  390 #> [17783,]  359  383  390 #> [17784,]  359  383  390 #> [17785,]  359  383  390 #> [17786,]  358  382  389 #> [17787,]  359  383  390 #> [17788,]  359  383  390 #> [17789,]  359  383  390 #> [17790,]  359  383  390 #> [17791,]  359  383  390 #> [17792,]  359  383  390 #> [17793,]  359  383  390 #> [17794,]  359  383  390 #> [17795,]  359  383  390 #> [17796,]  358  382  389 #> [17797,]  358  382  389 #> [17798,]  359  383  390 #> [17799,]  359  383  390 #> [17800,]  359  383  390 #> [17801,]  361  385  392 #> [17802,]  360  386  393 #> [17803,]  360  387  393 #> [17804,]  360  386  393 #> [17805,]  360  386  393 #> [17806,]  360  387  393 #> [17807,]  360  386  393 #> [17808,]  360  386  393 #> [17809,]  360  386  393 #> [17810,]  360  386  393 #> [17811,]  360  386  393 #> [17812,]  360  386  393 #> [17813,]  360  386  393 #> [17814,]  361  384  391 #> [17815,]  361  384  391 #> [17816,]  361  384  391 #> [17817,]  360  386  393 #> [17818,]  360  386  393 #> [17819,]  360  386  393 #> [17820,]  360  386  393 #> [17821,]  360  386  393 #> [17822,]  360  386  393 #> [17823,]  360  386  393 #> [17824,]  360  386  393 #> [17825,]  360  386  393 #> [17826,]  360  386  393 #> [17827,]  360  386  393 #> [17828,]  360  386  393 #> [17829,]  360  386  393 #> [17830,]  360  386  393 #> [17831,]  360  386  393 #> [17832,]  360  386  393 #> [17833,]  360  386  393 #> [17834,]  360  387  393 #> [17835,]  360  386  393 #> [17836,]  360  386  393 #> [17837,]  360  386  393 #> [17838,]  360  386  393 #> [17839,]  360  386  393 #> [17840,]  360  386  393 #> [17841,]  361  385  392 #> [17842,]  360  386  393 #> [17843,]  360  386  393 #> [17844,]  361  384  391 #> [17845,]  360  386  393 #> [17846,]  360  386  393 #> [17847,]  360  386  393 #> [17848,]  360  386  393 #> [17849,]  360  386  393 #> [17850,]  361  385  392 #> [17851,]  360  386  393 #> [17852,]  360  386  393 #> [17853,]  360  386  393 #> [17854,]  360  386  393 #> [17855,]  360  386  393 #> [17856,]  360  386  393 #> [17857,]  360  386  393 #> [17858,]  360  386  393 #> [17859,]  361  384  391 #> [17860,]  360  387  393 #> [17861,]  360  386  393 #> [17862,]  360  386  393 #> [17863,]  360  386  393 #> [17864,]  360  386  393 #> [17865,]  360  387  393 #> [17866,]  360  386  393 #> [17867,]  360  386  393 #> [17868,]  360  386  393 #> [17869,]  360  386  393 #> [17870,]  361  385  392 #> [17871,]  360  386  393 #> [17872,]  360  386  393 #> [17873,]  361  385  392 #> [17874,]  360  386  393 #> [17875,]  360  386  393 #> [17876,]  360  386  393 #> [17877,]  360  386  393 #> [17878,]  360  386  393 #> [17879,]  360  386  393 #> [17880,]  360  386  393 #> [17881,]  360  386  393 #> [17882,]  360  386  393 #> [17883,]  360  386  393 #> [17884,]  360  386  393 #> [17885,]  360  386  393 #> [17886,]  360  386  393 #> [17887,]  360  386  393 #> [17888,]  360  386  393 #> [17889,]  360  386  393 #> [17890,]  360  386  393 #> [17891,]  360  386  393 #> [17892,]  360  386  393 #> [17893,]  360  387  393 #> [17894,]  360  386  393 #> [17895,]  360  386  393 #> [17896,]  361  384  391 #> [17897,]  360  386  393 #> [17898,]  360  386  393 #> [17899,]  361  385  392 #> [17900,]  360  386  393 #> [17901,]  363  389  394 #> [17902,]  363  389  394 #> [17903,]  362  388  394 #> [17904,]  362  388  394 #> [17905,]  363  389  394 #> [17906,]  363  389  394 #> [17907,]  362  388  394 #> [17908,]  362  388  394 #> [17909,]  363  389  394 #> [17910,]  363  389  394 #> [17911,]  363  389  394 #> [17912,]  362  388  394 #> [17913,]  363  389  394 #> [17914,]  363  389  394 #> [17915,]  363  389  394 #> [17916,]  363  389  394 #> [17917,]  363  389  394 #> [17918,]  363  389  394 #> [17919,]  363  389  394 #> [17920,]  363  389  394 #> [17921,]  363  389  394 #> [17922,]  363  389  394 #> [17923,]  362  388  394 #> [17924,]  363  389  394 #> [17925,]  362  388  394 #> [17926,]  363  389  394 #> [17927,]  363  389  394 #> [17928,]  363  389  394 #> [17929,]  363  389  394 #> [17930,]  363  389  394 #> [17931,]  362  388  394 #> [17932,]  363  389  394 #> [17933,]  363  389  394 #> [17934,]  363  389  394 #> [17935,]  363  389  394 #> [17936,]  363  389  394 #> [17937,]  362  388  394 #> [17938,]  363  389  394 #> [17939,]  363  389  394 #> [17940,]  362  388  394 #> [17941,]  363  389  394 #> [17942,]  363  389  394 #> [17943,]  363  389  394 #> [17944,]  363  389  394 #> [17945,]  363  389  394 #> [17946,]  363  389  394 #> [17947,]  362  388  394 #> [17948,]  363  389  394 #> [17949,]  363  389  394 #> [17950,]  363  389  394 #> [17951,]  363  389  394 #> [17952,]  362  388  394 #> [17953,]  363  389  394 #> [17954,]  363  389  394 #> [17955,]  363  389  394 #> [17956,]  363  389  394 #> [17957,]  362  388  394 #> [17958,]  363  389  394 #> [17959,]  362  388  394 #> [17960,]  362  388  394 #> [17961,]  363  389  394 #> [17962,]  363  389  394 #> [17963,]  363  389  394 #> [17964,]  363  389  394 #> [17965,]  363  389  394 #> [17966,]  363  389  394 #> [17967,]  363  389  394 #> [17968,]  362  388  394 #> [17969,]  363  389  394 #> [17970,]  363  389  394 #> [17971,]  363  389  394 #> [17972,]  363  389  394 #> [17973,]  363  389  394 #> [17974,]  363  389  394 #> [17975,]  363  389  394 #> [17976,]  363  389  394 #> [17977,]  363  389  394 #> [17978,]  363  389  394 #> [17979,]  363  389  394 #> [17980,]  362  388  394 #> [17981,]  363  389  394 #> [17982,]  363  389  394 #> [17983,]  363  389  394 #> [17984,]  363  389  394 #> [17985,]  363  389  394 #> [17986,]  362  388  394 #> [17987,]  363  389  394 #> [17988,]  363  389  394 #> [17989,]  363  389  394 #> [17990,]  363  389  394 #> [17991,]  363  389  394 #> [17992,]  363  389  394 #> [17993,]  363  389  394 #> [17994,]  363  389  394 #> [17995,]  363  389  394 #> [17996,]  362  388  394 #> [17997,]  362  388  394 #> [17998,]  362  388  394 #> [17999,]  363  389  394 #> [18000,]  363  389  394 #> [18001,]  364  390  395 #> [18002,]  364  390  395 #> [18003,]  364  390  395 #> [18004,]  364  390  395 #> [18005,]  364  390  395 #> [18006,]  364  390  395 #> [18007,]  364  390  395 #> [18008,]  364  390  395 #> [18009,]  364  390  395 #> [18010,]  364  390  395 #> [18011,]  364  390  395 #> [18012,]  364  390  395 #> [18013,]  365  391  396 #> [18014,]  364  390  395 #> [18015,]  365  391  396 #> [18016,]  364  390  395 #> [18017,]  364  390  395 #> [18018,]  364  390  395 #> [18019,]  365  391  396 #> [18020,]  365  391  396 #> [18021,]  364  390  395 #> [18022,]  365  391  396 #> [18023,]  364  390  395 #> [18024,]  364  390  395 #> [18025,]  364  390  395 #> [18026,]  364  390  395 #> [18027,]  365  391  396 #> [18028,]  364  390  395 #> [18029,]  365  391  396 #> [18030,]  364  390  395 #> [18031,]  364  390  395 #> [18032,]  364  390  395 #> [18033,]  364  390  395 #> [18034,]  364  390  395 #> [18035,]  364  390  395 #> [18036,]  365  391  396 #> [18037,]  365  391  396 #> [18038,]  365  391  396 #> [18039,]  364  390  395 #> [18040,]  364  390  395 #> [18041,]  365  391  396 #> [18042,]  364  390  395 #> [18043,]  364  390  395 #> [18044,]  364  390  395 #> [18045,]  364  390  395 #> [18046,]  365  391  396 #> [18047,]  364  390  395 #> [18048,]  364  390  395 #> [18049,]  364  390  395 #> [18050,]  365  391  396 #> [18051,]  365  391  396 #> [18052,]  364  390  395 #> [18053,]  365  391  396 #> [18054,]  364  390  395 #> [18055,]  365  391  396 #> [18056,]  364  390  395 #> [18057,]  364  390  395 #> [18058,]  365  391  396 #> [18059,]  364  390  395 #> [18060,]  365  391  396 #> [18061,]  364  390  395 #> [18062,]  364  390  395 #> [18063,]  364  390  395 #> [18064,]  365  391  396 #> [18065,]  364  390  395 #> [18066,]  365  391  396 #> [18067,]  364  390  395 #> [18068,]  364  390  395 #> [18069,]  365  391  396 #> [18070,]  364  390  395 #> [18071,]  365  391  396 #> [18072,]  364  390  395 #> [18073,]  364  390  395 #> [18074,]  364  390  395 #> [18075,]  364  390  395 #> [18076,]  364  390  395 #> [18077,]  365  391  396 #> [18078,]  364  390  395 #> [18079,]  364  390  395 #> [18080,]  365  391  396 #> [18081,]  365  391  396 #> [18082,]  364  390  395 #> [18083,]  365  391  396 #> [18084,]  364  390  395 #> [18085,]  364  390  395 #> [18086,]  364  390  395 #> [18087,]  365  391  396 #> [18088,]  364  390  395 #> [18089,]  364  390  395 #> [18090,]  365  391  396 #> [18091,]  364  390  395 #> [18092,]  364  390  395 #> [18093,]  364  390  395 #> [18094,]  364  390  395 #> [18095,]  364  390  395 #> [18096,]  365  391  396 #> [18097,]  365  391  396 #> [18098,]  364  390  395 #> [18099,]  364  390  395 #> [18100,]  365  391  396 #> [18101,]  366  392  397 #> [18102,]  366  392  397 #> [18103,]  366  392  397 #> [18104,]  367  393  400 #> [18105,]  366  392  397 #> [18106,]  366  392  398 #> [18107,]  366  392  397 #> [18108,]  366  392  397 #> [18109,]  366  392  398 #> [18110,]  367  393  400 #> [18111,]  366  392  398 #> [18112,]  366  392  398 #> [18113,]  366  392  397 #> [18114,]  366  392  398 #> [18115,]  367  393  400 #> [18116,]  367  393  399 #> [18117,]  366  392  397 #> [18118,]  367  393  399 #> [18119,]  366  392  398 #> [18120,]  366  392  397 #> [18121,]  367  393  399 #> [18122,]  366  392  397 #> [18123,]  367  393  399 #> [18124,]  366  392  397 #> [18125,]  367  393  400 #> [18126,]  366  392  398 #> [18127,]  367  393  400 #> [18128,]  366  392  397 #> [18129,]  366  392  397 #> [18130,]  366  392  398 #> [18131,]  366  392  398 #> [18132,]  366  392  398 #> [18133,]  366  392  398 #> [18134,]  366  392  397 #> [18135,]  366  392  397 #> [18136,]  366  392  398 #> [18137,]  366  392  397 #> [18138,]  366  392  398 #> [18139,]  367  393  399 #> [18140,]  366  392  397 #> [18141,]  366  392  398 #> [18142,]  366  392  398 #> [18143,]  367  393  400 #> [18144,]  366  392  397 #> [18145,]  367  393  400 #> [18146,]  366  392  397 #> [18147,]  366  392  397 #> [18148,]  366  392  398 #> [18149,]  366  392  397 #> [18150,]  366  392  397 #> [18151,]  366  392  397 #> [18152,]  366  392  398 #> [18153,]  367  393  400 #> [18154,]  366  392  397 #> [18155,]  366  392  397 #> [18156,]  366  392  397 #> [18157,]  366  392  397 #> [18158,]  366  392  398 #> [18159,]  366  392  397 #> [18160,]  366  392  398 #> [18161,]  367  393  400 #> [18162,]  366  392  398 #> [18163,]  366  392  397 #> [18164,]  366  392  398 #> [18165,]  366  392  397 #> [18166,]  366  392  397 #> [18167,]  366  392  398 #> [18168,]  366  392  398 #> [18169,]  366  392  398 #> [18170,]  366  392  397 #> [18171,]  366  392  397 #> [18172,]  367  393  400 #> [18173,]  367  393  400 #> [18174,]  367  393  400 #> [18175,]  367  393  400 #> [18176,]  367  393  400 #> [18177,]  367  393  399 #> [18178,]  366  392  397 #> [18179,]  366  392  397 #> [18180,]  366  392  397 #> [18181,]  366  392  397 #> [18182,]  366  392  398 #> [18183,]  366  392  397 #> [18184,]  367  393  400 #> [18185,]  366  392  398 #> [18186,]  366  392  397 #> [18187,]  366  392  397 #> [18188,]  366  392  397 #> [18189,]  366  392  397 #> [18190,]  366  392  397 #> [18191,]  366  392  397 #> [18192,]  366  392  398 #> [18193,]  366  392  398 #> [18194,]  367  393  400 #> [18195,]  367  393  399 #> [18196,]  366  392  398 #> [18197,]  366  392  398 #> [18198,]  366  392  397 #> [18199,]  366  392  398 #> [18200,]  367  393  399 #> [18201,]  369  395  402 #> [18202,]  368  394  401 #> [18203,]  369  395  402 #> [18204,]  369  395  402 #> [18205,]  369  395  402 #> [18206,]  368  394  401 #> [18207,]  369  395  402 #> [18208,]  369  395  402 #> [18209,]  369  395  402 #> [18210,]  369  395  402 #> [18211,]  368  394  401 #> [18212,]  368  394  401 #> [18213,]  369  395  402 #> [18214,]  369  395  402 #> [18215,]  368  394  401 #> [18216,]  369  395  402 #> [18217,]  368  394  401 #> [18218,]  369  395  402 #> [18219,]  369  395  402 #> [18220,]  369  395  402 #> [18221,]  369  395  402 #> [18222,]  369  395  402 #> [18223,]  368  394  401 #> [18224,]  369  395  402 #> [18225,]  369  395  402 #> [18226,]  369  395  402 #> [18227,]  369  395  402 #> [18228,]  369  395  402 #> [18229,]  368  394  401 #> [18230,]  368  394  401 #> [18231,]  368  394  401 #> [18232,]  369  395  402 #> [18233,]  369  395  402 #> [18234,]  368  394  401 #> [18235,]  368  394  401 #> [18236,]  369  395  402 #> [18237,]  368  394  401 #> [18238,]  369  395  402 #> [18239,]  369  395  402 #> [18240,]  369  395  402 #> [18241,]  369  395  402 #> [18242,]  368  394  401 #> [18243,]  368  394  401 #> [18244,]  368  394  401 #> [18245,]  369  395  402 #> [18246,]  369  395  402 #> [18247,]  368  394  401 #> [18248,]  368  394  401 #> [18249,]  369  395  402 #> [18250,]  369  395  402 #> [18251,]  369  395  402 #> [18252,]  369  395  402 #> [18253,]  369  395  402 #> [18254,]  369  395  402 #> [18255,]  369  395  402 #> [18256,]  368  394  401 #> [18257,]  369  395  402 #> [18258,]  369  395  402 #> [18259,]  369  395  402 #> [18260,]  368  394  401 #> [18261,]  368  394  401 #> [18262,]  369  395  402 #> [18263,]  368  394  401 #> [18264,]  368  394  401 #> [18265,]  368  394  401 #> [18266,]  368  394  401 #> [18267,]  369  395  402 #> [18268,]  369  395  402 #> [18269,]  369  395  402 #> [18270,]  368  394  401 #> [18271,]  369  395  402 #> [18272,]  369  395  402 #> [18273,]  369  395  402 #> [18274,]  369  395  402 #> [18275,]  368  394  401 #> [18276,]  369  395  402 #> [18277,]  369  395  402 #> [18278,]  368  394  401 #> [18279,]  368  394  401 #> [18280,]  369  395  402 #> [18281,]  368  394  401 #> [18282,]  369  395  402 #> [18283,]  369  395  402 #> [18284,]  369  395  402 #> [18285,]  369  395  402 #> [18286,]  369  395  402 #> [18287,]  369  395  402 #> [18288,]  369  395  402 #> [18289,]  369  395  402 #> [18290,]  369  395  402 #> [18291,]  369  395  402 #> [18292,]  368  394  401 #> [18293,]  369  395  402 #> [18294,]  368  394  401 #> [18295,]  368  394  401 #> [18296,]  369  395  402 #> [18297,]  369  395  402 #> [18298,]  369  395  402 #> [18299,]  369  395  402 #> [18300,]  368  394  401 #> [18301,]  370  396  403 #> [18302,]  370  396  403 #> [18303,]  370  396  403 #> [18304,]  370  396  403 #> [18305,]  370  396  403 #> [18306,]  370  396  403 #> [18307,]  370  396  403 #> [18308,]  371  397  404 #> [18309,]  371  397  404 #> [18310,]  370  396  403 #> [18311,]  370  396  403 #> [18312,]  370  396  403 #> [18313,]  370  396  403 #> [18314,]  370  396  403 #> [18315,]  370  396  403 #> [18316,]  370  396  403 #> [18317,]  370  396  403 #> [18318,]  370  396  403 #> [18319,]  370  396  403 #> [18320,]  370  396  403 #> [18321,]  370  396  403 #> [18322,]  370  396  403 #> [18323,]  370  396  403 #> [18324,]  370  396  403 #> [18325,]  370  396  403 #> [18326,]  371  397  404 #> [18327,]  370  396  403 #> [18328,]  370  396  403 #> [18329,]  370  396  403 #> [18330,]  370  396  403 #> [18331,]  370  396  403 #> [18332,]  370  396  403 #> [18333,]  370  396  403 #> [18334,]  370  396  403 #> [18335,]  370  396  403 #> [18336,]  370  396  403 #> [18337,]  370  396  403 #> [18338,]  370  396  403 #> [18339,]  370  396  403 #> [18340,]  370  396  403 #> [18341,]  370  396  403 #> [18342,]  370  396  403 #> [18343,]  370  396  403 #> [18344,]  370  396  403 #> [18345,]  370  396  403 #> [18346,]  370  396  403 #> [18347,]  370  396  403 #> [18348,]  370  396  403 #> [18349,]  370  396  403 #> [18350,]  370  396  403 #> [18351,]  370  396  403 #> [18352,]  370  396  403 #> [18353,]  370  396  403 #> [18354,]  370  396  403 #> [18355,]  370  396  403 #> [18356,]  371  397  404 #> [18357,]  370  396  403 #> [18358,]  370  396  403 #> [18359,]  370  396  403 #> [18360,]  370  396  403 #> [18361,]  371  397  404 #> [18362,]  370  396  403 #> [18363,]  370  396  403 #> [18364,]  370  396  403 #> [18365,]  370  396  403 #> [18366,]  370  396  403 #> [18367,]  370  396  403 #> [18368,]  370  396  403 #> [18369,]  370  396  403 #> [18370,]  370  396  403 #> [18371,]  370  396  403 #> [18372,]  370  396  403 #> [18373,]  370  396  403 #> [18374,]  370  396  403 #> [18375,]  370  396  403 #> [18376,]  371  397  404 #> [18377,]  370  396  403 #> [18378,]  370  396  403 #> [18379,]  370  396  403 #> [18380,]  370  396  403 #> [18381,]  370  396  403 #> [18382,]  370  396  403 #> [18383,]  370  396  403 #> [18384,]  370  396  403 #> [18385,]  370  396  403 #> [18386,]  370  396  403 #> [18387,]  370  396  403 #> [18388,]  370  396  403 #> [18389,]  370  396  403 #> [18390,]  370  396  403 #> [18391,]  370  396  403 #> [18392,]  370  396  403 #> [18393,]  370  396  403 #> [18394,]  370  396  403 #> [18395,]  370  396  403 #> [18396,]  370  396  403 #> [18397,]  370  396  403 #> [18398,]  370  396  403 #> [18399,]  370  396  403 #> [18400,]  370  396  403 #> [18401,]  372  398  405 #> [18402,]  372  398  405 #> [18403,]  372  398  405 #> [18404,]  372  398  405 #> [18405,]  372  398  405 #> [18406,]  372  398  405 #> [18407,]  372  398  405 #> [18408,]  372  398  405 #> [18409,]  372  398  405 #> [18410,]  372  398  405 #> [18411,]  372  398  405 #> [18412,]  372  398  405 #> [18413,]  372  398  405 #> [18414,]  372  398  405 #> [18415,]  373  399  406 #> [18416,]  372  398  405 #> [18417,]  372  398  405 #> [18418,]  372  398  405 #> [18419,]  373  399  406 #> [18420,]  373  399  406 #> [18421,]  372  398  405 #> [18422,]  373  399  406 #> [18423,]  372  398  405 #> [18424,]  372  398  405 #> [18425,]  372  398  405 #> [18426,]  372  398  405 #> [18427,]  373  399  406 #> [18428,]  372  398  405 #> [18429,]  373  399  406 #> [18430,]  372  398  405 #> [18431,]  372  398  405 #> [18432,]  372  398  405 #> [18433,]  372  398  405 #> [18434,]  372  398  405 #> [18435,]  372  398  405 #> [18436,]  373  399  406 #> [18437,]  373  399  406 #> [18438,]  373  399  406 #> [18439,]  372  398  405 #> [18440,]  372  398  405 #> [18441,]  372  398  405 #> [18442,]  372  398  405 #> [18443,]  372  398  405 #> [18444,]  372  398  405 #> [18445,]  372  398  405 #> [18446,]  373  399  406 #> [18447,]  372  398  405 #> [18448,]  372  398  405 #> [18449,]  372  398  405 #> [18450,]  372  398  405 #> [18451,]  372  398  405 #> [18452,]  372  398  405 #> [18453,]  373  399  406 #> [18454,]  372  398  405 #> [18455,]  373  399  406 #> [18456,]  372  398  405 #> [18457,]  372  398  405 #> [18458,]  373  399  406 #> [18459,]  372  398  405 #> [18460,]  372  398  405 #> [18461,]  372  398  405 #> [18462,]  372  398  405 #> [18463,]  372  398  405 #> [18464,]  373  399  406 #> [18465,]  372  398  405 #> [18466,]  373  399  406 #> [18467,]  372  398  405 #> [18468,]  372  398  405 #> [18469,]  373  399  406 #> [18470,]  372  398  405 #> [18471,]  372  398  405 #> [18472,]  372  398  405 #> [18473,]  372  398  405 #> [18474,]  372  398  405 #> [18475,]  372  398  405 #> [18476,]  372  398  405 #> [18477,]  373  399  406 #> [18478,]  372  398  405 #> [18479,]  372  398  405 #> [18480,]  373  399  406 #> [18481,]  373  399  406 #> [18482,]  372  398  405 #> [18483,]  373  399  406 #> [18484,]  372  398  405 #> [18485,]  372  398  405 #> [18486,]  372  398  405 #> [18487,]  373  399  406 #> [18488,]  372  398  405 #> [18489,]  372  398  405 #> [18490,]  373  399  406 #> [18491,]  372  398  405 #> [18492,]  372  398  405 #> [18493,]  372  398  405 #> [18494,]  372  398  405 #> [18495,]  372  398  405 #> [18496,]  372  398  405 #> [18497,]  373  399  406 #> [18498,]  372  398  405 #> [18499,]  372  398  405 #> [18500,]  373  399  406 #> [18501,]  374  400  407 #> [18502,]  374  400  407 #> [18503,]  375  401  408 #> [18504,]  376  401  407 #> [18505,]  374  400  407 #> [18506,]  374  400  408 #> [18507,]  376  401  407 #> [18508,]  376  401  407 #> [18509,]  374  400  407 #> [18510,]  374  400  407 #> [18511,]  374  400  407 #> [18512,]  375  401  407 #> [18513,]  374  400  407 #> [18514,]  374  400  407 #> [18515,]  374  400  407 #> [18516,]  374  400  407 #> [18517,]  374  400  407 #> [18518,]  374  400  407 #> [18519,]  374  400  407 #> [18520,]  374  400  407 #> [18521,]  374  400  407 #> [18522,]  374  400  407 #> [18523,]  374  400  407 #> [18524,]  374  400  407 #> [18525,]  376  401  407 #> [18526,]  374  400  407 #> [18527,]  374  400  407 #> [18528,]  374  400  407 #> [18529,]  374  400  407 #> [18530,]  374  400  407 #> [18531,]  375  401  407 #> [18532,]  374  400  407 #> [18533,]  374  400  407 #> [18534,]  374  400  408 #> [18535,]  374  400  407 #> [18536,]  374  400  407 #> [18537,]  374  400  407 #> [18538,]  374  400  407 #> [18539,]  374  400  407 #> [18540,]  374  400  407 #> [18541,]  374  400  407 #> [18542,]  374  400  407 #> [18543,]  374  400  407 #> [18544,]  374  400  407 #> [18545,]  374  400  407 #> [18546,]  374  400  407 #> [18547,]  374  400  407 #> [18548,]  374  400  407 #> [18549,]  374  400  407 #> [18550,]  374  400  407 #> [18551,]  374  400  407 #> [18552,]  375  401  407 #> [18553,]  374  400  407 #> [18554,]  374  400  407 #> [18555,]  374  400  407 #> [18556,]  374  400  407 #> [18557,]  375  401  407 #> [18558,]  374  400  407 #> [18559,]  375  401  407 #> [18560,]  375  401  408 #> [18561,]  374  400  407 #> [18562,]  374  400  407 #> [18563,]  374  400  407 #> [18564,]  374  400  407 #> [18565,]  374  400  408 #> [18566,]  374  400  407 #> [18567,]  374  400  407 #> [18568,]  374  400  407 #> [18569,]  374  400  407 #> [18570,]  374  400  408 #> [18571,]  374  400  407 #> [18572,]  374  400  407 #> [18573,]  374  400  408 #> [18574,]  374  400  407 #> [18575,]  374  400  407 #> [18576,]  374  400  407 #> [18577,]  374  400  407 #> [18578,]  374  400  407 #> [18579,]  374  400  407 #> [18580,]  374  400  407 #> [18581,]  374  400  407 #> [18582,]  374  400  407 #> [18583,]  374  400  407 #> [18584,]  374  400  407 #> [18585,]  374  400  407 #> [18586,]  374  400  407 #> [18587,]  374  400  407 #> [18588,]  374  400  407 #> [18589,]  374  400  407 #> [18590,]  374  400  407 #> [18591,]  374  400  407 #> [18592,]  374  400  407 #> [18593,]  374  400  408 #> [18594,]  374  400  407 #> [18595,]  374  400  407 #> [18596,]  376  401  407 #> [18597,]  375  401  407 #> [18598,]  374  400  407 #> [18599,]  374  400  407 #> [18600,]  374  400  407 #> [18601,]  378  403  410 #> [18602,]  377  402  409 #> [18603,]  377  402  409 #> [18604,]  377  402  409 #> [18605,]  377  402  409 #> [18606,]  377  402  409 #> [18607,]  377  402  409 #> [18608,]  377  402  409 #> [18609,]  377  402  409 #> [18610,]  377  402  409 #> [18611,]  377  402  409 #> [18612,]  377  402  409 #> [18613,]  377  402  409 #> [18614,]  378  403  410 #> [18615,]  377  402  409 #> [18616,]  378  403  410 #> [18617,]  377  402  409 #> [18618,]  377  402  409 #> [18619,]  377  402  409 #> [18620,]  377  402  409 #> [18621,]  377  402  409 #> [18622,]  377  402  409 #> [18623,]  377  402  409 #> [18624,]  377  402  409 #> [18625,]  377  402  409 #> [18626,]  377  402  409 #> [18627,]  377  402  409 #> [18628,]  377  402  409 #> [18629,]  377  402  409 #> [18630,]  377  402  409 #> [18631,]  377  402  409 #> [18632,]  377  402  409 #> [18633,]  377  402  409 #> [18634,]  377  402  409 #> [18635,]  377  402  409 #> [18636,]  377  402  409 #> [18637,]  377  402  409 #> [18638,]  377  402  409 #> [18639,]  377  402  409 #> [18640,]  377  402  409 #> [18641,]  378  403  410 #> [18642,]  377  402  409 #> [18643,]  377  402  409 #> [18644,]  377  402  409 #> [18645,]  377  402  409 #> [18646,]  377  402  409 #> [18647,]  377  402  409 #> [18648,]  377  402  409 #> [18649,]  377  402  409 #> [18650,]  377  402  409 #> [18651,]  377  402  409 #> [18652,]  377  402  409 #> [18653,]  377  402  409 #> [18654,]  377  402  409 #> [18655,]  377  402  409 #> [18656,]  377  402  409 #> [18657,]  377  402  409 #> [18658,]  377  402  409 #> [18659,]  377  402  409 #> [18660,]  377  402  409 #> [18661,]  377  402  409 #> [18662,]  377  402  409 #> [18663,]  377  402  409 #> [18664,]  377  402  409 #> [18665,]  377  402  409 #> [18666,]  377  402  409 #> [18667,]  377  402  409 #> [18668,]  377  402  409 #> [18669,]  377  402  409 #> [18670,]  377  402  409 #> [18671,]  377  402  409 #> [18672,]  377  402  409 #> [18673,]  377  402  409 #> [18674,]  377  402  409 #> [18675,]  377  402  409 #> [18676,]  377  402  409 #> [18677,]  377  402  409 #> [18678,]  377  402  409 #> [18679,]  377  402  409 #> [18680,]  377  402  409 #> [18681,]  377  402  409 #> [18682,]  377  402  409 #> [18683,]  377  402  409 #> [18684,]  377  402  409 #> [18685,]  377  402  409 #> [18686,]  377  402  409 #> [18687,]  377  402  409 #> [18688,]  377  402  409 #> [18689,]  377  402  409 #> [18690,]  377  402  409 #> [18691,]  377  402  409 #> [18692,]  377  402  409 #> [18693,]  377  402  409 #> [18694,]  377  402  409 #> [18695,]  377  402  409 #> [18696,]  377  402  409 #> [18697,]  377  402  409 #> [18698,]  377  402  409 #> [18699,]  378  403  410 #> [18700,]  377  402  409 #> [18701,]  380  405  412 #> [18702,]  380  405  412 #> [18703,]  379  404  412 #> [18704,]  380  405  411 #> [18705,]  380  405  412 #> [18706,]  379  404  412 #> [18707,]  380  405  412 #> [18708,]  380  405  411 #> [18709,]  380  405  411 #> [18710,]  380  405  411 #> [18711,]  380  405  412 #> [18712,]  380  405  412 #> [18713,]  380  405  412 #> [18714,]  380  405  412 #> [18715,]  380  405  412 #> [18716,]  380  405  412 #> [18717,]  380  405  412 #> [18718,]  380  405  412 #> [18719,]  379  404  412 #> [18720,]  380  405  412 #> [18721,]  380  405  412 #> [18722,]  380  405  412 #> [18723,]  380  405  412 #> [18724,]  380  405  412 #> [18725,]  380  405  412 #> [18726,]  380  405  412 #> [18727,]  380  405  412 #> [18728,]  380  405  412 #> [18729,]  380  405  412 #> [18730,]  380  405  412 #> [18731,]  380  405  412 #> [18732,]  380  405  412 #> [18733,]  380  405  412 #> [18734,]  379  404  412 #> [18735,]  380  405  412 #> [18736,]  380  405  412 #> [18737,]  380  405  412 #> [18738,]  379  404  412 #> [18739,]  380  405  412 #> [18740,]  380  405  412 #> [18741,]  380  405  412 #> [18742,]  380  405  412 #> [18743,]  380  405  412 #> [18744,]  380  405  412 #> [18745,]  379  404  412 #> [18746,]  380  405  412 #> [18747,]  380  405  412 #> [18748,]  380  405  412 #> [18749,]  379  404  412 #> [18750,]  380  405  412 #> [18751,]  380  405  411 #> [18752,]  379  404  412 #> [18753,]  380  405  412 #> [18754,]  380  405  412 #> [18755,]  380  405  412 #> [18756,]  380  405  412 #> [18757,]  380  405  412 #> [18758,]  380  405  412 #> [18759,]  380  405  412 #> [18760,]  380  405  412 #> [18761,]  380  405  412 #> [18762,]  380  405  412 #> [18763,]  380  405  412 #> [18764,]  380  405  412 #> [18765,]  380  405  412 #> [18766,]  380  405  412 #> [18767,]  380  405  412 #> [18768,]  379  404  412 #> [18769,]  380  405  412 #> [18770,]  380  405  412 #> [18771,]  380  405  412 #> [18772,]  379  404  412 #> [18773,]  380  405  412 #> [18774,]  380  405  412 #> [18775,]  380  405  412 #> [18776,]  380  405  412 #> [18777,]  380  405  412 #> [18778,]  380  405  412 #> [18779,]  380  405  412 #> [18780,]  380  405  412 #> [18781,]  380  405  412 #> [18782,]  380  405  412 #> [18783,]  380  405  412 #> [18784,]  380  405  412 #> [18785,]  380  405  411 #> [18786,]  380  405  412 #> [18787,]  380  405  412 #> [18788,]  380  405  412 #> [18789,]  380  405  412 #> [18790,]  380  405  412 #> [18791,]  380  405  411 #> [18792,]  380  405  412 #> [18793,]  380  405  412 #> [18794,]  380  405  412 #> [18795,]  380  405  411 #> [18796,]  379  404  412 #> [18797,]  380  405  412 #> [18798,]  380  405  412 #> [18799,]  380  405  412 #> [18800,]  380  405  412 #> [18801,]  382  406  413 #> [18802,]  382  406  413 #> [18803,]  382  406  414 #> [18804,]  382  406  414 #> [18805,]  382  406  414 #> [18806,]  382  406  413 #> [18807,]  382  406  414 #> [18808,]  382  406  414 #> [18809,]  382  406  414 #> [18810,]  382  406  414 #> [18811,]  382  406  414 #> [18812,]  382  406  414 #> [18813,]  382  406  413 #> [18814,]  382  406  413 #> [18815,]  381  406  413 #> [18816,]  382  406  413 #> [18817,]  381  406  413 #> [18818,]  382  406  414 #> [18819,]  382  406  414 #> [18820,]  382  406  414 #> [18821,]  382  406  413 #> [18822,]  382  406  414 #> [18823,]  382  406  414 #> [18824,]  382  406  414 #> [18825,]  382  406  414 #> [18826,]  382  406  414 #> [18827,]  382  406  414 #> [18828,]  382  406  414 #> [18829,]  382  406  413 #> [18830,]  382  406  414 #> [18831,]  381  406  414 #> [18832,]  382  406  414 #> [18833,]  382  406  413 #> [18834,]  381  406  414 #> [18835,]  382  406  413 #> [18836,]  382  406  414 #> [18837,]  381  406  414 #> [18838,]  382  406  414 #> [18839,]  382  406  414 #> [18840,]  382  406  414 #> [18841,]  382  406  413 #> [18842,]  381  406  414 #> [18843,]  381  406  414 #> [18844,]  381  406  413 #> [18845,]  382  406  414 #> [18846,]  382  406  414 #> [18847,]  382  406  414 #> [18848,]  381  406  414 #> [18849,]  382  406  414 #> [18850,]  382  406  413 #> [18851,]  382  406  414 #> [18852,]  382  406  414 #> [18853,]  382  406  414 #> [18854,]  382  406  414 #> [18855,]  382  406  414 #> [18856,]  382  406  414 #> [18857,]  382  406  414 #> [18858,]  382  406  414 #> [18859,]  382  406  413 #> [18860,]  382  406  414 #> [18861,]  382  406  413 #> [18862,]  382  406  414 #> [18863,]  381  406  414 #> [18864,]  382  406  414 #> [18865,]  382  406  414 #> [18866,]  382  406  414 #> [18867,]  382  406  414 #> [18868,]  382  406  413 #> [18869,]  382  406  414 #> [18870,]  381  406  413 #> [18871,]  382  406  414 #> [18872,]  382  406  414 #> [18873,]  382  406  413 #> [18874,]  382  406  414 #> [18875,]  381  406  414 #> [18876,]  382  406  413 #> [18877,]  382  406  413 #> [18878,]  381  406  414 #> [18879,]  381  406  413 #> [18880,]  382  406  414 #> [18881,]  382  406  413 #> [18882,]  382  406  414 #> [18883,]  382  406  413 #> [18884,]  382  406  414 #> [18885,]  382  406  414 #> [18886,]  382  406  413 #> [18887,]  382  406  414 #> [18888,]  382  406  414 #> [18889,]  382  406  414 #> [18890,]  382  406  414 #> [18891,]  382  406  414 #> [18892,]  382  406  414 #> [18893,]  382  406  413 #> [18894,]  381  406  414 #> [18895,]  381  406  414 #> [18896,]  382  406  413 #> [18897,]  382  406  414 #> [18898,]  382  406  414 #> [18899,]  382  406  413 #> [18900,]  381  406  414 #> [18901,]  384  408  415 #> [18902,]  383  407  415 #> [18903,]  383  407  415 #> [18904,]  383  407  415 #> [18905,]  384  408  415 #> [18906,]  383  407  415 #> [18907,]  383  407  415 #> [18908,]  383  407  415 #> [18909,]  383  407  415 #> [18910,]  384  408  415 #> [18911,]  384  408  415 #> [18912,]  384  408  415 #> [18913,]  384  408  415 #> [18914,]  384  408  415 #> [18915,]  384  408  415 #> [18916,]  384  408  415 #> [18917,]  384  408  415 #> [18918,]  384  408  415 #> [18919,]  384  408  415 #> [18920,]  383  407  415 #> [18921,]  383  407  415 #> [18922,]  384  408  415 #> [18923,]  383  407  415 #> [18924,]  384  408  415 #> [18925,]  383  407  415 #> [18926,]  384  408  415 #> [18927,]  384  408  415 #> [18928,]  384  408  415 #> [18929,]  383  407  415 #> [18930,]  383  407  415 #> [18931,]  384  408  415 #> [18932,]  384  408  415 #> [18933,]  384  408  415 #> [18934,]  383  407  415 #> [18935,]  383  407  415 #> [18936,]  383  407  415 #> [18937,]  383  407  415 #> [18938,]  384  408  415 #> [18939,]  384  408  415 #> [18940,]  383  407  415 #> [18941,]  383  407  415 #> [18942,]  383  407  415 #> [18943,]  384  408  415 #> [18944,]  383  407  415 #> [18945,]  383  407  415 #> [18946,]  384  408  415 #> [18947,]  384  408  415 #> [18948,]  384  408  415 #> [18949,]  383  407  415 #> [18950,]  383  407  415 #> [18951,]  384  408  415 #> [18952,]  384  408  415 #> [18953,]  383  407  415 #> [18954,]  383  407  415 #> [18955,]  383  407  415 #> [18956,]  383  407  415 #> [18957,]  383  407  415 #> [18958,]  384  408  415 #> [18959,]  384  408  415 #> [18960,]  383  407  415 #> [18961,]  384  408  415 #> [18962,]  383  407  415 #> [18963,]  383  407  415 #> [18964,]  383  407  415 #> [18965,]  383  407  415 #> [18966,]  384  408  415 #> [18967,]  383  407  415 #> [18968,]  384  408  415 #> [18969,]  383  407  415 #> [18970,]  384  408  415 #> [18971,]  384  408  415 #> [18972,]  383  407  415 #> [18973,]  383  407  415 #> [18974,]  383  407  415 #> [18975,]  384  408  415 #> [18976,]  383  407  415 #> [18977,]  384  408  415 #> [18978,]  383  407  415 #> [18979,]  384  408  415 #> [18980,]  383  407  415 #> [18981,]  383  407  415 #> [18982,]  383  407  415 #> [18983,]  384  408  415 #> [18984,]  383  407  415 #> [18985,]  383  407  415 #> [18986,]  383  407  415 #> [18987,]  384  408  415 #> [18988,]  383  407  415 #> [18989,]  383  407  415 #> [18990,]  384  408  415 #> [18991,]  384  408  415 #> [18992,]  384  408  415 #> [18993,]  383  407  415 #> [18994,]  383  407  415 #> [18995,]  384  408  415 #> [18996,]  384  408  415 #> [18997,]  383  407  415 #> [18998,]  383  407  415 #> [18999,]  383  407  415 #> [19000,]  384  408  415 #> [19001,]  385  409  416 #> [19002,]  386  410  417 #> [19003,]  385  409  416 #> [19004,]  385  409  416 #> [19005,]  385  409  416 #> [19006,]  385  409  416 #> [19007,]  385  409  416 #> [19008,]  385  409  416 #> [19009,]  386  410  417 #> [19010,]  386  410  417 #> [19011,]  385  409  416 #> [19012,]  386  410  417 #> [19013,]  386  410  417 #> [19014,]  385  409  416 #> [19015,]  385  409  416 #> [19016,]  385  409  416 #> [19017,]  386  410  417 #> [19018,]  386  410  417 #> [19019,]  385  409  416 #> [19020,]  385  409  416 #> [19021,]  386  410  417 #> [19022,]  385  409  416 #> [19023,]  385  409  416 #> [19024,]  386  410  417 #> [19025,]  385  409  416 #> [19026,]  385  409  416 #> [19027,]  385  409  416 #> [19028,]  385  409  416 #> [19029,]  386  410  417 #> [19030,]  385  409  416 #> [19031,]  386  410  417 #> [19032,]  386  410  417 #> [19033,]  386  410  417 #> [19034,]  385  409  416 #> [19035,]  385  409  416 #> [19036,]  385  409  416 #> [19037,]  385  409  416 #> [19038,]  385  409  416 #> [19039,]  385  409  416 #> [19040,]  386  410  417 #> [19041,]  385  409  416 #> [19042,]  385  409  416 #> [19043,]  385  409  416 #> [19044,]  385  409  416 #> [19045,]  385  409  416 #> [19046,]  385  409  416 #> [19047,]  385  409  416 #> [19048,]  385  409  416 #> [19049,]  385  409  416 #> [19050,]  385  409  416 #> [19051,]  385  409  416 #> [19052,]  385  409  416 #> [19053,]  386  410  417 #> [19054,]  385  409  416 #> [19055,]  385  409  416 #> [19056,]  385  409  416 #> [19057,]  385  409  416 #> [19058,]  385  409  416 #> [19059,]  385  409  416 #> [19060,]  386  410  417 #> [19061,]  386  410  417 #> [19062,]  385  409  416 #> [19063,]  386  410  417 #> [19064,]  385  409  416 #> [19065,]  385  409  416 #> [19066,]  385  409  416 #> [19067,]  385  409  416 #> [19068,]  385  409  416 #> [19069,]  385  409  416 #> [19070,]  386  410  417 #> [19071,]  385  409  416 #> [19072,]  385  409  416 #> [19073,]  385  409  416 #> [19074,]  385  409  416 #> [19075,]  386  410  417 #> [19076,]  385  409  416 #> [19077,]  385  409  416 #> [19078,]  385  409  416 #> [19079,]  385  409  416 #> [19080,]  386  410  417 #> [19081,]  386  410  417 #> [19082,]  385  409  416 #> [19083,]  386  410  417 #> [19084,]  385  409  416 #> [19085,]  385  409  416 #> [19086,]  386  410  417 #> [19087,]  385  409  416 #> [19088,]  385  409  416 #> [19089,]  385  409  416 #> [19090,]  385  409  416 #> [19091,]  385  409  416 #> [19092,]  385  409  416 #> [19093,]  385  409  416 #> [19094,]  385  409  416 #> [19095,]  385  409  416 #> [19096,]  385  409  416 #> [19097,]  385  409  416 #> [19098,]  385  409  416 #> [19099,]  385  409  416 #> [19100,]  385  409  416 #> [19101,]  388  412  419 #> [19102,]  388  412  419 #> [19103,]  387  411  418 #> [19104,]  388  412  419 #> [19105,]  388  412  419 #> [19106,]  388  412  419 #> [19107,]  387  411  418 #> [19108,]  388  412  419 #> [19109,]  388  412  419 #> [19110,]  388  412  419 #> [19111,]  388  412  419 #> [19112,]  387  411  418 #> [19113,]  388  412  419 #> [19114,]  388  412  419 #> [19115,]  388  412  419 #> [19116,]  388  412  419 #> [19117,]  388  412  419 #> [19118,]  388  412  419 #> [19119,]  388  412  419 #> [19120,]  388  412  419 #> [19121,]  388  412  419 #> [19122,]  388  412  419 #> [19123,]  388  412  419 #> [19124,]  388  412  419 #> [19125,]  388  412  419 #> [19126,]  388  412  419 #> [19127,]  388  412  419 #> [19128,]  388  412  419 #> [19129,]  388  412  419 #> [19130,]  388  412  419 #> [19131,]  387  411  418 #> [19132,]  388  412  419 #> [19133,]  388  412  419 #> [19134,]  388  412  419 #> [19135,]  388  412  419 #> [19136,]  388  412  419 #> [19137,]  388  412  419 #> [19138,]  388  412  419 #> [19139,]  388  412  419 #> [19140,]  388  412  419 #> [19141,]  388  412  419 #> [19142,]  388  412  419 #> [19143,]  388  412  419 #> [19144,]  388  412  419 #> [19145,]  388  412  419 #> [19146,]  388  412  419 #> [19147,]  388  412  419 #> [19148,]  388  412  419 #> [19149,]  388  412  419 #> [19150,]  388  412  419 #> [19151,]  388  412  419 #> [19152,]  387  411  418 #> [19153,]  388  412  419 #> [19154,]  388  412  419 #> [19155,]  388  412  419 #> [19156,]  388  412  419 #> [19157,]  388  412  419 #> [19158,]  388  412  419 #> [19159,]  387  411  418 #> [19160,]  387  411  418 #> [19161,]  388  412  419 #> [19162,]  388  412  419 #> [19163,]  388  412  419 #> [19164,]  388  412  419 #> [19165,]  388  412  419 #> [19166,]  388  412  419 #> [19167,]  388  412  419 #> [19168,]  388  412  419 #> [19169,]  388  412  419 #> [19170,]  388  412  419 #> [19171,]  388  412  419 #> [19172,]  388  412  419 #> [19173,]  388  412  419 #> [19174,]  388  412  419 #> [19175,]  388  412  419 #> [19176,]  388  412  419 #> [19177,]  388  412  419 #> [19178,]  388  412  419 #> [19179,]  388  412  419 #> [19180,]  388  412  419 #> [19181,]  388  412  419 #> [19182,]  388  412  419 #> [19183,]  388  412  419 #> [19184,]  388  412  419 #> [19185,]  388  412  419 #> [19186,]  388  412  419 #> [19187,]  388  412  419 #> [19188,]  388  412  419 #> [19189,]  388  412  419 #> [19190,]  388  412  419 #> [19191,]  388  412  419 #> [19192,]  388  412  419 #> [19193,]  388  412  419 #> [19194,]  388  412  419 #> [19195,]  388  412  419 #> [19196,]  388  412  419 #> [19197,]  387  411  418 #> [19198,]  388  412  419 #> [19199,]  388  412  419 #> [19200,]  388  412  419 #> [19201,]  390  414  422 #> [19202,]  390  414  422 #> [19203,]  389  413  420 #> [19204,]  390  414  421 #> [19205,]  390  414  422 #> [19206,]  390  414  422 #> [19207,]  389  413  420 #> [19208,]  390  414  421 #> [19209,]  390  414  421 #> [19210,]  390  414  422 #> [19211,]  390  414  422 #> [19212,]  390  414  422 #> [19213,]  390  414  422 #> [19214,]  390  414  422 #> [19215,]  390  414  422 #> [19216,]  390  414  422 #> [19217,]  390  414  421 #> [19218,]  390  414  422 #> [19219,]  390  414  422 #> [19220,]  389  413  420 #> [19221,]  390  414  422 #> [19222,]  390  414  422 #> [19223,]  390  414  422 #> [19224,]  390  414  422 #> [19225,]  389  413  420 #> [19226,]  390  414  422 #> [19227,]  390  414  421 #> [19228,]  390  414  422 #> [19229,]  390  414  422 #> [19230,]  390  414  422 #> [19231,]  390  414  422 #> [19232,]  390  414  422 #> [19233,]  390  414  422 #> [19234,]  390  414  422 #> [19235,]  390  414  422 #> [19236,]  390  414  422 #> [19237,]  390  414  422 #> [19238,]  390  414  422 #> [19239,]  389  413  420 #> [19240,]  390  414  422 #> [19241,]  390  414  422 #> [19242,]  390  414  422 #> [19243,]  390  414  422 #> [19244,]  389  413  420 #> [19245,]  390  414  422 #> [19246,]  390  414  422 #> [19247,]  390  414  422 #> [19248,]  390  414  422 #> [19249,]  389  413  420 #> [19250,]  390  414  422 #> [19251,]  390  414  422 #> [19252,]  390  414  421 #> [19253,]  389  413  420 #> [19254,]  390  414  422 #> [19255,]  389  413  420 #> [19256,]  389  413  420 #> [19257,]  390  414  422 #> [19258,]  390  414  421 #> [19259,]  389  413  420 #> [19260,]  390  414  422 #> [19261,]  390  414  422 #> [19262,]  390  414  422 #> [19263,]  390  414  422 #> [19264,]  390  414  422 #> [19265,]  389  413  420 #> [19266,]  389  413  420 #> [19267,]  390  414  422 #> [19268,]  390  414  422 #> [19269,]  390  414  422 #> [19270,]  390  414  422 #> [19271,]  390  414  422 #> [19272,]  390  414  422 #> [19273,]  390  414  422 #> [19274,]  390  414  422 #> [19275,]  390  414  422 #> [19276,]  390  414  422 #> [19277,]  390  414  422 #> [19278,]  390  414  422 #> [19279,]  390  414  422 #> [19280,]  390  414  422 #> [19281,]  390  414  421 #> [19282,]  390  414  421 #> [19283,]  390  414  422 #> [19284,]  390  414  422 #> [19285,]  390  414  422 #> [19286,]  390  414  422 #> [19287,]  390  414  421 #> [19288,]  390  414  422 #> [19289,]  390  414  422 #> [19290,]  389  413  420 #> [19291,]  390  414  422 #> [19292,]  390  414  421 #> [19293,]  390  414  422 #> [19294,]  390  414  422 #> [19295,]  390  414  421 #> [19296,]  390  414  422 #> [19297,]  390  414  422 #> [19298,]  389  413  420 #> [19299,]  390  414  421 #> [19300,]  389  413  420 #> [19301,]  392  416  423 #> [19302,]  392  416  423 #> [19303,]  391  415  424 #> [19304,]  392  416  423 #> [19305,]  392  416  423 #> [19306,]  392  416  423 #> [19307,]  392  416  424 #> [19308,]  392  416  423 #> [19309,]  392  416  423 #> [19310,]  392  416  423 #> [19311,]  391  415  423 #> [19312,]  391  415  423 #> [19313,]  392  416  423 #> [19314,]  391  415  423 #> [19315,]  392  416  423 #> [19316,]  392  416  423 #> [19317,]  392  416  423 #> [19318,]  392  416  423 #> [19319,]  391  415  423 #> [19320,]  391  415  424 #> [19321,]  392  416  423 #> [19322,]  391  415  423 #> [19323,]  392  416  423 #> [19324,]  392  416  423 #> [19325,]  392  416  424 #> [19326,]  391  415  423 #> [19327,]  392  416  423 #> [19328,]  392  416  423 #> [19329,]  391  415  423 #> [19330,]  392  416  423 #> [19331,]  392  416  423 #> [19332,]  391  415  423 #> [19333,]  392  416  423 #> [19334,]  392  416  423 #> [19335,]  392  416  423 #> [19336,]  391  415  423 #> [19337,]  392  416  423 #> [19338,]  392  416  423 #> [19339,]  392  416  425 #> [19340,]  391  415  423 #> [19341,]  391  415  423 #> [19342,]  391  415  423 #> [19343,]  392  416  423 #> [19344,]  392  416  424 #> [19345,]  392  416  423 #> [19346,]  392  416  423 #> [19347,]  392  416  423 #> [19348,]  391  415  423 #> [19349,]  392  416  425 #> [19350,]  392  416  424 #> [19351,]  391  415  423 #> [19352,]  392  416  423 #> [19353,]  392  416  424 #> [19354,]  391  415  423 #> [19355,]  392  416  424 #> [19356,]  392  416  424 #> [19357,]  392  416  423 #> [19358,]  392  416  423 #> [19359,]  392  416  425 #> [19360,]  391  415  423 #> [19361,]  392  416  423 #> [19362,]  391  415  423 #> [19363,]  391  415  423 #> [19364,]  392  416  423 #> [19365,]  392  416  424 #> [19366,]  391  415  425 #> [19367,]  392  416  423 #> [19368,]  391  415  423 #> [19369,]  391  415  423 #> [19370,]  392  416  423 #> [19371,]  392  416  423 #> [19372,]  392  416  423 #> [19373,]  392  416  423 #> [19374,]  392  416  423 #> [19375,]  392  416  423 #> [19376,]  392  416  423 #> [19377,]  392  416  423 #> [19378,]  392  416  423 #> [19379,]  392  416  423 #> [19380,]  391  415  423 #> [19381,]  391  415  423 #> [19382,]  392  416  423 #> [19383,]  391  415  423 #> [19384,]  392  416  423 #> [19385,]  392  416  423 #> [19386,]  392  416  423 #> [19387,]  392  416  423 #> [19388,]  392  416  423 #> [19389,]  391  415  423 #> [19390,]  392  416  425 #> [19391,]  391  415  423 #> [19392,]  392  416  423 #> [19393,]  392  416  423 #> [19394,]  392  416  423 #> [19395,]  392  416  423 #> [19396,]  392  416  423 #> [19397,]  392  416  423 #> [19398,]  392  416  424 #> [19399,]  392  416  423 #> [19400,]  392  416  425 #> [19401,]  393  417  426 #> [19402,]  394  418  427 #> [19403,]  393  417  426 #> [19404,]  393  417  426 #> [19405,]  394  418  427 #> [19406,]  393  417  426 #> [19407,]  394  418  427 #> [19408,]  393  417  426 #> [19409,]  394  418  427 #> [19410,]  394  418  427 #> [19411,]  393  417  426 #> [19412,]  394  418  427 #> [19413,]  394  418  427 #> [19414,]  393  417  426 #> [19415,]  394  418  427 #> [19416,]  393  417  426 #> [19417,]  394  418  427 #> [19418,]  394  418  427 #> [19419,]  393  417  426 #> [19420,]  394  418  427 #> [19421,]  394  418  427 #> [19422,]  394  418  427 #> [19423,]  394  418  427 #> [19424,]  394  418  427 #> [19425,]  394  418  427 #> [19426,]  393  417  426 #> [19427,]  394  418  427 #> [19428,]  393  417  426 #> [19429,]  394  418  427 #> [19430,]  394  418  427 #> [19431,]  394  418  427 #> [19432,]  394  418  427 #> [19433,]  394  418  427 #> [19434,]  393  417  426 #> [19435,]  393  417  426 #> [19436,]  394  418  427 #> [19437,]  393  417  426 #> [19438,]  393  417  426 #> [19439,]  394  418  427 #> [19440,]  394  418  427 #> [19441,]  394  418  427 #> [19442,]  393  417  426 #> [19443,]  394  418  427 #> [19444,]  394  418  427 #> [19445,]  393  417  426 #> [19446,]  394  418  427 #> [19447,]  394  418  427 #> [19448,]  394  418  427 #> [19449,]  393  417  426 #> [19450,]  394  418  427 #> [19451,]  394  418  427 #> [19452,]  393  417  426 #> [19453,]  394  418  427 #> [19454,]  394  418  427 #> [19455,]  393  417  426 #> [19456,]  393  417  426 #> [19457,]  394  418  427 #> [19458,]  394  418  427 #> [19459,]  393  417  426 #> [19460,]  394  418  427 #> [19461,]  394  418  427 #> [19462,]  393  417  426 #> [19463,]  394  418  427 #> [19464,]  393  417  426 #> [19465,]  393  417  426 #> [19466,]  394  418  427 #> [19467,]  394  418  427 #> [19468,]  393  417  426 #> [19469,]  393  417  426 #> [19470,]  394  418  427 #> [19471,]  394  418  427 #> [19472,]  393  417  426 #> [19473,]  393  417  426 #> [19474,]  394  418  427 #> [19475,]  394  418  427 #> [19476,]  394  418  427 #> [19477,]  393  417  426 #> [19478,]  394  418  427 #> [19479,]  393  417  426 #> [19480,]  394  418  427 #> [19481,]  394  418  427 #> [19482,]  394  418  427 #> [19483,]  394  418  427 #> [19484,]  394  418  427 #> [19485,]  394  418  427 #> [19486,]  394  418  427 #> [19487,]  394  418  427 #> [19488,]  394  418  427 #> [19489,]  393  417  426 #> [19490,]  394  418  427 #> [19491,]  393  417  426 #> [19492,]  394  418  427 #> [19493,]  394  418  427 #> [19494,]  393  417  426 #> [19495,]  394  418  427 #> [19496,]  393  417  426 #> [19497,]  393  417  426 #> [19498,]  394  418  427 #> [19499,]  394  418  427 #> [19500,]  393  417  426 #> [19501,]  396  420  429 #> [19502,]  395  419  428 #> [19503,]  395  419  428 #> [19504,]  396  420  429 #> [19505,]  396  420  429 #> [19506,]  395  419  428 #> [19507,]  395  419  428 #> [19508,]  395  419  428 #> [19509,]  395  419  428 #> [19510,]  396  420  429 #> [19511,]  396  420  429 #> [19512,]  396  420  429 #> [19513,]  396  422  429 #> [19514,]  396  420  429 #> [19515,]  396  420  429 #> [19516,]  396  422  429 #> [19517,]  396  420  429 #> [19518,]  396  421  429 #> [19519,]  396  421  429 #> [19520,]  395  419  428 #> [19521,]  395  419  428 #> [19522,]  396  422  429 #> [19523,]  395  419  428 #> [19524,]  396  422  429 #> [19525,]  395  419  428 #> [19526,]  396  420  429 #> [19527,]  396  420  429 #> [19528,]  396  420  429 #> [19529,]  395  419  428 #> [19530,]  395  419  428 #> [19531,]  396  421  429 #> [19532,]  396  420  429 #> [19533,]  396  420  429 #> [19534,]  395  419  428 #> [19535,]  395  419  428 #> [19536,]  395  419  428 #> [19537,]  395  419  428 #> [19538,]  396  420  429 #> [19539,]  396  422  429 #> [19540,]  395  419  428 #> [19541,]  395  419  428 #> [19542,]  395  419  428 #> [19543,]  396  420  429 #> [19544,]  395  419  428 #> [19545,]  395  419  428 #> [19546,]  396  420  429 #> [19547,]  396  421  429 #> [19548,]  396  420  429 #> [19549,]  395  419  428 #> [19550,]  395  419  428 #> [19551,]  396  420  429 #> [19552,]  396  420  429 #> [19553,]  395  419  428 #> [19554,]  395  419  428 #> [19555,]  395  419  428 #> [19556,]  395  419  428 #> [19557,]  395  419  428 #> [19558,]  396  420  429 #> [19559,]  396  422  429 #> [19560,]  395  419  428 #> [19561,]  396  420  429 #> [19562,]  395  419  428 #> [19563,]  396  420  429 #> [19564,]  395  419  428 #> [19565,]  395  419  428 #> [19566,]  396  420  429 #> [19567,]  395  419  428 #> [19568,]  396  420  429 #> [19569,]  396  420  429 #> [19570,]  396  421  429 #> [19571,]  396  420  429 #> [19572,]  395  419  428 #> [19573,]  395  419  428 #> [19574,]  395  419  428 #> [19575,]  396  420  429 #> [19576,]  395  419  428 #> [19577,]  396  421  429 #> [19578,]  396  420  429 #> [19579,]  396  421  429 #> [19580,]  395  419  428 #> [19581,]  395  419  428 #> [19582,]  395  419  428 #> [19583,]  396  421  429 #> [19584,]  395  419  428 #> [19585,]  395  419  428 #> [19586,]  395  419  428 #> [19587,]  396  420  429 #> [19588,]  395  419  428 #> [19589,]  395  419  428 #> [19590,]  396  420  429 #> [19591,]  396  420  429 #> [19592,]  396  420  429 #> [19593,]  396  421  429 #> [19594,]  395  419  428 #> [19595,]  396  421  429 #> [19596,]  396  420  429 #> [19597,]  395  419  428 #> [19598,]  395  419  428 #> [19599,]  395  419  428 #> [19600,]  396  421  429 #> [19601,]  397  423  430 #> [19602,]  397  423  430 #> [19603,]  397  423  430 #> [19604,]  397  423  431 #> [19605,]  397  423  430 #> [19606,]  397  423  430 #> [19607,]  397  423  430 #> [19608,]  397  423  430 #> [19609,]  397  423  430 #> [19610,]  397  423  430 #> [19611,]  397  423  430 #> [19612,]  397  423  431 #> [19613,]  398  424  430 #> [19614,]  397  423  431 #> [19615,]  398  424  430 #> [19616,]  397  423  430 #> [19617,]  397  423  430 #> [19618,]  397  423  430 #> [19619,]  398  424  431 #> [19620,]  398  424  430 #> [19621,]  397  423  430 #> [19622,]  398  424  430 #> [19623,]  397  423  430 #> [19624,]  397  423  430 #> [19625,]  397  423  430 #> [19626,]  397  423  430 #> [19627,]  398  424  431 #> [19628,]  397  423  430 #> [19629,]  398  424  430 #> [19630,]  397  423  430 #> [19631,]  397  423  430 #> [19632,]  397  423  430 #> [19633,]  397  423  430 #> [19634,]  397  423  430 #> [19635,]  397  423  430 #> [19636,]  398  424  430 #> [19637,]  398  424  430 #> [19638,]  398  424  431 #> [19639,]  397  423  430 #> [19640,]  397  423  430 #> [19641,]  397  423  431 #> [19642,]  397  423  431 #> [19643,]  397  423  430 #> [19644,]  397  423  430 #> [19645,]  397  423  430 #> [19646,]  398  424  430 #> [19647,]  397  423  430 #> [19648,]  397  423  431 #> [19649,]  397  423  430 #> [19650,]  397  423  430 #> [19651,]  398  424  430 #> [19652,]  397  423  430 #> [19653,]  398  424  430 #> [19654,]  397  423  430 #> [19655,]  398  424  430 #> [19656,]  397  423  430 #> [19657,]  397  423  430 #> [19658,]  398  424  430 #> [19659,]  397  423  430 #> [19660,]  397  423  430 #> [19661,]  397  423  431 #> [19662,]  397  423  430 #> [19663,]  397  423  430 #> [19664,]  398  424  430 #> [19665,]  397  423  430 #> [19666,]  398  424  430 #> [19667,]  397  423  430 #> [19668,]  397  423  430 #> [19669,]  398  424  431 #> [19670,]  397  423  430 #> [19671,]  398  424  430 #> [19672,]  397  423  430 #> [19673,]  397  423  430 #> [19674,]  397  423  431 #> [19675,]  397  423  430 #> [19676,]  397  423  430 #> [19677,]  398  424  430 #> [19678,]  397  423  430 #> [19679,]  397  423  430 #> [19680,]  398  424  430 #> [19681,]  398  424  430 #> [19682,]  397  423  431 #> [19683,]  398  424  430 #> [19684,]  397  423  430 #> [19685,]  397  423  430 #> [19686,]  397  423  430 #> [19687,]  398  424  430 #> [19688,]  397  423  430 #> [19689,]  397  423  430 #> [19690,]  398  424  430 #> [19691,]  397  423  430 #> [19692,]  397  423  431 #> [19693,]  397  423  431 #> [19694,]  397  423  430 #> [19695,]  397  423  430 #> [19696,]  398  424  431 #> [19697,]  398  424  431 #> [19698,]  397  423  430 #> [19699,]  397  423  430 #> [19700,]  398  424  430 #> [19701,]  400  426  433 #> [19702,]  400  426  433 #> [19703,]  400  426  433 #> [19704,]  399  425  432 #> [19705,]  400  426  433 #> [19706,]  400  426  433 #> [19707,]  400  426  433 #> [19708,]  399  425  432 #> [19709,]  399  425  432 #> [19710,]  400  426  433 #> [19711,]  399  425  432 #> [19712,]  400  426  433 #> [19713,]  399  425  432 #> [19714,]  400  426  433 #> [19715,]  400  426  433 #> [19716,]  400  426  433 #> [19717,]  399  425  432 #> [19718,]  400  426  433 #> [19719,]  400  426  433 #> [19720,]  400  426  433 #> [19721,]  400  426  433 #> [19722,]  399  425  432 #> [19723,]  400  426  433 #> [19724,]  400  426  433 #> [19725,]  400  426  433 #> [19726,]  400  426  433 #> [19727,]  399  425  432 #> [19728,]  400  426  433 #> [19729,]  400  426  433 #> [19730,]  400  426  433 #> [19731,]  400  426  433 #> [19732,]  400  426  433 #> [19733,]  400  426  433 #> [19734,]  400  426  433 #> [19735,]  399  425  432 #> [19736,]  400  426  433 #> [19737,]  400  426  433 #> [19738,]  400  426  433 #> [19739,]  400  426  433 #> [19740,]  400  426  433 #> [19741,]  400  426  433 #> [19742,]  400  426  433 #> [19743,]  399  425  432 #> [19744,]  399  425  432 #> [19745,]  400  426  433 #> [19746,]  400  426  433 #> [19747,]  400  426  433 #> [19748,]  400  426  433 #> [19749,]  399  425  432 #> [19750,]  400  426  433 #> [19751,]  400  426  433 #> [19752,]  399  425  432 #> [19753,]  400  426  433 #> [19754,]  400  426  433 #> [19755,]  399  425  432 #> [19756,]  400  426  433 #> [19757,]  400  426  433 #> [19758,]  399  425  432 #> [19759,]  400  426  433 #> [19760,]  400  426  433 #> [19761,]  400  426  433 #> [19762,]  400  426  433 #> [19763,]  400  426  433 #> [19764,]  400  426  433 #> [19765,]  400  426  433 #> [19766,]  399  425  432 #> [19767,]  400  426  433 #> [19768,]  400  426  433 #> [19769,]  399  425  432 #> [19770,]  400  426  433 #> [19771,]  400  426  433 #> [19772,]  400  426  433 #> [19773,]  400  426  433 #> [19774,]  400  426  433 #> [19775,]  400  426  433 #> [19776,]  400  426  433 #> [19777,]  400  426  433 #> [19778,]  400  426  433 #> [19779,]  399  425  432 #> [19780,]  399  425  432 #> [19781,]  399  425  432 #> [19782,]  399  425  432 #> [19783,]  399  425  432 #> [19784,]  400  426  433 #> [19785,]  400  426  433 #> [19786,]  400  426  433 #> [19787,]  399  425  432 #> [19788,]  399  425  432 #> [19789,]  399  425  432 #> [19790,]  399  425  432 #> [19791,]  400  426  433 #> [19792,]  399  425  432 #> [19793,]  400  426  433 #> [19794,]  400  426  433 #> [19795,]  399  425  432 #> [19796,]  400  426  433 #> [19797,]  400  426  433 #> [19798,]  400  426  433 #> [19799,]  399  425  432 #> [19800,]  400  426  433 #> [19801,]  402  428  435 #> [19802,]  402  428  435 #> [19803,]  401  427  434 #> [19804,]  402  428  435 #> [19805,]  402  428  435 #> [19806,]  401  427  434 #> [19807,]  402  428  435 #> [19808,]  402  428  435 #> [19809,]  402  428  435 #> [19810,]  402  428  435 #> [19811,]  401  427  434 #> [19812,]  402  428  435 #> [19813,]  402  428  435 #> [19814,]  402  428  435 #> [19815,]  402  428  435 #> [19816,]  401  427  434 #> [19817,]  402  428  435 #> [19818,]  402  428  435 #> [19819,]  401  427  434 #> [19820,]  402  428  435 #> [19821,]  402  428  435 #> [19822,]  402  428  435 #> [19823,]  402  428  435 #> [19824,]  402  428  435 #> [19825,]  402  428  435 #> [19826,]  402  428  435 #> [19827,]  402  428  435 #> [19828,]  402  428  435 #> [19829,]  402  428  435 #> [19830,]  402  428  435 #> [19831,]  402  428  435 #> [19832,]  402  428  435 #> [19833,]  402  428  435 #> [19834,]  401  427  434 #> [19835,]  401  427  434 #> [19836,]  402  428  435 #> [19837,]  401  427  434 #> [19838,]  401  427  434 #> [19839,]  402  428  435 #> [19840,]  402  428  435 #> [19841,]  402  428  435 #> [19842,]  402  428  435 #> [19843,]  402  428  435 #> [19844,]  402  428  435 #> [19845,]  401  427  434 #> [19846,]  402  428  435 #> [19847,]  402  428  435 #> [19848,]  402  428  435 #> [19849,]  401  427  434 #> [19850,]  402  428  435 #> [19851,]  402  428  435 #> [19852,]  401  427  434 #> [19853,]  402  428  435 #> [19854,]  402  428  435 #> [19855,]  402  428  435 #> [19856,]  402  428  435 #> [19857,]  402  428  435 #> [19858,]  402  428  435 #> [19859,]  402  428  435 #> [19860,]  402  428  435 #> [19861,]  402  428  435 #> [19862,]  402  428  435 #> [19863,]  402  428  435 #> [19864,]  401  427  434 #> [19865,]  402  428  435 #> [19866,]  402  428  435 #> [19867,]  402  428  435 #> [19868,]  401  427  434 #> [19869,]  402  428  435 #> [19870,]  402  428  435 #> [19871,]  402  428  435 #> [19872,]  401  427  434 #> [19873,]  402  428  435 #> [19874,]  402  428  435 #> [19875,]  402  428  435 #> [19876,]  402  428  435 #> [19877,]  402  428  435 #> [19878,]  402  428  435 #> [19879,]  402  428  435 #> [19880,]  402  428  435 #> [19881,]  402  428  435 #> [19882,]  402  428  435 #> [19883,]  402  428  435 #> [19884,]  402  428  435 #> [19885,]  402  428  435 #> [19886,]  402  428  435 #> [19887,]  402  428  435 #> [19888,]  402  428  435 #> [19889,]  402  428  435 #> [19890,]  402  428  435 #> [19891,]  402  428  435 #> [19892,]  402  428  435 #> [19893,]  402  428  435 #> [19894,]  402  428  435 #> [19895,]  402  428  435 #> [19896,]  401  427  434 #> [19897,]  401  427  434 #> [19898,]  402  428  435 #> [19899,]  402  428  435 #> [19900,]  402  428  435 #> [19901,]  404  430  437 #> [19902,]  404  430  437 #> [19903,]  403  429  437 #> [19904,]  403  429  437 #> [19905,]  404  430  437 #> [19906,]  404  430  437 #> [19907,]  403  429  437 #> [19908,]  403  429  437 #> [19909,]  404  430  437 #> [19910,]  403  429  437 #> [19911,]  404  430  437 #> [19912,]  403  429  437 #> [19913,]  404  430  437 #> [19914,]  403  429  437 #> [19915,]  403  429  436 #> [19916,]  403  429  437 #> [19917,]  404  430  436 #> [19918,]  404  430  437 #> [19919,]  404  430  437 #> [19920,]  404  430  437 #> [19921,]  404  430  437 #> [19922,]  404  430  437 #> [19923,]  403  429  437 #> [19924,]  404  430  437 #> [19925,]  403  429  437 #> [19926,]  403  429  437 #> [19927,]  404  430  437 #> [19928,]  404  430  437 #> [19929,]  404  430  437 #> [19930,]  403  429  437 #> [19931,]  403  429  436 #> [19932,]  403  429  437 #> [19933,]  404  430  437 #> [19934,]  403  429  436 #> [19935,]  403  429  437 #> [19936,]  404  430  437 #> [19937,]  403  429  436 #> [19938,]  404  430  437 #> [19939,]  404  430  437 #> [19940,]  403  429  437 #> [19941,]  404  430  437 #> [19942,]  404  430  436 #> [19943,]  404  430  436 #> [19944,]  403  429  436 #> [19945,]  403  429  437 #> [19946,]  403  429  437 #> [19947,]  403  429  437 #> [19948,]  404  430  437 #> [19949,]  403  429  437 #> [19950,]  404  430  437 #> [19951,]  404  430  437 #> [19952,]  403  429  437 #> [19953,]  404  430  437 #> [19954,]  404  430  437 #> [19955,]  403  429  437 #> [19956,]  404  430  437 #> [19957,]  403  429  437 #> [19958,]  404  430  437 #> [19959,]  403  429  437 #> [19960,]  403  429  437 #> [19961,]  404  430  437 #> [19962,]  404  430  437 #> [19963,]  404  430  436 #> [19964,]  404  430  437 #> [19965,]  404  430  437 #> [19966,]  404  430  437 #> [19967,]  403  429  437 #> [19968,]  403  429  437 #> [19969,]  403  429  437 #> [19970,]  404  430  437 #> [19971,]  403  429  437 #> [19972,]  403  429  437 #> [19973,]  404  430  437 #> [19974,]  403  429  437 #> [19975,]  403  429  436 #> [19976,]  403  429  437 #> [19977,]  404  430  437 #> [19978,]  403  429  436 #> [19979,]  404  430  436 #> [19980,]  403  429  437 #> [19981,]  404  430  437 #> [19982,]  404  430  437 #> [19983,]  404  430  437 #> [19984,]  404  430  437 #> [19985,]  404  430  437 #> [19986,]  403  429  437 #> [19987,]  404  430  437 #> [19988,]  403  429  437 #> [19989,]  404  430  437 #> [19990,]  404  430  437 #> [19991,]  404  430  437 #> [19992,]  403  429  437 #> [19993,]  404  430  437 #> [19994,]  404  430  437 #> [19995,]  403  429  436 #> [19996,]  403  429  437 #> [19997,]  403  429  437 #> [19998,]  403  429  437 #> [19999,]  404  430  437 #> [20000,]  404  430  436"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Return forest's leaf node scale parameters. leaf scale sampled forest question, throws error leaf model stochastic scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"computeForestLeafVariances(model_object, forest_type, forest_inds = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"model_object Object type bartmodel bcfmodel corresponding BART / BCF model least one forest sample forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Vector size length(forest_inds) leaf scale parameter requested forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafVariances(bart_model, \"mean\") #>  [1] 0.004430225 0.004613066 0.004680312 0.004157125 0.003925175 0.003444876 #>  [7] 0.003454269 0.003436240 0.003051144 0.002726156 computeForestLeafVariances(bart_model, \"mean\", 0) #> [1] 0.004430225 computeForestLeafVariances(bart_model, \"mean\", c(1,3,5)) #> [1] 0.004613066 0.004157125 0.003444876"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Compute return largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"computeForestMaxLeafIndex(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute max leaf indices. provided, function return max leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Vector containing largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestMaxLeafIndex(bart_model, X, \"mean\") #>  [1] 383 410 423 426 435 433 435 433 442 440 computeForestMaxLeafIndex(bart_model, X, \"mean\", 0) #> [1] 383 computeForestMaxLeafIndex(bart_model, X, \"mean\", c(1,3,9)) #> [1] 410 426 440"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"Convert persistent aspects covariate preprocessor (-memory) C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"convertPreprocessorToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"wrapper around -memory C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Convert list (-memory) JSON representations BART model single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"createBARTModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- list(saveBARTModelToJson(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BART models single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"createBARTModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string_list <- list(saveBARTModelToJsonString(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJsonString(bart_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Convert (-memory) JSON representation BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"createBARTModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"json_object Object type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model) bart_model_roundtrip <- createBARTModelFromJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Convert JSON file containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"createBARTModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) bart_model_roundtrip <- createBARTModelFromJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Convert JSON string containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"createBARTModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJsonString(bart_model) bart_model_roundtrip <- createBARTModelFromJsonString(bart_json) y_hat_mean_roundtrip <- rowMeans(predict(bart_model_roundtrip, X_train)$y_hat) plot(rowMeans(bart_model$y_hat_train), y_hat_mean_roundtrip,       xlab = \"original\", ylab = \"roundtrip\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"createBCFModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_list <- list(saveBCFModelToJson(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJson(bcf_json_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"createBCFModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_string_list <- list(saveBCFModelToJsonString(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJsonString(bcf_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Convert (-memory) JSON representation BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"createBCFModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"json_object Object type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) bcf_json <- saveBCFModelToJson(bcf_model) bcf_model_roundtrip <- createBCFModelFromJson(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Convert JSON file containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"createBCFModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\") # bcf_model_roundtrip <- createBCFModelFromJsonFile(\"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Convert JSON string containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"createBCFModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json <- saveBCFModelToJsonString(bcf_model) # bcf_model_roundtrip <- createBCFModelFromJsonString(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new (empty) C++ Json object — createCppJson","title":"Create a new (empty) C++ Json object — createCppJson","text":"Create new (empty) C++ Json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"createCppJson()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new (empty) C++ Json object — createCppJson","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json file — createCppJsonFile","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"Create C++ Json object Json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"createCppJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"json_filename Name file read. Must end .json.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) tmpjson <- tempfile(fileext = \".json\") example_json$save_file(file.path(tmpjson)) example_json_roundtrip <- createCppJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json string — createCppJsonString","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"Create C++ Json object Json string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"createCppJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) example_json_string <- example_json$return_json_string() example_json_roundtrip <- createCppJsonString(example_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R class that wraps a C++ random number generator — createCppRNG","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"Create R class wraps C++ random number generator","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"createCppRNG(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"CppRng object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"rng <- createCppRNG(1234) rng <- createCppRNG()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest — createForest","title":"Create a forest — createForest","text":"Create forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest — createForest","text":"","code":"createForest(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest — createForest","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest — createForest","text":"Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest — createForest","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest dataset object — createForestDataset","title":"Create a forest dataset object — createForestDataset","text":"Create forest dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest dataset object — createForestDataset","text":"","code":"createForestDataset(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest dataset object — createForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest dataset object — createForestDataset","text":"ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest dataset object — createForestDataset","text":"","code":"covariate_matrix <- matrix(runif(10*100), ncol = 10) basis_matrix <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) forest_dataset <- createForestDataset(covariate_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model object — createForestModel","title":"Create a forest model object — createForestModel","text":"Create forest model object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model object — createForestModel","text":"","code":"createForestModel(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model object — createForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree ensemble mean model. Setting -1 enforce depth limits trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model object — createForestModel","text":"ForestModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model object — createForestModel","text":"","code":"num_trees <- 100 n <- 100 p <- 10 alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a container of forest samples — createForestSamples","title":"Create a container of forest samples — createForestSamples","text":"Create container forest samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a container of forest samples — createForestSamples","text":"","code":"createForestSamples(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a container of forest samples — createForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a container of forest samples — createForestSamples","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a container of forest samples — createForestSamples","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an outcome object — createOutcome","title":"Create an outcome object — createOutcome","text":"Create outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an outcome object — createOutcome","text":"","code":"createOutcome(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an outcome object — createOutcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an outcome object — createOutcome","text":"Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an outcome object — createOutcome","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) outcome <- createOutcome(y)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"createPreprocessorFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"json_object -memory wrapper around JSON C++ object containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJson(preprocessor_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"createPreprocessorFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"json_string -memory JSON string containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJsonString(preprocessor_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectSamples object — createRandomEffectSamples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"Create RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"createRandomEffectSamples(num_components, num_groups, random_effects_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random effects dataset object — createRandomEffectsDataset","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"Create random effects dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"createRandomEffectsDataset(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"rfx_group_ids <- sample(1:2, size = 100, replace = TRUE) rfx_basis <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsModel object — createRandomEffectsModel","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"Create RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsTracker object — createRandomEffectsTracker","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"Create RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"createRandomEffectsTracker(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"# S3 method for class 'bartmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"object Object type bartmodel containing draws BART model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) snr <- 3 group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) E_y <- f_XW + rfx_term y <- E_y + rnorm(n, 0, 1)*(sd(E_y)/snr) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- group_ids[test_inds] rfx_group_ids_train <- group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     rfx_group_ids_train = rfx_group_ids_train, rfx_group_ids_test = rfx_group_ids_test,                     rfx_basis_train = rfx_basis_train, rfx_basis_test = rfx_basis_test,                     num_gfr = 100, num_burnin = 0, num_mcmc = 100) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) rfx_samples <- getRandomEffectSamples(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"Generic function extracting random effect samples model object (BCF, BART, etc...)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"object Fitted model object extract random effects ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"List random effect samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"Combine multiple JSON model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"loadForestContainerCombinedJson(json_object_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"json_object_list List objects class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) mean_forest <- loadForestContainerCombinedJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"loadForestContainerCombinedJsonString(json_string_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"json_string_list List strings parse objects type CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) mean_forest <- loadForestContainerCombinedJsonString(bart_json_string, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of forest samples from json — loadForestContainerJson","title":"Load a container of forest samples from json — loadForestContainerJson","text":"Load container forest samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"loadForestContainerJson(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of forest samples from json — loadForestContainerJson","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of forest samples from json — loadForestContainerJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) mean_forest <- loadForestContainerJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"Combine multiple JSON model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"loadRandomEffectSamplesCombinedJson(json_object_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"json_object_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"loadRandomEffectSamplesCombinedJsonString(json_string_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"json_string_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJsonString(bart_json_string, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"Load container random effect samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"loadRandomEffectSamplesJson(json_object, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"json_object Object class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) rfx_samples <- loadRandomEffectSamplesJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a scalar from json — loadScalarJson","title":"Load a scalar from json — loadScalarJson","text":"Load scalar json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a scalar from json — loadScalarJson","text":"","code":"loadScalarJson(json_object, json_scalar_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a scalar from json — loadScalarJson","text":"json_object Object class CppJson json_scalar_label Label referring particular scalar / string value (.e. \"num_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a scalar from json — loadScalarJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a scalar from json — loadScalarJson","text":"","code":"example_scalar <- 5.4 example_json <- createCppJson() example_json$add_scalar(\"myscalar\", example_scalar) roundtrip_scalar <- loadScalarJson(example_json, \"myscalar\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a vector from json — loadVectorJson","title":"Load a vector from json — loadVectorJson","text":"Load vector json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a vector from json — loadVectorJson","text":"","code":"loadVectorJson(json_object, json_vector_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a vector from json — loadVectorJson","text":"json_object Object class CppJson json_vector_label Label referring particular vector (.e. \"sigma2_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a vector from json — loadVectorJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a vector from json — loadVectorJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) roundtrip_vec <- loadVectorJson(example_json, \"myvec\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BART model on new data — predict.bartmodel","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"Predict sampled BART model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"# S3 method for class 'bartmodel' predict(   object,   X,   leaf_basis = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"object Object type bart containing draws regression forest associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. leaf_basis (Optional) Bases used prediction (e.g. dot product leaf values). Default: NULL. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"List prediction matrices. model random effects, list one element – predictions forest. model random effects, list three elements – forest predictions, random effects predictions, sum (y_hat).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) y_hat_test <- predict(bart_model, X_test)$y_hat plot(rowMeans(y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BCF model on new data — predict.bcfmodel","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"Predict sampled BCF model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' predict(   object,   X,   Z,   propensity = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. Z Treatments used prediction. propensity (Optional) Propensities used prediction. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"List 3-5 nrow(X) object$num_samples matrices: prognostic function estimates, treatment effect estimates, (optionally) random effects predictions, (optionally) variance forest predictions, outcome predictions.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train) preds <- predict(bcf_model, X_test, Z_test, pi_test) plot(rowMeans(preds$mu_hat), mu_test, xlab = \"predicted\",      ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(preds$tau_hat), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"preprocessPredictionData(input_data, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"input_data Covariates, provided either dataframe matrix metadata List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocessed data categorical variables appropriately handled","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"cov_df <- data.frame(x1 = 1:5, x2 = 5:1, x3 = 6:10) metadata <- list(num_ordered_cat_vars = 0, num_unordered_cat_vars = 0,                   num_numeric_vars = 3, numeric_vars = c(\"x1\", \"x2\", \"x3\")) X_preprocessed <- preprocessPredictionData(cov_df, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"preprocessTrainData(input_data)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"input_data Covariates, provided either dataframe matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"List preprocessed (unmodified) data details number type variable, unique categories associated categorical variables, vector feature types needed calls BART BCF.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) X <- preprocess_list$X"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"Reset active forest, either specific forest ForestContainer ensemble single-node (.e. root) trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"resetActiveForest(active_forest, forest_samples = NULL, forest_num = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"active_forest Current active forest forest_samples (Optional) Container forest samples re-initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees. forest_num (Optional) Index forest samples initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples$add_forest_with_constant_leaves(0.0) forest_samples$add_numeric_split_tree(0, 0, 0, 0, 0.5, -1.0, 1.0) forest_samples$add_numeric_split_tree(0, 1, 0, 1, 0.75, 3.4, 0.75) active_forest$set_root_leaves(0.1) resetActiveForest(active_forest, forest_samples, 0) resetActiveForest(active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"Re-initialize forest model (tracking data structures) specific forest ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"resetForestModel(forest_model, forest, dataset, residual, is_mean_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"forest_model Forest model tracking data structures forest Forest re-initialize forest model dataset Training dataset object residual Residual also updated is_mean_model Whether model updated conditional mean model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"n <- 100 p <- 10 num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) leaf_model <- 0 sigma2 <- 1.0 leaf_scale <- as.matrix(1.0) variable_weights <- rep(1/p, p) a_forest <- 1 b_forest <- 1 cutpoint_grid_size <- 100 X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) y <- -5 + 10*(X[,1] > 0.5) + rnorm(n) outcome <- createOutcome(y) rng <- createCppRNG(1234) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth) active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_model$sample_one_iteration(     forest_dataset, outcome, forest_samples, active_forest,      rng, feature_types, leaf_model, leaf_scale, variable_weights,      a_forest, b_forest, sigma2, cutpoint_grid_size, keep_forest = TRUE,      gfr = FALSE, pre_initialized = TRUE ) resetActiveForest(active_forest, forest_samples, 0) resetForestModel(forest_model, active_forest, forest_dataset, outcome, TRUE)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"Reset RandomEffectsModel object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"resetRandomEffectsModel(rfx_model, rfx_samples, sample_num, sigma_alpha_init)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"rfx_model Object type RandomEffectsModel. rfx_samples Object type RandomEffectSamples. sample_num Index sample stored rfx_samples reset state random effects model. Zero-indexed, resetting based first sample require setting sample_num = 0. sigma_alpha_init Initial value \"working parameter\" scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"Reset RandomEffectsTracker object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"resetRandomEffectsTracker(   rfx_tracker,   rfx_model,   rfx_dataset,   residual,   rfx_samples )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome. rfx_samples Object type RandomEffectSamples.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0) resetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome, rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object to its ","title":"Reset a RandomEffectsModel object to its ","text":"Reset RandomEffectsModel object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object to its ","text":"","code":"rootResetRandomEffectsModel(   rfx_model,   alpha_init,   xi_init,   sigma_alpha_init,   sigma_xi_init,   sigma_xi_shape,   sigma_xi_scale )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object to its ","text":"rfx_model Object type RandomEffectsModel. alpha_init Initial value \"working parameter\". xi_init Initial value \"group parameters\". sigma_alpha_init Initial value \"working parameter\" scale parameter. sigma_xi_init Initial value \"group parameters\" scale parameter. sigma_xi_shape Shape parameter inverse gamma variance model group parameters. sigma_xi_scale Scale parameter inverse gamma variance model group parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object to its ","title":"Reset a RandomEffectsTracker object to its ","text":"Reset RandomEffectsTracker object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object to its ","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale) rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"Sample one iteration (inverse gamma) global variance model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"sampleGlobalErrorVarianceOneIteration(residual, dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"residual Outcome class dataset ForestDataset class rng C++ random number generator Global variance shape parameter b Global variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) y_std <- (y-mean(y))/sd(y) forest_dataset <- createForestDataset(X) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 sigma2 <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"Sample one iteration leaf parameter variance model (univariate basis constant leaf!)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"sampleLeafVarianceOneIteration(forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"forest C++ forest rng C++ random number generator Leaf variance shape parameter b Leaf variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 tau <- sampleLeafVarianceOneIteration(active_forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Convert persistent aspects BART model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"saveBARTModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"Convert persistent aspects BART model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"saveBARTModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"object Object type bartmodel containing draws BART model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"Convert persistent aspects BART model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"saveBARTModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string <- saveBARTModelToJsonString(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Convert persistent aspects BCF model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"saveBCFModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # bcf_json <- saveBCFModelToJson(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"Convert persistent aspects BCF model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"saveBCFModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"Convert persistent aspects BCF model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"saveBCFModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonString(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"Convert persistent aspects covariate preprocessor (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"savePreprocessorToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Stochastic tree ensembles (XBART BART) supervised learning causal inference.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Maintainer: Drew Herren drewherrenopensource@gmail.com (ORCID) Authors: Richard Hahn Jared Murray Carlos Carvalho Jingyu contributors: stochtree contributors [copyright holder]","code":""},{"path":"https://stochastictree.github.io/stochtree-r/news/index.html","id":"stochtree-010","dir":"Changelog","previous_headings":"","what":"stochtree 0.1.0","title":"stochtree 0.1.0","text":"Initial CRAN submission.","code":""}]
