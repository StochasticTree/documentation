[{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Step Function","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple step function.","code":"# Generate the data n <- 500 p_x <- 10 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,     general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect BART samples burnin.","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model additive random effect structure.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) noise_sd <- sd(f_XW) / snr y <- f_XW + rfx_term + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, rfx_group_ids_train = rfx_group_ids_train,      rfx_basis_train = rfx_basis_train, X_test = X_test, leaf_basis_test = leaf_basis_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6|X3−1|τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 \\lvert X_3 - 1 \\rvert\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.97"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-2-linear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.84"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.85"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-3-linear-outcome-model-homogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=3g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 3\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau1(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 1"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.81"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-4-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)={−1.1 ifX1>X20.9 ifX1≤X2τ(X)=11+exp(−X3)+X210π(X)=Φ(μ(X))Z∼Bernoulli(π(X))X1,X2,X3∼N(0,1)X4∼N(X2,1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= \\begin{cases} -1.1 & \\text{ } X_1 > X_2\\\\ 0.9 & \\text{ } X_1 \\leq X_2 \\end{cases}\\\\ \\tau(X) &= \\frac{1}{1+\\exp(-X_3)} + \\frac{X_2}{10}\\\\ \\pi(X) &= \\Phi\\left(\\mu(X)\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right)\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim N\\left(X_2,1\\right)\\\\ \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 1000 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n,x2,1) X <- cbind(x1,x2,x3,x4) p <- ncol(X) mu <- function(x) {-1*(x[,1]>(x[,2])) + 1*(x[,1]<(x[,2])) - 0.1} tau <- function(x) {1/(1 + exp(-x[,3])) + x[,2]/10} mu_x <- mu(X) tau_x <- tau(X) pi_x <- pnorm(mu_x) Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x sigma <- diff(range(mu_x + tau_x*pi))/8 y <- E_XZ + sigma*rnorm(n) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.995"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-5-nonlinear-outcome-model-heterogeneous-treatment-effect-with-additive-random-effects","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","title":"Causal Machine Learning in StochTree","text":"augment simulated example Demo 1 additive random effect structure show bcf() function can estimate incorporate effects forest sampling procedure.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw augmented “demo 1” DGP","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"simulate “warm-start” model (running root-MCMC BART random effects simply matter modifying code snippet setting num_gfr <- 0 num_mcmc > 0). Inspect BART samples initialized XBART warm-start      Examine test set interval coverage clear causal inference much difficult presence strong covariate-dependent prognostic effects strong group-level random effects. sense, proper prior calibration three μ\\mu, τ\\tau random effects models crucial.","code":"num_gfr <- 100 num_burnin <- 0 num_mcmc <- 500 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$rfx_preds_test), rfx_term_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Random effects terms\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ-rfx_term) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.94"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-6-nonlinear-outcome-model-heterogeneous-treatment-effect-using-different-features-in-the-prognostic-and-treatment-forests","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","title":"Causal Machine Learning in StochTree","text":", consider case might prefer use subset covariates treatment effect forest. might want ? Well, many cases plausible covariates (example age, income, etc…) influence outcome interest causal problem, moderate treatment effect. case, ’d need include variables prognostic forest deconfounding don’t necessarily need include treatment effect forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-5","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw modified “demo 1” DGP","code":"mu <- function(x) {1+g(x)+x[,1]*x[,3]-x[,2]+3*x[,3]} tau <- function(x) {1 - 2*x[,1] + 2*x[,2] + 1*x[,1]*x[,2]} n <- 500 snr <- 4 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) x6 <- rnorm(n) x7 <- rnorm(n) x8 <- rnorm(n) x9 <- rnorm(n) x10 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) p <- ncol(X) mu_x <- mu(X) tau_x <- tau(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.5 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect burned-samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.952 test_tau_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_tau_mean - tau_test)^2)) #> [1] 1.569991 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 2.028473"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.964 test_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_mean - tau_test)^2)) #> [1] 1.300246 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 1.884797"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.948 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.646363 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 2.022311"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.968 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.334294 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.921991"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect-1","dir":"Articles","previous_headings":"Continuous Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+2X1−𝟙(X2<0)×4+𝟙(X2≥0)×4+3(|X3|−2π)τ(X)=1+2X4X1,X2,X3,X4,X5∼N(0,1)U∼Uniform(0,1)π(X)=μ(X)−12+4(U−12)Z∼𝒩(π(X),1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + 2 X_1 - \\mathbb{1}\\left(X_2 < 0\\right) \\times 4 + \\mathbb{1}\\left(X_2 \\geq 0\\right) \\times 4 + 3 \\left(\\lvert X_3 \\rvert - \\sqrt{\\frac{2}{\\pi}} \\right)\\\\ \\tau(X) &= 1 + 2 X_4\\\\ X_1,X_2,X_3,X_4,X_5 &\\sim N\\left(0,1\\right)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ \\pi(X) &= \\frac{\\mu(X) - 1}{2} + 4 \\left(U - \\frac{1}{2}\\right)\\\\ Z &\\sim \\mathcal{N}\\left(\\pi(X), 1\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-6","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- 1 + 2*x1 - 4*(x2 < 0) + 4*(x2 >= 0) + 3*(abs(x3) - sqrt(2/pi)) tau_x <- 1 + 2*x4 u <- runif(n) pi_x <- ((mu_x-1)/4) + 4*(u-0.5) Z <- pi_x + rnorm(n,0,1) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-5","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.99"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-4","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Custom Sampling Routines in StochTree","text":"functions bart() bcf() provide simple performant interfaces supervised learning / causal inference, stochtree also offers access many “low-level” data structures typically implemented C++. low-level interface designed performance even simplicity — rather intent provide “prototype” interface C++ code doesn’t require modifying C++. illustrate prototype interface might useful, consider classic BART algorithm:    INPUT: yy, XX, τ\\tau, ν\\nu, λ\\lambda, α\\alpha, β\\beta    OUTPUT: mm samples decision forest kk trees global variance parameter σ2\\sigma^2    Initialize σ2\\sigma^2 via default data-dependent calibration exercise    Initialize “forest 0” kk trees single root node, referring tree jj’s prediction vector f0,jf_{0,j}    Compute residual r=y−∑j=1kf0,jr = y - \\sum_{j=1}^k f_{0,j}    iiIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Initialize forest ii forest −1i-1       jjIN {1,…,k}\\left\\{1,\\dots,k\\right\\}:          Add predictions tree jj residual: r=r+fi,jr = r + f_{,j}          Update tree jj via Metropolis-Hastings rr XX data tree priors depending (τ\\tau, σ2\\sigma^2, α\\alpha, β\\beta)          Sample leaf node parameters tree jj via Gibbs (leaf node prior N(0,τ)N\\left(0,\\tau\\right))          Subtract (updated) predictions tree jj residual: r=r−fi,jr = r - f_{,j}       Sample σ2\\sigma^2 via Gibbs (prior IG(ν/2,νλ/2)IG(\\nu/2,\\nu\\lambda/2)) algorithm conceptually simple, much core computation carried low-level languages C C++ tree data structure. result, changes algorithm, supporting heteroskedasticity (Pratola et al. (2020)), categorical outcomes (Murray (2021)) causal effect estimation (Hahn, Murray, Carvalho (2020)) require modifying low-level code. prototype interface exposes core components loop R level, thus making possible interchange C++ computation steps like “update tree jj via Metropolis-Hastings” R computation custom variance model, user-specified additive mean model components, . begin, load stochtree package","code":"library(stochtree)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) y <- f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } # Forest predictions preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via “grow--root” (Hahn (2023))   Inspect BART samples obtained “warm-starting”","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-2-supervised-learning-with-additive-random-effects","dir":"Articles","previous_headings":"","what":"Demo 2: Supervised Learning with Additive Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example add simple “random effects” structure: every observation either group 1 group 2 random group intercept (simulated quite strong, underscoring need random effects modeling).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- c(-5, 5) rfx_basis <- rep(1, n) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rfx_coefs[group_ids] * rfx_basis y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1) xi_init <- matrix(c(1,1),1,2) sigma_alpha_init <- matrix(c(1),1,1) sigma_xi_init <- matrix(c(1),1,1) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-3-supervised-learning-with-additive-multi-component-random-effects","dir":"Articles","previous_headings":"","what":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example, case allowing random intercept regression coefficient (pre-specified basis) group (1 2).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1,0) xi_init <- matrix(c(1,0,1,0),2,2) sigma_alpha_init <- diag(1,2,2) sigma_xi_init <- diag(1,2,2) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-4-supervised-learning-with-additive-linear-model","dir":"Articles","previous_headings":"","what":"Demo 4: Supervised Learning with Additive Linear Model","title":"Custom Sampling Routines in StochTree","text":"Instead group random effects, show combine stochastic forest additive linear regression term. model corresponds broadly y=Wβ+f(X)+ϵf(X)∼BART(c,d)β∼𝒩(0,τ)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= W\\beta + f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}(c,d)\\\\ \\beta &\\sim \\mathcal{N}(0, \\tau)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}(,b) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) beta_W <- c(5) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) lm_term <- W %*% beta_W y <- lm_term + f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha_bart <- 0.9 beta_bart <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- F feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) beta_tau <- 20 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha_bart, beta_bart,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 20 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc beta_init <- 0 global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) beta_samples <- c(beta_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, sigma2, cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } for (i in (num_warmstart+1):num_samples) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } # Linear model predictions lm_preds <- (sapply(1:num_samples, function(x) W[,1]*beta_samples[x+1]))*y_std  # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Overall predictions preds <- forest_preds + lm_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std  # Regression parameter beta_samples <- beta_samples*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model    Inspect BART samples obtained “warm-starting” plus additive random effects model    Now inspect samples BART forest alone (without considering additive linear model predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(beta_samples[1:num_warmstart], ylab=\"beta\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(beta_samples[(num_warmstart+1):num_samples], ylab=\"beta\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-5-causal-inference","dir":"Articles","previous_headings":"","what":"Demo 5: Causal Inference","title":"Custom Sampling Routines in StochTree","text":"show implement Bayesian Causal Forest (BCF) model Hahn, Murray, Carvalho (2020) using stochtree’s prototype API, including demoing non-trivial sampling step done R level.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"background","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Background","title":"Custom Sampling Routines in StochTree","text":"supervised learning case previous demo conceptually simple, motivate causal effect estimation task additional notation. Let yy refer continuous outcome interest, ZZ refer binary treatment, XX set covariates may influence YY, ZZ, . XX exhaustive set covariates influence ZZ YY, can specific YY terms causal model (see example Pearl (2009)) Y=F(Z,X,ϵY)\\begin{equation*} \\begin{aligned} Y &= F(Z, X, \\epsilon_Y) \\end{aligned} \\end{equation*} ϵY\\epsilon_Y outcome specific random noise FF function generates YY (many cases, FF can thought inverse CDF conditional XX ZZ). “potential outcomes” (see Imbens Rubin (2015)) can recovered Y1=F(1,X,ϵY)Y^1 = F(1, X, \\epsilon_Y) Y0=F(0,X,ϵY)Y^0 = F(0, X, \\epsilon_Y). causal outcome model can decomposed “mean” “error” terms Y=μ(X)+Zτ(X)+[η(X)+Zδ(X)]μ(X)=𝔼ϵY[F(0,X,ϵY)]τ(X)=𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]η(X)=F(0,X,ϵY)−𝔼ϵY[F(0,X,ϵY)]δ(X)=F(1,X,ϵY)−F(0,X,ϵY)−𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]\\begin{equation*} \\begin{aligned} Y &= \\mu(X) + Z\\tau(X) + \\left[\\eta(X) + Z\\delta(X)\\right]\\\\ \\mu(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\tau(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right]\\\\ \\eta(X) &= F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\delta(X) &= F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right] \\end{aligned} \\end{equation*} τ(X)\\tau(X) precisely conditional average treatment effect (CATE) estimand. Unfortunately, functional form FF unavailable analysis, τ(X)\\tau(X) derived. flexible, regularized nonparametrics enter picture, aim estimate μ(X)\\mu(X) τ(X)\\tau(X) data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"Demo 5: Causal Inference > Background","what":"Bayesian Causal Forest (BCF)","title":"Custom Sampling Routines in StochTree","text":"BCF estimates μ(X)\\mu(X) τ(X)\\tau(X) using separate BART forests term. Furthermore, rather rely common implicit coding ZZ 0 control observations 1 treated observations, consider coding control observations parameter b0b_0 treated observations parameter b1b_1. Placing N(0,1/2)N(0,1/2) prior bzb_z, essentially redefines outcome model y=μ(X)+τ(X)f(Z)+ϵf(Z)=b0(1−Z)+b1Zϵ∼N(0,σ2)b0,b1∼N(0,1/2)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) f(Z) + \\epsilon\\\\ f(Z) &= b_0(1-Z) + b_1 Z\\\\ \\epsilon &\\sim N\\left(0, \\sigma^2\\right)\\\\ b_0, b_1 &\\sim N\\left(0, 1/2\\right) \\end{aligned} \\end{equation*} Updating bzb_z requires additional Gibbs step, derive . Conditioning sampled forests μ\\mu τ\\tau, essentially regressing y−μ(Z)y - \\mu(Z) [(1−Z)τ(X),Zτ(X)]\\left[(1-Z)\\tau(X), Z\\tau(X)\\right] closed form posterior b0∣y,X,μ,τ∼N(syτ,0sττ,0+2σ2,σ2sττ,0+2σ2)b1∣y,X,μ,τ∼N(syτ,1sττ,1+2σ2,σ2sττ,1+2σ2)\\begin{equation*} \\begin{aligned} b_0 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,0}}{s_{\\tau\\tau,0} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,0} + 2\\sigma^2}\\right)\\\\ b_1 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,1}}{s_{\\tau\\tau,1} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,1} + 2\\sigma^2}\\right) \\end{aligned} \\end{equation*} syτ,z=∑:Zi=z(yi−μ(Xi))τ(Xi)s_{y\\tau,z} = \\sum_{: Z_i = z} (y_i - \\mu(X_i))\\tau(X_i) sττ,z=∑:Zi=zτ(Xi)τ(Xi)s_{\\tau\\tau,z} = \\sum_{: Z_i = z} \\tau(X_i)\\tau(X_i).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"simulated causal DGP mirrors nonlinear, heterogeneous treatment effect DGP presented Hahn, Murray, Carvalho (2020).","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Prepare run sampler (now must specify initial values b0b_0 b1b_1, choose -1/2 1/2 instead 0 1). Initialize R-level access C++ classes needed sample model Run grow--root sampler “warm-start” BART, also updating adaptive coding parameter b0b_0 b1b_1 Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"# Mu forest alpha_mu <- 0.95 beta_mu <- 2.0 min_samples_leaf_mu <- 5 max_depth_mu <- 10 num_trees_mu <- 250 cutpoint_grid_size_mu = 100 tau_init_mu = 1/num_trees_mu leaf_prior_scale_mu = matrix(c(tau_init_mu), ncol = 1) a_leaf_mu <- 3. b_leaf_mu <- var(resid)/(num_trees_mu) leaf_regression_mu <- F sigma_leaf_mu <- var(resid)/(num_trees_mu) current_leaf_scale_mu <- as.matrix(sigma_leaf_mu)  # Tau forest alpha_tau <- 0.25 beta_tau <- 3.0 min_samples_leaf_tau <- 5 max_depth_tau <- 10 num_trees_tau <- 50 cutpoint_grid_size_tau = 100 a_leaf_tau <- 3. b_leaf_tau <- var(resid)/(2*num_trees_tau) leaf_regression_tau <- T sigma_leaf_tau <- var(resid)/(2*num_trees_tau) current_leaf_scale_tau <- as.matrix(sigma_leaf_tau)  # Common parameters nu <- 3 sigma2hat <- (sigma(lm(resid~X)))^2 quantile_cutoff <- 0.9 if (is.null(lambda)) {     lambda <- (sigma2hat*qgamma(1-quantile_cutoff,nu))/nu } sigma2 <- sigma2hat current_sigma2 <- sigma2 # Sampling composition num_gfr <- 20 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc  # Sigma^2 samples global_var_samples <- rep(0, num_samples)  # Adaptive coding parameter samples b_0_samples <- rep(0, num_samples) b_1_samples <- rep(0, num_samples) b_0 <- -0.5 b_1 <- 0.5 current_b_0 <- b_0 current_b_1 <- b_1 tau_basis <- (1-Z)*current_b_0 + Z*current_b_1 # Data X_mu <- cbind(X, pi_x) X_tau <- X feature_types <- c(0,0,0,1,1) feature_types_mu <- as.integer(c(feature_types,0)) feature_types_tau <- as.integer(feature_types) variable_weights_mu = rep(1/ncol(X_mu), ncol(X_mu)) variable_weights_tau = rep(1/ncol(X_tau), ncol(X_tau)) forest_dataset_mu <- createForestDataset(X_mu) forest_dataset_tau <- createForestDataset(X_tau, tau_basis) outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_mu <- createForestModel(     forest_dataset_mu, feature_types_mu, num_trees_mu, nrow(X_mu),      alpha_mu, beta_mu, min_samples_leaf_mu, max_depth_mu ) forest_model_tau <- createForestModel(     forest_dataset_tau, feature_types_tau, num_trees_tau, nrow(X_tau),      alpha_tau, beta_tau, min_samples_leaf_tau, max_depth_tau )  # Container of forest samples forest_samples_mu <- createForestSamples(num_trees_mu, 1, T) active_forest_mu <- createForest(num_trees_mu, 1, T) forest_samples_tau <- createForestSamples(num_trees_tau, 1, F) active_forest_tau <- createForest(num_trees_tau, 1, F)  # Initialize the leaves of each tree in the prognostic forest active_forest_mu$prepare_for_sampler(forest_dataset_mu, outcome, forest_model_mu, 0, mean(resid)) active_forest_mu$adjust_residual(forest_dataset_mu, outcome, forest_model_mu, F, F)  # Initialize the leaves of each tree in the treatment effect forest active_forest_tau$prepare_for_sampler(forest_dataset_tau, outcome, forest_model_tau, 1, 0.) active_forest_tau$adjust_residual(forest_dataset_tau, outcome, forest_model_tau, T, F) if (num_gfr > 0){     for (i in 1:num_gfr) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              feature_types_mu, 0, current_leaf_scale_mu, variable_weights_mu,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              feature_types_tau, 1, current_leaf_scale_tau, variable_weights_tau,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } if (num_burnin + num_mcmc > 0) {     for (i in (num_gfr+1):num_samples) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng, feature_types_mu,              0, current_leaf_scale_mu, variable_weights_mu, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_mu, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng, feature_types_tau,              1, current_leaf_scale_tau, variable_weights_tau, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1          # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } # Forest predictions mu_hat <- forest_samples_mu$predict(forest_dataset_mu)*y_std + y_bar tau_hat_raw <- forest_samples_tau$predict_raw(forest_dataset_tau) tau_hat <- t(t(tau_hat_raw) * (b_1_samples - b_0_samples))*y_std y_hat <- mu_hat + tau_hat * as.numeric(Z)  # Global error variance sigma2_samples <- global_var_samples*(y_std^2)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect XBART results    Inspect warm start BART results    Inspect “adaptive coding” parameters b0b_0 b1b_1.","code":"plot(sigma2_samples[1:num_gfr], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,1:num_gfr]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,1:num_gfr]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,1:num_gfr]) - tau_x)^2) #> [1] 0.2922739 plot(sigma2_samples[(num_gfr+1):num_samples], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,(num_gfr+1):num_samples]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,(num_gfr+1):num_samples]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,(num_gfr+1):num_samples]) - tau_x)^2) #> [1] 0.295267 plot(b_0_samples, col = \"blue\", ylab = \"Coding parameter draws\",       ylim = c(min(min(b_0_samples), min(b_1_samples)), max(max(b_0_samples), max(b_1_samples)))) points(b_1_samples, col = \"orange\") legend(\"topleft\", legend = c(\"b_0\", \"b_1\"), col = c(\"blue\", \"orange\"), pch = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Kernel Methods from Tree Ensembles in StochTree","text":"trained tree ensemble strong --sample performance admits natural motivation “distance” two samples: shared leaf membership. number leaves ensemble 1 ss (, tree 1 3 leaves, reserves numbers 1 - 3, turn tree 2 5 leaves, reserves numbers 4 - 8 label leaves, ). dataset nn observations, construct matrix WW follows:    Initialize WW matrix zeroes nn rows many columns leaves ensemble    Let s = 0    jjIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Let num_leaves number leaves tree jj       iiIN {1,…,n}\\left\\{1,\\dots,n\\right\\}:          Let k leaf tree jj maps observation ii          Set element Wi,k+s=1W_{,k+s} = 1       Let s = s + num_leaves sparse matrix WW matrix representation basis predictions ensemble (.e. integrating leaf parameters just analyzing leaf indices). ensemble mm trees, can determine proportion trees map observation leaf computing WWT/mW W^T / m. can form basis kernel function used Gaussian process regression, demonstrate . begin, load stochtree package tgp package serve point reference.","code":"library(stochtree) library(tgp) library(MASS) library(Matrix) library(mvtnorm)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-1-univariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Univariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"begin simulated example tgp package (Gramacy Taddy (2010)). data generating process (DGP) non-stationary single numeric covariate. define training set test set evaluate various approaches modeling sample outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data X_train <- seq(0,20,length=100) X_test <- seq(0,20,length=99) y_train <- (sin(pi*X_train/5) + 0.2*cos(4*pi*X_train/5)) * (X_train <= 9.6) lin_train <- X_train>9.6;  y_train[lin_train] <- -1 + X_train[lin_train]/10 y_train <- y_train + rnorm(length(y_train), sd=0.1) y_test <- (sin(pi*X_test/5) + 0.2*cos(4*pi*X_test/5)) * (X_test <= 9.6) lin_test <- X_test>9.6;  y_test[lin_test] <- -1 + X_test[lin_test]/10  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 0.0466081"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) colnames(X_train) <- colnames(X_test) <- \"x1\" mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 0.09206635"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-2-multivariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 2: Multivariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"proceed simulated “Friedman” dataset, implemented tgp.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data, add many \"noise variables\" n <- 100 friedman.df <- friedman.1.data(n=n) train_inds <- sort(sample(1:n, floor(0.8*n), replace = FALSE)) test_inds <- (1:n)[!((1:n) %in% train_inds)] X <- as.matrix(friedman.df)[,1:10] X <- cbind(X, matrix(runif(n*10), ncol = 10)) y <- as.matrix(friedman.df)[,12] + rnorm(n,0,1)*(sd(as.matrix(friedman.df)[,11])/2) X_train <- X[train_inds,] X_test <- X[test_inds,] y_train <- y[train_inds] y_test <- y[test_inds]  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 5.023593"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE use case BART kernel classical kriging perhaps unclear without empirical investigation, see later vignette kernel approach can beneficial causal inference applications.","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 6.626754"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean relatively simple covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 20 a_0 <- 1.5 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean complex covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_trees <- 20 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data (relatively simple) covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X2≥0 X2<0.25−2X2≥0.25 X2<0.52X2≥0.5 X2<0.756X2≥0.75 X2<1σ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data complex covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X4X2≥0 X2<0.25−2X4X2≥0.25 X2<0.52X4X2≥0.5 X2<0.756X4X2≥0.75 X2<1σ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6X_4 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2X_4 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2X_4 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6X_4 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6*X[,4]) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2*X[,4]) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2*X[,4]) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6*X[,4]) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-1-bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"","what":"Demo 1: Bayesian Causal Forest (BCF)","title":"Model Serialization in StochTree","text":"BCF models initially sampled constructed using bcf() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw modified version data generating process defined Hahn, Murray, Carvalho (2020). Sample BCF model.","code":"# Generate synthetic data n <- 1000 snr <- 2 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      mu_forest_params = mu_forest_params, tau_forest_params = tau_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BCF model disk.","code":"saveBCFModelToJsonFile(bcf_model, \"bcf.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BCF model disk. Check predictions align original model.","code":"bcf_model_reload <- createBCFModelFromJsonFile(\"bcf.json\") bcf_preds_reload <- predict(bcf_model_reload, X_train, Z_train, pi_train, rfx_group_ids_train, rfx_basis_train) plot(rowMeans(bcf_model$mu_hat_train), rowMeans(bcf_preds_reload$mu_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Prognostic forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$tau_hat_train), rowMeans(bcf_preds_reload$tau_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Treatment forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$y_hat_train), rowMeans(bcf_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Overall outcome\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-2-bart","dir":"Articles","previous_headings":"","what":"Demo 2: BART","title":"Model Serialization in StochTree","text":"BART models initially sampled constructed using bart() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw relatively straightforward heteroskedastic supervised learning DGP. Sample BART model.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 100,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BART model disk.","code":"saveBARTModelToJsonFile(bart_model, \"bart.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BART model disk. Check predictions align original model.","code":"bart_model_reload <- createBARTModelFromJsonFile(\"bart.json\") bart_preds_reload <- predict(bart_model_reload, X_train) plot(rowMeans(bart_model$y_hat_train), rowMeans(bart_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Mean Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bart_model$sigma_x_hat_train), rowMeans(bart_preds_reload$variance_forest_predictions),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Variance Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Mixing MCMC sampler perennial concern complex Bayesian models, BART exception. common way address concerns run multiple independent “chains” MCMC sampler, chain gets stuck different region posterior, combined samples attain better coverage full posterior. idea works classic “-root” MCMC sampler Chipman, George, McCulloch (2010), key insight Hahn (2023) XBART algorithm may used warm-start initialize multiple chains BART MCMC sampler. Operationally, two approaches implementation (setting num_gfr > 0 warm-start initialization desired), vignette demonstrate run multi-chain sampler sequentially parallel. begin, load stochtree necessary packages","code":"library(stochtree) library(foreach) library(doParallel) #> Loading required package: iterators #> Loading required package: parallel"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"data-simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Data Simulation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-sequentially","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains Sequentially","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Define high-level parameters, including number chains run number samples per chain. run 4 independent chains 5 warm-start iterations 100 MCMC iterations . Run sampler, storing resulting BART objects list Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare original ŷ\\hat{y} values","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 bart_models <- list() general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) for (i in 1:num_chains) {     bart_models[[i]] <- stochtree::bart(         X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, X_test = X_test,          leaf_basis_test = leaf_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,          general_params = general_params, mean_forest_params = mean_forest_params     ) } json_string_list <- list() for (i in 1:num_chains) {     json_string_list[[i]] <- saveBARTModelToJsonString(bart_models[[i]]) } combined_bart <- createBARTModelFromCombinedJsonString(json_string_list) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(bart_models[[i]]$y_hat_test),           rowMeans(yhat_combined[,inds_start:inds_end]),          xlab = \"original\", ylab = \"deserialized\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"use high-level parameters sequential demo. order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params   )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } #> Warning: executing %dopar% sequentially: no parallel backend registered stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"warmstarting-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Warmstarting Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"example, ran multiple parallel chains MCMC sampler starting “root” forest. Consider instead “warmstart” approach Hahn (2023), forests sampled using fast “grow--root” (GFR) algorithm several MCMC chains run using different GFR forests. use high-level parameters parallel demo. First, sample model using grow--root algorithm main R session several iterations (use forests see independent parallel chains moment). order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) xbart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = 0, num_mcmc = 0,      general_params = general_params, mean_forest_params = mean_forest_params ) xbart_model_string <- stochtree::saveBARTModelToJsonString(xbart_model) ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   bart_params <- list(sample_sigma_global = T, sample_sigma_leaf = T,                        num_trees_mean = num_trees, random_seed = random_seed)   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(       X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,        X_test = X_test, leaf_basis_test = leaf_basis_test,        num_gfr = 0, num_burnin = num_burnin, num_mcmc = num_mcmc,        general_params = general_params, mean_forest_params = mean_forest_params,        previous_model_json = xbart_model_string, previous_model_warmstart_sample_num = num_gfr - i + 1,    )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"“classic” BART model Chipman, George, McCulloch (2010) y=f(X)+ϵf(X)∼BART(α,β)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}\\left(\\alpha, \\beta\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}\\left(,b\\right) \\end{aligned} \\end{equation*} semiparametric, nonparametric tree ensemble f(X)f(X) homoskedastic error variance parameter σ2\\sigma^2. Note Chipman, George, McCulloch (2010), aa bb parameterized =ν2a = \\frac{\\nu}{2} b=νλ2b = \\frac{\\nu\\lambda}{2}.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"setting-priors-on-variance-parameters-in-stochtree","dir":"Articles","previous_headings":"","what":"Setting Priors on Variance Parameters in stochtree","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"default, stochtree employs Jeffreys’ prior σ2\\sigma^2σ2∝1σ2\\begin{equation*} \\begin{aligned} \\sigma^2 &\\propto \\frac{1}{\\sigma^2} \\end{aligned} \\end{equation*} corresponds improper prior =0a = 0 b=0b = 0. provide convenience functions users wishing set σ2\\sigma^2 prior Chipman, George, McCulloch (2010). case, ν\\nu set default 3 λ\\lambda calibrated follows: “overestimate,” σ̂2\\hat{\\sigma}^2, σ2\\sigma^2 obtained via simple linear regression yy XX λ\\lambda chosen ensure p(σ2<σ̂2)=qp(\\sigma^2 < \\hat{\\sigma}^2) = q value qq, typically set default value 0.9. done stochtree via calibrateInverseGammaErrorVariance function. Now run BART model variance parameterization Inspect --sample predictions model  Inspect posterior samples σ2\\sigma^2","code":"# Load library library(stochtree)  # Generate data n <- 500 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd)  # Test/train split test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]  # Calibrate the scale parameter for the variance term as in Chipman et al (2010) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y_train, X_train, nu = nu) general_params <- list(sigma2_global_shape = nu/2, sigma2_global_scale = (nu*lambda)/2) bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     num_gfr = 0, num_burnin = 1000, num_mcmc = 100,                     general_params = general_params) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(bart_model$sigma2_global_samples, ylab = \"sigma^2\", xlab = \"iteration\") abline(h = noise_sd^2, col = \"red\", lty = 3, lwd = 3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"demo-1-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Supervised Learning","title":"Deeper Dive on Sampled Forests in StochTree","text":"Generate sample data feature 10 “important” feature.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,10]) & (0.25 > X[,10])) * (-7.5) +      ((0.25 <= X[,10]) & (0.5 > X[,10])) * (-2.5) +      ((0.5 <= X[,10]) & (0.75 > X[,10])) * (2.5) +      ((0.75 <= X[,10]) & (1 > X[,10])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"sampling-and-analysis","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling and Analysis","title":"Deeper Dive on Sampled Forests in StochTree","text":"Run BART. Inspect MCMC samples   Check variable split count last GFR sample split counts appear relatively uniform across features, let’s dig deeper look individual trees, starting first tree last “grow--root” sample. tree single split “important” feature. Now, let’s look second tree. tree also splits important feature. see “later” trees splitting features, also note trees fitting outcome already residualized many “relevant splits” made trees 1 2. Now, let’s inspect first tree last GFR sample depth, following scikit-learn vignette","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 general_params <- list(keep_gfr = T) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params ) plot(bart_model$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) bart_model$mean_forests$get_forest_split_counts(10, p_x) #>  [1] 29 25 22 22 20 31 23 29 31 34 bart_model$mean_forests$get_aggregate_split_counts(p_x) #>  [1] 2939 2547 2056 2569 1974 2590 2602 3191 2586 3545 splits = bart_model$mean_forests$get_granular_split_counts(p_x) splits[10,1,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,2,] #>  [1] 0 0 0 0 0 0 0 0 0 2 splits[10,20,] #>  [1] 0 0 0 0 0 0 1 0 1 0 splits[10,30,] #>  [1] 0 0 0 1 0 0 0 0 0 0 forest_num <- 9 tree_num <- 0 nodes <- sort(bart_model$mean_forests$nodes(forest_num, tree_num)) for (nid in nodes) {     if (bart_model$mean_forests$is_leaf_node(forest_num, tree_num, nid)) {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         leaf_values <- bart_model$mean_forests$node_leaf_values(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a leaf node with value=\",              format(leaf_values, digits = 3), \"\\n\", sep = \"\")     } else {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         left <- bart_model$mean_forests$left_child_node(forest_num, tree_num, nid)         feature <- bart_model$mean_forests$node_split_index(forest_num, tree_num, nid)         threshold <- bart_model$mean_forests$node_split_threshold(forest_num, tree_num, nid)         right <- bart_model$mean_forests$right_child_node(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a split node, which tells us to go to node \",              left, \" if X[:, \", feature, \"] <= \", format(threshold, digits = 3),              \" else to node \", right, \"\\n\", sep = \"\")     } } #> node=0 is a split node, which tells us to go to node 1 if X[:, 9] <= 0.496 else to node 2 #>  node=1 is a leaf node with value=-0.412 #>  node=2 is a leaf node with value=0.312"},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Drew Herren. Author, maintainer. Richard Hahn. Author. Jared Murray. Author. Carlos Carvalho. Author. Jingyu . Author. stochtree contributors. Copyright holder.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herren D, Hahn R, Murray J, Carvalho C, J (2025). stochtree: Stochastic tree ensembles (XBART BART) supervised learning causal inference. R package version 0.1.0, https://stochtree.ai.","code":"@Manual{,   title = {stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference},   author = {Drew Herren and Richard Hahn and Jared Murray and Carlos Carvalho and Jingyu He},   year = {2025},   note = {R package version 0.1.0},   url = {https://stochtree.ai}, }"},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"stochtree-r-package","dir":"","previous_headings":"","what":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"Software building stochastic tree ensembles (.e. BART, XBART) supervised learning causal inference.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"stochtree can installed CRAN via development version stochtree can installed github via","code":"install.package(\"stochtree\") remotes::install_github(\"StochasticTree/stochtree\", ref=\"r-dev\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — CppJson","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_ptr External pointer C++ nlohmann::json object num_forests Number forests nlohmann::json object forest_labels Names forest objects overall nlohmann::json object num_rfx Number random effects terms nlohman::json object rfx_container_labels Names rfx container objects overall nlohmann::json object rfx_mapper_labels Names rfx label mapper objects overall nlohmann::json object rfx_groupid_labels Names rfx group id objects overall nlohmann::json object","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"CppJson$new() CppJson$add_forest() CppJson$add_random_effects() CppJson$add_scalar() CppJson$add_integer() CppJson$add_boolean() CppJson$add_string() CppJson$add_vector() CppJson$add_integer_vector() CppJson$add_string_vector() CppJson$add_list() CppJson$add_string_list() CppJson$get_scalar() CppJson$get_integer() CppJson$get_boolean() CppJson$get_string() CppJson$get_vector() CppJson$get_integer_vector() CppJson$get_string_vector() CppJson$get_numeric_list() CppJson$get_string_list() CppJson$return_json_string() CppJson$save_file() CppJson$load_from_file() CppJson$load_from_string()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Create new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-forest-","dir":"Reference","previous_headings":"","what":"Method add_forest()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert forest container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_forest(forest_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"forest_samples ForestSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-random-effects-","dir":"Reference","previous_headings":"","what":"Method add_random_effects()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert random effects container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_random_effects(rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"rfx_samples RandomEffectSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-scalar-","dir":"Reference","previous_headings":"","what":"Method add_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_scalar(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-","dir":"Reference","previous_headings":"","what":"Method add_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Integer value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-boolean-","dir":"Reference","previous_headings":"","what":"Method add_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_boolean(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-","dir":"Reference","previous_headings":"","what":"Method add_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-vector-","dir":"Reference","previous_headings":"","what":"Method add_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-vector-","dir":"Reference","previous_headings":"","what":"Method add_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add array json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Character vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-list-","dir":"Reference","previous_headings":"","what":"Method add_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-list-","dir":"Reference","previous_headings":"","what":"Method add_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-scalar-","dir":"Reference","previous_headings":"","what":"Method get_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve scalar value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_scalar(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-","dir":"Reference","previous_headings":"","what":"Method get_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-boolean-","dir":"Reference","previous_headings":"","what":"Method get_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_boolean(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-","dir":"Reference","previous_headings":"","what":"Method get_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-vector-","dir":"Reference","previous_headings":"","what":"Method get_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-vector-","dir":"Reference","previous_headings":"","what":"Method get_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-vector-","dir":"Reference","previous_headings":"","what":"Method get_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve character vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-numeric-list-","dir":"Reference","previous_headings":"","what":"Method get_numeric_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list numeric vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_numeric_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-list-","dir":"Reference","previous_headings":"","what":"Method get_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list string vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-return-json-string-","dir":"Reference","previous_headings":"","what":"Method return_json_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert JSON object -memory string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$return_json_string()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-save-file-","dir":"Reference","previous_headings":"","what":"Method save_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Save json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$save_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-file-","dir":"Reference","previous_headings":"","what":"Method load_from_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-string-","dir":"Reference","previous_headings":"","what":"Method load_from_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_string(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Persists C++ random number generator throughout R session ensure reproducibility given random seed. seed provided, C++ random number generator initialized using std::random_device.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"rng_ptr External pointer C++ std::mt19937 class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"CppRNG$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Create new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"","code":"CppRNG$new(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores a single ensemble of decision trees (often treated as the ","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Wrapper around C++ tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_ptr External pointer C++ TreeEnsemble class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Forest$new() Forest$predict() Forest$predict_raw() Forest$set_root_leaves() Forest$prepare_for_sampler() Forest$adjust_residual() Forest$num_trees() Forest$leaf_dimension() Forest$is_constant_leaf() Forest$is_exponentiated() Forest$add_numeric_split_tree() Forest$get_tree_leaves() Forest$get_tree_split_counts() Forest$get_forest_split_counts() Forest$tree_max_depth() Forest$average_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Create new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"vector predictions many rows forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict \"raw\" leaf values (without multiplied basis) every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array vector (length number observations). case multivariate leaf regression, array matrix (number observations leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$set_root_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$adjust_residual(dataset, outcome, forest_model, requires_basis, add)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return number trees ensemble Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return output dimension trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return constant leaf status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return exponentiation status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$add_numeric_split_tree(   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_leaves(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable given tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_split_counts(tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_forest_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method tree_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum depth specific tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$tree_max_depth(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Tree index within forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a forest — ForestDataset","title":"Dataset used to sample a forest — ForestDataset","text":"dataset consists three matrices / vectors: covariates, bases, variance weights. basis vector variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a forest — ForestDataset","text":"data_ptr External pointer C++ ForestDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a forest — ForestDataset","text":"ForestDataset$new() ForestDataset$update_basis() ForestDataset$num_observations() ForestDataset$num_covariates() ForestDataset$num_basis() ForestDataset$has_basis() ForestDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a forest — ForestDataset","text":"Create new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$new(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-update-basis-","dir":"Reference","previous_headings":"","what":"Method update_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Update basis matrix dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$update_basis(basis)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"basis Updated matrix bases used define leaf regression","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number observations ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-covariates-","dir":"Reference","previous_headings":"","what":"Method num_covariates()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number covariates ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_covariates()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Covariate count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-basis-","dir":"Reference","previous_headings":"","what":"Method num_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number bases ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Basis count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines and samples a forest model — ForestModel","title":"Class that defines and samples a forest model — ForestModel","text":"Hosts C++ data structures needed sample ensemble decision trees, exposes functionality run forest sampler (using either MCMC grow--root algorithm).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines and samples a forest model — ForestModel","text":"tracker_ptr External pointer C++ ForestTracker class tree_prior_ptr External pointer C++ TreePrior class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines and samples a forest model — ForestModel","text":"ForestModel$new() ForestModel$sample_one_iteration() ForestModel$propagate_basis_update() ForestModel$propagate_residual_update() ForestModel$update_alpha() ForestModel$update_beta() ForestModel$update_min_samples_leaf() ForestModel$update_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines and samples a forest model — ForestModel","text":"Create new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$new(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth = -1 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree can reach","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-sample-one-iteration-","dir":"Reference","previous_headings":"","what":"Method sample_one_iteration()","title":"Class that defines and samples a forest model — ForestModel","text":"Run single iteration forest sampling algorithm (MCMC GFR)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$sample_one_iteration(   forest_dataset,   residual,   forest_samples,   active_forest,   rng,   feature_types,   leaf_model_int,   leaf_model_scale,   variable_weights,   a_forest,   b_forest,   global_scale,   cutpoint_grid_size = 500,   keep_forest = T,   gfr = T,   pre_initialized = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset Dataset used sample forest residual Outcome used sample forest forest_samples Container forest samples active_forest \"Active\" forest updated sampler iteration rng Wrapper around C++ random number generator feature_types Vector specifying type p covariates forest_dataset (0 = numeric, 1 = ordered categorical, 2 = unordered categorical) leaf_model_int Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression) leaf_model_scale Scale parameter used leaf node model (q x q matrix q dimensionality basis >1 leaf_model_int = 2) variable_weights Vector specifying sampling probability p covariates forest_dataset a_forest Shape parameter variance forest model (applicable) b_forest Scale parameter variance forest model (applicable) global_scale Global variance parameter cutpoint_grid_size (Optional) Number unique cutpoints consider (default: 500, currently used GFR = TRUE) keep_forest (Optional) Whether updated forest sample saved forest_samples. Default: T. gfr (Optional) Whether forest sampled using \"grow--root\" (GFR) algorithm. Default: T. pre_initialized (Optional) Whether leaves pre-initialized outside sampling loop (samples drawn). multi-forest implementations like BCF, true, though single-forest supervised learning implementation, can let C++ initialization. Default: F.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-basis-update-","dir":"Reference","previous_headings":"","what":"Method propagate_basis_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Propagates basis update (full/partial) residual iteratively () adding back previous prediction tree, (b) recomputing predictions tree (caching C++ side), (c) subtracting new predictions residual. useful cases basis (e.g. leaf regression) updated outside tree sampler (e.g. adaptive coding binary treatment BCF). basis updated, overall \"function\" represented tree model changed reflected residual next sampling loop run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_basis_update(dataset, outcome, active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions active_forest \"Active\" forest updated sampler iteration","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-residual-update-","dir":"Reference","previous_headings":"","what":"Method propagate_residual_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Update current state outcome (.e. partial residual) data subtracting current predictions tree. function run Outcome class's update_data method, overwrites partial residual entirely new stream outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_residual_update(residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"residual Outcome used sample forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Class that defines and samples a forest model — ForestModel","text":"Update alpha tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"alpha New value alpha used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Class that defines and samples a forest model — ForestModel","text":"Update beta tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"beta New value beta used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Class that defines and samples a forest model — ForestModel","text":"Update min_samples_leaf tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"min_samples_leaf New value min_samples_leaf used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Class that defines and samples a forest model — ForestModel","text":"Update max_depth tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"max_depth New value max_depth used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — ForestSamples","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_container_ptr External pointer C++ ForestContainer class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ForestSamples$new() ForestSamples$load_from_json() ForestSamples$append_from_json() ForestSamples$load_from_json_string() ForestSamples$append_from_json_string() ForestSamples$predict() ForestSamples$predict_raw() ForestSamples$predict_raw_single_forest() ForestSamples$predict_raw_single_tree() ForestSamples$set_root_leaves() ForestSamples$prepare_for_sampler() ForestSamples$adjust_residual() ForestSamples$save_json() ForestSamples$load_json() ForestSamples$num_samples() ForestSamples$num_trees() ForestSamples$leaf_dimension() ForestSamples$is_constant_leaf() ForestSamples$is_exponentiated() ForestSamples$add_forest_with_constant_leaves() ForestSamples$add_numeric_split_tree() ForestSamples$get_tree_leaves() ForestSamples$get_tree_split_counts() ForestSamples$get_forest_split_counts() ForestSamples$get_aggregate_split_counts() ForestSamples$get_granular_split_counts() ForestSamples$ensemble_tree_max_depth() ForestSamples$average_ensemble_max_depth() ForestSamples$average_max_depth() ForestSamples$num_forest_leaves() ForestSamples$sum_leaves_squared() ForestSamples$is_leaf_node() ForestSamples$is_numeric_split_node() ForestSamples$is_categorical_split_node() ForestSamples$parent_node() ForestSamples$left_child_node() ForestSamples$right_child_node() ForestSamples$node_depth() ForestSamples$node_split_index() ForestSamples$node_split_threshold() ForestSamples$node_split_categories() ForestSamples$node_leaf_values() ForestSamples$num_nodes() ForestSamples$num_leaves() ForestSamples$num_leaf_parents() ForestSamples$num_split_nodes() ForestSamples$nodes() ForestSamples$leaves() ForestSamples$delete_sample()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns samples ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array two-dimensional (number observations, number forest samples). case multivariate leaf regression, array three-dimension (number observations, leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-forest-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_forest()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_forest(forest_dataset, forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-tree-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific tree specific forest every observation forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_tree(forest_dataset, forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$set_root_leaves(forest_num, leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest sample within container. leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$adjust_residual(   dataset,   outcome,   forest_model,   requires_basis,   forest_num,   add )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction forest_num Index forest used update residuals add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-save-json-","dir":"Reference","previous_headings":"","what":"Method save_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Store trees metadata ForestDataset class json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$save_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name output json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-json-","dir":"Reference","previous_headings":"","what":"Method load_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Load trees metadata ensemble json file. Note trees metadata already present ForestDataset class overwritten.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name model input json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-samples-","dir":"Reference","previous_headings":"","what":"Method num_samples()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number samples ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sample count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number trees ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return output dimension trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return constant leaf status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return exponentiation status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-forest-with-constant-leaves-","dir":"Reference","previous_headings":"","what":"Method add_forest_with_constant_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add new -root ensemble container, leaves set value / vector provided","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_forest_with_constant_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"leaf_value Value (vector values) initialize root nodes tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_numeric_split_tree(   forest_num,   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree split tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_split_counts(forest_num, tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_forest_split_counts(forest_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-aggregate-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_aggregate_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, aggregated across ensembles trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_aggregate_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-granular-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_granular_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, reported separately ensemble tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_granular_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-ensemble-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method ensemble_tree_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum depth specific tree specific ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$ensemble_tree_max_depth(ensemble_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number tree_num Tree index within ensemble ensemble_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-ensemble-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_ensemble_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_ensemble_max_depth(ensemble_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-forest-leaves-","dir":"Reference","previous_headings":"","what":"Method num_forest_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_forest_leaves(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count leaves ensemble stored forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-sum-leaves-squared-","dir":"Reference","previous_headings":"","what":"Method sum_leaves_squared()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sum squared (raw) leaf values given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$sum_leaves_squared(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-leaf-node-","dir":"Reference","previous_headings":"","what":"Method is_leaf_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_leaf_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node leaf, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-numeric-split-node-","dir":"Reference","previous_headings":"","what":"Method is_numeric_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples numeric split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_numeric_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node numeric split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-categorical-split-node-","dir":"Reference","previous_headings":"","what":"Method is_categorical_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples categorical split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_categorical_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node categorical split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-parent-node-","dir":"Reference","previous_headings":"","what":"Method parent_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Parent node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$parent_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID parent node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-left-child-node-","dir":"Reference","previous_headings":"","what":"Method left_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Left child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$left_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID left child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-right-child-node-","dir":"Reference","previous_headings":"","what":"Method right_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Right child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$right_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID right child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-depth-","dir":"Reference","previous_headings":"","what":"Method node_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Depth given node given tree given forest ForestSamples object, 0 depth root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_depth(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-index-","dir":"Reference","previous_headings":"","what":"Method node_split_index()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Split index given node given tree given forest ForestSamples object. Returns -1 node leaf.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_index(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-threshold-","dir":"Reference","previous_headings":"","what":"Method node_split_threshold()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defines numeric split given node given tree given forest ForestSamples object. Returns Inf node leaf categorical split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_threshold(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-categories-","dir":"Reference","previous_headings":"","what":"Method node_split_categories()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array category indices define categorical split given node given tree given forest ForestSamples object. Returns c(Inf) node leaf numeric split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_categories(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Categories defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-leaf-values-","dir":"Reference","previous_headings":"","what":"Method node_leaf_values()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node value(s) given node given tree given forest ForestSamples object. Values stale node split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_leaf_values(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Vector (often univariate) leaf values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-nodes-","dir":"Reference","previous_headings":"","what":"Method num_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaves-","dir":"Reference","previous_headings":"","what":"Method num_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaves","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaf-parents-","dir":"Reference","previous_headings":"","what":"Method num_leaf_parents()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaf parents (split nodes two leaves children) given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaf_parents(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaf parents","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-split-nodes-","dir":"Reference","previous_headings":"","what":"Method num_split_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number split nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_split_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree split nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-nodes-","dir":"Reference","previous_headings":"","what":"Method nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array node indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaves-","dir":"Reference","previous_headings":"","what":"Method leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array leaf indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices leaf nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Modify ForestSamples object removing forest sample indexed `forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$delete_sample(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome / partial residual used to sample an additive model. — Outcome","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome class wrapper around vector (mutable) outcomes ML tasks (supervised learning, causal inference). additive tree ensemble sampled, outcome used sample specific model term \"partial residual\" consisting outcome minus predictions every model term (trees, group random effects, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"data_ptr External pointer C++ Outcome class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Outcome$new() Outcome$get_data() Outcome$add_vector() Outcome$subtract_vector() Outcome$update_data()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Create new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$new(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Extract raw data R underlying C++ object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$get_data()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"R vector containing (copy ) values Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data adding values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$add_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector added outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-subtract-vector-","dir":"Reference","previous_headings":"","what":"Method subtract_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data subtracting values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$subtract_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector subtracted outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-update-data-","dir":"Reference","previous_headings":"","what":"Method update_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data replacing element elements new_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$update_data(new_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new_vector Vector overwrite current data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps the ","title":"Class that wraps the ","text":"Coordinates various C++ random effects classes persists needed prediction / serialization","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps the ","text":"rfx_container_ptr External pointer C++ StochTree::RandomEffectsContainer class label_mapper_ptr External pointer C++ StochTree::LabelMapper class training_group_ids Unique vector group IDs training dataset","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps the ","text":"RandomEffectSamples$new() RandomEffectSamples$load_in_session() RandomEffectSamples$load_from_json() RandomEffectSamples$append_from_json() RandomEffectSamples$load_from_json_string() RandomEffectSamples$append_from_json_string() RandomEffectSamples$predict() RandomEffectSamples$extract_parameter_samples() RandomEffectSamples$delete_sample() RandomEffectSamples$extract_label_mapping()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps the ","text":"Create new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-in-session-","dir":"Reference","previous_headings":"","what":"Method load_in_session()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object \"-session\" R objects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_in_session(   num_components,   num_groups,   random_effects_tracker )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that wraps the ","text":"Predict random effects observation implied rfx_group_ids rfx_basis. random effects model \"intercept-\" rfx_basis vector ones size length(rfx_group_ids).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$predict(rfx_group_ids, rfx_basis = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"rfx_group_ids Indices random effects groups prediction set rfx_basis (Optional ) Basis used random effects prediction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"Matrix many rows observations provided many columns samples drawn model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-parameter-samples-","dir":"Reference","previous_headings":"","what":"Method extract_parameter_samples()","title":"Class that wraps the ","text":"Extract random effects parameters sampled. \"redundant parameterization\" Gelman et al (2008), includes four parameters: alpha (\"working parameter\" shared across every group), xi (\"group parameter\" sampled separately group), beta (product alpha xi, corresponds overall group-level random effects), sigma (group-independent prior variance component xi).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_parameter_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that wraps the ","text":"Modify RandomEffectsSamples object removing parameter samples index sample_num.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$delete_sample(sample_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"sample_num Index RFX sample removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-label-mapping-","dir":"Reference","previous_headings":"","what":"Method extract_label_mapping()","title":"Class that wraps the ","text":"Convert mapping group IDs random effect components indices C++ R native format","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_label_mapping()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List mapping group ID random effect components.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a random effects model — RandomEffectsDataset","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"dataset consists three matrices / vectors: group labels, bases, variance weights. Variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"data_ptr External pointer C++ RandomEffectsDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"RandomEffectsDataset$new() RandomEffectsDataset$num_observations() RandomEffectsDataset$has_group_labels() RandomEffectsDataset$has_basis() RandomEffectsDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Create new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$new(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Return number observations RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-group-labels-","dir":"Reference","previous_headings":"","what":"Method has_group_labels()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset group label indices","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_group_labels()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True group label vector loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"The core ","title":"The core ","text":"Stores current model state, prior parameters, procedures sampling conditional posterior parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The core ","text":"rfx_model_ptr External pointer C++ StochTree::RandomEffectsModel class num_groups Number groups random effects model num_components Number components (.e. dimension basis) random effects model","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The core ","text":"RandomEffectsModel$new() RandomEffectsModel$sample_random_effect() RandomEffectsModel$predict() RandomEffectsModel$set_working_parameter() RandomEffectsModel$set_group_parameters() RandomEffectsModel$set_working_parameter_cov() RandomEffectsModel$set_group_parameter_cov() RandomEffectsModel$set_variance_prior_shape() RandomEffectsModel$set_variance_prior_scale()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The core ","text":"Create new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$new(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-sample-random-effect-","dir":"Reference","previous_headings":"","what":"Method sample_random_effect()","title":"The core ","text":"Sample random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$sample_random_effect(   rfx_dataset,   residual,   rfx_tracker,   rfx_samples,   keep_sample,   global_variance,   rng )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset residual Object type Outcome rfx_tracker Object type RandomEffectsTracker rfx_samples Object type RandomEffectSamples keep_sample Whether sample retained rfx_samples. FALSE, state rfx_tracker updated, parameter values added sample container. Samples commonly discarded due burn-thinning. global_variance Scalar global variance parameter rng Object type CppRNG","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"The core ","text":"Predict (single sample ) random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$predict(rfx_dataset, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset rfx_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"Vector predictions size matching number observations rfx_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter()","title":"The core ","text":"Set value \"working parameter.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameters-","dir":"Reference","previous_headings":"","what":"Method set_group_parameters()","title":"The core ","text":"Set value \"group parameters.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameters(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter_cov()","title":"The core ","text":"Set value working parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_group_parameter_cov()","title":"The core ","text":"Set value group parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-shape-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_shape()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_shape(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-scale-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_scale()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_scale(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines a ","title":"Class that defines a ","text":"Stores mapping every observation group index, mapping group indices training sample observations available group, predictions observation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines a ","text":"rfx_tracker_ptr External pointer C++ StochTree::RandomEffectsTracker class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines a ","text":"RandomEffectsTracker$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines a ","text":"Create new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines a ","text":"","code":"RandomEffectsTracker$new(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines a ","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines a ","text":"new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the BART algorithm for supervised learning. — bart","title":"Run the BART algorithm for supervised learning. — bart","text":"Run BART algorithm supervised learning.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"bart(   X_train,   y_train,   leaf_basis_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   leaf_basis_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mean_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the BART algorithm for supervised learning. — bart","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). y_train Outcome modeled ensemble. leaf_basis_train (Optional) Bases used define regression model y ~ W leaf regression tree. default, BART assumes constant leaf node parameters, implicitly regressing constant basis ones (.e. y ~ 1). rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. leaf_basis_test (Optional) Test set bases used define \"sample\" evaluation data. test set optional, structure provided test set must match training set (.e. X_train leaf_basis_train provided, test set must consist X_test leaf_basis_test number columns). rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BART model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BART sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var(y_train), y_train possibly standardized outcome, set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mean_forest_params (Optional) list mean forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional mean model. Default: 200. num_trees = 0, conditional mean modeled using forest, function proceed num_trees > 0 variance forest. alpha Prior probability splitting tree depth 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, mean model. Default: 5. max_depth Maximum depth tree ensemble mean model. Default: 10. Can overridden -1 enforce depth limits trees. sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(leaf_basis_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. var_forest_leaf_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var(y_train))/num_trees, y_train possibly standardized outcome, set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the BART algorithm for supervised learning. — bart","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"Run Bayesian Causal Forest (BCF) algorithm regularized causal effect estimation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"bcf(   X_train,   Z_train,   y_train,   propensity_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   Z_test = NULL,   propensity_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mu_forest_params = list(),   tau_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). Z_train Vector (continuous binary) treatment assignments. y_train Outcome modeled ensemble. propensity_train (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. Z_test (Optional) Test set (continuous binary) treatment assignments. propensity_test (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BCF model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BCF sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var((y_train-mean(y_train))/sd(y_train)) set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). workaround wish provide custom weight propensity score include column X_train set propensity_covariate 'none' adjust keep_vars accordingly mu tau forests. propensity_covariate Whether include propensity score covariate either forests. Enter \"none\" neither, \"mu\" prognostic forest, \"tau\" treatment forest, \"\" forests. \"none\" propensity score provided, estimated (X_train, Z_train) using stochtree::bart(). Default: \"mu\". adaptive_coding Whether use \"adaptive coding\" scheme binary treatment variable coded manually (0,1) (-1,1) learned via parameters b_0 b_1 attach outcome model [b_0 (1-Z) + b_1 Z] tau(X). ignored Z binary. Default: TRUE. control_coding_init Initial value \"control\" group coding parameter. ignored Z binary. Default: -0.5. treated_coding_init Initial value \"treatment\" group coding parameter. ignored Z binary. Default: 0.5. rfx_prior_var Prior (diagonals ) covariance additive group-level random regression coefficients. Must vector length ncol(rfx_basis_train). Default: rep(1, ncol(rfx_basis_train)) random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mu_forest_params (Optional) list prognostic forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble prognostic forest. Default: 250. Must positive integer. alpha Prior probability splitting tree depth 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, prognostic forest. Default: 5. max_depth Maximum depth tree ensemble prognostic forest. Default: 10. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable prognostic forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. tau_forest_params (Optional) list treatment effect forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble treatment effect forest. Default: 50. Must positive integer. alpha Prior probability splitting tree depth 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.25. beta Exponent decreases split probabilities nodes depth > 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 3. min_samples_leaf Minimum allowable size leaf, terms training samples, treatment effect forest. Default: 5. max_depth Maximum depth tree ensemble treatment effect forest. Default: 5. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable treatment effect forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(Z_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. variance_forest_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var((y_train-mean(y_train))/sd(y_train)))/num_trees set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, X_test = X_test, Z_test = Z_test,                   propensity_test = pi_test) plot(rowMeans(bcf_model$mu_hat_test), mu_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(bcf_model$tau_hat_test), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Chipman, H., George, E., Hahn, R., McCulloch, R., Pratola, M. Sparapani, R. (2022). Bayesian Additive Regression Trees, Computational Approaches. Wiley StatsRef: Statistics Reference Online (eds N. Balakrishnan, T. Colton, B. Everitt, W. Piegorsch, F. Ruggeri J.L. Teugels). https://doi.org/10.1002/9781118445112.stat08288","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"calibrateInverseGammaErrorVariance(   y,   X,   W = NULL,   nu = 3,   quant = 0.9,   standardize = TRUE )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"y Outcome modeled using BART, BCF another nonparametric ensemble method. X Covariates used partition trees ensemble series ensemble. W (Optional) Basis used define \"leaf regression\" model decision tree. \"classic\" BART model assumes constant leaf parameter, equivalent \"leaf regression\" basis ones, though necessary pass vector ones, BART function. Default: NULL. nu shape parameter global error variance's IG prior. scale parameter Sparapani et al (2021) parameterization defined nu*lambda lambda output function. Default: 3. quant (Optional) Quantile inverse gamma prior distribution represented linear-regression-based overestimate sigma^2. Default: 0.9. standardize (Optional) Whether outcome standardized ((y-mean(y))/sd(y)) calibration lambda. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Value lambda determines scale parameter global error variance prior (sigma^2 ~ IG(nu,nu*lambda))","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) y <- 10*X[,1] - 20*X[,2] + rnorm(n) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y, X, nu = nu) sigma2hat <- mean(resid(lm(y~X))^2) mean(var(y)/rgamma(100000, nu, rate = nu*lambda) < sigma2hat) #> [1] 0.90021"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf indices — computeForestLeafIndices","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"Compute return vector representation forest's leaf predictions every observation dataset. vector \"row-major\" format can easily re-represented CSR sparse matrix: elements organized first n elements correspond leaf predictions n observations dataset first tree ensemble, next n elements correspond predictions second tree . \"data\" element corresponds uniquely mapped column index corresponds single leaf single tree (.e. tree 1 3 leaves, column indices range 0 2, tree 2's leaf indices begin 3, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"computeForestLeafIndices(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"List vectors. vector size num_obs * num_trees, num_obs = nrow(covariates) num_trees number trees relevant forest model_object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafIndices(bart_model, X, \"mean\") #>          [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>     [1,]    0    0    0    2    1    1    1    1    1     1 #>     [2,]    0    0    0    2    1    1    1    1    1     1 #>     [3,]    0    0    0    1    1    1    1    1    1     1 #>     [4,]    0    0    0    2    1    1    1    1    1     1 #>     [5,]    0    0    0    1    1    1    1    1    1     1 #>     [6,]    0    0    0    1    1    1    1    1    1     1 #>     [7,]    0    0    0    2    1    1    1    1    1     1 #>     [8,]    0    0    0    2    1    1    1    1    1     1 #>     [9,]    0    0    0    2    1    1    1    1    1     1 #>    [10,]    0    0    0    2    1    1    1    1    1     1 #>    [11,]    0    0    0    1    1    1    1    1    1     1 #>    [12,]    0    0    0    1    1    1    1    1    1     1 #>    [13,]    0    0    0    2    1    1    1    1    1     1 #>    [14,]    0    0    0    1    1    1    1    1    1     1 #>    [15,]    0    0    0    2    1    1    1    1    1     1 #>    [16,]    0    0    0    2    1    1    1    1    1     1 #>    [17,]    0    0    0    2    1    1    1    1    1     1 #>    [18,]    0    0    0    2    1    1    1    1    1     1 #>    [19,]    0    0    0    1    1    1    1    1    1     1 #>    [20,]    1    1    1    0    0    0    0    0    0     0 #>    [21,]    0    0    0    2    1    1    1    1    1     1 #>    [22,]    1    1    1    0    0    0    0    0    0     0 #>    [23,]    0    0    0    2    1    1    1    1    1     1 #>    [24,]    0    0    0    1    1    1    1    1    1     1 #>    [25,]    0    0    0    2    1    1    1    1    1     1 #>    [26,]    0    0    0    1    1    1    1    1    1     1 #>    [27,]    0    0    0    2    1    1    1    1    1     1 #>    [28,]    0    0    0    2    1    1    1    1    1     1 #>    [29,]    1    1    1    0    0    0    0    0    0     0 #>    [30,]    0    0    0    1    1    1    1    1    1     1 #>    [31,]    0    0    0    2    1    1    1    1    1     1 #>    [32,]    0    0    0    1    1    1    1    1    1     1 #>    [33,]    0    0    0    1    1    1    1    1    1     1 #>    [34,]    0    0    0    1    1    1    1    1    1     1 #>    [35,]    0    0    0    1    1    1    1    1    1     1 #>    [36,]    0    0    0    1    1    1    1    1    1     1 #>    [37,]    0    0    0    2    1    1    1    1    1     1 #>    [38,]    0    0    0    2    1    1    1    1    1     1 #>    [39,]    0    0    0    2    1    1    1    1    1     1 #>    [40,]    0    0    0    1    1    1    1    1    1     1 #>    [41,]    0    0    0    1    1    1    1    1    1     1 #>    [42,]    0    0    0    1    1    1    1    1    1     1 #>    [43,]    0    0    0    2    1    1    1    1    1     1 #>    [44,]    0    0    0    2    1    1    1    1    1     1 #>    [45,]    0    0    0    2    1    1    1    1    1     1 #>    [46,]    0    0    0    2    1    1    1    1    1     1 #>    [47,]    0    0    0    2    1    1    1    1    1     1 #>    [48,]    0    0    0    1    1    1    1    1    1     1 #>    [49,]    0    0    0    2    1    1    1    1    1     1 #>    [50,]    0    0    0    2    1    1    1    1    1     1 #>    [51,]    0    0    0    1    1    1    1    1    1     1 #>    [52,]    0    0    0    1    1    1    1    1    1     1 #>    [53,]    0    0    0    2    1    1    1    1    1     1 #>    [54,]    0    0    0    1    1    1    1    1    1     1 #>    [55,]    0    0    0    1    1    1    1    1    1     1 #>    [56,]    0    0    0    2    1    1    1    1    1     1 #>    [57,]    0    0    0    1    1    1    1    1    1     1 #>    [58,]    1    1    1    0    0    0    0    0    0     0 #>    [59,]    0    0    0    2    1    1    1    1    1     1 #>    [60,]    0    0    0    1    1    1    1    1    1     1 #>    [61,]    0    0    0    2    1    1    1    1    1     1 #>    [62,]    0    0    0    1    1    1    1    1    1     1 #>    [63,]    0    0    0    1    1    1    1    1    1     1 #>    [64,]    1    1    1    0    0    0    0    0    0     0 #>    [65,]    0    0    0    2    1    1    1    1    1     1 #>    [66,]    0    0    0    1    1    1    1    1    1     1 #>    [67,]    0    0    0    1    1    1    1    1    1     1 #>    [68,]    0    0    0    1    1    1    1    1    1     1 #>    [69,]    0    0    0    1    1    1    1    1    1     1 #>    [70,]    0    0    0    2    1    1    1    1    1     1 #>    [71,]    0    0    0    2    1    1    1    1    1     1 #>    [72,]    0    0    0    2    1    1    1    1    1     1 #>    [73,]    0    0    0    2    1    1    1    1    1     1 #>    [74,]    0    0    0    2    1    1    1    1    1     1 #>    [75,]    0    0    0    2    1    1    1    1    1     1 #>    [76,]    0    0    0    2    1    1    1    1    1     1 #>    [77,]    1    1    1    0    0    0    0    0    0     0 #>    [78,]    0    0    0    1    1    1    1    1    1     1 #>    [79,]    0    0    0    2    1    1    1    1    1     1 #>    [80,]    0    0    0    1    1    1    1    1    1     1 #>    [81,]    0    0    0    1    1    1    1    1    1     1 #>    [82,]    0    0    0    2    1    1    1    1    1     1 #>    [83,]    0    0    0    1    1    1    1    1    1     1 #>    [84,]    0    0    0    2    1    1    1    1    1     1 #>    [85,]    0    0    0    2    1    1    1    1    1     1 #>    [86,]    0    0    0    2    1    1    1    1    1     1 #>    [87,]    1    1    1    0    0    0    0    0    0     0 #>    [88,]    0    0    0    2    1    1    1    1    1     1 #>    [89,]    0    0    0    1    1    1    1    1    1     1 #>    [90,]    0    0    0    2    1    1    1    1    1     1 #>    [91,]    0    0    0    1    1    1    1    1    1     1 #>    [92,]    0    0    0    2    1    1    1    1    1     1 #>    [93,]    0    0    0    1    1    1    1    1    1     1 #>    [94,]    0    0    0    2    1    1    1    1    1     1 #>    [95,]    0    0    0    2    1    1    1    1    1     1 #>    [96,]    0    0    0    2    1    1    1    1    1     1 #>    [97,]    0    0    0    2    1    1    1    1    1     1 #>    [98,]    0    0    0    1    1    1    1    1    1     1 #>    [99,]    0    0    0    1    1    1    1    1    1     1 #>   [100,]    0    0    0    2    1    1    1    1    1     1 #>   [101,]    2    3    3    3    2    2    2    2    2     2 #>   [102,]    2    3    3    3    2    2    2    2    2     2 #>   [103,]    2    2    2    5    3    3    3    3    2     2 #>   [104,]    2    3    3    3    2    2    2    2    2     2 #>   [105,]    2    3    3    3    2    2    2    2    2     2 #>   [106,]    2    2    2    4    3    3    3    3    2     3 #>   [107,]    2    3    3    3    2    2    2    2    2     2 #>   [108,]    2    3    3    3    2    2    2    2    2     3 #>   [109,]    2    3    3    3    2    2    2    2    2     3 #>   [110,]    2    3    3    3    2    2    2    2    2     2 #>   [111,]    2    3    3    3    2    2    2    2    2     2 #>   [112,]    2    3    3    3    2    2    2    2    2     3 #>   [113,]    2    3    3    3    2    2    2    2    2     2 #>   [114,]    2    3    3    3    2    2    2    2    2     2 #>   [115,]    2    3    3    3    2    2    2    2    2     3 #>   [116,]    2    3    3    3    2    2    2    2    2     2 #>   [117,]    2    3    3    3    2    2    2    2    2     2 #>   [118,]    2    3    3    3    2    2    2    2    2     2 #>   [119,]    2    2    2    4    3    3    3    3    2     2 #>   [120,]    2    3    3    3    2    2    2    2    2     2 #>   [121,]    2    3    3    3    2    2    2    2    2     2 #>   [122,]    2    3    3    3    2    2    2    2    2     2 #>   [123,]    2    3    3    3    2    2    2    2    2     2 #>   [124,]    2    3    3    3    2    2    2    2    2     2 #>   [125,]    2    3    3    3    2    2    2    2    2     2 #>   [126,]    2    3    3    3    2    2    2    2    2     3 #>   [127,]    2    3    3    3    2    2    2    2    2     2 #>   [128,]    2    3    3    3    2    2    2    2    2     2 #>   [129,]    2    3    3    3    2    2    2    2    2     2 #>   [130,]    2    3    3    3    2    2    2    2    2     2 #>   [131,]    2    3    3    3    2    2    2    2    2     2 #>   [132,]    2    3    3    3    2    2    2    2    2     2 #>   [133,]    2    3    3    3    2    2    2    2    2     2 #>   [134,]    2    2    2    4    3    3    3    3    2     2 #>   [135,]    2    3    3    3    2    2    2    2    2     2 #>   [136,]    2    3    3    3    2    2    2    2    2     2 #>   [137,]    2    2    2    5    3    3    3    3    2     2 #>   [138,]    2    2    2    4    3    3    3    3    2     2 #>   [139,]    2    3    3    3    2    2    2    2    2     2 #>   [140,]    2    3    3    3    2    2    2    2    2     2 #>   [141,]    2    3    3    3    2    2    2    2    2     2 #>   [142,]    2    3    3    3    2    2    2    2    2     2 #>   [143,]    2    3    3    3    2    2    2    2    2     3 #>   [144,]    2    3    3    3    2    2    2    2    2     2 #>   [145,]    2    2    2    5    3    3    3    3    2     2 #>   [146,]    2    3    3    3    2    2    2    2    2     3 #>   [147,]    2    3    3    3    2    2    2    2    2     2 #>   [148,]    2    3    3    3    2    2    2    2    2     2 #>   [149,]    2    2    2    4    3    3    3    3    2     2 #>   [150,]    2    3    3    3    2    2    2    2    2     2 #>   [151,]    2    3    3    3    2    2    2    2    2     3 #>   [152,]    2    2    2    5    3    3    3    3    2     2 #>   [153,]    2    3    3    3    2    2    2    2    2     2 #>   [154,]    2    3    3    3    2    2    2    2    2     2 #>   [155,]    2    3    3    3    2    2    2    2    2     2 #>   [156,]    2    3    3    3    2    2    2    2    2     3 #>   [157,]    2    3    3    3    2    2    2    2    2     2 #>   [158,]    2    3    3    3    2    2    2    2    2     2 #>   [159,]    2    3    3    3    2    2    2    2    2     2 #>   [160,]    2    3    3    3    2    2    2    2    2     2 #>   [161,]    2    3    3    3    2    2    2    2    2     3 #>   [162,]    2    3    3    3    2    2    2    2    2     2 #>   [163,]    2    3    3    3    2    2    2    2    2     2 #>   [164,]    2    2    2    5    3    3    3    3    2     3 #>   [165,]    2    3    3    3    2    2    2    2    2     2 #>   [166,]    2    3    3    3    2    2    2    2    2     3 #>   [167,]    2    3    3    3    2    2    2    2    2     2 #>   [168,]    2    2    2    5    3    3    3    3    2     3 #>   [169,]    2    3    3    3    2    2    2    2    2     2 #>   [170,]    2    3    3    3    2    2    2    2    2     2 #>   [171,]    2    3    3    3    2    2    2    2    2     2 #>   [172,]    2    2    2    4    3    3    3    3    2     2 #>   [173,]    2    3    3    3    2    2    2    2    2     2 #>   [174,]    2    3    3    3    2    2    2    2    2     2 #>   [175,]    2    3    3    3    2    2    2    2    2     2 #>   [176,]    2    3    3    3    2    2    2    2    2     3 #>   [177,]    2    3    3    3    2    2    2    2    2     2 #>   [178,]    2    3    3    3    2    2    2    2    2     2 #>   [179,]    2    3    3    3    2    2    2    2    2     2 #>   [180,]    2    3    3    3    2    2    2    2    2     2 #>   [181,]    2    3    3    3    2    2    2    2    2     2 #>   [182,]    2    3    3    3    2    2    2    2    2     2 #>   [183,]    2    3    3    3    2    2    2    2    2     2 #>   [184,]    2    3    3    3    2    2    2    2    2     2 #>   [185,]    2    3    3    3    2    2    2    2    2     2 #>   [186,]    2    3    3    3    2    2    2    2    2     2 #>   [187,]    2    3    3    3    2    2    2    2    2     2 #>   [188,]    2    3    3    3    2    2    2    2    2     2 #>   [189,]    2    3    3    3    2    2    2    2    2     2 #>   [190,]    2    3    3    3    2    2    2    2    2     2 #>   [191,]    2    3    3    3    2    2    2    2    2     2 #>   [192,]    2    3    3    3    2    2    2    2    2     2 #>   [193,]    2    3    3    3    2    2    2    2    2     2 #>   [194,]    2    3    3    3    2    2    2    2    2     3 #>   [195,]    2    3    3    3    2    2    2    2    2     2 #>   [196,]    2    2    2    5    3    3    3    3    2     2 #>   [197,]    2    2    2    5    3    3    3    3    2     2 #>   [198,]    2    3    3    3    2    2    2    2    2     2 #>   [199,]    2    3    3    3    2    2    2    2    2     2 #>   [200,]    2    3    3    3    2    2    2    2    2     2 #>   [201,]    4    5    5    7    5    5    5    5    4     5 #>   [202,]    4    5    5    7    5    5    5    5    4     5 #>   [203,]    4    5    5    7    5    5    5    5    4     5 #>   [204,]    3    4    4    6    4    4    4    4    3     4 #>   [205,]    4    5    5    7    5    5    5    5    4     5 #>   [206,]    4    5    5    7    5    5    5    5    4     5 #>   [207,]    4    5    5    7    5    5    5    5    4     5 #>   [208,]    3    4    4    6    4    4    4    4    3     4 #>   [209,]    3    4    4    6    4    4    4    4    3     4 #>   [210,]    3    4    4    6    4    4    4    4    3     4 #>   [211,]    4    5    5    7    5    5    5    5    4     5 #>   [212,]    4    5    5    7    5    5    5    5    4     5 #>   [213,]    4    5    5    7    5    5    5    5    4     5 #>   [214,]    4    5    5    7    5    5    5    5    4     5 #>   [215,]    4    5    5    7    5    5    5    5    4     5 #>   [216,]    4    5    5    7    5    5    5    5    4     5 #>   [217,]    4    5    5    7    5    5    5    5    4     5 #>   [218,]    4    5    5    7    5    5    5    5    4     5 #>   [219,]    4    5    5    7    5    5    5    5    4     5 #>   [220,]    4    5    5    7    5    5    5    5    4     5 #>   [221,]    4    5    5    7    5    5    5    5    4     5 #>   [222,]    4    5    5    7    5    5    5    5    4     5 #>   [223,]    4    5    5    7    5    5    5    5    4     5 #>   [224,]    4    5    5    7    5    5    5    5    4     5 #>   [225,]    4    5    5    7    5    5    5    5    4     5 #>   [226,]    4    5    5    7    5    5    5    5    4     5 #>   [227,]    4    5    5    7    5    5    5    5    4     5 #>   [228,]    4    5    5    7    5    5    5    5    4     5 #>   [229,]    4    5    5    7    5    5    5    5    4     5 #>   [230,]    4    5    5    7    5    5    5    5    4     5 #>   [231,]    4    5    5    7    5    5    5    5    4     5 #>   [232,]    4    5    5    7    5    5    5    5    4     5 #>   [233,]    4    5    5    7    5    5    5    5    4     5 #>   [234,]    4    5    5    7    5    5    5    5    4     5 #>   [235,]    4    5    5    7    5    5    5    5    4     5 #>   [236,]    4    5    5    7    5    5    5    5    4     5 #>   [237,]    4    5    5    7    5    5    5    5    4     5 #>   [238,]    4    5    5    7    5    5    5    5    4     5 #>   [239,]    4    5    5    7    5    5    5    5    4     5 #>   [240,]    4    5    5    7    5    5    5    5    4     5 #>   [241,]    4    5    5    7    5    5    5    5    4     5 #>   [242,]    4    5    5    7    5    5    5    5    4     5 #>   [243,]    3    4    4    6    4    4    4    4    3     4 #>   [244,]    4    5    5    7    5    5    5    5    4     5 #>   [245,]    4    5    5    7    5    5    5    5    4     5 #>   [246,]    4    5    5    7    5    5    5    5    4     5 #>   [247,]    4    5    5    7    5    5    5    5    4     5 #>   [248,]    4    5    5    7    5    5    5    5    4     5 #>   [249,]    4    5    5    7    5    5    5    5    4     5 #>   [250,]    4    5    5    7    5    5    5    5    4     5 #>   [251,]    3    4    4    6    4    4    4    4    3     4 #>   [252,]    4    5    5    7    5    5    5    5    4     5 #>   [253,]    4    5    5    7    5    5    5    5    4     5 #>   [254,]    4    5    5    7    5    5    5    5    4     5 #>   [255,]    4    5    5    7    5    5    5    5    4     5 #>   [256,]    4    5    5    7    5    5    5    5    4     5 #>   [257,]    4    5    5    7    5    5    5    5    4     5 #>   [258,]    4    5    5    7    5    5    5    5    4     5 #>   [259,]    4    5    5    7    5    5    5    5    4     5 #>   [260,]    3    4    4    6    4    4    4    4    3     4 #>   [261,]    4    5    5    7    5    5    5    5    4     5 #>   [262,]    4    5    5    7    5    5    5    5    4     5 #>   [263,]    4    5    5    7    5    5    5    5    4     5 #>   [264,]    4    5    5    7    5    5    5    5    4     5 #>   [265,]    4    5    5    7    5    5    5    5    4     5 #>   [266,]    4    5    5    7    5    5    5    5    4     5 #>   [267,]    3    4    4    6    4    4    4    4    3     4 #>   [268,]    4    5    5    7    5    5    5    5    4     5 #>   [269,]    4    5    5    7    5    5    5    5    4     5 #>   [270,]    4    5    5    7    5    5    5    5    4     5 #>   [271,]    4    5    5    7    5    5    5    5    4     5 #>   [272,]    4    5    5    7    5    5    5    5    4     5 #>   [273,]    4    5    5    7    5    5    5    5    4     5 #>   [274,]    4    5    5    7    5    5    5    5    4     5 #>   [275,]    4    5    5    7    5    5    5    5    4     5 #>   [276,]    4    5    5    7    5    5    5    5    4     5 #>   [277,]    4    5    5    7    5    5    5    5    4     5 #>   [278,]    4    5    5    7    5    5    5    5    4     5 #>   [279,]    4    5    5    7    5    5    5    5    4     5 #>   [280,]    4    5    5    7    5    5    5    5    4     5 #>   [281,]    4    5    5    7    5    5    5    5    4     5 #>   [282,]    4    5    5    7    5    5    5    5    4     5 #>   [283,]    4    5    5    7    5    5    5    5    4     5 #>   [284,]    4    5    5    7    5    5    5    5    4     5 #>   [285,]    3    4    4    6    4    4    4    4    3     4 #>   [286,]    4    5    5    7    5    5    5    5    4     5 #>   [287,]    4    5    5    7    5    5    5    5    4     5 #>   [288,]    4    5    5    7    5    5    5    5    4     5 #>   [289,]    4    5    5    7    5    5    5    5    4     5 #>   [290,]    4    5    5    7    5    5    5    5    4     5 #>   [291,]    3    4    4    6    4    4    4    4    3     4 #>   [292,]    4    5    5    7    5    5    5    5    4     5 #>   [293,]    4    5    5    7    5    5    5    5    4     5 #>   [294,]    4    5    5    7    5    5    5    5    4     5 #>   [295,]    3    4    4    6    4    4    4    4    3     4 #>   [296,]    4    5    5    7    5    5    5    5    4     5 #>   [297,]    4    5    5    7    5    5    5    5    4     5 #>   [298,]    4    5    5    7    5    5    5    5    4     5 #>   [299,]    4    5    5    7    5    5    5    5    4     5 #>   [300,]    4    5    5    7    5    5    5    5    4     5 #>   [301,]    5    6    6    8    6    6    7    7    6     7 #>   [302,]    5    6    6    8    6    6    8    8    6     7 #>   [303,]    5    6    6    8    6    6    8    8    6     7 #>   [304,]    6    7    7    9    7    7    6    6    5     6 #>   [305,]    5    6    6    8    6    6    7    7    6     7 #>   [306,]    5    6    6    8    6    6    8    8    6     7 #>   [307,]    6    7    7    9    7    7    6    6    5     6 #>   [308,]    5    6    6    8    6    6    7    7    6     7 #>   [309,]    5    6    6    8    6    6    7    7    6     7 #>   [310,]    6    7    7    9    7    7    6    6    5     6 #>   [311,]    5    6    6    8    6    6    7    7    6     7 #>   [312,]    5    6    6    8    6    6    8    8    6     7 #>   [313,]    5    6    6    8    6    6    7    7    6     7 #>   [314,]    5    6    6    8    6    6    7    7    6     7 #>   [315,]    5    6    6    8    6    6    7    7    6     7 #>   [316,]    6    7    7    9    7    7    6    6    5     6 #>   [317,]    5    6    6    8    6    6    7    7    6     7 #>   [318,]    5    6    6    8    6    6    8    8    6     7 #>   [319,]    5    6    6    8    6    6    8    8    6     7 #>   [320,]    6    7    7    9    7    7    6    6    5     6 #>   [321,]    5    6    6    8    6    6    7    7    6     7 #>   [322,]    5    6    6    8    6    6    7    7    6     7 #>   [323,]    5    6    6    8    6    6    7    7    6     7 #>   [324,]    6    7    7    9    7    7    6    6    5     6 #>   [325,]    6    7    7    9    7    7    6    6    5     6 #>   [326,]    5    6    6    8    6    6    7    7    6     7 #>   [327,]    5    6    6    8    6    6    7    7    6     7 #>   [328,]    6    7    7    9    7    7    6    6    5     6 #>   [329,]    5    6    6    8    6    6    7    7    6     7 #>   [330,]    5    6    6    8    6    6    7    7    6     7 #>   [331,]    5    6    6    8    6    6    7    7    6     7 #>   [332,]    5    6    6    8    6    6    7    7    6     7 #>   [333,]    5    6    6    8    6    6    8    8    6     7 #>   [334,]    5    6    6    8    6    6    8    8    6     7 #>   [335,]    5    6    6    8    6    6    7    7    6     7 #>   [336,]    5    6    6    8    6    6    7    7    6     7 #>   [337,]    5    6    6    8    6    6    7    7    6     7 #>   [338,]    5    6    6    8    6    6    7    7    6     7 #>   [339,]    6    7    7    9    7    7    6    6    5     6 #>   [340,]    5    6    6    8    6    6    7    7    6     7 #>   [341,]    5    6    6    8    6    6    7    7    6     7 #>   [342,]    5    6    6    8    6    6    7    7    6     7 #>   [343,]    5    6    6    8    6    6    7    7    6     7 #>   [344,]    5    6    6    8    6    6    7    7    6     7 #>   [345,]    5    6    6    8    6    6    7    7    6     7 #>   [346,]    5    6    6    8    6    6    7    7    6     7 #>   [347,]    5    6    6    8    6    6    7    7    6     7 #>   [348,]    5    6    6    8    6    6    7    7    6     7 #>   [349,]    5    6    6    8    6    6    7    7    6     7 #>   [350,]    6    7    7    9    7    7    6    6    5     6 #>   [351,]    5    6    6    8    6    6    7    7    6     7 #>   [352,]    6    7    7    9    7    7    6    6    5     6 #>   [353,]    5    6    6    8    6    6    7    7    6     7 #>   [354,]    6    7    7    9    7    7    6    6    5     6 #>   [355,]    5    6    6    8    6    6    7    7    6     7 #>   [356,]    5    6    6    8    6    6    7    7    6     7 #>   [357,]    5    6    6    8    6    6    7    7    6     7 #>   [358,]    5    6    6    8    6    6    7    7    6     7 #>   [359,]    5    6    6    8    6    6    7    7    6     7 #>   [360,]    5    6    6    8    6    6    8    8    6     7 #>   [361,]    5    6    6    8    6    6    7    7    6     7 #>   [362,]    5    6    6    8    6    6    7    7    6     7 #>   [363,]    5    6    6    8    6    6    7    7    6     7 #>   [364,]    5    6    6    8    6    6    7    7    6     7 #>   [365,]    5    6    6    8    6    6    8    8    6     7 #>   [366,]    5    6    6    8    6    6    7    7    6     7 #>   [367,]    5    6    6    8    6    6    7    7    6     7 #>   [368,]    5    6    6    8    6    6    7    7    6     7 #>   [369,]    5    6    6    8    6    6    7    7    6     7 #>   [370,]    5    6    6    8    6    6    8    8    6     7 #>   [371,]    5    6    6    8    6    6    8    8    6     7 #>   [372,]    5    6    6    8    6    6    7    7    6     7 #>   [373,]    6    7    7    9    7    7    6    6    5     6 #>   [374,]    5    6    6    8    6    6    7    7    6     7 #>   [375,]    5    6    6    8    6    6    7    7    6     7 #>   [376,]    6    7    7    9    7    7    6    6    5     6 #>   [377,]    5    6    6    8    6    6    7    7    6     7 #>   [378,]    5    6    6    8    6    6    7    7    6     7 #>   [379,]    5    6    6    8    6    6    7    7    6     7 #>   [380,]    5    6    6    8    6    6    7    7    6     7 #>   [381,]    5    6    6    8    6    6    7    7    6     7 #>   [382,]    5    6    6    8    6    6    7    7    6     7 #>   [383,]    5    6    6    8    6    6    7    7    6     7 #>   [384,]    5    6    6    8    6    6    8    8    6     7 #>   [385,]    5    6    6    8    6    6    7    7    6     7 #>   [386,]    6    7    7    9    7    7    6    6    5     6 #>   [387,]    5    6    6    8    6    6    7    7    6     7 #>   [388,]    5    6    6    8    6    6    7    7    6     7 #>   [389,]    5    6    6    8    6    6    7    7    6     7 #>   [390,]    5    6    6    8    6    6    7    7    6     7 #>   [391,]    6    7    7    9    7    7    6    6    5     6 #>   [392,]    5    6    6    8    6    6    7    7    6     7 #>   [393,]    5    6    6    8    6    6    8    8    6     7 #>   [394,]    5    6    6    8    6    6    7    7    6     7 #>   [395,]    5    6    6    8    6    6    7    7    6     7 #>   [396,]    5    6    6    8    6    6    7    7    6     7 #>   [397,]    5    6    6    8    6    6    8    8    6     7 #>   [398,]    5    6    6    8    6    6    8    8    6     7 #>   [399,]    5    6    6    8    6    6    7    7    6     7 #>   [400,]    5    6    6    8    6    6    7    7    6     7 #>   [401,]    8    9    9   11    9    9    9   10    8     9 #>   [402,]    8    9    9   11    9    9    9   10    8     9 #>   [403,]    7    8    8   10    8    8    9    9    7     8 #>   [404,]    8    9    9   11    9    9    9   10    8     9 #>   [405,]    7    8    8   10    8    8    9   10    8     9 #>   [406,]    7    8    8   10    8    8    9    9    7     8 #>   [407,]    8    9    9   11    9    9    9    9    7     8 #>   [408,]    8    9    9   11    9    9    9   10    8     9 #>   [409,]    8    9    9   11    9    9    9   10    8     9 #>   [410,]    8    9    9   11    9    9    9   10    8     9 #>   [411,]    7    8    8   10    8    8    9   10    8     9 #>   [412,]    7    8    8   10    8    8    9   10    8     9 #>   [413,]    8    9    9   11    9    9    9   10    8     9 #>   [414,]    7    8    8   10    8    8    9   10    8     9 #>   [415,]    8    9    9   11    9    9    9   10    8     9 #>   [416,]    8    9    9   11    9    9    9   10    8     9 #>   [417,]    8    9    9   11    9    9    9   10    8     9 #>   [418,]    8    9    9   11    9    9    9   10    8     9 #>   [419,]    7    8    8   10    8    8    9   10    8     9 #>   [420,]    7    8    8   10    8    8    9    9    7     8 #>   [421,]    8    9    9   11    9    9    9    9    7     8 #>   [422,]    7    8    8   10    8    8    9   10    8     9 #>   [423,]    8    9    9   11    9    9    9    9    7     8 #>   [424,]    7    8    8   10    8    8    9   10    8     9 #>   [425,]    8    9    9   11    9    9    9    9    7     8 #>   [426,]    7    8    8   10    8    8    9   10    8     9 #>   [427,]    8    9    9   11    9    9    9   10    8     9 #>   [428,]    8    9    9   11    9    9    9   10    8     9 #>   [429,]    7    8    8   10    8    8    9   10    8     9 #>   [430,]    7    8    8   10    8    8    9   10    8     9 #>   [431,]    8    9    9   11    9    9    9   10    8     9 #>   [432,]    7    8    8   10    8    8    9   10    8     9 #>   [433,]    7    8    8   10    8    8    9   10    8     9 #>   [434,]    7    8    8   10    8    8    9    9    7     8 #>   [435,]    7    8    8   10    8    8    9    9    7     8 #>   [436,]    7    8    8   10    8    8    9   10    8     9 #>   [437,]    8    9    9   11    9    9    9    9    7     8 #>   [438,]    8    9    9   11    9    9    9   10    8     9 #>   [439,]    8    9    9   11    9    9    9   10    8     9 #>   [440,]    7    8    8   10    8    8    9   10    8     9 #>   [441,]    7    8    8   10    8    8    9   10    8     9 #>   [442,]    7    8    8   10    8    8    9    9    7     8 #>   [443,]    8    9    9   11    9    9    9   10    8     9 #>   [444,]    8    9    9   11    9    9    9    9    7     8 #>   [445,]    8    9    9   11    9    9    9   10    8     9 #>   [446,]    8    9    9   11    9    9    9   10    8     9 #>   [447,]    8    9    9   11    9    9    9   10    8     9 #>   [448,]    7    8    8   10    8    8    9   10    8     9 #>   [449,]    8    9    9   11    9    9    9   10    8     9 #>   [450,]    8    9    9   11    9    9    9   10    8     9 #>   [451,]    7    8    8   10    8    8    9   10    8     9 #>   [452,]    7    8    8   10    8    8    9   10    8     9 #>   [453,]    8    9    9   11    9    9    9    9    7     8 #>   [454,]    7    8    8   10    8    8    9    9    7     8 #>   [455,]    7    8    8   10    8    8    9    9    7     8 #>   [456,]    8    9    9   11    9    9    9    9    7     8 #>   [457,]    7    8    8   10    8    8    9    9    7     8 #>   [458,]    7    8    8   10    8    8    9   10    8     9 #>   [459,]    8    9    9   11    9    9    9   10    8     9 #>   [460,]    7    8    8   10    8    8    9   10    8     9 #>   [461,]    8    9    9   11    9    9    9   10    8     9 #>   [462,]    7    8    8   10    8    8    9   10    8     9 #>   [463,]    7    8    8   10    8    8    9   10    8     9 #>   [464,]    8    9    9   11    9    9    9    9    7     8 #>   [465,]    8    9    9   11    9    9    9    9    7     8 #>   [466,]    7    8    8   10    8    8    9   10    8     9 #>   [467,]    7    8    8   10    8    8    9   10    8     9 #>   [468,]    7    8    8   10    8    8    9   10    8     9 #>   [469,]    7    8    8   10    8    8    9   10    8     9 #>   [470,]    8    9    9   11    9    9    9   10    8     9 #>   [471,]    8    9    9   11    9    9    9   10    8     9 #>   [472,]    8    9    9   11    9    9    9   10    8     9 #>   [473,]    8    9    9   11    9    9    9    9    7     8 #>   [474,]    8    9    9   11    9    9    9    9    7     8 #>   [475,]    8    9    9   11    9    9    9   10    8     9 #>   [476,]    8    9    9   11    9    9    9   10    8     9 #>   [477,]    8    9    9   11    9    9    9   10    8     9 #>   [478,]    7    8    8   10    8    8    9   10    8     9 #>   [479,]    8    9    9   11    9    9    9   10    8     9 #>   [480,]    7    8    8   10    8    8    9    9    7     8 #>   [481,]    7    8    8   10    8    8    9   10    8     9 #>   [482,]    8    9    9   11    9    9    9    9    7     8 #>   [483,]    7    8    8   10    8    8    9   10    8     9 #>   [484,]    8    9    9   11    9    9    9    9    7     8 #>   [485,]    8    9    9   11    9    9    9    9    7     8 #>   [486,]    8    9    9   11    9    9    9    9    7     8 #>   [487,]    8    9    9   11    9    9    9   10    8     9 #>   [488,]    8    9    9   11    9    9    9    9    7     8 #>   [489,]    7    8    8   10    8    8    9    9    7     8 #>   [490,]    8    9    9   11    9    9    9   10    8     9 #>   [491,]    7    8    8   10    8    8    9   10    8     9 #>   [492,]    8    9    9   11    9    9    9   10    8     9 #>   [493,]    7    8    8   10    8    8    9   10    8     9 #>   [494,]    8    9    9   11    9    9    9    9    7     8 #>   [495,]    8    9    9   11    9    9    9   10    8     9 #>   [496,]    8    9    9   11    9    9    9   10    8     9 #>   [497,]    7    8    8   10    8    8    9   10    8     9 #>   [498,]    7    8    8   10    8    8    9    9    7     8 #>   [499,]    7    8    8   10    8    8    9    9    7     8 #>   [500,]    8    9    9   11    9    9    9   10    8     9 #>   [501,]   10   11   11   13   11   10   12   14   11    12 #>   [502,]   10   11   11   13   11   10   12   13   11    12 #>   [503,]    9   10   10   12   10   12   10   11    9    10 #>   [504,]   10   11   11   13   11   10   12   13   11    12 #>   [505,]   10   11   11   13   11   10   12   13   11    12 #>   [506,]    9   10   10   12   10   13   11   12   10    11 #>   [507,]   10   11   12   14   12   11   12   13   11    12 #>   [508,]   10   11   11   13   11   10   12   13   11    12 #>   [509,]   10   11   11   13   11   10   12   14   11    12 #>   [510,]   10   11   12   14   12   11   12   13   11    12 #>   [511,]    9   10   10   12   10   13   11   12   10    11 #>   [512,]    9   10   10   12   10   13   11   12   10    11 #>   [513,]   10   11   11   13   11   10   12   14   11    12 #>   [514,]    9   10   10   12   10   13   11   12   10    11 #>   [515,]   10   11   11   13   11   10   12   13   11    12 #>   [516,]   10   11   12   14   12   11   12   13   11    12 #>   [517,]   10   11   11   13   11   10   12   14   11    12 #>   [518,]   10   11   11   13   11   10   12   14   11    12 #>   [519,]    9   10   10   12   10   12   10   11    9    10 #>   [520,]    9   10   10   12   10   13   11   12   10    11 #>   [521,]   10   11   11   13   11   10   12   13   11    12 #>   [522,]    9   10   10   12   10   12   10   11    9    10 #>   [523,]   10   11   11   13   11   10   12   13   11    12 #>   [524,]    9   10   10   12   10   12   10   11    9    10 #>   [525,]   10   11   11   13   11   10   12   13   11    12 #>   [526,]    9   10   10   12   10   13   11   12   10    11 #>   [527,]   10   11   11   13   11   10   12   14   11    12 #>   [528,]   10   11   12   14   12   11   12   14   11    12 #>   [529,]    9   10   10   12   10   13   11   12   10    11 #>   [530,]    9   10   10   12   10   12   10   11    9    10 #>   [531,]   10   11   11   13   11   10   12   13   11    12 #>   [532,]    9   10   10   12   10   12   10   11    9    10 #>   [533,]   10   11   11   13   11   10   12   14   11    12 #>   [534,]    9   10   10   12   10   12   10   11    9    10 #>   [535,]   10   11   11   13   11   10   12   13   11    12 #>   [536,]    9   10   10   12   10   12   10   11    9    10 #>   [537,]   10   11   11   13   11   10   12   13   11    12 #>   [538,]   10   11   11   13   11   10   12   14   11    12 #>   [539,]   10   11   11   13   11   10   12   14   11    12 #>   [540,]    9   10   10   12   10   12   10   11    9    10 #>   [541,]    9   10   10   12   10   13   11   12   10    11 #>   [542,]    9   10   10   12   10   13   11   12   10    11 #>   [543,]   10   11   11   13   11   10   12   13   11    12 #>   [544,]   10   11   11   13   11   10   12   13   11    12 #>   [545,]   10   11   11   13   11   10   12   13   11    12 #>   [546,]   10   11   11   13   11   10   12   13   11    12 #>   [547,]   10   11   11   13   11   10   12   13   11    12 #>   [548,]    9   10   10   12   10   13   11   12   10    11 #>   [549,]   10   11   11   13   11   10   12   13   11    12 #>   [550,]   10   11   12   14   12   11   12   13   11    12 #>   [551,]    9   10   10   12   10   13   11   12   10    11 #>   [552,]   10   11   12   14   12   11   12   13   11    12 #>   [553,]   10   11   11   13   11   10   12   14   11    12 #>   [554,]    9   10   10   12   10   12   10   11    9    10 #>   [555,]    9   10   10   12   10   13   11   12   10    11 #>   [556,]   10   11   11   13   11   10   12   14   11    12 #>   [557,]   10   11   11   13   11   10   12   13   11    12 #>   [558,]   10   11   11   13   11   10   12   14   11    12 #>   [559,]   10   11   11   13   11   10   12   13   11    12 #>   [560,]    9   10   10   12   10   13   11   12   10    11 #>   [561,]   10   11   11   13   11   10   12   13   11    12 #>   [562,]    9   10   10   12   10   12   10   11    9    10 #>   [563,]    9   10   10   12   10   13   11   12   10    11 #>   [564,]   10   11   11   13   11   10   12   13   11    12 #>   [565,]   10   11   11   13   11   10   12   14   11    12 #>   [566,]    9   10   10   12   10   13   11   12   10    11 #>   [567,]    9   10   10   12   10   13   11   12   10    11 #>   [568,]    9   10   10   12   10   13   11   12   10    11 #>   [569,]    9   10   10   12   10   13   11   12   10    11 #>   [570,]   10   11   11   13   11   10   12   14   11    12 #>   [571,]   10   11   11   13   11   10   12   13   11    12 #>   [572,]   10   11   11   13   11   10   12   13   11    12 #>   [573,]   10   11   11   13   11   10   12   13   11    12 #>   [574,]   10   11   11   13   11   10   12   13   11    12 #>   [575,]   10   11   11   13   11   10   12   13   11    12 #>   [576,]   10   11   12   14   12   11   12   13   11    12 #>   [577,]   10   11   11   13   11   10   12   14   11    12 #>   [578,]    9   10   10   12   10   13   11   12   10    11 #>   [579,]   10   11   11   13   11   10   12   14   11    12 #>   [580,]    9   10   10   12   10   12   10   11    9    10 #>   [581,]    9   10   10   12   10   13   11   12   10    11 #>   [582,]   10   11   11   13   11   10   12   14   11    12 #>   [583,]    9   10   10   12   10   12   10   11    9    10 #>   [584,]   10   11   11   13   11   10   12   14   11    12 #>   [585,]   10   11   11   13   11   10   12   14   11    12 #>   [586,]   10   11   12   14   12   11   12   13   11    12 #>   [587,]   10   11   11   13   11   10   12   14   11    12 #>   [588,]   10   11   11   13   11   10   12   13   11    12 #>   [589,]    9   10   10   12   10   13   11   12   10    11 #>   [590,]   10   11   11   13   11   10   12   14   11    12 #>   [591,]    9   10   10   12   10   13   11   12   10    11 #>   [592,]   10   11   11   13   11   10   12   13   11    12 #>   [593,]    9   10   10   12   10   12   10   11    9    10 #>   [594,]   10   11   11   13   11   10   12   14   11    12 #>   [595,]   10   11   11   13   11   10   12   13   11    12 #>   [596,]   10   11   11   13   11   10   12   13   11    12 #>   [597,]   10   11   11   13   11   10   12   13   11    12 #>   [598,]    9   10   10   12   10   12   10   11    9    10 #>   [599,]    9   10   10   12   10   13   11   12   10    11 #>   [600,]   10   11   11   13   11   10   12   13   11    12 #>   [601,]   12   13   14   16   14   15   14   16   13    14 #>   [602,]   11   12   13   15   13   14   13   15   12    13 #>   [603,]   11   12   13   15   13   14   13   15   12    13 #>   [604,]   11   12   13   15   13   14   13   15   12    13 #>   [605,]   11   12   13   15   13   14   13   15   12    13 #>   [606,]   11   12   13   15   13   14   13   15   12    13 #>   [607,]   11   12   13   15   13   14   13   15   12    13 #>   [608,]   11   12   13   15   13   14   13   15   12    13 #>   [609,]   11   12   13   15   13   14   13   15   12    13 #>   [610,]   11   12   13   15   13   14   13   15   12    13 #>   [611,]   11   12   13   15   13   14   13   15   12    13 #>   [612,]   11   12   13   15   13   14   13   15   12    13 #>   [613,]   11   12   13   15   13   14   13   15   12    13 #>   [614,]   12   13   14   16   14   15   14   16   13    14 #>   [615,]   12   13   14   16   14   15   14   16   13    14 #>   [616,]   12   13   14   16   14   15   14   16   13    14 #>   [617,]   11   12   13   15   13   14   13   15   12    13 #>   [618,]   11   12   13   15   13   14   13   15   12    13 #>   [619,]   11   12   13   15   13   14   13   15   12    13 #>   [620,]   11   12   13   15   13   14   13   15   12    13 #>   [621,]   11   12   13   15   13   14   13   15   12    13 #>   [622,]   11   12   13   15   13   14   13   15   12    13 #>   [623,]   11   12   13   15   13   14   13   15   12    13 #>   [624,]   11   12   13   15   13   14   13   15   12    13 #>   [625,]   11   12   13   15   13   14   13   15   12    13 #>   [626,]   11   12   13   15   13   14   13   15   12    13 #>   [627,]   11   12   13   15   13   14   13   15   12    13 #>   [628,]   11   12   13   15   13   14   13   15   12    13 #>   [629,]   11   12   13   15   13   14   13   15   12    13 #>   [630,]   11   12   13   15   13   14   13   15   12    13 #>   [631,]   11   12   13   15   13   14   13   15   12    13 #>   [632,]   11   12   13   15   13   14   13   15   12    13 #>   [633,]   11   12   13   15   13   14   13   15   12    13 #>   [634,]   11   12   13   15   13   14   13   15   12    13 #>   [635,]   11   12   13   15   13   14   13   15   12    13 #>   [636,]   11   12   13   15   13   14   13   15   12    13 #>   [637,]   11   12   13   15   13   14   13   15   12    13 #>   [638,]   11   12   13   15   13   14   13   15   12    13 #>   [639,]   11   12   13   15   13   14   13   15   12    13 #>   [640,]   11   12   13   15   13   14   13   15   12    13 #>   [641,]   12   13   14   16   14   15   14   16   13    14 #>   [642,]   11   12   13   15   13   14   13   15   12    13 #>   [643,]   11   12   13   15   13   14   13   15   12    13 #>   [644,]   12   13   14   16   14   15   14   16   13    14 #>   [645,]   11   12   13   15   13   14   13   15   12    13 #>   [646,]   11   12   13   15   13   14   13   15   12    13 #>   [647,]   11   12   13   15   13   14   13   15   12    13 #>   [648,]   11   12   13   15   13   14   13   15   12    13 #>   [649,]   11   12   13   15   13   14   13   15   12    13 #>   [650,]   12   13   14   16   14   15   14   16   13    14 #>   [651,]   11   12   13   15   13   14   13   15   12    13 #>   [652,]   11   12   13   15   13   14   13   15   12    13 #>   [653,]   11   12   13   15   13   14   13   15   12    13 #>   [654,]   11   12   13   15   13   14   13   15   12    13 #>   [655,]   11   12   13   15   13   14   13   15   12    13 #>   [656,]   11   12   13   15   13   14   13   15   12    13 #>   [657,]   11   12   13   15   13   14   13   15   12    13 #>   [658,]   11   12   13   15   13   14   13   15   12    13 #>   [659,]   12   13   14   16   14   15   14   16   13    14 #>   [660,]   11   12   13   15   13   14   13   15   12    13 #>   [661,]   11   12   13   15   13   14   13   15   12    13 #>   [662,]   11   12   13   15   13   14   13   15   12    13 #>   [663,]   11   12   13   15   13   14   13   15   12    13 #>   [664,]   11   12   13   15   13   14   13   15   12    13 #>   [665,]   11   12   13   15   13   14   13   15   12    13 #>   [666,]   11   12   13   15   13   14   13   15   12    13 #>   [667,]   11   12   13   15   13   14   13   15   12    13 #>   [668,]   11   12   13   15   13   14   13   15   12    13 #>   [669,]   11   12   13   15   13   14   13   15   12    13 #>   [670,]   12   13   14   16   14   15   14   16   13    14 #>   [671,]   11   12   13   15   13   14   13   15   12    13 #>   [672,]   11   12   13   15   13   14   13   15   12    13 #>   [673,]   12   13   14   16   14   15   14   16   13    14 #>   [674,]   11   12   13   15   13   14   13   15   12    13 #>   [675,]   11   12   13   15   13   14   13   15   12    13 #>   [676,]   11   12   13   15   13   14   13   15   12    13 #>   [677,]   11   12   13   15   13   14   13   15   12    13 #>   [678,]   11   12   13   15   13   14   13   15   12    13 #>   [679,]   11   12   13   15   13   14   13   15   12    13 #>   [680,]   11   12   13   15   13   14   13   15   12    13 #>   [681,]   11   12   13   15   13   14   13   15   12    13 #>   [682,]   11   12   13   15   13   14   13   15   12    13 #>   [683,]   11   12   13   15   13   14   13   15   12    13 #>   [684,]   11   12   13   15   13   14   13   15   12    13 #>   [685,]   11   12   13   15   13   14   13   15   12    13 #>   [686,]   11   12   13   15   13   14   13   15   12    13 #>   [687,]   11   12   13   15   13   14   13   15   12    13 #>   [688,]   11   12   13   15   13   14   13   15   12    13 #>   [689,]   11   12   13   15   13   14   13   15   12    13 #>   [690,]   11   12   13   15   13   14   13   15   12    13 #>   [691,]   11   12   13   15   13   14   13   15   12    13 #>   [692,]   11   12   13   15   13   14   13   15   12    13 #>   [693,]   11   12   13   15   13   14   13   15   12    13 #>   [694,]   11   12   13   15   13   14   13   15   12    13 #>   [695,]   11   12   13   15   13   14   13   15   12    13 #>   [696,]   12   13   14   16   14   15   14   16   13    14 #>   [697,]   11   12   13   15   13   14   13   15   12    13 #>   [698,]   11   12   13   15   13   14   13   15   12    13 #>   [699,]   12   13   14   16   14   15   14   16   13    14 #>   [700,]   11   12   13   15   13   14   13   15   12    13 #>   [701,]   14   15   16   18   16   17   16   18   15    17 #>   [702,]   14   15   16   18   16   17   16   18   15    17 #>   [703,]   13   14   15   17   15   16   15   17   14    15 #>   [704,]   13   14   15   17   15   16   15   17   14    15 #>   [705,]   13   14   15   17   15   16   15   17   14    15 #>   [706,]   14   15   16   18   16   17   16   18   15    17 #>   [707,]   14   15   16   18   16   17   16   18   15    16 #>   [708,]   13   14   15   17   15   16   15   17   14    15 #>   [709,]   13   14   15   17   15   16   15   17   14    15 #>   [710,]   13   14   15   17   15   16   15   17   14    15 #>   [711,]   14   15   16   18   16   17   16   18   15    17 #>   [712,]   14   15   16   18   16   17   16   18   15    17 #>   [713,]   14   15   16   18   16   17   16   18   15    16 #>   [714,]   14   15   16   18   16   17   16   18   15    17 #>   [715,]   14   15   16   18   16   17   16   18   15    17 #>   [716,]   14   15   16   18   16   17   16   18   15    16 #>   [717,]   14   15   16   18   16   17   16   18   15    16 #>   [718,]   13   14   15   17   15   16   15   17   14    15 #>   [719,]   14   15   16   18   16   17   16   18   15    17 #>   [720,]   13   14   15   17   15   16   15   17   14    15 #>   [721,]   14   15   16   18   16   17   16   18   15    17 #>   [722,]   14   15   16   18   16   17   16   18   15    16 #>   [723,]   14   15   16   18   16   17   16   18   15    17 #>   [724,]   13   14   15   17   15   16   15   17   14    15 #>   [725,]   14   15   16   18   16   17   16   18   15    16 #>   [726,]   14   15   16   18   16   17   16   18   15    17 #>   [727,]   14   15   16   18   16   17   16   18   15    17 #>   [728,]   14   15   16   18   16   17   16   18   15    17 #>   [729,]   14   15   16   18   16   17   16   18   15    17 #>   [730,]   13   14   15   17   15   16   15   17   14    15 #>   [731,]   13   14   15   17   15   16   15   17   14    15 #>   [732,]   13   14   15   17   15   16   15   17   14    15 #>   [733,]   14   15   16   18   16   17   16   18   15    17 #>   [734,]   14   15   16   18   16   17   16   18   15    17 #>   [735,]   14   15   16   18   16   17   16   18   15    17 #>   [736,]   14   15   16   18   16   17   16   18   15    17 #>   [737,]   14   15   16   18   16   17   16   18   15    17 #>   [738,]   14   15   16   18   16   17   16   18   15    17 #>   [739,]   13   14   15   17   15   16   15   17   14    15 #>   [740,]   14   15   16   18   16   17   16   18   15    16 #>   [741,]   14   15   16   18   16   17   16   18   15    17 #>   [742,]   14   15   16   18   16   17   16   18   15    17 #>   [743,]   13   14   15   17   15   16   15   17   14    15 #>   [744,]   14   15   16   18   16   17   16   18   15    16 #>   [745,]   13   14   15   17   15   16   15   17   14    15 #>   [746,]   14   15   16   18   16   17   16   18   15    16 #>   [747,]   14   15   16   18   16   17   16   18   15    16 #>   [748,]   13   14   15   17   15   16   15   17   14    15 #>   [749,]   13   14   15   17   15   16   15   17   14    15 #>   [750,]   14   15   16   18   16   17   16   18   15    16 #>   [751,]   13   14   15   17   15   16   15   17   14    15 #>   [752,]   14   15   16   18   16   17   16   18   15    17 #>   [753,]   13   14   15   17   15   16   15   17   14    15 #>   [754,]   14   15   16   18   16   17   16   18   15    16 #>   [755,]   14   15   16   18   16   17   16   18   15    16 #>   [756,]   13   14   15   17   15   16   15   17   14    15 #>   [757,]   14   15   16   18   16   17   16   18   15    17 #>   [758,]   14   15   16   18   16   17   16   18   15    17 #>   [759,]   14   15   16   18   16   17   16   18   15    16 #>   [760,]   13   14   15   17   15   16   15   17   14    15 #>   [761,]   14   15   16   18   16   17   16   18   15    17 #>   [762,]   13   14   15   17   15   16   15   17   14    15 #>   [763,]   14   15   16   18   16   17   16   18   15    16 #>   [764,]   13   14   15   17   15   16   15   17   14    15 #>   [765,]   13   14   15   17   15   16   15   17   14    15 #>   [766,]   13   14   15   17   15   16   15   17   14    15 #>   [767,]   13   14   15   17   15   16   15   17   14    15 #>   [768,]   14   15   16   18   16   17   16   18   15    17 #>   [769,]   14   15   16   18   16   17   16   18   15    17 #>   [770,]   14   15   16   18   16   17   16   18   15    16 #>   [771,]   14   15   16   18   16   17   16   18   15    17 #>   [772,]   13   14   15   17   15   16   15   17   14    15 #>   [773,]   14   15   16   18   16   17   16   18   15    17 #>   [774,]   14   15   16   18   16   17   16   18   15    17 #>   [775,]   14   15   16   18   16   17   16   18   15    17 #>   [776,]   14   15   16   18   16   17   16   18   15    16 #>   [777,]   14   15   16   18   16   17   16   18   15    16 #>   [778,]   13   14   15   17   15   16   15   17   14    15 #>   [779,]   14   15   16   18   16   17   16   18   15    16 #>   [780,]   14   15   16   18   16   17   16   18   15    17 #>   [781,]   14   15   16   18   16   17   16   18   15    17 #>   [782,]   14   15   16   18   16   17   16   18   15    17 #>   [783,]   14   15   16   18   16   17   16   18   15    16 #>   [784,]   14   15   16   18   16   17   16   18   15    16 #>   [785,]   13   14   15   17   15   16   15   17   14    15 #>   [786,]   14   15   16   18   16   17   16   18   15    16 #>   [787,]   14   15   16   18   16   17   16   18   15    17 #>   [788,]   13   14   15   17   15   16   15   17   14    15 #>   [789,]   13   14   15   17   15   16   15   17   14    15 #>   [790,]   14   15   16   18   16   17   16   18   15    16 #>   [791,]   13   14   15   17   15   16   15   17   14    15 #>   [792,]   14   15   16   18   16   17   16   18   15    17 #>   [793,]   14   15   16   18   16   17   16   18   15    17 #>   [794,]   14   15   16   18   16   17   16   18   15    16 #>   [795,]   13   14   15   17   15   16   15   17   14    15 #>   [796,]   14   15   16   18   16   17   16   18   15    17 #>   [797,]   14   15   16   18   16   17   16   18   15    17 #>   [798,]   14   15   16   18   16   17   16   18   15    16 #>   [799,]   14   15   16   18   16   17   16   18   15    17 #>   [800,]   14   15   16   18   16   17   16   18   15    16 #>   [801,]   15   18   19   20   18   19   17   19   16    18 #>   [802,]   15   18   19   20   18   19   17   19   16    18 #>   [803,]   15   17   18   20   18   19   17   19   16    18 #>   [804,]   16   16   17   19   17   18   18   20   17    19 #>   [805,]   15   18   19   20   18   19   17   19   16    18 #>   [806,]   16   16   17   19   17   18   19   21   17    19 #>   [807,]   15   17   18   20   18   19   17   19   16    18 #>   [808,]   15   17   18   20   18   19   17   19   16    18 #>   [809,]   16   16   17   19   17   18   18   20   17    19 #>   [810,]   16   16   17   19   17   18   19   21   17    19 #>   [811,]   16   16   17   19   17   18   18   20   17    19 #>   [812,]   16   16   17   19   17   18   19   21   17    19 #>   [813,]   15   17   18   20   18   19   17   19   16    18 #>   [814,]   16   16   17   19   17   18   19   21   17    19 #>   [815,]   16   16   17   19   17   18   19   21   17    19 #>   [816,]   15   17   18   20   18   19   17   19   16    18 #>   [817,]   15   17   18   20   18   19   17   19   16    18 #>   [818,]   16   16   17   19   17   18   19   21   17    19 #>   [819,]   16   16   17   19   17   18   19   21   17    19 #>   [820,]   15   17   18   20   18   19   17   19   16    18 #>   [821,]   16   16   17   19   17   18   19   21   17    19 #>   [822,]   15   17   18   20   18   19   17   19   16    18 #>   [823,]   15   18   19   20   18   19   17   19   16    18 #>   [824,]   15   17   18   20   18   19   17   19   16    18 #>   [825,]   15   17   18   20   18   19   17   19   16    18 #>   [826,]   16   16   17   19   17   18   19   21   17    19 #>   [827,]   16   16   17   19   17   18   18   20   17    19 #>   [828,]   15   18   19   20   18   19   17   19   16    18 #>   [829,]   15   18   19   20   18   19   17   19   16    18 #>   [830,]   16   16   17   19   17   18   19   21   17    19 #>   [831,]   16   16   17   19   17   18   19   21   17    19 #>   [832,]   16   16   17   19   17   18   19   21   17    19 #>   [833,]   16   16   17   19   17   18   19   21   17    19 #>   [834,]   16   16   17   19   17   18   19   21   17    19 #>   [835,]   15   18   19   20   18   19   17   19   16    18 #>   [836,]   16   16   17   19   17   18   19   21   17    19 #>   [837,]   15   18   19   20   18   19   17   19   16    18 #>   [838,]   16   16   17   19   17   18   19   21   17    19 #>   [839,]   15   17   18   20   18   19   17   19   16    18 #>   [840,]   15   17   18   20   18   19   17   19   16    18 #>   [841,]   16   16   17   19   17   18   19   21   17    19 #>   [842,]   16   16   17   19   17   18   19   21   17    19 #>   [843,]   15   17   18   20   18   19   17   19   16    18 #>   [844,]   15   17   18   20   18   19   17   19   16    18 #>   [845,]   15   17   18   20   18   19   17   19   16    18 #>   [846,]   15   17   18   20   18   19   17   19   16    18 #>   [847,]   15   17   18   20   18   19   17   19   16    18 #>   [848,]   16   16   17   19   17   18   19   21   17    19 #>   [849,]   15   17   18   20   18   19   17   19   16    18 #>   [850,]   15   17   18   20   18   19   17   19   16    18 #>   [851,]   15   17   18   20   18   19   17   19   16    18 #>   [852,]   16   16   17   19   17   18   18   20   17    19 #>   [853,]   15   17   18   20   18   19   17   19   16    18 #>   [854,]   15   17   18   20   18   19   17   19   16    18 #>   [855,]   15   17   18   20   18   19   17   19   16    18 #>   [856,]   15   17   18   20   18   19   17   19   16    18 #>   [857,]   15   18   19   20   18   19   17   19   16    18 #>   [858,]   16   16   17   19   17   18   18   20   17    19 #>   [859,]   15   17   18   20   18   19   17   19   16    18 #>   [860,]   16   16   17   19   17   18   19   21   17    19 #>   [861,]   16   16   17   19   17   18   19   21   17    19 #>   [862,]   16   16   17   19   17   18   19   21   17    19 #>   [863,]   15   17   18   20   18   19   17   19   16    18 #>   [864,]   16   16   17   19   17   18   19   21   17    19 #>   [865,]   15   17   18   20   18   19   17   19   16    18 #>   [866,]   15   17   18   20   18   19   17   19   16    18 #>   [867,]   16   16   17   19   17   18   19   21   17    19 #>   [868,]   16   16   17   19   17   18   19   21   17    19 #>   [869,]   16   16   17   19   17   18   18   20   17    19 #>   [870,]   15   17   18   20   18   19   17   19   16    18 #>   [871,]   15   18   19   20   18   19   17   19   16    18 #>   [872,]   15   17   18   20   18   19   17   19   16    18 #>   [873,]   16   16   17   19   17   18   19   21   17    19 #>   [874,]   16   16   17   19   17   18   19   21   17    19 #>   [875,]   16   16   17   19   17   18   19   21   17    19 #>   [876,]   15   17   18   20   18   19   17   19   16    18 #>   [877,]   15   17   18   20   18   19   17   19   16    18 #>   [878,]   15   17   18   20   18   19   17   19   16    18 #>   [879,]   15   17   18   20   18   19   17   19   16    18 #>   [880,]   16   16   17   19   17   18   18   20   17    19 #>   [881,]   15   18   19   20   18   19   17   19   16    18 #>   [882,]   16   16   17   19   17   18   18   20   17    19 #>   [883,]   15   17   18   20   18   19   17   19   16    18 #>   [884,]   15   17   18   20   18   19   17   19   16    18 #>   [885,]   16   16   17   19   17   18   19   21   17    19 #>   [886,]   15   17   18   20   18   19   17   19   16    18 #>   [887,]   15   18   19   20   18   19   17   19   16    18 #>   [888,]   15   18   19   20   18   19   17   19   16    18 #>   [889,]   15   17   18   20   18   19   17   19   16    18 #>   [890,]   15   17   18   20   18   19   17   19   16    18 #>   [891,]   15   18   19   20   18   19   17   19   16    18 #>   [892,]   16   16   17   19   17   18   18   20   17    19 #>   [893,]   16   16   17   19   17   18   19   21   17    19 #>   [894,]   15   17   18   20   18   19   17   19   16    18 #>   [895,]   15   18   19   20   18   19   17   19   16    18 #>   [896,]   16   16   17   19   17   18   19   21   17    19 #>   [897,]   16   16   17   19   17   18   19   21   17    19 #>   [898,]   15   17   18   20   18   19   17   19   16    18 #>   [899,]   16   16   17   19   17   18   18   20   17    19 #>   [900,]   15   17   18   20   18   19   17   19   16    18 #>   [901,]   17   19   21   22   20   21   21   23   19    21 #>   [902,]   18   20   20   21   19   20   20   22   18    20 #>   [903,]   17   19   21   22   20   21   21   23   19    21 #>   [904,]   17   19   22   23   20   21   22   24   19    21 #>   [905,]   18   20   20   21   19   20   20   22   18    20 #>   [906,]   17   19   21   22   20   21   21   23   19    21 #>   [907,]   18   20   20   21   19   20   20   22   18    20 #>   [908,]   17   19   21   22   20   21   21   23   19    21 #>   [909,]   18   20   20   21   19   20   20   22   18    20 #>   [910,]   18   20   20   21   19   20   20   22   18    20 #>   [911,]   17   19   21   22   20   21   21   23   19    21 #>   [912,]   18   20   20   21   19   20   20   22   18    20 #>   [913,]   18   20   20   21   19   20   20   22   18    20 #>   [914,]   17   19   21   22   20   21   22   24   19    21 #>   [915,]   18   20   20   21   19   20   20   22   18    20 #>   [916,]   17   19   21   22   20   21   22   24   19    21 #>   [917,]   18   20   20   21   19   20   20   22   18    20 #>   [918,]   18   20   20   21   19   20   20   22   18    20 #>   [919,]   17   19   21   22   20   21   21   23   19    21 #>   [920,]   18   20   20   21   19   20   20   22   18    20 #>   [921,]   18   20   20   21   19   20   20   22   18    20 #>   [922,]   18   20   20   21   19   20   20   22   18    20 #>   [923,]   18   20   20   21   19   20   20   22   18    20 #>   [924,]   18   20   20   21   19   20   20   22   18    20 #>   [925,]   18   20   20   21   19   20   20   22   18    20 #>   [926,]   17   19   21   22   20   21   21   23   19    21 #>   [927,]   18   20   20   21   19   20   20   22   18    20 #>   [928,]   17   19   21   22   20   21   22   24   19    21 #>   [929,]   18   20   20   21   19   20   20   22   18    20 #>   [930,]   18   20   20   21   19   20   20   22   18    20 #>   [931,]   18   20   20   21   19   20   20   22   18    20 #>   [932,]   18   20   20   21   19   20   20   22   18    20 #>   [933,]   18   20   20   21   19   20   20   22   18    20 #>   [934,]   17   19   21   22   20   21   21   23   19    21 #>   [935,]   17   19   21   22   20   21   21   23   19    21 #>   [936,]   18   20   20   21   19   20   20   22   18    20 #>   [937,]   17   19   21   22   20   21   21   23   19    21 #>   [938,]   17   19   21   22   20   21   21   23   19    21 #>   [939,]   18   20   20   21   19   20   20   22   18    20 #>   [940,]   18   20   20   21   19   20   20   22   18    20 #>   [941,]   18   20   20   21   19   20   20   22   18    20 #>   [942,]   17   19   21   22   20   21   21   23   19    21 #>   [943,]   18   20   20   21   19   20   20   22   18    20 #>   [944,]   18   20   20   21   19   20   20   22   18    20 #>   [945,]   17   19   22   23   20   21   21   23   19    21 #>   [946,]   18   20   20   21   19   20   20   22   18    20 #>   [947,]   18   20   20   21   19   20   20   22   18    20 #>   [948,]   18   20   20   21   19   20   20   22   18    20 #>   [949,]   17   19   21   22   20   21   21   23   19    21 #>   [950,]   18   20   20   21   19   20   20   22   18    20 #>   [951,]   18   20   20   21   19   20   20   22   18    20 #>   [952,]   17   19   21   22   20   21   22   24   19    21 #>   [953,]   18   20   20   21   19   20   20   22   18    20 #>   [954,]   18   20   20   21   19   20   20   22   18    20 #>   [955,]   18   20   20   21   19   20   20   22   18    20 #>   [956,]   17   19   21   22   20   21   21   23   19    21 #>   [957,]   18   20   20   21   19   20   20   22   18    20 #>   [958,]   18   20   20   21   19   20   20   22   18    20 #>   [959,]   17   19   21   22   20   21   22   24   19    21 #>   [960,]   18   20   20   21   19   20   20   22   18    20 #>   [961,]   18   20   20   21   19   20   20   22   18    20 #>   [962,]   17   19   21   22   20   21   21   23   19    21 #>   [963,]   18   20   20   21   19   20   20   22   18    20 #>   [964,]   17   19   21   22   20   21   21   23   19    21 #>   [965,]   17   19   21   22   20   21   21   23   19    21 #>   [966,]   18   20   20   21   19   20   20   22   18    20 #>   [967,]   18   20   20   21   19   20   20   22   18    20 #>   [968,]   17   19   21   22   20   21   21   23   19    21 #>   [969,]   17   19   21   22   20   21   21   23   19    21 #>   [970,]   18   20   20   21   19   20   20   22   18    20 #>   [971,]   18   20   20   21   19   20   20   22   18    20 #>   [972,]   17   19   22   23   20   21   21   23   19    21 #>   [973,]   17   19   22   23   20   21   22   24   19    21 #>   [974,]   18   20   20   21   19   20   20   22   18    20 #>   [975,]   18   20   20   21   19   20   20   22   18    20 #>   [976,]   18   20   20   21   19   20   20   22   18    20 #>   [977,]   17   19   22   23   20   21   21   23   19    21 #>   [978,]   18   20   20   21   19   20   20   22   18    20 #>   [979,]   17   19   21   22   20   21   21   23   19    21 #>   [980,]   18   20   20   21   19   20   20   22   18    20 #>   [981,]   18   20   20   21   19   20   20   22   18    20 #>   [982,]   18   20   20   21   19   20   20   22   18    20 #>   [983,]   18   20   20   21   19   20   20   22   18    20 #>   [984,]   18   20   20   21   19   20   20   22   18    20 #>   [985,]   18   20   20   21   19   20   20   22   18    20 #>   [986,]   18   20   20   21   19   20   20   22   18    20 #>   [987,]   18   20   20   21   19   20   20   22   18    20 #>   [988,]   18   20   20   21   19   20   20   22   18    20 #>   [989,]   17   19   21   22   20   21   21   23   19    21 #>   [990,]   18   20   20   21   19   20   20   22   18    20 #>   [991,]   17   19   21   22   20   21   22   24   19    21 #>   [992,]   18   20   20   21   19   20   20   22   18    20 #>   [993,]   18   20   20   21   19   20   20   22   18    20 #>   [994,]   17   19   22   23   20   21   21   23   19    21 #>   [995,]   18   20   20   21   19   20   20   22   18    20 #>   [996,]   17   19   21   22   20   21   21   23   19    21 #>   [997,]   17   19   21   22   20   21   21   23   19    21 #>   [998,]   18   20   20   21   19   20   20   22   18    20 #>   [999,]   18   20   20   21   19   20   20   22   18    20 #>  [1000,]   17   19   22   23   20   21   21   23   19    21 #>  [1001,]   20   22   24   25   22   23   24   26   21    23 #>  [1002,]   20   22   24   25   22   23   24   26   21    23 #>  [1003,]   20   22   24   25   22   23   24   26   21    23 #>  [1004,]   19   21   23   24   21   22   23   25   20    22 #>  [1005,]   20   22   24   25   22   23   24   26   21    23 #>  [1006,]   20   22   24   25   22   23   24   26   21    23 #>  [1007,]   20   22   24   25   22   23   24   26   21    23 #>  [1008,]   19   21   23   24   21   22   23   25   20    22 #>  [1009,]   19   21   23   24   21   22   23   25   20    22 #>  [1010,]   19   21   23   24   21   22   23   25   20    22 #>  [1011,]   20   22   24   25   22   23   24   26   21    23 #>  [1012,]   20   22   24   25   22   23   24   26   21    23 #>  [1013,]   20   22   24   25   22   23   24   26   21    23 #>  [1014,]   20   22   24   25   22   23   24   26   21    23 #>  [1015,]   20   22   24   25   22   23   24   26   21    23 #>  [1016,]   20   22   24   25   22   23   24   26   21    23 #>  [1017,]   20   22   24   25   22   23   24   26   21    23 #>  [1018,]   20   22   24   25   22   23   24   26   21    23 #>  [1019,]   20   22   24   25   22   23   24   26   21    23 #>  [1020,]   20   22   24   25   22   23   24   26   21    23 #>  [1021,]   20   22   24   25   22   23   24   26   21    23 #>  [1022,]   20   22   24   25   22   23   24   26   21    23 #>  [1023,]   20   22   24   25   22   23   24   26   21    23 #>  [1024,]   20   22   24   25   22   23   24   26   21    23 #>  [1025,]   20   22   24   25   22   23   24   26   21    23 #>  [1026,]   20   22   24   25   22   23   24   26   21    23 #>  [1027,]   20   22   24   25   22   23   24   26   21    23 #>  [1028,]   20   22   24   25   22   23   24   26   21    23 #>  [1029,]   20   22   24   25   22   23   24   26   21    23 #>  [1030,]   20   22   24   25   22   23   24   26   21    23 #>  [1031,]   20   22   24   25   22   23   24   26   21    23 #>  [1032,]   20   22   24   25   22   23   24   26   21    23 #>  [1033,]   20   22   24   25   22   23   24   26   21    23 #>  [1034,]   20   22   24   25   22   23   24   26   21    23 #>  [1035,]   20   22   24   25   22   23   24   26   21    23 #>  [1036,]   20   22   24   25   22   23   24   26   21    23 #>  [1037,]   20   22   24   25   22   23   24   26   21    23 #>  [1038,]   20   22   24   25   22   23   24   26   21    23 #>  [1039,]   20   22   24   25   22   23   24   26   21    23 #>  [1040,]   20   22   24   25   22   23   24   26   21    23 #>  [1041,]   20   22   24   25   22   23   24   26   21    23 #>  [1042,]   20   22   24   25   22   23   24   26   21    23 #>  [1043,]   19   21   23   24   21   22   23   25   20    22 #>  [1044,]   20   22   24   25   22   23   24   26   21    23 #>  [1045,]   20   22   24   25   22   23   24   26   21    23 #>  [1046,]   20   22   24   25   22   23   24   26   21    23 #>  [1047,]   20   22   24   25   22   23   24   26   21    23 #>  [1048,]   20   22   24   25   22   23   24   26   21    23 #>  [1049,]   20   22   24   25   22   23   24   26   21    23 #>  [1050,]   20   22   24   25   22   23   24   26   21    23 #>  [1051,]   19   21   23   24   21   22   23   25   20    22 #>  [1052,]   20   22   24   25   22   23   24   26   21    23 #>  [1053,]   20   22   24   25   22   23   24   26   21    23 #>  [1054,]   20   22   24   25   22   23   24   26   21    23 #>  [1055,]   20   22   24   25   22   23   24   26   21    23 #>  [1056,]   20   22   24   25   22   23   24   26   21    23 #>  [1057,]   20   22   24   25   22   23   24   26   21    23 #>  [1058,]   20   22   24   25   22   23   24   26   21    23 #>  [1059,]   20   22   24   25   22   23   24   26   21    23 #>  [1060,]   19   21   23   24   21   22   23   25   20    22 #>  [1061,]   20   22   24   25   22   23   24   26   21    23 #>  [1062,]   20   22   24   25   22   23   24   26   21    23 #>  [1063,]   20   22   24   25   22   23   24   26   21    23 #>  [1064,]   19   21   23   24   21   22   23   25   20    22 #>  [1065,]   20   22   24   25   22   23   24   26   21    23 #>  [1066,]   20   22   24   25   22   23   24   26   21    23 #>  [1067,]   19   21   23   24   21   22   23   25   20    22 #>  [1068,]   20   22   24   25   22   23   24   26   21    23 #>  [1069,]   20   22   24   25   22   23   24   26   21    23 #>  [1070,]   20   22   24   25   22   23   24   26   21    23 #>  [1071,]   20   22   24   25   22   23   24   26   21    23 #>  [1072,]   20   22   24   25   22   23   24   26   21    23 #>  [1073,]   20   22   24   25   22   23   24   26   21    23 #>  [1074,]   20   22   24   25   22   23   24   26   21    23 #>  [1075,]   20   22   24   25   22   23   24   26   21    23 #>  [1076,]   20   22   24   25   22   23   24   26   21    23 #>  [1077,]   20   22   24   25   22   23   24   26   21    23 #>  [1078,]   20   22   24   25   22   23   24   26   21    23 #>  [1079,]   20   22   24   25   22   23   24   26   21    23 #>  [1080,]   20   22   24   25   22   23   24   26   21    23 #>  [1081,]   20   22   24   25   22   23   24   26   21    23 #>  [1082,]   20   22   24   25   22   23   24   26   21    23 #>  [1083,]   20   22   24   25   22   23   24   26   21    23 #>  [1084,]   20   22   24   25   22   23   24   26   21    23 #>  [1085,]   19   21   23   24   21   22   23   25   20    22 #>  [1086,]   20   22   24   25   22   23   24   26   21    23 #>  [1087,]   20   22   24   25   22   23   24   26   21    23 #>  [1088,]   20   22   24   25   22   23   24   26   21    23 #>  [1089,]   20   22   24   25   22   23   24   26   21    23 #>  [1090,]   20   22   24   25   22   23   24   26   21    23 #>  [1091,]   19   21   23   24   21   22   23   25   20    22 #>  [1092,]   20   22   24   25   22   23   24   26   21    23 #>  [1093,]   20   22   24   25   22   23   24   26   21    23 #>  [1094,]   20   22   24   25   22   23   24   26   21    23 #>  [1095,]   19   21   23   24   21   22   23   25   20    22 #>  [1096,]   20   22   24   25   22   23   24   26   21    23 #>  [1097,]   20   22   24   25   22   23   24   26   21    23 #>  [1098,]   20   22   24   25   22   23   24   26   21    23 #>  [1099,]   20   22   24   25   22   23   24   26   21    23 #>  [1100,]   20   22   24   25   22   23   24   26   21    23 #>  [1101,]   21   23   25   26   23   24   26   28   23    25 #>  [1102,]   21   23   25   27   24   24   26   28   23    25 #>  [1103,]   21   23   25   27   24   24   25   27   22    24 #>  [1104,]   21   23   25   26   23   24   25   27   22    24 #>  [1105,]   21   23   25   26   23   24   25   27   22    24 #>  [1106,]   21   23   25   27   24   24   26   28   23    25 #>  [1107,]   21   23   25   27   24   24   25   27   22    24 #>  [1108,]   21   23   25   26   23   24   25   27   22    24 #>  [1109,]   21   23   25   26   23   24   25   27   22    24 #>  [1110,]   21   23   25   26   23   24   25   27   22    24 #>  [1111,]   21   23   25   26   23   24   25   27   22    24 #>  [1112,]   21   23   25   27   24   24   25   27   22    24 #>  [1113,]   21   23   25   26   23   24   26   28   23    25 #>  [1114,]   21   23   25   26   23   24   26   28   23    25 #>  [1115,]   21   23   25   26   23   24   26   28   23    25 #>  [1116,]   21   23   25   26   23   24   26   28   23    25 #>  [1117,]   21   23   25   26   23   24   26   28   23    25 #>  [1118,]   21   23   25   27   24   24   25   27   22    24 #>  [1119,]   21   23   25   27   24   24   25   27   22    24 #>  [1120,]   22   24   25   27   24   24   25   27   22    24 #>  [1121,]   21   23   25   26   23   24   26   28   23    25 #>  [1122,]   22   24   25   26   23   24   26   28   23    25 #>  [1123,]   21   23   25   27   24   24   25   27   22    24 #>  [1124,]   21   23   25   26   23   24   25   27   22    24 #>  [1125,]   21   23   25   27   24   24   25   27   22    24 #>  [1126,]   21   23   25   26   23   24   26   28   23    25 #>  [1127,]   21   23   25   26   23   24   26   28   23    25 #>  [1128,]   21   23   25   27   24   24   25   27   22    24 #>  [1129,]   22   24   25   27   24   24   26   28   23    25 #>  [1130,]   21   23   25   26   23   24   25   27   22    24 #>  [1131,]   21   23   25   27   24   24   25   27   22    24 #>  [1132,]   21   23   25   27   24   24   25   27   22    24 #>  [1133,]   21   23   25   27   24   24   26   28   23    25 #>  [1134,]   21   23   25   27   24   24   25   27   22    24 #>  [1135,]   21   23   25   26   23   24   26   28   23    25 #>  [1136,]   21   23   25   26   23   24   25   27   22    24 #>  [1137,]   21   23   25   26   23   24   26   28   23    25 #>  [1138,]   21   23   25   26   23   24   25   27   22    24 #>  [1139,]   21   23   25   26   23   24   25   27   22    24 #>  [1140,]   21   23   25   27   24   24   25   27   22    24 #>  [1141,]   21   23   25   26   23   24   26   28   23    25 #>  [1142,]   21   23   25   27   24   24   25   27   22    24 #>  [1143,]   21   23   25   26   23   24   25   27   22    24 #>  [1144,]   21   23   25   26   23   24   26   28   23    25 #>  [1145,]   21   23   25   26   23   24   25   27   22    24 #>  [1146,]   21   23   25   26   23   24   25   27   22    24 #>  [1147,]   21   23   25   26   23   24   26   28   23    25 #>  [1148,]   21   23   25   27   24   24   25   27   22    24 #>  [1149,]   21   23   25   26   23   24   25   27   22    24 #>  [1150,]   21   23   25   26   23   24   26   28   23    25 #>  [1151,]   21   23   25   26   23   24   25   27   22    24 #>  [1152,]   21   23   25   26   23   24   26   28   23    25 #>  [1153,]   21   23   25   26   23   24   25   27   22    24 #>  [1154,]   21   23   25   26   23   24   25   27   22    24 #>  [1155,]   21   23   25   26   23   24   25   27   22    24 #>  [1156,]   21   23   25   27   24   24   25   27   22    24 #>  [1157,]   21   23   25   27   24   24   25   27   22    24 #>  [1158,]   22   24   25   26   23   24   26   28   23    25 #>  [1159,]   21   23   25   26   23   24   26   28   23    25 #>  [1160,]   21   23   25   27   24   24   25   27   22    24 #>  [1161,]   21   23   25   27   24   24   26   28   23    25 #>  [1162,]   21   23   25   26   23   24   25   27   22    24 #>  [1163,]   21   23   25   26   23   24   25   27   22    24 #>  [1164,]   22   24   25   27   24   24   25   27   22    24 #>  [1165,]   21   23   25   27   24   24   25   27   22    24 #>  [1166,]   21   23   25   26   23   24   25   27   22    24 #>  [1167,]   21   23   25   26   23   24   25   27   22    24 #>  [1168,]   21   23   25   26   23   24   26   28   23    25 #>  [1169,]   21   23   25   26   23   24   25   27   22    24 #>  [1170,]   21   23   25   27   24   24   26   28   23    25 #>  [1171,]   21   23   25   27   24   24   26   28   23    25 #>  [1172,]   21   23   25   26   23   24   25   27   22    24 #>  [1173,]   21   23   25   27   24   24   26   28   23    25 #>  [1174,]   21   23   25   26   23   24   25   27   22    24 #>  [1175,]   21   23   25   27   24   24   25   27   22    24 #>  [1176,]   21   23   25   26   23   24   26   28   23    25 #>  [1177,]   22   24   25   27   24   24   26   28   23    25 #>  [1178,]   21   23   25   27   24   24   25   27   22    24 #>  [1179,]   21   23   25   26   23   24   26   28   23    25 #>  [1180,]   21   23   25   26   23   24   25   27   22    24 #>  [1181,]   21   23   25   26   23   24   26   28   23    25 #>  [1182,]   21   23   25   26   23   24   25   27   22    24 #>  [1183,]   21   23   25   26   23   24   26   28   23    25 #>  [1184,]   21   23   25   27   24   24   25   27   22    24 #>  [1185,]   21   23   25   26   23   24   25   27   22    24 #>  [1186,]   21   23   25   27   24   24   26   28   23    25 #>  [1187,]   22   24   25   26   23   24   25   27   22    24 #>  [1188,]   21   23   25   26   23   24   25   27   22    24 #>  [1189,]   21   23   25   26   23   24   25   27   22    24 #>  [1190,]   21   23   25   26   23   24   26   28   23    25 #>  [1191,]   21   23   25   26   23   24   25   27   22    24 #>  [1192,]   21   23   25   26   23   24   25   27   22    24 #>  [1193,]   21   23   25   27   24   24   26   28   23    25 #>  [1194,]   21   23   25   26   23   24   26   28   23    25 #>  [1195,]   21   23   25   26   23   24   25   27   22    24 #>  [1196,]   21   23   25   26   23   24   26   28   23    25 #>  [1197,]   21   23   25   27   24   24   25   27   22    24 #>  [1198,]   21   23   25   27   24   24   25   27   22    24 #>  [1199,]   21   23   25   26   23   24   26   28   23    25 #>  [1200,]   21   23   25   27   24   24   26   28   23    25 #>  [1201,]   24   25   27   29   26   26   28   31   25    27 #>  [1202,]   23   25   27   29   26   26   28   31   25    27 #>  [1203,]   23   25   27   29   26   26   28   30   25    27 #>  [1204,]   24   25   27   29   26   26   28   31   25    27 #>  [1205,]   23   25   27   29   26   26   28   31   25    27 #>  [1206,]   23   25   26   28   25   25   27   29   24    26 #>  [1207,]   24   25   27   29   26   26   28   30   25    27 #>  [1208,]   24   25   27   29   26   26   28   30   25    27 #>  [1209,]   24   25   27   29   26   26   28   31   25    27 #>  [1210,]   24   25   27   29   26   26   28   31   25    27 #>  [1211,]   23   25   27   29   26   26   28   31   25    27 #>  [1212,]   23   25   27   29   26   26   28   31   25    27 #>  [1213,]   24   25   27   29   26   26   28   30   25    27 #>  [1214,]   23   25   27   29   26   26   28   31   25    27 #>  [1215,]   24   25   27   29   26   26   28   31   25    27 #>  [1216,]   24   25   27   29   26   26   28   30   25    27 #>  [1217,]   24   25   27   29   26   26   28   30   25    27 #>  [1218,]   24   25   27   29   26   26   28   31   25    27 #>  [1219,]   23   25   27   29   26   26   28   31   25    27 #>  [1220,]   23   25   26   28   25   25   27   29   24    26 #>  [1221,]   24   25   26   28   25   25   27   29   24    26 #>  [1222,]   23   25   27   29   26   26   28   30   25    27 #>  [1223,]   24   25   27   29   26   26   28   31   25    27 #>  [1224,]   23   25   27   29   26   26   28   30   25    27 #>  [1225,]   24   25   26   28   25   25   27   29   24    26 #>  [1226,]   23   25   27   29   26   26   28   31   25    27 #>  [1227,]   24   25   27   29   26   26   28   31   25    27 #>  [1228,]   24   25   27   29   26   26   28   31   25    27 #>  [1229,]   23   25   27   29   26   26   28   31   25    27 #>  [1230,]   23   25   27   29   26   26   28   31   25    27 #>  [1231,]   23   25   27   29   26   26   28   31   25    27 #>  [1232,]   23   25   27   29   26   26   28   31   25    27 #>  [1233,]   23   25   27   29   26   26   28   31   25    27 #>  [1234,]   23   25   27   29   26   26   28   31   25    27 #>  [1235,]   23   25   26   28   25   25   27   29   24    26 #>  [1236,]   23   25   27   29   26   26   28   31   25    27 #>  [1237,]   24   25   27   29   26   26   28   31   25    27 #>  [1238,]   24   25   27   29   26   26   28   31   25    27 #>  [1239,]   24   25   27   29   26   26   28   30   25    27 #>  [1240,]   23   25   27   29   26   26   28   30   25    27 #>  [1241,]   23   25   27   29   26   26   28   31   25    27 #>  [1242,]   23   25   26   28   25   25   27   29   24    26 #>  [1243,]   24   25   27   29   26   26   28   30   25    27 #>  [1244,]   23   25   26   28   25   25   27   29   24    26 #>  [1245,]   24   25   27   29   26   26   28   30   25    27 #>  [1246,]   24   25   27   29   26   26   28   30   25    27 #>  [1247,]   24   25   27   29   26   26   28   30   25    27 #>  [1248,]   23   25   27   29   26   26   28   31   25    27 #>  [1249,]   23   25   27   29   26   26   28   30   25    27 #>  [1250,]   23   25   27   29   26   26   28   30   25    27 #>  [1251,]   23   25   27   29   26   26   28   30   25    27 #>  [1252,]   23   25   27   29   26   26   28   31   25    27 #>  [1253,]   24   25   26   28   25   25   27   29   24    26 #>  [1254,]   23   25   27   29   26   26   28   30   25    27 #>  [1255,]   23   25   27   29   26   26   28   30   25    27 #>  [1256,]   24   25   26   28   25   25   27   29   24    26 #>  [1257,]   23   25   27   29   26   26   28   31   25    27 #>  [1258,]   23   25   27   29   26   26   28   31   25    27 #>  [1259,]   23   25   27   29   26   26   28   30   25    27 #>  [1260,]   23   25   27   29   26   26   28   31   25    27 #>  [1261,]   24   25   27   29   26   26   28   31   25    27 #>  [1262,]   23   25   27   29   26   26   28   31   25    27 #>  [1263,]   23   25   27   29   26   26   28   30   25    27 #>  [1264,]   24   25   27   29   26   26   28   31   25    27 #>  [1265,]   23   25   26   28   25   25   27   29   24    26 #>  [1266,]   23   25   27   29   26   26   28   30   25    27 #>  [1267,]   23   25   27   29   26   26   28   31   25    27 #>  [1268,]   23   25   27   29   26   26   28   31   25    27 #>  [1269,]   23   25   27   29   26   26   28   31   25    27 #>  [1270,]   24   25   27   29   26   26   28   30   25    27 #>  [1271,]   24   25   27   29   26   26   28   31   25    27 #>  [1272,]   24   25   27   29   26   26   28   30   25    27 #>  [1273,]   24   25   26   28   25   25   27   29   24    26 #>  [1274,]   24   25   26   28   25   25   27   29   24    26 #>  [1275,]   24   25   27   29   26   26   28   31   25    27 #>  [1276,]   24   25   27   29   26   26   28   30   25    27 #>  [1277,]   24   25   27   29   26   26   28   30   25    27 #>  [1278,]   23   25   27   29   26   26   28   30   25    27 #>  [1279,]   24   25   27   29   26   26   28   30   25    27 #>  [1280,]   23   25   26   28   25   25   27   29   24    26 #>  [1281,]   23   25   27   29   26   26   28   31   25    27 #>  [1282,]   24   25   26   28   25   25   27   29   24    26 #>  [1283,]   23   25   27   29   26   26   28   30   25    27 #>  [1284,]   24   25   26   28   25   25   27   29   24    26 #>  [1285,]   23   25   26   28   25   25   27   29   24    26 #>  [1286,]   23   25   26   28   25   25   27   29   24    26 #>  [1287,]   24   25   27   29   26   26   28   31   25    27 #>  [1288,]   24   25   27   29   26   26   28   31   25    27 #>  [1289,]   23   25   26   28   25   25   27   29   24    26 #>  [1290,]   24   25   27   29   26   26   28   30   25    27 #>  [1291,]   23   25   27   29   26   26   28   31   25    27 #>  [1292,]   23   25   27   29   26   26   28   31   25    27 #>  [1293,]   23   25   27   29   26   26   28   31   25    27 #>  [1294,]   24   25   26   28   25   25   27   29   24    26 #>  [1295,]   24   25   27   29   26   26   28   31   25    27 #>  [1296,]   24   25   27   29   26   26   28   31   25    27 #>  [1297,]   23   25   27   29   26   26   28   31   25    27 #>  [1298,]   23   25   27   29   26   26   28   30   25    27 #>  [1299,]   23   25   26   28   25   25   27   29   24    26 #>  [1300,]   24   25   27   29   26   26   28   30   25    27 #>  [1301,]   26   26   29   31   28   28   30   33   27    29 #>  [1302,]   26   26   28   30   27   27   29   32   26    28 #>  [1303,]   25   26   29   31   28   28   30   33   27    29 #>  [1304,]   25   26   29   31   28   28   30   33   27    29 #>  [1305,]   26   26   29   31   28   28   30   33   27    29 #>  [1306,]   26   26   28   30   27   27   29   32   26    28 #>  [1307,]   25   26   29   31   28   28   30   33   27    29 #>  [1308,]   25   26   28   30   27   27   29   32   26    28 #>  [1309,]   26   26   29   31   28   28   30   33   27    29 #>  [1310,]   26   26   29   31   28   28   30   33   27    29 #>  [1311,]   26   26   28   30   27   27   29   32   26    28 #>  [1312,]   25   26   28   30   27   27   29   32   26    28 #>  [1313,]   26   26   29   31   28   28   30   33   27    29 #>  [1314,]   25   26   29   31   28   28   30   33   27    29 #>  [1315,]   26   26   28   30   27   27   29   32   26    28 #>  [1316,]   26   26   29   31   28   28   30   33   27    29 #>  [1317,]   26   26   28   30   27   27   29   32   26    28 #>  [1318,]   26   26   28   30   27   27   29   32   26    28 #>  [1319,]   26   26   28   30   27   27   29   32   26    28 #>  [1320,]   26   26   29   31   28   28   30   33   27    29 #>  [1321,]   26   26   28   30   27   27   29   32   26    28 #>  [1322,]   26   26   29   31   28   28   30   33   27    29 #>  [1323,]   25   26   28   30   27   27   29   32   26    28 #>  [1324,]   26   26   29   31   28   28   30   33   27    29 #>  [1325,]   25   26   29   31   28   28   30   33   27    29 #>  [1326,]   26   26   28   30   27   27   29   32   26    28 #>  [1327,]   26   26   29   31   28   28   30   33   27    29 #>  [1328,]   26   26   29   31   28   28   30   33   27    29 #>  [1329,]   26   26   28   30   27   27   29   32   26    28 #>  [1330,]   26   26   28   30   27   27   29   32   26    28 #>  [1331,]   25   26   28   30   27   27   29   32   26    28 #>  [1332,]   25   26   28   30   27   27   29   32   26    28 #>  [1333,]   26   26   29   31   28   28   30   33   27    29 #>  [1334,]   26   26   28   30   27   27   29   32   26    28 #>  [1335,]   26   26   28   30   27   27   29   32   26    28 #>  [1336,]   26   26   29   31   28   28   30   33   27    29 #>  [1337,]   25   26   28   30   27   27   29   32   26    28 #>  [1338,]   26   26   28   30   27   27   29   32   26    28 #>  [1339,]   26   26   29   31   28   28   30   33   27    29 #>  [1340,]   25   26   28   30   27   27   29   32   26    28 #>  [1341,]   26   26   29   31   28   28   30   33   27    29 #>  [1342,]   26   26   28   30   27   27   29   32   26    28 #>  [1343,]   26   26   28   30   27   27   29   32   26    28 #>  [1344,]   26   26   28   30   27   27   29   32   26    28 #>  [1345,]   26   26   29   31   28   28   30   33   27    29 #>  [1346,]   25   26   28   30   27   27   29   32   26    28 #>  [1347,]   25   26   28   30   27   27   29   32   26    28 #>  [1348,]   26   26   28   30   27   27   29   32   26    28 #>  [1349,]   26   26   29   31   28   28   30   33   27    29 #>  [1350,]   26   26   29   31   28   28   30   33   27    29 #>  [1351,]   26   26   28   30   27   27   29   32   26    28 #>  [1352,]   25   26   29   31   28   28   30   33   27    29 #>  [1353,]   26   26   29   31   28   28   30   33   27    29 #>  [1354,]   26   26   29   31   28   28   30   33   27    29 #>  [1355,]   25   26   29   31   28   28   30   33   27    29 #>  [1356,]   26   26   28   30   27   27   29   32   26    28 #>  [1357,]   25   26   29   31   28   28   30   33   27    29 #>  [1358,]   26   26   29   31   28   28   30   33   27    29 #>  [1359,]   25   26   29   31   28   28   30   33   27    29 #>  [1360,]   25   26   28   30   27   27   29   32   26    28 #>  [1361,]   26   26   28   30   27   27   29   32   26    28 #>  [1362,]   26   26   28   30   27   27   29   32   26    28 #>  [1363,]   26   26   28   30   27   27   29   32   26    28 #>  [1364,]   26   26   28   30   27   27   29   32   26    28 #>  [1365,]   26   26   28   30   27   27   29   32   26    28 #>  [1366,]   26   26   28   30   27   27   29   32   26    28 #>  [1367,]   25   26   29   31   28   28   30   33   27    29 #>  [1368,]   25   26   28   30   27   27   29   32   26    28 #>  [1369,]   26   26   28   30   27   27   29   32   26    28 #>  [1370,]   26   26   28   30   27   27   29   32   26    28 #>  [1371,]   26   26   29   31   28   28   30   33   27    29 #>  [1372,]   25   26   29   31   28   28   30   33   27    29 #>  [1373,]   26   26   29   31   28   28   30   33   27    29 #>  [1374,]   25   26   29   31   28   28   30   33   27    29 #>  [1375,]   26   26   28   30   27   27   29   32   26    28 #>  [1376,]   25   26   29   31   28   28   30   33   27    29 #>  [1377,]   26   26   29   31   28   28   30   33   27    29 #>  [1378,]   25   26   28   30   27   27   29   32   26    28 #>  [1379,]   26   26   28   30   27   27   29   32   26    28 #>  [1380,]   25   26   29   31   28   28   30   33   27    29 #>  [1381,]   26   26   28   30   27   27   29   32   26    28 #>  [1382,]   26   26   28   30   27   27   29   32   26    28 #>  [1383,]   26   26   28   30   27   27   29   32   26    28 #>  [1384,]   26   26   29   31   28   28   30   33   27    29 #>  [1385,]   26   26   29   31   28   28   30   33   27    29 #>  [1386,]   25   26   29   31   28   28   30   33   27    29 #>  [1387,]   26   26   29   31   28   28   30   33   27    29 #>  [1388,]   26   26   29   31   28   28   30   33   27    29 #>  [1389,]   26   26   28   30   27   27   29   32   26    28 #>  [1390,]   26   26   29   31   28   28   30   33   27    29 #>  [1391,]   26   26   29   31   28   28   30   33   27    29 #>  [1392,]   25   26   28   30   27   27   29   32   26    28 #>  [1393,]   26   26   28   30   27   27   29   32   26    28 #>  [1394,]   26   26   28   30   27   27   29   32   26    28 #>  [1395,]   26   26   28   30   27   27   29   32   26    28 #>  [1396,]   25   26   28   30   27   27   29   32   26    28 #>  [1397,]   25   26   28   30   27   27   29   32   26    28 #>  [1398,]   25   26   28   30   27   27   29   32   26    28 #>  [1399,]   26   26   28   30   27   27   29   32   26    28 #>  [1400,]   26   26   28   30   27   27   29   32   26    28 #>  [1401,]   28   28   31   32   31   31   31   34   28    30 #>  [1402,]   27   27   30   33   29   29   32   35   29    31 #>  [1403,]   27   27   30   33   29   29   32   35   29    31 #>  [1404,]   28   28   31   32   31   31   31   34   28    30 #>  [1405,]   27   27   30   33   29   29   32   35   29    31 #>  [1406,]   27   27   30   33   29   29   32   35   29    31 #>  [1407,]   28   28   31   32   31   31   31   34   28    30 #>  [1408,]   28   28   31   32   32   31   31   34   28    30 #>  [1409,]   28   28   31   32   32   31   31   34   28    30 #>  [1410,]   28   28   31   32   31   31   31   34   28    30 #>  [1411,]   27   27   30   33   29   29   32   35   29    31 #>  [1412,]   27   27   30   33   29   29   32   35   29    31 #>  [1413,]   28   28   31   32   31   31   31   34   28    30 #>  [1414,]   27   27   30   33   29   29   32   35   29    31 #>  [1415,]   28   28   31   32   32   31   31   34   28    30 #>  [1416,]   28   28   31   32   31   31   31   34   28    30 #>  [1417,]   28   28   31   32   31   31   31   34   28    30 #>  [1418,]   28   28   31   32   31   31   31   34   28    30 #>  [1419,]   27   27   30   34   30   30   32   35   29    31 #>  [1420,]   27   27   30   34   30   30   32   35   29    31 #>  [1421,]   28   28   31   32   31   31   31   34   28    30 #>  [1422,]   27   27   30   34   30   30   32   35   29    31 #>  [1423,]   28   28   31   32   31   31   31   34   28    30 #>  [1424,]   27   27   30   33   29   29   32   35   29    31 #>  [1425,]   28   28   31   32   31   31   31   34   28    30 #>  [1426,]   27   27   30   33   29   29   32   35   29    31 #>  [1427,]   28   28   31   32   31   31   31   34   28    30 #>  [1428,]   28   28   31   32   31   31   31   34   28    30 #>  [1429,]   27   27   30   34   30   30   32   35   29    31 #>  [1430,]   27   27   30   33   29   29   32   35   29    31 #>  [1431,]   27   27   30   33   29   29   32   35   29    31 #>  [1432,]   27   27   30   33   29   29   32   35   29    31 #>  [1433,]   27   27   30   33   29   29   32   35   29    31 #>  [1434,]   27   27   30   33   29   29   32   35   29    31 #>  [1435,]   27   27   30   33   29   29   32   35   29    31 #>  [1436,]   27   27   30   34   30   30   32   35   29    31 #>  [1437,]   28   28   31   32   31   31   31   34   28    30 #>  [1438,]   28   28   31   32   31   31   31   34   28    30 #>  [1439,]   28   28   31   32   31   31   31   34   28    30 #>  [1440,]   27   27   30   33   29   29   32   35   29    31 #>  [1441,]   27   27   30   33   29   29   32   35   29    31 #>  [1442,]   27   27   30   33   29   29   32   35   29    31 #>  [1443,]   28   28   31   32   32   31   31   34   28    30 #>  [1444,]   27   27   30   33   29   29   32   35   29    31 #>  [1445,]   28   28   31   32   31   31   31   34   28    30 #>  [1446,]   28   28   31   32   32   31   31   34   28    30 #>  [1447,]   28   28   31   32   31   31   31   34   28    30 #>  [1448,]   27   27   30   33   29   29   32   35   29    31 #>  [1449,]   27   27   30   33   29   29   32   35   29    31 #>  [1450,]   27   27   30   33   29   29   32   35   29    31 #>  [1451,]   27   27   30   33   29   29   32   35   29    31 #>  [1452,]   27   27   30   33   29   29   32   35   29    31 #>  [1453,]   28   28   31   32   31   31   31   34   28    30 #>  [1454,]   27   27   30   33   29   29   32   35   29    31 #>  [1455,]   27   27   30   34   30   30   32   35   29    31 #>  [1456,]   28   28   31   32   32   31   31   34   28    30 #>  [1457,]   27   27   30   33   29   29   32   35   29    31 #>  [1458,]   27   27   30   34   30   30   32   35   29    31 #>  [1459,]   27   27   30   33   29   29   32   35   29    31 #>  [1460,]   27   27   30   33   29   29   32   35   29    31 #>  [1461,]   28   28   31   32   32   31   31   34   28    30 #>  [1462,]   27   27   30   33   29   29   32   35   29    31 #>  [1463,]   27   27   30   33   29   29   32   35   29    31 #>  [1464,]   28   28   31   32   32   31   31   34   28    30 #>  [1465,]   27   27   30   33   29   29   32   35   29    31 #>  [1466,]   27   27   30   34   30   30   32   35   29    31 #>  [1467,]   27   27   30   33   29   29   32   35   29    31 #>  [1468,]   27   27   30   33   29   29   32   35   29    31 #>  [1469,]   27   27   30   33   29   29   32   35   29    31 #>  [1470,]   28   28   31   32   31   31   31   34   28    30 #>  [1471,]   28   28   31   32   31   31   31   34   28    30 #>  [1472,]   28   28   31   32   31   31   31   34   28    30 #>  [1473,]   28   28   31   32   31   31   31   34   28    30 #>  [1474,]   28   28   31   32   31   31   31   34   28    30 #>  [1475,]   28   28   31   32   31   31   31   34   28    30 #>  [1476,]   28   28   31   32   32   31   31   34   28    30 #>  [1477,]   28   28   31   32   31   31   31   34   28    30 #>  [1478,]   27   27   30   33   29   29   32   35   29    31 #>  [1479,]   28   28   31   32   31   31   31   34   28    30 #>  [1480,]   27   27   30   33   29   29   32   35   29    31 #>  [1481,]   27   27   30   34   30   30   32   35   29    31 #>  [1482,]   28   28   31   32   31   31   31   34   28    30 #>  [1483,]   27   27   30   34   30   30   32   35   29    31 #>  [1484,]   28   28   31   32   31   31   31   34   28    30 #>  [1485,]   27   27   30   33   29   29   32   35   29    31 #>  [1486,]   27   27   30   33   29   29   32   35   29    31 #>  [1487,]   28   28   31   32   31   31   31   34   28    30 #>  [1488,]   28   28   31   32   31   31   31   34   28    30 #>  [1489,]   27   27   30   33   29   29   32   35   29    31 #>  [1490,]   28   28   31   32   31   31   31   34   28    30 #>  [1491,]   27   27   30   33   29   29   32   35   29    31 #>  [1492,]   27   27   30   33   29   29   32   35   29    31 #>  [1493,]   27   27   30   33   29   29   32   35   29    31 #>  [1494,]   28   28   31   32   32   31   31   34   28    30 #>  [1495,]   28   28   31   32   31   31   31   34   28    30 #>  [1496,]   28   28   31   32   31   31   31   34   28    30 #>  [1497,]   27   27   30   34   30   30   32   35   29    31 #>  [1498,]   27   27   30   33   29   29   32   35   29    31 #>  [1499,]   27   27   30   33   29   29   32   35   29    31 #>  [1500,]   28   28   31   32   31   31   31   34   28    30 #>  [1501,]   30   30   33   35   33   32   33   36   31    33 #>  [1502,]   30   30   33   35   34   33   34   37   30    32 #>  [1503,]   29   29   32   35   33   32   33   36   31    33 #>  [1504,]   29   29   32   35   33   32   33   36   31    33 #>  [1505,]   29   29   32   35   34   33   34   37   30    32 #>  [1506,]   29   29   32   35   33   32   33   36   31    33 #>  [1507,]   30   30   33   35   33   32   33   36   32    34 #>  [1508,]   30   30   33   35   33   32   33   36   31    33 #>  [1509,]   29   29   32   35   34   33   34   37   30    32 #>  [1510,]   29   29   32   35   34   33   34   37   30    32 #>  [1511,]   29   29   32   35   33   32   33   36   31    33 #>  [1512,]   30   30   33   35   34   33   34   37   30    32 #>  [1513,]   30   30   33   35   34   33   34   37   30    32 #>  [1514,]   29   29   32   35   33   32   33   36   31    33 #>  [1515,]   30   30   33   35   33   32   33   36   31    33 #>  [1516,]   30   30   33   35   33   32   33   36   31    33 #>  [1517,]   29   29   32   35   34   33   34   37   30    32 #>  [1518,]   30   30   33   35   34   33   34   37   30    32 #>  [1519,]   30   30   33   35   33   32   33   36   31    33 #>  [1520,]   30   30   33   35   34   33   34   37   30    32 #>  [1521,]   29   29   32   35   34   33   34   37   30    32 #>  [1522,]   30   30   33   35   34   33   34   37   30    32 #>  [1523,]   30   30   33   35   34   33   34   37   30    32 #>  [1524,]   29   29   32   35   34   33   34   37   30    32 #>  [1525,]   29   29   32   35   33   32   33   36   32    34 #>  [1526,]   30   30   33   35   33   32   33   36   31    33 #>  [1527,]   30   30   33   35   34   33   34   37   30    32 #>  [1528,]   29   29   32   35   33   32   33   36   31    33 #>  [1529,]   30   30   33   35   34   33   34   37   30    32 #>  [1530,]   30   30   33   35   34   33   34   37   30    32 #>  [1531,]   29   29   32   35   34   33   34   37   30    32 #>  [1532,]   29   29   32   35   34   33   34   37   30    32 #>  [1533,]   30   30   33   35   34   33   34   37   30    32 #>  [1534,]   29   29   32   35   33   32   33   36   31    33 #>  [1535,]   29   29   32   35   33   32   33   36   31    33 #>  [1536,]   30   30   33   35   34   33   34   37   30    32 #>  [1537,]   30   30   33   35   33   32   33   36   31    33 #>  [1538,]   30   30   33   35   33   32   33   36   31    33 #>  [1539,]   29   29   32   35   33   32   33   36   32    34 #>  [1540,]   29   29   32   35   34   33   34   37   30    32 #>  [1541,]   30   30   33   35   33   32   33   36   32    34 #>  [1542,]   29   29   32   35   33   32   33   36   31    33 #>  [1543,]   30   30   33   35   33   32   33   36   32    34 #>  [1544,]   30   30   33   35   34   33   34   37   30    32 #>  [1545,]   30   30   33   35   33   32   33   36   31    33 #>  [1546,]   30   30   33   35   33   32   33   36   31    33 #>  [1547,]   29   29   32   35   33   32   33   36   32    34 #>  [1548,]   29   29   32   35   33   32   33   36   32    34 #>  [1549,]   30   30   33   35   33   32   33   36   31    33 #>  [1550,]   30   30   33   35   34   33   34   37   30    32 #>  [1551,]   30   30   33   35   33   32   33   36   32    34 #>  [1552,]   29   29   32   35   33   32   33   36   31    33 #>  [1553,]   30   30   33   35   34   33   34   37   30    32 #>  [1554,]   29   29   32   35   33   32   33   36   32    34 #>  [1555,]   30   30   33   35   33   32   33   36   31    33 #>  [1556,]   30   30   33   35   33   32   33   36   31    33 #>  [1557,]   29   29   32   35   33   32   33   36   31    33 #>  [1558,]   30   30   33   35   33   32   33   36   32    34 #>  [1559,]   30   30   33   35   33   32   33   36   31    33 #>  [1560,]   30   30   33   35   34   33   34   37   30    32 #>  [1561,]   30   30   33   35   34   33   34   37   30    32 #>  [1562,]   29   29   32   35   33   32   33   36   31    33 #>  [1563,]   30   30   33   35   34   33   34   37   30    32 #>  [1564,]   30   30   33   35   33   32   33   36   31    33 #>  [1565,]   29   29   32   35   33   32   33   36   31    33 #>  [1566,]   30   30   33   35   33   32   33   36   32    34 #>  [1567,]   29   29   32   35   33   32   33   36   32    34 #>  [1568,]   30   30   33   35   33   32   33   36   31    33 #>  [1569,]   30   30   33   35   33   32   33   36   31    33 #>  [1570,]   29   29   32   35   34   33   34   37   30    32 #>  [1571,]   30   30   33   35   33   32   33   36   32    34 #>  [1572,]   29   29   32   35   33   32   33   36   31    33 #>  [1573,]   29   29   32   35   33   32   33   36   31    33 #>  [1574,]   29   29   32   35   33   32   33   36   32    34 #>  [1575,]   30   30   33   35   34   33   34   37   30    32 #>  [1576,]   29   29   32   35   33   32   33   36   32    34 #>  [1577,]   30   30   33   35   33   32   33   36   31    33 #>  [1578,]   30   30   33   35   33   32   33   36   32    34 #>  [1579,]   29   29   32   35   33   32   33   36   31    33 #>  [1580,]   30   30   33   35   34   33   34   37   30    32 #>  [1581,]   30   30   33   35   34   33   34   37   30    32 #>  [1582,]   29   29   32   35   33   32   33   36   31    33 #>  [1583,]   30   30   33   35   34   33   34   37   30    32 #>  [1584,]   30   30   33   35   34   33   34   37   30    32 #>  [1585,]   30   30   33   35   33   32   33   36   32    34 #>  [1586,]   29   29   32   35   34   33   34   37   30    32 #>  [1587,]   30   30   33   35   34   33   34   37   30    32 #>  [1588,]   29   29   32   35   34   33   34   37   30    32 #>  [1589,]   29   29   32   35   33   32   33   36   31    33 #>  [1590,]   30   30   33   35   33   32   33   36   32    34 #>  [1591,]   29   29   32   35   33   32   33   36   31    33 #>  [1592,]   29   29   32   35   34   33   34   37   30    32 #>  [1593,]   30   30   33   35   34   33   34   37   30    32 #>  [1594,]   29   29   32   35   33   32   33   36   31    33 #>  [1595,]   30   30   33   35   34   33   34   37   30    32 #>  [1596,]   30   30   33   35   33   32   33   36   31    33 #>  [1597,]   30   30   33   35   33   32   33   36   31    33 #>  [1598,]   29   29   32   35   33   32   33   36   32    34 #>  [1599,]   29   29   32   35   33   32   33   36   32    34 #>  [1600,]   30   30   33   35   33   32   33   36   31    33 #>  [1601,]   31   31   34   36   35   34   35   38   33    35 #>  [1602,]   31   31   34   36   35   34   35   38   33    35 #>  [1603,]   31   31   34   36   35   34   35   38   33    35 #>  [1604,]   31   31   34   36   35   34   35   38   33    35 #>  [1605,]   31   31   34   36   35   34   35   38   33    35 #>  [1606,]   32   32   35   37   36   35   37   39   34    36 #>  [1607,]   31   31   34   36   35   34   35   38   33    35 #>  [1608,]   32   32   35   37   36   35   36   39   34    36 #>  [1609,]   32   32   35   37   36   35   36   39   34    36 #>  [1610,]   31   31   34   36   35   34   35   38   33    35 #>  [1611,]   31   31   34   36   35   34   35   38   33    35 #>  [1612,]   32   32   35   37   36   35   37   39   34    36 #>  [1613,]   31   31   34   36   35   34   35   38   33    35 #>  [1614,]   31   31   34   36   35   34   35   38   33    35 #>  [1615,]   32   32   35   37   36   35   37   39   34    36 #>  [1616,]   31   31   34   36   35   34   35   38   33    35 #>  [1617,]   31   31   34   36   35   34   35   38   33    35 #>  [1618,]   31   31   34   36   35   34   35   38   33    35 #>  [1619,]   31   31   34   36   35   34   35   38   33    35 #>  [1620,]   31   31   34   36   35   34   35   38   33    35 #>  [1621,]   31   31   34   36   35   34   35   38   33    35 #>  [1622,]   31   31   34   36   35   34   35   38   33    35 #>  [1623,]   31   31   34   36   35   34   35   38   33    35 #>  [1624,]   31   31   34   36   35   34   35   38   33    35 #>  [1625,]   31   31   34   36   35   34   35   38   33    35 #>  [1626,]   32   32   35   37   36   35   37   39   34    36 #>  [1627,]   31   31   34   36   35   34   35   38   33    35 #>  [1628,]   31   31   34   36   35   34   35   38   33    35 #>  [1629,]   31   31   34   36   35   34   35   38   33    35 #>  [1630,]   31   31   34   36   35   34   35   38   33    35 #>  [1631,]   31   31   34   36   35   34   35   38   33    35 #>  [1632,]   31   31   34   36   35   34   35   38   33    35 #>  [1633,]   32   32   35   37   36   35   37   39   34    36 #>  [1634,]   31   31   34   36   35   34   35   38   33    35 #>  [1635,]   31   31   34   36   35   34   35   38   33    35 #>  [1636,]   31   31   34   36   35   34   35   38   33    35 #>  [1637,]   31   31   34   36   35   34   35   38   33    35 #>  [1638,]   31   31   34   36   35   34   35   38   33    35 #>  [1639,]   31   31   34   36   35   34   35   38   33    35 #>  [1640,]   31   31   34   36   35   34   35   38   33    35 #>  [1641,]   31   31   34   36   35   34   35   38   33    35 #>  [1642,]   31   31   34   36   35   34   35   38   33    35 #>  [1643,]   32   32   35   37   36   35   36   39   34    36 #>  [1644,]   31   31   34   36   35   34   35   38   33    35 #>  [1645,]   31   31   34   36   35   34   35   38   33    35 #>  [1646,]   32   32   35   37   36   35   37   39   34    36 #>  [1647,]   31   31   34   36   35   34   35   38   33    35 #>  [1648,]   31   31   34   36   35   34   35   38   33    35 #>  [1649,]   31   31   34   36   35   34   35   38   33    35 #>  [1650,]   31   31   34   36   35   34   35   38   33    35 #>  [1651,]   32   32   35   37   36   35   36   39   34    36 #>  [1652,]   31   31   34   36   35   34   35   38   33    35 #>  [1653,]   31   31   34   36   35   34   35   38   33    35 #>  [1654,]   31   31   34   36   35   34   35   38   33    35 #>  [1655,]   31   31   34   36   35   34   35   38   33    35 #>  [1656,]   32   32   35   37   36   35   36   39   34    36 #>  [1657,]   32   32   35   37   36   35   37   39   34    36 #>  [1658,]   31   31   34   36   35   34   35   38   33    35 #>  [1659,]   31   31   34   36   35   34   35   38   33    35 #>  [1660,]   31   31   34   36   35   34   35   38   33    35 #>  [1661,]   32   32   35   37   36   35   37   39   34    36 #>  [1662,]   31   31   34   36   35   34   35   38   33    35 #>  [1663,]   31   31   34   36   35   34   35   38   33    35 #>  [1664,]   32   32   35   37   36   35   36   39   34    36 #>  [1665,]   31   31   34   36   35   34   35   38   33    35 #>  [1666,]   32   32   35   37   36   35   36   39   34    36 #>  [1667,]   31   31   34   36   35   34   35   38   33    35 #>  [1668,]   32   32   35   37   36   35   37   39   34    36 #>  [1669,]   31   31   34   36   35   34   35   38   33    35 #>  [1670,]   31   31   34   36   35   34   35   38   33    35 #>  [1671,]   31   31   34   36   35   34   35   38   33    35 #>  [1672,]   31   31   34   36   35   34   35   38   33    35 #>  [1673,]   31   31   34   36   35   34   35   38   33    35 #>  [1674,]   31   31   34   36   35   34   35   38   33    35 #>  [1675,]   31   31   34   36   35   34   35   38   33    35 #>  [1676,]   32   32   35   37   36   35   37   39   34    36 #>  [1677,]   31   31   34   36   35   34   35   38   33    35 #>  [1678,]   31   31   34   36   35   34   35   38   33    35 #>  [1679,]   31   31   34   36   35   34   35   38   33    35 #>  [1680,]   31   31   34   36   35   34   35   38   33    35 #>  [1681,]   31   31   34   36   35   34   35   38   33    35 #>  [1682,]   31   31   34   36   35   34   35   38   33    35 #>  [1683,]   31   31   34   36   35   34   35   38   33    35 #>  [1684,]   31   31   34   36   35   34   35   38   33    35 #>  [1685,]   31   31   34   36   35   34   35   38   33    35 #>  [1686,]   31   31   34   36   35   34   35   38   33    35 #>  [1687,]   31   31   34   36   35   34   35   38   33    35 #>  [1688,]   31   31   34   36   35   34   35   38   33    35 #>  [1689,]   31   31   34   36   35   34   35   38   33    35 #>  [1690,]   31   31   34   36   35   34   35   38   33    35 #>  [1691,]   31   31   34   36   35   34   35   38   33    35 #>  [1692,]   31   31   34   36   35   34   35   38   33    35 #>  [1693,]   31   31   34   36   35   34   35   38   33    35 #>  [1694,]   32   32   35   37   36   35   37   39   34    36 #>  [1695,]   31   31   34   36   35   34   35   38   33    35 #>  [1696,]   31   31   34   36   35   34   35   38   33    35 #>  [1697,]   31   31   34   36   35   34   35   38   33    35 #>  [1698,]   31   31   34   36   35   34   35   38   33    35 #>  [1699,]   31   31   34   36   35   34   35   38   33    35 #>  [1700,]   31   31   34   36   35   34   35   38   33    35 #>  [1701,]   34   34   37   39   38   36   39   41   36    37 #>  [1702,]   34   34   37   39   38   36   38   40   35    39 #>  [1703,]   33   33   36   38   37   36   38   40   35    38 #>  [1704,]   34   34   37   39   38   36   39   41   36    37 #>  [1705,]   33   33   36   38   37   36   39   41   36    37 #>  [1706,]   34   34   37   39   38   36   39   41   36    37 #>  [1707,]   34   34   37   39   38   36   38   40   35    39 #>  [1708,]   34   34   37   39   38   36   39   41   36    37 #>  [1709,]   33   33   36   38   37   36   39   41   36    37 #>  [1710,]   33   33   36   38   37   36   39   41   36    37 #>  [1711,]   33   33   36   38   37   36   39   41   36    37 #>  [1712,]   34   34   37   39   38   36   39   41   36    37 #>  [1713,]   34   34   37   39   38   36   38   40   35    39 #>  [1714,]   33   33   36   38   37   36   39   41   36    37 #>  [1715,]   34   34   37   39   38   36   39   41   36    37 #>  [1716,]   34   34   37   39   38   36   38   40   35    38 #>  [1717,]   34   34   37   39   38   36   39   41   36    37 #>  [1718,]   34   34   37   39   38   36   38   40   35    39 #>  [1719,]   34   34   37   39   38   36   38   40   35    38 #>  [1720,]   34   34   37   39   38   36   39   41   36    37 #>  [1721,]   33   33   36   38   37   36   38   40   35    39 #>  [1722,]   34   34   37   39   38   36   38   40   35    39 #>  [1723,]   34   34   37   39   38   36   38   40   35    39 #>  [1724,]   34   34   37   39   38   36   38   40   35    39 #>  [1725,]   34   34   37   39   38   36   39   41   36    37 #>  [1726,]   34   34   37   39   38   36   39   41   36    37 #>  [1727,]   34   34   37   39   38   36   39   41   36    37 #>  [1728,]   33   33   36   38   37   36   39   41   36    37 #>  [1729,]   34   34   37   39   38   36   39   41   36    37 #>  [1730,]   34   34   37   39   38   36   38   40   35    39 #>  [1731,]   33   33   36   38   37   36   38   40   35    39 #>  [1732,]   33   33   36   38   37   36   39   41   36    37 #>  [1733,]   34   34   37   39   38   36   39   41   36    37 #>  [1734,]   33   33   36   38   37   36   38   40   35    38 #>  [1735,]   33   33   36   38   37   36   38   40   35    38 #>  [1736,]   34   34   37   39   38   36   38   40   35    39 #>  [1737,]   34   34   37   39   38   36   38   40   35    38 #>  [1738,]   34   34   37   39   38   36   39   41   36    37 #>  [1739,]   33   33   36   38   37   36   38   40   35    39 #>  [1740,]   33   33   36   38   37   36   38   40   35    39 #>  [1741,]   34   34   37   39   38   36   39   41   36    37 #>  [1742,]   34   34   37   39   38   36   39   41   36    37 #>  [1743,]   34   34   37   39   38   36   39   41   36    37 #>  [1744,]   34   34   37   39   38   36   38   40   35    39 #>  [1745,]   34   34   37   39   38   36   39   41   36    37 #>  [1746,]   34   34   37   39   38   36   39   41   36    37 #>  [1747,]   34   34   37   39   38   36   38   40   35    39 #>  [1748,]   33   33   36   38   37   36   39   41   36    37 #>  [1749,]   34   34   37   39   38   36   38   40   35    38 #>  [1750,]   34   34   37   39   38   36   39   41   36    37 #>  [1751,]   34   34   37   39   38   36   39   41   36    37 #>  [1752,]   33   33   36   38   37   36   39   41   36    37 #>  [1753,]   34   34   37   39   38   36   39   41   36    37 #>  [1754,]   34   34   37   39   38   36   38   40   35    39 #>  [1755,]   34   34   37   39   38   36   39   41   36    37 #>  [1756,]   34   34   37   39   38   36   39   41   36    37 #>  [1757,]   34   34   37   39   38   36   39   41   36    37 #>  [1758,]   34   34   37   39   38   36   39   41   36    37 #>  [1759,]   34   34   37   39   38   36   38   40   35    39 #>  [1760,]   34   34   37   39   38   36   39   41   36    37 #>  [1761,]   34   34   37   39   38   36   39   41   36    37 #>  [1762,]   33   33   36   38   37   36   38   40   35    39 #>  [1763,]   34   34   37   39   38   36   39   41   36    37 #>  [1764,]   34   34   37   39   38   36   39   41   36    37 #>  [1765,]   33   33   36   38   37   36   39   41   36    37 #>  [1766,]   34   34   37   39   38   36   39   41   36    37 #>  [1767,]   34   34   37   39   38   36   39   41   36    37 #>  [1768,]   34   34   37   39   38   36   39   41   36    37 #>  [1769,]   34   34   37   39   38   36   39   41   36    37 #>  [1770,]   33   33   36   38   37   36   38   40   35    39 #>  [1771,]   34   34   37   39   38   36   39   41   36    37 #>  [1772,]   33   33   36   38   37   36   39   41   36    37 #>  [1773,]   34   34   37   39   38   36   39   41   36    37 #>  [1774,]   33   33   36   38   37   36   39   41   36    37 #>  [1775,]   34   34   37   39   38   36   39   41   36    37 #>  [1776,]   34   34   37   39   38   36   39   41   36    37 #>  [1777,]   34   34   37   39   38   36   38   40   35    38 #>  [1778,]   34   34   37   39   38   36   39   41   36    37 #>  [1779,]   34   34   37   39   38   36   38   40   35    39 #>  [1780,]   34   34   37   39   38   36   38   40   35    39 #>  [1781,]   34   34   37   39   38   36   39   41   36    37 #>  [1782,]   33   33   36   38   37   36   39   41   36    37 #>  [1783,]   34   34   37   39   38   36   38   40   35    39 #>  [1784,]   34   34   37   39   38   36   39   41   36    37 #>  [1785,]   34   34   37   39   38   36   39   41   36    37 #>  [1786,]   34   34   37   39   38   36   39   41   36    37 #>  [1787,]   34   34   37   39   38   36   39   41   36    37 #>  [1788,]   34   34   37   39   38   36   39   41   36    37 #>  [1789,]   34   34   37   39   38   36   39   41   36    37 #>  [1790,]   34   34   37   39   38   36   39   41   36    37 #>  [1791,]   34   34   37   39   38   36   39   41   36    37 #>  [1792,]   34   34   37   39   38   36   39   41   36    37 #>  [1793,]   34   34   37   39   38   36   38   40   35    39 #>  [1794,]   34   34   37   39   38   36   39   41   36    37 #>  [1795,]   34   34   37   39   38   36   38   40   35    39 #>  [1796,]   34   34   37   39   38   36   39   41   36    37 #>  [1797,]   34   34   37   39   38   36   39   41   36    37 #>  [1798,]   33   33   36   38   37   36   38   40   35    39 #>  [1799,]   34   34   37   39   38   36   39   41   36    37 #>  [1800,]   34   34   37   39   38   36   38   40   35    38 #>  [1801,]   35   35   38   40   39   37   40   42   37    40 #>  [1802,]   36   36   39   41   40   38   41   43   38    41 #>  [1803,]   36   36   39   41   40   38   41   43   38    41 #>  [1804,]   35   35   38   40   39   37   40   42   37    40 #>  [1805,]   35   35   38   40   39   37   40   42   37    40 #>  [1806,]   36   36   39   41   40   38   41   43   38    41 #>  [1807,]   36   36   39   41   40   38   41   43   38    41 #>  [1808,]   35   35   38   40   39   37   40   42   37    40 #>  [1809,]   35   35   38   40   39   37   40   42   37    40 #>  [1810,]   35   35   38   40   39   37   40   42   37    40 #>  [1811,]   35   35   38   40   39   37   40   42   37    40 #>  [1812,]   36   36   39   41   40   38   41   43   38    41 #>  [1813,]   35   35   38   40   39   37   40   42   37    40 #>  [1814,]   35   35   38   40   39   37   40   42   37    40 #>  [1815,]   35   35   38   40   39   37   40   42   37    40 #>  [1816,]   35   35   38   40   39   37   40   42   37    40 #>  [1817,]   35   35   38   40   39   37   40   42   37    40 #>  [1818,]   36   36   39   41   40   38   41   43   38    41 #>  [1819,]   36   36   39   41   40   38   41   43   38    41 #>  [1820,]   36   36   39   41   40   38   41   43   38    41 #>  [1821,]   35   35   38   40   39   37   40   42   37    40 #>  [1822,]   35   35   38   40   39   37   40   42   37    40 #>  [1823,]   36   36   39   41   40   38   41   43   38    41 #>  [1824,]   35   35   38   40   39   37   40   42   37    40 #>  [1825,]   36   36   39   41   40   38   41   43   38    41 #>  [1826,]   35   35   38   40   39   37   40   42   37    40 #>  [1827,]   35   35   38   40   39   37   40   42   37    40 #>  [1828,]   36   36   39   41   40   38   41   43   38    41 #>  [1829,]   35   35   38   40   39   37   40   42   37    40 #>  [1830,]   35   35   38   40   39   37   40   42   37    40 #>  [1831,]   36   36   39   41   40   38   41   43   38    41 #>  [1832,]   36   36   39   41   40   38   41   43   38    41 #>  [1833,]   36   36   39   41   40   38   41   43   38    41 #>  [1834,]   36   36   39   41   40   38   41   43   38    41 #>  [1835,]   35   35   38   40   39   37   40   42   37    40 #>  [1836,]   35   35   38   40   39   37   40   42   37    40 #>  [1837,]   35   35   38   40   39   37   40   42   37    40 #>  [1838,]   35   35   38   40   39   37   40   42   37    40 #>  [1839,]   35   35   38   40   39   37   40   42   37    40 #>  [1840,]   36   36   39   41   40   38   41   43   38    41 #>  [1841,]   35   35   38   40   39   37   40   42   37    40 #>  [1842,]   36   36   39   41   40   38   41   43   38    41 #>  [1843,]   35   35   38   40   39   37   40   42   37    40 #>  [1844,]   35   35   38   40   39   37   40   42   37    40 #>  [1845,]   35   35   38   40   39   37   40   42   37    40 #>  [1846,]   35   35   38   40   39   37   40   42   37    40 #>  [1847,]   35   35   38   40   39   37   40   42   37    40 #>  [1848,]   36   36   39   41   40   38   41   43   38    41 #>  [1849,]   35   35   38   40   39   37   40   42   37    40 #>  [1850,]   35   35   38   40   39   37   40   42   37    40 #>  [1851,]   35   35   38   40   39   37   40   42   37    40 #>  [1852,]   35   35   38   40   39   37   40   42   37    40 #>  [1853,]   35   35   38   40   39   37   40   42   37    40 #>  [1854,]   35   35   38   40   39   37   40   42   37    40 #>  [1855,]   35   35   38   40   39   37   40   42   37    40 #>  [1856,]   36   36   39   41   40   38   41   43   38    41 #>  [1857,]   35   35   38   40   39   37   40   42   37    40 #>  [1858,]   35   35   38   40   39   37   40   42   37    40 #>  [1859,]   35   35   38   40   39   37   40   42   37    40 #>  [1860,]   36   36   39   41   40   38   41   43   38    41 #>  [1861,]   35   35   38   40   39   37   40   42   37    40 #>  [1862,]   35   35   38   40   39   37   40   42   37    40 #>  [1863,]   35   35   38   40   39   37   40   42   37    40 #>  [1864,]   36   36   39   41   40   38   41   43   38    41 #>  [1865,]   36   36   39   41   40   38   41   43   38    41 #>  [1866,]   35   35   38   40   39   37   40   42   37    40 #>  [1867,]   35   35   38   40   39   37   40   42   37    40 #>  [1868,]   35   35   38   40   39   37   40   42   37    40 #>  [1869,]   35   35   38   40   39   37   40   42   37    40 #>  [1870,]   36   36   39   41   40   38   41   43   38    41 #>  [1871,]   36   36   39   41   40   38   41   43   38    41 #>  [1872,]   35   35   38   40   39   37   40   42   37    40 #>  [1873,]   36   36   39   41   40   38   41   43   38    41 #>  [1874,]   35   35   38   40   39   37   40   42   37    40 #>  [1875,]   35   35   38   40   39   37   40   42   37    40 #>  [1876,]   35   35   38   40   39   37   40   42   37    40 #>  [1877,]   35   35   38   40   39   37   40   42   37    40 #>  [1878,]   36   36   39   41   40   38   41   43   38    41 #>  [1879,]   35   35   38   40   39   37   40   42   37    40 #>  [1880,]   35   35   38   40   39   37   40   42   37    40 #>  [1881,]   35   35   38   40   39   37   40   42   37    40 #>  [1882,]   35   35   38   40   39   37   40   42   37    40 #>  [1883,]   35   35   38   40   39   37   40   42   37    40 #>  [1884,]   36   36   39   41   40   38   41   43   38    41 #>  [1885,]   35   35   38   40   39   37   40   42   37    40 #>  [1886,]   35   35   38   40   39   37   40   42   37    40 #>  [1887,]   35   35   38   40   39   37   40   42   37    40 #>  [1888,]   35   35   38   40   39   37   40   42   37    40 #>  [1889,]   35   35   38   40   39   37   40   42   37    40 #>  [1890,]   35   35   38   40   39   37   40   42   37    40 #>  [1891,]   35   35   38   40   39   37   40   42   37    40 #>  [1892,]   35   35   38   40   39   37   40   42   37    40 #>  [1893,]   36   36   39   41   40   38   41   43   38    41 #>  [1894,]   35   35   38   40   39   37   40   42   37    40 #>  [1895,]   35   35   38   40   39   37   40   42   37    40 #>  [1896,]   35   35   38   40   39   37   40   42   37    40 #>  [1897,]   36   36   39   41   40   38   41   43   38    41 #>  [1898,]   36   36   39   41   40   38   41   43   38    41 #>  [1899,]   35   35   38   40   39   37   40   42   37    40 #>  [1900,]   36   36   39   41   40   38   41   43   38    41 #>  [1901,]   38   38   40   43   42   41   44   45   40    42 #>  [1902,]   37   37   40   43   42   40   43   45   40    42 #>  [1903,]   38   38   40   43   42   41   44   45   40    42 #>  [1904,]   38   38   40   42   41   39   42   44   39    42 #>  [1905,]   38   38   40   43   42   41   44   45   40    42 #>  [1906,]   37   37   40   43   42   40   43   45   40    42 #>  [1907,]   38   38   40   43   42   41   44   45   40    42 #>  [1908,]   38   38   40   42   41   39   42   44   39    42 #>  [1909,]   38   38   40   42   41   39   42   44   39    42 #>  [1910,]   38   38   40   43   42   41   44   45   40    42 #>  [1911,]   37   37   40   43   42   40   43   45   40    42 #>  [1912,]   37   37   40   43   42   40   43   45   40    42 #>  [1913,]   38   38   40   43   42   41   44   45   40    42 #>  [1914,]   38   38   40   43   42   41   44   45   40    42 #>  [1915,]   37   37   40   43   42   40   43   45   40    42 #>  [1916,]   38   38   40   43   42   41   44   45   40    42 #>  [1917,]   37   37   40   42   41   39   42   44   39    42 #>  [1918,]   38   38   40   43   42   41   44   45   40    42 #>  [1919,]   37   37   40   43   42   40   43   45   40    42 #>  [1920,]   38   38   40   43   42   41   44   45   40    42 #>  [1921,]   38   38   40   43   42   41   44   45   40    42 #>  [1922,]   38   38   40   43   42   41   44   45   40    42 #>  [1923,]   37   37   40   43   42   40   43   45   40    42 #>  [1924,]   38   38   40   43   42   41   44   45   40    42 #>  [1925,]   38   38   40   43   42   41   44   45   40    42 #>  [1926,]   37   37   40   43   42   40   43   45   40    42 #>  [1927,]   38   38   40   42   41   39   42   44   39    42 #>  [1928,]   38   38   40   43   42   41   44   45   40    42 #>  [1929,]   37   37   40   43   42   40   43   45   40    42 #>  [1930,]   37   37   40   43   42   40   43   45   40    42 #>  [1931,]   37   37   40   43   42   40   43   45   40    42 #>  [1932,]   38   38   40   43   42   40   43   45   40    42 #>  [1933,]   38   38   40   43   42   41   44   45   40    42 #>  [1934,]   37   37   40   43   42   40   43   45   40    42 #>  [1935,]   37   37   40   43   42   40   43   45   40    42 #>  [1936,]   38   38   40   43   42   41   44   45   40    42 #>  [1937,]   37   37   40   43   42   40   43   45   40    42 #>  [1938,]   38   38   40   43   42   41   44   45   40    42 #>  [1939,]   38   38   40   43   42   41   44   45   40    42 #>  [1940,]   38   38   40   43   42   41   44   45   40    42 #>  [1941,]   38   38   40   43   42   41   44   45   40    42 #>  [1942,]   37   37   40   43   42   40   43   45   40    42 #>  [1943,]   37   37   40   43   42   40   43   45   40    42 #>  [1944,]   37   37   40   42   41   39   42   44   39    42 #>  [1945,]   38   38   40   43   42   41   44   45   40    42 #>  [1946,]   38   38   40   43   42   40   43   45   40    42 #>  [1947,]   37   37   40   43   42   40   43   45   40    42 #>  [1948,]   37   37   40   43   42   40   43   45   40    42 #>  [1949,]   38   38   40   43   42   41   44   45   40    42 #>  [1950,]   38   38   40   43   42   41   44   45   40    42 #>  [1951,]   38   38   40   43   42   40   43   45   40    42 #>  [1952,]   38   38   40   42   41   39   42   44   39    42 #>  [1953,]   38   38   40   43   42   41   44   45   40    42 #>  [1954,]   38   38   40   43   42   41   44   45   40    42 #>  [1955,]   38   38   40   43   42   41   44   45   40    42 #>  [1956,]   37   37   40   43   42   40   43   45   40    42 #>  [1957,]   38   38   40   43   42   41   44   45   40    42 #>  [1958,]   38   38   40   43   42   41   44   45   40    42 #>  [1959,]   38   38   40   43   42   41   44   45   40    42 #>  [1960,]   37   37   40   43   42   40   43   45   40    42 #>  [1961,]   37   37   40   43   42   40   43   45   40    42 #>  [1962,]   38   38   40   43   42   40   43   45   40    42 #>  [1963,]   37   37   40   43   42   40   43   45   40    42 #>  [1964,]   37   37   40   43   42   40   43   45   40    42 #>  [1965,]   37   37   40   43   42   40   43   45   40    42 #>  [1966,]   37   37   40   42   41   39   42   44   39    42 #>  [1967,]   38   38   40   43   42   41   44   45   40    42 #>  [1968,]   37   37   40   43   42   40   43   45   40    42 #>  [1969,]   38   38   40   43   42   40   43   45   40    42 #>  [1970,]   37   37   40   43   42   40   43   45   40    42 #>  [1971,]   38   38   40   43   42   41   44   45   40    42 #>  [1972,]   38   38   40   43   42   41   44   45   40    42 #>  [1973,]   38   38   40   43   42   41   44   45   40    42 #>  [1974,]   38   38   40   43   42   41   44   45   40    42 #>  [1975,]   37   37   40   43   42   40   43   45   40    42 #>  [1976,]   38   38   40   43   42   41   44   45   40    42 #>  [1977,]   38   38   40   43   42   41   44   45   40    42 #>  [1978,]   37   37   40   43   42   40   43   45   40    42 #>  [1979,]   37   37   40   43   42   40   43   45   40    42 #>  [1980,]   38   38   40   43   42   41   44   45   40    42 #>  [1981,]   37   37   40   42   41   39   42   44   39    42 #>  [1982,]   38   38   40   42   41   39   42   44   39    42 #>  [1983,]   38   38   40   43   42   41   44   45   40    42 #>  [1984,]   38   38   40   43   42   41   44   45   40    42 #>  [1985,]   38   38   40   43   42   41   44   45   40    42 #>  [1986,]   38   38   40   43   42   41   44   45   40    42 #>  [1987,]   38   38   40   43   42   41   44   45   40    42 #>  [1988,]   38   38   40   43   42   41   44   45   40    42 #>  [1989,]   38   38   40   43   42   40   43   45   40    42 #>  [1990,]   38   38   40   42   41   39   42   44   39    42 #>  [1991,]   38   38   40   43   42   41   44   45   40    42 #>  [1992,]   37   37   40   42   41   39   42   44   39    42 #>  [1993,]   38   38   40   43   42   40   43   45   40    42 #>  [1994,]   37   37   40   43   42   40   43   45   40    42 #>  [1995,]   37   37   40   42   41   39   42   44   39    42 #>  [1996,]   37   37   40   43   42   40   43   45   40    42 #>  [1997,]   38   38   40   43   42   40   43   45   40    42 #>  [1998,]   38   38   40   43   42   41   44   45   40    42 #>  [1999,]   38   38   40   42   41   39   42   44   39    42 #>  [2000,]   37   37   40   43   42   40   43   45   40    42 #>  [2001,]   39   39   41   44   44   43   46   48   43    44 #>  [2002,]   39   39   41   44   44   43   46   48   43    44 #>  [2003,]   39   39   41   44   44   43   46   48   43    44 #>  [2004,]   39   39   41   44   43   42   45   46   41    43 #>  [2005,]   39   39   41   44   44   43   46   48   43    44 #>  [2006,]   39   39   41   44   44   43   46   48   43    44 #>  [2007,]   39   39   41   44   44   43   46   48   43    44 #>  [2008,]   39   39   41   44   43   42   45   46   41    43 #>  [2009,]   40   40   42   44   43   42   45   46   41    43 #>  [2010,]   39   39   41   44   43   42   45   46   41    43 #>  [2011,]   39   39   41   44   44   43   46   48   43    44 #>  [2012,]   39   39   41   44   44   43   46   48   43    44 #>  [2013,]   40   40   42   44   44   43   46   48   43    44 #>  [2014,]   39   39   41   44   44   43   46   48   43    44 #>  [2015,]   39   39   41   44   44   43   46   48   43    44 #>  [2016,]   39   39   41   44   44   43   46   48   43    44 #>  [2017,]   40   40   42   44   44   43   46   47   42    44 #>  [2018,]   40   40   42   44   44   43   46   48   43    44 #>  [2019,]   39   39   41   44   44   43   46   48   43    44 #>  [2020,]   39   39   41   44   43   42   45   46   41    43 #>  [2021,]   39   39   41   44   44   43   46   48   43    44 #>  [2022,]   39   39   41   44   44   43   46   48   43    44 #>  [2023,]   39   39   41   44   44   43   46   48   43    44 #>  [2024,]   39   39   41   44   44   43   46   48   43    44 #>  [2025,]   39   39   41   44   44   43   46   48   43    44 #>  [2026,]   39   39   41   44   44   43   46   48   43    44 #>  [2027,]   40   40   42   44   44   43   46   47   42    44 #>  [2028,]   39   39   41   44   44   43   46   48   43    44 #>  [2029,]   39   39   41   44   44   43   46   48   43    44 #>  [2030,]   39   39   41   44   43   42   45   46   41    43 #>  [2031,]   39   39   41   44   44   43   46   48   43    44 #>  [2032,]   39   39   41   44   44   43   46   48   43    44 #>  [2033,]   39   39   41   44   44   43   46   48   43    44 #>  [2034,]   39   39   41   44   44   43   46   48   43    44 #>  [2035,]   39   39   41   44   44   43   46   48   43    44 #>  [2036,]   39   39   41   44   44   43   46   48   43    44 #>  [2037,]   39   39   41   44   44   43   46   48   43    44 #>  [2038,]   39   39   41   44   44   43   46   48   43    44 #>  [2039,]   39   39   41   44   44   43   46   48   43    44 #>  [2040,]   39   39   41   44   44   43   46   48   43    44 #>  [2041,]   39   39   41   44   44   43   46   48   43    44 #>  [2042,]   40   40   42   44   44   43   46   48   43    44 #>  [2043,]   39   39   41   44   43   42   45   46   41    43 #>  [2044,]   39   39   41   44   44   43   46   47   42    44 #>  [2045,]   39   39   41   44   44   43   46   48   43    44 #>  [2046,]   39   39   41   44   44   43   46   48   43    44 #>  [2047,]   39   39   41   44   44   43   46   48   43    44 #>  [2048,]   39   39   41   44   44   43   46   48   43    44 #>  [2049,]   39   39   41   44   44   43   46   48   43    44 #>  [2050,]   39   39   41   44   44   43   46   48   43    44 #>  [2051,]   40   40   42   44   43   42   45   46   41    43 #>  [2052,]   39   39   41   44   44   43   46   47   42    44 #>  [2053,]   40   40   42   44   43   42   45   46   41    43 #>  [2054,]   39   39   41   44   44   43   46   48   43    44 #>  [2055,]   39   39   41   44   44   43   46   48   43    44 #>  [2056,]   39   39   41   44   43   42   45   46   41    43 #>  [2057,]   39   39   41   44   44   43   46   48   43    44 #>  [2058,]   39   39   41   44   44   43   46   48   43    44 #>  [2059,]   39   39   41   44   44   43   46   48   43    44 #>  [2060,]   39   39   41   44   43   42   45   46   41    43 #>  [2061,]   39   39   41   44   44   43   46   48   43    44 #>  [2062,]   39   39   41   44   44   43   46   48   43    44 #>  [2063,]   39   39   41   44   44   43   46   48   43    44 #>  [2064,]   39   39   41   44   43   42   45   46   41    43 #>  [2065,]   40   40   42   44   44   43   46   48   43    44 #>  [2066,]   40   40   42   44   44   43   46   48   43    44 #>  [2067,]   39   39   41   44   43   42   45   46   41    43 #>  [2068,]   39   39   41   44   44   43   46   48   43    44 #>  [2069,]   39   39   41   44   44   43   46   48   43    44 #>  [2070,]   39   39   41   44   44   43   46   48   43    44 #>  [2071,]   39   39   41   44   44   43   46   48   43    44 #>  [2072,]   39   39   41   44   44   43   46   48   43    44 #>  [2073,]   39   39   41   44   44   43   46   48   43    44 #>  [2074,]   39   39   41   44   44   43   46   48   43    44 #>  [2075,]   39   39   41   44   44   43   46   48   43    44 #>  [2076,]   39   39   41   44   44   43   46   48   43    44 #>  [2077,]   39   39   41   44   44   43   46   48   43    44 #>  [2078,]   39   39   41   44   43   42   45   46   41    43 #>  [2079,]   40   40   42   44   44   43   46   48   43    44 #>  [2080,]   39   39   41   44   44   43   46   48   43    44 #>  [2081,]   39   39   41   44   44   43   46   47   42    44 #>  [2082,]   40   40   42   44   44   43   46   47   42    44 #>  [2083,]   39   39   41   44   44   43   46   48   43    44 #>  [2084,]   40   40   42   44   44   43   46   48   43    44 #>  [2085,]   39   39   41   44   43   42   45   46   41    43 #>  [2086,]   39   39   41   44   44   43   46   48   43    44 #>  [2087,]   39   39   41   44   44   43   46   48   43    44 #>  [2088,]   39   39   41   44   44   43   46   48   43    44 #>  [2089,]   39   39   41   44   43   42   45   46   41    43 #>  [2090,]   39   39   41   44   44   43   46   48   43    44 #>  [2091,]   40   40   42   44   43   42   45   46   41    43 #>  [2092,]   39   39   41   44   44   43   46   48   43    44 #>  [2093,]   40   40   42   44   44   43   46   48   43    44 #>  [2094,]   40   40   42   44   44   43   46   48   43    44 #>  [2095,]   39   39   41   44   43   42   45   46   41    43 #>  [2096,]   39   39   41   44   44   43   46   48   43    44 #>  [2097,]   39   39   41   44   44   43   46   48   43    44 #>  [2098,]   39   39   41   44   44   43   46   48   43    44 #>  [2099,]   39   39   41   44   44   43   46   48   43    44 #>  [2100,]   39   39   41   44   44   43   46   48   43    44 #>  [2101,]   41   41   43   45   45   46   48   50   45    46 #>  [2102,]   41   41   43   45   45   46   48   50   45    46 #>  [2103,]   41   41   43   45   45   46   48   50   45    46 #>  [2104,]   41   41   43   45   45   45   48   50   45    46 #>  [2105,]   41   41   43   45   45   46   48   50   45    46 #>  [2106,]   41   41   43   45   45   46   48   50   45    46 #>  [2107,]   42   42   44   46   46   44   47   49   44    45 #>  [2108,]   41   41   43   45   45   45   48   50   45    46 #>  [2109,]   41   41   43   45   45   45   48   50   45    46 #>  [2110,]   41   41   43   45   45   46   48   50   45    46 #>  [2111,]   41   41   43   45   45   45   48   50   45    46 #>  [2112,]   41   41   43   45   45   46   48   50   45    46 #>  [2113,]   41   41   43   45   45   45   48   50   45    46 #>  [2114,]   41   41   43   45   45   46   48   50   45    46 #>  [2115,]   41   41   43   45   45   46   48   50   45    46 #>  [2116,]   42   42   44   46   46   44   47   49   44    45 #>  [2117,]   41   41   43   45   45   45   48   50   45    46 #>  [2118,]   41   41   43   45   45   46   48   50   45    46 #>  [2119,]   41   41   43   45   45   46   48   50   45    46 #>  [2120,]   42   42   44   46   46   44   47   49   44    45 #>  [2121,]   41   41   43   45   45   46   48   50   45    46 #>  [2122,]   41   41   43   45   45   45   48   50   45    46 #>  [2123,]   41   41   43   45   45   46   48   50   45    46 #>  [2124,]   42   42   44   46   46   44   47   49   44    45 #>  [2125,]   41   41   43   45   45   46   48   50   45    46 #>  [2126,]   41   41   43   45   45   46   48   50   45    46 #>  [2127,]   41   41   43   45   45   45   48   50   45    46 #>  [2128,]   42   42   44   46   46   44   47   49   44    45 #>  [2129,]   41   41   43   45   45   46   48   50   45    46 #>  [2130,]   41   41   43   45   45   46   48   50   45    46 #>  [2131,]   41   41   43   45   45   46   48   50   45    46 #>  [2132,]   41   41   43   45   45   46   48   50   45    46 #>  [2133,]   41   41   43   45   45   46   48   50   45    46 #>  [2134,]   41   41   43   45   45   46   48   50   45    46 #>  [2135,]   41   41   43   45   45   45   48   50   45    46 #>  [2136,]   41   41   43   45   45   46   48   50   45    46 #>  [2137,]   41   41   43   45   45   46   48   50   45    46 #>  [2138,]   41   41   43   45   45   46   48   50   45    46 #>  [2139,]   41   41   43   45   45   46   48   50   45    46 #>  [2140,]   41   41   43   45   45   46   48   50   45    46 #>  [2141,]   41   41   43   45   45   46   48   50   45    46 #>  [2142,]   41   41   43   45   45   46   48   50   45    46 #>  [2143,]   41   41   43   45   45   46   48   50   45    46 #>  [2144,]   41   41   43   45   45   45   48   50   45    46 #>  [2145,]   41   41   43   45   45   46   48   50   45    46 #>  [2146,]   41   41   43   45   45   46   48   50   45    46 #>  [2147,]   41   41   43   45   45   46   48   50   45    46 #>  [2148,]   41   41   43   45   45   46   48   50   45    46 #>  [2149,]   41   41   43   45   45   45   48   50   45    46 #>  [2150,]   42   42   44   46   46   44   47   49   44    45 #>  [2151,]   41   41   43   45   45   46   48   50   45    46 #>  [2152,]   42   42   44   46   46   44   47   49   44    45 #>  [2153,]   41   41   43   45   45   46   48   50   45    46 #>  [2154,]   41   41   43   45   45   46   48   50   45    46 #>  [2155,]   41   41   43   45   45   45   48   50   45    46 #>  [2156,]   41   41   43   45   45   46   48   50   45    46 #>  [2157,]   41   41   43   45   45   46   48   50   45    46 #>  [2158,]   41   41   43   45   45   45   48   50   45    46 #>  [2159,]   41   41   43   45   45   46   48   50   45    46 #>  [2160,]   41   41   43   45   45   46   48   50   45    46 #>  [2161,]   41   41   43   45   45   46   48   50   45    46 #>  [2162,]   41   41   43   45   45   46   48   50   45    46 #>  [2163,]   41   41   43   45   45   46   48   50   45    46 #>  [2164,]   41   41   43   45   45   46   48   50   45    46 #>  [2165,]   41   41   43   45   45   46   48   50   45    46 #>  [2166,]   41   41   43   45   45   45   48   50   45    46 #>  [2167,]   41   41   43   45   45   46   48   50   45    46 #>  [2168,]   41   41   43   45   45   46   48   50   45    46 #>  [2169,]   41   41   43   45   45   46   48   50   45    46 #>  [2170,]   41   41   43   45   45   46   48   50   45    46 #>  [2171,]   41   41   43   45   45   46   48   50   45    46 #>  [2172,]   41   41   43   45   45   46   48   50   45    46 #>  [2173,]   41   41   43   45   45   46   48   50   45    46 #>  [2174,]   41   41   43   45   45   46   48   50   45    46 #>  [2175,]   41   41   43   45   45   46   48   50   45    46 #>  [2176,]   42   42   44   46   46   44   47   49   44    45 #>  [2177,]   41   41   43   45   45   46   48   50   45    46 #>  [2178,]   41   41   43   45   45   46   48   50   45    46 #>  [2179,]   41   41   43   45   45   46   48   50   45    46 #>  [2180,]   41   41   43   45   45   46   48   50   45    46 #>  [2181,]   41   41   43   45   45   45   48   50   45    46 #>  [2182,]   41   41   43   45   45   45   48   50   45    46 #>  [2183,]   41   41   43   45   45   46   48   50   45    46 #>  [2184,]   41   41   43   45   45   46   48   50   45    46 #>  [2185,]   41   41   43   45   45   46   48   50   45    46 #>  [2186,]   42   42   44   46   46   44   47   49   44    45 #>  [2187,]   41   41   43   45   45   45   48   50   45    46 #>  [2188,]   41   41   43   45   45   46   48   50   45    46 #>  [2189,]   41   41   43   45   45   46   48   50   45    46 #>  [2190,]   41   41   43   45   45   45   48   50   45    46 #>  [2191,]   42   42   44   46   46   44   47   49   44    45 #>  [2192,]   41   41   43   45   45   45   48   50   45    46 #>  [2193,]   41   41   43   45   45   46   48   50   45    46 #>  [2194,]   41   41   43   45   45   46   48   50   45    46 #>  [2195,]   41   41   43   45   45   45   48   50   45    46 #>  [2196,]   41   41   43   45   45   46   48   50   45    46 #>  [2197,]   41   41   43   45   45   46   48   50   45    46 #>  [2198,]   41   41   43   45   45   46   48   50   45    46 #>  [2199,]   41   41   43   45   45   45   48   50   45    46 #>  [2200,]   41   41   43   45   45   46   48   50   45    46 #>  [2201,]   43   43   45   47   47   47   49   51   46    47 #>  [2202,]   43   43   45   47   47   47   49   51   46    47 #>  [2203,]   43   43   45   47   47   47   49   51   46    47 #>  [2204,]   43   43   45   48   48   48   50   52   47    48 #>  [2205,]   44   44   45   47   47   47   49   51   46    47 #>  [2206,]   43   43   45   47   47   47   49   51   46    47 #>  [2207,]   43   43   45   47   47   47   49   51   46    47 #>  [2208,]   43   43   45   47   47   47   49   51   46    47 #>  [2209,]   43   43   45   47   47   47   49   51   46    47 #>  [2210,]   43   43   45   47   47   47   49   51   46    47 #>  [2211,]   43   43   45   47   47   47   49   51   46    47 #>  [2212,]   43   43   45   47   47   47   49   51   46    47 #>  [2213,]   43   43   45   47   47   47   49   51   46    47 #>  [2214,]   43   43   45   48   48   48   50   52   47    48 #>  [2215,]   43   43   45   47   47   47   49   51   46    47 #>  [2216,]   43   43   45   47   47   47   49   51   46    47 #>  [2217,]   43   43   45   47   47   47   49   51   46    47 #>  [2218,]   44   44   45   47   47   47   49   51   46    47 #>  [2219,]   43   43   45   47   47   47   49   51   46    47 #>  [2220,]   43   43   45   47   47   47   49   51   46    47 #>  [2221,]   43   43   45   47   47   47   49   51   46    47 #>  [2222,]   43   43   45   47   47   47   49   51   46    47 #>  [2223,]   43   43   45   47   47   47   49   51   46    47 #>  [2224,]   43   43   45   47   47   47   49   51   46    47 #>  [2225,]   43   43   45   47   47   47   49   51   46    47 #>  [2226,]   43   43   45   47   47   47   49   51   46    47 #>  [2227,]   43   43   45   48   48   48   50   52   47    48 #>  [2228,]   43   43   45   47   47   47   49   51   46    47 #>  [2229,]   43   43   45   47   47   47   49   51   46    47 #>  [2230,]   43   43   45   47   47   47   49   51   46    47 #>  [2231,]   43   43   45   47   47   47   49   51   46    47 #>  [2232,]   44   44   45   47   47   47   49   51   46    47 #>  [2233,]   43   43   45   47   47   47   49   51   46    47 #>  [2234,]   43   43   45   47   47   47   49   51   46    47 #>  [2235,]   43   43   45   47   47   47   49   51   46    47 #>  [2236,]   43   43   45   47   47   47   49   51   46    47 #>  [2237,]   43   43   45   47   47   47   49   51   46    47 #>  [2238,]   43   43   45   47   47   47   49   51   46    47 #>  [2239,]   43   43   45   47   47   47   49   51   46    47 #>  [2240,]   43   43   45   47   47   47   49   51   46    47 #>  [2241,]   43   43   45   47   47   47   49   51   46    47 #>  [2242,]   43   43   45   47   47   47   49   51   46    47 #>  [2243,]   43   43   45   47   47   47   49   51   46    47 #>  [2244,]   43   43   45   47   47   47   49   51   46    47 #>  [2245,]   43   43   45   47   47   47   49   51   46    47 #>  [2246,]   43   43   45   47   47   47   49   51   46    47 #>  [2247,]   43   43   45   47   47   47   49   51   46    47 #>  [2248,]   43   43   45   47   47   47   49   51   46    47 #>  [2249,]   43   43   45   47   47   47   49   51   46    47 #>  [2250,]   43   43   45   47   47   47   49   51   46    47 #>  [2251,]   43   43   45   47   47   47   49   51   46    47 #>  [2252,]   43   43   45   47   47   47   49   51   46    47 #>  [2253,]   43   43   45   47   47   47   49   51   46    47 #>  [2254,]   43   43   45   47   47   47   49   51   46    47 #>  [2255,]   43   43   45   47   47   47   49   51   46    47 #>  [2256,]   43   43   45   47   47   47   49   51   46    47 #>  [2257,]   43   43   45   47   47   47   49   51   46    47 #>  [2258,]   43   43   45   47   47   47   49   51   46    47 #>  [2259,]   43   43   45   47   47   47   49   51   46    47 #>  [2260,]   43   43   45   47   47   47   49   51   46    47 #>  [2261,]   43   43   45   48   48   48   50   52   47    48 #>  [2262,]   43   43   45   47   47   47   49   51   46    47 #>  [2263,]   43   43   45   47   47   47   49   51   46    47 #>  [2264,]   43   43   45   47   47   47   49   51   46    47 #>  [2265,]   43   43   45   47   47   47   49   51   46    47 #>  [2266,]   43   43   45   47   47   47   49   51   46    47 #>  [2267,]   43   43   45   47   47   47   49   51   46    47 #>  [2268,]   43   43   45   47   47   47   49   51   46    47 #>  [2269,]   43   43   45   48   48   48   50   52   47    48 #>  [2270,]   43   43   45   47   47   47   49   51   46    47 #>  [2271,]   44   44   45   47   47   47   49   51   46    47 #>  [2272,]   43   43   45   47   47   47   49   51   46    47 #>  [2273,]   43   43   45   47   47   47   49   51   46    47 #>  [2274,]   43   43   45   47   47   47   49   51   46    47 #>  [2275,]   44   44   45   47   47   47   49   51   46    47 #>  [2276,]   43   43   45   47   47   47   49   51   46    47 #>  [2277,]   43   43   45   47   47   47   49   51   46    47 #>  [2278,]   43   43   45   47   47   47   49   51   46    47 #>  [2279,]   43   43   45   47   47   47   49   51   46    47 #>  [2280,]   43   43   45   47   47   47   49   51   46    47 #>  [2281,]   43   43   45   47   47   47   49   51   46    47 #>  [2282,]   43   43   45   48   48   48   50   52   47    48 #>  [2283,]   43   43   45   47   47   47   49   51   46    47 #>  [2284,]   43   43   45   47   47   47   49   51   46    47 #>  [2285,]   43   43   45   47   47   47   49   51   46    47 #>  [2286,]   43   43   45   47   47   47   49   51   46    47 #>  [2287,]   43   43   45   47   47   47   49   51   46    47 #>  [2288,]   43   43   45   47   47   47   49   51   46    47 #>  [2289,]   43   43   45   47   47   47   49   51   46    47 #>  [2290,]   43   43   45   47   47   47   49   51   46    47 #>  [2291,]   44   44   45   47   47   47   49   51   46    47 #>  [2292,]   43   43   45   48   48   48   50   52   47    48 #>  [2293,]   43   43   45   48   48   48   50   52   47    48 #>  [2294,]   43   43   45   47   47   47   49   51   46    47 #>  [2295,]   44   44   45   47   47   47   49   51   46    47 #>  [2296,]   43   43   45   48   48   48   50   52   47    48 #>  [2297,]   43   43   45   48   48   48   50   52   47    48 #>  [2298,]   43   43   45   47   47   47   49   51   46    47 #>  [2299,]   43   43   45   47   47   47   49   51   46    47 #>  [2300,]   44   44   45   47   47   47   49   51   46    47 #>  [2301,]   46   46   47   50   50   50   52   54   49    50 #>  [2302,]   46   46   47   50   50   50   52   54   49    50 #>  [2303,]   45   45   46   49   49   49   51   53   48    49 #>  [2304,]   46   46   47   50   50   50   52   54   49    50 #>  [2305,]   45   45   46   49   49   49   51   53   48    49 #>  [2306,]   45   45   46   49   49   49   51   53   48    49 #>  [2307,]   46   46   47   50   50   50   52   54   49    50 #>  [2308,]   46   46   47   50   50   50   52   54   49    50 #>  [2309,]   46   46   47   50   50   50   52   54   49    50 #>  [2310,]   46   46   47   50   50   50   52   54   49    50 #>  [2311,]   45   45   46   49   49   49   51   53   48    49 #>  [2312,]   45   45   46   49   49   49   51   53   48    49 #>  [2313,]   46   46   47   50   50   50   52   54   49    50 #>  [2314,]   45   45   46   49   49   49   51   53   48    49 #>  [2315,]   46   46   47   50   50   50   52   54   49    50 #>  [2316,]   46   46   47   50   50   50   52   54   49    50 #>  [2317,]   46   46   47   50   50   50   52   54   49    50 #>  [2318,]   46   46   47   50   50   50   52   54   49    50 #>  [2319,]   45   45   46   49   49   49   51   53   48    49 #>  [2320,]   45   45   46   49   49   49   51   53   48    49 #>  [2321,]   46   46   47   50   50   50   52   54   49    50 #>  [2322,]   45   45   46   49   49   49   51   53   48    49 #>  [2323,]   46   46   47   50   50   50   52   54   49    50 #>  [2324,]   45   45   46   49   49   49   51   53   48    49 #>  [2325,]   46   46   47   50   50   50   52   54   49    50 #>  [2326,]   45   45   46   49   49   49   51   53   48    49 #>  [2327,]   46   46   47   50   50   50   52   54   49    50 #>  [2328,]   46   46   47   50   50   50   52   54   49    50 #>  [2329,]   45   45   46   49   49   49   51   53   48    49 #>  [2330,]   45   45   46   49   49   49   51   53   48    49 #>  [2331,]   46   46   47   50   50   50   52   54   49    50 #>  [2332,]   45   45   46   49   49   49   51   53   48    49 #>  [2333,]   46   46   47   50   50   50   52   54   49    50 #>  [2334,]   45   45   46   49   49   49   51   53   48    49 #>  [2335,]   46   46   47   50   50   50   52   54   49    50 #>  [2336,]   45   45   46   49   49   49   51   53   48    49 #>  [2337,]   46   46   47   50   50   50   52   54   49    50 #>  [2338,]   46   46   47   50   50   50   52   54   49    50 #>  [2339,]   46   46   47   50   50   50   52   54   49    50 #>  [2340,]   45   45   46   49   49   49   51   53   48    49 #>  [2341,]   45   45   46   49   49   49   51   53   48    49 #>  [2342,]   45   45   46   49   49   49   51   53   48    49 #>  [2343,]   46   46   47   50   50   50   52   54   49    50 #>  [2344,]   46   46   47   50   50   50   52   54   49    50 #>  [2345,]   46   46   47   50   50   50   52   54   49    50 #>  [2346,]   46   46   47   50   50   50   52   54   49    50 #>  [2347,]   46   46   47   50   50   50   52   54   49    50 #>  [2348,]   45   45   46   49   49   49   51   53   48    49 #>  [2349,]   46   46   47   50   50   50   52   54   49    50 #>  [2350,]   46   46   47   50   50   50   52   54   49    50 #>  [2351,]   45   45   46   49   49   49   51   53   48    49 #>  [2352,]   46   46   47   50   50   50   52   54   49    50 #>  [2353,]   46   46   47   50   50   50   52   54   49    50 #>  [2354,]   45   45   46   49   49   49   51   53   48    49 #>  [2355,]   45   45   46   49   49   49   51   53   48    49 #>  [2356,]   46   46   47   50   50   50   52   54   49    50 #>  [2357,]   46   46   47   50   50   50   52   54   49    50 #>  [2358,]   46   46   47   50   50   50   52   54   49    50 #>  [2359,]   46   46   47   50   50   50   52   54   49    50 #>  [2360,]   45   45   46   49   49   49   51   53   48    49 #>  [2361,]   46   46   47   50   50   50   52   54   49    50 #>  [2362,]   45   45   46   49   49   49   51   53   48    49 #>  [2363,]   45   45   46   49   49   49   51   53   48    49 #>  [2364,]   46   46   47   50   50   50   52   54   49    50 #>  [2365,]   46   46   47   50   50   50   52   54   49    50 #>  [2366,]   45   45   46   49   49   49   51   53   48    49 #>  [2367,]   45   45   46   49   49   49   51   53   48    49 #>  [2368,]   45   45   46   49   49   49   51   53   48    49 #>  [2369,]   45   45   46   49   49   49   51   53   48    49 #>  [2370,]   46   46   47   50   50   50   52   54   49    50 #>  [2371,]   46   46   47   50   50   50   52   54   49    50 #>  [2372,]   46   46   47   50   50   50   52   54   49    50 #>  [2373,]   46   46   47   50   50   50   52   54   49    50 #>  [2374,]   46   46   47   50   50   50   52   54   49    50 #>  [2375,]   46   46   47   50   50   50   52   54   49    50 #>  [2376,]   46   46   47   50   50   50   52   54   49    50 #>  [2377,]   46   46   47   50   50   50   52   54   49    50 #>  [2378,]   45   45   46   49   49   49   51   53   48    49 #>  [2379,]   46   46   47   50   50   50   52   54   49    50 #>  [2380,]   45   45   46   49   49   49   51   53   48    49 #>  [2381,]   45   45   46   49   49   49   51   53   48    49 #>  [2382,]   46   46   47   50   50   50   52   54   49    50 #>  [2383,]   45   45   46   49   49   49   51   53   48    49 #>  [2384,]   46   46   47   50   50   50   52   54   49    50 #>  [2385,]   46   46   47   50   50   50   52   54   49    50 #>  [2386,]   46   46   47   50   50   50   52   54   49    50 #>  [2387,]   46   46   47   50   50   50   52   54   49    50 #>  [2388,]   46   46   47   50   50   50   52   54   49    50 #>  [2389,]   45   45   46   49   49   49   51   53   48    49 #>  [2390,]   46   46   47   50   50   50   52   54   49    50 #>  [2391,]   45   45   46   49   49   49   51   53   48    49 #>  [2392,]   46   46   47   50   50   50   52   54   49    50 #>  [2393,]   45   45   46   49   49   49   51   53   48    49 #>  [2394,]   46   46   47   50   50   50   52   54   49    50 #>  [2395,]   46   46   47   50   50   50   52   54   49    50 #>  [2396,]   46   46   47   50   50   50   52   54   49    50 #>  [2397,]   46   46   47   50   50   50   52   54   49    50 #>  [2398,]   45   45   46   49   49   49   51   53   48    49 #>  [2399,]   45   45   46   49   49   49   51   53   48    49 #>  [2400,]   46   46   47   50   50   50   52   54   49    50 #>  [2401,]   48   48   49   52   52   52   54   56   51    52 #>  [2402,]   47   47   48   51   51   51   53   55   50    51 #>  [2403,]   48   48   49   52   52   52   54   56   51    52 #>  [2404,]   48   48   49   52   52   52   54   56   51    52 #>  [2405,]   48   48   49   52   52   52   54   56   51    52 #>  [2406,]   47   47   48   51   51   51   53   55   50    51 #>  [2407,]   48   48   49   52   52   52   54   56   51    52 #>  [2408,]   48   48   49   52   52   52   54   56   51    52 #>  [2409,]   48   48   49   52   52   52   54   56   51    52 #>  [2410,]   48   48   49   52   52   52   54   56   51    52 #>  [2411,]   47   47   48   51   51   51   53   55   50    51 #>  [2412,]   47   47   48   51   51   51   53   55   50    51 #>  [2413,]   48   48   49   52   52   52   54   56   51    52 #>  [2414,]   48   48   49   52   52   52   54   56   51    52 #>  [2415,]   47   47   48   51   51   51   53   55   50    51 #>  [2416,]   48   48   49   52   52   52   54   56   51    52 #>  [2417,]   47   47   48   51   51   51   53   55   50    51 #>  [2418,]   48   48   49   52   52   52   54   56   51    52 #>  [2419,]   48   48   49   52   52   52   54   56   51    52 #>  [2420,]   48   48   49   52   52   52   54   56   51    52 #>  [2421,]   48   48   49   52   52   52   54   56   51    52 #>  [2422,]   48   48   49   52   52   52   54   56   51    52 #>  [2423,]   47   47   48   51   51   51   53   55   50    51 #>  [2424,]   48   48   49   52   52   52   54   56   51    52 #>  [2425,]   48   48   49   52   52   52   54   56   51    52 #>  [2426,]   48   48   49   52   52   52   54   56   51    52 #>  [2427,]   48   48   49   52   52   52   54   56   51    52 #>  [2428,]   48   48   49   52   52   52   54   56   51    52 #>  [2429,]   47   47   48   51   51   51   53   55   50    51 #>  [2430,]   47   47   48   51   51   51   53   55   50    51 #>  [2431,]   47   47   48   51   51   51   53   55   50    51 #>  [2432,]   48   48   49   52   52   52   54   56   51    52 #>  [2433,]   48   48   49   52   52   52   54   56   51    52 #>  [2434,]   47   47   48   51   51   51   53   55   50    51 #>  [2435,]   47   47   48   51   51   51   53   55   50    51 #>  [2436,]   48   48   49   52   52   52   54   56   51    52 #>  [2437,]   47   47   48   51   51   51   53   55   50    51 #>  [2438,]   48   48   49   52   52   52   54   56   51    52 #>  [2439,]   48   48   49   52   52   52   54   56   51    52 #>  [2440,]   48   48   49   52   52   52   54   56   51    52 #>  [2441,]   48   48   49   52   52   52   54   56   51    52 #>  [2442,]   47   47   48   51   51   51   53   55   50    51 #>  [2443,]   47   47   48   51   51   51   53   55   50    51 #>  [2444,]   47   47   48   51   51   51   53   55   50    51 #>  [2445,]   48   48   49   52   52   52   54   56   51    52 #>  [2446,]   48   48   49   52   52   52   54   56   51    52 #>  [2447,]   47   47   48   51   51   51   53   55   50    51 #>  [2448,]   47   47   48   51   51   51   53   55   50    51 #>  [2449,]   48   48   49   52   52   52   54   56   51    52 #>  [2450,]   48   48   49   52   52   52   54   56   51    52 #>  [2451,]   48   48   49   52   52   52   54   56   51    52 #>  [2452,]   48   48   49   52   52   52   54   56   51    52 #>  [2453,]   48   48   49   52   52   52   54   56   51    52 #>  [2454,]   48   48   49   52   52   52   54   56   51    52 #>  [2455,]   48   48   49   52   52   52   54   56   51    52 #>  [2456,]   47   47   48   51   51   51   53   55   50    51 #>  [2457,]   48   48   49   52   52   52   54   56   51    52 #>  [2458,]   48   48   49   52   52   52   54   56   51    52 #>  [2459,]   48   48   49   52   52   52   54   56   51    52 #>  [2460,]   47   47   48   51   51   51   53   55   50    51 #>  [2461,]   47   47   48   51   51   51   53   55   50    51 #>  [2462,]   48   48   49   52   52   52   54   56   51    52 #>  [2463,]   47   47   48   51   51   51   53   55   50    51 #>  [2464,]   47   47   48   51   51   51   53   55   50    51 #>  [2465,]   47   47   48   51   51   51   53   55   50    51 #>  [2466,]   47   47   48   51   51   51   53   55   50    51 #>  [2467,]   48   48   49   52   52   52   54   56   51    52 #>  [2468,]   48   48   49   52   52   52   54   56   51    52 #>  [2469,]   48   48   49   52   52   52   54   56   51    52 #>  [2470,]   47   47   48   51   51   51   53   55   50    51 #>  [2471,]   48   48   49   52   52   52   54   56   51    52 #>  [2472,]   48   48   49   52   52   52   54   56   51    52 #>  [2473,]   48   48   49   52   52   52   54   56   51    52 #>  [2474,]   48   48   49   52   52   52   54   56   51    52 #>  [2475,]   47   47   48   51   51   51   53   55   50    51 #>  [2476,]   48   48   49   52   52   52   54   56   51    52 #>  [2477,]   48   48   49   52   52   52   54   56   51    52 #>  [2478,]   47   47   48   51   51   51   53   55   50    51 #>  [2479,]   47   47   48   51   51   51   53   55   50    51 #>  [2480,]   48   48   49   52   52   52   54   56   51    52 #>  [2481,]   47   47   48   51   51   51   53   55   50    51 #>  [2482,]   48   48   49   52   52   52   54   56   51    52 #>  [2483,]   48   48   49   52   52   52   54   56   51    52 #>  [2484,]   48   48   49   52   52   52   54   56   51    52 #>  [2485,]   48   48   49   52   52   52   54   56   51    52 #>  [2486,]   48   48   49   52   52   52   54   56   51    52 #>  [2487,]   48   48   49   52   52   52   54   56   51    52 #>  [2488,]   48   48   49   52   52   52   54   56   51    52 #>  [2489,]   48   48   49   52   52   52   54   56   51    52 #>  [2490,]   48   48   49   52   52   52   54   56   51    52 #>  [2491,]   48   48   49   52   52   52   54   56   51    52 #>  [2492,]   47   47   48   51   51   51   53   55   50    51 #>  [2493,]   48   48   49   52   52   52   54   56   51    52 #>  [2494,]   47   47   48   51   51   51   53   55   50    51 #>  [2495,]   47   47   48   51   51   51   53   55   50    51 #>  [2496,]   48   48   49   52   52   52   54   56   51    52 #>  [2497,]   48   48   49   52   52   52   54   56   51    52 #>  [2498,]   48   48   49   52   52   52   54   56   51    52 #>  [2499,]   48   48   49   52   52   52   54   56   51    52 #>  [2500,]   47   47   48   51   51   51   53   55   50    51 #>  [2501,]   50   50   51   54   54   54   56   58   53    54 #>  [2502,]   49   49   50   53   53   53   55   57   52    53 #>  [2503,]   49   49   50   53   53   53   55   57   52    53 #>  [2504,]   49   49   50   53   53   53   55   57   52    53 #>  [2505,]   49   49   50   53   53   53   55   57   52    53 #>  [2506,]   49   49   50   53   53   53   55   57   52    53 #>  [2507,]   49   49   50   53   53   53   55   57   52    53 #>  [2508,]   49   49   50   53   53   53   55   57   52    53 #>  [2509,]   49   49   50   53   53   53   55   57   52    53 #>  [2510,]   49   49   50   53   53   53   55   57   52    53 #>  [2511,]   49   49   50   53   53   53   55   57   52    53 #>  [2512,]   49   49   50   53   53   53   55   57   52    53 #>  [2513,]   49   49   50   53   53   53   55   57   52    53 #>  [2514,]   50   50   51   54   54   54   56   58   53    54 #>  [2515,]   50   50   51   54   54   54   56   58   53    54 #>  [2516,]   50   50   51   54   54   54   56   58   53    54 #>  [2517,]   49   49   50   53   53   53   55   57   52    53 #>  [2518,]   49   49   50   53   53   53   55   57   52    53 #>  [2519,]   49   49   50   53   53   53   55   57   52    53 #>  [2520,]   49   49   50   53   53   53   55   57   52    53 #>  [2521,]   49   49   50   53   53   53   55   57   52    53 #>  [2522,]   49   49   50   53   53   53   55   57   52    53 #>  [2523,]   49   49   50   53   53   53   55   57   52    53 #>  [2524,]   49   49   50   53   53   53   55   57   52    53 #>  [2525,]   49   49   50   53   53   53   55   57   52    53 #>  [2526,]   49   49   50   53   53   53   55   57   52    53 #>  [2527,]   49   49   50   53   53   53   55   57   52    53 #>  [2528,]   49   49   50   53   53   53   55   57   52    53 #>  [2529,]   49   49   50   53   53   53   55   57   52    53 #>  [2530,]   49   49   50   53   53   53   55   57   52    53 #>  [2531,]   49   49   50   53   53   53   55   57   52    53 #>  [2532,]   49   49   50   53   53   53   55   57   52    53 #>  [2533,]   49   49   50   53   53   53   55   57   52    53 #>  [2534,]   49   49   50   53   53   53   55   57   52    53 #>  [2535,]   49   49   50   53   53   53   55   57   52    53 #>  [2536,]   49   49   50   53   53   53   55   57   52    53 #>  [2537,]   49   49   50   53   53   53   55   57   52    53 #>  [2538,]   49   49   50   53   53   53   55   57   52    53 #>  [2539,]   49   49   50   53   53   53   55   57   52    53 #>  [2540,]   49   49   50   53   53   53   55   57   52    53 #>  [2541,]   50   50   51   54   54   54   56   58   53    54 #>  [2542,]   49   49   50   53   53   53   55   57   52    53 #>  [2543,]   49   49   50   53   53   53   55   57   52    53 #>  [2544,]   50   50   51   54   54   54   56   58   53    54 #>  [2545,]   49   49   50   53   53   53   55   57   52    53 #>  [2546,]   49   49   50   53   53   53   55   57   52    53 #>  [2547,]   49   49   50   53   53   53   55   57   52    53 #>  [2548,]   49   49   50   53   53   53   55   57   52    53 #>  [2549,]   49   49   50   53   53   53   55   57   52    53 #>  [2550,]   50   50   51   54   54   54   56   58   53    54 #>  [2551,]   49   49   50   53   53   53   55   57   52    53 #>  [2552,]   49   49   50   53   53   53   55   57   52    53 #>  [2553,]   49   49   50   53   53   53   55   57   52    53 #>  [2554,]   49   49   50   53   53   53   55   57   52    53 #>  [2555,]   49   49   50   53   53   53   55   57   52    53 #>  [2556,]   49   49   50   53   53   53   55   57   52    53 #>  [2557,]   49   49   50   53   53   53   55   57   52    53 #>  [2558,]   49   49   50   53   53   53   55   57   52    53 #>  [2559,]   50   50   51   54   54   54   56   58   53    54 #>  [2560,]   49   49   50   53   53   53   55   57   52    53 #>  [2561,]   49   49   50   53   53   53   55   57   52    53 #>  [2562,]   49   49   50   53   53   53   55   57   52    53 #>  [2563,]   49   49   50   53   53   53   55   57   52    53 #>  [2564,]   49   49   50   53   53   53   55   57   52    53 #>  [2565,]   49   49   50   53   53   53   55   57   52    53 #>  [2566,]   49   49   50   53   53   53   55   57   52    53 #>  [2567,]   49   49   50   53   53   53   55   57   52    53 #>  [2568,]   49   49   50   53   53   53   55   57   52    53 #>  [2569,]   49   49   50   53   53   53   55   57   52    53 #>  [2570,]   50   50   51   54   54   54   56   58   53    54 #>  [2571,]   49   49   50   53   53   53   55   57   52    53 #>  [2572,]   49   49   50   53   53   53   55   57   52    53 #>  [2573,]   50   50   51   54   54   54   56   58   53    54 #>  [2574,]   49   49   50   53   53   53   55   57   52    53 #>  [2575,]   49   49   50   53   53   53   55   57   52    53 #>  [2576,]   49   49   50   53   53   53   55   57   52    53 #>  [2577,]   49   49   50   53   53   53   55   57   52    53 #>  [2578,]   49   49   50   53   53   53   55   57   52    53 #>  [2579,]   49   49   50   53   53   53   55   57   52    53 #>  [2580,]   49   49   50   53   53   53   55   57   52    53 #>  [2581,]   49   49   50   53   53   53   55   57   52    53 #>  [2582,]   49   49   50   53   53   53   55   57   52    53 #>  [2583,]   49   49   50   53   53   53   55   57   52    53 #>  [2584,]   49   49   50   53   53   53   55   57   52    53 #>  [2585,]   49   49   50   53   53   53   55   57   52    53 #>  [2586,]   49   49   50   53   53   53   55   57   52    53 #>  [2587,]   49   49   50   53   53   53   55   57   52    53 #>  [2588,]   49   49   50   53   53   53   55   57   52    53 #>  [2589,]   49   49   50   53   53   53   55   57   52    53 #>  [2590,]   49   49   50   53   53   53   55   57   52    53 #>  [2591,]   49   49   50   53   53   53   55   57   52    53 #>  [2592,]   49   49   50   53   53   53   55   57   52    53 #>  [2593,]   49   49   50   53   53   53   55   57   52    53 #>  [2594,]   49   49   50   53   53   53   55   57   52    53 #>  [2595,]   49   49   50   53   53   53   55   57   52    53 #>  [2596,]   50   50   51   54   54   54   56   58   53    54 #>  [2597,]   49   49   50   53   53   53   55   57   52    53 #>  [2598,]   49   49   50   53   53   53   55   57   52    53 #>  [2599,]   50   50   51   54   54   54   56   58   53    54 #>  [2600,]   49   49   50   53   53   53   55   57   52    53 #>  [2601,]   52   53   53   56   55   55   57   59   54    55 #>  [2602,]   52   53   53   56   55   55   57   59   54    55 #>  [2603,]   51   51   52   55   55   56   58   60   55    56 #>  [2604,]   51   51   52   55   55   55   57   59   54    55 #>  [2605,]   51   51   52   55   55   55   57   59   54    55 #>  [2606,]   51   51   52   55   55   56   58   60   55    56 #>  [2607,]   52   53   53   56   55   55   57   59   54    55 #>  [2608,]   52   53   53   56   55   55   57   59   54    55 #>  [2609,]   51   51   52   55   55   55   57   59   54    55 #>  [2610,]   51   51   52   55   55   55   57   59   54    55 #>  [2611,]   51   51   52   55   55   55   57   59   54    55 #>  [2612,]   52   52   53   56   55   56   58   60   55    56 #>  [2613,]   52   53   53   56   55   55   57   59   54    55 #>  [2614,]   51   51   52   55   55   55   57   59   54    55 #>  [2615,]   52   53   53   56   55   55   57   59   54    55 #>  [2616,]   52   53   53   56   55   55   57   59   54    55 #>  [2617,]   52   53   53   56   55   55   57   59   54    55 #>  [2618,]   52   53   53   56   55   55   57   59   54    55 #>  [2619,]   52   53   53   56   55   56   58   60   55    56 #>  [2620,]   52   52   53   56   55   56   58   60   55    56 #>  [2621,]   51   51   52   55   55   55   57   59   54    55 #>  [2622,]   52   53   53   56   55   55   57   59   54    55 #>  [2623,]   52   53   53   56   55   55   57   59   54    55 #>  [2624,]   51   51   52   55   55   55   57   59   54    55 #>  [2625,]   51   51   52   55   55   56   58   60   55    56 #>  [2626,]   52   52   53   56   55   55   57   59   54    55 #>  [2627,]   52   53   53   56   55   55   57   59   54    55 #>  [2628,]   51   51   52   55   55   56   58   60   55    56 #>  [2629,]   52   52   53   56   55   55   57   59   54    55 #>  [2630,]   52   53   53   56   55   55   57   59   54    55 #>  [2631,]   51   51   52   55   55   55   57   59   54    55 #>  [2632,]   51   51   52   55   55   55   57   59   54    55 #>  [2633,]   52   53   53   56   55   56   58   60   55    56 #>  [2634,]   51   51   52   55   55   56   58   60   55    56 #>  [2635,]   51   51   52   55   55   55   57   59   54    55 #>  [2636,]   52   52   53   56   55   55   57   59   54    55 #>  [2637,]   52   53   53   56   55   55   57   59   54    55 #>  [2638,]   52   53   53   56   55   55   57   59   54    55 #>  [2639,]   51   51   52   55   55   55   57   59   54    55 #>  [2640,]   51   51   52   55   55   55   57   59   54    55 #>  [2641,]   52   52   53   56   55   55   57   59   54    55 #>  [2642,]   51   51   52   55   55   55   57   59   54    55 #>  [2643,]   52   53   53   56   55   55   57   59   54    55 #>  [2644,]   52   53   53   56   55   55   57   59   54    55 #>  [2645,]   52   53   53   56   55   55   57   59   54    55 #>  [2646,]   52   53   53   56   55   55   57   59   54    55 #>  [2647,]   51   51   52   55   55   55   57   59   54    55 #>  [2648,]   51   51   52   55   55   55   57   59   54    55 #>  [2649,]   52   53   53   56   55   55   57   59   54    55 #>  [2650,]   52   53   53   56   55   55   57   59   54    55 #>  [2651,]   52   52   53   56   55   55   57   59   54    55 #>  [2652,]   51   51   52   55   55   55   57   59   54    55 #>  [2653,]   52   53   53   56   55   55   57   59   54    55 #>  [2654,]   51   51   52   55   55   55   57   59   54    55 #>  [2655,]   52   53   53   56   55   55   57   59   54    55 #>  [2656,]   52   53   53   56   55   55   57   59   54    55 #>  [2657,]   51   51   52   55   55   55   57   59   54    55 #>  [2658,]   52   53   53   56   55   55   57   59   54    55 #>  [2659,]   52   53   53   56   55   55   57   59   54    55 #>  [2660,]   52   52   53   56   55   56   58   60   55    56 #>  [2661,]   52   53   53   56   55   55   57   59   54    55 #>  [2662,]   51   51   52   55   55   55   57   59   54    55 #>  [2663,]   52   53   53   56   55   55   57   59   54    55 #>  [2664,]   52   53   53   56   55   55   57   59   54    55 #>  [2665,]   51   51   52   55   55   56   58   60   55    56 #>  [2666,]   52   52   53   56   55   55   57   59   54    55 #>  [2667,]   51   51   52   55   55   55   57   59   54    55 #>  [2668,]   52   53   53   56   55   55   57   59   54    55 #>  [2669,]   52   52   53   56   55   55   57   59   54    55 #>  [2670,]   51   51   52   55   55   56   58   60   55    56 #>  [2671,]   52   53   53   56   55   55   57   59   54    55 #>  [2672,]   51   51   52   55   55   55   57   59   54    55 #>  [2673,]   51   51   52   55   55   56   58   60   55    56 #>  [2674,]   51   51   52   55   55   55   57   59   54    55 #>  [2675,]   52   53   53   56   55   55   57   59   54    55 #>  [2676,]   51   51   52   55   55   55   57   59   54    55 #>  [2677,]   52   53   53   56   55   55   57   59   54    55 #>  [2678,]   52   53   53   56   55   55   57   59   54    55 #>  [2679,]   51   51   52   55   55   55   57   59   54    55 #>  [2680,]   52   52   53   56   55   55   57   59   54    55 #>  [2681,]   52   52   53   56   55   55   57   59   54    55 #>  [2682,]   51   51   52   55   55   55   57   59   54    55 #>  [2683,]   52   52   53   56   55   55   57   59   54    55 #>  [2684,]   52   53   53   56   55   55   57   59   54    55 #>  [2685,]   52   53   53   56   55   55   57   59   54    55 #>  [2686,]   51   51   52   55   55   55   57   59   54    55 #>  [2687,]   52   53   53   56   55   55   57   59   54    55 #>  [2688,]   51   51   52   55   55   55   57   59   54    55 #>  [2689,]   51   51   52   55   55   55   57   59   54    55 #>  [2690,]   52   53   53   56   55   55   57   59   54    55 #>  [2691,]   51   51   52   55   55   55   57   59   54    55 #>  [2692,]   51   51   52   55   55   55   57   59   54    55 #>  [2693,]   52   53   53   56   55   56   58   60   55    56 #>  [2694,]   51   51   52   55   55   55   57   59   54    55 #>  [2695,]   52   53   53   56   55   55   57   59   54    55 #>  [2696,]   52   53   53   56   55   55   57   59   54    55 #>  [2697,]   52   53   53   56   55   56   58   60   55    56 #>  [2698,]   51   51   52   55   55   56   58   60   55    56 #>  [2699,]   51   51   52   55   55   55   57   59   54    55 #>  [2700,]   52   53   53   56   55   55   57   59   54    55 #>  [2701,]   53   54   54   58   57   58   60   62   57    58 #>  [2702,]   54   55   54   57   56   57   59   61   56    57 #>  [2703,]   53   54   54   57   56   57   59   61   56    57 #>  [2704,]   53   54   54   57   56   57   59   61   56    57 #>  [2705,]   53   54   54   58   57   58   60   62   57    58 #>  [2706,]   53   54   54   57   56   57   59   61   56    57 #>  [2707,]   53   54   54   57   56   57   59   61   56    57 #>  [2708,]   53   54   54   57   56   57   59   61   56    57 #>  [2709,]   54   55   54   57   56   57   59   61   56    57 #>  [2710,]   54   55   54   58   57   58   60   62   57    58 #>  [2711,]   53   54   54   58   57   58   60   62   57    58 #>  [2712,]   54   55   54   58   57   58   60   62   57    58 #>  [2713,]   54   55   54   57   56   57   59   61   56    57 #>  [2714,]   53   54   54   58   57   58   60   62   57    58 #>  [2715,]   53   54   54   58   57   58   60   62   57    58 #>  [2716,]   53   54   54   57   56   57   59   61   56    57 #>  [2717,]   54   55   54   58   57   58   60   62   57    58 #>  [2718,]   54   55   54   58   57   58   60   62   57    58 #>  [2719,]   53   54   54   57   56   57   59   61   56    57 #>  [2720,]   54   55   54   57   56   57   59   61   56    57 #>  [2721,]   54   55   54   57   56   57   59   61   56    57 #>  [2722,]   53   54   54   58   57   58   60   62   57    58 #>  [2723,]   54   55   54   57   56   57   59   61   56    57 #>  [2724,]   54   55   54   57   56   57   59   61   56    57 #>  [2725,]   53   54   54   57   56   57   59   61   56    57 #>  [2726,]   53   54   54   58   57   58   60   62   57    58 #>  [2727,]   53   54   54   58   57   58   60   62   57    58 #>  [2728,]   53   54   54   57   56   57   59   61   56    57 #>  [2729,]   54   55   54   57   56   57   59   61   56    57 #>  [2730,]   53   54   54   57   56   57   59   61   56    57 #>  [2731,]   54   55   54   58   57   58   60   62   57    58 #>  [2732,]   54   55   54   58   57   58   60   62   57    58 #>  [2733,]   54   55   54   57   56   57   59   61   56    57 #>  [2734,]   53   54   54   57   56   57   59   61   56    57 #>  [2735,]   53   54   54   57   56   57   59   61   56    57 #>  [2736,]   54   55   54   57   56   57   59   61   56    57 #>  [2737,]   53   54   54   57   56   57   59   61   56    57 #>  [2738,]   53   54   54   57   56   57   59   61   56    57 #>  [2739,]   53   54   54   57   56   57   59   61   56    57 #>  [2740,]   54   55   54   57   56   57   59   61   56    57 #>  [2741,]   53   54   54   57   56   57   59   61   56    57 #>  [2742,]   53   54   54   57   56   57   59   61   56    57 #>  [2743,]   53   54   54   58   57   58   60   62   57    58 #>  [2744,]   53   54   54   57   56   57   59   61   56    57 #>  [2745,]   53   54   54   57   56   57   59   61   56    57 #>  [2746,]   53   54   54   57   56   57   59   61   56    57 #>  [2747,]   53   54   54   58   57   58   60   62   57    58 #>  [2748,]   53   54   54   57   56   57   59   61   56    57 #>  [2749,]   53   54   54   57   56   57   59   61   56    57 #>  [2750,]   53   54   54   57   56   57   59   61   56    57 #>  [2751,]   53   54   54   57   56   57   59   61   56    57 #>  [2752,]   53   54   54   58   57   58   60   62   57    58 #>  [2753,]   54   55   54   57   56   57   59   61   56    57 #>  [2754,]   53   54   54   57   56   57   59   61   56    57 #>  [2755,]   53   54   54   57   56   57   59   61   56    57 #>  [2756,]   53   54   54   57   56   57   59   61   56    57 #>  [2757,]   53   54   54   57   56   57   59   61   56    57 #>  [2758,]   53   54   54   58   57   58   60   62   57    58 #>  [2759,]   53   54   54   58   57   58   60   62   57    58 #>  [2760,]   54   55   54   57   56   57   59   61   56    57 #>  [2761,]   54   55   54   58   57   58   60   62   57    58 #>  [2762,]   53   54   54   57   56   57   59   61   56    57 #>  [2763,]   54   55   54   57   56   57   59   61   56    57 #>  [2764,]   53   54   54   57   56   57   59   61   56    57 #>  [2765,]   53   54   54   57   56   57   59   61   56    57 #>  [2766,]   53   54   54   58   57   58   60   62   57    58 #>  [2767,]   53   54   54   57   56   57   59   61   56    57 #>  [2768,]   53   54   54   57   56   57   59   61   56    57 #>  [2769,]   53   54   54   57   56   57   59   61   56    57 #>  [2770,]   54   55   54   58   57   58   60   62   57    58 #>  [2771,]   53   54   54   58   57   58   60   62   57    58 #>  [2772,]   53   54   54   57   56   57   59   61   56    57 #>  [2773,]   53   54   54   57   56   57   59   61   56    57 #>  [2774,]   53   54   54   57   56   57   59   61   56    57 #>  [2775,]   54   55   54   58   57   58   60   62   57    58 #>  [2776,]   53   54   54   57   56   57   59   61   56    57 #>  [2777,]   53   54   54   58   57   58   60   62   57    58 #>  [2778,]   53   54   54   57   56   57   59   61   56    57 #>  [2779,]   53   54   54   58   57   58   60   62   57    58 #>  [2780,]   54   55   54   57   56   57   59   61   56    57 #>  [2781,]   54   55   54   57   56   57   59   61   56    57 #>  [2782,]   53   54   54   57   56   57   59   61   56    57 #>  [2783,]   54   55   54   57   56   57   59   61   56    57 #>  [2784,]   54   55   54   57   56   57   59   61   56    57 #>  [2785,]   53   54   54   57   56   57   59   61   56    57 #>  [2786,]   54   55   54   57   56   57   59   61   56    57 #>  [2787,]   53   54   54   58   57   58   60   62   57    58 #>  [2788,]   54   55   54   57   56   57   59   61   56    57 #>  [2789,]   53   54   54   57   56   57   59   61   56    57 #>  [2790,]   53   54   54   58   57   58   60   62   57    58 #>  [2791,]   53   54   54   58   57   58   60   62   57    58 #>  [2792,]   53   54   54   57   56   57   59   61   56    57 #>  [2793,]   53   54   54   57   56   57   59   61   56    57 #>  [2794,]   53   54   54   57   56   57   59   61   56    57 #>  [2795,]   53   54   54   58   57   58   60   62   57    58 #>  [2796,]   53   54   54   57   56   57   59   61   56    57 #>  [2797,]   53   54   54   57   56   57   59   61   56    57 #>  [2798,]   53   54   54   57   56   57   59   61   56    57 #>  [2799,]   53   54   54   57   56   57   59   61   56    57 #>  [2800,]   53   54   54   58   57   58   60   62   57    58 #>  [2801,]   56   57   56   60   59   60   62   64   59    60 #>  [2802,]   56   57   56   60   59   60   62   64   59    60 #>  [2803,]   55   56   55   59   58   59   61   63   58    59 #>  [2804,]   55   56   55   59   58   59   61   63   58    59 #>  [2805,]   56   57   56   60   59   60   62   64   59    60 #>  [2806,]   56   57   56   60   59   60   62   64   59    60 #>  [2807,]   55   56   55   59   58   59   61   63   58    59 #>  [2808,]   55   56   55   59   58   59   61   63   58    59 #>  [2809,]   56   57   56   60   59   60   62   64   59    60 #>  [2810,]   56   57   56   60   59   60   62   64   59    60 #>  [2811,]   56   57   56   60   59   60   62   64   59    60 #>  [2812,]   55   56   55   59   58   59   61   63   58    59 #>  [2813,]   56   57   56   60   59   60   62   64   59    60 #>  [2814,]   55   56   55   59   58   59   61   63   58    59 #>  [2815,]   56   57   56   60   59   60   62   64   59    60 #>  [2816,]   56   57   56   60   59   60   62   64   59    60 #>  [2817,]   56   57   56   60   59   60   62   64   59    60 #>  [2818,]   56   57   56   60   59   60   62   64   59    60 #>  [2819,]   56   57   56   60   59   60   62   64   59    60 #>  [2820,]   56   57   56   60   59   60   62   64   59    60 #>  [2821,]   56   57   56   60   59   60   62   64   59    60 #>  [2822,]   56   57   56   60   59   60   62   64   59    60 #>  [2823,]   55   56   55   59   58   59   61   63   58    59 #>  [2824,]   56   57   56   60   59   60   62   64   59    60 #>  [2825,]   55   56   55   59   58   59   61   63   58    59 #>  [2826,]   56   57   56   60   59   60   62   64   59    60 #>  [2827,]   56   57   56   60   59   60   62   64   59    60 #>  [2828,]   56   57   56   60   59   60   62   64   59    60 #>  [2829,]   56   57   56   60   59   60   62   64   59    60 #>  [2830,]   56   57   56   60   59   60   62   64   59    60 #>  [2831,]   55   56   55   59   58   59   61   63   58    59 #>  [2832,]   55   56   55   59   58   59   61   63   58    59 #>  [2833,]   56   57   56   60   59   60   62   64   59    60 #>  [2834,]   56   57   56   60   59   60   62   64   59    60 #>  [2835,]   56   57   56   60   59   60   62   64   59    60 #>  [2836,]   56   57   56   60   59   60   62   64   59    60 #>  [2837,]   55   56   55   59   58   59   61   63   58    59 #>  [2838,]   56   57   56   60   59   60   62   64   59    60 #>  [2839,]   56   57   56   60   59   60   62   64   59    60 #>  [2840,]   55   56   55   59   58   59   61   63   58    59 #>  [2841,]   56   57   56   60   59   60   62   64   59    60 #>  [2842,]   56   57   56   60   59   60   62   64   59    60 #>  [2843,]   56   57   56   60   59   60   62   64   59    60 #>  [2844,]   56   57   56   60   59   60   62   64   59    60 #>  [2845,]   56   57   56   60   59   60   62   64   59    60 #>  [2846,]   55   56   55   59   58   59   61   63   58    59 #>  [2847,]   55   56   55   59   58   59   61   63   58    59 #>  [2848,]   56   57   56   60   59   60   62   64   59    60 #>  [2849,]   56   57   56   60   59   60   62   64   59    60 #>  [2850,]   56   57   56   60   59   60   62   64   59    60 #>  [2851,]   56   57   56   60   59   60   62   64   59    60 #>  [2852,]   55   56   55   59   58   59   61   63   58    59 #>  [2853,]   56   57   56   60   59   60   62   64   59    60 #>  [2854,]   56   57   56   60   59   60   62   64   59    60 #>  [2855,]   55   56   55   59   58   59   61   63   58    59 #>  [2856,]   56   57   56   60   59   60   62   64   59    60 #>  [2857,]   55   56   55   59   58   59   61   63   58    59 #>  [2858,]   56   57   56   60   59   60   62   64   59    60 #>  [2859,]   55   56   55   59   58   59   61   63   58    59 #>  [2860,]   55   56   55   59   58   59   61   63   58    59 #>  [2861,]   56   57   56   60   59   60   62   64   59    60 #>  [2862,]   56   57   56   60   59   60   62   64   59    60 #>  [2863,]   56   57   56   60   59   60   62   64   59    60 #>  [2864,]   56   57   56   60   59   60   62   64   59    60 #>  [2865,]   56   57   56   60   59   60   62   64   59    60 #>  [2866,]   56   57   56   60   59   60   62   64   59    60 #>  [2867,]   55   56   55   59   58   59   61   63   58    59 #>  [2868,]   55   56   55   59   58   59   61   63   58    59 #>  [2869,]   56   57   56   60   59   60   62   64   59    60 #>  [2870,]   56   57   56   60   59   60   62   64   59    60 #>  [2871,]   56   57   56   60   59   60   62   64   59    60 #>  [2872,]   55   56   55   59   58   59   61   63   58    59 #>  [2873,]   56   57   56   60   59   60   62   64   59    60 #>  [2874,]   55   56   55   59   58   59   61   63   58    59 #>  [2875,]   56   57   56   60   59   60   62   64   59    60 #>  [2876,]   55   56   55   59   58   59   61   63   58    59 #>  [2877,]   56   57   56   60   59   60   62   64   59    60 #>  [2878,]   55   56   55   59   58   59   61   63   58    59 #>  [2879,]   56   57   56   60   59   60   62   64   59    60 #>  [2880,]   55   56   55   59   58   59   61   63   58    59 #>  [2881,]   56   57   56   60   59   60   62   64   59    60 #>  [2882,]   56   57   56   60   59   60   62   64   59    60 #>  [2883,]   56   57   56   60   59   60   62   64   59    60 #>  [2884,]   56   57   56   60   59   60   62   64   59    60 #>  [2885,]   56   57   56   60   59   60   62   64   59    60 #>  [2886,]   55   56   55   59   58   59   61   63   58    59 #>  [2887,]   56   57   56   60   59   60   62   64   59    60 #>  [2888,]   56   57   56   60   59   60   62   64   59    60 #>  [2889,]   56   57   56   60   59   60   62   64   59    60 #>  [2890,]   56   57   56   60   59   60   62   64   59    60 #>  [2891,]   56   57   56   60   59   60   62   64   59    60 #>  [2892,]   55   56   55   59   58   59   61   63   58    59 #>  [2893,]   56   57   56   60   59   60   62   64   59    60 #>  [2894,]   56   57   56   60   59   60   62   64   59    60 #>  [2895,]   56   57   56   60   59   60   62   64   59    60 #>  [2896,]   55   56   55   59   58   59   61   63   58    59 #>  [2897,]   55   56   55   59   58   59   61   63   58    59 #>  [2898,]   55   56   55   59   58   59   61   63   58    59 #>  [2899,]   56   57   56   60   59   60   62   64   59    60 #>  [2900,]   56   57   56   60   59   60   62   64   59    60 #>  [2901,]   57   58   57   61   60   61   63   65   60    61 #>  [2902,]   58   59   58   62   61   62   64   66   61    62 #>  [2903,]   57   58   57   61   60   61   63   65   60    61 #>  [2904,]   57   58   57   61   60   61   63   65   60    61 #>  [2905,]   58   59   58   62   61   62   64   66   61    62 #>  [2906,]   57   58   57   61   60   61   63   65   60    61 #>  [2907,]   58   59   58   62   61   62   64   66   61    62 #>  [2908,]   57   58   57   61   60   61   63   65   60    61 #>  [2909,]   58   59   58   62   61   62   64   66   61    62 #>  [2910,]   58   59   58   62   61   62   64   66   61    62 #>  [2911,]   57   58   57   61   60   61   63   65   60    61 #>  [2912,]   58   59   58   62   61   62   64   66   61    62 #>  [2913,]   58   59   58   62   61   62   64   66   61    62 #>  [2914,]   57   58   57   61   60   61   63   65   60    61 #>  [2915,]   58   59   58   62   61   62   64   66   61    62 #>  [2916,]   57   58   57   61   60   61   63   65   60    61 #>  [2917,]   58   59   58   62   61   62   64   66   61    62 #>  [2918,]   58   59   58   62   61   62   64   66   61    62 #>  [2919,]   57   58   57   61   60   61   63   65   60    61 #>  [2920,]   58   59   58   62   61   62   64   66   61    62 #>  [2921,]   58   59   58   62   61   62   64   66   61    62 #>  [2922,]   58   59   58   62   61   62   64   66   61    62 #>  [2923,]   58   59   58   62   61   62   64   66   61    62 #>  [2924,]   58   59   58   62   61   62   64   66   61    62 #>  [2925,]   58   59   58   62   61   62   64   66   61    62 #>  [2926,]   57   58   57   61   60   61   63   65   60    61 #>  [2927,]   58   59   58   62   61   62   64   66   61    62 #>  [2928,]   57   58   57   61   60   61   63   65   60    61 #>  [2929,]   58   59   58   62   61   62   64   66   61    62 #>  [2930,]   58   59   58   62   61   62   64   66   61    62 #>  [2931,]   58   59   58   62   61   62   64   66   61    62 #>  [2932,]   58   59   58   62   61   62   64   66   61    62 #>  [2933,]   58   59   58   62   61   62   64   66   61    62 #>  [2934,]   57   58   57   61   60   61   63   65   60    61 #>  [2935,]   57   58   57   61   60   61   63   65   60    61 #>  [2936,]   58   59   58   62   61   62   64   66   61    62 #>  [2937,]   57   58   57   61   60   61   63   65   60    61 #>  [2938,]   57   58   57   61   60   61   63   65   60    61 #>  [2939,]   58   59   58   62   61   62   64   66   61    62 #>  [2940,]   58   59   58   62   61   62   64   66   61    62 #>  [2941,]   58   59   58   62   61   62   64   66   61    62 #>  [2942,]   57   58   57   61   60   61   63   65   60    61 #>  [2943,]   58   59   58   62   61   62   64   66   61    62 #>  [2944,]   58   59   58   62   61   62   64   66   61    62 #>  [2945,]   57   58   57   61   60   61   63   65   60    61 #>  [2946,]   58   59   58   62   61   62   64   66   61    62 #>  [2947,]   58   59   58   62   61   62   64   66   61    62 #>  [2948,]   58   59   58   62   61   62   64   66   61    62 #>  [2949,]   57   58   57   61   60   61   63   65   60    61 #>  [2950,]   58   59   58   62   61   62   64   66   61    62 #>  [2951,]   58   59   58   62   61   62   64   66   61    62 #>  [2952,]   57   58   57   61   60   61   63   65   60    61 #>  [2953,]   58   59   58   62   61   62   64   66   61    62 #>  [2954,]   58   59   58   62   61   62   64   66   61    62 #>  [2955,]   57   58   57   61   60   61   63   65   60    61 #>  [2956,]   57   58   57   61   60   61   63   65   60    61 #>  [2957,]   58   59   58   62   61   62   64   66   61    62 #>  [2958,]   58   59   58   62   61   62   64   66   61    62 #>  [2959,]   57   58   57   61   60   61   63   65   60    61 #>  [2960,]   58   59   58   62   61   62   64   66   61    62 #>  [2961,]   58   59   58   62   61   62   64   66   61    62 #>  [2962,]   57   58   57   61   60   61   63   65   60    61 #>  [2963,]   58   59   58   62   61   62   64   66   61    62 #>  [2964,]   57   58   57   61   60   61   63   65   60    61 #>  [2965,]   57   58   57   61   60   61   63   65   60    61 #>  [2966,]   58   59   58   62   61   62   64   66   61    62 #>  [2967,]   58   59   58   62   61   62   64   66   61    62 #>  [2968,]   57   58   57   61   60   61   63   65   60    61 #>  [2969,]   57   58   57   61   60   61   63   65   60    61 #>  [2970,]   58   59   58   62   61   62   64   66   61    62 #>  [2971,]   58   59   58   62   61   62   64   66   61    62 #>  [2972,]   57   58   57   61   60   61   63   65   60    61 #>  [2973,]   57   58   57   61   60   61   63   65   60    61 #>  [2974,]   58   59   58   62   61   62   64   66   61    62 #>  [2975,]   58   59   58   62   61   62   64   66   61    62 #>  [2976,]   58   59   58   62   61   62   64   66   61    62 #>  [2977,]   57   58   57   61   60   61   63   65   60    61 #>  [2978,]   58   59   58   62   61   62   64   66   61    62 #>  [2979,]   57   58   57   61   60   61   63   65   60    61 #>  [2980,]   58   59   58   62   61   62   64   66   61    62 #>  [2981,]   58   59   58   62   61   62   64   66   61    62 #>  [2982,]   58   59   58   62   61   62   64   66   61    62 #>  [2983,]   58   59   58   62   61   62   64   66   61    62 #>  [2984,]   58   59   58   62   61   62   64   66   61    62 #>  [2985,]   58   59   58   62   61   62   64   66   61    62 #>  [2986,]   58   59   58   62   61   62   64   66   61    62 #>  [2987,]   58   59   58   62   61   62   64   66   61    62 #>  [2988,]   58   59   58   62   61   62   64   66   61    62 #>  [2989,]   57   58   57   61   60   61   63   65   60    61 #>  [2990,]   58   59   58   62   61   62   64   66   61    62 #>  [2991,]   57   58   57   61   60   61   63   65   60    61 #>  [2992,]   58   59   58   62   61   62   64   66   61    62 #>  [2993,]   58   59   58   62   61   62   64   66   61    62 #>  [2994,]   57   58   57   61   60   61   63   65   60    61 #>  [2995,]   58   59   58   62   61   62   64   66   61    62 #>  [2996,]   57   58   57   61   60   61   63   65   60    61 #>  [2997,]   57   58   57   61   60   61   63   65   60    61 #>  [2998,]   58   59   58   62   61   62   64   66   61    62 #>  [2999,]   58   59   58   62   61   62   64   66   61    62 #>  [3000,]   57   58   57   61   60   61   63   65   60    61 #>  [3001,]   59   60   59   63   64   65   66   68   63    64 #>  [3002,]   59   60   59   63   64   65   66   68   63    64 #>  [3003,]   59   60   59   63   63   64   66   68   63    64 #>  [3004,]   59   60   59   63   63   64   66   68   63    64 #>  [3005,]   59   60   59   63   63   64   66   68   63    64 #>  [3006,]   59   60   59   63   64   65   66   68   63    64 #>  [3007,]   59   60   59   63   63   64   66   68   63    64 #>  [3008,]   59   60   59   63   63   64   66   68   63    64 #>  [3009,]   59   60   59   63   63   64   66   68   63    64 #>  [3010,]   59   60   59   63   63   64   66   68   63    64 #>  [3011,]   59   60   59   63   63   64   66   68   63    64 #>  [3012,]   59   60   59   63   63   64   66   68   63    64 #>  [3013,]   59   60   59   63   64   65   66   68   63    64 #>  [3014,]   59   60   59   63   64   65   66   68   63    64 #>  [3015,]   59   60   59   63   64   65   66   68   63    64 #>  [3016,]   59   60   59   63   64   65   66   68   63    64 #>  [3017,]   59   60   59   63   64   65   66   68   63    64 #>  [3018,]   60   61   60   64   62   63   65   67   62    63 #>  [3019,]   59   60   59   63   63   64   66   68   63    64 #>  [3020,]   59   60   59   63   63   64   66   68   63    64 #>  [3021,]   59   60   59   63   64   65   66   68   63    64 #>  [3022,]   59   60   59   63   63   64   66   68   63    64 #>  [3023,]   59   60   59   63   63   64   66   68   63    64 #>  [3024,]   59   60   59   63   63   64   66   68   63    64 #>  [3025,]   59   60   59   63   63   64   66   68   63    64 #>  [3026,]   59   60   59   63   63   64   66   68   63    64 #>  [3027,]   59   60   59   63   63   64   66   68   63    64 #>  [3028,]   59   60   59   63   63   64   66   68   63    64 #>  [3029,]   59   60   59   63   64   65   66   68   63    64 #>  [3030,]   59   60   59   63   63   64   66   68   63    64 #>  [3031,]   59   60   59   63   63   64   66   68   63    64 #>  [3032,]   59   60   59   63   63   64   66   68   63    64 #>  [3033,]   59   60   59   63   64   65   66   68   63    64 #>  [3034,]   59   60   59   63   63   64   66   68   63    64 #>  [3035,]   59   60   59   63   63   64   66   68   63    64 #>  [3036,]   59   60   59   63   63   64   66   68   63    64 #>  [3037,]   59   60   59   63   63   64   66   68   63    64 #>  [3038,]   59   60   59   63   63   64   66   68   63    64 #>  [3039,]   59   60   59   63   63   64   66   68   63    64 #>  [3040,]   59   60   59   63   63   64   66   68   63    64 #>  [3041,]   59   60   59   63   64   65   66   68   63    64 #>  [3042,]   59   60   59   63   63   64   66   68   63    64 #>  [3043,]   59   60   59   63   63   64   66   68   63    64 #>  [3044,]   59   60   59   63   64   65   66   68   63    64 #>  [3045,]   59   60   59   63   63   64   66   68   63    64 #>  [3046,]   59   60   59   63   63   64   66   68   63    64 #>  [3047,]   59   60   59   63   63   64   66   68   63    64 #>  [3048,]   59   60   59   63   63   64   66   68   63    64 #>  [3049,]   59   60   59   63   63   64   66   68   63    64 #>  [3050,]   59   60   59   63   64   65   66   68   63    64 #>  [3051,]   60   61   60   64   62   63   65   67   62    63 #>  [3052,]   59   60   59   63   63   64   66   68   63    64 #>  [3053,]   60   61   60   64   62   63   65   67   62    63 #>  [3054,]   59   60   59   63   63   64   66   68   63    64 #>  [3055,]   59   60   59   63   63   64   66   68   63    64 #>  [3056,]   59   60   59   63   63   64   66   68   63    64 #>  [3057,]   59   60   59   63   63   64   66   68   63    64 #>  [3058,]   59   60   59   63   63   64   66   68   63    64 #>  [3059,]   59   60   59   63   64   65   66   68   63    64 #>  [3060,]   59   60   59   63   63   64   66   68   63    64 #>  [3061,]   59   60   59   63   64   65   66   68   63    64 #>  [3062,]   59   60   59   63   63   64   66   68   63    64 #>  [3063,]   59   60   59   63   63   64   66   68   63    64 #>  [3064,]   59   60   59   63   63   64   66   68   63    64 #>  [3065,]   59   60   59   63   63   64   66   68   63    64 #>  [3066,]   59   60   59   63   63   64   66   68   63    64 #>  [3067,]   59   60   59   63   63   64   66   68   63    64 #>  [3068,]   59   60   59   63   64   65   66   68   63    64 #>  [3069,]   59   60   59   63   63   64   66   68   63    64 #>  [3070,]   59   60   59   63   64   65   66   68   63    64 #>  [3071,]   59   60   59   63   63   64   66   68   63    64 #>  [3072,]   59   60   59   63   63   64   66   68   63    64 #>  [3073,]   59   60   59   63   64   65   66   68   63    64 #>  [3074,]   59   60   59   63   63   64   66   68   63    64 #>  [3075,]   59   60   59   63   63   64   66   68   63    64 #>  [3076,]   59   60   59   63   64   65   66   68   63    64 #>  [3077,]   59   60   59   63   63   64   66   68   63    64 #>  [3078,]   59   60   59   63   63   64   66   68   63    64 #>  [3079,]   59   60   59   63   64   65   66   68   63    64 #>  [3080,]   59   60   59   63   63   64   66   68   63    64 #>  [3081,]   59   60   59   63   64   65   66   68   63    64 #>  [3082,]   59   60   59   63   63   64   66   68   63    64 #>  [3083,]   59   60   59   63   64   65   66   68   63    64 #>  [3084,]   60   61   60   64   62   63   65   67   62    63 #>  [3085,]   59   60   59   63   63   64   66   68   63    64 #>  [3086,]   59   60   59   63   64   65   66   68   63    64 #>  [3087,]   59   60   59   63   63   64   66   68   63    64 #>  [3088,]   59   60   59   63   63   64   66   68   63    64 #>  [3089,]   59   60   59   63   63   64   66   68   63    64 #>  [3090,]   59   60   59   63   63   64   66   68   63    64 #>  [3091,]   59   60   59   63   63   64   66   68   63    64 #>  [3092,]   59   60   59   63   63   64   66   68   63    64 #>  [3093,]   59   60   59   63   64   65   66   68   63    64 #>  [3094,]   60   61   60   64   62   63   65   67   62    63 #>  [3095,]   59   60   59   63   63   64   66   68   63    64 #>  [3096,]   59   60   59   63   64   65   66   68   63    64 #>  [3097,]   59   60   59   63   63   64   66   68   63    64 #>  [3098,]   59   60   59   63   63   64   66   68   63    64 #>  [3099,]   59   60   59   63   64   65   66   68   63    64 #>  [3100,]   59   60   59   63   63   64   66   68   63    64 #>  [3101,]   61   62   61   65   65   66   67   69   64    66 #>  [3102,]   62   63   62   66   66   67   68   70   65    65 #>  [3103,]   61   62   61   65   65   66   67   69   64    67 #>  [3104,]   61   62   61   65   65   66   67   69   64    66 #>  [3105,]   61   62   61   65   65   66   67   69   64    66 #>  [3106,]   61   62   61   65   65   66   67   69   64    67 #>  [3107,]   61   62   61   65   65   66   67   69   64    66 #>  [3108,]   61   62   61   65   65   66   67   69   64    66 #>  [3109,]   62   63   62   66   66   67   68   70   65    65 #>  [3110,]   62   63   62   66   66   67   68   70   65    65 #>  [3111,]   61   62   61   65   65   66   67   69   64    66 #>  [3112,]   62   63   62   66   66   67   68   70   65    65 #>  [3113,]   62   63   62   66   66   67   68   70   65    65 #>  [3114,]   61   62   61   65   65   66   67   69   64    66 #>  [3115,]   61   62   61   65   65   66   67   69   64    66 #>  [3116,]   61   62   61   65   65   66   67   69   64    66 #>  [3117,]   62   63   62   66   66   67   68   70   65    65 #>  [3118,]   61   62   61   65   65   66   67   69   64    67 #>  [3119,]   61   62   61   65   65   66   67   69   64    67 #>  [3120,]   61   62   61   65   65   66   67   69   64    67 #>  [3121,]   62   63   62   66   66   67   68   70   65    65 #>  [3122,]   61   62   61   65   65   66   67   69   64    66 #>  [3123,]   61   62   61   65   65   66   67   69   64    66 #>  [3124,]   62   63   62   66   66   67   68   70   65    65 #>  [3125,]   61   62   61   65   65   66   67   69   64    67 #>  [3126,]   61   62   61   65   65   66   67   69   64    66 #>  [3127,]   61   62   61   65   65   66   67   69   64    66 #>  [3128,]   61   62   61   65   65   66   67   69   64    67 #>  [3129,]   62   63   62   66   66   67   68   70   65    65 #>  [3130,]   61   62   61   65   65   66   67   69   64    66 #>  [3131,]   61   62   61   65   65   66   67   69   64    66 #>  [3132,]   62   63   62   66   66   67   68   70   65    65 #>  [3133,]   62   63   62   66   66   67   68   70   65    65 #>  [3134,]   61   62   61   65   65   66   67   69   64    67 #>  [3135,]   61   62   61   65   65   66   67   69   64    66 #>  [3136,]   61   62   61   65   65   66   67   69   64    66 #>  [3137,]   61   62   61   65   65   66   67   69   64    66 #>  [3138,]   61   62   61   65   65   66   67   69   64    66 #>  [3139,]   61   62   61   65   65   66   67   69   64    66 #>  [3140,]   62   63   62   66   66   67   68   70   65    65 #>  [3141,]   61   62   61   65   65   66   67   69   64    66 #>  [3142,]   61   62   61   65   65   66   67   69   64    66 #>  [3143,]   61   62   61   65   65   66   67   69   64    66 #>  [3144,]   61   62   61   65   65   66   67   69   64    66 #>  [3145,]   61   62   61   65   65   66   67   69   64    66 #>  [3146,]   61   62   61   65   65   66   67   69   64    66 #>  [3147,]   61   62   61   65   65   66   67   69   64    66 #>  [3148,]   61   62   61   65   65   66   67   69   64    66 #>  [3149,]   61   62   61   65   65   66   67   69   64    66 #>  [3150,]   61   62   61   65   65   66   67   69   64    66 #>  [3151,]   61   62   61   65   65   66   67   69   64    66 #>  [3152,]   61   62   61   65   65   66   67   69   64    66 #>  [3153,]   62   63   62   66   66   67   68   70   65    65 #>  [3154,]   61   62   61   65   65   66   67   69   64    66 #>  [3155,]   61   62   61   65   65   66   67   69   64    66 #>  [3156,]   61   62   61   65   65   66   67   69   64    66 #>  [3157,]   61   62   61   65   65   66   67   69   64    66 #>  [3158,]   61   62   61   65   65   66   67   69   64    66 #>  [3159,]   61   62   61   65   65   66   67   69   64    66 #>  [3160,]   62   63   62   66   66   67   68   70   65    65 #>  [3161,]   62   63   62   66   66   67   68   70   65    65 #>  [3162,]   61   62   61   65   65   66   67   69   64    66 #>  [3163,]   62   63   62   66   66   67   68   70   65    65 #>  [3164,]   61   62   61   65   65   66   67   69   64    66 #>  [3165,]   61   62   61   65   65   66   67   69   64    67 #>  [3166,]   61   62   61   65   65   66   67   69   64    66 #>  [3167,]   61   62   61   65   65   66   67   69   64    66 #>  [3168,]   61   62   61   65   65   66   67   69   64    66 #>  [3169,]   61   62   61   65   65   66   67   69   64    66 #>  [3170,]   62   63   62   66   66   67   68   70   65    65 #>  [3171,]   61   62   61   65   65   66   67   69   64    66 #>  [3172,]   61   62   61   65   65   66   67   69   64    66 #>  [3173,]   61   62   61   65   65   66   67   69   64    67 #>  [3174,]   61   62   61   65   65   66   67   69   64    66 #>  [3175,]   62   63   62   66   66   67   68   70   65    65 #>  [3176,]   61   62   61   65   65   66   67   69   64    66 #>  [3177,]   61   62   61   65   65   66   67   69   64    66 #>  [3178,]   61   62   61   65   65   66   67   69   64    66 #>  [3179,]   61   62   61   65   65   66   67   69   64    66 #>  [3180,]   62   63   62   66   66   67   68   70   65    65 #>  [3181,]   62   63   62   66   66   67   68   70   65    65 #>  [3182,]   61   62   61   65   65   66   67   69   64    66 #>  [3183,]   62   63   62   66   66   67   68   70   65    65 #>  [3184,]   61   62   61   65   65   66   67   69   64    67 #>  [3185,]   61   62   61   65   65   66   67   69   64    66 #>  [3186,]   62   63   62   66   66   67   68   70   65    65 #>  [3187,]   61   62   61   65   65   66   67   69   64    66 #>  [3188,]   61   62   61   65   65   66   67   69   64    66 #>  [3189,]   61   62   61   65   65   66   67   69   64    66 #>  [3190,]   61   62   61   65   65   66   67   69   64    66 #>  [3191,]   61   62   61   65   65   66   67   69   64    66 #>  [3192,]   61   62   61   65   65   66   67   69   64    66 #>  [3193,]   61   62   61   65   65   66   67   69   64    67 #>  [3194,]   61   62   61   65   65   66   67   69   64    66 #>  [3195,]   61   62   61   65   65   66   67   69   64    66 #>  [3196,]   61   62   61   65   65   66   67   69   64    66 #>  [3197,]   61   62   61   65   65   66   67   69   64    67 #>  [3198,]   61   62   61   65   65   66   67   69   64    67 #>  [3199,]   61   62   61   65   65   66   67   69   64    66 #>  [3200,]   61   62   61   65   65   66   67   69   64    66 #>  [3201,]   63   64   63   67   67   68   69   71   66    68 #>  [3202,]   63   64   63   67   67   68   69   71   66    68 #>  [3203,]   63   64   63   67   67   68   69   71   66    68 #>  [3204,]   63   64   63   67   67   68   69   71   66    68 #>  [3205,]   63   64   63   67   67   68   69   71   66    68 #>  [3206,]   63   64   63   67   67   68   69   71   66    68 #>  [3207,]   63   64   63   67   67   68   69   71   66    68 #>  [3208,]   63   64   63   67   67   68   69   71   66    68 #>  [3209,]   64   65   64   68   68   69   70   72   67    69 #>  [3210,]   63   64   63   67   67   68   69   71   66    68 #>  [3211,]   63   64   63   67   67   68   69   71   66    68 #>  [3212,]   63   64   63   67   67   68   69   71   66    68 #>  [3213,]   64   65   64   68   68   69   70   72   67    69 #>  [3214,]   63   64   63   67   67   68   69   71   66    68 #>  [3215,]   63   64   63   67   67   68   69   71   66    68 #>  [3216,]   63   64   63   67   67   68   69   71   66    68 #>  [3217,]   64   65   64   68   68   69   70   72   67    69 #>  [3218,]   64   65   64   68   68   69   70   72   67    69 #>  [3219,]   63   64   63   67   67   68   69   71   66    68 #>  [3220,]   63   64   63   67   67   68   69   71   66    68 #>  [3221,]   63   64   63   67   67   68   69   71   66    68 #>  [3222,]   63   64   63   67   67   68   69   71   66    68 #>  [3223,]   63   64   63   67   67   68   69   71   66    68 #>  [3224,]   63   64   63   67   67   68   69   71   66    68 #>  [3225,]   63   64   63   67   67   68   69   71   66    68 #>  [3226,]   63   64   63   67   67   68   69   71   66    68 #>  [3227,]   64   65   64   68   68   69   70   72   67    69 #>  [3228,]   63   64   63   67   67   68   69   71   66    68 #>  [3229,]   63   64   63   67   67   68   69   71   66    68 #>  [3230,]   63   64   63   67   67   68   69   71   66    68 #>  [3231,]   63   64   63   67   67   68   69   71   66    68 #>  [3232,]   63   64   63   67   67   68   69   71   66    68 #>  [3233,]   63   64   63   67   67   68   69   71   66    68 #>  [3234,]   63   64   63   67   67   68   69   71   66    68 #>  [3235,]   63   64   63   67   67   68   69   71   66    68 #>  [3236,]   63   64   63   67   67   68   69   71   66    68 #>  [3237,]   63   64   63   67   67   68   69   71   66    68 #>  [3238,]   63   64   63   67   67   68   69   71   66    68 #>  [3239,]   63   64   63   67   67   68   69   71   66    68 #>  [3240,]   63   64   63   67   67   68   69   71   66    68 #>  [3241,]   63   64   63   67   67   68   69   71   66    68 #>  [3242,]   64   65   64   68   68   69   70   72   67    69 #>  [3243,]   63   64   63   67   67   68   69   71   66    68 #>  [3244,]   63   64   63   67   67   68   69   71   66    68 #>  [3245,]   63   64   63   67   67   68   69   71   66    68 #>  [3246,]   63   64   63   67   67   68   69   71   66    68 #>  [3247,]   63   64   63   67   67   68   69   71   66    68 #>  [3248,]   63   64   63   67   67   68   69   71   66    68 #>  [3249,]   63   64   63   67   67   68   69   71   66    68 #>  [3250,]   63   64   63   67   67   68   69   71   66    68 #>  [3251,]   64   65   64   68   68   69   70   72   67    69 #>  [3252,]   63   64   63   67   67   68   69   71   66    68 #>  [3253,]   64   65   64   68   68   69   70   72   67    69 #>  [3254,]   63   64   63   67   67   68   69   71   66    68 #>  [3255,]   63   64   63   67   67   68   69   71   66    68 #>  [3256,]   63   64   63   67   67   68   69   71   66    68 #>  [3257,]   63   64   63   67   67   68   69   71   66    68 #>  [3258,]   63   64   63   67   67   68   69   71   66    68 #>  [3259,]   63   64   63   67   67   68   69   71   66    68 #>  [3260,]   63   64   63   67   67   68   69   71   66    68 #>  [3261,]   63   64   63   67   67   68   69   71   66    68 #>  [3262,]   63   64   63   67   67   68   69   71   66    68 #>  [3263,]   63   64   63   67   67   68   69   71   66    68 #>  [3264,]   63   64   63   67   67   68   69   71   66    68 #>  [3265,]   64   65   64   68   68   69   70   72   67    69 #>  [3266,]   64   65   64   68   68   69   70   72   67    69 #>  [3267,]   63   64   63   67   67   68   69   71   66    68 #>  [3268,]   63   64   63   67   67   68   69   71   66    68 #>  [3269,]   63   64   63   67   67   68   69   71   66    68 #>  [3270,]   63   64   63   67   67   68   69   71   66    68 #>  [3271,]   63   64   63   67   67   68   69   71   66    68 #>  [3272,]   63   64   63   67   67   68   69   71   66    68 #>  [3273,]   63   64   63   67   67   68   69   71   66    68 #>  [3274,]   63   64   63   67   67   68   69   71   66    68 #>  [3275,]   63   64   63   67   67   68   69   71   66    68 #>  [3276,]   63   64   63   67   67   68   69   71   66    68 #>  [3277,]   63   64   63   67   67   68   69   71   66    68 #>  [3278,]   63   64   63   67   67   68   69   71   66    68 #>  [3279,]   64   65   64   68   68   69   70   72   67    69 #>  [3280,]   63   64   63   67   67   68   69   71   66    68 #>  [3281,]   63   64   63   67   67   68   69   71   66    68 #>  [3282,]   64   65   64   68   68   69   70   72   67    69 #>  [3283,]   63   64   63   67   67   68   69   71   66    68 #>  [3284,]   64   65   64   68   68   69   70   72   67    69 #>  [3285,]   63   64   63   67   67   68   69   71   66    68 #>  [3286,]   63   64   63   67   67   68   69   71   66    68 #>  [3287,]   63   64   63   67   67   68   69   71   66    68 #>  [3288,]   63   64   63   67   67   68   69   71   66    68 #>  [3289,]   63   64   63   67   67   68   69   71   66    68 #>  [3290,]   63   64   63   67   67   68   69   71   66    68 #>  [3291,]   64   65   64   68   68   69   70   72   67    69 #>  [3292,]   63   64   63   67   67   68   69   71   66    68 #>  [3293,]   64   65   64   68   68   69   70   72   67    69 #>  [3294,]   64   65   64   68   68   69   70   72   67    69 #>  [3295,]   63   64   63   67   67   68   69   71   66    68 #>  [3296,]   63   64   63   67   67   68   69   71   66    68 #>  [3297,]   63   64   63   67   67   68   69   71   66    68 #>  [3298,]   63   64   63   67   67   68   69   71   66    68 #>  [3299,]   63   64   63   67   67   68   69   71   66    68 #>  [3300,]   63   64   63   67   67   68   69   71   66    68 #>  [3301,]   66   67   66   70   70   71   72   74   69    71 #>  [3302,]   66   67   66   70   70   71   72   74   69    71 #>  [3303,]   66   67   66   70   70   71   72   74   69    71 #>  [3304,]   65   66   65   69   69   70   71   73   68    70 #>  [3305,]   66   67   66   70   70   71   72   74   69    71 #>  [3306,]   66   67   66   70   70   71   72   74   69    71 #>  [3307,]   66   67   66   70   70   71   72   74   69    71 #>  [3308,]   65   66   65   69   69   70   71   73   68    70 #>  [3309,]   65   66   65   69   69   70   71   73   68    70 #>  [3310,]   65   66   65   69   69   70   71   73   68    70 #>  [3311,]   66   67   66   70   70   71   72   74   69    71 #>  [3312,]   66   67   66   70   70   71   72   74   69    71 #>  [3313,]   66   67   66   70   70   71   72   74   69    71 #>  [3314,]   66   67   66   70   70   71   72   74   69    71 #>  [3315,]   66   67   66   70   70   71   72   74   69    71 #>  [3316,]   66   67   66   70   70   71   72   74   69    71 #>  [3317,]   66   67   66   70   70   71   72   74   69    71 #>  [3318,]   66   67   66   70   70   71   72   74   69    71 #>  [3319,]   66   67   66   70   70   71   72   74   69    71 #>  [3320,]   66   67   66   70   70   71   72   74   69    71 #>  [3321,]   66   67   66   70   70   71   72   74   69    71 #>  [3322,]   66   67   66   70   70   71   72   74   69    71 #>  [3323,]   66   67   66   70   70   71   72   74   69    71 #>  [3324,]   66   67   66   70   70   71   72   74   69    71 #>  [3325,]   66   67   66   70   70   71   72   74   69    71 #>  [3326,]   66   67   66   70   70   71   72   74   69    71 #>  [3327,]   66   67   66   70   70   71   72   74   69    71 #>  [3328,]   66   67   66   70   70   71   72   74   69    71 #>  [3329,]   66   67   66   70   70   71   72   74   69    71 #>  [3330,]   66   67   66   70   70   71   72   74   69    71 #>  [3331,]   66   67   66   70   70   71   72   74   69    71 #>  [3332,]   66   67   66   70   70   71   72   74   69    71 #>  [3333,]   66   67   66   70   70   71   72   74   69    71 #>  [3334,]   66   67   66   70   70   71   72   74   69    71 #>  [3335,]   66   67   66   70   70   71   72   74   69    71 #>  [3336,]   66   67   66   70   70   71   72   74   69    71 #>  [3337,]   66   67   66   70   70   71   72   74   69    71 #>  [3338,]   66   67   66   70   70   71   72   74   69    71 #>  [3339,]   66   67   66   70   70   71   72   74   69    71 #>  [3340,]   66   67   66   70   70   71   72   74   69    71 #>  [3341,]   66   67   66   70   70   71   72   74   69    71 #>  [3342,]   66   67   66   70   70   71   72   74   69    71 #>  [3343,]   65   66   65   69   69   70   71   73   68    70 #>  [3344,]   66   67   66   70   70   71   72   74   69    71 #>  [3345,]   66   67   66   70   70   71   72   74   69    71 #>  [3346,]   66   67   66   70   70   71   72   74   69    71 #>  [3347,]   66   67   66   70   70   71   72   74   69    71 #>  [3348,]   66   67   66   70   70   71   72   74   69    71 #>  [3349,]   66   67   66   70   70   71   72   74   69    71 #>  [3350,]   66   67   66   70   70   71   72   74   69    71 #>  [3351,]   65   66   65   69   69   70   71   73   68    70 #>  [3352,]   66   67   66   70   70   71   72   74   69    71 #>  [3353,]   66   67   66   70   70   71   72   74   69    71 #>  [3354,]   66   67   66   70   70   71   72   74   69    71 #>  [3355,]   66   67   66   70   70   71   72   74   69    71 #>  [3356,]   66   67   66   70   70   71   72   74   69    71 #>  [3357,]   66   67   66   70   70   71   72   74   69    71 #>  [3358,]   66   67   66   70   70   71   72   74   69    71 #>  [3359,]   66   67   66   70   70   71   72   74   69    71 #>  [3360,]   65   66   65   69   69   70   71   73   68    70 #>  [3361,]   66   67   66   70   70   71   72   74   69    71 #>  [3362,]   66   67   66   70   70   71   72   74   69    71 #>  [3363,]   66   67   66   70   70   71   72   74   69    71 #>  [3364,]   65   66   65   69   69   70   71   73   68    70 #>  [3365,]   66   67   66   70   70   71   72   74   69    71 #>  [3366,]   66   67   66   70   70   71   72   74   69    71 #>  [3367,]   65   66   65   69   69   70   71   73   68    70 #>  [3368,]   66   67   66   70   70   71   72   74   69    71 #>  [3369,]   66   67   66   70   70   71   72   74   69    71 #>  [3370,]   66   67   66   70   70   71   72   74   69    71 #>  [3371,]   66   67   66   70   70   71   72   74   69    71 #>  [3372,]   66   67   66   70   70   71   72   74   69    71 #>  [3373,]   66   67   66   70   70   71   72   74   69    71 #>  [3374,]   66   67   66   70   70   71   72   74   69    71 #>  [3375,]   66   67   66   70   70   71   72   74   69    71 #>  [3376,]   66   67   66   70   70   71   72   74   69    71 #>  [3377,]   66   67   66   70   70   71   72   74   69    71 #>  [3378,]   66   67   66   70   70   71   72   74   69    71 #>  [3379,]   66   67   66   70   70   71   72   74   69    71 #>  [3380,]   66   67   66   70   70   71   72   74   69    71 #>  [3381,]   66   67   66   70   70   71   72   74   69    71 #>  [3382,]   66   67   66   70   70   71   72   74   69    71 #>  [3383,]   66   67   66   70   70   71   72   74   69    71 #>  [3384,]   66   67   66   70   70   71   72   74   69    71 #>  [3385,]   65   66   65   69   69   70   71   73   68    70 #>  [3386,]   66   67   66   70   70   71   72   74   69    71 #>  [3387,]   66   67   66   70   70   71   72   74   69    71 #>  [3388,]   66   67   66   70   70   71   72   74   69    71 #>  [3389,]   66   67   66   70   70   71   72   74   69    71 #>  [3390,]   66   67   66   70   70   71   72   74   69    71 #>  [3391,]   65   66   65   69   69   70   71   73   68    70 #>  [3392,]   66   67   66   70   70   71   72   74   69    71 #>  [3393,]   66   67   66   70   70   71   72   74   69    71 #>  [3394,]   66   67   66   70   70   71   72   74   69    71 #>  [3395,]   65   66   65   69   69   70   71   73   68    70 #>  [3396,]   66   67   66   70   70   71   72   74   69    71 #>  [3397,]   66   67   66   70   70   71   72   74   69    71 #>  [3398,]   66   67   66   70   70   71   72   74   69    71 #>  [3399,]   66   67   66   70   70   71   72   74   69    71 #>  [3400,]   66   67   66   70   70   71   72   74   69    71 #>  [3401,]   67   68   67   73   73   74   75   76   71    73 #>  [3402,]   67   68   67   73   73   74   75   76   71    73 #>  [3403,]   67   68   67   72   72   73   74   76   71    73 #>  [3404,]   68   69   68   71   71   72   73   75   70    72 #>  [3405,]   67   68   67   73   73   74   75   76   71    73 #>  [3406,]   68   69   68   71   71   72   73   75   70    72 #>  [3407,]   67   68   67   72   72   73   74   76   71    73 #>  [3408,]   67   68   67   72   72   73   74   76   71    73 #>  [3409,]   68   69   68   71   71   72   73   75   70    72 #>  [3410,]   68   69   68   71   71   72   73   75   70    72 #>  [3411,]   68   69   68   71   71   72   73   75   70    72 #>  [3412,]   68   69   68   71   71   72   73   75   70    72 #>  [3413,]   67   68   67   72   72   73   74   76   71    73 #>  [3414,]   68   69   68   71   71   72   73   75   70    72 #>  [3415,]   68   69   68   71   71   72   73   75   70    72 #>  [3416,]   67   68   67   72   72   73   74   76   71    73 #>  [3417,]   67   68   67   72   72   73   74   76   71    73 #>  [3418,]   68   69   68   71   71   72   73   75   70    72 #>  [3419,]   68   69   68   71   71   72   73   75   70    72 #>  [3420,]   67   68   67   72   72   73   74   76   71    73 #>  [3421,]   68   69   68   71   71   72   73   75   70    72 #>  [3422,]   67   68   67   72   72   73   74   76   71    73 #>  [3423,]   67   68   67   73   73   74   75   76   71    73 #>  [3424,]   67   68   67   72   72   73   74   76   71    73 #>  [3425,]   67   68   67   72   72   73   74   76   71    73 #>  [3426,]   68   69   68   71   71   72   73   75   70    72 #>  [3427,]   68   69   68   71   71   72   73   75   70    72 #>  [3428,]   67   68   67   73   73   74   75   76   71    73 #>  [3429,]   67   68   67   72   72   73   74   76   71    73 #>  [3430,]   68   69   68   71   71   72   73   75   70    72 #>  [3431,]   68   69   68   71   71   72   73   75   70    72 #>  [3432,]   68   69   68   71   71   72   73   75   70    72 #>  [3433,]   68   69   68   71   71   72   73   75   70    72 #>  [3434,]   67   68   67   73   73   74   75   76   71    73 #>  [3435,]   67   68   67   73   73   74   75   76   71    73 #>  [3436,]   68   69   68   71   71   72   73   75   70    72 #>  [3437,]   67   68   67   73   73   74   75   76   71    73 #>  [3438,]   68   69   68   71   71   72   73   75   70    72 #>  [3439,]   67   68   67   72   72   73   74   76   71    73 #>  [3440,]   67   68   67   72   72   73   74   76   71    73 #>  [3441,]   68   69   68   71   71   72   73   75   70    72 #>  [3442,]   68   69   68   71   71   72   73   75   70    72 #>  [3443,]   67   68   67   72   72   73   74   76   71    73 #>  [3444,]   67   68   67   72   72   73   74   76   71    73 #>  [3445,]   67   68   67   72   72   73   74   76   71    73 #>  [3446,]   67   68   67   72   72   73   74   76   71    73 #>  [3447,]   67   68   67   72   72   73   74   76   71    73 #>  [3448,]   68   69   68   71   71   72   73   75   70    72 #>  [3449,]   67   68   67   72   72   73   74   76   71    73 #>  [3450,]   67   68   67   72   72   73   74   76   71    73 #>  [3451,]   67   68   67   72   72   73   74   76   71    73 #>  [3452,]   67   68   67   73   73   74   75   76   71    73 #>  [3453,]   67   68   67   72   72   73   74   76   71    73 #>  [3454,]   67   68   67   72   72   73   74   76   71    73 #>  [3455,]   67   68   67   72   72   73   74   76   71    73 #>  [3456,]   67   68   67   72   72   73   74   76   71    73 #>  [3457,]   67   68   67   73   73   74   75   76   71    73 #>  [3458,]   68   69   68   71   71   72   73   75   70    72 #>  [3459,]   67   68   67   72   72   73   74   76   71    73 #>  [3460,]   68   69   68   71   71   72   73   75   70    72 #>  [3461,]   68   69   68   71   71   72   73   75   70    72 #>  [3462,]   68   69   68   71   71   72   73   75   70    72 #>  [3463,]   67   68   67   72   72   73   74   76   71    73 #>  [3464,]   67   68   67   73   73   74   75   76   71    73 #>  [3465,]   67   68   67   72   72   73   74   76   71    73 #>  [3466,]   67   68   67   72   72   73   74   76   71    73 #>  [3467,]   67   68   67   73   73   74   75   76   71    73 #>  [3468,]   68   69   68   71   71   72   73   75   70    72 #>  [3469,]   68   69   68   71   71   72   73   75   70    72 #>  [3470,]   67   68   67   72   72   73   74   76   71    73 #>  [3471,]   67   68   67   73   73   74   75   76   71    73 #>  [3472,]   67   68   67   72   72   73   74   76   71    73 #>  [3473,]   67   68   67   73   73   74   75   76   71    73 #>  [3474,]   68   69   68   71   71   72   73   75   70    72 #>  [3475,]   68   69   68   71   71   72   73   75   70    72 #>  [3476,]   67   68   67   72   72   73   74   76   71    73 #>  [3477,]   67   68   67   72   72   73   74   76   71    73 #>  [3478,]   67   68   67   72   72   73   74   76   71    73 #>  [3479,]   67   68   67   72   72   73   74   76   71    73 #>  [3480,]   67   68   67   73   73   74   75   76   71    73 #>  [3481,]   67   68   67   73   73   74   75   76   71    73 #>  [3482,]   68   69   68   71   71   72   73   75   70    72 #>  [3483,]   67   68   67   72   72   73   74   76   71    73 #>  [3484,]   67   68   67   72   72   73   74   76   71    73 #>  [3485,]   68   69   68   71   71   72   73   75   70    72 #>  [3486,]   67   68   67   72   72   73   74   76   71    73 #>  [3487,]   67   68   67   73   73   74   75   76   71    73 #>  [3488,]   67   68   67   73   73   74   75   76   71    73 #>  [3489,]   67   68   67   72   72   73   74   76   71    73 #>  [3490,]   67   68   67   72   72   73   74   76   71    73 #>  [3491,]   67   68   67   73   73   74   75   76   71    73 #>  [3492,]   68   69   68   71   71   72   73   75   70    72 #>  [3493,]   68   69   68   71   71   72   73   75   70    72 #>  [3494,]   67   68   67   72   72   73   74   76   71    73 #>  [3495,]   67   68   67   73   73   74   75   76   71    73 #>  [3496,]   68   69   68   71   71   72   73   75   70    72 #>  [3497,]   68   69   68   71   71   72   73   75   70    72 #>  [3498,]   67   68   67   72   72   73   74   76   71    73 #>  [3499,]   68   69   68   71   71   72   73   75   70    72 #>  [3500,]   67   68   67   72   72   73   74   76   71    73 #>  [3501,]   69   70   69   76   76   76   77   77   73    75 #>  [3502,]   70   71   70   74   74   75   76   77   72    74 #>  [3503,]   69   70   69   75   75   76   77   77   72    74 #>  [3504,]   69   70   69   76   76   76   77   77   73    75 #>  [3505,]   69   70   69   76   76   76   77   77   73    75 #>  [3506,]   69   70   69   76   76   76   77   77   73    75 #>  [3507,]   69   70   69   76   76   76   77   77   72    74 #>  [3508,]   69   70   69   76   76   76   77   77   73    75 #>  [3509,]   70   71   70   74   74   75   76   77   73    75 #>  [3510,]   70   71   70   74   74   75   76   77   72    74 #>  [3511,]   69   70   69   75   75   76   77   77   73    75 #>  [3512,]   70   71   70   74   74   75   76   77   73    75 #>  [3513,]   70   71   70   74   74   75   76   77   72    74 #>  [3514,]   69   70   69   75   75   76   77   77   73    75 #>  [3515,]   69   70   69   76   76   76   77   77   73    75 #>  [3516,]   69   70   69   76   76   76   77   77   72    74 #>  [3517,]   70   71   70   74   74   75   76   77   72    74 #>  [3518,]   69   70   69   76   76   76   77   77   72    74 #>  [3519,]   69   70   69   75   75   76   77   77   72    74 #>  [3520,]   69   70   69   75   75   76   77   77   73    75 #>  [3521,]   70   71   70   74   74   75   76   77   72    74 #>  [3522,]   69   70   69   75   75   76   77   77   72    74 #>  [3523,]   69   70   69   76   76   76   77   77   72    74 #>  [3524,]   70   71   70   74   74   75   76   77   72    74 #>  [3525,]   69   70   69   76   76   76   77   77   72    74 #>  [3526,]   69   70   69   75   75   76   77   77   73    75 #>  [3527,]   69   70   69   76   76   76   77   77   72    74 #>  [3528,]   69   70   69   76   76   76   77   77   73    75 #>  [3529,]   70   71   70   74   74   75   76   77   72    74 #>  [3530,]   69   70   69   75   75   76   77   77   72    74 #>  [3531,]   69   70   69   76   76   76   77   77   72    74 #>  [3532,]   70   71   70   74   74   75   76   77   72    74 #>  [3533,]   70   71   70   74   74   75   76   77   73    75 #>  [3534,]   69   70   69   75   75   76   77   77   72    74 #>  [3535,]   69   70   69   76   76   76   77   77   72    74 #>  [3536,]   69   70   69   75   75   76   77   77   72    74 #>  [3537,]   69   70   69   76   76   76   77   77   72    74 #>  [3538,]   69   70   69   76   76   76   77   77   73    75 #>  [3539,]   69   70   69   76   76   76   77   77   72    74 #>  [3540,]   70   71   70   74   74   75   76   77   72    74 #>  [3541,]   69   70   69   75   75   76   77   77   73    75 #>  [3542,]   69   70   69   75   75   76   77   77   73    75 #>  [3543,]   69   70   69   76   76   76   77   77   73    75 #>  [3544,]   69   70   69   76   76   76   77   77   72    74 #>  [3545,]   69   70   69   76   76   76   77   77   73    75 #>  [3546,]   69   70   69   76   76   76   77   77   73    75 #>  [3547,]   69   70   69   76   76   76   77   77   72    74 #>  [3548,]   69   70   69   75   75   76   77   77   72    74 #>  [3549,]   69   70   69   76   76   76   77   77   72    74 #>  [3550,]   69   70   69   76   76   76   77   77   73    75 #>  [3551,]   69   70   69   75   75   76   77   77   73    75 #>  [3552,]   69   70   69   76   76   76   77   77   73    75 #>  [3553,]   70   71   70   74   74   75   76   77   73    75 #>  [3554,]   69   70   69   75   75   76   77   77   72    74 #>  [3555,]   69   70   69   76   76   76   77   77   73    75 #>  [3556,]   69   70   69   76   76   76   77   77   73    75 #>  [3557,]   69   70   69   76   76   76   77   77   73    75 #>  [3558,]   69   70   69   76   76   76   77   77   73    75 #>  [3559,]   69   70   69   76   76   76   77   77   72    74 #>  [3560,]   70   71   70   74   74   75   76   77   73    75 #>  [3561,]   70   71   70   74   74   75   76   77   73    75 #>  [3562,]   69   70   69   75   75   76   77   77   72    74 #>  [3563,]   70   71   70   74   74   75   76   77   73    75 #>  [3564,]   69   70   69   76   76   76   77   77   73    75 #>  [3565,]   69   70   69   76   76   76   77   77   73    75 #>  [3566,]   69   70   69   75   75   76   77   77   73    75 #>  [3567,]   69   70   69   75   75   76   77   77   73    75 #>  [3568,]   69   70   69   75   75   76   77   77   73    75 #>  [3569,]   69   70   69   75   75   76   77   77   72    74 #>  [3570,]   70   71   70   74   74   75   76   77   72    74 #>  [3571,]   69   70   69   76   76   76   77   77   73    75 #>  [3572,]   69   70   69   76   76   76   77   77   73    75 #>  [3573,]   69   70   69   76   76   76   77   77   73    75 #>  [3574,]   69   70   69   76   76   76   77   77   73    75 #>  [3575,]   70   71   70   74   74   75   76   77   73    75 #>  [3576,]   69   70   69   76   76   76   77   77   73    75 #>  [3577,]   69   70   69   76   76   76   77   77   72    74 #>  [3578,]   69   70   69   75   75   76   77   77   73    75 #>  [3579,]   69   70   69   76   76   76   77   77   72    74 #>  [3580,]   70   71   70   74   74   75   76   77   72    74 #>  [3581,]   70   71   70   74   74   75   76   77   73    75 #>  [3582,]   69   70   69   76   76   76   77   77   72    74 #>  [3583,]   70   71   70   74   74   75   76   77   72    74 #>  [3584,]   69   70   69   76   76   76   77   77   73    75 #>  [3585,]   69   70   69   76   76   76   77   77   72    74 #>  [3586,]   70   71   70   74   74   75   76   77   72    74 #>  [3587,]   69   70   69   76   76   76   77   77   73    75 #>  [3588,]   69   70   69   76   76   76   77   77   73    75 #>  [3589,]   69   70   69   75   75   76   77   77   73    75 #>  [3590,]   69   70   69   76   76   76   77   77   73    75 #>  [3591,]   69   70   69   75   75   76   77   77   73    75 #>  [3592,]   69   70   69   76   76   76   77   77   73    75 #>  [3593,]   69   70   69   75   75   76   77   77   72    74 #>  [3594,]   69   70   69   76   76   76   77   77   73    75 #>  [3595,]   69   70   69   76   76   76   77   77   72    74 #>  [3596,]   69   70   69   76   76   76   77   77   73    75 #>  [3597,]   69   70   69   76   76   76   77   77   73    75 #>  [3598,]   69   70   69   75   75   76   77   77   72    74 #>  [3599,]   69   70   69   75   75   76   77   77   72    74 #>  [3600,]   69   70   69   76   76   76   77   77   72    74 #>  [3601,]   72   73   72   78   77   78   79   79   75    77 #>  [3602,]   71   72   71   77   77   78   79   79   75    77 #>  [3603,]   71   72   71   77   77   77   78   78   74    76 #>  [3604,]   72   73   72   78   77   77   78   78   74    76 #>  [3605,]   72   73   72   78   77   77   78   78   74    76 #>  [3606,]   72   73   72   78   77   78   79   79   75    77 #>  [3607,]   71   72   71   77   77   77   78   78   74    76 #>  [3608,]   72   73   72   78   77   77   78   78   74    76 #>  [3609,]   72   73   72   78   77   77   78   78   74    76 #>  [3610,]   71   72   71   77   77   77   78   78   74    76 #>  [3611,]   72   73   72   78   77   78   79   79   75    77 #>  [3612,]   72   73   72   78   77   77   78   78   74    76 #>  [3613,]   71   72   71   77   77   78   79   79   75    77 #>  [3614,]   72   73   72   78   77   78   79   79   75    77 #>  [3615,]   72   73   72   78   77   78   79   79   75    77 #>  [3616,]   71   72   71   77   77   78   79   79   75    77 #>  [3617,]   71   72   71   77   77   78   79   79   75    77 #>  [3618,]   71   72   71   77   77   77   78   78   74    76 #>  [3619,]   71   72   71   77   77   78   79   79   75    77 #>  [3620,]   72   73   72   78   77   77   78   78   74    76 #>  [3621,]   71   72   71   77   77   78   79   79   75    77 #>  [3622,]   71   72   71   77   77   78   79   79   75    77 #>  [3623,]   71   72   71   77   77   77   78   78   74    76 #>  [3624,]   71   72   71   77   77   77   78   78   74    76 #>  [3625,]   71   72   71   77   77   77   78   78   74    76 #>  [3626,]   72   73   72   78   77   78   79   79   75    77 #>  [3627,]   71   72   71   77   77   78   79   79   75    77 #>  [3628,]   72   73   72   78   77   77   78   78   74    76 #>  [3629,]   71   72   71   77   77   78   79   79   75    77 #>  [3630,]   71   72   71   77   77   77   78   78   74    76 #>  [3631,]   71   72   71   77   77   77   78   78   74    76 #>  [3632,]   71   72   71   77   77   77   78   78   74    76 #>  [3633,]   72   73   72   78   77   78   79   79   75    77 #>  [3634,]   71   72   71   77   77   77   78   78   74    76 #>  [3635,]   71   72   71   77   77   78   79   79   75    77 #>  [3636,]   71   72   71   77   77   77   78   78   74    76 #>  [3637,]   71   72   71   77   77   78   79   79   75    77 #>  [3638,]   72   73   72   78   77   77   78   78   74    76 #>  [3639,]   71   72   71   77   77   77   78   78   74    76 #>  [3640,]   71   72   71   77   77   77   78   78   74    76 #>  [3641,]   72   73   72   78   77   78   79   79   75    77 #>  [3642,]   72   73   72   78   77   77   78   78   74    76 #>  [3643,]   72   73   72   78   77   77   78   78   74    76 #>  [3644,]   71   72   71   77   77   78   79   79   75    77 #>  [3645,]   72   73   72   78   77   77   78   78   74    76 #>  [3646,]   72   73   72   78   77   77   78   78   74    76 #>  [3647,]   71   72   71   77   77   78   79   79   75    77 #>  [3648,]   71   72   71   77   77   77   78   78   74    76 #>  [3649,]   71   72   71   77   77   77   78   78   74    76 #>  [3650,]   72   73   72   78   77   78   79   79   75    77 #>  [3651,]   72   73   72   78   77   77   78   78   74    76 #>  [3652,]   72   73   72   78   77   78   79   79   75    77 #>  [3653,]   72   73   72   78   77   77   78   78   74    76 #>  [3654,]   71   72   71   77   77   77   78   78   74    76 #>  [3655,]   72   73   72   78   77   78   79   79   75    77 #>  [3656,]   72   73   72   78   77   77   78   78   74    76 #>  [3657,]   72   73   72   78   77   77   78   78   74    76 #>  [3658,]   72   73   72   78   77   78   79   79   75    77 #>  [3659,]   71   72   71   77   77   78   79   79   75    77 #>  [3660,]   72   73   72   78   77   77   78   78   74    76 #>  [3661,]   72   73   72   78   77   78   79   79   75    77 #>  [3662,]   71   72   71   77   77   77   78   78   74    76 #>  [3663,]   72   73   72   78   77   77   78   78   74    76 #>  [3664,]   72   73   72   78   77   77   78   78   74    76 #>  [3665,]   72   73   72   78   77   77   78   78   74    76 #>  [3666,]   72   73   72   78   77   77   78   78   74    76 #>  [3667,]   72   73   72   78   77   77   78   78   74    76 #>  [3668,]   72   73   72   78   77   78   79   79   75    77 #>  [3669,]   71   72   71   77   77   78   79   79   75    77 #>  [3670,]   71   72   71   77   77   78   79   79   75    77 #>  [3671,]   72   73   72   78   77   78   79   79   75    77 #>  [3672,]   72   73   72   78   77   77   78   78   74    76 #>  [3673,]   72   73   72   78   77   78   79   79   75    77 #>  [3674,]   72   73   72   78   77   78   79   79   75    77 #>  [3675,]   72   73   72   78   77   78   79   79   75    77 #>  [3676,]   72   73   72   78   77   78   79   79   75    77 #>  [3677,]   71   72   71   77   77   78   79   79   75    77 #>  [3678,]   72   73   72   78   77   77   78   78   74    76 #>  [3679,]   71   72   71   77   77   78   79   79   75    77 #>  [3680,]   71   72   71   77   77   77   78   78   74    76 #>  [3681,]   72   73   72   78   77   78   79   79   75    77 #>  [3682,]   71   72   71   77   77   77   78   78   74    76 #>  [3683,]   71   72   71   77   77   78   79   79   75    77 #>  [3684,]   72   73   72   78   77   78   79   79   75    77 #>  [3685,]   71   72   71   77   77   77   78   78   74    76 #>  [3686,]   71   72   71   77   77   78   79   79   75    77 #>  [3687,]   72   73   72   78   77   78   79   79   75    77 #>  [3688,]   72   73   72   78   77   77   78   78   74    76 #>  [3689,]   72   73   72   78   77   77   78   78   74    76 #>  [3690,]   72   73   72   78   77   78   79   79   75    77 #>  [3691,]   72   73   72   78   77   77   78   78   74    76 #>  [3692,]   72   73   72   78   77   78   79   79   75    77 #>  [3693,]   71   72   71   77   77   78   79   79   75    77 #>  [3694,]   72   73   72   78   77   78   79   79   75    77 #>  [3695,]   71   72   71   77   77   77   78   78   74    76 #>  [3696,]   72   73   72   78   77   78   79   79   75    77 #>  [3697,]   72   73   72   78   77   78   79   79   75    77 #>  [3698,]   71   72   71   77   77   78   79   79   75    77 #>  [3699,]   72   73   72   78   77   78   79   79   75    77 #>  [3700,]   71   72   71   77   77   78   79   79   75    77 #>  [3701,]   74   75   74   80   79   80   81   81   76    78 #>  [3702,]   73   74   73   79   78   79   80   80   76    78 #>  [3703,]   73   74   73   79   78   79   80   80   76    78 #>  [3704,]   73   74   73   79   78   79   80   80   76    79 #>  [3705,]   74   75   74   80   79   80   81   81   76    78 #>  [3706,]   73   74   73   79   78   79   80   80   76    78 #>  [3707,]   73   74   73   79   78   79   80   80   76    78 #>  [3708,]   73   74   73   79   78   79   80   80   76    78 #>  [3709,]   73   74   73   79   78   79   80   80   76    78 #>  [3710,]   73   74   73   79   78   79   80   80   76    78 #>  [3711,]   73   74   73   79   78   79   80   80   76    79 #>  [3712,]   73   74   73   79   78   79   80   80   76    79 #>  [3713,]   73   74   73   79   78   79   80   80   76    78 #>  [3714,]   74   75   74   80   79   80   81   81   76    79 #>  [3715,]   74   75   74   80   79   80   81   81   76    79 #>  [3716,]   73   74   73   79   78   79   80   80   76    78 #>  [3717,]   73   74   73   79   78   79   80   80   76    78 #>  [3718,]   74   75   74   80   79   80   81   81   76    78 #>  [3719,]   73   74   73   79   78   79   80   80   76    79 #>  [3720,]   73   74   73   79   78   79   80   80   76    78 #>  [3721,]   73   74   73   79   78   79   80   80   76    79 #>  [3722,]   73   74   73   79   78   79   80   80   76    78 #>  [3723,]   73   74   73   79   78   79   80   80   76    78 #>  [3724,]   73   74   73   79   78   79   80   80   76    78 #>  [3725,]   73   74   73   79   78   79   80   80   76    78 #>  [3726,]   74   75   74   80   79   80   81   81   76    78 #>  [3727,]   74   75   74   80   79   80   81   81   76    79 #>  [3728,]   73   74   73   79   78   79   80   80   76    78 #>  [3729,]   73   74   73   79   78   79   80   80   76    78 #>  [3730,]   73   74   73   79   78   79   80   80   76    78 #>  [3731,]   74   75   74   80   79   80   81   81   76    78 #>  [3732,]   74   75   74   80   79   80   81   81   76    78 #>  [3733,]   73   74   73   79   78   79   80   80   76    78 #>  [3734,]   73   74   73   79   78   79   80   80   76    78 #>  [3735,]   73   74   73   79   78   79   80   80   76    78 #>  [3736,]   73   74   73   79   78   79   80   80   76    78 #>  [3737,]   73   74   73   79   78   79   80   80   76    78 #>  [3738,]   73   74   73   79   78   79   80   80   76    79 #>  [3739,]   73   74   73   79   78   79   80   80   76    78 #>  [3740,]   73   74   73   79   78   79   80   80   76    78 #>  [3741,]   73   74   73   79   78   79   80   80   76    79 #>  [3742,]   73   74   73   79   78   79   80   80   76    79 #>  [3743,]   74   75   74   80   79   80   81   81   76    78 #>  [3744,]   73   74   73   79   78   79   80   80   76    78 #>  [3745,]   73   74   73   79   78   79   80   80   76    78 #>  [3746,]   73   74   73   79   78   79   80   80   76    78 #>  [3747,]   73   74   73   79   78   79   80   80   76    78 #>  [3748,]   73   74   73   79   78   79   80   80   76    79 #>  [3749,]   73   74   73   79   78   79   80   80   76    78 #>  [3750,]   73   74   73   79   78   79   80   80   76    78 #>  [3751,]   73   74   73   79   78   79   80   80   76    78 #>  [3752,]   73   74   73   79   78   79   80   80   76    78 #>  [3753,]   73   74   73   79   78   79   80   80   76    78 #>  [3754,]   73   74   73   79   78   79   80   80   76    78 #>  [3755,]   73   74   73   79   78   79   80   80   76    78 #>  [3756,]   73   74   73   79   78   79   80   80   76    78 #>  [3757,]   73   74   73   79   78   79   80   80   76    78 #>  [3758,]   74   75   74   80   79   80   81   81   76    78 #>  [3759,]   74   75   74   80   79   80   81   81   76    78 #>  [3760,]   73   74   73   79   78   79   80   80   76    78 #>  [3761,]   74   75   74   80   79   80   81   81   76    79 #>  [3762,]   73   74   73   79   78   79   80   80   76    78 #>  [3763,]   73   74   73   79   78   79   80   80   76    78 #>  [3764,]   73   74   73   79   78   79   80   80   76    78 #>  [3765,]   73   74   73   79   78   79   80   80   76    78 #>  [3766,]   74   75   74   80   79   80   81   81   76    78 #>  [3767,]   73   74   73   79   78   79   80   80   76    78 #>  [3768,]   73   74   73   79   78   79   80   80   76    79 #>  [3769,]   73   74   73   79   78   79   80   80   76    79 #>  [3770,]   74   75   74   80   79   80   81   81   76    78 #>  [3771,]   74   75   74   80   79   80   81   81   76    78 #>  [3772,]   73   74   73   79   78   79   80   80   76    78 #>  [3773,]   73   74   73   79   78   79   80   80   76    78 #>  [3774,]   73   74   73   79   78   79   80   80   76    79 #>  [3775,]   74   75   74   80   79   80   81   81   76    79 #>  [3776,]   73   74   73   79   78   79   80   80   76    78 #>  [3777,]   73   74   73   79   78   79   80   80   76    78 #>  [3778,]   73   74   73   79   78   79   80   80   76    78 #>  [3779,]   74   75   74   80   79   80   81   81   76    78 #>  [3780,]   73   74   73   79   78   79   80   80   76    78 #>  [3781,]   73   74   73   79   78   79   80   80   76    78 #>  [3782,]   73   74   73   79   78   79   80   80   76    79 #>  [3783,]   73   74   73   79   78   79   80   80   76    78 #>  [3784,]   73   74   73   79   78   79   80   80   76    78 #>  [3785,]   73   74   73   79   78   79   80   80   76    78 #>  [3786,]   73   74   73   79   78   79   80   80   76    78 #>  [3787,]   74   75   74   80   79   80   81   81   76    78 #>  [3788,]   73   74   73   79   78   79   80   80   76    78 #>  [3789,]   73   74   73   79   78   79   80   80   76    78 #>  [3790,]   73   74   73   79   78   79   80   80   76    78 #>  [3791,]   74   75   74   80   79   80   81   81   76    78 #>  [3792,]   73   74   73   79   78   79   80   80   76    79 #>  [3793,]   73   74   73   79   78   79   80   80   76    79 #>  [3794,]   73   74   73   79   78   79   80   80   76    78 #>  [3795,]   74   75   74   80   79   80   81   81   76    78 #>  [3796,]   73   74   73   79   78   79   80   80   76    79 #>  [3797,]   73   74   73   79   78   79   80   80   76    79 #>  [3798,]   73   74   73   79   78   79   80   80   76    78 #>  [3799,]   73   74   73   79   78   79   80   80   76    78 #>  [3800,]   74   75   74   80   79   80   81   81   76    78 #>  [3801,]   75   76   75   82   81   82   83   83   78    81 #>  [3802,]   75   76   75   82   81   82   83   83   78    81 #>  [3803,]   76   77   75   81   80   81   82   82   77    80 #>  [3804,]   75   76   75   82   81   82   83   84   79    81 #>  [3805,]   75   76   75   82   81   82   83   83   78    81 #>  [3806,]   76   77   75   81   80   81   82   82   77    80 #>  [3807,]   75   76   75   82   81   82   83   83   78    81 #>  [3808,]   75   76   75   82   81   82   83   83   78    81 #>  [3809,]   75   76   75   82   81   82   83   83   78    81 #>  [3810,]   75   76   75   82   81   82   83   84   79    81 #>  [3811,]   75   76   75   82   81   82   83   83   78    81 #>  [3812,]   76   77   75   82   81   82   83   83   78    81 #>  [3813,]   75   76   75   82   81   82   83   83   78    81 #>  [3814,]   75   76   75   82   81   82   83   83   78    81 #>  [3815,]   75   76   75   82   81   82   83   83   78    81 #>  [3816,]   75   76   75   82   81   82   83   83   78    81 #>  [3817,]   75   76   75   82   81   82   83   83   78    81 #>  [3818,]   75   76   75   82   81   82   83   84   79    81 #>  [3819,]   76   77   75   81   80   81   82   82   77    80 #>  [3820,]   76   77   75   82   81   82   83   83   78    81 #>  [3821,]   75   76   75   82   81   82   83   83   78    81 #>  [3822,]   75   76   75   82   81   82   83   83   78    81 #>  [3823,]   75   76   75   82   81   82   83   83   78    81 #>  [3824,]   75   76   75   82   81   82   83   83   78    81 #>  [3825,]   76   77   75   82   81   82   83   84   79    81 #>  [3826,]   75   76   75   82   81   82   83   83   78    81 #>  [3827,]   75   76   75   82   81   82   83   83   78    81 #>  [3828,]   76   77   75   82   81   82   83   83   78    81 #>  [3829,]   75   76   75   82   81   82   83   83   78    81 #>  [3830,]   75   76   75   82   81   82   83   83   78    81 #>  [3831,]   75   76   75   82   81   82   83   83   78    81 #>  [3832,]   75   76   75   82   81   82   83   83   78    81 #>  [3833,]   76   77   75   82   81   82   83   83   78    81 #>  [3834,]   76   77   75   81   80   81   82   82   77    80 #>  [3835,]   75   76   75   82   81   82   83   83   78    81 #>  [3836,]   75   76   75   82   81   82   83   83   78    81 #>  [3837,]   75   76   75   81   80   81   82   82   77    80 #>  [3838,]   75   76   75   81   80   81   82   82   77    80 #>  [3839,]   75   76   75   82   81   82   83   84   79    81 #>  [3840,]   75   76   75   82   81   82   83   83   78    81 #>  [3841,]   75   76   75   82   81   82   83   83   78    81 #>  [3842,]   75   76   75   82   81   82   83   83   78    81 #>  [3843,]   75   76   75   82   81   82   83   84   79    81 #>  [3844,]   75   76   75   82   81   82   83   83   78    81 #>  [3845,]   75   76   75   81   80   81   82   82   77    80 #>  [3846,]   75   76   75   82   81   82   83   83   78    81 #>  [3847,]   75   76   75   82   81   82   83   83   78    81 #>  [3848,]   75   76   75   82   81   82   83   83   78    81 #>  [3849,]   75   76   75   81   80   81   82   82   77    80 #>  [3850,]   75   76   75   82   81   82   83   83   78    81 #>  [3851,]   75   76   75   82   81   82   83   83   78    81 #>  [3852,]   75   76   75   81   80   81   82   82   77    80 #>  [3853,]   75   76   75   82   81   82   83   84   79    81 #>  [3854,]   75   76   75   82   81   82   83   83   78    81 #>  [3855,]   75   76   75   82   81   82   83   83   78    81 #>  [3856,]   75   76   75   82   81   82   83   83   78    81 #>  [3857,]   75   76   75   82   81   82   83   83   78    81 #>  [3858,]   75   76   75   82   81   82   83   83   78    81 #>  [3859,]   75   76   75   82   81   82   83   83   78    81 #>  [3860,]   76   77   75   82   81   82   83   83   78    81 #>  [3861,]   75   76   75   82   81   82   83   83   78    81 #>  [3862,]   75   76   75   82   81   82   83   83   78    81 #>  [3863,]   75   76   75   82   81   82   83   83   78    81 #>  [3864,]   75   76   75   82   81   82   83   83   78    81 #>  [3865,]   76   77   75   82   81   82   83   83   78    81 #>  [3866,]   75   76   75   82   81   82   83   83   78    81 #>  [3867,]   75   76   75   82   81   82   83   83   78    81 #>  [3868,]   75   76   75   81   80   81   82   82   77    80 #>  [3869,]   75   76   75   82   81   82   83   83   78    81 #>  [3870,]   76   77   75   82   81   82   83   83   78    81 #>  [3871,]   75   76   75   82   81   82   83   83   78    81 #>  [3872,]   75   76   75   81   80   81   82   82   77    80 #>  [3873,]   76   77   75   82   81   82   83   84   79    81 #>  [3874,]   75   76   75   82   81   82   83   84   79    81 #>  [3875,]   75   76   75   82   81   82   83   84   79    81 #>  [3876,]   75   76   75   82   81   82   83   84   79    81 #>  [3877,]   75   76   75   82   81   82   83   84   79    81 #>  [3878,]   75   76   75   82   81   82   83   83   78    81 #>  [3879,]   75   76   75   82   81   82   83   83   78    81 #>  [3880,]   75   76   75   82   81   82   83   83   78    81 #>  [3881,]   75   76   75   82   81   82   83   83   78    81 #>  [3882,]   75   76   75   82   81   82   83   83   78    81 #>  [3883,]   75   76   75   82   81   82   83   83   78    81 #>  [3884,]   75   76   75   82   81   82   83   83   78    81 #>  [3885,]   75   76   75   82   81   82   83   83   78    81 #>  [3886,]   75   76   75   82   81   82   83   83   78    81 #>  [3887,]   75   76   75   82   81   82   83   83   78    81 #>  [3888,]   75   76   75   82   81   82   83   83   78    81 #>  [3889,]   75   76   75   82   81   82   83   83   78    81 #>  [3890,]   75   76   75   82   81   82   83   83   78    81 #>  [3891,]   75   76   75   82   81   82   83   83   78    81 #>  [3892,]   75   76   75   82   81   82   83   83   78    81 #>  [3893,]   76   77   75   82   81   82   83   83   78    81 #>  [3894,]   75   76   75   82   81   82   83   83   78    81 #>  [3895,]   75   76   75   82   81   82   83   84   79    81 #>  [3896,]   75   76   75   81   80   81   82   82   77    80 #>  [3897,]   76   77   75   82   81   82   83   83   78    81 #>  [3898,]   76   77   75   82   81   82   83   83   78    81 #>  [3899,]   75   76   75   82   81   82   83   83   78    81 #>  [3900,]   75   76   75   82   81   82   83   83   78    81 #>  [3901,]   77   78   76   83   82   83   84   85   80    84 #>  [3902,]   78   79   77   84   83   84   85   86   81    82 #>  [3903,]   78   79   77   84   83   84   85   86   81    82 #>  [3904,]   77   78   76   83   82   83   84   85   80    84 #>  [3905,]   77   78   76   83   82   83   84   85   80    84 #>  [3906,]   78   79   77   84   83   84   85   86   81    82 #>  [3907,]   78   79   77   84   83   84   85   86   81    82 #>  [3908,]   77   78   76   83   82   83   84   85   80    83 #>  [3909,]   77   78   76   83   82   83   84   85   80    84 #>  [3910,]   78   79   77   84   83   84   85   86   81    82 #>  [3911,]   77   78   76   83   82   83   84   85   80    84 #>  [3912,]   78   79   77   84   83   84   85   86   81    82 #>  [3913,]   77   78   76   83   82   83   84   85   80    83 #>  [3914,]   77   78   76   83   82   83   84   85   80    84 #>  [3915,]   77   78   76   83   82   83   84   85   80    84 #>  [3916,]   77   78   76   83   82   83   84   85   80    83 #>  [3917,]   77   78   76   83   82   83   84   85   80    83 #>  [3918,]   78   79   77   84   83   84   85   86   81    82 #>  [3919,]   78   79   77   85   84   85   85   86   81    82 #>  [3920,]   78   79   77   85   84   85   85   86   81    82 #>  [3921,]   77   78   76   83   82   83   84   85   80    84 #>  [3922,]   77   78   76   83   82   83   84   85   80    83 #>  [3923,]   78   79   77   84   83   84   85   86   81    82 #>  [3924,]   77   78   76   83   82   83   84   85   80    83 #>  [3925,]   78   79   77   84   83   84   85   86   81    82 #>  [3926,]   77   78   76   83   82   83   84   85   80    84 #>  [3927,]   77   78   76   83   82   83   84   85   80    84 #>  [3928,]   78   79   77   84   83   84   85   86   81    82 #>  [3929,]   78   79   77   85   84   85   85   86   81    82 #>  [3930,]   77   78   76   83   82   83   84   85   80    84 #>  [3931,]   78   79   77   84   83   84   85   86   81    82 #>  [3932,]   78   79   77   84   83   84   85   86   81    82 #>  [3933,]   78   79   77   84   83   84   85   86   81    82 #>  [3934,]   78   79   77   84   83   84   85   86   81    82 #>  [3935,]   77   78   76   83   82   83   84   85   80    84 #>  [3936,]   77   78   76   83   82   83   84   85   80    84 #>  [3937,]   77   78   76   83   82   83   84   85   80    84 #>  [3938,]   77   78   76   83   82   83   84   85   80    84 #>  [3939,]   78   79   77   84   83   84   85   86   81    82 #>  [3940,]   78   79   77   84   83   84   85   86   81    82 #>  [3941,]   77   78   76   83   82   83   84   85   80    84 #>  [3942,]   78   79   77   84   83   84   85   86   81    82 #>  [3943,]   77   78   76   83   82   83   84   85   80    83 #>  [3944,]   77   78   76   83   82   83   84   85   80    83 #>  [3945,]   77   78   76   83   82   83   84   85   80    83 #>  [3946,]   77   78   76   83   82   83   84   85   80    83 #>  [3947,]   78   79   77   84   83   84   85   86   81    82 #>  [3948,]   78   79   77   84   83   84   85   86   81    82 #>  [3949,]   77   78   76   83   82   83   84   85   80    83 #>  [3950,]   78   79   77   84   83   84   85   86   81    82 #>  [3951,]   77   78   76   83   82   83   84   85   80    83 #>  [3952,]   77   78   76   83   82   83   84   85   80    84 #>  [3953,]   78   79   77   84   83   84   85   86   81    82 #>  [3954,]   77   78   76   83   82   83   84   85   80    83 #>  [3955,]   77   78   76   83   82   83   84   85   80    83 #>  [3956,]   78   79   77   84   83   84   85   86   81    82 #>  [3957,]   78   79   77   84   83   84   85   86   81    82 #>  [3958,]   77   78   76   83   82   83   84   85   80    84 #>  [3959,]   77   78   76   83   82   83   84   85   80    83 #>  [3960,]   78   79   77   84   83   84   85   86   81    82 #>  [3961,]   78   79   77   84   83   84   85   86   81    82 #>  [3962,]   77   78   76   83   82   83   84   85   80    84 #>  [3963,]   78   79   77   84   83   84   85   86   81    82 #>  [3964,]   78   79   77   85   84   85   85   86   81    82 #>  [3965,]   78   79   77   84   83   84   85   86   81    82 #>  [3966,]   77   78   76   83   82   83   84   85   80    83 #>  [3967,]   77   78   76   83   82   83   84   85   80    84 #>  [3968,]   77   78   76   83   82   83   84   85   80    84 #>  [3969,]   77   78   76   83   82   83   84   85   80    84 #>  [3970,]   78   79   77   84   83   84   85   86   81    82 #>  [3971,]   78   79   77   84   83   84   85   86   81    82 #>  [3972,]   77   78   76   83   82   83   84   85   80    83 #>  [3973,]   78   79   77   84   83   84   85   86   81    82 #>  [3974,]   77   78   76   83   82   83   84   85   80    84 #>  [3975,]   78   79   77   84   83   84   85   86   81    82 #>  [3976,]   77   78   76   83   82   83   84   85   80    83 #>  [3977,]   78   79   77   85   84   85   85   86   81    82 #>  [3978,]   78   79   77   84   83   84   85   86   81    82 #>  [3979,]   77   78   76   83   82   83   84   85   80    83 #>  [3980,]   77   78   76   83   82   83   84   85   80    84 #>  [3981,]   77   78   76   83   82   83   84   85   80    84 #>  [3982,]   77   78   76   83   82   83   84   85   80    84 #>  [3983,]   77   78   76   83   82   83   84   85   80    83 #>  [3984,]   78   79   77   84   83   84   85   86   81    82 #>  [3985,]   77   78   76   83   82   83   84   85   80    84 #>  [3986,]   78   79   77   84   83   84   85   86   81    82 #>  [3987,]   77   78   76   83   82   83   84   85   80    84 #>  [3988,]   77   78   76   83   82   83   84   85   80    84 #>  [3989,]   77   78   76   83   82   83   84   85   80    83 #>  [3990,]   77   78   76   83   82   83   84   85   80    83 #>  [3991,]   77   78   76   83   82   83   84   85   80    84 #>  [3992,]   77   78   76   83   82   83   84   85   80    84 #>  [3993,]   78   79   77   84   83   84   85   86   81    82 #>  [3994,]   78   79   77   84   83   84   85   86   81    82 #>  [3995,]   77   78   76   83   82   83   84   85   80    84 #>  [3996,]   77   78   76   83   82   83   84   85   80    84 #>  [3997,]   78   79   77   85   84   85   85   86   81    82 #>  [3998,]   78   79   77   84   83   84   85   86   81    82 #>  [3999,]   77   78   76   83   82   83   84   85   80    84 #>  [4000,]   78   79   77   85   84   85   85   86   81    82 #>  [4001,]   79   81   79   87   86   87   87   88   83    86 #>  [4002,]   79   81   79   87   86   87   87   88   83    86 #>  [4003,]   79   80   78   86   85   86   86   87   82    85 #>  [4004,]   79   81   79   87   86   87   87   88   83    86 #>  [4005,]   79   81   79   87   86   87   87   88   83    86 #>  [4006,]   79   80   78   86   85   86   86   87   82    85 #>  [4007,]   79   80   78   86   85   86   86   87   82    85 #>  [4008,]   79   80   78   86   85   86   86   87   82    85 #>  [4009,]   79   81   79   87   86   87   87   88   83    86 #>  [4010,]   79   81   79   87   86   87   87   88   83    86 #>  [4011,]   79   81   79   87   86   87   87   88   83    86 #>  [4012,]   79   81   79   87   86   87   87   88   83    86 #>  [4013,]   79   81   79   87   86   87   87   88   83    86 #>  [4014,]   79   81   79   87   86   87   87   88   83    86 #>  [4015,]   79   81   79   87   86   87   87   88   83    86 #>  [4016,]   79   81   79   87   86   87   87   88   83    86 #>  [4017,]   79   81   79   87   86   87   87   88   83    86 #>  [4018,]   79   81   79   87   86   87   87   88   83    86 #>  [4019,]   79   81   79   87   86   87   87   88   83    86 #>  [4020,]   79   80   78   86   85   86   86   87   82    85 #>  [4021,]   79   80   78   86   85   86   86   87   82    85 #>  [4022,]   79   81   79   87   86   87   87   88   83    86 #>  [4023,]   79   80   78   86   85   86   86   87   82    85 #>  [4024,]   79   81   79   87   86   87   87   88   83    86 #>  [4025,]   79   80   78   86   85   86   86   87   82    85 #>  [4026,]   79   81   79   87   86   87   87   88   83    86 #>  [4027,]   79   81   79   87   86   87   87   88   83    86 #>  [4028,]   79   81   79   87   86   87   87   88   83    86 #>  [4029,]   79   80   78   86   85   86   86   87   82    85 #>  [4030,]   79   81   79   87   86   87   87   88   83    86 #>  [4031,]   79   81   79   87   86   87   87   88   83    86 #>  [4032,]   79   81   79   87   86   87   87   88   83    86 #>  [4033,]   79   81   79   87   86   87   87   88   83    86 #>  [4034,]   79   80   78   86   85   86   86   87   82    85 #>  [4035,]   79   80   78   86   85   86   86   87   82    85 #>  [4036,]   79   80   78   86   85   86   86   87   82    85 #>  [4037,]   79   80   78   86   85   86   86   87   82    85 #>  [4038,]   79   81   79   87   86   87   87   88   83    86 #>  [4039,]   79   81   79   87   86   87   87   88   83    86 #>  [4040,]   79   81   79   87   86   87   87   88   83    86 #>  [4041,]   79   80   78   86   85   86   86   87   82    85 #>  [4042,]   79   80   78   86   85   86   86   87   82    85 #>  [4043,]   79   81   79   87   86   87   87   88   83    86 #>  [4044,]   79   80   78   86   85   86   86   87   82    85 #>  [4045,]   79   80   78   86   85   86   86   87   82    85 #>  [4046,]   79   81   79   87   86   87   87   88   83    86 #>  [4047,]   79   81   79   87   86   87   87   88   83    86 #>  [4048,]   79   81   79   87   86   87   87   88   83    86 #>  [4049,]   79   81   79   87   86   87   87   88   83    86 #>  [4050,]   79   80   78   86   85   86   86   87   82    85 #>  [4051,]   79   81   79   87   86   87   87   88   83    86 #>  [4052,]   79   81   79   87   86   87   87   88   83    86 #>  [4053,]   79   80   78   86   85   86   86   87   82    85 #>  [4054,]   79   80   78   86   85   86   86   87   82    85 #>  [4055,]   79   80   78   86   85   86   86   87   82    85 #>  [4056,]   79   80   78   86   85   86   86   87   82    85 #>  [4057,]   79   80   78   86   85   86   86   87   82    85 #>  [4058,]   79   81   79   87   86   87   87   88   83    86 #>  [4059,]   79   81   79   87   86   87   87   88   83    86 #>  [4060,]   79   80   78   86   85   86   86   87   82    85 #>  [4061,]   79   81   79   87   86   87   87   88   83    86 #>  [4062,]   79   81   79   87   86   87   87   88   83    86 #>  [4063,]   79   81   79   87   86   87   87   88   83    86 #>  [4064,]   79   80   78   86   85   86   86   87   82    85 #>  [4065,]   79   80   78   86   85   86   86   87   82    85 #>  [4066,]   79   81   79   87   86   87   87   88   83    86 #>  [4067,]   79   80   78   86   85   86   86   87   82    85 #>  [4068,]   79   81   79   87   86   87   87   88   83    86 #>  [4069,]   79   81   79   87   86   87   87   88   83    86 #>  [4070,]   79   81   79   87   86   87   87   88   83    86 #>  [4071,]   79   81   79   87   86   87   87   88   83    86 #>  [4072,]   79   81   79   87   86   87   87   88   83    86 #>  [4073,]   79   80   78   86   85   86   86   87   82    85 #>  [4074,]   79   80   78   86   85   86   86   87   82    85 #>  [4075,]   79   81   79   87   86   87   87   88   83    86 #>  [4076,]   79   80   78   86   85   86   86   87   82    85 #>  [4077,]   79   81   79   87   86   87   87   88   83    86 #>  [4078,]   79   81   79   87   86   87   87   88   83    86 #>  [4079,]   79   81   79   87   86   87   87   88   83    86 #>  [4080,]   79   80   78   86   85   86   86   87   82    85 #>  [4081,]   79   80   78   86   85   86   86   87   82    85 #>  [4082,]   79   80   78   86   85   86   86   87   82    85 #>  [4083,]   79   81   79   87   86   87   87   88   83    86 #>  [4084,]   79   80   78   86   85   86   86   87   82    85 #>  [4085,]   79   80   78   86   85   86   86   87   82    85 #>  [4086,]   79   80   78   86   85   86   86   87   82    85 #>  [4087,]   79   81   79   87   86   87   87   88   83    86 #>  [4088,]   79   80   78   86   85   86   86   87   82    85 #>  [4089,]   79   80   78   86   85   86   86   87   82    85 #>  [4090,]   79   81   79   87   86   87   87   88   83    86 #>  [4091,]   79   81   79   87   86   87   87   88   83    86 #>  [4092,]   79   81   79   87   86   87   87   88   83    86 #>  [4093,]   79   81   79   87   86   87   87   88   83    86 #>  [4094,]   79   80   78   86   85   86   86   87   82    85 #>  [4095,]   79   81   79   87   86   87   87   88   83    86 #>  [4096,]   79   81   79   87   86   87   87   88   83    86 #>  [4097,]   79   80   78   86   85   86   86   87   82    85 #>  [4098,]   79   80   78   86   85   86   86   87   82    85 #>  [4099,]   79   80   78   86   85   86   86   87   82    85 #>  [4100,]   79   81   79   87   86   87   87   88   83    86 #>  [4101,]   81   83   81   89   88   89   89   90   85    88 #>  [4102,]   81   83   81   89   88   89   89   90   85    88 #>  [4103,]   81   83   81   89   88   89   89   90   85    88 #>  [4104,]   81   83   81   89   88   89   89   90   85    88 #>  [4105,]   81   83   81   89   88   89   89   90   85    88 #>  [4106,]   81   83   81   89   88   89   89   90   85    88 #>  [4107,]   81   83   81   89   88   89   89   90   85    88 #>  [4108,]   81   83   81   89   88   89   89   90   85    88 #>  [4109,]   81   83   81   89   88   89   89   90   85    88 #>  [4110,]   81   83   81   89   88   89   89   90   85    88 #>  [4111,]   81   83   81   89   88   89   89   90   85    88 #>  [4112,]   81   83   81   89   88   89   89   90   85    88 #>  [4113,]   81   83   81   89   88   89   89   90   85    88 #>  [4114,]   81   83   81   89   88   89   89   90   85    88 #>  [4115,]   81   83   81   89   88   89   89   90   85    88 #>  [4116,]   81   83   81   89   88   89   89   90   85    88 #>  [4117,]   81   83   81   89   88   89   89   90   85    88 #>  [4118,]   81   83   81   89   88   89   89   90   85    88 #>  [4119,]   81   83   81   89   88   89   89   90   85    88 #>  [4120,]   81   83   81   89   88   89   89   90   85    88 #>  [4121,]   81   83   81   89   88   89   89   90   85    88 #>  [4122,]   81   83   81   89   88   89   89   90   85    88 #>  [4123,]   81   83   81   89   88   89   89   90   85    88 #>  [4124,]   81   83   81   89   88   89   89   90   85    88 #>  [4125,]   80   82   80   88   87   88   88   89   84    87 #>  [4126,]   81   83   81   89   88   89   89   90   85    88 #>  [4127,]   81   83   81   89   88   89   89   90   85    88 #>  [4128,]   81   83   81   89   88   89   89   90   85    88 #>  [4129,]   81   83   81   89   88   89   89   90   85    88 #>  [4130,]   81   83   81   89   88   89   89   90   85    88 #>  [4131,]   81   83   81   89   88   89   89   90   85    88 #>  [4132,]   81   83   81   89   88   89   89   90   85    88 #>  [4133,]   81   83   81   89   88   89   89   90   85    88 #>  [4134,]   81   83   81   89   88   89   89   90   85    88 #>  [4135,]   81   83   81   89   88   89   89   90   85    88 #>  [4136,]   81   83   81   89   88   89   89   90   85    88 #>  [4137,]   81   83   81   89   88   89   89   90   85    88 #>  [4138,]   81   83   81   89   88   89   89   90   85    88 #>  [4139,]   81   83   81   89   88   89   89   90   85    88 #>  [4140,]   81   83   81   89   88   89   89   90   85    88 #>  [4141,]   81   83   81   89   88   89   89   90   85    88 #>  [4142,]   81   83   81   89   88   89   89   90   85    88 #>  [4143,]   81   83   81   89   88   89   89   90   85    88 #>  [4144,]   81   83   81   89   88   89   89   90   85    88 #>  [4145,]   81   83   81   89   88   89   89   90   85    88 #>  [4146,]   81   83   81   89   88   89   89   90   85    88 #>  [4147,]   81   83   81   89   88   89   89   90   85    88 #>  [4148,]   81   83   81   89   88   89   89   90   85    88 #>  [4149,]   81   83   81   89   88   89   89   90   85    88 #>  [4150,]   81   83   81   89   88   89   89   90   85    88 #>  [4151,]   81   83   81   89   88   89   89   90   85    88 #>  [4152,]   81   83   81   89   88   89   89   90   85    88 #>  [4153,]   81   83   81   89   88   89   89   90   85    88 #>  [4154,]   81   83   81   89   88   89   89   90   85    88 #>  [4155,]   81   83   81   89   88   89   89   90   85    88 #>  [4156,]   80   82   80   88   87   88   88   89   84    87 #>  [4157,]   81   83   81   89   88   89   89   90   85    88 #>  [4158,]   81   83   81   89   88   89   89   90   85    88 #>  [4159,]   81   83   81   89   88   89   89   90   85    88 #>  [4160,]   81   83   81   89   88   89   89   90   85    88 #>  [4161,]   81   83   81   89   88   89   89   90   85    88 #>  [4162,]   81   83   81   89   88   89   89   90   85    88 #>  [4163,]   81   83   81   89   88   89   89   90   85    88 #>  [4164,]   81   83   81   89   88   89   89   90   85    88 #>  [4165,]   80   82   80   88   87   88   88   89   84    87 #>  [4166,]   81   83   81   89   88   89   89   90   85    88 #>  [4167,]   81   83   81   89   88   89   89   90   85    88 #>  [4168,]   81   83   81   89   88   89   89   90   85    88 #>  [4169,]   81   83   81   89   88   89   89   90   85    88 #>  [4170,]   81   83   81   89   88   89   89   90   85    88 #>  [4171,]   81   83   81   89   88   89   89   90   85    88 #>  [4172,]   81   83   81   89   88   89   89   90   85    88 #>  [4173,]   81   83   81   89   88   89   89   90   85    88 #>  [4174,]   81   83   81   89   88   89   89   90   85    88 #>  [4175,]   81   83   81   89   88   89   89   90   85    88 #>  [4176,]   81   83   81   89   88   89   89   90   85    88 #>  [4177,]   81   83   81   89   88   89   89   90   85    88 #>  [4178,]   81   83   81   89   88   89   89   90   85    88 #>  [4179,]   81   83   81   89   88   89   89   90   85    88 #>  [4180,]   80   82   80   88   87   88   88   89   84    87 #>  [4181,]   81   83   81   89   88   89   89   90   85    88 #>  [4182,]   81   83   81   89   88   89   89   90   85    88 #>  [4183,]   81   83   81   89   88   89   89   90   85    88 #>  [4184,]   81   83   81   89   88   89   89   90   85    88 #>  [4185,]   80   82   80   88   87   88   88   89   84    87 #>  [4186,]   81   83   81   89   88   89   89   90   85    88 #>  [4187,]   81   83   81   89   88   89   89   90   85    88 #>  [4188,]   81   83   81   89   88   89   89   90   85    88 #>  [4189,]   80   82   80   88   87   88   88   89   84    87 #>  [4190,]   81   83   81   89   88   89   89   90   85    88 #>  [4191,]   81   83   81   89   88   89   89   90   85    88 #>  [4192,]   81   83   81   89   88   89   89   90   85    88 #>  [4193,]   81   83   81   89   88   89   89   90   85    88 #>  [4194,]   81   83   81   89   88   89   89   90   85    88 #>  [4195,]   81   83   81   89   88   89   89   90   85    88 #>  [4196,]   81   83   81   89   88   89   89   90   85    88 #>  [4197,]   81   83   81   89   88   89   89   90   85    88 #>  [4198,]   81   83   81   89   88   89   89   90   85    88 #>  [4199,]   81   83   81   89   88   89   89   90   85    88 #>  [4200,]   81   83   81   89   88   89   89   90   85    88 #>  [4201,]   83   85   83   91   90   91   91   92   87    90 #>  [4202,]   82   84   82   90   89   90   90   91   86    89 #>  [4203,]   82   84   82   90   89   90   90   91   86    89 #>  [4204,]   83   85   83   91   90   91   91   92   87    90 #>  [4205,]   82   84   82   90   89   90   90   91   86    89 #>  [4206,]   82   84   82   90   89   90   90   91   86    89 #>  [4207,]   83   85   83   91   90   91   91   92   87    90 #>  [4208,]   82   84   82   90   89   90   90   91   86    89 #>  [4209,]   83   85   83   91   90   91   91   92   87    90 #>  [4210,]   83   85   83   91   90   91   91   92   87    90 #>  [4211,]   82   84   82   90   89   90   90   91   86    89 #>  [4212,]   82   84   82   90   89   90   90   91   86    89 #>  [4213,]   83   85   83   91   90   91   91   92   87    90 #>  [4214,]   83   85   83   91   90   91   91   92   87    90 #>  [4215,]   82   84   82   90   89   90   90   91   86    89 #>  [4216,]   83   85   83   91   90   91   91   92   87    90 #>  [4217,]   82   84   82   90   89   90   90   91   86    89 #>  [4218,]   82   84   82   90   89   90   90   91   86    89 #>  [4219,]   82   84   82   90   89   90   90   91   86    89 #>  [4220,]   83   85   83   91   90   91   91   92   87    90 #>  [4221,]   82   84   82   90   89   90   90   91   86    89 #>  [4222,]   83   85   83   91   90   91   91   92   87    90 #>  [4223,]   82   84   82   90   89   90   90   91   86    89 #>  [4224,]   83   85   83   91   90   91   91   92   87    90 #>  [4225,]   83   85   83   91   90   91   91   92   87    90 #>  [4226,]   82   84   82   90   89   90   90   91   86    89 #>  [4227,]   82   84   82   90   89   90   90   91   86    89 #>  [4228,]   83   85   83   91   90   91   91   92   87    90 #>  [4229,]   82   84   82   90   89   90   90   91   86    89 #>  [4230,]   82   84   82   90   89   90   90   91   86    89 #>  [4231,]   82   84   82   90   89   90   90   91   86    89 #>  [4232,]   82   84   82   90   89   90   90   91   86    89 #>  [4233,]   82   84   82   90   89   90   90   91   86    89 #>  [4234,]   82   84   82   90   89   90   90   91   86    89 #>  [4235,]   82   84   82   90   89   90   90   91   86    89 #>  [4236,]   83   85   83   91   90   91   91   92   87    90 #>  [4237,]   82   84   82   90   89   90   90   91   86    89 #>  [4238,]   82   84   82   90   89   90   90   91   86    89 #>  [4239,]   83   85   83   91   90   91   91   92   87    90 #>  [4240,]   82   84   82   90   89   90   90   91   86    89 #>  [4241,]   82   84   82   90   89   90   90   91   86    89 #>  [4242,]   82   84   82   90   89   90   90   91   86    89 #>  [4243,]   82   84   82   90   89   90   90   91   86    89 #>  [4244,]   82   84   82   90   89   90   90   91   86    89 #>  [4245,]   83   85   83   91   90   91   91   92   87    90 #>  [4246,]   82   84   82   90   89   90   90   91   86    89 #>  [4247,]   82   84   82   90   89   90   90   91   86    89 #>  [4248,]   82   84   82   90   89   90   90   91   86    89 #>  [4249,]   83   85   83   91   90   91   91   92   87    90 #>  [4250,]   83   85   83   91   90   91   91   92   87    90 #>  [4251,]   82   84   82   90   89   90   90   91   86    89 #>  [4252,]   83   85   83   91   90   91   91   92   87    90 #>  [4253,]   83   85   83   91   90   91   91   92   87    90 #>  [4254,]   83   85   83   91   90   91   91   92   87    90 #>  [4255,]   83   85   83   91   90   91   91   92   87    90 #>  [4256,]   82   84   82   90   89   90   90   91   86    89 #>  [4257,]   83   85   83   91   90   91   91   92   87    90 #>  [4258,]   83   85   83   91   90   91   91   92   87    90 #>  [4259,]   83   85   83   91   90   91   91   92   87    90 #>  [4260,]   82   84   82   90   89   90   90   91   86    89 #>  [4261,]   82   84   82   90   89   90   90   91   86    89 #>  [4262,]   82   84   82   90   89   90   90   91   86    89 #>  [4263,]   82   84   82   90   89   90   90   91   86    89 #>  [4264,]   82   84   82   90   89   90   90   91   86    89 #>  [4265,]   82   84   82   90   89   90   90   91   86    89 #>  [4266,]   82   84   82   90   89   90   90   91   86    89 #>  [4267,]   83   85   83   91   90   91   91   92   87    90 #>  [4268,]   82   84   82   90   89   90   90   91   86    89 #>  [4269,]   82   84   82   90   89   90   90   91   86    89 #>  [4270,]   82   84   82   90   89   90   90   91   86    89 #>  [4271,]   82   84   82   90   89   90   90   91   86    89 #>  [4272,]   83   85   83   91   90   91   91   92   87    90 #>  [4273,]   83   85   83   91   90   91   91   92   87    90 #>  [4274,]   82   84   82   90   89   90   90   91   86    89 #>  [4275,]   82   84   82   90   89   90   90   91   86    89 #>  [4276,]   83   85   83   91   90   91   91   92   87    90 #>  [4277,]   82   84   82   90   89   90   90   91   86    89 #>  [4278,]   82   84   82   90   89   90   90   91   86    89 #>  [4279,]   82   84   82   90   89   90   90   91   86    89 #>  [4280,]   82   84   82   90   89   90   90   91   86    89 #>  [4281,]   82   84   82   90   89   90   90   91   86    89 #>  [4282,]   82   84   82   90   89   90   90   91   86    89 #>  [4283,]   82   84   82   90   89   90   90   91   86    89 #>  [4284,]   82   84   82   90   89   90   90   91   86    89 #>  [4285,]   83   85   83   91   90   91   91   92   87    90 #>  [4286,]   83   85   83   91   90   91   91   92   87    90 #>  [4287,]   83   85   83   91   90   91   91   92   87    90 #>  [4288,]   83   85   83   91   90   91   91   92   87    90 #>  [4289,]   82   84   82   90   89   90   90   91   86    89 #>  [4290,]   83   85   83   91   90   91   91   92   87    90 #>  [4291,]   83   85   83   91   90   91   91   92   87    90 #>  [4292,]   82   84   82   90   89   90   90   91   86    89 #>  [4293,]   82   84   82   90   89   90   90   91   86    89 #>  [4294,]   82   84   82   90   89   90   90   91   86    89 #>  [4295,]   82   84   82   90   89   90   90   91   86    89 #>  [4296,]   82   84   82   90   89   90   90   91   86    89 #>  [4297,]   82   84   82   90   89   90   90   91   86    89 #>  [4298,]   82   84   82   90   89   90   90   91   86    89 #>  [4299,]   82   84   82   90   89   90   90   91   86    89 #>  [4300,]   82   84   82   90   89   90   90   91   86    89 #>  [4301,]   85   87   85   93   92   93   93   94   89    92 #>  [4302,]   85   87   85   93   92   93   93   94   89    92 #>  [4303,]   84   86   84   92   91   92   92   93   88    91 #>  [4304,]   84   86   84   92   91   92   92   93   88    91 #>  [4305,]   84   86   84   92   91   92   92   93   88    91 #>  [4306,]   85   87   85   93   92   93   93   94   89    92 #>  [4307,]   85   87   85   93   92   93   93   94   89    92 #>  [4308,]   84   86   84   92   91   92   92   93   88    91 #>  [4309,]   84   86   84   92   91   92   92   93   88    91 #>  [4310,]   84   86   84   92   91   92   92   93   88    91 #>  [4311,]   85   87   85   93   92   93   93   94   89    92 #>  [4312,]   85   87   85   93   92   93   93   94   89    92 #>  [4313,]   85   87   85   93   92   93   93   94   89    92 #>  [4314,]   85   87   85   93   92   93   93   94   89    92 #>  [4315,]   85   87   85   93   92   93   93   94   89    92 #>  [4316,]   85   87   85   93   92   93   93   94   89    92 #>  [4317,]   85   87   85   93   92   93   93   94   89    92 #>  [4318,]   84   86   84   92   91   92   92   93   88    91 #>  [4319,]   85   87   85   93   92   93   93   94   89    92 #>  [4320,]   84   86   84   92   91   92   92   93   88    91 #>  [4321,]   85   87   85   93   92   93   93   94   89    92 #>  [4322,]   85   87   85   93   92   93   93   94   89    92 #>  [4323,]   84   86   84   92   91   92   92   93   88    91 #>  [4324,]   84   86   84   92   91   92   92   93   88    91 #>  [4325,]   85   87   85   93   92   93   93   94   89    92 #>  [4326,]   85   87   85   93   92   93   93   94   89    92 #>  [4327,]   85   87   85   93   92   93   93   94   89    92 #>  [4328,]   85   87   85   93   92   93   93   94   89    92 #>  [4329,]   85   87   85   93   92   93   93   94   89    92 #>  [4330,]   84   86   84   92   91   92   92   93   88    91 #>  [4331,]   84   86   84   92   91   92   92   93   88    91 #>  [4332,]   84   86   84   92   91   92   92   93   88    91 #>  [4333,]   85   87   85   93   92   93   93   94   89    92 #>  [4334,]   84   86   84   92   91   92   92   93   88    91 #>  [4335,]   85   87   85   93   92   93   93   94   89    92 #>  [4336,]   84   86   84   92   91   92   92   93   88    91 #>  [4337,]   85   87   85   93   92   93   93   94   89    92 #>  [4338,]   85   87   85   93   92   93   93   94   89    92 #>  [4339,]   84   86   84   92   91   92   92   93   88    91 #>  [4340,]   85   87   85   93   92   93   93   94   89    92 #>  [4341,]   85   87   85   93   92   93   93   94   89    92 #>  [4342,]   84   86   84   92   91   92   92   93   88    91 #>  [4343,]   84   86   84   92   91   92   92   93   88    91 #>  [4344,]   85   87   85   93   92   93   93   94   89    92 #>  [4345,]   84   86   84   92   91   92   92   93   88    91 #>  [4346,]   85   87   85   93   92   93   93   94   89    92 #>  [4347,]   85   87   85   93   92   93   93   94   89    92 #>  [4348,]   84   86   84   92   91   92   92   93   88    91 #>  [4349,]   84   86   84   92   91   92   92   93   88    91 #>  [4350,]   85   87   85   93   92   93   93   94   89    92 #>  [4351,]   84   86   84   92   91   92   92   93   88    91 #>  [4352,]   85   87   85   93   92   93   93   94   89    92 #>  [4353,]   84   86   84   92   91   92   92   93   88    91 #>  [4354,]   85   87   85   93   92   93   93   94   89    92 #>  [4355,]   85   87   85   93   92   93   93   94   89    92 #>  [4356,]   84   86   84   92   91   92   92   93   88    91 #>  [4357,]   85   87   85   93   92   93   93   94   89    92 #>  [4358,]   85   87   85   93   92   93   93   94   89    92 #>  [4359,]   85   87   85   93   92   93   93   94   89    92 #>  [4360,]   84   86   84   92   91   92   92   93   88    91 #>  [4361,]   85   87   85   93   92   93   93   94   89    92 #>  [4362,]   84   86   84   92   91   92   92   93   88    91 #>  [4363,]   85   87   85   93   92   93   93   94   89    92 #>  [4364,]   84   86   84   92   91   92   92   93   88    91 #>  [4365,]   84   86   84   92   91   92   92   93   88    91 #>  [4366,]   84   86   84   92   91   92   92   93   88    91 #>  [4367,]   84   86   84   92   91   92   92   93   88    91 #>  [4368,]   85   87   85   93   92   93   93   94   89    92 #>  [4369,]   85   87   85   93   92   93   93   94   89    92 #>  [4370,]   85   87   85   93   92   93   93   94   89    92 #>  [4371,]   85   87   85   93   92   93   93   94   89    92 #>  [4372,]   84   86   84   92   91   92   92   93   88    91 #>  [4373,]   85   87   85   93   92   93   93   94   89    92 #>  [4374,]   85   87   85   93   92   93   93   94   89    92 #>  [4375,]   85   87   85   93   92   93   93   94   89    92 #>  [4376,]   85   87   85   93   92   93   93   94   89    92 #>  [4377,]   85   87   85   93   92   93   93   94   89    92 #>  [4378,]   84   86   84   92   91   92   92   93   88    91 #>  [4379,]   85   87   85   93   92   93   93   94   89    92 #>  [4380,]   85   87   85   93   92   93   93   94   89    92 #>  [4381,]   85   87   85   93   92   93   93   94   89    92 #>  [4382,]   85   87   85   93   92   93   93   94   89    92 #>  [4383,]   85   87   85   93   92   93   93   94   89    92 #>  [4384,]   85   87   85   93   92   93   93   94   89    92 #>  [4385,]   84   86   84   92   91   92   92   93   88    91 #>  [4386,]   85   87   85   93   92   93   93   94   89    92 #>  [4387,]   85   87   85   93   92   93   93   94   89    92 #>  [4388,]   84   86   84   92   91   92   92   93   88    91 #>  [4389,]   84   86   84   92   91   92   92   93   88    91 #>  [4390,]   85   87   85   93   92   93   93   94   89    92 #>  [4391,]   84   86   84   92   91   92   92   93   88    91 #>  [4392,]   85   87   85   93   92   93   93   94   89    92 #>  [4393,]   85   87   85   93   92   93   93   94   89    92 #>  [4394,]   85   87   85   93   92   93   93   94   89    92 #>  [4395,]   84   86   84   92   91   92   92   93   88    91 #>  [4396,]   85   87   85   93   92   93   93   94   89    92 #>  [4397,]   85   87   85   93   92   93   93   94   89    92 #>  [4398,]   85   87   85   93   92   93   93   94   89    92 #>  [4399,]   85   87   85   93   92   93   93   94   89    92 #>  [4400,]   85   87   85   93   92   93   93   94   89    92 #>  [4401,]   87   89   87   95   95   95   95   96   91    93 #>  [4402,]   86   88   86   94   93   94   94   95   90    95 #>  [4403,]   86   88   86   94   93   94   94   95   90    94 #>  [4404,]   87   89   87   95   94   95   95   96   91    93 #>  [4405,]   86   88   86   94   93   94   94   95   90    95 #>  [4406,]   86   88   86   94   93   94   94   95   90    95 #>  [4407,]   87   89   87   95   94   95   95   96   91    93 #>  [4408,]   87   89   87   95   94   95   95   96   91    93 #>  [4409,]   87   89   87   95   94   95   95   96   91    93 #>  [4410,]   87   89   87   95   94   95   95   96   91    93 #>  [4411,]   86   88   86   94   93   94   94   95   90    94 #>  [4412,]   86   88   86   94   93   94   94   95   90    94 #>  [4413,]   87   89   87   95   94   95   95   96   91    93 #>  [4414,]   86   88   86   94   93   94   94   95   90    94 #>  [4415,]   87   89   87   95   95   95   95   96   91    93 #>  [4416,]   87   89   87   95   94   95   95   96   91    93 #>  [4417,]   87   89   87   95   95   95   95   96   91    93 #>  [4418,]   87   89   87   95   95   95   95   96   91    93 #>  [4419,]   86   88   86   94   93   94   94   95   90    95 #>  [4420,]   86   88   86   94   93   94   94   95   90    94 #>  [4421,]   87   89   87   95   94   95   95   96   91    93 #>  [4422,]   86   88   86   94   93   94   94   95   90    94 #>  [4423,]   87   89   87   95   94   95   95   96   91    93 #>  [4424,]   86   88   86   94   93   94   94   95   90    95 #>  [4425,]   87   89   87   95   94   95   95   96   91    93 #>  [4426,]   86   88   86   94   93   94   94   95   90    94 #>  [4427,]   87   89   87   95   95   95   95   96   91    93 #>  [4428,]   87   89   87   95   94   95   95   96   91    93 #>  [4429,]   86   88   86   94   93   94   94   95   90    94 #>  [4430,]   86   88   86   94   93   94   94   95   90    95 #>  [4431,]   86   88   86   94   93   94   94   95   90    95 #>  [4432,]   86   88   86   94   93   94   94   95   90    94 #>  [4433,]   86   88   86   94   93   94   94   95   90    95 #>  [4434,]   86   88   86   94   93   94   94   95   90    95 #>  [4435,]   86   88   86   94   93   94   94   95   90    95 #>  [4436,]   86   88   86   94   93   94   94   95   90    94 #>  [4437,]   86   88   86   94   93   94   94   95   90    95 #>  [4438,]   86   88   86   94   93   94   94   95   90    95 #>  [4439,]   87   89   87   95   94   95   95   96   91    93 #>  [4440,]   86   88   86   94   93   94   94   95   90    94 #>  [4441,]   86   88   86   94   93   94   94   95   90    94 #>  [4442,]   86   88   86   94   93   94   94   95   90    94 #>  [4443,]   87   89   87   95   95   95   95   96   91    93 #>  [4444,]   86   88   86   94   93   94   94   95   90    95 #>  [4445,]   87   89   87   95   94   95   95   96   91    93 #>  [4446,]   87   89   87   95   94   95   95   96   91    93 #>  [4447,]   87   89   87   95   95   95   95   96   91    93 #>  [4448,]   86   88   86   94   93   94   94   95   90    94 #>  [4449,]   86   88   86   94   93   94   94   95   90    95 #>  [4450,]   86   88   86   94   93   94   94   95   90    95 #>  [4451,]   86   88   86   94   93   94   94   95   90    94 #>  [4452,]   86   88   86   94   93   94   94   95   90    95 #>  [4453,]   87   89   87   95   94   95   95   96   91    93 #>  [4454,]   86   88   86   94   93   94   94   95   90    94 #>  [4455,]   86   88   86   94   93   94   94   95   90    95 #>  [4456,]   87   89   87   95   94   95   95   96   91    93 #>  [4457,]   86   88   86   94   93   94   94   95   90    95 #>  [4458,]   86   88   86   94   93   94   94   95   90    95 #>  [4459,]   86   88   86   94   93   94   94   95   90    95 #>  [4460,]   86   88   86   94   93   94   94   95   90    94 #>  [4461,]   87   89   87   95   95   95   95   96   91    93 #>  [4462,]   86   88   86   94   93   94   94   95   90    94 #>  [4463,]   86   88   86   94   93   94   94   95   90    95 #>  [4464,]   87   89   87   95   94   95   95   96   91    93 #>  [4465,]   86   88   86   94   93   94   94   95   90    95 #>  [4466,]   86   88   86   94   93   94   94   95   90    94 #>  [4467,]   86   88   86   94   93   94   94   95   90    95 #>  [4468,]   86   88   86   94   93   94   94   95   90    94 #>  [4469,]   86   88   86   94   93   94   94   95   90    94 #>  [4470,]   87   89   87   95   95   95   95   96   91    93 #>  [4471,]   87   89   87   95   95   95   95   96   91    93 #>  [4472,]   87   89   87   95   94   95   95   96   91    93 #>  [4473,]   87   89   87   95   94   95   95   96   91    93 #>  [4474,]   87   89   87   95   94   95   95   96   91    93 #>  [4475,]   87   89   87   95   95   95   95   96   91    93 #>  [4476,]   87   89   87   95   94   95   95   96   91    93 #>  [4477,]   87   89   87   95   95   95   95   96   91    93 #>  [4478,]   86   88   86   94   93   94   94   95   90    95 #>  [4479,]   86   88   86   94   93   94   94   95   90    95 #>  [4480,]   86   88   86   94   93   94   94   95   90    94 #>  [4481,]   86   88   86   94   93   94   94   95   90    94 #>  [4482,]   87   89   87   95   94   95   95   96   91    93 #>  [4483,]   86   88   86   94   93   94   94   95   90    94 #>  [4484,]   87   89   87   95   94   95   95   96   91    93 #>  [4485,]   86   88   86   94   93   94   94   95   90    95 #>  [4486,]   86   88   86   94   93   94   94   95   90    95 #>  [4487,]   86   88   86   94   93   94   94   95   90    95 #>  [4488,]   87   89   87   95   94   95   95   96   91    93 #>  [4489,]   86   88   86   94   93   94   94   95   90    94 #>  [4490,]   86   88   86   94   93   94   94   95   90    95 #>  [4491,]   86   88   86   94   93   94   94   95   90    94 #>  [4492,]   86   88   86   94   93   94   94   95   90    95 #>  [4493,]   86   88   86   94   93   94   94   95   90    95 #>  [4494,]   87   89   87   95   94   95   95   96   91    93 #>  [4495,]   87   89   87   95   95   95   95   96   91    93 #>  [4496,]   86   88   86   94   93   94   94   95   90    95 #>  [4497,]   86   88   86   94   93   94   94   95   90    95 #>  [4498,]   86   88   86   94   93   94   94   95   90    95 #>  [4499,]   86   88   86   94   93   94   94   95   90    95 #>  [4500,]   87   89   87   95   95   95   95   96   91    93 #>  [4501,]   88   90   88   96   96   96   96   97   94    98 #>  [4502,]   88   90   88   96   96   96   96   97   94    98 #>  [4503,]   88   90   88   96   96   96   96   97   94    98 #>  [4504,]   89   91   89   97   97   97   97   98   92    96 #>  [4505,]   88   90   88   96   96   96   96   97   94    98 #>  [4506,]   88   90   88   96   96   96   96   97   94    98 #>  [4507,]   88   90   88   96   96   96   96   97   94    98 #>  [4508,]   88   90   88   96   96   96   96   97   93    97 #>  [4509,]   89   91   89   97   97   97   97   98   92    96 #>  [4510,]   88   90   88   96   96   96   96   97   93    97 #>  [4511,]   89   91   89   97   97   97   97   98   92    96 #>  [4512,]   89   91   89   97   97   97   97   98   92    96 #>  [4513,]   88   90   88   96   96   96   96   97   94    98 #>  [4514,]   89   91   89   97   97   97   97   98   92    96 #>  [4515,]   89   91   89   97   97   97   97   98   92    96 #>  [4516,]   88   90   88   96   96   96   96   97   94    98 #>  [4517,]   88   90   88   96   96   96   96   97   94    98 #>  [4518,]   89   91   89   97   97   97   97   98   92    96 #>  [4519,]   89   91   89   97   97   97   97   98   92    96 #>  [4520,]   88   90   88   96   96   96   96   97   94    98 #>  [4521,]   89   91   89   97   97   97   97   98   92    96 #>  [4522,]   88   90   88   96   96   96   96   97   94    98 #>  [4523,]   88   90   88   96   96   96   96   97   94    98 #>  [4524,]   88   90   88   96   96   96   96   97   94    98 #>  [4525,]   88   90   88   96   96   96   96   97   94    98 #>  [4526,]   89   91   89   97   97   97   97   98   92    96 #>  [4527,]   89   91   89   97   97   97   97   98   92    96 #>  [4528,]   88   90   88   96   96   96   96   97   94    98 #>  [4529,]   88   90   88   96   96   96   96   97   94    98 #>  [4530,]   89   91   89   97   97   97   97   98   92    96 #>  [4531,]   89   91   89   97   97   97   97   98   92    96 #>  [4532,]   88   90   88   96   96   96   96   97   94    98 #>  [4533,]   89   91   89   97   97   97   97   98   92    96 #>  [4534,]   88   90   88   96   96   96   96   97   94    98 #>  [4535,]   88   90   88   96   96   96   96   97   94    98 #>  [4536,]   89   91   89   97   97   97   97   98   92    96 #>  [4537,]   88   90   88   96   96   96   96   97   94    98 #>  [4538,]   89   91   89   97   97   97   97   98   92    96 #>  [4539,]   88   90   88   96   96   96   96   97   94    98 #>  [4540,]   88   90   88   96   96   96   96   97   94    98 #>  [4541,]   89   91   89   97   97   97   97   98   92    96 #>  [4542,]   89   91   89   97   97   97   97   98   92    96 #>  [4543,]   88   90   88   96   96   96   96   97   93    97 #>  [4544,]   88   90   88   96   96   96   96   97   94    98 #>  [4545,]   88   90   88   96   96   96   96   97   94    98 #>  [4546,]   88   90   88   96   96   96   96   97   94    98 #>  [4547,]   88   90   88   96   96   96   96   97   94    98 #>  [4548,]   89   91   89   97   97   97   97   98   92    96 #>  [4549,]   88   90   88   96   96   96   96   97   94    98 #>  [4550,]   88   90   88   96   96   96   96   97   94    98 #>  [4551,]   88   90   88   96   96   96   96   97   93    97 #>  [4552,]   88   90   88   96   96   96   96   97   94    98 #>  [4553,]   88   90   88   96   96   96   96   97   94    98 #>  [4554,]   88   90   88   96   96   96   96   97   94    98 #>  [4555,]   88   90   88   96   96   96   96   97   94    98 #>  [4556,]   88   90   88   96   96   96   96   97   94    98 #>  [4557,]   88   90   88   96   96   96   96   97   94    98 #>  [4558,]   89   91   89   97   97   97   97   98   92    96 #>  [4559,]   88   90   88   96   96   96   96   97   94    98 #>  [4560,]   89   91   89   97   97   97   97   98   92    96 #>  [4561,]   89   91   89   97   97   97   97   98   92    96 #>  [4562,]   89   91   89   97   97   97   97   98   92    96 #>  [4563,]   88   90   88   96   96   96   96   97   94    98 #>  [4564,]   88   90   88   96   96   96   96   97   93    97 #>  [4565,]   88   90   88   96   96   96   96   97   94    98 #>  [4566,]   88   90   88   96   96   96   96   97   94    98 #>  [4567,]   88   90   88   96   96   96   96   97   93    97 #>  [4568,]   89   91   89   97   97   97   97   98   92    96 #>  [4569,]   89   91   89   97   97   97   97   98   92    96 #>  [4570,]   88   90   88   96   96   96   96   97   94    98 #>  [4571,]   88   90   88   96   96   96   96   97   94    98 #>  [4572,]   88   90   88   96   96   96   96   97   94    98 #>  [4573,]   88   90   88   96   96   96   96   97   94    98 #>  [4574,]   89   91   89   97   97   97   97   98   92    96 #>  [4575,]   89   91   89   97   97   97   97   98   92    96 #>  [4576,]   88   90   88   96   96   96   96   97   94    98 #>  [4577,]   88   90   88   96   96   96   96   97   94    98 #>  [4578,]   88   90   88   96   96   96   96   97   93    97 #>  [4579,]   88   90   88   96   96   96   96   97   94    98 #>  [4580,]   88   90   88   96   96   96   96   97   94    98 #>  [4581,]   88   90   88   96   96   96   96   97   94    98 #>  [4582,]   89   91   89   97   97   97   97   98   92    96 #>  [4583,]   88   90   88   96   96   96   96   97   94    98 #>  [4584,]   88   90   88   96   96   96   96   97   94    98 #>  [4585,]   89   91   89   97   97   97   97   98   92    96 #>  [4586,]   88   90   88   96   96   96   96   97   94    98 #>  [4587,]   88   90   88   96   96   96   96   97   94    98 #>  [4588,]   88   90   88   96   96   96   96   97   94    98 #>  [4589,]   88   90   88   96   96   96   96   97   93    97 #>  [4590,]   88   90   88   96   96   96   96   97   94    98 #>  [4591,]   88   90   88   96   96   96   96   97   93    97 #>  [4592,]   89   91   89   97   97   97   97   98   92    96 #>  [4593,]   89   91   89   97   97   97   97   98   92    96 #>  [4594,]   88   90   88   96   96   96   96   97   94    98 #>  [4595,]   88   90   88   96   96   96   96   97   93    97 #>  [4596,]   89   91   89   97   97   97   97   98   92    96 #>  [4597,]   89   91   89   97   97   97   97   98   92    96 #>  [4598,]   88   90   88   96   96   96   96   97   94    98 #>  [4599,]   89   91   89   97   97   97   97   98   92    96 #>  [4600,]   88   90   88   96   96   96   96   97   94    98 #>  [4601,]   90   93   91   99   99   99   99  100   96   100 #>  [4602,]   90   93   91   99   99   99   99  100   96   100 #>  [4603,]   90   93   91   99   99   99   99  100   96   100 #>  [4604,]   90   93   91   99   99   99   99  100   96   100 #>  [4605,]   90   93   91   99   99   99   99  100   96   100 #>  [4606,]   90   93   91   99   99   99   99  100   96   100 #>  [4607,]   90   93   91   99   99   99   99  100   96   100 #>  [4608,]   90   93   91   99   99   99   99  100   96   100 #>  [4609,]   90   93   91   99   99   99   99  100   96   100 #>  [4610,]   90   93   91   99   99   99   99  100   96   100 #>  [4611,]   90   93   91   99   99   99   99  100   96   100 #>  [4612,]   90   93   91   99   99   99   99  100   96   100 #>  [4613,]   90   93   91   99   99   99   99  100   96   100 #>  [4614,]   90   93   91   99   99   99   99  100   96   100 #>  [4615,]   90   93   91   99   99   99   99  100   96   100 #>  [4616,]   90   93   91   99   99   99   99  100   96   100 #>  [4617,]   90   93   91   99   99   99   99  100   96   100 #>  [4618,]   90   93   91   99   99   99   99  100   96   100 #>  [4619,]   90   93   91   99   99   99   99  100   96   100 #>  [4620,]   90   92   90   98   98   98   98   99   95    99 #>  [4621,]   90   92   90   98   98   98   98   99   95    99 #>  [4622,]   90   93   91   99   99   99   99  100   96   100 #>  [4623,]   90   93   91   99   99   99   99  100   96   100 #>  [4624,]   90   93   91   99   99   99   99  100   96   100 #>  [4625,]   90   92   90   98   98   98   98   99   95    99 #>  [4626,]   90   93   91   99   99   99   99  100   96   100 #>  [4627,]   90   93   91   99   99   99   99  100   96   100 #>  [4628,]   90   93   91   99   99   99   99  100   96   100 #>  [4629,]   90   93   91   99   99   99   99  100   96   100 #>  [4630,]   90   93   91   99   99   99   99  100   96   100 #>  [4631,]   90   93   91   99   99   99   99  100   96   100 #>  [4632,]   90   93   91   99   99   99   99  100   96   100 #>  [4633,]   90   93   91   99   99   99   99  100   96   100 #>  [4634,]   90   93   91   99   99   99   99  100   96   100 #>  [4635,]   90   93   91   99   99   99   99  100   96   100 #>  [4636,]   90   93   91   99   99   99   99  100   96   100 #>  [4637,]   90   93   91   99   99   99   99  100   96   100 #>  [4638,]   90   93   91   99   99   99   99  100   96   100 #>  [4639,]   90   93   91   99   99   99   99  100   96   100 #>  [4640,]   90   93   91   99   99   99   99  100   96   100 #>  [4641,]   90   93   91   99   99   99   99  100   96   100 #>  [4642,]   90   93   91   99   99   99   99  100   96   100 #>  [4643,]   90   93   91   99   99   99   99  100   96   100 #>  [4644,]   90   93   91   99   99   99   99  100   96   100 #>  [4645,]   90   93   91   99   99   99   99  100   96   100 #>  [4646,]   90   93   91   99   99   99   99  100   96   100 #>  [4647,]   90   93   91   99   99   99   99  100   96   100 #>  [4648,]   90   93   91   99   99   99   99  100   96   100 #>  [4649,]   90   93   91   99   99   99   99  100   96   100 #>  [4650,]   90   93   91   99   99   99   99  100   96   100 #>  [4651,]   90   93   91   99   99   99   99  100   96   100 #>  [4652,]   90   93   91   99   99   99   99  100   96   100 #>  [4653,]   90   93   91   99   99   99   99  100   96   100 #>  [4654,]   90   93   91   99   99   99   99  100   96   100 #>  [4655,]   90   93   91   99   99   99   99  100   96   100 #>  [4656,]   90   92   90   98   98   98   98   99   95    99 #>  [4657,]   90   93   91   99   99   99   99  100   96   100 #>  [4658,]   90   93   91   99   99   99   99  100   96   100 #>  [4659,]   90   93   91   99   99   99   99  100   96   100 #>  [4660,]   90   93   91   99   99   99   99  100   96   100 #>  [4661,]   90   93   91   99   99   99   99  100   96   100 #>  [4662,]   90   93   91   99   99   99   99  100   96   100 #>  [4663,]   90   93   91   99   99   99   99  100   96   100 #>  [4664,]   90   93   91   99   99   99   99  100   96   100 #>  [4665,]   90   92   90   98   98   98   98   99   95    99 #>  [4666,]   90   93   91   99   99   99   99  100   96   100 #>  [4667,]   90   93   91   99   99   99   99  100   96   100 #>  [4668,]   90   93   91   99   99   99   99  100   96   100 #>  [4669,]   90   93   91   99   99   99   99  100   96   100 #>  [4670,]   90   93   91   99   99   99   99  100   96   100 #>  [4671,]   90   93   91   99   99   99   99  100   96   100 #>  [4672,]   90   93   91   99   99   99   99  100   96   100 #>  [4673,]   90   93   91   99   99   99   99  100   96   100 #>  [4674,]   90   92   90   98   98   98   98   99   95    99 #>  [4675,]   90   93   91   99   99   99   99  100   96   100 #>  [4676,]   90   93   91   99   99   99   99  100   96   100 #>  [4677,]   90   93   91   99   99   99   99  100   96   100 #>  [4678,]   90   93   91   99   99   99   99  100   96   100 #>  [4679,]   90   93   91   99   99   99   99  100   96   100 #>  [4680,]   90   92   90   98   98   98   98   99   95    99 #>  [4681,]   90   93   91   99   99   99   99  100   96   100 #>  [4682,]   90   93   91   99   99   99   99  100   96   100 #>  [4683,]   90   93   91   99   99   99   99  100   96   100 #>  [4684,]   90   93   91   99   99   99   99  100   96   100 #>  [4685,]   90   92   90   98   98   98   98   99   95    99 #>  [4686,]   90   93   91   99   99   99   99  100   96   100 #>  [4687,]   90   93   91   99   99   99   99  100   96   100 #>  [4688,]   90   93   91   99   99   99   99  100   96   100 #>  [4689,]   90   92   90   98   98   98   98   99   95    99 #>  [4690,]   90   93   91   99   99   99   99  100   96   100 #>  [4691,]   90   93   91   99   99   99   99  100   96   100 #>  [4692,]   90   93   91   99   99   99   99  100   96   100 #>  [4693,]   90   93   91   99   99   99   99  100   96   100 #>  [4694,]   90   93   91   99   99   99   99  100   96   100 #>  [4695,]   90   93   91   99   99   99   99  100   96   100 #>  [4696,]   90   93   91   99   99   99   99  100   96   100 #>  [4697,]   90   93   91   99   99   99   99  100   96   100 #>  [4698,]   90   93   91   99   99   99   99  100   96   100 #>  [4699,]   90   93   91   99   99   99   99  100   96   100 #>  [4700,]   90   93   91   99   99   99   99  100   96   100 #>  [4701,]   92   95   93  101  101  101  101  102   98   102 #>  [4702,]   92   95   93  101  101  101  101  102   98   102 #>  [4703,]   91   94   92  100  100  100  100  101   97   101 #>  [4704,]   92   95   93  101  101  101  101  102   98   102 #>  [4705,]   92   95   93  101  101  101  101  102   98   102 #>  [4706,]   92   95   93  101  101  101  101  102   98   102 #>  [4707,]   91   94   92  100  100  100  100  101   97   101 #>  [4708,]   92   95   93  101  101  101  101  102   98   102 #>  [4709,]   92   95   93  101  101  101  101  102   98   102 #>  [4710,]   92   95   93  101  101  101  101  102   98   102 #>  [4711,]   92   95   93  101  101  101  101  102   98   102 #>  [4712,]   92   95   93  101  101  101  101  102   98   102 #>  [4713,]   92   95   93  101  101  101  101  102   98   102 #>  [4714,]   92   95   93  101  101  101  101  102   98   102 #>  [4715,]   92   95   93  101  101  101  101  102   98   102 #>  [4716,]   92   95   93  101  101  101  101  102   98   102 #>  [4717,]   92   95   93  101  101  101  101  102   98   102 #>  [4718,]   92   95   93  101  101  101  101  102   98   102 #>  [4719,]   92   95   93  101  101  101  101  102   98   102 #>  [4720,]   92   95   93  101  101  101  101  102   98   102 #>  [4721,]   92   95   93  101  101  101  101  102   98   102 #>  [4722,]   92   95   93  101  101  101  101  102   98   102 #>  [4723,]   92   95   93  101  101  101  101  102   98   102 #>  [4724,]   92   95   93  101  101  101  101  102   98   102 #>  [4725,]   92   95   93  101  101  101  101  102   98   102 #>  [4726,]   92   95   93  101  101  101  101  102   98   102 #>  [4727,]   92   95   93  101  101  101  101  102   98   102 #>  [4728,]   92   95   93  101  101  101  101  102   98   102 #>  [4729,]   92   95   93  101  101  101  101  102   98   102 #>  [4730,]   92   95   93  101  101  101  101  102   98   102 #>  [4731,]   92   95   93  101  101  101  101  102   98   102 #>  [4732,]   92   95   93  101  101  101  101  102   98   102 #>  [4733,]   92   95   93  101  101  101  101  102   98   102 #>  [4734,]   92   95   93  101  101  101  101  102   98   102 #>  [4735,]   92   95   93  101  101  101  101  102   98   102 #>  [4736,]   92   95   93  101  101  101  101  102   98   102 #>  [4737,]   92   95   93  101  101  101  101  102   98   102 #>  [4738,]   92   95   93  101  101  101  101  102   98   102 #>  [4739,]   92   95   93  101  101  101  101  102   98   102 #>  [4740,]   92   95   93  101  101  101  101  102   98   102 #>  [4741,]   92   95   93  101  101  101  101  102   98   102 #>  [4742,]   92   95   93  101  101  101  101  102   98   102 #>  [4743,]   92   95   93  101  101  101  101  102   98   102 #>  [4744,]   92   95   93  101  101  101  101  102   98   102 #>  [4745,]   92   95   93  101  101  101  101  102   98   102 #>  [4746,]   92   95   93  101  101  101  101  102   98   102 #>  [4747,]   92   95   93  101  101  101  101  102   98   102 #>  [4748,]   92   95   93  101  101  101  101  102   98   102 #>  [4749,]   91   94   92  100  100  100  100  101   97   101 #>  [4750,]   92   95   93  101  101  101  101  102   98   102 #>  [4751,]   92   95   93  101  101  101  101  102   98   102 #>  [4752,]   92   95   93  101  101  101  101  102   98   102 #>  [4753,]   91   94   92  100  100  100  100  101   97   101 #>  [4754,]   92   95   93  101  101  101  101  102   98   102 #>  [4755,]   91   94   92  100  100  100  100  101   97   101 #>  [4756,]   91   94   92  100  100  100  100  101   97   101 #>  [4757,]   92   95   93  101  101  101  101  102   98   102 #>  [4758,]   92   95   93  101  101  101  101  102   98   102 #>  [4759,]   92   95   93  101  101  101  101  102   98   102 #>  [4760,]   92   95   93  101  101  101  101  102   98   102 #>  [4761,]   92   95   93  101  101  101  101  102   98   102 #>  [4762,]   92   95   93  101  101  101  101  102   98   102 #>  [4763,]   92   95   93  101  101  101  101  102   98   102 #>  [4764,]   92   95   93  101  101  101  101  102   98   102 #>  [4765,]   92   95   93  101  101  101  101  102   98   102 #>  [4766,]   91   94   92  100  100  100  100  101   97   101 #>  [4767,]   92   95   93  101  101  101  101  102   98   102 #>  [4768,]   92   95   93  101  101  101  101  102   98   102 #>  [4769,]   92   95   93  101  101  101  101  102   98   102 #>  [4770,]   92   95   93  101  101  101  101  102   98   102 #>  [4771,]   92   95   93  101  101  101  101  102   98   102 #>  [4772,]   92   95   93  101  101  101  101  102   98   102 #>  [4773,]   92   95   93  101  101  101  101  102   98   102 #>  [4774,]   92   95   93  101  101  101  101  102   98   102 #>  [4775,]   92   95   93  101  101  101  101  102   98   102 #>  [4776,]   92   95   93  101  101  101  101  102   98   102 #>  [4777,]   92   95   93  101  101  101  101  102   98   102 #>  [4778,]   92   95   93  101  101  101  101  102   98   102 #>  [4779,]   92   95   93  101  101  101  101  102   98   102 #>  [4780,]   92   95   93  101  101  101  101  102   98   102 #>  [4781,]   92   95   93  101  101  101  101  102   98   102 #>  [4782,]   92   95   93  101  101  101  101  102   98   102 #>  [4783,]   92   95   93  101  101  101  101  102   98   102 #>  [4784,]   92   95   93  101  101  101  101  102   98   102 #>  [4785,]   92   95   93  101  101  101  101  102   98   102 #>  [4786,]   92   95   93  101  101  101  101  102   98   102 #>  [4787,]   92   95   93  101  101  101  101  102   98   102 #>  [4788,]   92   95   93  101  101  101  101  102   98   102 #>  [4789,]   92   95   93  101  101  101  101  102   98   102 #>  [4790,]   92   95   93  101  101  101  101  102   98   102 #>  [4791,]   92   95   93  101  101  101  101  102   98   102 #>  [4792,]   92   95   93  101  101  101  101  102   98   102 #>  [4793,]   92   95   93  101  101  101  101  102   98   102 #>  [4794,]   92   95   93  101  101  101  101  102   98   102 #>  [4795,]   92   95   93  101  101  101  101  102   98   102 #>  [4796,]   92   95   93  101  101  101  101  102   98   102 #>  [4797,]   92   95   93  101  101  101  101  102   98   102 #>  [4798,]   92   95   93  101  101  101  101  102   98   102 #>  [4799,]   92   95   93  101  101  101  101  102   98   102 #>  [4800,]   92   95   93  101  101  101  101  102   98   102 #>  [4801,]   94   97   95  103  103  103  103  104  100   104 #>  [4802,]   94   97   95  103  103  103  103  104  100   104 #>  [4803,]   94   97   95  103  103  103  103  104  100   104 #>  [4804,]   94   97   95  103  103  103  103  104  100   104 #>  [4805,]   94   97   95  103  103  103  103  104  100   104 #>  [4806,]   94   97   95  103  103  103  103  104  100   104 #>  [4807,]   94   97   95  103  103  103  103  104  100   104 #>  [4808,]   94   97   95  103  103  103  103  104  100   104 #>  [4809,]   94   97   95  103  103  103  103  104  100   104 #>  [4810,]   94   97   95  103  103  103  103  104  100   104 #>  [4811,]   94   97   95  103  103  103  103  104  100   104 #>  [4812,]   94   97   95  103  103  103  103  104  100   104 #>  [4813,]   94   97   95  103  103  103  103  104  100   104 #>  [4814,]   94   97   95  103  103  103  103  104  100   104 #>  [4815,]   93   96   94  102  102  102  102  103   99   103 #>  [4816,]   94   97   95  103  103  103  103  104  100   104 #>  [4817,]   93   96   94  102  102  102  102  103   99   103 #>  [4818,]   94   97   95  103  103  103  103  104  100   104 #>  [4819,]   94   97   95  103  103  103  103  104  100   104 #>  [4820,]   94   97   95  103  103  103  103  104  100   104 #>  [4821,]   94   97   95  103  103  103  103  104  100   104 #>  [4822,]   94   97   95  103  103  103  103  104  100   104 #>  [4823,]   94   97   95  103  103  103  103  104  100   104 #>  [4824,]   94   97   95  103  103  103  103  104  100   104 #>  [4825,]   94   97   95  103  103  103  103  104  100   104 #>  [4826,]   94   97   95  103  103  103  103  104  100   104 #>  [4827,]   94   97   95  103  103  103  103  104  100   104 #>  [4828,]   94   97   95  103  103  103  103  104  100   104 #>  [4829,]   94   97   95  103  103  103  103  104  100   104 #>  [4830,]   94   97   95  103  103  103  103  104  100   104 #>  [4831,]   93   96   94  102  102  102  102  103   99   103 #>  [4832,]   94   97   95  103  103  103  103  104  100   104 #>  [4833,]   94   97   95  103  103  103  103  104  100   104 #>  [4834,]   93   96   94  102  102  102  102  103   99   103 #>  [4835,]   94   97   95  103  103  103  103  104  100   104 #>  [4836,]   94   97   95  103  103  103  103  104  100   104 #>  [4837,]   93   96   94  102  102  102  102  103   99   103 #>  [4838,]   94   97   95  103  103  103  103  104  100   104 #>  [4839,]   94   97   95  103  103  103  103  104  100   104 #>  [4840,]   94   97   95  103  103  103  103  104  100   104 #>  [4841,]   94   97   95  103  103  103  103  104  100   104 #>  [4842,]   93   96   94  102  102  102  102  103   99   103 #>  [4843,]   93   96   94  102  102  102  102  103   99   103 #>  [4844,]   93   96   94  102  102  102  102  103   99   103 #>  [4845,]   94   97   95  103  103  103  103  104  100   104 #>  [4846,]   94   97   95  103  103  103  103  104  100   104 #>  [4847,]   94   97   95  103  103  103  103  104  100   104 #>  [4848,]   93   96   94  102  102  102  102  103   99   103 #>  [4849,]   94   97   95  103  103  103  103  104  100   104 #>  [4850,]   94   97   95  103  103  103  103  104  100   104 #>  [4851,]   94   97   95  103  103  103  103  104  100   104 #>  [4852,]   94   97   95  103  103  103  103  104  100   104 #>  [4853,]   94   97   95  103  103  103  103  104  100   104 #>  [4854,]   94   97   95  103  103  103  103  104  100   104 #>  [4855,]   94   97   95  103  103  103  103  104  100   104 #>  [4856,]   94   97   95  103  103  103  103  104  100   104 #>  [4857,]   94   97   95  103  103  103  103  104  100   104 #>  [4858,]   94   97   95  103  103  103  103  104  100   104 #>  [4859,]   94   97   95  103  103  103  103  104  100   104 #>  [4860,]   94   97   95  103  103  103  103  104  100   104 #>  [4861,]   94   97   95  103  103  103  103  104  100   104 #>  [4862,]   94   97   95  103  103  103  103  104  100   104 #>  [4863,]   93   96   94  102  102  102  102  103   99   103 #>  [4864,]   94   97   95  103  103  103  103  104  100   104 #>  [4865,]   94   97   95  103  103  103  103  104  100   104 #>  [4866,]   94   97   95  103  103  103  103  104  100   104 #>  [4867,]   94   97   95  103  103  103  103  104  100   104 #>  [4868,]   94   97   95  103  103  103  103  104  100   104 #>  [4869,]   94   97   95  103  103  103  103  104  100   104 #>  [4870,]   93   96   94  102  102  102  102  103   99   103 #>  [4871,]   94   97   95  103  103  103  103  104  100   104 #>  [4872,]   94   97   95  103  103  103  103  104  100   104 #>  [4873,]   94   97   95  103  103  103  103  104  100   104 #>  [4874,]   94   97   95  103  103  103  103  104  100   104 #>  [4875,]   93   96   94  102  102  102  102  103   99   103 #>  [4876,]   94   97   95  103  103  103  103  104  100   104 #>  [4877,]   94   97   95  103  103  103  103  104  100   104 #>  [4878,]   93   96   94  102  102  102  102  103   99   103 #>  [4879,]   93   96   94  102  102  102  102  103   99   103 #>  [4880,]   94   97   95  103  103  103  103  104  100   104 #>  [4881,]   94   97   95  103  103  103  103  104  100   104 #>  [4882,]   94   97   95  103  103  103  103  104  100   104 #>  [4883,]   94   97   95  103  103  103  103  104  100   104 #>  [4884,]   94   97   95  103  103  103  103  104  100   104 #>  [4885,]   94   97   95  103  103  103  103  104  100   104 #>  [4886,]   94   97   95  103  103  103  103  104  100   104 #>  [4887,]   94   97   95  103  103  103  103  104  100   104 #>  [4888,]   94   97   95  103  103  103  103  104  100   104 #>  [4889,]   94   97   95  103  103  103  103  104  100   104 #>  [4890,]   94   97   95  103  103  103  103  104  100   104 #>  [4891,]   94   97   95  103  103  103  103  104  100   104 #>  [4892,]   94   97   95  103  103  103  103  104  100   104 #>  [4893,]   94   97   95  103  103  103  103  104  100   104 #>  [4894,]   94   97   95  103  103  103  103  104  100   104 #>  [4895,]   93   96   94  102  102  102  102  103   99   103 #>  [4896,]   94   97   95  103  103  103  103  104  100   104 #>  [4897,]   94   97   95  103  103  103  103  104  100   104 #>  [4898,]   94   97   95  103  103  103  103  104  100   104 #>  [4899,]   94   97   95  103  103  103  103  104  100   104 #>  [4900,]   93   96   94  102  102  102  102  103   99   103 #>  [4901,]   96   99   96  105  104  104  104  105  101   105 #>  [4902,]   96   99   96  104  104  105  105  105  101   105 #>  [4903,]   96   99   96  104  104  104  104  105  101   105 #>  [4904,]   96   99   96  104  104  104  104  105  101   105 #>  [4905,]   96   99   96  104  104  104  104  105  101   105 #>  [4906,]   96   99   96  104  104  104  104  105  101   105 #>  [4907,]   96   99   96  104  104  104  104  105  101   105 #>  [4908,]   96   99   96  104  104  104  104  105  101   105 #>  [4909,]   96   99   96  104  104  105  105  105  101   105 #>  [4910,]   96   99   96  104  104  105  105  105  101   105 #>  [4911,]   96   99   96  104  104  104  104  105  101   105 #>  [4912,]   96   99   96  104  104  105  105  105  101   105 #>  [4913,]   96   99   96  104  104  105  105  105  101   106 #>  [4914,]   96   99   96  105  104  104  104  105  101   105 #>  [4915,]   95   98   96  105  104  104  104  105  101   105 #>  [4916,]   96   99   96  105  104  104  104  105  101   105 #>  [4917,]   96   99   96  104  104  105  105  105  101   105 #>  [4918,]   96   99   96  104  104  104  104  105  101   106 #>  [4919,]   96   99   96  104  104  104  104  105  101   105 #>  [4920,]   96   99   96  104  104  104  104  105  101   105 #>  [4921,]   96   99   96  104  104  105  105  105  101   105 #>  [4922,]   96   99   96  104  104  104  104  105  101   105 #>  [4923,]   96   99   96  104  104  104  104  105  101   105 #>  [4924,]   96   99   96  104  104  104  104  105  101   105 #>  [4925,]   96   99   96  104  104  104  104  105  101   105 #>  [4926,]   96   99   96  104  104  104  104  105  101   105 #>  [4927,]   96   99   96  104  104  104  104  105  101   105 #>  [4928,]   96   99   96  104  104  104  104  105  101   105 #>  [4929,]   96   99   96  104  104  105  105  105  101   105 #>  [4930,]   96   99   96  104  104  104  104  105  101   105 #>  [4931,]   95   98   96  104  104  104  104  105  101   105 #>  [4932,]   96   99   96  104  104  105  105  105  101   105 #>  [4933,]   96   99   96  104  104  105  105  105  101   105 #>  [4934,]   95   98   96  104  104  104  104  105  101   105 #>  [4935,]   96   99   96  104  104  104  104  105  101   105 #>  [4936,]   96   99   96  104  104  104  104  105  101   105 #>  [4937,]   96   99   96  104  104  104  104  105  101   105 #>  [4938,]   96   99   96  104  104  104  104  105  101   105 #>  [4939,]   96   99   96  104  104  104  104  105  101   105 #>  [4940,]   96   99   96  104  104  105  105  105  101   105 #>  [4941,]   96   99   96  105  104  104  104  105  101   105 #>  [4942,]   95   98   96  104  104  104  104  105  101   106 #>  [4943,]   95   98   96  104  104  104  104  105  101   105 #>  [4944,]   96   99   96  105  104  104  104  105  101   105 #>  [4945,]   96   99   96  104  104  104  104  105  101   105 #>  [4946,]   96   99   96  104  104  104  104  105  101   105 #>  [4947,]   96   99   96  104  104  104  104  105  101   105 #>  [4948,]   96   99   96  104  104  104  104  105  101   105 #>  [4949,]   96   99   96  104  104  104  104  105  101   105 #>  [4950,]   96   99   96  105  104  104  104  105  101   105 #>  [4951,]   96   99   96  104  104  104  104  105  101   106 #>  [4952,]   96   99   96  104  104  104  104  105  101   105 #>  [4953,]   96   99   96  104  104  105  105  105  101   106 #>  [4954,]   96   99   96  104  104  104  104  105  101   105 #>  [4955,]   96   99   96  104  104  104  104  105  101   105 #>  [4956,]   96   99   96  104  104  104  104  105  101   105 #>  [4957,]   96   99   96  104  104  104  104  105  101   105 #>  [4958,]   96   99   96  104  104  104  104  105  101   105 #>  [4959,]   96   99   96  104  104  104  104  105  101   105 #>  [4960,]   96   99   96  104  104  105  105  105  101   105 #>  [4961,]   96   99   96  104  104  104  104  105  101   105 #>  [4962,]   96   99   96  104  104  104  104  105  101   105 #>  [4963,]   95   98   96  104  104  105  105  105  101   105 #>  [4964,]   96   99   96  104  104  104  104  105  101   105 #>  [4965,]   96   99   96  104  104  104  104  105  101   105 #>  [4966,]   96   99   96  104  104  104  104  105  101   105 #>  [4967,]   96   99   96  104  104  104  104  105  101   105 #>  [4968,]   96   99   96  104  104  104  104  105  101   105 #>  [4969,]   96   99   96  104  104  104  104  105  101   105 #>  [4970,]   96   99   96  104  104  105  105  105  101   105 #>  [4971,]   96   99   96  104  104  104  104  105  101   105 #>  [4972,]   96   99   96  104  104  104  104  105  101   105 #>  [4973,]   96   99   96  104  104  104  104  105  101   105 #>  [4974,]   96   99   96  104  104  104  104  105  101   105 #>  [4975,]   95   98   96  104  104  105  105  105  101   105 #>  [4976,]   96   99   96  104  104  104  104  105  101   105 #>  [4977,]   96   99   96  104  104  104  104  105  101   105 #>  [4978,]   96   99   96  104  104  104  104  105  101   105 #>  [4979,]   96   99   96  104  104  104  104  105  101   106 #>  [4980,]   96   99   96  104  104  105  105  105  101   105 #>  [4981,]   96   99   96  104  104  105  105  105  101   105 #>  [4982,]   96   99   96  104  104  104  104  105  101   105 #>  [4983,]   96   99   96  104  104  104  104  105  101   105 #>  [4984,]   96   99   96  104  104  104  104  105  101   106 #>  [4985,]   96   99   96  104  104  104  104  105  101   105 #>  [4986,]   96   99   96  104  104  105  105  105  101   105 #>  [4987,]   96   99   96  104  104  104  104  105  101   105 #>  [4988,]   96   99   96  104  104  104  104  105  101   105 #>  [4989,]   96   99   96  104  104  104  104  105  101   105 #>  [4990,]   96   99   96  104  104  104  104  105  101   105 #>  [4991,]   96   99   96  104  104  104  104  105  101   106 #>  [4992,]   96   99   96  104  104  104  104  105  101   105 #>  [4993,]   96   99   96  104  104  104  104  105  101   106 #>  [4994,]   96   99   96  104  104  104  104  105  101   106 #>  [4995,]   96   99   96  104  104  104  104  105  101   105 #>  [4996,]   96   99   96  104  104  104  104  105  101   105 #>  [4997,]   96   99   96  104  104  104  104  105  101   105 #>  [4998,]   96   99   96  104  104  104  104  105  101   105 #>  [4999,]   96   99   96  105  104  104  104  105  101   105 #>  [5000,]   96   99   96  104  104  104  104  105  101   105 #>  [5001,]   98  101   98  107  106  107  107  107  103   108 #>  [5002,]   98  101   98  107  106  107  107  107  103   108 #>  [5003,]   97  100   97  106  105  106  106  106  102   107 #>  [5004,]   98  101   98  107  106  107  107  107  103   108 #>  [5005,]   98  101   98  107  106  107  107  107  103   108 #>  [5006,]   98  101   98  107  106  107  107  107  103   108 #>  [5007,]   97  100   97  106  105  106  106  106  102   107 #>  [5008,]   98  101   98  107  106  107  107  107  103   108 #>  [5009,]   98  101   98  107  106  107  107  107  103   108 #>  [5010,]   98  101   98  107  106  107  107  107  103   108 #>  [5011,]   98  101   98  107  106  107  107  107  103   108 #>  [5012,]   97  100   97  106  105  106  106  106  102   107 #>  [5013,]   98  101   98  107  106  107  107  107  103   108 #>  [5014,]   98  101   98  107  106  107  107  107  103   108 #>  [5015,]   98  101   98  107  106  107  107  107  103   108 #>  [5016,]   98  101   98  107  106  107  107  107  103   108 #>  [5017,]   98  101   98  107  106  107  107  107  103   108 #>  [5018,]   98  101   98  107  106  107  107  107  103   108 #>  [5019,]   98  101   98  107  106  107  107  107  103   108 #>  [5020,]   98  101   98  107  106  107  107  107  103   108 #>  [5021,]   98  101   98  107  106  107  107  107  103   108 #>  [5022,]   98  101   98  107  106  107  107  107  103   108 #>  [5023,]   98  101   98  107  106  107  107  107  103   108 #>  [5024,]   98  101   98  107  106  107  107  107  103   108 #>  [5025,]   98  101   98  107  106  107  107  107  103   108 #>  [5026,]   98  101   98  107  106  107  107  107  103   108 #>  [5027,]   98  101   98  107  106  107  107  107  103   108 #>  [5028,]   98  101   98  107  106  107  107  107  103   108 #>  [5029,]   98  101   98  107  106  107  107  107  103   108 #>  [5030,]   98  101   98  107  106  107  107  107  103   108 #>  [5031,]   97  100   97  106  105  106  106  106  102   107 #>  [5032,]   98  101   98  107  106  107  107  107  103   108 #>  [5033,]   98  101   98  107  106  107  107  107  103   108 #>  [5034,]   98  101   98  107  106  107  107  107  103   108 #>  [5035,]   98  101   98  107  106  107  107  107  103   108 #>  [5036,]   98  101   98  107  106  107  107  107  103   108 #>  [5037,]   98  101   98  107  106  107  107  107  103   108 #>  [5038,]   98  101   98  107  106  107  107  107  103   108 #>  [5039,]   98  101   98  107  106  107  107  107  103   108 #>  [5040,]   98  101   98  107  106  107  107  107  103   108 #>  [5041,]   98  101   98  107  106  107  107  107  103   108 #>  [5042,]   98  101   98  107  106  107  107  107  103   108 #>  [5043,]   98  101   98  107  106  107  107  107  103   108 #>  [5044,]   98  101   98  107  106  107  107  107  103   108 #>  [5045,]   98  101   98  107  106  107  107  107  103   108 #>  [5046,]   98  101   98  107  106  107  107  107  103   108 #>  [5047,]   98  101   98  107  106  107  107  107  103   108 #>  [5048,]   98  101   98  107  106  107  107  107  103   108 #>  [5049,]   98  101   98  107  106  107  107  107  103   108 #>  [5050,]   98  101   98  107  106  107  107  107  103   108 #>  [5051,]   98  101   98  107  106  107  107  107  103   108 #>  [5052,]   97  100   97  106  105  106  106  106  102   107 #>  [5053,]   98  101   98  107  106  107  107  107  103   108 #>  [5054,]   98  101   98  107  106  107  107  107  103   108 #>  [5055,]   98  101   98  107  106  107  107  107  103   108 #>  [5056,]   98  101   98  107  106  107  107  107  103   108 #>  [5057,]   98  101   98  107  106  107  107  107  103   108 #>  [5058,]   98  101   98  107  106  107  107  107  103   108 #>  [5059,]   97  100   97  106  105  106  106  106  102   107 #>  [5060,]   97  100   97  106  105  106  106  106  102   107 #>  [5061,]   98  101   98  107  106  107  107  107  103   108 #>  [5062,]   98  101   98  107  106  107  107  107  103   108 #>  [5063,]   98  101   98  107  106  107  107  107  103   108 #>  [5064,]   98  101   98  107  106  107  107  107  103   108 #>  [5065,]   98  101   98  107  106  107  107  107  103   108 #>  [5066,]   98  101   98  107  106  107  107  107  103   108 #>  [5067,]   98  101   98  107  106  107  107  107  103   108 #>  [5068,]   98  101   98  107  106  107  107  107  103   108 #>  [5069,]   98  101   98  107  106  107  107  107  103   108 #>  [5070,]   98  101   98  107  106  107  107  107  103   108 #>  [5071,]   98  101   98  107  106  107  107  107  103   108 #>  [5072,]   98  101   98  107  106  107  107  107  103   108 #>  [5073,]   98  101   98  107  106  107  107  107  103   108 #>  [5074,]   98  101   98  107  106  107  107  107  103   108 #>  [5075,]   98  101   98  107  106  107  107  107  103   108 #>  [5076,]   98  101   98  107  106  107  107  107  103   108 #>  [5077,]   98  101   98  107  106  107  107  107  103   108 #>  [5078,]   98  101   98  107  106  107  107  107  103   108 #>  [5079,]   98  101   98  107  106  107  107  107  103   108 #>  [5080,]   98  101   98  107  106  107  107  107  103   108 #>  [5081,]   98  101   98  107  106  107  107  107  103   108 #>  [5082,]   98  101   98  107  106  107  107  107  103   108 #>  [5083,]   98  101   98  107  106  107  107  107  103   108 #>  [5084,]   98  101   98  107  106  107  107  107  103   108 #>  [5085,]   98  101   98  107  106  107  107  107  103   108 #>  [5086,]   98  101   98  107  106  107  107  107  103   108 #>  [5087,]   98  101   98  107  106  107  107  107  103   108 #>  [5088,]   98  101   98  107  106  107  107  107  103   108 #>  [5089,]   98  101   98  107  106  107  107  107  103   108 #>  [5090,]   98  101   98  107  106  107  107  107  103   108 #>  [5091,]   98  101   98  107  106  107  107  107  103   108 #>  [5092,]   98  101   98  107  106  107  107  107  103   108 #>  [5093,]   98  101   98  107  106  107  107  107  103   108 #>  [5094,]   98  101   98  107  106  107  107  107  103   108 #>  [5095,]   98  101   98  107  106  107  107  107  103   108 #>  [5096,]   98  101   98  107  106  107  107  107  103   108 #>  [5097,]   97  100   97  106  105  106  106  106  102   107 #>  [5098,]   98  101   98  107  106  107  107  107  103   108 #>  [5099,]   98  101   98  107  106  107  107  107  103   108 #>  [5100,]   98  101   98  107  106  107  107  107  103   108 #>  [5101,]  100  103  101  110  109  110  109  109  105   110 #>  [5102,]  100  103  101  110  109  110  109  109  105   110 #>  [5103,]  100  103  100  109  108  109  109  109  105   110 #>  [5104,]   99  102   99  108  107  108  108  108  104   109 #>  [5105,]  100  103  100  109  108  109  109  109  105   110 #>  [5106,]  100  103  101  110  109  110  109  109  105   110 #>  [5107,]  100  103  101  110  109  110  109  109  105   110 #>  [5108,]   99  102   99  108  107  108  108  108  104   109 #>  [5109,]   99  102   99  108  107  108  108  108  104   109 #>  [5110,]   99  102   99  108  107  108  108  108  104   109 #>  [5111,]  100  103  101  110  109  110  109  109  105   110 #>  [5112,]  100  103  101  110  109  110  109  109  105   110 #>  [5113,]  100  103  101  110  109  110  109  109  105   110 #>  [5114,]  100  103  101  110  109  110  109  109  105   110 #>  [5115,]  100  103  101  110  109  110  109  109  105   110 #>  [5116,]  100  103  101  110  109  110  109  109  105   110 #>  [5117,]  100  103  101  110  109  110  109  109  105   110 #>  [5118,]  100  103  100  109  108  109  109  109  105   110 #>  [5119,]  100  103  101  110  109  110  109  109  105   110 #>  [5120,]  100  103  100  109  108  109  109  109  105   110 #>  [5121,]  100  103  101  110  109  110  109  109  105   110 #>  [5122,]  100  103  101  110  109  110  109  109  105   110 #>  [5123,]  100  103  100  109  108  109  109  109  105   110 #>  [5124,]  100  103  100  109  108  109  109  109  105   110 #>  [5125,]  100  103  101  110  109  110  109  109  105   110 #>  [5126,]  100  103  101  110  109  110  109  109  105   110 #>  [5127,]  100  103  101  110  109  110  109  109  105   110 #>  [5128,]  100  103  101  110  109  110  109  109  105   110 #>  [5129,]  100  103  101  110  109  110  109  109  105   110 #>  [5130,]  100  103  100  109  108  109  109  109  105   110 #>  [5131,]  100  103  100  109  108  109  109  109  105   110 #>  [5132,]  100  103  100  109  108  109  109  109  105   110 #>  [5133,]  100  103  101  110  109  110  109  109  105   110 #>  [5134,]  100  103  100  109  108  109  109  109  105   110 #>  [5135,]  100  103  101  110  109  110  109  109  105   110 #>  [5136,]  100  103  101  110  109  110  109  109  105   110 #>  [5137,]  100  103  101  110  109  110  109  109  105   110 #>  [5138,]  100  103  101  110  109  110  109  109  105   110 #>  [5139,]  100  103  100  109  108  109  109  109  105   110 #>  [5140,]  100  103  101  110  109  110  109  109  105   110 #>  [5141,]  100  103  101  110  109  110  109  109  105   110 #>  [5142,]  100  103  100  109  108  109  109  109  105   110 #>  [5143,]  100  103  100  109  108  109  109  109  105   110 #>  [5144,]  100  103  101  110  109  110  109  109  105   110 #>  [5145,]  100  103  100  109  108  109  109  109  105   110 #>  [5146,]  100  103  101  110  109  110  109  109  105   110 #>  [5147,]  100  103  101  110  109  110  109  109  105   110 #>  [5148,]  100  103  100  109  108  109  109  109  105   110 #>  [5149,]  100  103  100  109  108  109  109  109  105   110 #>  [5150,]  100  103  101  110  109  110  109  109  105   110 #>  [5151,]  100  103  100  109  108  109  109  109  105   110 #>  [5152,]  100  103  101  110  109  110  109  109  105   110 #>  [5153,]  100  103  100  109  108  109  109  109  105   110 #>  [5154,]  100  103  101  110  109  110  109  109  105   110 #>  [5155,]  100  103  101  110  109  110  109  109  105   110 #>  [5156,]  100  103  100  109  108  109  109  109  105   110 #>  [5157,]  100  103  101  110  109  110  109  109  105   110 #>  [5158,]  100  103  101  110  109  110  109  109  105   110 #>  [5159,]  100  103  101  110  109  110  109  109  105   110 #>  [5160,]  100  103  100  109  108  109  109  109  105   110 #>  [5161,]  100  103  101  110  109  110  109  109  105   110 #>  [5162,]  100  103  100  109  108  109  109  109  105   110 #>  [5163,]  100  103  101  110  109  110  109  109  105   110 #>  [5164,]  100  103  100  109  108  109  109  109  105   110 #>  [5165,]  100  103  100  109  108  109  109  109  105   110 #>  [5166,]  100  103  100  109  108  109  109  109  105   110 #>  [5167,]  100  103  100  109  108  109  109  109  105   110 #>  [5168,]  100  103  101  110  109  110  109  109  105   110 #>  [5169,]  100  103  101  110  109  110  109  109  105   110 #>  [5170,]  100  103  101  110  109  110  109  109  105   110 #>  [5171,]  100  103  101  110  109  110  109  109  105   110 #>  [5172,]  100  103  100  109  108  109  109  109  105   110 #>  [5173,]  100  103  101  110  109  110  109  109  105   110 #>  [5174,]  100  103  101  110  109  110  109  109  105   110 #>  [5175,]  100  103  101  110  109  110  109  109  105   110 #>  [5176,]  100  103  101  110  109  110  109  109  105   110 #>  [5177,]  100  103  101  110  109  110  109  109  105   110 #>  [5178,]  100  103  100  109  108  109  109  109  105   110 #>  [5179,]  100  103  101  110  109  110  109  109  105   110 #>  [5180,]  100  103  101  110  109  110  109  109  105   110 #>  [5181,]  100  103  101  110  109  110  109  109  105   110 #>  [5182,]  100  103  101  110  109  110  109  109  105   110 #>  [5183,]  100  103  101  110  109  110  109  109  105   110 #>  [5184,]  100  103  101  110  109  110  109  109  105   110 #>  [5185,]  100  103  100  109  108  109  109  109  105   110 #>  [5186,]  100  103  101  110  109  110  109  109  105   110 #>  [5187,]  100  103  101  110  109  110  109  109  105   110 #>  [5188,]  100  103  100  109  108  109  109  109  105   110 #>  [5189,]  100  103  100  109  108  109  109  109  105   110 #>  [5190,]  100  103  101  110  109  110  109  109  105   110 #>  [5191,]  100  103  100  109  108  109  109  109  105   110 #>  [5192,]  100  103  101  110  109  110  109  109  105   110 #>  [5193,]  100  103  101  110  109  110  109  109  105   110 #>  [5194,]  100  103  101  110  109  110  109  109  105   110 #>  [5195,]   99  102   99  108  107  108  108  108  104   109 #>  [5196,]  100  103  101  110  109  110  109  109  105   110 #>  [5197,]  100  103  101  110  109  110  109  109  105   110 #>  [5198,]  100  103  101  110  109  110  109  109  105   110 #>  [5199,]  100  103  101  110  109  110  109  109  105   110 #>  [5200,]  100  103  101  110  109  110  109  109  105   110 #>  [5201,]  101  104  102  111  110  111  110  110  106   112 #>  [5202,]  101  105  103  112  111  112  111  111  107   111 #>  [5203,]  101  104  102  111  110  111  110  110  106   112 #>  [5204,]  101  104  102  111  110  111  110  110  106   113 #>  [5205,]  101  104  102  111  110  111  110  110  106   112 #>  [5206,]  101  104  102  111  110  111  110  110  106   112 #>  [5207,]  101  104  102  111  110  111  110  110  106   112 #>  [5208,]  101  104  102  111  110  111  110  110  106   112 #>  [5209,]  101  105  103  112  111  112  111  111  107   111 #>  [5210,]  101  105  103  112  111  112  111  111  107   111 #>  [5211,]  101  104  102  111  110  111  110  110  106   112 #>  [5212,]  101  105  103  112  111  112  111  111  107   111 #>  [5213,]  101  104  102  111  110  111  110  110  106   112 #>  [5214,]  101  104  102  111  110  111  110  110  106   113 #>  [5215,]  101  104  102  111  110  111  110  110  106   112 #>  [5216,]  101  104  102  111  110  111  110  110  106   112 #>  [5217,]  101  104  102  111  110  111  110  110  106   112 #>  [5218,]  101  104  102  111  110  111  110  110  106   112 #>  [5219,]  101  104  102  111  110  111  110  110  106   113 #>  [5220,]  101  104  102  111  110  111  110  110  106   112 #>  [5221,]  101  105  103  112  111  112  111  111  107   111 #>  [5222,]  101  104  102  111  110  111  110  110  106   112 #>  [5223,]  101  104  102  111  110  111  110  110  106   112 #>  [5224,]  101  104  102  111  110  111  110  110  106   112 #>  [5225,]  101  104  102  111  110  111  110  110  106   112 #>  [5226,]  101  104  102  111  110  111  110  110  106   112 #>  [5227,]  101  104  102  111  110  111  110  110  106   113 #>  [5228,]  101  104  102  111  110  111  110  110  106   112 #>  [5229,]  101  105  103  112  111  112  111  111  107   111 #>  [5230,]  101  104  102  111  110  111  110  110  106   112 #>  [5231,]  101  104  102  111  110  111  110  110  106   112 #>  [5232,]  101  104  102  111  110  111  110  110  106   112 #>  [5233,]  101  105  103  112  111  112  111  111  107   111 #>  [5234,]  101  104  102  111  110  111  110  110  106   112 #>  [5235,]  101  104  102  111  110  111  110  110  106   112 #>  [5236,]  101  104  102  111  110  111  110  110  106   112 #>  [5237,]  101  104  102  111  110  111  110  110  106   112 #>  [5238,]  101  104  102  111  110  111  110  110  106   113 #>  [5239,]  101  104  102  111  110  111  110  110  106   112 #>  [5240,]  101  104  102  111  110  111  110  110  106   112 #>  [5241,]  101  104  102  111  110  111  110  110  106   113 #>  [5242,]  101  104  102  111  110  111  110  110  106   113 #>  [5243,]  101  104  102  111  110  111  110  110  106   112 #>  [5244,]  101  104  102  111  110  111  110  110  106   112 #>  [5245,]  101  104  102  111  110  111  110  110  106   112 #>  [5246,]  101  104  102  111  110  111  110  110  106   112 #>  [5247,]  101  104  102  111  110  111  110  110  106   112 #>  [5248,]  101  104  102  111  110  111  110  110  106   113 #>  [5249,]  101  104  102  111  110  111  110  110  106   112 #>  [5250,]  101  104  102  111  110  111  110  110  106   112 #>  [5251,]  101  104  102  111  110  111  110  110  106   112 #>  [5252,]  101  104  102  111  110  111  110  110  106   112 #>  [5253,]  101  104  102  111  110  111  110  110  106   112 #>  [5254,]  101  104  102  111  110  111  110  110  106   112 #>  [5255,]  101  104  102  111  110  111  110  110  106   112 #>  [5256,]  101  104  102  111  110  111  110  110  106   112 #>  [5257,]  101  104  102  111  110  111  110  110  106   112 #>  [5258,]  101  104  102  111  110  111  110  110  106   112 #>  [5259,]  101  104  102  111  110  111  110  110  106   112 #>  [5260,]  101  105  103  112  111  112  111  111  107   111 #>  [5261,]  101  104  102  111  110  111  110  110  106   113 #>  [5262,]  101  104  102  111  110  111  110  110  106   112 #>  [5263,]  101  105  103  112  111  112  111  111  107   111 #>  [5264,]  101  104  102  111  110  111  110  110  106   112 #>  [5265,]  101  104  102  111  110  111  110  110  106   112 #>  [5266,]  101  104  102  111  110  111  110  110  106   112 #>  [5267,]  101  104  102  111  110  111  110  110  106   112 #>  [5268,]  101  104  102  111  110  111  110  110  106   112 #>  [5269,]  101  104  102  111  110  111  110  110  106   113 #>  [5270,]  101  105  103  112  111  112  111  111  107   111 #>  [5271,]  101  104  102  111  110  111  110  110  106   112 #>  [5272,]  101  104  102  111  110  111  110  110  106   112 #>  [5273,]  101  104  102  111  110  111  110  110  106   112 #>  [5274,]  101  104  102  111  110  111  110  110  106   112 #>  [5275,]  101  104  102  111  110  111  110  110  106   112 #>  [5276,]  101  104  102  111  110  111  110  110  106   112 #>  [5277,]  101  104  102  111  110  111  110  110  106   112 #>  [5278,]  101  104  102  111  110  111  110  110  106   112 #>  [5279,]  101  104  102  111  110  111  110  110  106   112 #>  [5280,]  101  105  103  112  111  112  111  111  107   111 #>  [5281,]  101  105  103  112  111  112  111  111  107   111 #>  [5282,]  101  104  102  111  110  111  110  110  106   113 #>  [5283,]  101  104  102  111  110  111  110  110  106   112 #>  [5284,]  101  104  102  111  110  111  110  110  106   112 #>  [5285,]  101  104  102  111  110  111  110  110  106   112 #>  [5286,]  101  105  103  112  111  112  111  111  107   111 #>  [5287,]  101  104  102  111  110  111  110  110  106   112 #>  [5288,]  101  104  102  111  110  111  110  110  106   112 #>  [5289,]  101  104  102  111  110  111  110  110  106   112 #>  [5290,]  101  104  102  111  110  111  110  110  106   112 #>  [5291,]  101  104  102  111  110  111  110  110  106   112 #>  [5292,]  101  104  102  111  110  111  110  110  106   113 #>  [5293,]  101  104  102  111  110  111  110  110  106   113 #>  [5294,]  101  104  102  111  110  111  110  110  106   112 #>  [5295,]  101  104  102  111  110  111  110  110  106   112 #>  [5296,]  101  104  102  111  110  111  110  110  106   113 #>  [5297,]  101  104  102  111  110  111  110  110  106   113 #>  [5298,]  101  104  102  111  110  111  110  110  106   112 #>  [5299,]  101  104  102  111  110  111  110  110  106   112 #>  [5300,]  101  104  102  111  110  111  110  110  106   112 #>  [5301,]  102  106  104  113  112  113  114  114  110   115 #>  [5302,]  102  106  104  113  112  113  114  114  110   115 #>  [5303,]  102  106  104  113  112  113  113  113  109   115 #>  [5304,]  102  106  104  113  112  113  114  114  110   115 #>  [5305,]  102  106  104  113  112  113  114  114  110   115 #>  [5306,]  103  107  105  114  113  114  112  112  108   114 #>  [5307,]  102  106  104  113  112  113  113  113  109   115 #>  [5308,]  103  107  105  114  113  114  112  112  108   114 #>  [5309,]  103  107  105  114  113  114  112  112  108   114 #>  [5310,]  102  106  104  113  112  113  114  114  110   115 #>  [5311,]  102  106  104  113  112  113  114  114  110   115 #>  [5312,]  103  107  105  114  113  114  112  112  108   114 #>  [5313,]  102  106  104  113  112  113  114  114  110   115 #>  [5314,]  102  106  104  113  112  113  114  114  110   115 #>  [5315,]  103  107  105  114  113  114  112  112  108   114 #>  [5316,]  102  106  104  113  112  113  114  114  110   115 #>  [5317,]  102  106  104  113  112  113  114  114  110   115 #>  [5318,]  102  106  104  113  112  113  114  114  110   115 #>  [5319,]  102  106  104  113  112  113  114  114  110   115 #>  [5320,]  103  107  105  114  113  114  112  112  108   114 #>  [5321,]  102  106  104  113  112  113  113  113  109   115 #>  [5322,]  102  106  104  113  112  113  114  114  110   115 #>  [5323,]  102  106  104  113  112  113  113  113  109   115 #>  [5324,]  102  106  104  113  112  113  114  114  110   115 #>  [5325,]  102  106  104  113  112  113  113  113  109   115 #>  [5326,]  103  107  105  114  113  114  112  112  108   114 #>  [5327,]  102  106  104  113  112  113  114  114  110   115 #>  [5328,]  102  106  104  113  112  113  114  114  110   115 #>  [5329,]  102  106  104  113  112  113  114  114  110   115 #>  [5330,]  102  106  104  113  112  113  114  114  110   115 #>  [5331,]  102  106  104  113  112  113  114  114  110   115 #>  [5332,]  102  106  104  113  112  113  114  114  110   115 #>  [5333,]  103  107  105  114  113  114  112  112  108   114 #>  [5334,]  102  106  104  113  112  113  113  113  109   115 #>  [5335,]  102  106  104  113  112  113  113  113  109   115 #>  [5336,]  102  106  104  113  112  113  114  114  110   115 #>  [5337,]  102  106  104  113  112  113  113  113  109   115 #>  [5338,]  102  106  104  113  112  113  114  114  110   115 #>  [5339,]  102  106  104  113  112  113  114  114  110   115 #>  [5340,]  102  106  104  113  112  113  114  114  110   115 #>  [5341,]  102  106  104  113  112  113  114  114  110   115 #>  [5342,]  102  106  104  113  112  113  113  113  109   115 #>  [5343,]  103  107  105  114  113  114  112  112  108   114 #>  [5344,]  102  106  104  113  112  113  113  113  109   115 #>  [5345,]  103  107  105  114  113  114  112  112  108   114 #>  [5346,]  103  107  105  114  113  114  112  112  108   114 #>  [5347,]  102  106  104  113  112  113  114  114  110   115 #>  [5348,]  102  106  104  113  112  113  114  114  110   115 #>  [5349,]  102  106  104  113  112  113  114  114  110   115 #>  [5350,]  103  107  105  114  113  114  112  112  108   114 #>  [5351,]  103  107  105  114  113  114  112  112  108   114 #>  [5352,]  102  106  104  113  112  113  114  114  110   115 #>  [5353,]  103  107  105  114  113  114  112  112  108   114 #>  [5354,]  102  106  104  113  112  113  114  114  110   115 #>  [5355,]  102  106  104  113  112  113  114  114  110   115 #>  [5356,]  103  107  105  114  113  114  112  112  108   114 #>  [5357,]  103  107  105  114  113  114  112  112  108   114 #>  [5358,]  103  107  105  114  113  114  112  112  108   114 #>  [5359,]  102  106  104  113  112  113  114  114  110   115 #>  [5360,]  102  106  104  113  112  113  114  114  110   115 #>  [5361,]  103  107  105  114  113  114  112  112  108   114 #>  [5362,]  102  106  104  113  112  113  114  114  110   115 #>  [5363,]  102  106  104  113  112  113  114  114  110   115 #>  [5364,]  103  107  105  114  113  114  112  112  108   114 #>  [5365,]  103  107  105  114  113  114  112  112  108   114 #>  [5366,]  103  107  105  114  113  114  112  112  108   114 #>  [5367,]  102  106  104  113  112  113  114  114  110   115 #>  [5368,]  103  107  105  114  113  114  112  112  108   114 #>  [5369,]  102  106  104  113  112  113  114  114  110   115 #>  [5370,]  102  106  104  113  112  113  114  114  110   115 #>  [5371,]  102  106  104  113  112  113  114  114  110   115 #>  [5372,]  103  107  105  114  113  114  112  112  108   114 #>  [5373,]  102  106  104  113  112  113  113  113  109   115 #>  [5374,]  102  106  104  113  112  113  113  113  109   115 #>  [5375,]  102  106  104  113  112  113  114  114  110   115 #>  [5376,]  103  107  105  114  113  114  112  112  108   114 #>  [5377,]  102  106  104  113  112  113  114  114  110   115 #>  [5378,]  103  107  105  114  113  114  112  112  108   114 #>  [5379,]  102  106  104  113  112  113  114  114  110   115 #>  [5380,]  102  106  104  113  112  113  113  113  109   115 #>  [5381,]  103  107  105  114  113  114  112  112  108   114 #>  [5382,]  102  106  104  113  112  113  113  113  109   115 #>  [5383,]  102  106  104  113  112  113  114  114  110   115 #>  [5384,]  102  106  104  113  112  113  113  113  109   115 #>  [5385,]  102  106  104  113  112  113  113  113  109   115 #>  [5386,]  102  106  104  113  112  113  113  113  109   115 #>  [5387,]  102  106  104  113  112  113  114  114  110   115 #>  [5388,]  102  106  104  113  112  113  114  114  110   115 #>  [5389,]  102  106  104  113  112  113  113  113  109   115 #>  [5390,]  102  106  104  113  112  113  114  114  110   115 #>  [5391,]  102  106  104  113  112  113  114  114  110   115 #>  [5392,]  103  107  105  114  113  114  112  112  108   114 #>  [5393,]  102  106  104  113  112  113  114  114  110   115 #>  [5394,]  103  107  105  114  113  114  112  112  108   114 #>  [5395,]  102  106  104  113  112  113  114  114  110   115 #>  [5396,]  103  107  105  114  113  114  112  112  108   114 #>  [5397,]  103  107  105  114  113  114  112  112  108   114 #>  [5398,]  102  106  104  113  112  113  114  114  110   115 #>  [5399,]  102  106  104  113  112  113  113  113  109   115 #>  [5400,]  102  106  104  113  112  113  114  114  110   115 #>  [5401,]  104  108  106  115  114  115  115  115  111   116 #>  [5402,]  105  109  107  116  115  116  116  116  112   117 #>  [5403,]  104  108  106  115  114  115  115  115  111   116 #>  [5404,]  105  109  107  116  115  116  116  116  112   117 #>  [5405,]  105  109  107  116  115  116  116  116  112   117 #>  [5406,]  104  108  106  115  114  115  115  115  111   116 #>  [5407,]  105  109  107  116  115  116  116  116  112   117 #>  [5408,]  105  109  107  116  115  116  116  116  112   117 #>  [5409,]  105  109  107  116  115  116  116  116  112   117 #>  [5410,]  105  109  107  116  115  116  116  116  112   117 #>  [5411,]  104  108  106  115  114  115  115  115  111   116 #>  [5412,]  105  109  107  116  115  116  116  116  112   117 #>  [5413,]  105  109  107  116  115  116  116  116  112   117 #>  [5414,]  104  108  106  115  114  115  115  115  111   116 #>  [5415,]  105  109  107  116  115  116  116  116  112   117 #>  [5416,]  104  108  106  115  114  115  115  115  111   116 #>  [5417,]  105  109  107  116  115  116  116  116  112   117 #>  [5418,]  105  109  107  116  115  116  116  116  112   117 #>  [5419,]  104  108  106  115  114  115  115  115  111   116 #>  [5420,]  105  109  107  116  115  116  116  116  112   117 #>  [5421,]  105  109  107  116  115  116  116  116  112   117 #>  [5422,]  105  109  107  116  115  116  116  116  112   117 #>  [5423,]  105  109  107  116  115  116  116  116  112   117 #>  [5424,]  105  109  107  116  115  116  116  116  112   117 #>  [5425,]  105  109  107  116  115  116  116  116  112   117 #>  [5426,]  104  108  106  115  114  115  115  115  111   116 #>  [5427,]  105  109  107  116  115  116  116  116  112   117 #>  [5428,]  104  108  106  115  114  115  115  115  111   116 #>  [5429,]  105  109  107  116  115  116  116  116  112   117 #>  [5430,]  105  109  107  116  115  116  116  116  112   117 #>  [5431,]  105  109  107  116  115  116  116  116  112   117 #>  [5432,]  105  109  107  116  115  116  116  116  112   117 #>  [5433,]  105  109  107  116  115  116  116  116  112   117 #>  [5434,]  104  108  106  115  114  115  115  115  111   116 #>  [5435,]  104  108  106  115  114  115  115  115  111   116 #>  [5436,]  105  109  107  116  115  116  116  116  112   117 #>  [5437,]  104  108  106  115  114  115  115  115  111   116 #>  [5438,]  104  108  106  115  114  115  115  115  111   116 #>  [5439,]  105  109  107  116  115  116  116  116  112   117 #>  [5440,]  105  109  107  116  115  116  116  116  112   117 #>  [5441,]  105  109  107  116  115  116  116  116  112   117 #>  [5442,]  104  108  106  115  114  115  115  115  111   116 #>  [5443,]  105  109  107  116  115  116  116  116  112   117 #>  [5444,]  105  109  107  116  115  116  116  116  112   117 #>  [5445,]  104  108  106  115  114  115  115  115  111   116 #>  [5446,]  105  109  107  116  115  116  116  116  112   117 #>  [5447,]  105  109  107  116  115  116  116  116  112   117 #>  [5448,]  105  109  107  116  115  116  116  116  112   117 #>  [5449,]  104  108  106  115  114  115  115  115  111   116 #>  [5450,]  105  109  107  116  115  116  116  116  112   117 #>  [5451,]  105  109  107  116  115  116  116  116  112   117 #>  [5452,]  104  108  106  115  114  115  115  115  111   116 #>  [5453,]  105  109  107  116  115  116  116  116  112   117 #>  [5454,]  105  109  107  116  115  116  116  116  112   117 #>  [5455,]  105  109  107  116  115  116  116  116  112   117 #>  [5456,]  105  109  107  116  115  116  116  116  112   117 #>  [5457,]  105  109  107  116  115  116  116  116  112   117 #>  [5458,]  105  109  107  116  115  116  116  116  112   117 #>  [5459,]  104  108  106  115  114  115  115  115  111   116 #>  [5460,]  105  109  107  116  115  116  116  116  112   117 #>  [5461,]  105  109  107  116  115  116  116  116  112   117 #>  [5462,]  105  109  107  116  115  116  116  116  112   117 #>  [5463,]  105  109  107  116  115  116  116  116  112   117 #>  [5464,]  104  108  106  115  114  115  115  115  111   116 #>  [5465,]  104  108  106  115  114  115  115  115  111   116 #>  [5466,]  105  109  107  116  115  116  116  116  112   117 #>  [5467,]  105  109  107  116  115  116  116  116  112   117 #>  [5468,]  104  108  106  115  114  115  115  115  111   116 #>  [5469,]  105  109  107  116  115  116  116  116  112   117 #>  [5470,]  105  109  107  116  115  116  116  116  112   117 #>  [5471,]  105  109  107  116  115  116  116  116  112   117 #>  [5472,]  104  108  106  115  114  115  115  115  111   116 #>  [5473,]  104  108  106  115  114  115  115  115  111   116 #>  [5474,]  105  109  107  116  115  116  116  116  112   117 #>  [5475,]  105  109  107  116  115  116  116  116  112   117 #>  [5476,]  105  109  107  116  115  116  116  116  112   117 #>  [5477,]  104  108  106  115  114  115  115  115  111   116 #>  [5478,]  105  109  107  116  115  116  116  116  112   117 #>  [5479,]  104  108  106  115  114  115  115  115  111   116 #>  [5480,]  105  109  107  116  115  116  116  116  112   117 #>  [5481,]  105  109  107  116  115  116  116  116  112   117 #>  [5482,]  105  109  107  116  115  116  116  116  112   117 #>  [5483,]  105  109  107  116  115  116  116  116  112   117 #>  [5484,]  105  109  107  116  115  116  116  116  112   117 #>  [5485,]  105  109  107  116  115  116  116  116  112   117 #>  [5486,]  105  109  107  116  115  116  116  116  112   117 #>  [5487,]  105  109  107  116  115  116  116  116  112   117 #>  [5488,]  105  109  107  116  115  116  116  116  112   117 #>  [5489,]  104  108  106  115  114  115  115  115  111   116 #>  [5490,]  105  109  107  116  115  116  116  116  112   117 #>  [5491,]  105  109  107  116  115  116  116  116  112   117 #>  [5492,]  105  109  107  116  115  116  116  116  112   117 #>  [5493,]  105  109  107  116  115  116  116  116  112   117 #>  [5494,]  104  108  106  115  114  115  115  115  111   116 #>  [5495,]  105  109  107  116  115  116  116  116  112   117 #>  [5496,]  104  108  106  115  114  115  115  115  111   116 #>  [5497,]  104  108  106  115  114  115  115  115  111   116 #>  [5498,]  105  109  107  116  115  116  116  116  112   117 #>  [5499,]  105  109  107  116  115  116  116  116  112   117 #>  [5500,]  104  108  106  115  114  115  115  115  111   116 #>  [5501,]  107  111  109  118  117  118  118  118  114   119 #>  [5502,]  107  111  109  118  117  118  118  118  114   119 #>  [5503,]  106  110  108  117  116  117  117  117  113   118 #>  [5504,]  107  111  109  118  117  118  118  118  114   119 #>  [5505,]  107  111  109  118  117  118  118  118  114   119 #>  [5506,]  107  111  109  118  117  118  118  118  114   119 #>  [5507,]  106  110  108  117  116  117  117  117  113   118 #>  [5508,]  106  110  108  117  116  117  117  117  113   118 #>  [5509,]  107  111  109  118  117  118  118  118  114   119 #>  [5510,]  107  111  109  118  117  118  118  118  114   119 #>  [5511,]  107  111  109  118  117  118  118  118  114   119 #>  [5512,]  107  111  109  118  117  118  118  118  114   119 #>  [5513,]  107  111  109  118  117  118  118  118  114   119 #>  [5514,]  107  111  109  118  117  118  118  118  114   119 #>  [5515,]  107  111  109  118  117  118  118  118  114   119 #>  [5516,]  107  111  109  118  117  118  118  118  114   119 #>  [5517,]  107  111  109  118  117  118  118  118  114   119 #>  [5518,]  107  111  109  118  117  118  118  118  114   119 #>  [5519,]  107  111  109  118  117  118  118  118  114   119 #>  [5520,]  106  110  108  117  116  117  117  117  113   118 #>  [5521,]  107  111  109  118  117  118  118  118  114   119 #>  [5522,]  107  111  109  118  117  118  118  118  114   119 #>  [5523,]  107  111  109  118  117  118  118  118  114   119 #>  [5524,]  107  111  109  118  117  118  118  118  114   119 #>  [5525,]  106  110  108  117  116  117  117  117  113   118 #>  [5526,]  107  111  109  118  117  118  118  118  114   119 #>  [5527,]  107  111  109  118  117  118  118  118  114   119 #>  [5528,]  107  111  109  118  117  118  118  118  114   119 #>  [5529,]  107  111  109  118  117  118  118  118  114   119 #>  [5530,]  107  111  109  118  117  118  118  118  114   119 #>  [5531,]  107  111  109  118  117  118  118  118  114   119 #>  [5532,]  107  111  109  118  117  118  118  118  114   119 #>  [5533,]  107  111  109  118  117  118  118  118  114   119 #>  [5534,]  107  111  109  118  117  118  118  118  114   119 #>  [5535,]  107  111  109  118  117  118  118  118  114   119 #>  [5536,]  107  111  109  118  117  118  118  118  114   119 #>  [5537,]  107  111  109  118  117  118  118  118  114   119 #>  [5538,]  107  111  109  118  117  118  118  118  114   119 #>  [5539,]  106  110  108  117  116  117  117  117  113   118 #>  [5540,]  107  111  109  118  117  118  118  118  114   119 #>  [5541,]  107  111  109  118  117  118  118  118  114   119 #>  [5542,]  107  111  109  118  117  118  118  118  114   119 #>  [5543,]  107  111  109  118  117  118  118  118  114   119 #>  [5544,]  106  110  108  117  116  117  117  117  113   118 #>  [5545,]  107  111  109  118  117  118  118  118  114   119 #>  [5546,]  106  110  108  117  116  117  117  117  113   118 #>  [5547,]  107  111  109  118  117  118  118  118  114   119 #>  [5548,]  107  111  109  118  117  118  118  118  114   119 #>  [5549,]  106  110  108  117  116  117  117  117  113   118 #>  [5550,]  106  110  108  117  116  117  117  117  113   118 #>  [5551,]  107  111  109  118  117  118  118  118  114   119 #>  [5552,]  107  111  109  118  117  118  118  118  114   119 #>  [5553,]  106  110  108  117  116  117  117  117  113   118 #>  [5554,]  107  111  109  118  117  118  118  118  114   119 #>  [5555,]  106  110  108  117  116  117  117  117  113   118 #>  [5556,]  106  110  108  117  116  117  117  117  113   118 #>  [5557,]  107  111  109  118  117  118  118  118  114   119 #>  [5558,]  107  111  109  118  117  118  118  118  114   119 #>  [5559,]  106  110  108  117  116  117  117  117  113   118 #>  [5560,]  107  111  109  118  117  118  118  118  114   119 #>  [5561,]  107  111  109  118  117  118  118  118  114   119 #>  [5562,]  107  111  109  118  117  118  118  118  114   119 #>  [5563,]  107  111  109  118  117  118  118  118  114   119 #>  [5564,]  107  111  109  118  117  118  118  118  114   119 #>  [5565,]  106  110  108  117  116  117  117  117  113   118 #>  [5566,]  106  110  108  117  116  117  117  117  113   118 #>  [5567,]  107  111  109  118  117  118  118  118  114   119 #>  [5568,]  107  111  109  118  117  118  118  118  114   119 #>  [5569,]  107  111  109  118  117  118  118  118  114   119 #>  [5570,]  106  110  108  117  116  117  117  117  113   118 #>  [5571,]  107  111  109  118  117  118  118  118  114   119 #>  [5572,]  106  110  108  117  116  117  117  117  113   118 #>  [5573,]  107  111  109  118  117  118  118  118  114   119 #>  [5574,]  107  111  109  118  117  118  118  118  114   119 #>  [5575,]  107  111  109  118  117  118  118  118  114   119 #>  [5576,]  107  111  109  118  117  118  118  118  114   119 #>  [5577,]  107  111  109  118  117  118  118  118  114   119 #>  [5578,]  107  111  109  118  117  118  118  118  114   119 #>  [5579,]  107  111  109  118  117  118  118  118  114   119 #>  [5580,]  107  111  109  118  117  118  118  118  114   119 #>  [5581,]  107  111  109  118  117  118  118  118  114   119 #>  [5582,]  107  111  109  118  117  118  118  118  114   119 #>  [5583,]  107  111  109  118  117  118  118  118  114   119 #>  [5584,]  106  110  108  117  116  117  117  117  113   118 #>  [5585,]  107  111  109  118  117  118  118  118  114   119 #>  [5586,]  106  110  108  117  116  117  117  117  113   118 #>  [5587,]  107  111  109  118  117  118  118  118  114   119 #>  [5588,]  107  111  109  118  117  118  118  118  114   119 #>  [5589,]  107  111  109  118  117  118  118  118  114   119 #>  [5590,]  106  110  108  117  116  117  117  117  113   118 #>  [5591,]  107  111  109  118  117  118  118  118  114   119 #>  [5592,]  107  111  109  118  117  118  118  118  114   119 #>  [5593,]  107  111  109  118  117  118  118  118  114   119 #>  [5594,]  107  111  109  118  117  118  118  118  114   119 #>  [5595,]  107  111  109  118  117  118  118  118  114   119 #>  [5596,]  107  111  109  118  117  118  118  118  114   119 #>  [5597,]  107  111  109  118  117  118  118  118  114   119 #>  [5598,]  106  110  108  117  116  117  117  117  113   118 #>  [5599,]  107  111  109  118  117  118  118  118  114   119 #>  [5600,]  106  110  108  117  116  117  117  117  113   118 #>  [5601,]  109  113  110  119  118  119  119  119  115   120 #>  [5602,]  109  113  110  119  118  119  119  119  115   120 #>  [5603,]  108  112  111  120  119  120  120  120  116   121 #>  [5604,]  108  112  111  120  119  120  120  120  116   121 #>  [5605,]  109  113  110  119  118  119  119  119  115   120 #>  [5606,]  109  113  110  119  118  119  119  119  115   120 #>  [5607,]  108  112  111  120  119  120  120  120  116   121 #>  [5608,]  108  112  112  121  120  120  120  120  116   121 #>  [5609,]  109  113  110  119  118  119  119  119  115   120 #>  [5610,]  108  112  111  120  119  120  120  120  116   121 #>  [5611,]  109  113  110  119  118  119  119  119  115   120 #>  [5612,]  108  112  111  120  119  120  120  120  116   121 #>  [5613,]  109  113  110  119  118  119  119  119  115   120 #>  [5614,]  108  112  111  120  119  120  120  120  116   121 #>  [5615,]  109  113  110  119  118  119  119  119  115   120 #>  [5616,]  108  112  111  120  119  120  120  120  116   121 #>  [5617,]  109  113  110  119  118  119  119  119  115   120 #>  [5618,]  109  113  110  119  118  119  119  119  115   120 #>  [5619,]  109  113  110  119  118  119  119  119  115   120 #>  [5620,]  109  113  110  119  118  119  119  119  115   120 #>  [5621,]  109  113  110  119  118  119  119  119  115   120 #>  [5622,]  109  113  110  119  118  119  119  119  115   120 #>  [5623,]  108  112  111  120  119  120  120  120  116   121 #>  [5624,]  109  113  110  119  118  119  119  119  115   120 #>  [5625,]  108  112  111  120  119  120  120  120  116   121 #>  [5626,]  108  112  112  121  120  120  120  120  116   121 #>  [5627,]  109  113  110  119  118  119  119  119  115   120 #>  [5628,]  109  113  110  119  118  119  119  119  115   120 #>  [5629,]  109  113  110  119  118  119  119  119  115   120 #>  [5630,]  109  113  110  119  118  119  119  119  115   120 #>  [5631,]  108  112  111  120  119  120  120  120  116   121 #>  [5632,]  108  112  111  120  119  120  120  120  116   121 #>  [5633,]  109  113  110  119  118  119  119  119  115   120 #>  [5634,]  109  113  110  119  118  119  119  119  115   120 #>  [5635,]  108  112  111  120  119  120  120  120  116   121 #>  [5636,]  109  113  110  119  118  119  119  119  115   120 #>  [5637,]  108  112  112  121  120  120  120  120  116   121 #>  [5638,]  109  113  110  119  118  119  119  119  115   120 #>  [5639,]  109  113  110  119  118  119  119  119  115   120 #>  [5640,]  108  112  111  120  119  120  120  120  116   121 #>  [5641,]  109  113  110  119  118  119  119  119  115   120 #>  [5642,]  109  113  110  119  118  119  119  119  115   120 #>  [5643,]  109  113  110  119  118  119  119  119  115   120 #>  [5644,]  108  112  111  120  119  120  120  120  116   121 #>  [5645,]  108  112  111  120  119  120  120  120  116   121 #>  [5646,]  108  112  112  121  120  120  120  120  116   121 #>  [5647,]  108  112  111  120  119  120  120  120  116   121 #>  [5648,]  109  113  110  119  118  119  119  119  115   120 #>  [5649,]  109  113  110  119  118  119  119  119  115   120 #>  [5650,]  109  113  110  119  118  119  119  119  115   120 #>  [5651,]  109  113  110  119  118  119  119  119  115   120 #>  [5652,]  108  112  111  120  119  120  120  120  116   121 #>  [5653,]  109  113  110  119  118  119  119  119  115   120 #>  [5654,]  109  113  110  119  118  119  119  119  115   120 #>  [5655,]  108  112  112  121  120  120  120  120  116   121 #>  [5656,]  109  113  110  119  118  119  119  119  115   120 #>  [5657,]  108  112  111  120  119  120  120  120  116   121 #>  [5658,]  109  113  110  119  118  119  119  119  115   120 #>  [5659,]  108  112  112  121  120  120  120  120  116   121 #>  [5660,]  108  112  112  121  120  120  120  120  116   121 #>  [5661,]  109  113  110  119  118  119  119  119  115   120 #>  [5662,]  109  113  110  119  118  119  119  119  115   120 #>  [5663,]  109  113  110  119  118  119  119  119  115   120 #>  [5664,]  109  113  110  119  118  119  119  119  115   120 #>  [5665,]  109  113  110  119  118  119  119  119  115   120 #>  [5666,]  109  113  110  119  118  119  119  119  115   120 #>  [5667,]  108  112  111  120  119  120  120  120  116   121 #>  [5668,]  108  112  111  120  119  120  120  120  116   121 #>  [5669,]  109  113  110  119  118  119  119  119  115   120 #>  [5670,]  109  113  110  119  118  119  119  119  115   120 #>  [5671,]  109  113  110  119  118  119  119  119  115   120 #>  [5672,]  108  112  111  120  119  120  120  120  116   121 #>  [5673,]  109  113  110  119  118  119  119  119  115   120 #>  [5674,]  108  112  111  120  119  120  120  120  116   121 #>  [5675,]  108  112  111  120  119  120  120  120  116   121 #>  [5676,]  108  112  111  120  119  120  120  120  116   121 #>  [5677,]  109  113  110  119  118  119  119  119  115   120 #>  [5678,]  108  112  111  120  119  120  120  120  116   121 #>  [5679,]  109  113  110  119  118  119  119  119  115   120 #>  [5680,]  108  112  112  121  120  120  120  120  116   121 #>  [5681,]  109  113  110  119  118  119  119  119  115   120 #>  [5682,]  109  113  110  119  118  119  119  119  115   120 #>  [5683,]  109  113  110  119  118  119  119  119  115   120 #>  [5684,]  109  113  110  119  118  119  119  119  115   120 #>  [5685,]  109  113  110  119  118  119  119  119  115   120 #>  [5686,]  108  112  111  120  119  120  120  120  116   121 #>  [5687,]  109  113  110  119  118  119  119  119  115   120 #>  [5688,]  108  112  111  120  119  120  120  120  116   121 #>  [5689,]  109  113  110  119  118  119  119  119  115   120 #>  [5690,]  109  113  110  119  118  119  119  119  115   120 #>  [5691,]  109  113  110  119  118  119  119  119  115   120 #>  [5692,]  108  112  111  120  119  120  120  120  116   121 #>  [5693,]  109  113  110  119  118  119  119  119  115   120 #>  [5694,]  109  113  110  119  118  119  119  119  115   120 #>  [5695,]  108  112  112  121  120  120  120  120  116   121 #>  [5696,]  108  112  112  121  120  120  120  120  116   121 #>  [5697,]  108  112  112  121  120  120  120  120  116   121 #>  [5698,]  108  112  111  120  119  120  120  120  116   121 #>  [5699,]  109  113  110  119  118  119  119  119  115   120 #>  [5700,]  109  113  110  119  118  119  119  119  115   120 #>  [5701,]  111  115  114  123  123  123  123  123  119   123 #>  [5702,]  111  115  114  123  123  123  123  123  119   123 #>  [5703,]  110  114  113  122  121  121  121  121  117   122 #>  [5704,]  111  115  114  123  123  123  123  123  119   123 #>  [5705,]  111  115  114  123  122  122  122  122  118   123 #>  [5706,]  110  114  113  122  121  121  121  121  117   122 #>  [5707,]  111  115  114  123  123  123  123  123  119   123 #>  [5708,]  111  115  114  123  123  123  123  123  119   123 #>  [5709,]  111  115  114  123  123  123  123  123  119   123 #>  [5710,]  111  115  114  123  123  123  123  123  119   123 #>  [5711,]  111  115  114  123  122  122  122  122  118   123 #>  [5712,]  111  115  114  123  122  122  122  122  118   123 #>  [5713,]  111  115  114  123  123  123  123  123  119   123 #>  [5714,]  111  115  114  123  122  122  122  122  118   123 #>  [5715,]  111  115  114  123  123  123  123  123  119   123 #>  [5716,]  111  115  114  123  123  123  123  123  119   123 #>  [5717,]  111  115  114  123  123  123  123  123  119   123 #>  [5718,]  111  115  114  123  123  123  123  123  119   123 #>  [5719,]  110  114  113  122  121  121  121  121  117   122 #>  [5720,]  111  115  114  123  122  122  122  122  118   123 #>  [5721,]  111  115  114  123  123  123  123  123  119   123 #>  [5722,]  111  115  114  123  122  122  122  122  118   123 #>  [5723,]  111  115  114  123  123  123  123  123  119   123 #>  [5724,]  111  115  114  123  122  122  122  122  118   123 #>  [5725,]  111  115  114  123  123  123  123  123  119   123 #>  [5726,]  111  115  114  123  122  122  122  122  118   123 #>  [5727,]  111  115  114  123  123  123  123  123  119   123 #>  [5728,]  111  115  114  123  123  123  123  123  119   123 #>  [5729,]  111  115  114  123  122  122  122  122  118   123 #>  [5730,]  111  115  114  123  122  122  122  122  118   123 #>  [5731,]  111  115  114  123  123  123  123  123  119   123 #>  [5732,]  111  115  114  123  122  122  122  122  118   123 #>  [5733,]  111  115  114  123  122  122  122  122  118   123 #>  [5734,]  110  114  113  122  121  121  121  121  117   122 #>  [5735,]  111  115  114  123  122  122  122  122  118   123 #>  [5736,]  111  115  114  123  122  122  122  122  118   123 #>  [5737,]  110  114  113  122  121  121  121  121  117   122 #>  [5738,]  110  114  113  122  121  121  121  121  117   122 #>  [5739,]  111  115  114  123  123  123  123  123  119   123 #>  [5740,]  111  115  114  123  122  122  122  122  118   123 #>  [5741,]  111  115  114  123  122  122  122  122  118   123 #>  [5742,]  111  115  114  123  122  122  122  122  118   123 #>  [5743,]  111  115  114  123  123  123  123  123  119   123 #>  [5744,]  111  115  114  123  123  123  123  123  119   123 #>  [5745,]  110  114  113  122  121  121  121  121  117   122 #>  [5746,]  111  115  114  123  123  123  123  123  119   123 #>  [5747,]  111  115  114  123  123  123  123  123  119   123 #>  [5748,]  111  115  114  123  122  122  122  122  118   123 #>  [5749,]  110  114  113  122  121  121  121  121  117   122 #>  [5750,]  111  115  114  123  123  123  123  123  119   123 #>  [5751,]  111  115  114  123  122  122  122  122  118   123 #>  [5752,]  110  114  113  122  121  121  121  121  117   122 #>  [5753,]  111  115  114  123  123  123  123  123  119   123 #>  [5754,]  111  115  114  123  122  122  122  122  118   123 #>  [5755,]  111  115  114  123  122  122  122  122  118   123 #>  [5756,]  111  115  114  123  123  123  123  123  119   123 #>  [5757,]  111  115  114  123  122  122  122  122  118   123 #>  [5758,]  111  115  114  123  122  122  122  122  118   123 #>  [5759,]  111  115  114  123  123  123  123  123  119   123 #>  [5760,]  111  115  114  123  122  122  122  122  118   123 #>  [5761,]  111  115  114  123  123  123  123  123  119   123 #>  [5762,]  111  115  114  123  122  122  122  122  118   123 #>  [5763,]  111  115  114  123  122  122  122  122  118   123 #>  [5764,]  111  115  114  123  123  123  123  123  119   123 #>  [5765,]  111  115  114  123  123  123  123  123  119   123 #>  [5766,]  111  115  114  123  122  122  122  122  118   123 #>  [5767,]  111  115  114  123  122  122  122  122  118   123 #>  [5768,]  110  114  113  122  121  121  121  121  117   122 #>  [5769,]  111  115  114  123  122  122  122  122  118   123 #>  [5770,]  111  115  114  123  123  123  123  123  119   123 #>  [5771,]  111  115  114  123  123  123  123  123  119   123 #>  [5772,]  110  114  113  122  121  121  121  121  117   122 #>  [5773,]  111  115  114  123  123  123  123  123  119   123 #>  [5774,]  111  115  114  123  123  123  123  123  119   123 #>  [5775,]  111  115  114  123  123  123  123  123  119   123 #>  [5776,]  111  115  114  123  123  123  123  123  119   123 #>  [5777,]  111  115  114  123  123  123  123  123  119   123 #>  [5778,]  111  115  114  123  122  122  122  122  118   123 #>  [5779,]  111  115  114  123  123  123  123  123  119   123 #>  [5780,]  111  115  114  123  122  122  122  122  118   123 #>  [5781,]  111  115  114  123  122  122  122  122  118   123 #>  [5782,]  111  115  114  123  123  123  123  123  119   123 #>  [5783,]  111  115  114  123  122  122  122  122  118   123 #>  [5784,]  111  115  114  123  123  123  123  123  119   123 #>  [5785,]  111  115  114  123  123  123  123  123  119   123 #>  [5786,]  111  115  114  123  123  123  123  123  119   123 #>  [5787,]  111  115  114  123  123  123  123  123  119   123 #>  [5788,]  111  115  114  123  123  123  123  123  119   123 #>  [5789,]  111  115  114  123  122  122  122  122  118   123 #>  [5790,]  111  115  114  123  123  123  123  123  119   123 #>  [5791,]  111  115  114  123  122  122  122  122  118   123 #>  [5792,]  111  115  114  123  123  123  123  123  119   123 #>  [5793,]  111  115  114  123  122  122  122  122  118   123 #>  [5794,]  111  115  114  123  123  123  123  123  119   123 #>  [5795,]  111  115  114  123  123  123  123  123  119   123 #>  [5796,]  110  114  113  122  121  121  121  121  117   122 #>  [5797,]  111  115  114  123  122  122  122  122  118   123 #>  [5798,]  111  115  114  123  122  122  122  122  118   123 #>  [5799,]  111  115  114  123  122  122  122  122  118   123 #>  [5800,]  111  115  114  123  123  123  123  123  119   123 #>  [5801,]  113  117  116  125  125  125  125  125  121   125 #>  [5802,]  113  117  116  125  125  125  125  125  121   125 #>  [5803,]  112  116  115  124  124  124  124  124  120   124 #>  [5804,]  113  117  116  125  125  125  125  125  121   125 #>  [5805,]  112  116  115  124  124  124  124  124  120   124 #>  [5806,]  112  116  115  124  124  124  124  124  120   124 #>  [5807,]  113  117  116  125  125  125  125  125  121   125 #>  [5808,]  113  117  116  125  125  125  125  125  121   125 #>  [5809,]  113  117  116  125  125  125  125  125  121   125 #>  [5810,]  113  117  116  125  125  125  125  125  121   125 #>  [5811,]  112  116  115  124  124  124  124  124  120   124 #>  [5812,]  112  116  115  124  124  124  124  124  120   124 #>  [5813,]  113  117  116  125  125  125  125  125  121   125 #>  [5814,]  112  116  115  124  124  124  124  124  120   124 #>  [5815,]  113  117  116  125  125  125  125  125  121   125 #>  [5816,]  113  117  116  125  125  125  125  125  121   125 #>  [5817,]  113  117  116  125  125  125  125  125  121   125 #>  [5818,]  113  117  116  125  125  125  125  125  121   125 #>  [5819,]  112  116  115  124  124  124  124  124  120   124 #>  [5820,]  112  116  115  124  124  124  124  124  120   124 #>  [5821,]  113  117  116  125  125  125  125  125  121   125 #>  [5822,]  112  116  115  124  124  124  124  124  120   124 #>  [5823,]  113  117  116  125  125  125  125  125  121   125 #>  [5824,]  112  116  115  124  124  124  124  124  120   124 #>  [5825,]  113  117  116  125  125  125  125  125  121   125 #>  [5826,]  112  116  115  124  124  124  124  124  120   124 #>  [5827,]  113  117  116  125  125  125  125  125  121   125 #>  [5828,]  113  117  116  125  125  125  125  125  121   125 #>  [5829,]  112  116  115  124  124  124  124  124  120   124 #>  [5830,]  112  116  115  124  124  124  124  124  120   124 #>  [5831,]  113  117  116  125  125  125  125  125  121   125 #>  [5832,]  112  116  115  124  124  124  124  124  120   124 #>  [5833,]  112  116  115  124  124  124  124  124  120   124 #>  [5834,]  112  116  115  124  124  124  124  124  120   124 #>  [5835,]  112  116  115  124  124  124  124  124  120   124 #>  [5836,]  112  116  115  124  124  124  124  124  120   124 #>  [5837,]  113  117  116  125  125  125  125  125  121   125 #>  [5838,]  113  117  116  125  125  125  125  125  121   125 #>  [5839,]  113  117  116  125  125  125  125  125  121   125 #>  [5840,]  112  116  115  124  124  124  124  124  120   124 #>  [5841,]  112  116  115  124  124  124  124  124  120   124 #>  [5842,]  112  116  115  124  124  124  124  124  120   124 #>  [5843,]  113  117  116  125  125  125  125  125  121   125 #>  [5844,]  113  117  116  125  125  125  125  125  121   125 #>  [5845,]  113  117  116  125  125  125  125  125  121   125 #>  [5846,]  113  117  116  125  125  125  125  125  121   125 #>  [5847,]  113  117  116  125  125  125  125  125  121   125 #>  [5848,]  112  116  115  124  124  124  124  124  120   124 #>  [5849,]  113  117  116  125  125  125  125  125  121   125 #>  [5850,]  113  117  116  125  125  125  125  125  121   125 #>  [5851,]  112  116  115  124  124  124  124  124  120   124 #>  [5852,]  112  116  115  124  124  124  124  124  120   124 #>  [5853,]  113  117  116  125  125  125  125  125  121   125 #>  [5854,]  112  116  115  124  124  124  124  124  120   124 #>  [5855,]  112  116  115  124  124  124  124  124  120   124 #>  [5856,]  113  117  116  125  125  125  125  125  121   125 #>  [5857,]  112  116  115  124  124  124  124  124  120   124 #>  [5858,]  112  116  115  124  124  124  124  124  120   124 #>  [5859,]  113  117  116  125  125  125  125  125  121   125 #>  [5860,]  112  116  115  124  124  124  124  124  120   124 #>  [5861,]  113  117  116  125  125  125  125  125  121   125 #>  [5862,]  112  116  115  124  124  124  124  124  120   124 #>  [5863,]  112  116  115  124  124  124  124  124  120   124 #>  [5864,]  113  117  116  125  125  125  125  125  121   125 #>  [5865,]  113  117  116  125  125  125  125  125  121   125 #>  [5866,]  112  116  115  124  124  124  124  124  120   124 #>  [5867,]  112  116  115  124  124  124  124  124  120   124 #>  [5868,]  112  116  115  124  124  124  124  124  120   124 #>  [5869,]  112  116  115  124  124  124  124  124  120   124 #>  [5870,]  113  117  116  125  125  125  125  125  121   125 #>  [5871,]  113  117  116  125  125  125  125  125  121   125 #>  [5872,]  113  117  116  125  125  125  125  125  121   125 #>  [5873,]  113  117  116  125  125  125  125  125  121   125 #>  [5874,]  113  117  116  125  125  125  125  125  121   125 #>  [5875,]  113  117  116  125  125  125  125  125  121   125 #>  [5876,]  113  117  116  125  125  125  125  125  121   125 #>  [5877,]  113  117  116  125  125  125  125  125  121   125 #>  [5878,]  112  116  115  124  124  124  124  124  120   124 #>  [5879,]  113  117  116  125  125  125  125  125  121   125 #>  [5880,]  112  116  115  124  124  124  124  124  120   124 #>  [5881,]  112  116  115  124  124  124  124  124  120   124 #>  [5882,]  113  117  116  125  125  125  125  125  121   125 #>  [5883,]  112  116  115  124  124  124  124  124  120   124 #>  [5884,]  113  117  116  125  125  125  125  125  121   125 #>  [5885,]  113  117  116  125  125  125  125  125  121   125 #>  [5886,]  113  117  116  125  125  125  125  125  121   125 #>  [5887,]  113  117  116  125  125  125  125  125  121   125 #>  [5888,]  113  117  116  125  125  125  125  125  121   125 #>  [5889,]  112  116  115  124  124  124  124  124  120   124 #>  [5890,]  113  117  116  125  125  125  125  125  121   125 #>  [5891,]  112  116  115  124  124  124  124  124  120   124 #>  [5892,]  113  117  116  125  125  125  125  125  121   125 #>  [5893,]  112  116  115  124  124  124  124  124  120   124 #>  [5894,]  113  117  116  125  125  125  125  125  121   125 #>  [5895,]  113  117  116  125  125  125  125  125  121   125 #>  [5896,]  113  117  116  125  125  125  125  125  121   125 #>  [5897,]  112  116  115  124  124  124  124  124  120   124 #>  [5898,]  112  116  115  124  124  124  124  124  120   124 #>  [5899,]  112  116  115  124  124  124  124  124  120   124 #>  [5900,]  113  117  116  125  125  125  125  125  121   125 #>  [5901,]  114  118  117  126  126  126  126  126  122   126 #>  [5902,]  114  118  117  126  126  126  126  126  122   126 #>  [5903,]  114  118  117  126  126  126  126  126  122   126 #>  [5904,]  115  119  118  127  127  127  127  127  123   127 #>  [5905,]  114  118  117  126  126  126  126  126  122   126 #>  [5906,]  114  118  117  126  126  126  126  126  122   126 #>  [5907,]  114  118  117  126  126  126  126  126  122   126 #>  [5908,]  114  118  117  126  126  126  126  126  122   126 #>  [5909,]  114  118  117  126  126  126  126  126  122   126 #>  [5910,]  114  118  117  126  126  126  126  126  122   126 #>  [5911,]  114  118  117  126  126  126  126  126  122   126 #>  [5912,]  114  118  117  126  126  126  126  126  122   126 #>  [5913,]  114  118  117  126  126  126  126  126  122   126 #>  [5914,]  115  119  118  127  127  127  127  127  123   127 #>  [5915,]  114  118  117  126  126  126  126  126  122   126 #>  [5916,]  114  118  117  126  126  126  126  126  122   126 #>  [5917,]  114  118  117  126  126  126  126  126  122   126 #>  [5918,]  114  118  117  126  126  126  126  126  122   126 #>  [5919,]  114  118  117  126  126  126  126  126  122   126 #>  [5920,]  114  118  117  126  126  126  126  126  122   126 #>  [5921,]  114  118  117  126  126  126  126  126  122   126 #>  [5922,]  114  118  117  126  126  126  126  126  122   126 #>  [5923,]  114  118  117  126  126  126  126  126  122   126 #>  [5924,]  114  118  117  126  126  126  126  126  122   126 #>  [5925,]  114  118  117  126  126  126  126  126  122   126 #>  [5926,]  114  118  117  126  126  126  126  126  122   126 #>  [5927,]  114  118  117  126  126  126  126  126  122   126 #>  [5928,]  114  118  117  126  126  126  126  126  122   126 #>  [5929,]  114  118  117  126  126  126  126  126  122   126 #>  [5930,]  114  118  117  126  126  126  126  126  122   126 #>  [5931,]  114  118  117  126  126  126  126  126  122   126 #>  [5932,]  114  118  117  126  126  126  126  126  122   126 #>  [5933,]  114  118  117  126  126  126  126  126  122   126 #>  [5934,]  114  118  117  126  126  126  126  126  122   126 #>  [5935,]  114  118  117  126  126  126  126  126  122   126 #>  [5936,]  114  118  117  126  126  126  126  126  122   126 #>  [5937,]  114  118  117  126  126  126  126  126  122   126 #>  [5938,]  114  118  117  126  126  126  126  126  122   126 #>  [5939,]  114  118  117  126  126  126  126  126  122   126 #>  [5940,]  114  118  117  126  126  126  126  126  122   126 #>  [5941,]  114  118  117  126  126  126  126  126  122   126 #>  [5942,]  114  118  117  126  126  126  126  126  122   126 #>  [5943,]  114  118  117  126  126  126  126  126  122   126 #>  [5944,]  114  118  117  126  126  126  126  126  122   126 #>  [5945,]  114  118  117  126  126  126  126  126  122   126 #>  [5946,]  114  118  117  126  126  126  126  126  122   126 #>  [5947,]  114  118  117  126  126  126  126  126  122   126 #>  [5948,]  114  118  117  126  126  126  126  126  122   126 #>  [5949,]  114  118  117  126  126  126  126  126  122   126 #>  [5950,]  114  118  117  126  126  126  126  126  122   126 #>  [5951,]  114  118  117  126  126  126  126  126  122   126 #>  [5952,]  114  118  117  126  126  126  126  126  122   126 #>  [5953,]  114  118  117  126  126  126  126  126  122   126 #>  [5954,]  114  118  117  126  126  126  126  126  122   126 #>  [5955,]  114  118  117  126  126  126  126  126  122   126 #>  [5956,]  114  118  117  126  126  126  126  126  122   126 #>  [5957,]  114  118  117  126  126  126  126  126  122   126 #>  [5958,]  114  118  117  126  126  126  126  126  122   126 #>  [5959,]  114  118  117  126  126  126  126  126  122   126 #>  [5960,]  114  118  117  126  126  126  126  126  122   126 #>  [5961,]  115  119  118  127  127  127  127  127  123   127 #>  [5962,]  114  118  117  126  126  126  126  126  122   126 #>  [5963,]  114  118  117  126  126  126  126  126  122   126 #>  [5964,]  114  118  117  126  126  126  126  126  122   126 #>  [5965,]  114  118  117  126  126  126  126  126  122   126 #>  [5966,]  114  118  117  126  126  126  126  126  122   126 #>  [5967,]  114  118  117  126  126  126  126  126  122   126 #>  [5968,]  114  118  117  126  126  126  126  126  122   126 #>  [5969,]  114  118  117  126  126  126  126  126  122   126 #>  [5970,]  114  118  117  126  126  126  126  126  122   126 #>  [5971,]  114  118  117  126  126  126  126  126  122   126 #>  [5972,]  114  118  117  126  126  126  126  126  122   126 #>  [5973,]  114  118  117  126  126  126  126  126  122   126 #>  [5974,]  114  118  117  126  126  126  126  126  122   126 #>  [5975,]  114  118  117  126  126  126  126  126  122   126 #>  [5976,]  114  118  117  126  126  126  126  126  122   126 #>  [5977,]  114  118  117  126  126  126  126  126  122   126 #>  [5978,]  114  118  117  126  126  126  126  126  122   126 #>  [5979,]  114  118  117  126  126  126  126  126  122   126 #>  [5980,]  114  118  117  126  126  126  126  126  122   126 #>  [5981,]  114  118  117  126  126  126  126  126  122   126 #>  [5982,]  114  118  117  126  126  126  126  126  122   126 #>  [5983,]  114  118  117  126  126  126  126  126  122   126 #>  [5984,]  114  118  117  126  126  126  126  126  122   126 #>  [5985,]  114  118  117  126  126  126  126  126  122   126 #>  [5986,]  114  118  117  126  126  126  126  126  122   126 #>  [5987,]  114  118  117  126  126  126  126  126  122   126 #>  [5988,]  114  118  117  126  126  126  126  126  122   126 #>  [5989,]  114  118  117  126  126  126  126  126  122   126 #>  [5990,]  114  118  117  126  126  126  126  126  122   126 #>  [5991,]  114  118  117  126  126  126  126  126  122   126 #>  [5992,]  115  119  118  127  127  127  127  127  123   127 #>  [5993,]  115  119  118  127  127  127  127  127  123   127 #>  [5994,]  114  118  117  126  126  126  126  126  122   126 #>  [5995,]  114  118  117  126  126  126  126  126  122   126 #>  [5996,]  115  119  118  127  127  127  127  127  123   127 #>  [5997,]  114  118  117  126  126  126  126  126  122   126 #>  [5998,]  114  118  117  126  126  126  126  126  122   126 #>  [5999,]  114  118  117  126  126  126  126  126  122   126 #>  [6000,]  114  118  117  126  126  126  126  126  122   126 #>  [6001,]  117  121  120  129  128  128  128  128  124   128 #>  [6002,]  117  121  120  129  128  128  128  128  124   128 #>  [6003,]  116  120  119  128  128  128  128  128  124   128 #>  [6004,]  116  120  119  128  128  129  128  129  125   129 #>  [6005,]  116  120  119  128  128  128  128  128  124   128 #>  [6006,]  116  120  119  128  128  128  128  128  124   128 #>  [6007,]  117  121  120  129  128  128  128  129  125   129 #>  [6008,]  117  121  120  129  128  128  128  128  124   128 #>  [6009,]  116  120  119  128  128  128  128  128  124   128 #>  [6010,]  116  120  119  128  128  129  128  129  125   129 #>  [6011,]  116  120  119  128  128  128  128  128  124   128 #>  [6012,]  117  121  120  129  128  128  128  128  124   128 #>  [6013,]  117  121  120  129  128  128  128  128  124   128 #>  [6014,]  116  120  119  128  128  128  128  128  124   128 #>  [6015,]  117  121  120  129  128  128  128  128  124   128 #>  [6016,]  117  121  120  129  128  128  128  129  125   129 #>  [6017,]  117  121  120  129  128  128  128  128  124   128 #>  [6018,]  117  121  120  129  128  129  128  128  124   128 #>  [6019,]  117  121  120  129  128  128  128  128  124   128 #>  [6020,]  117  121  120  129  128  128  128  129  125   129 #>  [6021,]  116  120  119  128  128  129  128  128  124   128 #>  [6022,]  117  121  120  129  128  128  128  128  124   128 #>  [6023,]  117  121  120  129  128  128  128  128  124   128 #>  [6024,]  116  120  119  128  128  128  128  129  125   129 #>  [6025,]  116  120  119  128  128  129  128  129  125   129 #>  [6026,]  117  121  120  129  128  128  128  128  124   128 #>  [6027,]  117  121  120  129  128  128  128  128  124   128 #>  [6028,]  116  120  119  128  128  128  128  129  125   129 #>  [6029,]  117  121  120  129  128  128  128  128  124   128 #>  [6030,]  117  121  120  129  128  128  128  128  124   128 #>  [6031,]  116  120  119  128  128  128  128  128  124   128 #>  [6032,]  116  120  119  128  128  128  128  128  124   128 #>  [6033,]  117  121  120  129  128  128  128  128  124   128 #>  [6034,]  116  120  119  128  128  128  128  128  124   128 #>  [6035,]  116  120  119  128  128  128  128  128  124   128 #>  [6036,]  117  121  120  129  128  128  128  129  125   129 #>  [6037,]  117  121  120  129  128  128  128  128  124   128 #>  [6038,]  117  121  120  129  128  128  128  128  124   128 #>  [6039,]  116  120  119  128  128  129  128  129  125   129 #>  [6040,]  116  120  119  128  128  128  128  128  124   128 #>  [6041,]  117  121  120  129  128  128  128  128  124   128 #>  [6042,]  116  120  119  128  128  128  128  128  124   128 #>  [6043,]  117  121  120  129  128  129  128  128  124   128 #>  [6044,]  117  121  120  129  128  128  128  128  124   128 #>  [6045,]  117  121  120  129  128  129  128  128  124   128 #>  [6046,]  117  121  120  129  128  128  128  128  124   128 #>  [6047,]  116  120  119  128  128  128  128  128  124   128 #>  [6048,]  116  120  119  128  128  128  128  128  124   128 #>  [6049,]  117  121  120  129  128  128  128  128  124   128 #>  [6050,]  117  121  120  129  128  128  128  129  125   129 #>  [6051,]  117  121  120  129  128  128  128  128  124   128 #>  [6052,]  116  120  119  128  128  128  128  129  125   129 #>  [6053,]  117  121  120  129  128  129  128  128  124   128 #>  [6054,]  116  120  119  128  128  128  128  129  125   129 #>  [6055,]  117  121  120  129  128  128  128  128  124   128 #>  [6056,]  117  121  120  129  128  128  128  128  124   128 #>  [6057,]  116  120  119  128  128  128  128  129  125   129 #>  [6058,]  117  121  120  129  128  128  128  128  124   128 #>  [6059,]  117  121  120  129  128  128  128  128  124   128 #>  [6060,]  117  121  120  129  128  128  128  128  124   128 #>  [6061,]  117  121  120  129  128  129  128  128  124   128 #>  [6062,]  116  120  119  128  128  128  128  128  124   128 #>  [6063,]  117  121  120  129  128  128  128  128  124   128 #>  [6064,]  117  121  120  129  128  128  128  128  124   128 #>  [6065,]  116  120  119  128  128  128  128  128  124   128 #>  [6066,]  117  121  120  129  128  128  128  128  124   128 #>  [6067,]  117  121  120  129  128  128  128  128  124   128 #>  [6068,]  117  121  120  129  128  128  128  128  124   128 #>  [6069,]  117  121  120  129  128  128  128  128  124   128 #>  [6070,]  116  120  119  128  128  128  128  128  124   128 #>  [6071,]  117  121  120  129  128  128  128  128  124   128 #>  [6072,]  116  120  119  128  128  129  128  128  124   128 #>  [6073,]  116  120  119  128  128  129  128  129  125   129 #>  [6074,]  116  120  119  128  128  129  128  128  124   128 #>  [6075,]  117  121  120  129  128  129  128  128  124   128 #>  [6076,]  116  120  119  128  128  129  128  129  125   129 #>  [6077,]  117  121  120  129  128  129  128  128  124   128 #>  [6078,]  117  121  120  129  128  128  128  128  124   128 #>  [6079,]  116  120  119  128  128  128  128  128  124   128 #>  [6080,]  117  121  120  129  128  128  128  128  124   128 #>  [6081,]  117  121  120  129  128  128  128  128  124   128 #>  [6082,]  116  120  119  128  128  128  128  128  124   128 #>  [6083,]  117  121  120  129  128  128  128  128  124   128 #>  [6084,]  117  121  120  129  128  129  128  128  124   128 #>  [6085,]  117  121  120  129  128  128  128  128  124   128 #>  [6086,]  117  121  120  129  128  128  128  129  125   129 #>  [6087,]  117  121  120  129  128  128  128  128  124   128 #>  [6088,]  117  121  120  129  128  128  128  128  124   128 #>  [6089,]  116  120  119  128  128  128  128  128  124   128 #>  [6090,]  117  121  120  129  128  128  128  128  124   128 #>  [6091,]  116  120  119  128  128  128  128  129  125   129 #>  [6092,]  117  121  120  129  128  128  128  128  124   128 #>  [6093,]  117  121  120  129  128  128  128  128  124   128 #>  [6094,]  117  121  120  129  128  129  128  128  124   128 #>  [6095,]  117  121  120  129  128  129  128  128  124   128 #>  [6096,]  117  121  120  129  128  128  128  128  124   128 #>  [6097,]  117  121  120  129  128  128  128  128  124   128 #>  [6098,]  116  120  119  128  128  128  128  128  124   128 #>  [6099,]  117  121  120  129  128  128  128  128  124   128 #>  [6100,]  117  121  120  129  128  129  128  128  124   128 #>  [6101,]  119  123  121  131  130  131  130  131  127   131 #>  [6102,]  119  123  121  131  130  131  130  131  127   131 #>  [6103,]  118  122  121  130  129  130  129  130  126   130 #>  [6104,]  119  123  121  130  129  130  129  130  126   130 #>  [6105,]  119  123  121  130  129  130  129  130  126   130 #>  [6106,]  119  123  121  130  129  130  129  130  126   130 #>  [6107,]  118  122  121  131  130  131  130  131  127   131 #>  [6108,]  119  123  121  131  130  131  130  131  127   131 #>  [6109,]  119  123  121  130  129  130  129  130  126   130 #>  [6110,]  119  123  121  130  129  130  129  130  126   130 #>  [6111,]  119  123  121  130  129  130  129  130  126   130 #>  [6112,]  119  123  121  131  130  131  130  131  127   131 #>  [6113,]  118  122  121  131  130  131  130  131  127   131 #>  [6114,]  119  123  121  130  129  130  129  130  126   130 #>  [6115,]  119  123  121  131  130  131  130  131  127   131 #>  [6116,]  118  122  121  131  130  131  130  131  127   131 #>  [6117,]  119  123  121  131  130  131  130  131  127   131 #>  [6118,]  119  123  121  131  130  131  130  131  127   131 #>  [6119,]  119  123  121  131  130  131  130  131  127   131 #>  [6120,]  119  123  121  131  130  131  130  131  127   131 #>  [6121,]  118  122  121  130  129  130  129  130  126   130 #>  [6122,]  119  123  121  131  130  131  130  131  127   131 #>  [6123,]  118  122  121  131  130  131  130  131  127   131 #>  [6124,]  119  123  121  130  129  130  129  130  126   130 #>  [6125,]  119  123  121  130  129  130  129  130  126   130 #>  [6126,]  119  123  121  131  130  131  130  131  127   131 #>  [6127,]  119  123  121  131  130  131  130  131  127   131 #>  [6128,]  119  123  121  130  129  130  129  130  126   130 #>  [6129,]  119  123  121  131  130  131  130  131  127   131 #>  [6130,]  118  122  121  131  130  131  130  131  127   131 #>  [6131,]  118  122  121  130  129  130  129  130  126   130 #>  [6132,]  119  123  121  130  129  130  129  130  126   130 #>  [6133,]  119  123  121  131  130  131  130  131  127   131 #>  [6134,]  119  123  121  130  129  130  129  130  126   130 #>  [6135,]  119  123  121  130  129  130  129  130  126   130 #>  [6136,]  119  123  121  131  130  131  130  131  127   131 #>  [6137,]  119  123  121  131  130  131  130  131  127   131 #>  [6138,]  119  123  121  131  130  131  130  131  127   131 #>  [6139,]  118  122  121  130  129  130  129  130  126   130 #>  [6140,]  118  122  121  130  129  130  129  130  126   130 #>  [6141,]  119  123  121  131  130  131  130  131  127   131 #>  [6142,]  119  123  121  130  129  130  129  130  126   130 #>  [6143,]  119  123  121  131  130  131  130  131  127   131 #>  [6144,]  119  123  121  131  130  131  130  131  127   131 #>  [6145,]  119  123  121  131  130  131  130  131  127   131 #>  [6146,]  119  123  121  131  130  131  130  131  127   131 #>  [6147,]  118  122  121  130  129  130  129  130  126   130 #>  [6148,]  119  123  121  130  129  130  129  130  126   130 #>  [6149,]  118  122  121  131  130  131  130  131  127   131 #>  [6150,]  119  123  121  131  130  131  130  131  127   131 #>  [6151,]  119  123  121  131  130  131  130  131  127   131 #>  [6152,]  119  123  121  130  129  130  129  130  126   130 #>  [6153,]  119  123  121  131  130  131  130  131  127   131 #>  [6154,]  118  122  121  130  129  130  129  130  126   130 #>  [6155,]  119  123  121  131  130  131  130  131  127   131 #>  [6156,]  119  123  121  131  130  131  130  131  127   131 #>  [6157,]  119  123  121  130  129  130  129  130  126   130 #>  [6158,]  119  123  121  131  130  131  130  131  127   131 #>  [6159,]  119  123  121  131  130  131  130  131  127   131 #>  [6160,]  119  123  121  131  130  131  130  131  127   131 #>  [6161,]  119  123  121  131  130  131  130  131  127   131 #>  [6162,]  118  122  121  130  129  130  129  130  126   130 #>  [6163,]  119  123  121  131  130  131  130  131  127   131 #>  [6164,]  119  123  121  131  130  131  130  131  127   131 #>  [6165,]  119  123  121  130  129  130  129  130  126   130 #>  [6166,]  119  123  121  131  130  131  130  131  127   131 #>  [6167,]  119  123  121  130  129  130  129  130  126   130 #>  [6168,]  119  123  121  131  130  131  130  131  127   131 #>  [6169,]  119  123  121  131  130  131  130  131  127   131 #>  [6170,]  118  122  121  130  129  130  129  130  126   130 #>  [6171,]  119  123  121  131  130  131  130  131  127   131 #>  [6172,]  119  123  121  130  129  130  129  130  126   130 #>  [6173,]  119  123  121  130  129  130  129  130  126   130 #>  [6174,]  119  123  121  130  129  130  129  130  126   130 #>  [6175,]  119  123  121  131  130  131  130  131  127   131 #>  [6176,]  119  123  121  130  129  130  129  130  126   130 #>  [6177,]  118  122  121  131  130  131  130  131  127   131 #>  [6178,]  119  123  121  131  130  131  130  131  127   131 #>  [6179,]  118  122  121  130  129  130  129  130  126   130 #>  [6180,]  118  122  121  131  130  131  130  131  127   131 #>  [6181,]  119  123  121  131  130  131  130  131  127   131 #>  [6182,]  119  123  121  130  129  130  129  130  126   130 #>  [6183,]  118  122  121  131  130  131  130  131  127   131 #>  [6184,]  119  123  121  131  130  131  130  131  127   131 #>  [6185,]  119  123  121  131  130  131  130  131  127   131 #>  [6186,]  119  123  121  130  129  130  129  130  126   130 #>  [6187,]  119  123  121  131  130  131  130  131  127   131 #>  [6188,]  119  123  121  130  129  130  129  130  126   130 #>  [6189,]  119  123  121  130  129  130  129  130  126   130 #>  [6190,]  119  123  121  131  130  131  130  131  127   131 #>  [6191,]  119  123  121  130  129  130  129  130  126   130 #>  [6192,]  119  123  121  131  130  131  130  131  127   131 #>  [6193,]  119  123  121  131  130  131  130  131  127   131 #>  [6194,]  119  123  121  130  129  130  129  130  126   130 #>  [6195,]  118  122  121  131  130  131  130  131  127   131 #>  [6196,]  119  123  121  131  130  131  130  131  127   131 #>  [6197,]  119  123  121  131  130  131  130  131  127   131 #>  [6198,]  118  122  121  130  129  130  129  130  126   130 #>  [6199,]  119  123  121  131  130  131  130  131  127   131 #>  [6200,]  119  123  121  131  130  131  130  131  127   131 #>  [6201,]  121  125  123  133  131  132  131  132  130   133 #>  [6202,]  120  124  122  132  133  133  132  133  128   132 #>  [6203,]  121  125  123  133  131  132  131  132  129   133 #>  [6204,]  121  125  123  133  131  132  131  132  129   133 #>  [6205,]  121  125  123  133  131  132  131  132  130   133 #>  [6206,]  120  124  122  132  132  133  132  133  128   132 #>  [6207,]  121  125  123  133  131  132  131  132  129   133 #>  [6208,]  121  125  123  133  131  132  131  132  129   133 #>  [6209,]  121  125  123  133  131  132  131  132  130   133 #>  [6210,]  121  125  123  133  131  132  131  132  130   133 #>  [6211,]  120  124  122  132  132  133  132  133  128   132 #>  [6212,]  120  124  122  132  133  133  132  133  128   132 #>  [6213,]  121  125  123  133  131  132  131  132  130   133 #>  [6214,]  121  125  123  133  131  132  131  132  129   133 #>  [6215,]  120  124  122  132  132  133  132  133  128   132 #>  [6216,]  121  125  123  133  131  132  131  132  130   133 #>  [6217,]  120  124  122  132  132  133  132  133  128   132 #>  [6218,]  120  124  122  132  132  133  132  133  128   132 #>  [6219,]  120  124  122  132  132  133  132  133  128   132 #>  [6220,]  121  125  123  133  131  132  131  132  130   133 #>  [6221,]  120  124  122  132  133  133  132  133  128   132 #>  [6222,]  121  125  123  133  131  132  131  132  130   133 #>  [6223,]  120  124  122  132  132  133  132  133  128   132 #>  [6224,]  121  125  123  133  131  132  131  132  130   133 #>  [6225,]  121  125  123  133  131  132  131  132  129   133 #>  [6226,]  120  124  122  132  132  133  132  133  128   132 #>  [6227,]  121  125  123  133  131  132  131  132  130   133 #>  [6228,]  121  125  123  133  131  132  131  132  130   133 #>  [6229,]  120  124  122  132  133  133  132  133  128   132 #>  [6230,]  120  124  122  132  132  133  132  133  128   132 #>  [6231,]  120  124  122  132  132  133  132  133  128   132 #>  [6232,]  120  124  122  132  132  133  132  133  128   132 #>  [6233,]  121  125  123  133  131  132  131  132  130   133 #>  [6234,]  120  124  122  132  132  133  132  133  128   132 #>  [6235,]  120  124  122  132  132  133  132  133  128   132 #>  [6236,]  121  125  123  133  131  132  131  132  130   133 #>  [6237,]  120  124  122  132  132  133  132  133  128   132 #>  [6238,]  120  124  122  132  132  133  132  133  128   132 #>  [6239,]  121  125  123  133  131  132  131  132  130   133 #>  [6240,]  121  125  123  133  131  132  131  132  129   133 #>  [6241,]  121  125  123  133  131  132  131  132  130   133 #>  [6242,]  120  124  122  132  132  133  132  133  128   132 #>  [6243,]  120  124  122  132  132  133  132  133  128   132 #>  [6244,]  120  124  122  132  132  133  132  133  128   132 #>  [6245,]  121  125  123  133  131  132  131  132  130   133 #>  [6246,]  120  124  122  132  132  133  132  133  128   132 #>  [6247,]  120  124  122  132  132  133  132  133  128   132 #>  [6248,]  120  124  122  132  132  133  132  133  128   132 #>  [6249,]  121  125  123  133  131  132  131  132  130   133 #>  [6250,]  121  125  123  133  131  132  131  132  130   133 #>  [6251,]  120  124  122  132  132  133  132  133  128   132 #>  [6252,]  121  125  123  133  131  132  131  132  129   133 #>  [6253,]  121  125  123  133  131  132  131  132  130   133 #>  [6254,]  121  125  123  133  131  132  131  132  130   133 #>  [6255,]  121  125  123  133  131  132  131  132  129   133 #>  [6256,]  120  124  122  132  132  133  132  133  128   132 #>  [6257,]  121  125  123  133  131  132  131  132  129   133 #>  [6258,]  121  125  123  133  131  132  131  132  130   133 #>  [6259,]  121  125  123  133  131  132  131  132  129   133 #>  [6260,]  120  124  122  132  132  133  132  133  128   132 #>  [6261,]  120  124  122  132  132  133  132  133  128   132 #>  [6262,]  120  124  122  132  132  133  132  133  128   132 #>  [6263,]  120  124  122  132  132  133  132  133  128   132 #>  [6264,]  120  124  122  132  132  133  132  133  128   132 #>  [6265,]  120  124  122  132  132  133  132  133  128   132 #>  [6266,]  120  124  122  132  132  133  132  133  128   132 #>  [6267,]  121  125  123  133  131  132  131  132  129   133 #>  [6268,]  120  124  122  132  132  133  132  133  128   132 #>  [6269,]  120  124  122  132  132  133  132  133  128   132 #>  [6270,]  120  124  122  132  133  133  132  133  128   132 #>  [6271,]  121  125  123  133  131  132  131  132  130   133 #>  [6272,]  121  125  123  133  131  132  131  132  129   133 #>  [6273,]  121  125  123  133  131  132  131  132  130   133 #>  [6274,]  121  125  123  133  131  132  131  132  129   133 #>  [6275,]  120  124  122  132  132  133  132  133  128   132 #>  [6276,]  121  125  123  133  131  132  131  132  129   133 #>  [6277,]  121  125  123  133  131  132  131  132  130   133 #>  [6278,]  120  124  122  132  132  133  132  133  128   132 #>  [6279,]  120  124  122  132  132  133  132  133  128   132 #>  [6280,]  121  125  123  133  131  132  131  132  129   133 #>  [6281,]  120  124  122  132  132  133  132  133  128   132 #>  [6282,]  120  124  122  132  132  133  132  133  128   132 #>  [6283,]  120  124  122  132  132  133  132  133  128   132 #>  [6284,]  121  125  123  133  131  132  131  132  130   133 #>  [6285,]  121  125  123  133  131  132  131  132  130   133 #>  [6286,]  121  125  123  133  131  132  131  132  129   133 #>  [6287,]  121  125  123  133  131  132  131  132  130   133 #>  [6288,]  121  125  123  133  131  132  131  132  130   133 #>  [6289,]  120  124  122  132  132  133  132  133  128   132 #>  [6290,]  121  125  123  133  131  132  131  132  130   133 #>  [6291,]  121  125  123  133  131  132  131  132  130   133 #>  [6292,]  120  124  122  132  132  133  132  133  128   132 #>  [6293,]  120  124  122  132  132  133  132  133  128   132 #>  [6294,]  120  124  122  132  132  133  132  133  128   132 #>  [6295,]  120  124  122  132  132  133  132  133  128   132 #>  [6296,]  120  124  122  132  132  133  132  133  128   132 #>  [6297,]  120  124  122  132  132  133  132  133  128   132 #>  [6298,]  120  124  122  132  132  133  132  133  128   132 #>  [6299,]  121  125  123  133  131  132  131  132  130   133 #>  [6300,]  120  124  122  132  132  133  132  133  128   132 #>  [6301,]  122  126  124  134  134  134  133  134  131   134 #>  [6302,]  123  127  125  135  135  135  134  135  132   135 #>  [6303,]  122  126  124  134  134  134  133  134  131   134 #>  [6304,]  122  126  124  134  134  134  133  134  131   134 #>  [6305,]  122  126  124  134  134  134  133  134  131   134 #>  [6306,]  122  126  124  134  134  134  133  134  131   134 #>  [6307,]  122  126  124  134  134  134  133  134  131   134 #>  [6308,]  122  126  124  134  134  134  133  134  131   134 #>  [6309,]  123  127  125  135  135  135  134  135  132   135 #>  [6310,]  123  127  125  135  135  135  134  135  132   135 #>  [6311,]  122  126  124  134  134  134  133  134  131   134 #>  [6312,]  123  127  125  135  135  135  134  135  132   135 #>  [6313,]  122  126  124  134  134  134  133  134  131   134 #>  [6314,]  122  126  124  134  134  134  133  134  131   134 #>  [6315,]  122  126  124  134  134  134  133  134  131   134 #>  [6316,]  122  126  124  134  134  134  133  134  131   134 #>  [6317,]  123  127  125  135  135  135  134  135  132   135 #>  [6318,]  122  126  124  134  134  134  133  134  131   134 #>  [6319,]  122  126  124  134  134  134  133  134  131   134 #>  [6320,]  122  126  124  134  134  134  133  134  131   134 #>  [6321,]  123  127  125  135  135  135  134  135  132   135 #>  [6322,]  122  126  124  134  134  134  133  134  131   134 #>  [6323,]  122  126  124  134  134  134  133  134  131   134 #>  [6324,]  122  126  124  134  134  134  133  134  131   134 #>  [6325,]  122  126  124  134  134  134  133  134  131   134 #>  [6326,]  122  126  124  134  134  134  133  134  131   134 #>  [6327,]  122  126  124  134  134  134  133  134  131   134 #>  [6328,]  122  126  124  134  134  134  133  134  131   134 #>  [6329,]  123  127  125  135  135  135  134  135  132   135 #>  [6330,]  122  126  124  134  134  134  133  134  131   134 #>  [6331,]  122  126  124  134  134  134  133  134  131   134 #>  [6332,]  122  126  124  134  134  134  133  134  131   134 #>  [6333,]  123  127  125  135  135  135  134  135  132   135 #>  [6334,]  122  126  124  134  134  134  133  134  131   134 #>  [6335,]  122  126  124  134  134  134  133  134  131   134 #>  [6336,]  122  126  124  134  134  134  133  134  131   134 #>  [6337,]  122  126  124  134  134  134  133  134  131   134 #>  [6338,]  122  126  124  134  134  134  133  134  131   134 #>  [6339,]  122  126  124  134  134  134  133  134  131   134 #>  [6340,]  122  126  124  134  134  134  133  134  131   134 #>  [6341,]  122  126  124  134  134  134  133  134  131   134 #>  [6342,]  122  126  124  134  134  134  133  134  131   134 #>  [6343,]  122  126  124  134  134  134  133  134  131   134 #>  [6344,]  122  126  124  134  134  134  133  134  131   134 #>  [6345,]  122  126  124  134  134  134  133  134  131   134 #>  [6346,]  122  126  124  134  134  134  133  134  131   134 #>  [6347,]  122  126  124  134  134  134  133  134  131   134 #>  [6348,]  122  126  124  134  134  134  133  134  131   134 #>  [6349,]  122  126  124  134  134  134  133  134  131   134 #>  [6350,]  122  126  124  134  134  134  133  134  131   134 #>  [6351,]  122  126  124  134  134  134  133  134  131   134 #>  [6352,]  122  126  124  134  134  134  133  134  131   134 #>  [6353,]  122  126  124  134  134  134  133  134  131   134 #>  [6354,]  122  126  124  134  134  134  133  134  131   134 #>  [6355,]  122  126  124  134  134  134  133  134  131   134 #>  [6356,]  122  126  124  134  134  134  133  134  131   134 #>  [6357,]  122  126  124  134  134  134  133  134  131   134 #>  [6358,]  122  126  124  134  134  134  133  134  131   134 #>  [6359,]  122  126  124  134  134  134  133  134  131   134 #>  [6360,]  123  127  125  135  135  135  134  135  132   135 #>  [6361,]  122  126  124  134  134  134  133  134  131   134 #>  [6362,]  122  126  124  134  134  134  133  134  131   134 #>  [6363,]  123  127  125  135  135  135  134  135  132   135 #>  [6364,]  122  126  124  134  134  134  133  134  131   134 #>  [6365,]  122  126  124  134  134  134  133  134  131   134 #>  [6366,]  122  126  124  134  134  134  133  134  131   134 #>  [6367,]  122  126  124  134  134  134  133  134  131   134 #>  [6368,]  122  126  124  134  134  134  133  134  131   134 #>  [6369,]  122  126  124  134  134  134  133  134  131   134 #>  [6370,]  123  127  125  135  135  135  134  135  132   135 #>  [6371,]  122  126  124  134  134  134  133  134  131   134 #>  [6372,]  122  126  124  134  134  134  133  134  131   134 #>  [6373,]  122  126  124  134  134  134  133  134  131   134 #>  [6374,]  122  126  124  134  134  134  133  134  131   134 #>  [6375,]  122  126  124  134  134  134  133  134  131   134 #>  [6376,]  122  126  124  134  134  134  133  134  131   134 #>  [6377,]  122  126  124  134  134  134  133  134  131   134 #>  [6378,]  122  126  124  134  134  134  133  134  131   134 #>  [6379,]  122  126  124  134  134  134  133  134  131   134 #>  [6380,]  123  127  125  135  135  135  134  135  132   135 #>  [6381,]  123  127  125  135  135  135  134  135  132   135 #>  [6382,]  122  126  124  134  134  134  133  134  131   134 #>  [6383,]  122  126  124  134  134  134  133  134  131   134 #>  [6384,]  122  126  124  134  134  134  133  134  131   134 #>  [6385,]  122  126  124  134  134  134  133  134  131   134 #>  [6386,]  123  127  125  135  135  135  134  135  132   135 #>  [6387,]  122  126  124  134  134  134  133  134  131   134 #>  [6388,]  122  126  124  134  134  134  133  134  131   134 #>  [6389,]  122  126  124  134  134  134  133  134  131   134 #>  [6390,]  122  126  124  134  134  134  133  134  131   134 #>  [6391,]  122  126  124  134  134  134  133  134  131   134 #>  [6392,]  122  126  124  134  134  134  133  134  131   134 #>  [6393,]  122  126  124  134  134  134  133  134  131   134 #>  [6394,]  122  126  124  134  134  134  133  134  131   134 #>  [6395,]  122  126  124  134  134  134  133  134  131   134 #>  [6396,]  122  126  124  134  134  134  133  134  131   134 #>  [6397,]  122  126  124  134  134  134  133  134  131   134 #>  [6398,]  122  126  124  134  134  134  133  134  131   134 #>  [6399,]  122  126  124  134  134  134  133  134  131   134 #>  [6400,]  122  126  124  134  134  134  133  134  131   134 #>  [6401,]  124  129  127  137  137  137  136  137  133   136 #>  [6402,]  124  128  126  136  136  136  135  136  135   138 #>  [6403,]  124  128  126  136  136  136  135  136  135   138 #>  [6404,]  124  128  126  136  136  136  135  136  134   137 #>  [6405,]  124  129  127  137  137  137  136  137  133   136 #>  [6406,]  124  128  126  136  136  136  135  136  135   138 #>  [6407,]  124  128  126  136  136  136  135  136  135   138 #>  [6408,]  124  128  126  136  136  136  135  136  134   137 #>  [6409,]  124  128  126  136  136  136  135  136  134   137 #>  [6410,]  124  128  126  136  136  136  135  136  134   137 #>  [6411,]  124  128  126  136  136  136  135  136  135   138 #>  [6412,]  124  128  126  136  136  136  135  136  135   138 #>  [6413,]  124  128  126  136  136  136  135  136  135   138 #>  [6414,]  124  129  127  137  137  137  136  137  133   136 #>  [6415,]  124  129  127  137  137  137  136  137  133   136 #>  [6416,]  124  128  126  136  136  136  135  136  135   138 #>  [6417,]  124  128  126  136  136  136  135  136  135   138 #>  [6418,]  124  129  127  137  137  137  136  137  133   136 #>  [6419,]  124  128  126  136  136  136  135  136  135   138 #>  [6420,]  124  128  126  136  136  136  135  136  135   138 #>  [6421,]  124  128  126  136  136  136  135  136  135   138 #>  [6422,]  124  128  126  136  136  136  135  136  135   138 #>  [6423,]  124  128  126  136  136  136  135  136  135   138 #>  [6424,]  124  128  126  136  136  136  135  136  135   138 #>  [6425,]  124  128  126  136  136  136  135  136  135   138 #>  [6426,]  124  128  126  136  136  136  135  136  135   138 #>  [6427,]  124  129  127  137  137  137  136  137  133   136 #>  [6428,]  124  128  126  136  136  136  135  136  135   138 #>  [6429,]  124  128  126  136  136  136  135  136  135   138 #>  [6430,]  124  128  126  136  136  136  135  136  135   138 #>  [6431,]  124  128  126  136  136  136  135  136  135   138 #>  [6432,]  124  129  127  137  137  137  136  137  133   136 #>  [6433,]  124  128  126  136  136  136  135  136  135   138 #>  [6434,]  124  128  126  136  136  136  135  136  135   138 #>  [6435,]  124  128  126  136  136  136  135  136  135   138 #>  [6436,]  124  128  126  136  136  136  135  136  135   138 #>  [6437,]  124  128  126  136  136  136  135  136  135   138 #>  [6438,]  124  128  126  136  136  136  135  136  135   138 #>  [6439,]  124  128  126  136  136  136  135  136  135   138 #>  [6440,]  124  128  126  136  136  136  135  136  135   138 #>  [6441,]  124  128  126  136  136  136  135  136  135   138 #>  [6442,]  124  128  126  136  136  136  135  136  135   138 #>  [6443,]  124  129  127  137  137  137  136  137  133   136 #>  [6444,]  124  128  126  136  136  136  135  136  135   138 #>  [6445,]  124  128  126  136  136  136  135  136  135   138 #>  [6446,]  124  128  126  136  136  136  135  136  135   138 #>  [6447,]  124  128  126  136  136  136  135  136  135   138 #>  [6448,]  124  128  126  136  136  136  135  136  135   138 #>  [6449,]  124  128  126  136  136  136  135  136  135   138 #>  [6450,]  124  128  126  136  136  136  135  136  135   138 #>  [6451,]  124  128  126  136  136  136  135  136  134   137 #>  [6452,]  124  128  126  136  136  136  135  136  135   138 #>  [6453,]  124  128  126  136  136  136  135  136  135   138 #>  [6454,]  124  128  126  136  136  136  135  136  135   138 #>  [6455,]  124  128  126  136  136  136  135  136  135   138 #>  [6456,]  124  128  126  136  136  136  135  136  135   138 #>  [6457,]  124  128  126  136  136  136  135  136  135   138 #>  [6458,]  124  129  127  137  137  137  136  137  133   136 #>  [6459,]  124  128  126  136  136  136  135  136  135   138 #>  [6460,]  124  128  126  136  136  136  135  136  135   138 #>  [6461,]  124  128  126  136  136  136  135  136  135   138 #>  [6462,]  124  128  126  136  136  136  135  136  135   138 #>  [6463,]  124  128  126  136  136  136  135  136  135   138 #>  [6464,]  124  128  126  136  136  136  135  136  135   138 #>  [6465,]  124  128  126  136  136  136  135  136  135   138 #>  [6466,]  124  128  126  136  136  136  135  136  135   138 #>  [6467,]  124  128  126  136  136  136  135  136  135   138 #>  [6468,]  124  128  126  136  136  136  135  136  135   138 #>  [6469,]  124  128  126  136  136  136  135  136  135   138 #>  [6470,]  124  129  127  137  137  137  136  137  133   136 #>  [6471,]  124  129  127  137  137  137  136  137  133   136 #>  [6472,]  124  128  126  136  136  136  135  136  135   138 #>  [6473,]  124  128  126  136  136  136  135  136  135   138 #>  [6474,]  124  128  126  136  136  136  135  136  135   138 #>  [6475,]  124  129  127  137  137  137  136  137  133   136 #>  [6476,]  124  128  126  136  136  136  135  136  135   138 #>  [6477,]  124  128  126  136  136  136  135  136  135   138 #>  [6478,]  124  128  126  136  136  136  135  136  135   138 #>  [6479,]  124  128  126  136  136  136  135  136  135   138 #>  [6480,]  124  128  126  136  136  136  135  136  135   138 #>  [6481,]  124  128  126  136  136  136  135  136  135   138 #>  [6482,]  124  128  126  136  136  136  135  136  135   138 #>  [6483,]  124  128  126  136  136  136  135  136  135   138 #>  [6484,]  124  128  126  136  136  136  135  136  135   138 #>  [6485,]  124  128  126  136  136  136  135  136  135   138 #>  [6486,]  124  128  126  136  136  136  135  136  135   138 #>  [6487,]  124  128  126  136  136  136  135  136  135   138 #>  [6488,]  124  128  126  136  136  136  135  136  135   138 #>  [6489,]  124  128  126  136  136  136  135  136  135   138 #>  [6490,]  124  128  126  136  136  136  135  136  135   138 #>  [6491,]  124  129  127  137  137  137  136  137  133   136 #>  [6492,]  124  128  126  136  136  136  135  136  135   138 #>  [6493,]  124  128  126  136  136  136  135  136  135   138 #>  [6494,]  124  128  126  136  136  136  135  136  135   138 #>  [6495,]  124  129  127  137  137  137  136  137  133   136 #>  [6496,]  124  128  126  136  136  136  135  136  135   138 #>  [6497,]  124  128  126  136  136  136  135  136  135   138 #>  [6498,]  124  128  126  136  136  136  135  136  135   138 #>  [6499,]  124  128  126  136  136  136  135  136  135   138 #>  [6500,]  124  129  127  137  137  137  136  137  133   136 #>  [6501,]  126  130  128  138  138  138  137  138  136   139 #>  [6502,]  125  131  129  139  139  139  138  139  137   140 #>  [6503,]  125  131  129  139  139  139  138  139  137   140 #>  [6504,]  125  132  130  140  140  140  139  139  137   140 #>  [6505,]  125  131  129  139  139  139  138  139  137   140 #>  [6506,]  125  131  129  139  139  139  138  139  137   140 #>  [6507,]  125  131  129  139  139  139  138  139  137   140 #>  [6508,]  125  131  129  139  139  139  138  139  137   140 #>  [6509,]  125  131  129  139  139  139  138  139  137   140 #>  [6510,]  125  131  129  139  139  139  138  139  137   140 #>  [6511,]  125  131  129  139  139  139  138  139  137   140 #>  [6512,]  125  131  129  139  139  139  138  139  137   140 #>  [6513,]  125  131  129  139  139  139  138  139  137   140 #>  [6514,]  126  130  128  138  138  138  137  138  136   139 #>  [6515,]  126  130  128  138  138  138  137  138  136   139 #>  [6516,]  126  130  128  138  138  138  137  138  136   139 #>  [6517,]  125  131  129  139  139  139  138  139  137   140 #>  [6518,]  125  131  129  139  139  139  138  139  137   140 #>  [6519,]  125  132  130  140  140  140  139  139  137   140 #>  [6520,]  125  131  129  139  139  139  138  139  137   140 #>  [6521,]  125  131  129  139  139  139  138  139  137   140 #>  [6522,]  125  131  129  139  139  139  138  139  137   140 #>  [6523,]  125  131  129  139  139  139  138  139  137   140 #>  [6524,]  125  131  129  139  139  139  138  139  137   140 #>  [6525,]  125  131  129  139  139  139  138  139  137   140 #>  [6526,]  125  131  129  139  139  139  138  139  137   140 #>  [6527,]  125  132  130  140  140  140  139  139  137   140 #>  [6528,]  125  131  129  139  139  139  138  139  137   140 #>  [6529,]  125  131  129  139  139  139  138  139  137   140 #>  [6530,]  125  131  129  139  139  139  138  139  137   140 #>  [6531,]  125  131  129  139  139  139  138  139  137   140 #>  [6532,]  125  131  129  139  139  139  138  139  137   140 #>  [6533,]  125  131  129  139  139  139  138  139  137   140 #>  [6534,]  125  131  129  139  139  139  138  139  137   140 #>  [6535,]  125  131  129  139  139  139  138  139  137   140 #>  [6536,]  125  131  129  139  139  139  138  139  137   140 #>  [6537,]  125  131  129  139  139  139  138  139  137   140 #>  [6538,]  125  131  129  139  139  139  138  139  137   140 #>  [6539,]  125  131  129  139  139  139  138  139  137   140 #>  [6540,]  125  131  129  139  139  139  138  139  137   140 #>  [6541,]  126  130  128  138  138  138  137  138  136   139 #>  [6542,]  125  131  129  139  139  139  138  139  137   140 #>  [6543,]  125  131  129  139  139  139  138  139  137   140 #>  [6544,]  126  130  128  138  138  138  137  138  136   139 #>  [6545,]  125  131  129  139  139  139  138  139  137   140 #>  [6546,]  125  131  129  139  139  139  138  139  137   140 #>  [6547,]  125  131  129  139  139  139  138  139  137   140 #>  [6548,]  125  132  130  140  140  140  139  139  137   140 #>  [6549,]  125  131  129  139  139  139  138  139  137   140 #>  [6550,]  126  130  128  138  138  138  137  138  136   139 #>  [6551,]  125  131  129  139  139  139  138  139  137   140 #>  [6552,]  125  131  129  139  139  139  138  139  137   140 #>  [6553,]  125  131  129  139  139  139  138  139  137   140 #>  [6554,]  125  131  129  139  139  139  138  139  137   140 #>  [6555,]  125  131  129  139  139  139  138  139  137   140 #>  [6556,]  125  131  129  139  139  139  138  139  137   140 #>  [6557,]  125  131  129  139  139  139  138  139  137   140 #>  [6558,]  125  131  129  139  139  139  138  139  137   140 #>  [6559,]  126  130  128  138  138  138  137  138  136   139 #>  [6560,]  125  131  129  139  139  139  138  139  137   140 #>  [6561,]  125  132  130  140  140  140  139  139  137   140 #>  [6562,]  125  131  129  139  139  139  138  139  137   140 #>  [6563,]  125  131  129  139  139  139  138  139  137   140 #>  [6564,]  125  131  129  139  139  139  138  139  137   140 #>  [6565,]  125  131  129  139  139  139  138  139  137   140 #>  [6566,]  125  131  129  139  139  139  138  139  137   140 #>  [6567,]  125  131  129  139  139  139  138  139  137   140 #>  [6568,]  125  131  129  139  139  139  138  139  137   140 #>  [6569,]  125  132  130  140  140  140  139  139  137   140 #>  [6570,]  126  130  128  138  138  138  137  138  136   139 #>  [6571,]  125  131  129  139  139  139  138  139  137   140 #>  [6572,]  125  131  129  139  139  139  138  139  137   140 #>  [6573,]  126  130  128  138  138  138  137  138  136   139 #>  [6574,]  125  131  129  139  139  139  138  139  137   140 #>  [6575,]  125  131  129  139  139  139  138  139  137   140 #>  [6576,]  125  131  129  139  139  139  138  139  137   140 #>  [6577,]  125  131  129  139  139  139  138  139  137   140 #>  [6578,]  125  131  129  139  139  139  138  139  137   140 #>  [6579,]  125  131  129  139  139  139  138  139  137   140 #>  [6580,]  125  131  129  139  139  139  138  139  137   140 #>  [6581,]  125  131  129  139  139  139  138  139  137   140 #>  [6582,]  125  132  130  140  140  140  139  139  137   140 #>  [6583,]  125  131  129  139  139  139  138  139  137   140 #>  [6584,]  125  131  129  139  139  139  138  139  137   140 #>  [6585,]  125  131  129  139  139  139  138  139  137   140 #>  [6586,]  125  131  129  139  139  139  138  139  137   140 #>  [6587,]  125  131  129  139  139  139  138  139  137   140 #>  [6588,]  125  131  129  139  139  139  138  139  137   140 #>  [6589,]  125  131  129  139  139  139  138  139  137   140 #>  [6590,]  125  131  129  139  139  139  138  139  137   140 #>  [6591,]  125  131  129  139  139  139  138  139  137   140 #>  [6592,]  125  132  130  140  140  140  139  139  137   140 #>  [6593,]  125  132  130  140  140  140  139  139  137   140 #>  [6594,]  125  131  129  139  139  139  138  139  137   140 #>  [6595,]  125  131  129  139  139  139  138  139  137   140 #>  [6596,]  126  130  128  138  138  138  137  138  136   139 #>  [6597,]  125  132  130  140  140  140  139  139  137   140 #>  [6598,]  125  131  129  139  139  139  138  139  137   140 #>  [6599,]  126  130  128  138  138  138  137  138  136   139 #>  [6600,]  125  131  129  139  139  139  138  139  137   140 #>  [6601,]  128  134  132  142  142  142  141  141  138   141 #>  [6602,]  128  134  132  142  142  142  141  141  138   141 #>  [6603,]  127  133  131  141  141  141  140  140  140   142 #>  [6604,]  127  133  131  141  141  141  140  140  139   142 #>  [6605,]  127  133  131  141  141  141  140  140  140   142 #>  [6606,]  127  133  131  141  141  141  140  140  140   142 #>  [6607,]  127  133  131  141  141  141  140  140  140   142 #>  [6608,]  128  134  132  142  142  142  141  141  138   141 #>  [6609,]  127  133  131  141  141  141  140  140  139   142 #>  [6610,]  127  133  131  141  141  141  140  140  140   142 #>  [6611,]  127  133  131  141  141  141  140  140  139   142 #>  [6612,]  127  133  131  141  141  141  140  140  140   142 #>  [6613,]  128  134  132  142  142  142  141  141  138   141 #>  [6614,]  127  133  131  141  141  141  140  140  140   142 #>  [6615,]  128  134  132  142  142  142  141  141  138   141 #>  [6616,]  128  134  132  142  142  142  141  141  138   141 #>  [6617,]  127  133  131  141  141  141  140  140  139   142 #>  [6618,]  127  133  131  141  141  141  140  140  140   142 #>  [6619,]  128  134  132  142  142  142  141  141  138   141 #>  [6620,]  128  134  132  142  142  142  141  141  138   141 #>  [6621,]  127  133  131  141  141  141  140  140  140   142 #>  [6622,]  128  134  132  142  142  142  141  141  138   141 #>  [6623,]  128  134  132  142  142  142  141  141  138   141 #>  [6624,]  127  133  131  141  141  141  140  140  140   142 #>  [6625,]  127  133  131  141  141  141  140  140  140   142 #>  [6626,]  128  134  132  142  142  142  141  141  138   141 #>  [6627,]  128  134  132  142  142  142  141  141  138   141 #>  [6628,]  127  133  131  141  141  141  140  140  140   142 #>  [6629,]  128  134  132  142  142  142  141  141  138   141 #>  [6630,]  128  134  132  142  142  142  141  141  138   141 #>  [6631,]  127  133  131  141  141  141  140  140  140   142 #>  [6632,]  127  133  131  141  141  141  140  140  140   142 #>  [6633,]  128  134  132  142  142  142  141  141  138   141 #>  [6634,]  127  133  131  141  141  141  140  140  140   142 #>  [6635,]  127  133  131  141  141  141  140  140  139   142 #>  [6636,]  128  134  132  142  142  142  141  141  138   141 #>  [6637,]  128  134  132  142  142  142  141  141  138   141 #>  [6638,]  128  134  132  142  142  142  141  141  138   141 #>  [6639,]  127  133  131  141  141  141  140  140  140   142 #>  [6640,]  127  133  131  141  141  141  140  140  140   142 #>  [6641,]  128  134  132  142  142  142  141  141  138   141 #>  [6642,]  127  133  131  141  141  141  140  140  140   142 #>  [6643,]  128  134  132  142  142  142  141  141  138   141 #>  [6644,]  128  134  132  142  142  142  141  141  138   141 #>  [6645,]  127  133  131  141  141  141  140  140  140   142 #>  [6646,]  128  134  132  142  142  142  141  141  138   141 #>  [6647,]  127  133  131  141  141  141  140  140  140   142 #>  [6648,]  127  133  131  141  141  141  140  140  140   142 #>  [6649,]  127  133  131  141  141  141  140  140  139   142 #>  [6650,]  128  134  132  142  142  142  141  141  138   141 #>  [6651,]  128  134  132  142  142  142  141  141  138   141 #>  [6652,]  127  133  131  141  141  141  140  140  139   142 #>  [6653,]  128  134  132  142  142  142  141  141  138   141 #>  [6654,]  127  133  131  141  141  141  140  140  139   142 #>  [6655,]  128  134  132  142  142  142  141  141  138   141 #>  [6656,]  128  134  132  142  142  142  141  141  138   141 #>  [6657,]  127  133  131  141  141  141  140  140  140   142 #>  [6658,]  128  134  132  142  142  142  141  141  138   141 #>  [6659,]  128  134  132  142  142  142  141  141  138   141 #>  [6660,]  128  134  132  142  142  142  141  141  138   141 #>  [6661,]  128  134  132  142  142  142  141  141  138   141 #>  [6662,]  127  133  131  141  141  141  140  140  140   142 #>  [6663,]  128  134  132  142  142  142  141  141  138   141 #>  [6664,]  128  134  132  142  142  142  141  141  138   141 #>  [6665,]  127  133  131  141  141  141  140  140  140   142 #>  [6666,]  128  134  132  142  142  142  141  141  138   141 #>  [6667,]  127  133  131  141  141  141  140  140  140   142 #>  [6668,]  128  134  132  142  142  142  141  141  138   141 #>  [6669,]  128  134  132  142  142  142  141  141  138   141 #>  [6670,]  127  133  131  141  141  141  140  140  140   142 #>  [6671,]  128  134  132  142  142  142  141  141  138   141 #>  [6672,]  127  133  131  141  141  141  140  140  140   142 #>  [6673,]  127  133  131  141  141  141  140  140  140   142 #>  [6674,]  127  133  131  141  141  141  140  140  140   142 #>  [6675,]  128  134  132  142  142  142  141  141  138   141 #>  [6676,]  127  133  131  141  141  141  140  140  140   142 #>  [6677,]  128  134  132  142  142  142  141  141  138   141 #>  [6678,]  128  134  132  142  142  142  141  141  138   141 #>  [6679,]  127  133  131  141  141  141  140  140  139   142 #>  [6680,]  128  134  132  142  142  142  141  141  138   141 #>  [6681,]  128  134  132  142  142  142  141  141  138   141 #>  [6682,]  127  133  131  141  141  141  140  140  139   142 #>  [6683,]  128  134  132  142  142  142  141  141  138   141 #>  [6684,]  128  134  132  142  142  142  141  141  138   141 #>  [6685,]  128  134  132  142  142  142  141  141  138   141 #>  [6686,]  127  133  131  141  141  141  140  140  140   142 #>  [6687,]  128  134  132  142  142  142  141  141  138   141 #>  [6688,]  127  133  131  141  141  141  140  140  139   142 #>  [6689,]  127  133  131  141  141  141  140  140  139   142 #>  [6690,]  128  134  132  142  142  142  141  141  138   141 #>  [6691,]  127  133  131  141  141  141  140  140  140   142 #>  [6692,]  127  133  131  141  141  141  140  140  139   142 #>  [6693,]  128  134  132  142  142  142  141  141  138   141 #>  [6694,]  127  133  131  141  141  141  140  140  140   142 #>  [6695,]  128  134  132  142  142  142  141  141  138   141 #>  [6696,]  128  134  132  142  142  142  141  141  138   141 #>  [6697,]  128  134  132  142  142  142  141  141  138   141 #>  [6698,]  127  133  131  141  141  141  140  140  140   142 #>  [6699,]  127  133  131  141  141  141  140  140  139   142 #>  [6700,]  128  134  132  142  142  142  141  141  138   141 #>  [6701,]  130  136  133  143  143  143  142  142  143   144 #>  [6702,]  130  136  133  143  143  143  142  142  142   143 #>  [6703,]  129  135  135  144  144  144  143  143  141   145 #>  [6704,]  129  135  135  144  144  144  143  143  141   146 #>  [6705,]  129  135  135  144  144  144  143  143  141   145 #>  [6706,]  130  136  133  143  143  143  142  142  143   144 #>  [6707,]  129  135  135  144  144  144  143  143  141   146 #>  [6708,]  129  135  135  144  144  144  143  143  141   146 #>  [6709,]  129  135  135  144  144  144  143  143  141   146 #>  [6710,]  129  135  135  144  144  144  143  143  141   146 #>  [6711,]  130  136  133  143  143  143  142  142  142   143 #>  [6712,]  129  135  135  144  144  144  143  143  141   145 #>  [6713,]  130  136  133  143  143  143  142  142  142   143 #>  [6714,]  130  136  133  143  143  143  142  142  143   144 #>  [6715,]  130  136  133  143  143  143  142  142  143   144 #>  [6716,]  130  136  133  143  143  143  142  142  142   143 #>  [6717,]  130  136  133  143  143  143  142  142  142   143 #>  [6718,]  129  135  135  144  144  144  143  143  141   146 #>  [6719,]  129  135  135  144  144  144  143  143  141   145 #>  [6720,]  129  135  135  144  144  144  143  143  141   145 #>  [6721,]  130  136  133  143  143  143  142  142  142   143 #>  [6722,]  130  136  133  143  143  143  142  142  142   143 #>  [6723,]  129  135  135  144  144  144  143  143  141   146 #>  [6724,]  129  135  135  144  144  144  143  143  141   145 #>  [6725,]  129  135  135  144  144  144  143  143  141   146 #>  [6726,]  130  136  133  143  143  143  142  142  143   144 #>  [6727,]  130  136  133  143  143  143  142  142  142   143 #>  [6728,]  129  135  135  144  144  144  143  143  141   146 #>  [6729,]  130  136  133  143  143  143  142  142  142   143 #>  [6730,]  129  135  135  144  144  144  143  143  141   145 #>  [6731,]  129  135  134  144  144  144  143  143  141   146 #>  [6732,]  129  135  135  144  144  144  143  143  141   145 #>  [6733,]  130  136  133  143  143  143  142  142  143   144 #>  [6734,]  129  135  134  144  144  144  143  143  141   145 #>  [6735,]  130  136  133  143  143  143  142  142  142   143 #>  [6736,]  129  135  135  144  144  144  143  143  141   145 #>  [6737,]  130  136  133  143  143  143  142  142  142   143 #>  [6738,]  129  135  135  144  144  144  143  143  141   146 #>  [6739,]  129  135  135  144  144  144  143  143  141   146 #>  [6740,]  129  135  135  144  144  144  143  143  141   145 #>  [6741,]  130  136  133  143  143  143  142  142  142   143 #>  [6742,]  129  135  134  144  144  144  143  143  141   145 #>  [6743,]  129  135  134  144  144  144  143  143  141   146 #>  [6744,]  130  136  133  143  143  143  142  142  142   143 #>  [6745,]  129  135  135  144  144  144  143  143  141   146 #>  [6746,]  129  135  135  144  144  144  143  143  141   146 #>  [6747,]  130  136  133  143  143  143  142  142  142   143 #>  [6748,]  129  135  134  144  144  144  143  143  141   145 #>  [6749,]  129  135  135  144  144  144  143  143  141   146 #>  [6750,]  130  136  133  143  143  143  142  142  143   144 #>  [6751,]  129  135  135  144  144  144  143  143  141   145 #>  [6752,]  130  136  133  143  143  143  142  142  142   143 #>  [6753,]  129  135  135  144  144  144  143  143  141   146 #>  [6754,]  129  135  135  144  144  144  143  143  141   145 #>  [6755,]  129  135  135  144  144  144  143  143  141   145 #>  [6756,]  129  135  135  144  144  144  143  143  141   146 #>  [6757,]  129  135  135  144  144  144  143  143  141   145 #>  [6758,]  130  136  133  143  143  143  142  142  143   144 #>  [6759,]  130  136  133  143  143  143  142  142  142   143 #>  [6760,]  129  135  135  144  144  144  143  143  141   145 #>  [6761,]  130  136  133  143  143  143  142  142  143   144 #>  [6762,]  129  135  135  144  144  144  143  143  141   145 #>  [6763,]  129  135  134  144  144  144  143  143  141   145 #>  [6764,]  129  135  135  144  144  144  143  143  141   146 #>  [6765,]  129  135  135  144  144  144  143  143  141   146 #>  [6766,]  129  135  135  144  144  144  143  143  141   145 #>  [6767,]  129  135  135  144  144  144  143  143  141   145 #>  [6768,]  130  136  133  143  143  143  142  142  143   144 #>  [6769,]  129  135  135  144  144  144  143  143  141   145 #>  [6770,]  130  136  133  143  143  143  142  142  142   143 #>  [6771,]  130  136  133  143  143  143  142  142  143   144 #>  [6772,]  129  135  135  144  144  144  143  143  141   146 #>  [6773,]  130  136  133  143  143  143  142  142  143   144 #>  [6774,]  129  135  135  144  144  144  143  143  141   146 #>  [6775,]  130  136  133  143  143  143  142  142  143   144 #>  [6776,]  130  136  133  143  143  143  142  142  143   144 #>  [6777,]  130  136  133  143  143  143  142  142  142   143 #>  [6778,]  129  135  134  144  144  144  143  143  141   145 #>  [6779,]  130  136  133  143  143  143  142  142  142   143 #>  [6780,]  129  135  135  144  144  144  143  143  141   145 #>  [6781,]  130  136  133  143  143  143  142  142  143   144 #>  [6782,]  129  135  135  144  144  144  143  143  141   146 #>  [6783,]  130  136  133  143  143  143  142  142  142   143 #>  [6784,]  130  136  133  143  143  143  142  142  142   143 #>  [6785,]  129  135  135  144  144  144  143  143  141   146 #>  [6786,]  130  136  133  143  143  143  142  142  142   143 #>  [6787,]  130  136  133  143  143  143  142  142  142   143 #>  [6788,]  129  135  135  144  144  144  143  143  141   146 #>  [6789,]  129  135  135  144  144  144  143  143  141   145 #>  [6790,]  130  136  133  143  143  143  142  142  142   143 #>  [6791,]  129  135  135  144  144  144  143  143  141   145 #>  [6792,]  129  135  135  144  144  144  143  143  141   146 #>  [6793,]  130  136  133  143  143  143  142  142  142   143 #>  [6794,]  130  136  133  143  143  143  142  142  143   144 #>  [6795,]  129  135  134  144  144  144  143  143  141   146 #>  [6796,]  130  136  133  143  143  143  142  142  143   144 #>  [6797,]  130  136  133  143  143  143  142  142  143   144 #>  [6798,]  129  135  135  144  144  144  143  143  141   145 #>  [6799,]  130  136  133  143  143  143  142  142  142   143 #>  [6800,]  130  136  133  143  143  143  142  142  142   143 #>  [6801,]  132  138  137  146  146  146  145  145  145   148 #>  [6802,]  131  137  136  145  145  145  144  144  144   147 #>  [6803,]  131  137  136  145  145  145  144  144  144   147 #>  [6804,]  131  137  136  145  145  145  144  144  144   147 #>  [6805,]  131  137  136  145  145  145  144  144  144   147 #>  [6806,]  132  138  137  146  146  146  145  145  145   148 #>  [6807,]  131  137  136  145  145  145  144  144  144   147 #>  [6808,]  132  138  137  146  146  146  145  145  145   148 #>  [6809,]  132  138  137  146  146  146  145  145  145   148 #>  [6810,]  131  137  136  145  145  145  144  144  144   147 #>  [6811,]  131  137  136  145  145  145  144  144  144   147 #>  [6812,]  132  138  137  146  146  146  145  145  145   148 #>  [6813,]  131  137  136  145  145  145  144  144  144   147 #>  [6814,]  131  137  136  145  145  145  144  144  144   147 #>  [6815,]  132  138  137  146  146  146  145  145  145   148 #>  [6816,]  131  137  136  145  145  145  144  144  144   147 #>  [6817,]  131  137  136  145  145  145  144  144  144   147 #>  [6818,]  131  137  136  145  145  145  144  144  144   147 #>  [6819,]  131  137  136  145  145  145  144  144  144   147 #>  [6820,]  132  138  137  146  146  146  145  145  145   148 #>  [6821,]  131  137  136  145  145  145  144  144  144   147 #>  [6822,]  131  137  136  145  145  145  144  144  144   147 #>  [6823,]  131  137  136  145  145  145  144  144  144   147 #>  [6824,]  131  137  136  145  145  145  144  144  144   147 #>  [6825,]  131  137  136  145  145  145  144  144  144   147 #>  [6826,]  132  138  137  146  146  146  145  145  145   148 #>  [6827,]  131  137  136  145  145  145  144  144  144   147 #>  [6828,]  131  137  136  145  145  145  144  144  144   147 #>  [6829,]  131  137  136  145  145  145  144  144  144   147 #>  [6830,]  131  137  136  145  145  145  144  144  144   147 #>  [6831,]  131  137  136  145  145  145  144  144  144   147 #>  [6832,]  131  137  136  145  145  145  144  144  144   147 #>  [6833,]  132  138  137  146  146  146  145  145  145   148 #>  [6834,]  131  137  136  145  145  145  144  144  144   147 #>  [6835,]  131  137  136  145  145  145  144  144  144   147 #>  [6836,]  131  137  136  145  145  145  144  144  144   147 #>  [6837,]  131  137  136  145  145  145  144  144  144   147 #>  [6838,]  131  137  136  145  145  145  144  144  144   147 #>  [6839,]  131  137  136  145  145  145  144  144  144   147 #>  [6840,]  131  137  136  145  145  145  144  144  144   147 #>  [6841,]  131  137  136  145  145  145  144  144  144   147 #>  [6842,]  131  137  136  145  145  145  144  144  144   147 #>  [6843,]  132  138  137  146  146  146  145  145  145   148 #>  [6844,]  131  137  136  145  145  145  144  144  144   147 #>  [6845,]  132  138  137  146  146  146  145  145  145   148 #>  [6846,]  132  138  137  146  146  146  145  145  145   148 #>  [6847,]  131  137  136  145  145  145  144  144  144   147 #>  [6848,]  131  137  136  145  145  145  144  144  144   147 #>  [6849,]  131  137  136  145  145  145  144  144  144   147 #>  [6850,]  132  138  137  146  146  146  145  145  145   148 #>  [6851,]  132  138  137  146  146  146  145  145  145   148 #>  [6852,]  131  137  136  145  145  145  144  144  144   147 #>  [6853,]  132  138  137  146  146  146  145  145  145   148 #>  [6854,]  131  137  136  145  145  145  144  144  144   147 #>  [6855,]  132  138  137  146  146  146  145  145  145   148 #>  [6856,]  132  138  137  146  146  146  145  145  145   148 #>  [6857,]  132  138  137  146  146  146  145  145  145   148 #>  [6858,]  132  138  137  146  146  146  145  145  145   148 #>  [6859,]  131  137  136  145  145  145  144  144  144   147 #>  [6860,]  132  138  137  146  146  146  145  145  145   148 #>  [6861,]  132  138  137  146  146  146  145  145  145   148 #>  [6862,]  131  137  136  145  145  145  144  144  144   147 #>  [6863,]  131  137  136  145  145  145  144  144  144   147 #>  [6864,]  132  138  137  146  146  146  145  145  145   148 #>  [6865,]  132  138  137  146  146  146  145  145  145   148 #>  [6866,]  132  138  137  146  146  146  145  145  145   148 #>  [6867,]  131  137  136  145  145  145  144  144  144   147 #>  [6868,]  132  138  137  146  146  146  145  145  145   148 #>  [6869,]  131  137  136  145  145  145  144  144  144   147 #>  [6870,]  131  137  136  145  145  145  144  144  144   147 #>  [6871,]  132  138  137  146  146  146  145  145  145   148 #>  [6872,]  132  138  137  146  146  146  145  145  145   148 #>  [6873,]  132  138  137  146  146  146  145  145  145   148 #>  [6874,]  132  138  137  146  146  146  145  145  145   148 #>  [6875,]  132  138  137  146  146  146  145  145  145   148 #>  [6876,]  132  138  137  146  146  146  145  145  145   148 #>  [6877,]  131  137  136  145  145  145  144  144  144   147 #>  [6878,]  132  138  137  146  146  146  145  145  145   148 #>  [6879,]  131  137  136  145  145  145  144  144  144   147 #>  [6880,]  131  137  136  145  145  145  144  144  144   147 #>  [6881,]  132  138  137  146  146  146  145  145  145   148 #>  [6882,]  131  137  136  145  145  145  144  144  144   147 #>  [6883,]  131  137  136  145  145  145  144  144  144   147 #>  [6884,]  131  137  136  145  145  145  144  144  144   147 #>  [6885,]  131  137  136  145  145  145  144  144  144   147 #>  [6886,]  131  137  136  145  145  145  144  144  144   147 #>  [6887,]  131  137  136  145  145  145  144  144  144   147 #>  [6888,]  131  137  136  145  145  145  144  144  144   147 #>  [6889,]  131  137  136  145  145  145  144  144  144   147 #>  [6890,]  131  137  136  145  145  145  144  144  144   147 #>  [6891,]  131  137  136  145  145  145  144  144  144   147 #>  [6892,]  132  138  137  146  146  146  145  145  145   148 #>  [6893,]  131  137  136  145  145  145  144  144  144   147 #>  [6894,]  132  138  137  146  146  146  145  145  145   148 #>  [6895,]  131  137  136  145  145  145  144  144  144   147 #>  [6896,]  132  138  137  146  146  146  145  145  145   148 #>  [6897,]  132  138  137  146  146  146  145  145  145   148 #>  [6898,]  131  137  136  145  145  145  144  144  144   147 #>  [6899,]  131  137  136  145  145  145  144  144  144   147 #>  [6900,]  131  137  136  145  145  145  144  144  144   147 #>  [6901,]  134  140  138  148  148  148  147  148  148   151 #>  [6902,]  134  140  138  147  147  147  146  146  146   149 #>  [6903,]  133  139  138  148  148  148  147  147  147   150 #>  [6904,]  133  139  138  148  148  148  147  148  148   151 #>  [6905,]  133  139  138  148  148  148  147  147  147   150 #>  [6906,]  134  140  138  147  147  147  146  146  146   149 #>  [6907,]  133  139  138  148  148  148  147  147  147   150 #>  [6908,]  133  139  138  148  148  148  147  147  147   150 #>  [6909,]  133  139  138  148  148  148  147  148  148   151 #>  [6910,]  133  139  138  148  148  148  147  148  148   151 #>  [6911,]  133  139  138  147  147  147  146  146  146   149 #>  [6912,]  133  139  138  147  147  147  146  146  146   149 #>  [6913,]  134  140  138  148  148  148  147  147  147   150 #>  [6914,]  134  140  138  148  148  148  147  148  148   151 #>  [6915,]  134  140  138  147  147  147  146  146  146   149 #>  [6916,]  134  140  138  148  148  148  147  147  147   150 #>  [6917,]  134  140  138  147  147  147  146  146  146   149 #>  [6918,]  133  139  138  147  147  147  146  146  146   149 #>  [6919,]  133  139  138  147  147  147  146  146  146   149 #>  [6920,]  133  139  138  148  148  148  147  147  147   150 #>  [6921,]  134  140  138  147  147  147  146  146  146   149 #>  [6922,]  134  140  138  148  148  148  147  147  147   150 #>  [6923,]  133  139  138  147  147  147  146  146  146   149 #>  [6924,]  133  139  138  148  148  148  147  147  147   150 #>  [6925,]  133  139  138  148  148  148  147  147  147   150 #>  [6926,]  134  140  138  147  147  147  146  146  146   149 #>  [6927,]  134  140  138  148  148  148  147  148  148   151 #>  [6928,]  133  139  138  148  148  148  147  147  147   150 #>  [6929,]  134  140  138  147  147  147  146  146  146   149 #>  [6930,]  133  139  138  147  147  147  146  146  146   149 #>  [6931,]  133  139  138  147  147  147  146  146  146   149 #>  [6932,]  133  139  138  147  147  147  146  146  146   149 #>  [6933,]  134  140  138  148  148  148  147  148  148   151 #>  [6934,]  133  139  138  147  147  147  146  146  146   149 #>  [6935,]  134  140  138  147  147  147  146  146  146   149 #>  [6936,]  133  139  138  148  148  148  147  148  148   151 #>  [6937,]  134  140  138  147  147  147  146  146  146   149 #>  [6938,]  133  139  138  148  148  148  147  148  148   151 #>  [6939,]  133  139  138  148  148  148  147  147  147   150 #>  [6940,]  133  139  138  148  148  148  147  147  147   150 #>  [6941,]  134  140  138  148  148  148  147  148  148   151 #>  [6942,]  133  139  138  147  147  147  146  146  146   149 #>  [6943,]  133  139  138  147  147  147  146  146  146   149 #>  [6944,]  134  140  138  147  147  147  146  146  146   149 #>  [6945,]  133  139  138  148  148  148  147  147  147   150 #>  [6946,]  133  139  138  147  147  147  146  146  146   149 #>  [6947,]  133  139  138  147  147  147  146  146  146   149 #>  [6948,]  133  139  138  147  147  147  146  146  146   149 #>  [6949,]  133  139  138  148  148  148  147  147  147   150 #>  [6950,]  134  140  138  148  148  148  147  147  147   150 #>  [6951,]  133  139  138  147  147  147  146  146  146   149 #>  [6952,]  134  140  138  148  148  148  147  148  148   151 #>  [6953,]  133  139  138  148  148  148  147  147  147   150 #>  [6954,]  133  139  138  148  148  148  147  147  147   150 #>  [6955,]  133  139  138  148  148  148  147  147  147   150 #>  [6956,]  133  139  138  147  147  147  146  146  146   149 #>  [6957,]  133  139  138  148  148  148  147  148  148   151 #>  [6958,]  134  140  138  148  148  148  147  148  148   151 #>  [6959,]  134  140  138  148  148  148  147  147  147   150 #>  [6960,]  133  139  138  147  147  147  146  146  146   149 #>  [6961,]  134  140  138  147  147  147  146  146  146   149 #>  [6962,]  133  139  138  147  147  147  146  146  146   149 #>  [6963,]  133  139  138  147  147  147  146  146  146   149 #>  [6964,]  133  139  138  147  147  147  146  146  146   149 #>  [6965,]  133  139  138  147  147  147  146  146  146   149 #>  [6966,]  133  139  138  147  147  147  146  146  146   149 #>  [6967,]  133  139  138  148  148  148  147  148  148   151 #>  [6968,]  134  140  138  147  147  147  146  146  146   149 #>  [6969,]  133  139  138  147  147  147  146  146  146   149 #>  [6970,]  134  140  138  147  147  147  146  146  146   149 #>  [6971,]  134  140  138  148  148  148  147  147  147   150 #>  [6972,]  133  139  138  148  148  148  147  147  147   150 #>  [6973,]  134  140  138  148  148  148  147  148  148   151 #>  [6974,]  133  139  138  148  148  148  147  148  148   151 #>  [6975,]  133  139  138  147  147  147  146  146  146   149 #>  [6976,]  134  140  138  148  148  148  147  147  147   150 #>  [6977,]  134  140  138  148  148  148  147  147  147   150 #>  [6978,]  133  139  138  147  147  147  146  146  146   149 #>  [6979,]  134  140  138  147  147  147  146  146  146   149 #>  [6980,]  133  139  138  148  148  148  147  148  148   151 #>  [6981,]  134  140  138  147  147  147  146  146  146   149 #>  [6982,]  133  139  138  147  147  147  146  146  146   149 #>  [6983,]  134  140  138  148  148  148  147  147  147   150 #>  [6984,]  133  139  138  148  148  148  147  147  147   150 #>  [6985,]  133  139  138  148  148  148  147  148  148   151 #>  [6986,]  134  140  138  148  148  148  147  147  147   150 #>  [6987,]  133  139  138  148  148  148  147  148  148   151 #>  [6988,]  133  139  138  148  148  148  147  148  148   151 #>  [6989,]  133  139  138  147  147  147  146  146  146   149 #>  [6990,]  134  140  138  148  148  148  147  147  147   150 #>  [6991,]  133  139  138  148  148  148  147  148  148   151 #>  [6992,]  133  139  138  147  147  147  146  146  146   149 #>  [6993,]  134  140  138  147  147  147  146  146  146   149 #>  [6994,]  134  140  138  147  147  147  146  146  146   149 #>  [6995,]  133  139  138  147  147  147  146  146  146   149 #>  [6996,]  134  140  138  147  147  147  146  146  146   149 #>  [6997,]  133  139  138  147  147  147  146  146  146   149 #>  [6998,]  133  139  138  148  148  148  147  147  147   150 #>  [6999,]  134  140  138  148  148  148  147  148  148   151 #>  [7000,]  134  140  138  147  147  147  146  146  146   149 #>  [7001,]  136  142  140  150  150  149  149  150  150   153 #>  [7002,]  136  142  140  150  150  149  149  150  150   153 #>  [7003,]  135  141  139  149  149  149  148  149  149   152 #>  [7004,]  136  142  140  150  150  149  148  149  149   152 #>  [7005,]  136  142  140  150  150  149  148  149  149   152 #>  [7006,]  136  142  140  150  150  149  148  149  149   152 #>  [7007,]  136  142  140  150  150  149  149  150  150   153 #>  [7008,]  136  142  140  150  150  149  149  150  150   153 #>  [7009,]  135  141  139  149  149  149  148  149  149   152 #>  [7010,]  135  141  139  149  149  149  148  149  149   152 #>  [7011,]  135  141  139  149  149  149  148  149  149   152 #>  [7012,]  136  142  140  150  150  149  149  150  150   153 #>  [7013,]  136  142  140  150  150  149  149  150  150   153 #>  [7014,]  135  141  139  149  149  149  148  149  149   152 #>  [7015,]  136  142  140  150  150  149  149  150  150   153 #>  [7016,]  136  142  140  150  150  149  149  150  150   153 #>  [7017,]  136  142  140  150  150  149  148  149  149   152 #>  [7018,]  136  142  140  150  150  149  149  150  150   153 #>  [7019,]  136  142  140  150  150  149  149  150  150   153 #>  [7020,]  136  142  140  150  150  149  149  150  150   153 #>  [7021,]  135  141  139  149  149  149  148  149  149   152 #>  [7022,]  136  142  140  150  150  149  149  150  150   153 #>  [7023,]  136  142  140  150  150  149  149  150  150   153 #>  [7024,]  136  142  140  150  150  149  148  149  149   152 #>  [7025,]  136  142  140  150  150  149  148  149  149   152 #>  [7026,]  136  142  140  150  150  149  149  150  150   153 #>  [7027,]  136  142  140  150  150  149  149  150  150   153 #>  [7028,]  135  141  139  149  149  149  148  149  149   152 #>  [7029,]  136  142  140  150  150  149  149  150  150   153 #>  [7030,]  136  142  140  150  150  149  149  150  150   153 #>  [7031,]  135  141  139  149  149  149  148  149  149   152 #>  [7032,]  135  141  139  149  149  149  148  149  149   152 #>  [7033,]  136  142  140  150  150  149  149  150  150   153 #>  [7034,]  135  141  139  149  149  149  148  149  149   152 #>  [7035,]  135  141  139  149  149  149  148  149  149   152 #>  [7036,]  136  142  140  150  150  149  149  150  150   153 #>  [7037,]  136  142  140  150  150  149  149  150  150   153 #>  [7038,]  136  142  140  150  150  149  149  150  150   153 #>  [7039,]  135  141  139  149  149  149  148  149  149   152 #>  [7040,]  135  141  139  149  149  149  148  149  149   152 #>  [7041,]  136  142  140  150  150  149  149  150  150   153 #>  [7042,]  136  142  140  150  150  149  148  149  149   152 #>  [7043,]  136  142  140  150  150  149  149  150  150   153 #>  [7044,]  136  142  140  150  150  149  149  150  150   153 #>  [7045,]  136  142  140  150  150  149  149  150  150   153 #>  [7046,]  136  142  140  150  150  149  149  150  150   153 #>  [7047,]  136  142  140  150  150  149  148  149  149   152 #>  [7048,]  135  141  139  149  149  149  148  149  149   152 #>  [7049,]  136  142  140  150  150  149  149  150  150   153 #>  [7050,]  136  142  140  150  150  149  149  150  150   153 #>  [7051,]  136  142  140  150  150  149  149  150  150   153 #>  [7052,]  135  141  139  149  149  149  148  149  149   152 #>  [7053,]  136  142  140  150  150  149  149  150  150   153 #>  [7054,]  136  142  140  150  150  149  148  149  149   152 #>  [7055,]  136  142  140  150  150  149  149  150  150   153 #>  [7056,]  136  142  140  150  150  149  149  150  150   153 #>  [7057,]  136  142  140  150  150  149  148  149  149   152 #>  [7058,]  136  142  140  150  150  149  149  150  150   153 #>  [7059,]  136  142  140  150  150  149  149  150  150   153 #>  [7060,]  136  142  140  150  150  149  149  150  150   153 #>  [7061,]  136  142  140  150  150  149  149  150  150   153 #>  [7062,]  136  142  140  150  150  149  148  149  149   152 #>  [7063,]  136  142  140  150  150  149  149  150  150   153 #>  [7064,]  136  142  140  150  150  149  149  150  150   153 #>  [7065,]  135  141  139  149  149  149  148  149  149   152 #>  [7066,]  136  142  140  150  150  149  149  150  150   153 #>  [7067,]  136  142  140  150  150  149  148  149  149   152 #>  [7068,]  136  142  140  150  150  149  149  150  150   153 #>  [7069,]  136  142  140  150  150  149  149  150  150   153 #>  [7070,]  135  141  139  149  149  149  148  149  149   152 #>  [7071,]  136  142  140  150  150  149  149  150  150   153 #>  [7072,]  136  142  140  150  150  149  148  149  149   152 #>  [7073,]  136  142  140  150  150  149  148  149  149   152 #>  [7074,]  135  141  139  149  149  149  148  149  149   152 #>  [7075,]  136  142  140  150  150  149  149  150  150   153 #>  [7076,]  136  142  140  150  150  149  148  149  149   152 #>  [7077,]  136  142  140  150  150  149  149  150  150   153 #>  [7078,]  136  142  140  150  150  149  149  150  150   153 #>  [7079,]  136  142  140  150  150  149  148  149  149   152 #>  [7080,]  136  142  140  150  150  149  149  150  150   153 #>  [7081,]  136  142  140  150  150  149  149  150  150   153 #>  [7082,]  135  141  139  149  149  149  148  149  149   152 #>  [7083,]  136  142  140  150  150  149  149  150  150   153 #>  [7084,]  136  142  140  150  150  149  149  150  150   153 #>  [7085,]  136  142  140  150  150  149  149  150  150   153 #>  [7086,]  136  142  140  150  150  149  148  149  149   152 #>  [7087,]  136  142  140  150  150  149  149  150  150   153 #>  [7088,]  136  142  140  150  150  149  148  149  149   152 #>  [7089,]  136  142  140  150  150  149  148  149  149   152 #>  [7090,]  136  142  140  150  150  149  149  150  150   153 #>  [7091,]  136  142  140  150  150  149  148  149  149   152 #>  [7092,]  136  142  140  150  150  149  148  149  149   152 #>  [7093,]  136  142  140  150  150  149  149  150  150   153 #>  [7094,]  136  142  140  150  150  149  148  149  149   152 #>  [7095,]  136  142  140  150  150  149  149  150  150   153 #>  [7096,]  136  142  140  150  150  149  149  150  150   153 #>  [7097,]  136  142  140  150  150  149  149  150  150   153 #>  [7098,]  135  141  139  149  149  149  148  149  149   152 #>  [7099,]  136  142  140  150  150  149  148  149  149   152 #>  [7100,]  136  142  140  150  150  149  149  150  150   153 #>  [7101,]  137  143  141  151  151  150  151  152  151   154 #>  [7102,]  137  143  141  151  151  150  151  152  151   154 #>  [7103,]  137  143  141  151  151  150  151  152  151   154 #>  [7104,]  138  144  142  151  151  150  151  152  151   154 #>  [7105,]  137  143  141  151  151  150  151  152  151   154 #>  [7106,]  137  143  141  151  151  150  151  152  151   154 #>  [7107,]  138  144  142  151  151  150  151  152  151   154 #>  [7108,]  137  143  141  151  152  150  151  152  151   154 #>  [7109,]  137  143  141  151  152  150  151  152  151   154 #>  [7110,]  138  144  142  151  151  150  151  152  151   154 #>  [7111,]  137  143  141  151  151  150  151  152  151   154 #>  [7112,]  137  143  141  151  151  150  151  152  151   154 #>  [7113,]  137  143  141  151  151  150  151  152  151   154 #>  [7114,]  137  143  141  151  151  150  151  152  151   154 #>  [7115,]  138  144  142  151  151  150  150  151  151   154 #>  [7116,]  138  144  142  151  151  150  151  152  151   154 #>  [7117,]  138  144  142  151  151  150  151  152  151   154 #>  [7118,]  138  144  142  151  151  150  151  152  151   154 #>  [7119,]  137  143  141  151  151  150  151  152  151   154 #>  [7120,]  137  143  141  151  151  150  151  152  151   155 #>  [7121,]  138  144  142  151  151  150  151  152  151   154 #>  [7122,]  137  143  141  151  151  150  151  152  151   155 #>  [7123,]  138  144  142  151  151  150  151  152  151   154 #>  [7124,]  137  143  141  151  151  150  151  152  151   154 #>  [7125,]  138  144  142  151  151  150  151  152  151   154 #>  [7126,]  137  143  141  151  152  150  151  152  151   154 #>  [7127,]  138  144  142  151  151  150  151  152  151   154 #>  [7128,]  138  144  142  151  151  150  151  152  151   154 #>  [7129,]  137  143  141  151  151  150  151  152  151   155 #>  [7130,]  137  143  141  151  151  150  151  152  151   154 #>  [7131,]  137  143  141  151  151  150  150  151  151   154 #>  [7132,]  137  143  141  151  151  150  151  152  151   154 #>  [7133,]  137  143  141  151  151  150  151  152  151   154 #>  [7134,]  137  143  141  151  151  150  150  151  151   154 #>  [7135,]  137  143  141  151  151  150  151  152  151   154 #>  [7136,]  137  143  141  151  151  150  151  152  151   154 #>  [7137,]  137  143  141  151  151  150  151  152  151   154 #>  [7138,]  137  143  141  151  151  150  151  152  151   154 #>  [7139,]  138  144  142  151  151  150  151  152  151   154 #>  [7140,]  137  143  141  151  151  150  151  152  151   154 #>  [7141,]  137  143  141  151  151  150  151  152  151   154 #>  [7142,]  137  143  141  151  151  150  150  151  151   154 #>  [7143,]  138  144  142  151  152  150  150  151  151   154 #>  [7144,]  137  143  141  151  151  150  150  151  151   154 #>  [7145,]  138  144  142  151  151  150  151  152  151   154 #>  [7146,]  137  143  141  151  152  150  151  152  151   154 #>  [7147,]  138  144  142  151  151  150  151  152  151   154 #>  [7148,]  137  143  141  151  151  150  151  152  151   154 #>  [7149,]  137  143  141  151  151  150  151  152  151   154 #>  [7150,]  137  143  141  151  151  150  151  152  151   154 #>  [7151,]  137  143  141  151  151  150  151  152  151   154 #>  [7152,]  137  143  141  151  151  150  151  152  151   154 #>  [7153,]  138  144  142  151  151  150  151  152  151   154 #>  [7154,]  137  143  141  151  151  150  151  152  151   154 #>  [7155,]  137  143  141  151  151  150  151  152  151   154 #>  [7156,]  137  143  141  151  152  150  151  152  151   154 #>  [7157,]  137  143  141  151  151  150  151  152  151   154 #>  [7158,]  137  143  141  151  151  150  151  152  151   155 #>  [7159,]  137  143  141  151  151  150  151  152  151   154 #>  [7160,]  137  143  141  151  151  150  151  152  151   154 #>  [7161,]  138  144  142  151  152  150  151  152  151   154 #>  [7162,]  137  143  141  151  151  150  151  152  151   154 #>  [7163,]  137  143  141  151  151  150  150  151  151   154 #>  [7164,]  138  144  142  151  152  150  151  152  151   155 #>  [7165,]  137  143  141  151  151  150  151  152  151   154 #>  [7166,]  137  143  141  151  151  150  151  152  151   154 #>  [7167,]  137  143  141  151  151  150  151  152  151   154 #>  [7168,]  137  143  141  151  151  150  151  152  151   154 #>  [7169,]  137  143  141  151  151  150  151  152  151   154 #>  [7170,]  137  143  141  151  151  150  151  152  151   154 #>  [7171,]  138  144  142  151  151  150  151  152  151   154 #>  [7172,]  138  144  142  151  151  150  151  152  151   154 #>  [7173,]  138  144  142  151  151  150  151  152  151   154 #>  [7174,]  138  144  142  151  151  150  151  152  151   154 #>  [7175,]  138  144  142  151  151  150  150  151  151   154 #>  [7176,]  138  144  142  151  152  150  151  152  151   154 #>  [7177,]  138  144  142  151  151  150  151  152  151   155 #>  [7178,]  137  143  141  151  151  150  150  151  151   154 #>  [7179,]  137  143  141  151  151  150  151  152  151   154 #>  [7180,]  137  143  141  151  151  150  151  152  151   154 #>  [7181,]  137  143  141  151  151  150  151  152  151   154 #>  [7182,]  137  143  141  151  151  150  151  152  151   154 #>  [7183,]  137  143  141  151  151  150  151  152  151   154 #>  [7184,]  138  144  142  151  151  150  151  152  151   154 #>  [7185,]  137  143  141  151  151  150  151  152  151   154 #>  [7186,]  137  143  141  151  151  150  151  152  151   154 #>  [7187,]  137  143  141  151  151  150  151  152  151   155 #>  [7188,]  138  144  142  151  151  150  151  152  151   154 #>  [7189,]  137  143  141  151  151  150  151  152  151   154 #>  [7190,]  137  143  141  151  151  150  151  152  151   154 #>  [7191,]  137  143  141  151  151  150  151  152  151   154 #>  [7192,]  137  143  141  151  151  150  151  152  151   154 #>  [7193,]  137  143  141  151  151  150  151  152  151   154 #>  [7194,]  138  144  142  151  152  150  151  152  151   154 #>  [7195,]  138  144  142  151  151  150  150  151  151   154 #>  [7196,]  137  143  141  151  151  150  151  152  151   154 #>  [7197,]  137  143  141  151  151  150  151  152  151   154 #>  [7198,]  137  143  141  151  151  150  151  152  151   154 #>  [7199,]  137  143  141  151  151  150  151  152  151   154 #>  [7200,]  138  144  142  151  151  150  151  152  151   154 #>  [7201,]  140  146  144  153  154  152  153  154  153   157 #>  [7202,]  140  146  144  153  154  152  153  154  153   157 #>  [7203,]  140  146  144  153  154  152  153  154  153   157 #>  [7204,]  140  146  144  153  154  152  153  154  153   157 #>  [7205,]  140  146  144  153  154  152  153  154  153   157 #>  [7206,]  140  146  144  153  154  152  153  154  154   157 #>  [7207,]  140  146  144  153  154  152  153  154  153   157 #>  [7208,]  140  146  144  153  154  152  153  154  154   157 #>  [7209,]  140  146  144  153  154  152  153  154  154   157 #>  [7210,]  140  146  144  153  154  152  153  154  153   157 #>  [7211,]  140  146  144  153  154  152  153  154  153   157 #>  [7212,]  139  145  143  152  153  151  152  153  152   156 #>  [7213,]  140  146  144  153  154  152  153  154  153   157 #>  [7214,]  140  146  144  153  154  152  153  154  153   157 #>  [7215,]  139  145  143  152  153  151  152  153  152   156 #>  [7216,]  140  146  144  153  154  152  153  154  153   157 #>  [7217,]  139  145  143  152  153  151  152  153  152   156 #>  [7218,]  140  146  144  153  154  152  153  154  153   157 #>  [7219,]  140  146  144  153  154  152  153  154  153   157 #>  [7220,]  140  146  144  153  154  152  153  154  154   157 #>  [7221,]  140  146  144  153  154  152  153  154  153   157 #>  [7222,]  140  146  144  153  154  152  153  154  153   157 #>  [7223,]  139  145  143  152  153  151  152  153  152   156 #>  [7224,]  140  146  144  153  154  152  153  154  153   157 #>  [7225,]  140  146  144  153  154  152  153  154  153   157 #>  [7226,]  140  146  144  153  154  152  153  154  154   157 #>  [7227,]  140  146  144  153  154  152  153  154  153   157 #>  [7228,]  140  146  144  153  154  152  153  154  153   157 #>  [7229,]  140  146  144  153  154  152  153  154  153   157 #>  [7230,]  140  146  144  153  154  152  153  154  153   157 #>  [7231,]  139  145  143  152  153  151  152  153  152   156 #>  [7232,]  140  146  144  153  154  152  153  154  153   157 #>  [7233,]  140  146  144  153  154  152  153  154  154   157 #>  [7234,]  139  145  143  152  153  151  152  153  152   156 #>  [7235,]  140  146  144  153  154  152  153  154  153   157 #>  [7236,]  140  146  144  153  154  152  153  154  153   157 #>  [7237,]  139  145  143  152  153  151  152  153  152   156 #>  [7238,]  140  146  144  153  154  152  153  154  153   157 #>  [7239,]  140  146  144  153  154  152  153  154  153   157 #>  [7240,]  140  146  144  153  154  152  153  154  153   157 #>  [7241,]  140  146  144  153  154  152  153  154  153   157 #>  [7242,]  139  145  143  152  153  151  152  153  152   156 #>  [7243,]  139  145  143  152  153  151  152  153  152   156 #>  [7244,]  139  145  143  152  153  151  152  153  152   156 #>  [7245,]  140  146  144  153  154  152  153  154  154   157 #>  [7246,]  140  146  144  153  154  152  153  154  154   157 #>  [7247,]  140  146  144  153  154  152  153  154  153   157 #>  [7248,]  139  145  143  152  153  151  152  153  152   156 #>  [7249,]  140  146  144  153  154  152  153  154  153   157 #>  [7250,]  140  146  144  153  154  152  153  154  154   157 #>  [7251,]  140  146  144  153  154  152  153  154  154   157 #>  [7252,]  140  146  144  153  154  152  153  154  153   157 #>  [7253,]  140  146  144  153  154  152  153  154  154   157 #>  [7254,]  140  146  144  153  154  152  153  154  153   157 #>  [7255,]  140  146  144  153  154  152  153  154  153   157 #>  [7256,]  140  146  144  153  154  152  153  154  154   157 #>  [7257,]  140  146  144  153  154  152  153  154  154   157 #>  [7258,]  140  146  144  153  154  152  153  154  154   157 #>  [7259,]  140  146  144  153  154  152  153  154  153   157 #>  [7260,]  140  146  144  153  154  152  153  154  153   157 #>  [7261,]  140  146  144  153  154  152  153  154  154   157 #>  [7262,]  140  146  144  153  154  152  153  154  153   157 #>  [7263,]  139  145  143  152  153  151  152  153  152   156 #>  [7264,]  140  146  144  153  154  152  153  154  154   157 #>  [7265,]  140  146  144  153  154  152  153  154  154   157 #>  [7266,]  140  146  144  153  154  152  153  154  154   157 #>  [7267,]  140  146  144  153  154  152  153  154  153   157 #>  [7268,]  140  146  144  153  154  152  153  154  154   157 #>  [7269,]  140  146  144  153  154  152  153  154  153   157 #>  [7270,]  139  145  143  152  153  151  152  153  152   156 #>  [7271,]  140  146  144  153  154  152  153  154  153   157 #>  [7272,]  140  146  144  153  154  152  153  154  154   157 #>  [7273,]  140  146  144  153  154  152  153  154  153   157 #>  [7274,]  140  146  144  153  154  152  153  154  153   157 #>  [7275,]  139  145  143  152  153  151  152  153  152   156 #>  [7276,]  140  146  144  153  154  152  153  154  154   157 #>  [7277,]  140  146  144  153  154  152  153  154  153   157 #>  [7278,]  139  145  143  152  153  151  152  153  152   156 #>  [7279,]  139  145  143  152  153  151  152  153  152   156 #>  [7280,]  140  146  144  153  154  152  153  154  153   157 #>  [7281,]  139  145  143  152  153  151  152  153  152   156 #>  [7282,]  140  146  144  153  154  152  153  154  153   157 #>  [7283,]  140  146  144  153  154  152  153  154  153   157 #>  [7284,]  140  146  144  153  154  152  153  154  153   157 #>  [7285,]  140  146  144  153  154  152  153  154  153   157 #>  [7286,]  140  146  144  153  154  152  153  154  153   157 #>  [7287,]  140  146  144  153  154  152  153  154  153   157 #>  [7288,]  140  146  144  153  154  152  153  154  153   157 #>  [7289,]  140  146  144  153  154  152  153  154  153   157 #>  [7290,]  140  146  144  153  154  152  153  154  153   157 #>  [7291,]  140  146  144  153  154  152  153  154  153   157 #>  [7292,]  140  146  144  153  154  152  153  154  154   157 #>  [7293,]  140  146  144  153  154  152  153  154  153   157 #>  [7294,]  139  145  143  152  153  151  152  153  152   156 #>  [7295,]  139  145  143  152  153  151  152  153  152   156 #>  [7296,]  140  146  144  153  154  152  153  154  154   157 #>  [7297,]  140  146  144  153  154  152  153  154  154   157 #>  [7298,]  140  146  144  153  154  152  153  154  153   157 #>  [7299,]  140  146  144  153  154  152  153  154  153   157 #>  [7300,]  139  145  143  152  153  151  152  153  152   156 #>  [7301,]  142  147  145  154  155  153  154  155  155   158 #>  [7302,]  142  147  145  154  155  153  154  155  155   158 #>  [7303,]  141  148  147  156  156  154  155  156  156   159 #>  [7304,]  141  149  146  155  156  154  155  156  156   159 #>  [7305,]  141  148  148  156  156  154  155  156  156   159 #>  [7306,]  142  147  145  154  155  153  154  155  155   158 #>  [7307,]  141  149  146  155  156  154  155  156  156   159 #>  [7308,]  141  149  146  155  156  154  155  156  156   159 #>  [7309,]  141  149  146  155  156  154  155  156  156   159 #>  [7310,]  141  149  146  155  156  154  155  156  156   159 #>  [7311,]  141  148  147  156  156  154  155  156  156   159 #>  [7312,]  141  148  148  156  156  154  155  156  156   159 #>  [7313,]  142  147  145  154  155  153  154  155  155   158 #>  [7314,]  142  147  145  154  155  153  154  155  155   158 #>  [7315,]  142  147  145  154  155  153  154  155  155   158 #>  [7316,]  142  147  145  154  155  153  154  155  155   158 #>  [7317,]  142  147  145  154  155  153  154  155  155   158 #>  [7318,]  141  149  146  155  156  154  155  156  156   159 #>  [7319,]  141  148  147  156  156  154  155  156  156   159 #>  [7320,]  141  148  148  156  156  154  155  156  156   159 #>  [7321,]  142  147  145  154  155  153  154  155  155   158 #>  [7322,]  142  147  145  154  155  153  154  155  155   158 #>  [7323,]  141  149  146  155  156  154  155  156  156   159 #>  [7324,]  141  148  148  156  156  154  155  156  156   159 #>  [7325,]  141  149  146  155  156  154  155  156  156   159 #>  [7326,]  142  147  145  154  155  153  154  155  155   158 #>  [7327,]  142  147  145  154  155  153  154  155  155   158 #>  [7328,]  141  149  146  155  156  154  155  156  156   159 #>  [7329,]  142  147  145  154  155  153  154  155  155   158 #>  [7330,]  141  148  147  156  156  154  155  156  156   159 #>  [7331,]  141  148  148  156  156  154  155  156  156   159 #>  [7332,]  141  148  148  156  156  154  155  156  156   159 #>  [7333,]  142  147  145  154  155  153  154  155  155   158 #>  [7334,]  141  148  147  156  156  154  155  156  156   159 #>  [7335,]  142  147  145  154  155  153  154  155  155   158 #>  [7336,]  141  148  148  156  156  154  155  156  156   159 #>  [7337,]  142  147  145  154  155  153  154  155  155   158 #>  [7338,]  141  149  146  155  156  154  155  156  156   159 #>  [7339,]  141  149  146  155  156  154  155  156  156   159 #>  [7340,]  141  148  148  156  156  154  155  156  156   159 #>  [7341,]  142  147  145  154  155  153  154  155  155   158 #>  [7342,]  141  148  147  156  156  154  155  156  156   159 #>  [7343,]  141  149  146  155  156  154  155  156  156   159 #>  [7344,]  142  147  145  154  155  153  154  155  155   158 #>  [7345,]  141  149  146  155  156  154  155  156  156   159 #>  [7346,]  141  149  146  155  156  154  155  156  156   159 #>  [7347,]  141  149  146  155  156  154  155  156  156   159 #>  [7348,]  141  148  147  156  156  154  155  156  156   159 #>  [7349,]  141  148  147  156  156  154  155  156  156   159 #>  [7350,]  142  147  145  154  155  153  154  155  155   158 #>  [7351,]  141  148  147  156  156  154  155  156  156   159 #>  [7352,]  142  147  145  154  155  153  154  155  155   158 #>  [7353,]  141  149  146  155  156  154  155  156  156   159 #>  [7354,]  141  148  147  156  156  154  155  156  156   159 #>  [7355,]  141  148  147  156  156  154  155  156  156   159 #>  [7356,]  141  149  146  155  156  154  155  156  156   159 #>  [7357,]  141  148  147  156  156  154  155  156  156   159 #>  [7358,]  142  147  145  154  155  153  154  155  155   158 #>  [7359,]  142  147  145  154  155  153  154  155  155   158 #>  [7360,]  141  148  148  156  156  154  155  156  156   159 #>  [7361,]  142  147  145  154  155  153  154  155  155   158 #>  [7362,]  141  148  147  156  156  154  155  156  156   159 #>  [7363,]  141  148  148  156  156  154  155  156  156   159 #>  [7364,]  141  149  146  155  156  154  155  156  156   159 #>  [7365,]  141  148  147  156  156  154  155  156  156   159 #>  [7366,]  141  148  147  156  156  154  155  156  156   159 #>  [7367,]  141  148  147  156  156  154  155  156  156   159 #>  [7368,]  142  147  145  154  155  153  154  155  155   158 #>  [7369,]  141  148  147  156  156  154  155  156  156   159 #>  [7370,]  142  147  145  154  155  153  154  155  155   158 #>  [7371,]  142  147  145  154  155  153  154  155  155   158 #>  [7372,]  141  149  146  155  156  154  155  156  156   159 #>  [7373,]  142  147  145  154  155  153  154  155  155   158 #>  [7374,]  141  149  146  155  156  154  155  156  156   159 #>  [7375,]  141  149  146  155  156  154  155  156  156   159 #>  [7376,]  142  147  145  154  155  153  154  155  155   158 #>  [7377,]  142  147  145  154  155  153  154  155  155   158 #>  [7378,]  141  148  147  156  156  154  155  156  156   159 #>  [7379,]  142  147  145  154  155  153  154  155  155   158 #>  [7380,]  141  148  148  156  156  154  155  156  156   159 #>  [7381,]  142  147  145  154  155  153  154  155  155   158 #>  [7382,]  141  149  146  155  156  154  155  156  156   159 #>  [7383,]  142  147  145  154  155  153  154  155  155   158 #>  [7384,]  141  149  146  155  156  154  155  156  156   159 #>  [7385,]  141  148  147  156  156  154  155  156  156   159 #>  [7386,]  142  147  145  154  155  153  154  155  155   158 #>  [7387,]  141  149  146  155  156  154  155  156  156   159 #>  [7388,]  141  149  146  155  156  154  155  156  156   159 #>  [7389,]  141  148  147  156  156  154  155  156  156   159 #>  [7390,]  142  147  145  154  155  153  154  155  155   158 #>  [7391,]  141  148  147  156  156  154  155  156  156   159 #>  [7392,]  141  148  148  156  156  154  155  156  156   159 #>  [7393,]  142  147  145  154  155  153  154  155  155   158 #>  [7394,]  142  147  145  154  155  153  154  155  155   158 #>  [7395,]  141  149  146  155  156  154  155  156  156   159 #>  [7396,]  142  147  145  154  155  153  154  155  155   158 #>  [7397,]  141  148  147  156  156  154  155  156  156   159 #>  [7398,]  141  148  147  156  156  154  155  156  156   159 #>  [7399,]  142  147  145  154  155  153  154  155  155   158 #>  [7400,]  142  147  145  154  155  153  154  155  155   158 #>  [7401,]  143  150  149  157  157  156  157  158  158   161 #>  [7402,]  143  150  149  157  157  157  158  159  158   161 #>  [7403,]  143  150  149  157  157  156  157  158  158   161 #>  [7404,]  144  151  150  158  158  155  156  157  157   160 #>  [7405,]  143  150  149  157  157  157  158  159  158   161 #>  [7406,]  144  151  150  158  158  155  156  157  157   160 #>  [7407,]  143  150  149  157  157  157  158  159  158   161 #>  [7408,]  143  150  149  157  157  156  157  158  158   161 #>  [7409,]  144  151  150  158  158  155  156  157  157   160 #>  [7410,]  144  151  150  158  158  155  156  157  157   160 #>  [7411,]  144  151  150  158  158  155  156  157  157   160 #>  [7412,]  144  151  150  158  158  155  156  157  157   160 #>  [7413,]  143  150  149  157  157  157  158  159  158   161 #>  [7414,]  144  151  150  158  158  155  156  157  157   160 #>  [7415,]  144  151  150  158  158  155  156  157  157   160 #>  [7416,]  143  150  149  157  157  156  157  158  158   161 #>  [7417,]  143  150  149  157  157  157  158  159  158   161 #>  [7418,]  144  151  150  158  158  155  156  157  157   160 #>  [7419,]  144  151  150  158  158  155  156  157  157   160 #>  [7420,]  143  150  149  157  157  157  158  159  158   161 #>  [7421,]  144  151  150  158  158  155  156  157  157   160 #>  [7422,]  143  150  149  157  157  157  158  159  158   161 #>  [7423,]  144  151  150  158  158  155  156  157  157   160 #>  [7424,]  143  150  149  157  157  157  158  159  158   161 #>  [7425,]  143  150  149  157  157  157  158  159  158   161 #>  [7426,]  144  151  150  158  158  155  156  157  157   160 #>  [7427,]  144  151  150  158  158  155  156  157  157   160 #>  [7428,]  143  150  149  157  157  156  157  158  158   161 #>  [7429,]  143  150  149  157  157  157  158  159  158   161 #>  [7430,]  144  151  150  158  158  155  156  157  157   160 #>  [7431,]  144  151  150  158  158  155  156  157  157   160 #>  [7432,]  144  151  150  158  158  155  156  157  157   160 #>  [7433,]  144  151  150  158  158  155  156  157  157   160 #>  [7434,]  144  151  150  158  158  155  156  157  157   160 #>  [7435,]  143  150  149  157  157  156  157  158  158   161 #>  [7436,]  144  151  150  158  158  155  156  157  157   160 #>  [7437,]  143  150  149  157  157  156  157  158  158   161 #>  [7438,]  144  151  150  158  158  155  156  157  157   160 #>  [7439,]  143  150  149  157  157  157  158  159  158   161 #>  [7440,]  143  150  149  157  157  157  158  159  158   161 #>  [7441,]  144  151  150  158  158  155  156  157  157   160 #>  [7442,]  144  151  150  158  158  155  156  157  157   160 #>  [7443,]  143  150  149  157  157  157  158  159  158   161 #>  [7444,]  143  150  149  157  157  157  158  159  158   161 #>  [7445,]  143  150  149  157  157  156  157  158  158   161 #>  [7446,]  143  150  149  157  157  156  157  158  158   161 #>  [7447,]  143  150  149  157  157  157  158  159  158   161 #>  [7448,]  144  151  150  158  158  155  156  157  157   160 #>  [7449,]  143  150  149  157  157  156  157  158  158   161 #>  [7450,]  143  150  149  157  157  157  158  159  158   161 #>  [7451,]  143  150  149  157  157  157  158  159  158   161 #>  [7452,]  144  151  150  158  158  155  156  157  157   160 #>  [7453,]  143  150  149  157  157  157  158  159  158   161 #>  [7454,]  143  150  149  157  157  157  158  159  158   161 #>  [7455,]  143  150  149  157  157  156  157  158  158   161 #>  [7456,]  143  150  149  157  157  156  157  158  158   161 #>  [7457,]  143  150  149  157  157  156  157  158  158   161 #>  [7458,]  144  151  150  158  158  155  156  157  157   160 #>  [7459,]  143  150  149  157  157  156  157  158  158   161 #>  [7460,]  144  151  150  158  158  155  156  157  157   160 #>  [7461,]  144  151  150  158  158  155  156  157  157   160 #>  [7462,]  144  151  150  158  158  155  156  157  157   160 #>  [7463,]  143  150  149  157  157  157  158  159  158   161 #>  [7464,]  144  151  150  158  158  155  156  157  157   160 #>  [7465,]  143  150  149  157  157  156  157  158  158   161 #>  [7466,]  143  150  149  157  157  157  158  159  158   161 #>  [7467,]  144  151  150  158  158  155  156  157  157   160 #>  [7468,]  144  151  150  158  158  155  156  157  157   160 #>  [7469,]  144  151  150  158  158  155  156  157  157   160 #>  [7470,]  143  150  149  157  157  157  158  159  158   161 #>  [7471,]  143  150  149  157  157  157  158  159  158   161 #>  [7472,]  143  150  149  157  157  156  157  158  158   161 #>  [7473,]  144  151  150  158  158  155  156  157  157   160 #>  [7474,]  144  151  150  158  158  155  156  157  157   160 #>  [7475,]  144  151  150  158  158  155  156  157  157   160 #>  [7476,]  143  150  149  157  157  157  158  159  158   161 #>  [7477,]  143  150  149  157  157  156  157  158  158   161 #>  [7478,]  143  150  149  157  157  157  158  159  158   161 #>  [7479,]  143  150  149  157  157  156  157  158  158   161 #>  [7480,]  144  151  150  158  158  155  156  157  157   160 #>  [7481,]  143  150  149  157  157  157  158  159  158   161 #>  [7482,]  144  151  150  158  158  155  156  157  157   160 #>  [7483,]  143  150  149  157  157  157  158  159  158   161 #>  [7484,]  143  150  149  157  157  157  158  159  158   161 #>  [7485,]  144  151  150  158  158  155  156  157  157   160 #>  [7486,]  143  150  149  157  157  157  158  159  158   161 #>  [7487,]  143  150  149  157  157  157  158  159  158   161 #>  [7488,]  143  150  149  157  157  157  158  159  158   161 #>  [7489,]  143  150  149  157  157  156  157  158  158   161 #>  [7490,]  143  150  149  157  157  157  158  159  158   161 #>  [7491,]  144  151  150  158  158  155  156  157  157   160 #>  [7492,]  144  151  150  158  158  155  156  157  157   160 #>  [7493,]  144  151  150  158  158  155  156  157  157   160 #>  [7494,]  143  150  149  157  157  156  157  158  158   161 #>  [7495,]  143  150  149  157  157  157  158  159  158   161 #>  [7496,]  144  151  150  158  158  155  156  157  157   160 #>  [7497,]  144  151  150  158  158  155  156  157  157   160 #>  [7498,]  143  150  149  157  157  157  158  159  158   161 #>  [7499,]  144  151  150  158  158  155  156  157  157   160 #>  [7500,]  143  150  149  157  157  156  157  158  158   161 #>  [7501,]  146  153  152  160  160  159  160  161  160   163 #>  [7502,]  146  153  152  160  160  159  160  161  160   163 #>  [7503,]  145  152  151  159  159  158  159  160  159   162 #>  [7504,]  146  153  152  160  160  159  160  161  160   163 #>  [7505,]  146  153  152  160  160  159  160  161  160   163 #>  [7506,]  146  153  152  160  160  159  160  161  160   163 #>  [7507,]  146  153  152  160  160  159  160  161  160   163 #>  [7508,]  146  153  152  160  160  159  160  161  160   163 #>  [7509,]  146  153  152  160  160  159  160  161  160   163 #>  [7510,]  146  153  152  160  160  159  160  161  160   163 #>  [7511,]  146  153  152  160  160  159  160  161  160   163 #>  [7512,]  145  152  151  159  159  158  159  160  159   162 #>  [7513,]  146  153  152  160  160  159  160  161  160   163 #>  [7514,]  145  152  151  159  159  158  159  160  159   162 #>  [7515,]  146  153  152  160  160  159  160  161  160   163 #>  [7516,]  146  153  152  160  160  159  160  161  160   163 #>  [7517,]  146  153  152  160  160  159  160  161  160   163 #>  [7518,]  146  153  152  160  160  159  160  161  160   163 #>  [7519,]  146  153  152  160  160  159  160  161  160   163 #>  [7520,]  146  153  152  160  160  159  160  161  160   163 #>  [7521,]  146  153  152  160  160  159  160  161  160   163 #>  [7522,]  146  153  152  160  160  159  160  161  160   163 #>  [7523,]  146  153  152  160  160  159  160  161  160   163 #>  [7524,]  146  153  152  160  160  159  160  161  160   163 #>  [7525,]  146  153  152  160  160  159  160  161  160   163 #>  [7526,]  145  152  151  159  159  158  159  160  159   162 #>  [7527,]  146  153  152  160  160  159  160  161  160   163 #>  [7528,]  146  153  152  160  160  159  160  161  160   163 #>  [7529,]  146  153  152  160  160  159  160  161  160   163 #>  [7530,]  146  153  152  160  160  159  160  161  160   163 #>  [7531,]  146  153  152  160  160  159  160  161  160   163 #>  [7532,]  145  152  151  159  159  158  159  160  159   162 #>  [7533,]  146  153  152  160  160  159  160  161  160   163 #>  [7534,]  146  153  152  160  160  159  160  161  160   163 #>  [7535,]  146  153  152  160  160  159  160  161  160   163 #>  [7536,]  146  153  152  160  160  159  160  161  160   163 #>  [7537,]  146  153  152  160  160  159  160  161  160   163 #>  [7538,]  146  153  152  160  160  159  160  161  160   163 #>  [7539,]  146  153  152  160  160  159  160  161  160   163 #>  [7540,]  146  153  152  160  160  159  160  161  160   163 #>  [7541,]  146  153  152  160  160  159  160  161  160   163 #>  [7542,]  146  153  152  160  160  159  160  161  160   163 #>  [7543,]  146  153  152  160  160  159  160  161  160   163 #>  [7544,]  146  153  152  160  160  159  160  161  160   163 #>  [7545,]  146  153  152  160  160  159  160  161  160   163 #>  [7546,]  146  153  152  160  160  159  160  161  160   163 #>  [7547,]  146  153  152  160  160  159  160  161  160   163 #>  [7548,]  146  153  152  160  160  159  160  161  160   163 #>  [7549,]  146  153  152  160  160  159  160  161  160   163 #>  [7550,]  146  153  152  160  160  159  160  161  160   163 #>  [7551,]  146  153  152  160  160  159  160  161  160   163 #>  [7552,]  146  153  152  160  160  159  160  161  160   163 #>  [7553,]  146  153  152  160  160  159  160  161  160   163 #>  [7554,]  146  153  152  160  160  159  160  161  160   163 #>  [7555,]  146  153  152  160  160  159  160  161  160   163 #>  [7556,]  146  153  152  160  160  159  160  161  160   163 #>  [7557,]  146  153  152  160  160  159  160  161  160   163 #>  [7558,]  146  153  152  160  160  159  160  161  160   163 #>  [7559,]  146  153  152  160  160  159  160  161  160   163 #>  [7560,]  146  153  152  160  160  159  160  161  160   163 #>  [7561,]  146  153  152  160  160  159  160  161  160   163 #>  [7562,]  146  153  152  160  160  159  160  161  160   163 #>  [7563,]  146  153  152  160  160  159  160  161  160   163 #>  [7564,]  146  153  152  160  160  159  160  161  160   163 #>  [7565,]  146  153  152  160  160  159  160  161  160   163 #>  [7566,]  146  153  152  160  160  159  160  161  160   163 #>  [7567,]  146  153  152  160  160  159  160  161  160   163 #>  [7568,]  146  153  152  160  160  159  160  161  160   163 #>  [7569,]  145  152  151  159  159  158  159  160  159   162 #>  [7570,]  146  153  152  160  160  159  160  161  160   163 #>  [7571,]  146  153  152  160  160  159  160  161  160   163 #>  [7572,]  146  153  152  160  160  159  160  161  160   163 #>  [7573,]  146  153  152  160  160  159  160  161  160   163 #>  [7574,]  146  153  152  160  160  159  160  161  160   163 #>  [7575,]  146  153  152  160  160  159  160  161  160   163 #>  [7576,]  146  153  152  160  160  159  160  161  160   163 #>  [7577,]  146  153  152  160  160  159  160  161  160   163 #>  [7578,]  146  153  152  160  160  159  160  161  160   163 #>  [7579,]  146  153  152  160  160  159  160  161  160   163 #>  [7580,]  145  152  151  159  159  158  159  160  159   162 #>  [7581,]  146  153  152  160  160  159  160  161  160   163 #>  [7582,]  146  153  152  160  160  159  160  161  160   163 #>  [7583,]  146  153  152  160  160  159  160  161  160   163 #>  [7584,]  146  153  152  160  160  159  160  161  160   163 #>  [7585,]  146  153  152  160  160  159  160  161  160   163 #>  [7586,]  146  153  152  160  160  159  160  161  160   163 #>  [7587,]  146  153  152  160  160  159  160  161  160   163 #>  [7588,]  146  153  152  160  160  159  160  161  160   163 #>  [7589,]  146  153  152  160  160  159  160  161  160   163 #>  [7590,]  146  153  152  160  160  159  160  161  160   163 #>  [7591,]  146  153  152  160  160  159  160  161  160   163 #>  [7592,]  146  153  152  160  160  159  160  161  160   163 #>  [7593,]  146  153  152  160  160  159  160  161  160   163 #>  [7594,]  146  153  152  160  160  159  160  161  160   163 #>  [7595,]  146  153  152  160  160  159  160  161  160   163 #>  [7596,]  146  153  152  160  160  159  160  161  160   163 #>  [7597,]  146  153  152  160  160  159  160  161  160   163 #>  [7598,]  146  153  152  160  160  159  160  161  160   163 #>  [7599,]  146  153  152  160  160  159  160  161  160   163 #>  [7600,]  146  153  152  160  160  159  160  161  160   163 #>  [7601,]  147  154  153  161  161  160  161  162  161   164 #>  [7602,]  147  154  153  161  161  160  161  162  161   164 #>  [7603,]  147  154  153  161  161  160  161  162  161   164 #>  [7604,]  147  154  153  161  161  160  161  162  161   164 #>  [7605,]  147  154  153  161  161  160  161  162  161   164 #>  [7606,]  147  154  153  161  161  160  161  162  161   164 #>  [7607,]  148  155  154  162  162  161  162  163  162   165 #>  [7608,]  147  154  153  161  161  160  161  162  161   164 #>  [7609,]  147  154  153  161  161  160  161  162  161   164 #>  [7610,]  147  154  153  161  161  160  161  162  161   164 #>  [7611,]  147  154  153  161  161  160  161  162  161   164 #>  [7612,]  147  154  153  161  161  160  161  162  161   164 #>  [7613,]  147  154  153  161  161  160  161  162  161   164 #>  [7614,]  147  154  153  161  161  160  161  162  161   164 #>  [7615,]  147  154  153  161  161  160  161  162  161   164 #>  [7616,]  147  154  153  161  161  160  161  162  161   164 #>  [7617,]  147  154  153  161  161  160  161  162  161   164 #>  [7618,]  147  154  153  161  161  160  161  162  161   164 #>  [7619,]  147  154  153  161  161  160  161  162  161   164 #>  [7620,]  148  155  154  162  162  161  162  163  162   165 #>  [7621,]  147  154  153  161  161  160  161  162  161   164 #>  [7622,]  147  154  153  161  161  160  161  162  161   164 #>  [7623,]  147  154  153  161  161  160  161  162  161   164 #>  [7624,]  148  155  154  162  162  161  162  163  162   165 #>  [7625,]  147  154  153  161  161  160  161  162  161   164 #>  [7626,]  147  154  153  161  161  160  161  162  161   164 #>  [7627,]  147  154  153  161  161  160  161  162  161   164 #>  [7628,]  148  155  154  162  162  161  162  163  162   165 #>  [7629,]  147  154  153  161  161  160  161  162  161   164 #>  [7630,]  147  154  153  161  161  160  161  162  161   164 #>  [7631,]  147  154  153  161  161  160  161  162  161   164 #>  [7632,]  147  154  153  161  161  160  161  162  161   164 #>  [7633,]  147  154  153  161  161  160  161  162  161   164 #>  [7634,]  147  154  153  161  161  160  161  162  161   164 #>  [7635,]  147  154  153  161  161  160  161  162  161   164 #>  [7636,]  147  154  153  161  161  160  161  162  161   164 #>  [7637,]  147  154  153  161  161  160  161  162  161   164 #>  [7638,]  147  154  153  161  161  160  161  162  161   164 #>  [7639,]  147  154  153  161  161  160  161  162  161   164 #>  [7640,]  147  154  153  161  161  160  161  162  161   164 #>  [7641,]  147  154  153  161  161  160  161  162  161   164 #>  [7642,]  147  154  153  161  161  160  161  162  161   164 #>  [7643,]  147  154  153  161  161  160  161  162  161   164 #>  [7644,]  147  154  153  161  161  160  161  162  161   164 #>  [7645,]  147  154  153  161  161  160  161  162  161   164 #>  [7646,]  147  154  153  161  161  160  161  162  161   164 #>  [7647,]  147  154  153  161  161  160  161  162  161   164 #>  [7648,]  147  154  153  161  161  160  161  162  161   164 #>  [7649,]  147  154  153  161  161  160  161  162  161   164 #>  [7650,]  148  155  154  162  162  161  162  163  162   165 #>  [7651,]  147  154  153  161  161  160  161  162  161   164 #>  [7652,]  148  155  154  162  162  161  162  163  162   165 #>  [7653,]  147  154  153  161  161  160  161  162  161   164 #>  [7654,]  147  154  153  161  161  160  161  162  161   164 #>  [7655,]  147  154  153  161  161  160  161  162  161   164 #>  [7656,]  147  154  153  161  161  160  161  162  161   164 #>  [7657,]  147  154  153  161  161  160  161  162  161   164 #>  [7658,]  147  154  153  161  161  160  161  162  161   164 #>  [7659,]  147  154  153  161  161  160  161  162  161   164 #>  [7660,]  147  154  153  161  161  160  161  162  161   164 #>  [7661,]  147  154  153  161  161  160  161  162  161   164 #>  [7662,]  147  154  153  161  161  160  161  162  161   164 #>  [7663,]  147  154  153  161  161  160  161  162  161   164 #>  [7664,]  147  154  153  161  161  160  161  162  161   164 #>  [7665,]  147  154  153  161  161  160  161  162  161   164 #>  [7666,]  147  154  153  161  161  160  161  162  161   164 #>  [7667,]  147  154  153  161  161  160  161  162  161   164 #>  [7668,]  147  154  153  161  161  160  161  162  161   164 #>  [7669,]  147  154  153  161  161  160  161  162  161   164 #>  [7670,]  147  154  153  161  161  160  161  162  161   164 #>  [7671,]  147  154  153  161  161  160  161  162  161   164 #>  [7672,]  147  154  153  161  161  160  161  162  161   164 #>  [7673,]  147  154  153  161  161  160  161  162  161   164 #>  [7674,]  147  154  153  161  161  160  161  162  161   164 #>  [7675,]  147  154  153  161  161  160  161  162  161   164 #>  [7676,]  148  155  154  162  162  161  162  163  162   165 #>  [7677,]  147  154  153  161  161  160  161  162  161   164 #>  [7678,]  147  154  153  161  161  160  161  162  161   164 #>  [7679,]  147  154  153  161  161  160  161  162  161   164 #>  [7680,]  147  154  153  161  161  160  161  162  161   164 #>  [7681,]  147  154  153  161  161  160  161  162  161   164 #>  [7682,]  147  154  153  161  161  160  161  162  161   164 #>  [7683,]  147  154  153  161  161  160  161  162  161   164 #>  [7684,]  147  154  153  161  161  160  161  162  161   164 #>  [7685,]  147  154  153  161  161  160  161  162  161   164 #>  [7686,]  148  155  154  162  162  161  162  163  162   165 #>  [7687,]  147  154  153  161  161  160  161  162  161   164 #>  [7688,]  147  154  153  161  161  160  161  162  161   164 #>  [7689,]  147  154  153  161  161  160  161  162  161   164 #>  [7690,]  147  154  153  161  161  160  161  162  161   164 #>  [7691,]  148  155  154  162  162  161  162  163  162   165 #>  [7692,]  147  154  153  161  161  160  161  162  161   164 #>  [7693,]  147  154  153  161  161  160  161  162  161   164 #>  [7694,]  147  154  153  161  161  160  161  162  161   164 #>  [7695,]  147  154  153  161  161  160  161  162  161   164 #>  [7696,]  147  154  153  161  161  160  161  162  161   164 #>  [7697,]  147  154  153  161  161  160  161  162  161   164 #>  [7698,]  147  154  153  161  161  160  161  162  161   164 #>  [7699,]  147  154  153  161  161  160  161  162  161   164 #>  [7700,]  147  154  153  161  161  160  161  162  161   164 #>  [7701,]  149  156  155  164  164  163  164  165  164   167 #>  [7702,]  150  157  155  164  164  163  164  165  164   167 #>  [7703,]  149  156  155  164  164  163  164  165  164   167 #>  [7704,]  149  156  155  163  163  162  163  164  163   166 #>  [7705,]  149  156  155  164  164  163  164  165  164   167 #>  [7706,]  149  156  155  164  164  163  164  165  164   167 #>  [7707,]  149  156  155  164  164  163  164  165  164   167 #>  [7708,]  149  156  155  163  163  162  163  164  163   166 #>  [7709,]  150  157  155  163  163  162  163  164  163   166 #>  [7710,]  150  157  155  163  163  162  163  164  163   166 #>  [7711,]  149  156  155  164  164  163  164  165  164   167 #>  [7712,]  150  157  155  164  164  163  164  165  164   167 #>  [7713,]  149  156  155  164  164  163  164  165  164   167 #>  [7714,]  149  156  155  164  164  163  164  165  164   167 #>  [7715,]  149  156  155  164  164  163  164  165  164   167 #>  [7716,]  149  156  155  164  164  163  164  165  164   167 #>  [7717,]  149  156  155  164  164  163  164  165  164   167 #>  [7718,]  149  156  155  163  163  162  163  164  163   166 #>  [7719,]  149  156  155  164  164  163  164  165  164   167 #>  [7720,]  149  156  155  163  163  162  163  164  163   166 #>  [7721,]  150  157  155  164  164  163  164  165  164   167 #>  [7722,]  149  156  155  164  164  163  164  165  164   167 #>  [7723,]  149  156  155  164  164  163  164  165  164   167 #>  [7724,]  149  156  155  164  164  163  164  165  164   167 #>  [7725,]  149  156  155  164  164  163  164  165  164   167 #>  [7726,]  149  156  155  164  164  163  164  165  164   167 #>  [7727,]  149  156  155  164  164  163  164  165  164   167 #>  [7728,]  149  156  155  164  164  163  164  165  164   167 #>  [7729,]  150  157  155  164  164  163  164  165  164   167 #>  [7730,]  149  156  155  163  163  162  163  164  163   166 #>  [7731,]  149  156  155  164  164  163  164  165  164   167 #>  [7732,]  149  156  155  164  164  163  164  165  164   167 #>  [7733,]  150  157  155  164  164  163  164  165  164   167 #>  [7734,]  149  156  155  164  164  163  164  165  164   167 #>  [7735,]  149  156  155  164  164  163  164  165  164   167 #>  [7736,]  149  156  155  164  164  163  164  165  164   167 #>  [7737,]  149  156  155  164  164  163  164  165  164   167 #>  [7738,]  149  156  155  164  164  163  164  165  164   167 #>  [7739,]  149  156  155  163  163  162  163  164  163   166 #>  [7740,]  149  156  155  164  164  163  164  165  164   167 #>  [7741,]  149  156  155  164  164  163  164  165  164   167 #>  [7742,]  149  156  155  164  164  163  164  165  164   167 #>  [7743,]  149  156  155  163  163  162  163  164  163   166 #>  [7744,]  149  156  155  164  164  163  164  165  164   167 #>  [7745,]  149  156  155  163  163  162  163  164  163   166 #>  [7746,]  149  156  155  164  164  163  164  165  164   167 #>  [7747,]  149  156  155  164  164  163  164  165  164   167 #>  [7748,]  149  156  155  164  164  163  164  165  164   167 #>  [7749,]  149  156  155  163  163  162  163  164  163   166 #>  [7750,]  149  156  155  164  164  163  164  165  164   167 #>  [7751,]  149  156  155  163  163  162  163  164  163   166 #>  [7752,]  149  156  155  164  164  163  164  165  164   167 #>  [7753,]  149  156  155  163  163  162  163  164  163   166 #>  [7754,]  149  156  155  164  164  163  164  165  164   167 #>  [7755,]  149  156  155  164  164  163  164  165  164   167 #>  [7756,]  149  156  155  163  163  162  163  164  163   166 #>  [7757,]  149  156  155  164  164  163  164  165  164   167 #>  [7758,]  149  156  155  164  164  163  164  165  164   167 #>  [7759,]  149  156  155  164  164  163  164  165  164   167 #>  [7760,]  150  157  155  163  163  162  163  164  163   166 #>  [7761,]  149  156  155  164  164  163  164  165  164   167 #>  [7762,]  149  156  155  164  164  163  164  165  164   167 #>  [7763,]  149  156  155  164  164  163  164  165  164   167 #>  [7764,]  149  156  155  163  163  162  163  164  163   166 #>  [7765,]  149  156  155  163  163  162  163  164  163   166 #>  [7766,]  149  156  155  163  163  162  163  164  163   166 #>  [7767,]  149  156  155  163  163  162  163  164  163   166 #>  [7768,]  149  156  155  164  164  163  164  165  164   167 #>  [7769,]  149  156  155  164  164  163  164  165  164   167 #>  [7770,]  150  157  155  164  164  163  164  165  164   167 #>  [7771,]  149  156  155  164  164  163  164  165  164   167 #>  [7772,]  149  156  155  164  164  163  164  165  164   167 #>  [7773,]  149  156  155  164  164  163  164  165  164   167 #>  [7774,]  149  156  155  164  164  163  164  165  164   167 #>  [7775,]  149  156  155  164  164  163  164  165  164   167 #>  [7776,]  149  156  155  164  164  163  164  165  164   167 #>  [7777,]  149  156  155  164  164  163  164  165  164   167 #>  [7778,]  149  156  155  163  163  162  163  164  163   166 #>  [7779,]  149  156  155  164  164  163  164  165  164   167 #>  [7780,]  149  156  155  164  164  163  164  165  164   167 #>  [7781,]  150  157  155  164  164  163  164  165  164   167 #>  [7782,]  149  156  155  164  164  163  164  165  164   167 #>  [7783,]  149  156  155  164  164  163  164  165  164   167 #>  [7784,]  149  156  155  164  164  163  164  165  164   167 #>  [7785,]  149  156  155  163  163  162  163  164  163   166 #>  [7786,]  150  157  155  164  164  163  164  165  164   167 #>  [7787,]  149  156  155  164  164  163  164  165  164   167 #>  [7788,]  149  156  155  164  164  163  164  165  164   167 #>  [7789,]  149  156  155  163  163  162  163  164  163   166 #>  [7790,]  149  156  155  164  164  163  164  165  164   167 #>  [7791,]  149  156  155  163  163  162  163  164  163   166 #>  [7792,]  149  156  155  164  164  163  164  165  164   167 #>  [7793,]  149  156  155  164  164  163  164  165  164   167 #>  [7794,]  149  156  155  164  164  163  164  165  164   167 #>  [7795,]  149  156  155  163  163  162  163  164  163   166 #>  [7796,]  149  156  155  164  164  163  164  165  164   167 #>  [7797,]  149  156  155  164  164  163  164  165  164   167 #>  [7798,]  149  156  155  164  164  163  164  165  164   167 #>  [7799,]  149  156  155  164  164  163  164  165  164   167 #>  [7800,]  149  156  155  164  164  163  164  165  164   167 #>  [7801,]  152  159  157  166  166  165  166  167  166   169 #>  [7802,]  152  159  157  166  166  165  166  167  166   169 #>  [7803,]  151  158  156  165  165  164  165  166  165   168 #>  [7804,]  152  159  157  166  166  165  166  167  166   169 #>  [7805,]  151  158  156  165  165  164  165  166  165   168 #>  [7806,]  152  159  157  166  166  165  166  167  166   169 #>  [7807,]  151  158  156  165  165  164  165  166  165   168 #>  [7808,]  151  158  156  165  165  164  165  166  165   168 #>  [7809,]  152  159  157  166  166  165  166  167  166   169 #>  [7810,]  152  159  157  166  166  165  166  167  166   169 #>  [7811,]  152  159  157  166  166  165  166  167  166   169 #>  [7812,]  152  159  157  166  166  165  166  167  166   169 #>  [7813,]  151  158  156  165  165  164  165  166  165   168 #>  [7814,]  152  159  157  166  166  165  166  167  166   169 #>  [7815,]  152  159  157  166  166  165  166  167  166   169 #>  [7816,]  151  158  156  165  165  164  165  166  165   168 #>  [7817,]  151  158  156  165  165  164  165  166  165   168 #>  [7818,]  152  159  157  166  166  165  166  167  166   169 #>  [7819,]  152  159  157  166  166  165  166  167  166   169 #>  [7820,]  151  158  156  165  165  164  165  166  165   168 #>  [7821,]  152  159  157  166  166  165  166  167  166   169 #>  [7822,]  151  158  156  165  165  164  165  166  165   168 #>  [7823,]  152  159  157  166  166  165  166  167  166   169 #>  [7824,]  151  158  156  165  165  164  165  166  165   168 #>  [7825,]  151  158  156  165  165  164  165  166  165   168 #>  [7826,]  152  159  157  166  166  165  166  167  166   169 #>  [7827,]  152  159  157  166  166  165  166  167  166   169 #>  [7828,]  152  159  157  166  166  165  166  167  166   169 #>  [7829,]  151  158  156  165  165  164  165  166  165   168 #>  [7830,]  152  159  157  166  166  165  166  167  166   169 #>  [7831,]  152  159  157  166  166  165  166  167  166   169 #>  [7832,]  152  159  157  166  166  165  166  167  166   169 #>  [7833,]  152  159  157  166  166  165  166  167  166   169 #>  [7834,]  152  159  157  166  166  165  166  167  166   169 #>  [7835,]  152  159  157  166  166  165  166  167  166   169 #>  [7836,]  152  159  157  166  166  165  166  167  166   169 #>  [7837,]  152  159  157  166  166  165  166  167  166   169 #>  [7838,]  152  159  157  166  166  165  166  167  166   169 #>  [7839,]  151  158  156  165  165  164  165  166  165   168 #>  [7840,]  151  158  156  165  165  164  165  166  165   168 #>  [7841,]  152  159  157  166  166  165  166  167  166   169 #>  [7842,]  152  159  157  166  166  165  166  167  166   169 #>  [7843,]  151  158  156  165  165  164  165  166  165   168 #>  [7844,]  151  158  156  165  165  164  165  166  165   168 #>  [7845,]  151  158  156  165  165  164  165  166  165   168 #>  [7846,]  151  158  156  165  165  164  165  166  165   168 #>  [7847,]  151  158  156  165  165  164  165  166  165   168 #>  [7848,]  152  159  157  166  166  165  166  167  166   169 #>  [7849,]  151  158  156  165  165  164  165  166  165   168 #>  [7850,]  151  158  156  165  165  164  165  166  165   168 #>  [7851,]  151  158  156  165  165  164  165  166  165   168 #>  [7852,]  152  159  157  166  166  165  166  167  166   169 #>  [7853,]  151  158  156  165  165  164  165  166  165   168 #>  [7854,]  151  158  156  165  165  164  165  166  165   168 #>  [7855,]  151  158  156  165  165  164  165  166  165   168 #>  [7856,]  151  158  156  165  165  164  165  166  165   168 #>  [7857,]  152  159  157  166  166  165  166  167  166   169 #>  [7858,]  152  159  157  166  166  165  166  167  166   169 #>  [7859,]  151  158  156  165  165  164  165  166  165   168 #>  [7860,]  152  159  157  166  166  165  166  167  166   169 #>  [7861,]  152  159  157  166  166  165  166  167  166   169 #>  [7862,]  152  159  157  166  166  165  166  167  166   169 #>  [7863,]  151  158  156  165  165  164  165  166  165   168 #>  [7864,]  152  159  157  166  166  165  166  167  166   169 #>  [7865,]  151  158  156  165  165  164  165  166  165   168 #>  [7866,]  151  158  156  165  165  164  165  166  165   168 #>  [7867,]  152  159  157  166  166  165  166  167  166   169 #>  [7868,]  152  159  157  166  166  165  166  167  166   169 #>  [7869,]  152  159  157  166  166  165  166  167  166   169 #>  [7870,]  151  158  156  165  165  164  165  166  165   168 #>  [7871,]  151  158  156  165  165  164  165  166  165   168 #>  [7872,]  151  158  156  165  165  164  165  166  165   168 #>  [7873,]  152  159  157  166  166  165  166  167  166   169 #>  [7874,]  152  159  157  166  166  165  166  167  166   169 #>  [7875,]  152  159  157  166  166  165  166  167  166   169 #>  [7876,]  151  158  156  165  165  164  165  166  165   168 #>  [7877,]  151  158  156  165  165  164  165  166  165   168 #>  [7878,]  151  158  156  165  165  164  165  166  165   168 #>  [7879,]  151  158  156  165  165  164  165  166  165   168 #>  [7880,]  152  159  157  166  166  165  166  167  166   169 #>  [7881,]  151  158  156  165  165  164  165  166  165   168 #>  [7882,]  152  159  157  166  166  165  166  167  166   169 #>  [7883,]  151  158  156  165  165  164  165  166  165   168 #>  [7884,]  151  158  156  165  165  164  165  166  165   168 #>  [7885,]  152  159  157  166  166  165  166  167  166   169 #>  [7886,]  151  158  156  165  165  164  165  166  165   168 #>  [7887,]  152  159  157  166  166  165  166  167  166   169 #>  [7888,]  152  159  157  166  166  165  166  167  166   169 #>  [7889,]  151  158  156  165  165  164  165  166  165   168 #>  [7890,]  151  158  156  165  165  164  165  166  165   168 #>  [7891,]  152  159  157  166  166  165  166  167  166   169 #>  [7892,]  152  159  157  166  166  165  166  167  166   169 #>  [7893,]  152  159  157  166  166  165  166  167  166   169 #>  [7894,]  151  158  156  165  165  164  165  166  165   168 #>  [7895,]  152  159  157  166  166  165  166  167  166   169 #>  [7896,]  152  159  157  166  166  165  166  167  166   169 #>  [7897,]  152  159  157  166  166  165  166  167  166   169 #>  [7898,]  151  158  156  165  165  164  165  166  165   168 #>  [7899,]  152  159  157  166  166  165  166  167  166   169 #>  [7900,]  151  158  156  165  165  164  165  166  165   168 #>  [7901,]  154  160  158  167  167  166  167  168  168   171 #>  [7902,]  154  160  158  167  167  166  167  168  169   172 #>  [7903,]  153  160  158  167  167  166  167  168  169   172 #>  [7904,]  153  160  158  167  167  166  167  168  168   171 #>  [7905,]  154  160  158  167  167  166  167  168  169   172 #>  [7906,]  154  160  158  167  167  166  167  168  169   172 #>  [7907,]  153  160  158  167  167  166  167  168  169   172 #>  [7908,]  153  160  158  167  167  166  167  168  168   171 #>  [7909,]  154  160  158  167  167  166  167  168  168   171 #>  [7910,]  153  160  158  167  167  166  167  168  169   172 #>  [7911,]  154  160  158  167  167  166  167  168  168   171 #>  [7912,]  153  160  158  167  167  166  167  168  169   172 #>  [7913,]  154  160  158  167  167  166  167  168  168   171 #>  [7914,]  153  160  158  167  167  166  167  168  168   171 #>  [7915,]  154  160  158  167  167  166  167  168  168   171 #>  [7916,]  153  160  158  167  167  166  167  168  168   171 #>  [7917,]  154  160  158  167  167  166  167  168  168   171 #>  [7918,]  154  160  158  168  168  167  168  169  167   170 #>  [7919,]  154  160  158  167  167  166  167  168  169   172 #>  [7920,]  154  160  158  167  167  166  167  168  169   172 #>  [7921,]  154  160  158  167  167  166  167  168  168   171 #>  [7922,]  154  160  158  167  167  166  167  168  168   171 #>  [7923,]  153  160  158  167  167  166  167  168  169   172 #>  [7924,]  154  160  158  167  167  166  167  168  169   172 #>  [7925,]  153  160  158  167  167  166  167  168  169   172 #>  [7926,]  153  160  158  167  167  166  167  168  169   172 #>  [7927,]  154  160  158  167  167  166  167  168  168   171 #>  [7928,]  154  160  158  167  167  166  167  168  169   172 #>  [7929,]  154  160  158  167  167  166  167  168  169   172 #>  [7930,]  153  160  158  167  167  166  167  168  168   171 #>  [7931,]  153  160  158  167  167  166  167  168  169   172 #>  [7932,]  153  160  158  167  167  166  167  168  169   172 #>  [7933,]  154  160  158  167  167  166  167  168  169   172 #>  [7934,]  153  160  158  167  167  166  167  168  169   172 #>  [7935,]  153  160  158  167  167  166  167  168  168   171 #>  [7936,]  154  160  158  167  167  166  167  168  169   172 #>  [7937,]  153  160  158  167  167  166  167  168  168   171 #>  [7938,]  154  160  158  167  167  166  167  168  169   172 #>  [7939,]  154  160  158  167  167  166  167  168  169   172 #>  [7940,]  153  160  158  167  167  166  167  168  169   172 #>  [7941,]  154  160  158  167  167  166  167  168  168   171 #>  [7942,]  154  160  158  168  168  167  168  169  167   170 #>  [7943,]  154  160  158  167  167  166  167  168  168   171 #>  [7944,]  153  160  158  167  167  166  167  168  168   171 #>  [7945,]  153  160  158  167  167  166  167  168  168   171 #>  [7946,]  153  160  158  167  167  166  167  168  168   171 #>  [7947,]  153  160  158  167  167  166  167  168  169   172 #>  [7948,]  154  160  158  167  167  166  167  168  169   172 #>  [7949,]  153  160  158  167  167  166  167  168  168   171 #>  [7950,]  154  160  158  167  167  166  167  168  169   172 #>  [7951,]  154  160  158  168  168  167  168  169  167   170 #>  [7952,]  153  160  158  167  167  166  167  168  168   171 #>  [7953,]  154  160  158  168  168  167  168  169  167   170 #>  [7954,]  154  160  158  167  167  166  167  168  168   171 #>  [7955,]  153  160  158  167  167  166  167  168  168   171 #>  [7956,]  154  160  158  167  167  166  167  168  169   172 #>  [7957,]  153  160  158  167  167  166  167  168  169   172 #>  [7958,]  154  160  158  167  167  166  167  168  168   171 #>  [7959,]  153  160  158  167  167  166  167  168  169   172 #>  [7960,]  153  160  158  167  167  166  167  168  169   172 #>  [7961,]  154  160  158  167  167  166  167  168  169   172 #>  [7962,]  154  160  158  167  167  166  167  168  168   171 #>  [7963,]  154  160  158  167  167  166  167  168  169   172 #>  [7964,]  154  160  158  167  167  166  167  168  169   172 #>  [7965,]  154  160  158  167  167  166  167  168  169   172 #>  [7966,]  154  160  158  167  167  166  167  168  168   171 #>  [7967,]  153  160  158  167  167  166  167  168  168   171 #>  [7968,]  153  160  158  167  167  166  167  168  168   171 #>  [7969,]  153  160  158  167  167  166  167  168  168   171 #>  [7970,]  154  160  158  167  167  166  167  168  169   172 #>  [7971,]  153  160  158  167  167  166  167  168  169   172 #>  [7972,]  153  160  158  167  167  166  167  168  169   172 #>  [7973,]  154  160  158  167  167  166  167  168  169   172 #>  [7974,]  153  160  158  167  167  166  167  168  168   171 #>  [7975,]  153  160  158  167  167  166  167  168  169   172 #>  [7976,]  153  160  158  167  167  166  167  168  169   172 #>  [7977,]  154  160  158  167  167  166  167  168  169   172 #>  [7978,]  153  160  158  167  167  166  167  168  169   172 #>  [7979,]  154  160  158  168  168  167  168  169  167   170 #>  [7980,]  153  160  158  167  167  166  167  168  168   171 #>  [7981,]  154  160  158  167  167  166  167  168  168   171 #>  [7982,]  154  160  158  167  167  166  167  168  168   171 #>  [7983,]  154  160  158  167  167  166  167  168  168   171 #>  [7984,]  154  160  158  168  168  167  168  169  167   170 #>  [7985,]  154  160  158  167  167  166  167  168  168   171 #>  [7986,]  153  160  158  167  167  166  167  168  169   172 #>  [7987,]  154  160  158  167  167  166  167  168  168   171 #>  [7988,]  153  160  158  167  167  166  167  168  168   171 #>  [7989,]  154  160  158  167  167  166  167  168  168   171 #>  [7990,]  154  160  158  167  167  166  167  168  168   171 #>  [7991,]  154  160  158  167  167  166  167  168  168   171 #>  [7992,]  153  160  158  167  167  166  167  168  168   171 #>  [7993,]  154  160  158  168  168  167  168  169  167   170 #>  [7994,]  154  160  158  168  168  167  168  169  167   170 #>  [7995,]  153  160  158  167  167  166  167  168  168   171 #>  [7996,]  153  160  158  167  167  166  167  168  168   171 #>  [7997,]  153  160  158  167  167  166  167  168  169   172 #>  [7998,]  153  160  158  167  167  166  167  168  169   172 #>  [7999,]  154  160  158  167  167  166  167  168  168   171 #>  [8000,]  154  160  158  167  167  166  167  168  169   172 #>  [8001,]  155  161  159  169  169  168  169  170  170   173 #>  [8002,]  155  161  159  169  169  168  169  170  170   173 #>  [8003,]  155  161  159  169  169  168  169  170  170   173 #>  [8004,]  156  162  160  170  170  169  170  171  171   174 #>  [8005,]  155  161  159  169  169  168  169  170  170   173 #>  [8006,]  155  161  159  169  169  168  169  170  170   173 #>  [8007,]  156  162  160  170  170  169  170  171  171   174 #>  [8008,]  155  161  159  169  169  168  169  170  170   173 #>  [8009,]  155  161  159  169  169  168  169  170  170   173 #>  [8010,]  156  162  160  170  170  169  170  171  171   174 #>  [8011,]  155  161  159  169  169  168  169  170  170   173 #>  [8012,]  155  161  159  169  169  168  169  170  170   173 #>  [8013,]  155  161  159  169  169  168  169  170  170   173 #>  [8014,]  155  161  159  169  169  168  169  170  170   173 #>  [8015,]  155  161  159  169  169  168  169  170  170   173 #>  [8016,]  156  162  160  170  170  169  170  171  171   174 #>  [8017,]  155  161  159  169  169  168  169  170  170   173 #>  [8018,]  155  161  159  169  169  168  169  170  170   173 #>  [8019,]  155  161  159  169  169  168  169  170  170   173 #>  [8020,]  156  162  160  170  170  169  170  171  171   174 #>  [8021,]  155  161  159  169  169  168  169  170  170   173 #>  [8022,]  155  161  159  169  169  168  169  170  170   173 #>  [8023,]  155  161  159  169  169  168  169  170  170   173 #>  [8024,]  156  162  160  170  170  169  170  171  171   174 #>  [8025,]  156  162  160  170  170  169  170  171  171   174 #>  [8026,]  155  161  159  169  169  168  169  170  170   173 #>  [8027,]  155  161  159  169  169  168  169  170  170   173 #>  [8028,]  156  162  160  170  170  169  170  171  171   174 #>  [8029,]  155  161  159  169  169  168  169  170  170   173 #>  [8030,]  155  161  159  169  169  168  169  170  170   173 #>  [8031,]  155  161  159  169  169  168  169  170  170   173 #>  [8032,]  155  161  159  169  169  168  169  170  170   173 #>  [8033,]  155  161  159  169  169  168  169  170  170   173 #>  [8034,]  155  161  159  169  169  168  169  170  170   173 #>  [8035,]  155  161  159  169  169  168  169  170  170   173 #>  [8036,]  155  161  159  169  169  168  169  170  170   173 #>  [8037,]  155  161  159  169  169  168  169  170  170   173 #>  [8038,]  155  161  159  169  169  168  169  170  170   173 #>  [8039,]  156  162  160  170  170  169  170  171  171   174 #>  [8040,]  155  161  159  169  169  168  169  170  170   173 #>  [8041,]  155  161  159  169  169  168  169  170  170   173 #>  [8042,]  155  161  159  169  169  168  169  170  170   173 #>  [8043,]  155  161  159  169  169  168  169  170  170   173 #>  [8044,]  155  161  159  169  169  168  169  170  170   173 #>  [8045,]  155  161  159  169  169  168  169  170  170   173 #>  [8046,]  155  161  159  169  169  168  169  170  170   173 #>  [8047,]  155  161  159  169  169  168  169  170  170   173 #>  [8048,]  155  161  159  169  169  168  169  170  170   173 #>  [8049,]  155  161  159  169  169  168  169  170  170   173 #>  [8050,]  156  162  160  170  170  169  170  171  171   174 #>  [8051,]  155  161  159  169  169  168  169  170  170   173 #>  [8052,]  156  162  160  170  170  169  170  171  171   174 #>  [8053,]  155  161  159  169  169  168  169  170  170   173 #>  [8054,]  156  162  160  170  170  169  170  171  171   174 #>  [8055,]  155  161  159  169  169  168  169  170  170   173 #>  [8056,]  155  161  159  169  169  168  169  170  170   173 #>  [8057,]  155  161  159  169  169  168  169  170  170   173 #>  [8058,]  155  161  159  169  169  168  169  170  170   173 #>  [8059,]  155  161  159  169  169  168  169  170  170   173 #>  [8060,]  155  161  159  169  169  168  169  170  170   173 #>  [8061,]  155  161  159  169  169  168  169  170  170   173 #>  [8062,]  155  161  159  169  169  168  169  170  170   173 #>  [8063,]  155  161  159  169  169  168  169  170  170   173 #>  [8064,]  155  161  159  169  169  168  169  170  170   173 #>  [8065,]  155  161  159  169  169  168  169  170  170   173 #>  [8066,]  155  161  159  169  169  168  169  170  170   173 #>  [8067,]  155  161  159  169  169  168  169  170  170   173 #>  [8068,]  155  161  159  169  169  168  169  170  170   173 #>  [8069,]  155  161  159  169  169  168  169  170  170   173 #>  [8070,]  155  161  159  169  169  168  169  170  170   173 #>  [8071,]  155  161  159  169  169  168  169  170  170   173 #>  [8072,]  155  161  159  169  169  168  169  170  170   173 #>  [8073,]  156  162  160  170  170  169  170  171  171   174 #>  [8074,]  155  161  159  169  169  168  169  170  170   173 #>  [8075,]  155  161  159  169  169  168  169  170  170   173 #>  [8076,]  156  162  160  170  170  169  170  171  171   174 #>  [8077,]  155  161  159  169  169  168  169  170  170   173 #>  [8078,]  155  161  159  169  169  168  169  170  170   173 #>  [8079,]  155  161  159  169  169  168  169  170  170   173 #>  [8080,]  155  161  159  169  169  168  169  170  170   173 #>  [8081,]  155  161  159  169  169  168  169  170  170   173 #>  [8082,]  155  161  159  169  169  168  169  170  170   173 #>  [8083,]  155  161  159  169  169  168  169  170  170   173 #>  [8084,]  155  161  159  169  169  168  169  170  170   173 #>  [8085,]  155  161  159  169  169  168  169  170  170   173 #>  [8086,]  156  162  160  170  170  169  170  171  171   174 #>  [8087,]  155  161  159  169  169  168  169  170  170   173 #>  [8088,]  155  161  159  169  169  168  169  170  170   173 #>  [8089,]  155  161  159  169  169  168  169  170  170   173 #>  [8090,]  155  161  159  169  169  168  169  170  170   173 #>  [8091,]  156  162  160  170  170  169  170  171  171   174 #>  [8092,]  155  161  159  169  169  168  169  170  170   173 #>  [8093,]  155  161  159  169  169  168  169  170  170   173 #>  [8094,]  155  161  159  169  169  168  169  170  170   173 #>  [8095,]  155  161  159  169  169  168  169  170  170   173 #>  [8096,]  155  161  159  169  169  168  169  170  170   173 #>  [8097,]  155  161  159  169  169  168  169  170  170   173 #>  [8098,]  155  161  159  169  169  168  169  170  170   173 #>  [8099,]  155  161  159  169  169  168  169  170  170   173 #>  [8100,]  155  161  159  169  169  168  169  170  170   173 #>  [8101,]  158  164  162  173  172  171  172  173  173   176 #>  [8102,]  158  164  162  173  172  171  172  173  173   176 #>  [8103,]  157  163  161  171  171  170  171  172  172   175 #>  [8104,]  157  163  161  171  171  170  171  172  172   175 #>  [8105,]  157  163  161  171  171  170  171  172  172   175 #>  [8106,]  158  164  162  172  172  171  172  173  173   176 #>  [8107,]  158  164  162  173  172  171  172  173  173   176 #>  [8108,]  157  163  161  171  171  170  171  172  172   175 #>  [8109,]  157  163  161  171  171  170  171  172  172   175 #>  [8110,]  157  163  161  171  171  170  171  172  172   175 #>  [8111,]  158  164  162  172  172  171  172  173  173   176 #>  [8112,]  157  163  161  171  171  170  171  172  172   175 #>  [8113,]  158  164  162  173  172  171  172  173  173   176 #>  [8114,]  158  164  162  172  172  171  172  173  173   176 #>  [8115,]  158  164  162  173  172  171  172  173  173   176 #>  [8116,]  158  164  162  173  172  171  172  173  173   176 #>  [8117,]  158  164  162  172  172  171  172  173  173   176 #>  [8118,]  157  163  161  171  171  170  171  172  172   175 #>  [8119,]  158  164  162  173  172  171  172  173  173   176 #>  [8120,]  157  163  161  171  171  170  171  172  172   175 #>  [8121,]  158  164  162  172  172  171  172  173  173   176 #>  [8122,]  158  164  162  173  172  171  172  173  173   176 #>  [8123,]  157  163  161  171  171  170  171  172  172   175 #>  [8124,]  157  163  161  171  171  170  171  172  172   175 #>  [8125,]  158  164  162  172  172  171  172  173  173   176 #>  [8126,]  158  164  162  173  172  171  172  173  173   176 #>  [8127,]  158  164  162  173  172  171  172  173  173   176 #>  [8128,]  158  164  162  172  172  171  172  173  173   176 #>  [8129,]  158  164  162  173  172  171  172  173  173   176 #>  [8130,]  157  163  161  171  171  170  171  172  172   175 #>  [8131,]  157  163  161  171  171  170  171  172  172   175 #>  [8132,]  157  163  161  171  171  170  171  172  172   175 #>  [8133,]  158  164  162  173  172  171  172  173  173   176 #>  [8134,]  157  163  161  171  171  170  171  172  172   175 #>  [8135,]  158  164  162  172  172  171  172  173  173   176 #>  [8136,]  157  163  161  171  171  170  171  172  172   175 #>  [8137,]  158  164  162  173  172  171  172  173  173   176 #>  [8138,]  157  163  161  171  171  170  171  172  172   175 #>  [8139,]  157  163  161  171  171  170  171  172  172   175 #>  [8140,]  158  164  162  172  172  171  172  173  173   176 #>  [8141,]  158  164  162  173  172  171  172  173  173   176 #>  [8142,]  157  163  161  171  171  170  171  172  172   175 #>  [8143,]  157  163  161  171  171  170  171  172  172   175 #>  [8144,]  158  164  162  173  172  171  172  173  173   176 #>  [8145,]  157  163  161  171  171  170  171  172  172   175 #>  [8146,]  158  164  162  173  172  171  172  173  173   176 #>  [8147,]  158  164  162  172  172  171  172  173  173   176 #>  [8148,]  157  163  161  171  171  170  171  172  172   175 #>  [8149,]  157  163  161  171  171  170  171  172  172   175 #>  [8150,]  158  164  162  173  172  171  172  173  173   176 #>  [8151,]  157  163  161  171  171  170  171  172  172   175 #>  [8152,]  158  164  162  172  172  171  172  173  173   176 #>  [8153,]  157  163  161  171  171  170  171  172  172   175 #>  [8154,]  158  164  162  172  172  171  172  173  173   176 #>  [8155,]  158  164  162  173  172  171  172  173  173   176 #>  [8156,]  157  163  161  171  171  170  171  172  172   175 #>  [8157,]  158  164  162  172  172  171  172  173  173   176 #>  [8158,]  158  164  162  173  172  171  172  173  173   176 #>  [8159,]  158  164  162  173  172  171  172  173  173   176 #>  [8160,]  157  163  161  171  171  170  171  172  172   175 #>  [8161,]  158  164  162  173  172  171  172  173  173   176 #>  [8162,]  157  163  161  171  171  170  171  172  172   175 #>  [8163,]  158  164  162  173  172  171  172  173  173   176 #>  [8164,]  157  163  161  171  171  170  171  172  172   175 #>  [8165,]  157  163  161  171  171  170  171  172  172   175 #>  [8166,]  157  163  161  171  171  170  171  172  172   175 #>  [8167,]  157  163  161  171  171  170  171  172  172   175 #>  [8168,]  158  164  162  173  172  171  172  173  173   176 #>  [8169,]  158  164  162  173  172  171  172  173  173   176 #>  [8170,]  158  164  162  172  172  171  172  173  173   176 #>  [8171,]  158  164  162  173  172  171  172  173  173   176 #>  [8172,]  157  163  161  171  171  170  171  172  172   175 #>  [8173,]  158  164  162  172  172  171  172  173  173   176 #>  [8174,]  158  164  162  172  172  171  172  173  173   176 #>  [8175,]  158  164  162  173  172  171  172  173  173   176 #>  [8176,]  158  164  162  172  172  171  172  173  173   176 #>  [8177,]  158  164  162  173  172  171  172  173  173   176 #>  [8178,]  157  163  161  171  171  170  171  172  172   175 #>  [8179,]  158  164  162  172  172  171  172  173  173   176 #>  [8180,]  158  164  162  173  172  171  172  173  173   176 #>  [8181,]  158  164  162  173  172  171  172  173  173   176 #>  [8182,]  158  164  162  172  172  171  172  173  173   176 #>  [8183,]  158  164  162  173  172  171  172  173  173   176 #>  [8184,]  158  164  162  173  172  171  172  173  173   176 #>  [8185,]  157  163  161  171  171  170  171  172  172   175 #>  [8186,]  158  164  162  172  172  171  172  173  173   176 #>  [8187,]  158  164  162  173  172  171  172  173  173   176 #>  [8188,]  157  163  161  171  171  170  171  172  172   175 #>  [8189,]  157  163  161  171  171  170  171  172  172   175 #>  [8190,]  158  164  162  173  172  171  172  173  173   176 #>  [8191,]  157  163  161  171  171  170  171  172  172   175 #>  [8192,]  158  164  162  172  172  171  172  173  173   176 #>  [8193,]  158  164  162  173  172  171  172  173  173   176 #>  [8194,]  158  164  162  172  172  171  172  173  173   176 #>  [8195,]  157  163  161  171  171  170  171  172  172   175 #>  [8196,]  158  164  162  173  172  171  172  173  173   176 #>  [8197,]  158  164  162  173  172  171  172  173  173   176 #>  [8198,]  158  164  162  172  172  171  172  173  173   176 #>  [8199,]  158  164  162  172  172  171  172  173  173   176 #>  [8200,]  158  164  162  173  172  171  172  173  173   176 #>  [8201,]  159  165  163  174  173  172  173  174  174   177 #>  [8202,]  159  165  163  174  173  172  173  174  174   177 #>  [8203,]  159  165  163  174  173  172  173  174  174   177 #>  [8204,]  160  166  164  175  174  173  174  175  175   178 #>  [8205,]  159  165  163  174  173  172  173  174  174   177 #>  [8206,]  160  166  164  175  174  173  174  175  175   178 #>  [8207,]  159  165  163  174  173  172  173  174  174   177 #>  [8208,]  159  165  163  174  173  172  173  174  174   177 #>  [8209,]  160  166  164  175  174  173  174  175  175   178 #>  [8210,]  160  166  164  175  174  173  174  175  175   178 #>  [8211,]  160  166  164  175  174  173  174  175  175   178 #>  [8212,]  160  166  164  175  174  173  174  175  175   178 #>  [8213,]  159  165  163  174  173  172  173  174  174   177 #>  [8214,]  160  166  164  175  174  173  174  175  175   178 #>  [8215,]  160  166  164  175  174  173  174  175  175   178 #>  [8216,]  159  165  163  174  173  172  173  174  174   177 #>  [8217,]  159  165  163  174  173  172  173  174  174   177 #>  [8218,]  160  166  164  175  174  173  174  175  175   178 #>  [8219,]  160  166  164  175  174  173  174  175  175   178 #>  [8220,]  159  165  163  174  173  172  173  174  174   177 #>  [8221,]  160  166  164  175  174  173  174  175  175   178 #>  [8222,]  159  165  163  174  173  172  173  174  174   177 #>  [8223,]  159  165  163  174  173  172  173  174  174   177 #>  [8224,]  159  165  163  174  173  172  173  174  174   177 #>  [8225,]  159  165  163  174  173  172  173  174  174   177 #>  [8226,]  160  166  164  175  174  173  174  175  175   178 #>  [8227,]  160  166  164  175  174  173  174  175  175   178 #>  [8228,]  159  165  163  174  173  172  173  174  174   177 #>  [8229,]  159  165  163  174  173  172  173  174  174   177 #>  [8230,]  160  166  164  175  174  173  174  175  175   178 #>  [8231,]  160  166  164  175  174  173  174  175  175   178 #>  [8232,]  160  166  164  175  174  173  174  175  175   178 #>  [8233,]  160  166  164  175  174  173  174  175  175   178 #>  [8234,]  159  165  163  174  173  172  173  174  174   177 #>  [8235,]  159  165  163  174  173  172  173  174  174   177 #>  [8236,]  160  166  164  175  174  173  174  175  175   178 #>  [8237,]  159  165  163  174  173  172  173  174  174   177 #>  [8238,]  160  166  164  175  174  173  174  175  175   178 #>  [8239,]  159  165  163  174  173  172  173  174  174   177 #>  [8240,]  159  165  163  174  173  172  173  174  174   177 #>  [8241,]  160  166  164  175  174  173  174  175  175   178 #>  [8242,]  160  166  164  175  174  173  174  175  175   178 #>  [8243,]  159  165  163  174  173  172  173  174  174   177 #>  [8244,]  159  165  163  174  173  172  173  174  174   177 #>  [8245,]  159  165  163  174  173  172  173  174  174   177 #>  [8246,]  159  165  163  174  173  172  173  174  174   177 #>  [8247,]  159  165  163  174  173  172  173  174  174   177 #>  [8248,]  160  166  164  175  174  173  174  175  175   178 #>  [8249,]  159  165  163  174  173  172  173  174  174   177 #>  [8250,]  159  165  163  174  173  172  173  174  174   177 #>  [8251,]  159  165  163  174  173  172  173  174  174   177 #>  [8252,]  159  165  163  174  173  172  173  174  174   177 #>  [8253,]  159  165  163  174  173  172  173  174  174   177 #>  [8254,]  159  165  163  174  173  172  173  174  174   177 #>  [8255,]  159  165  163  174  173  172  173  174  174   177 #>  [8256,]  159  165  163  174  173  172  173  174  174   177 #>  [8257,]  159  165  163  174  173  172  173  174  174   177 #>  [8258,]  160  166  164  175  174  173  174  175  175   178 #>  [8259,]  159  165  163  174  173  172  173  174  174   177 #>  [8260,]  160  166  164  175  174  173  174  175  175   178 #>  [8261,]  160  166  164  175  174  173  174  175  175   178 #>  [8262,]  160  166  164  175  174  173  174  175  175   178 #>  [8263,]  159  165  163  174  173  172  173  174  174   177 #>  [8264,]  160  166  164  175  174  173  174  175  175   178 #>  [8265,]  159  165  163  174  173  172  173  174  174   177 #>  [8266,]  159  165  163  174  173  172  173  174  174   177 #>  [8267,]  159  165  163  174  173  172  173  174  174   177 #>  [8268,]  160  166  164  175  174  173  174  175  175   178 #>  [8269,]  160  166  164  175  174  173  174  175  175   178 #>  [8270,]  159  165  163  174  173  172  173  174  174   177 #>  [8271,]  159  165  163  174  173  172  173  174  174   177 #>  [8272,]  159  165  163  174  173  172  173  174  174   177 #>  [8273,]  159  165  163  174  173  172  173  174  174   177 #>  [8274,]  160  166  164  175  174  173  174  175  175   178 #>  [8275,]  160  166  164  175  174  173  174  175  175   178 #>  [8276,]  159  165  163  174  173  172  173  174  174   177 #>  [8277,]  159  165  163  174  173  172  173  174  174   177 #>  [8278,]  159  165  163  174  173  172  173  174  174   177 #>  [8279,]  159  165  163  174  173  172  173  174  174   177 #>  [8280,]  159  165  163  174  173  172  173  174  174   177 #>  [8281,]  159  165  163  174  173  172  173  174  174   177 #>  [8282,]  160  166  164  175  174  173  174  175  175   178 #>  [8283,]  159  165  163  174  173  172  173  174  174   177 #>  [8284,]  159  165  163  174  173  172  173  174  174   177 #>  [8285,]  160  166  164  175  174  173  174  175  175   178 #>  [8286,]  159  165  163  174  173  172  173  174  174   177 #>  [8287,]  159  165  163  174  173  172  173  174  174   177 #>  [8288,]  159  165  163  174  173  172  173  174  174   177 #>  [8289,]  159  165  163  174  173  172  173  174  174   177 #>  [8290,]  159  165  163  174  173  172  173  174  174   177 #>  [8291,]  159  165  163  174  173  172  173  174  174   177 #>  [8292,]  160  166  164  175  174  173  174  175  175   178 #>  [8293,]  160  166  164  175  174  173  174  175  175   178 #>  [8294,]  159  165  163  174  173  172  173  174  174   177 #>  [8295,]  159  165  163  174  173  172  173  174  174   177 #>  [8296,]  160  166  164  175  174  173  174  175  175   178 #>  [8297,]  160  166  164  175  174  173  174  175  175   178 #>  [8298,]  159  165  163  174  173  172  173  174  174   177 #>  [8299,]  160  166  164  175  174  173  174  175  175   178 #>  [8300,]  159  165  163  174  173  172  173  174  174   177 #>  [8301,]  162  167  166  177  176  175  176  177  177   180 #>  [8302,]  161  167  165  176  175  174  175  176  176   179 #>  [8303,]  161  167  165  176  175  174  175  176  176   179 #>  [8304,]  162  167  166  177  176  175  176  177  177   180 #>  [8305,]  162  167  165  176  175  174  175  176  176   179 #>  [8306,]  161  167  165  176  175  174  175  176  176   179 #>  [8307,]  161  167  166  177  176  175  176  177  177   180 #>  [8308,]  161  167  166  177  176  175  176  177  177   180 #>  [8309,]  161  167  166  177  176  175  176  177  177   180 #>  [8310,]  162  167  166  177  176  175  176  177  177   180 #>  [8311,]  162  167  165  176  175  174  175  176  176   179 #>  [8312,]  162  167  165  176  175  174  175  176  176   179 #>  [8313,]  162  167  166  177  176  175  176  177  177   180 #>  [8314,]  162  167  165  176  175  174  175  176  176   179 #>  [8315,]  162  167  166  177  176  175  176  177  177   180 #>  [8316,]  162  167  166  177  176  175  176  177  177   180 #>  [8317,]  162  167  166  177  176  175  176  177  177   180 #>  [8318,]  162  167  166  177  176  175  176  177  177   180 #>  [8319,]  162  167  165  176  175  174  175  176  176   179 #>  [8320,]  161  167  165  176  175  174  175  176  176   179 #>  [8321,]  161  167  166  177  176  175  176  177  177   180 #>  [8322,]  162  167  165  176  175  174  175  176  176   179 #>  [8323,]  161  167  166  177  176  175  176  177  177   180 #>  [8324,]  162  167  165  176  175  174  175  176  176   179 #>  [8325,]  161  167  166  177  176  175  176  177  177   180 #>  [8326,]  162  167  165  176  175  174  175  176  176   179 #>  [8327,]  162  167  166  177  176  175  176  177  177   180 #>  [8328,]  162  167  166  177  176  175  176  177  177   180 #>  [8329,]  161  167  165  176  175  174  175  176  176   179 #>  [8330,]  161  167  165  176  175  174  175  176  176   179 #>  [8331,]  162  167  165  176  175  174  175  176  176   179 #>  [8332,]  162  167  165  176  175  174  175  176  176   179 #>  [8333,]  162  167  165  176  175  174  175  176  176   179 #>  [8334,]  161  167  165  176  175  174  175  176  176   179 #>  [8335,]  161  167  165  176  175  174  175  176  176   179 #>  [8336,]  161  167  165  176  175  174  175  176  176   179 #>  [8337,]  161  167  166  177  176  175  176  177  177   180 #>  [8338,]  162  167  166  177  176  175  176  177  177   180 #>  [8339,]  162  167  166  177  176  175  176  177  177   180 #>  [8340,]  161  167  165  176  175  174  175  176  176   179 #>  [8341,]  161  167  165  176  175  174  175  176  176   179 #>  [8342,]  161  167  165  176  175  174  175  176  176   179 #>  [8343,]  162  167  166  177  176  175  176  177  177   180 #>  [8344,]  161  167  166  177  176  175  176  177  177   180 #>  [8345,]  161  167  166  177  176  175  176  177  177   180 #>  [8346,]  162  167  166  177  176  175  176  177  177   180 #>  [8347,]  162  167  166  177  176  175  176  177  177   180 #>  [8348,]  162  167  165  176  175  174  175  176  176   179 #>  [8349,]  161  167  165  176  175  174  175  176  176   179 #>  [8350,]  161  167  165  176  175  174  175  176  176   179 #>  [8351,]  162  167  165  176  175  174  175  176  176   179 #>  [8352,]  162  167  165  176  175  174  175  176  176   179 #>  [8353,]  161  167  166  177  176  175  176  177  177   180 #>  [8354,]  161  167  165  176  175  174  175  176  176   179 #>  [8355,]  161  167  165  176  175  174  175  176  176   179 #>  [8356,]  161  167  166  177  176  175  176  177  177   180 #>  [8357,]  161  167  165  176  175  174  175  176  176   179 #>  [8358,]  162  167  165  176  175  174  175  176  176   179 #>  [8359,]  162  167  165  176  175  174  175  176  176   179 #>  [8360,]  161  167  165  176  175  174  175  176  176   179 #>  [8361,]  162  167  166  177  176  175  176  177  177   180 #>  [8362,]  161  167  165  176  175  174  175  176  176   179 #>  [8363,]  162  167  165  176  175  174  175  176  176   179 #>  [8364,]  161  167  166  177  176  175  176  177  177   180 #>  [8365,]  161  167  165  176  175  174  175  176  176   179 #>  [8366,]  162  167  165  176  175  174  175  176  176   179 #>  [8367,]  161  167  165  176  175  174  175  176  176   179 #>  [8368,]  162  167  165  176  175  174  175  176  176   179 #>  [8369,]  162  167  165  176  175  174  175  176  176   179 #>  [8370,]  162  167  166  177  176  175  176  177  177   180 #>  [8371,]  162  167  166  177  176  175  176  177  177   180 #>  [8372,]  161  167  166  177  176  175  176  177  177   180 #>  [8373,]  161  167  166  177  176  175  176  177  177   180 #>  [8374,]  161  167  166  177  176  175  176  177  177   180 #>  [8375,]  162  167  166  177  176  175  176  177  177   180 #>  [8376,]  161  167  166  177  176  175  176  177  177   180 #>  [8377,]  162  167  166  177  176  175  176  177  177   180 #>  [8378,]  161  167  165  176  175  174  175  176  176   179 #>  [8379,]  162  167  166  177  176  175  176  177  177   180 #>  [8380,]  161  167  165  176  175  174  175  176  176   179 #>  [8381,]  161  167  165  176  175  174  175  176  176   179 #>  [8382,]  161  167  166  177  176  175  176  177  177   180 #>  [8383,]  162  167  165  176  175  174  175  176  176   179 #>  [8384,]  161  167  166  177  176  175  176  177  177   180 #>  [8385,]  161  167  165  176  175  174  175  176  176   179 #>  [8386,]  161  167  165  176  175  174  175  176  176   179 #>  [8387,]  162  167  166  177  176  175  176  177  177   180 #>  [8388,]  161  167  166  177  176  175  176  177  177   180 #>  [8389,]  161  167  165  176  175  174  175  176  176   179 #>  [8390,]  162  167  166  177  176  175  176  177  177   180 #>  [8391,]  162  167  165  176  175  174  175  176  176   179 #>  [8392,]  162  167  165  176  175  174  175  176  176   179 #>  [8393,]  161  167  165  176  175  174  175  176  176   179 #>  [8394,]  161  167  166  177  176  175  176  177  177   180 #>  [8395,]  162  167  166  177  176  175  176  177  177   180 #>  [8396,]  162  167  166  177  176  175  176  177  177   180 #>  [8397,]  161  167  165  176  175  174  175  176  176   179 #>  [8398,]  161  167  165  176  175  174  175  176  176   179 #>  [8399,]  161  167  165  176  175  174  175  176  176   179 #>  [8400,]  162  167  166  177  176  175  176  177  177   180 #>  [8401,]  164  169  168  178  177  176  177  178  178   181 #>  [8402,]  164  169  168  178  177  176  177  178  178   181 #>  [8403,]  163  168  167  178  177  176  177  178  178   181 #>  [8404,]  163  168  167  178  178  177  178  179  179   182 #>  [8405,]  164  169  168  178  177  176  177  178  178   181 #>  [8406,]  164  169  168  178  178  177  178  179  179   182 #>  [8407,]  163  168  167  178  177  176  177  178  178   181 #>  [8408,]  163  168  167  178  177  176  177  178  178   181 #>  [8409,]  164  169  168  178  178  177  178  179  179   182 #>  [8410,]  164  169  168  178  178  177  178  179  179   182 #>  [8411,]  164  169  168  178  178  177  178  179  179   182 #>  [8412,]  163  168  167  178  178  177  178  179  179   182 #>  [8413,]  164  169  168  178  177  176  177  178  178   181 #>  [8414,]  164  169  168  178  178  177  178  179  179   182 #>  [8415,]  164  169  168  178  178  177  178  179  179   182 #>  [8416,]  164  169  168  178  177  176  177  178  178   181 #>  [8417,]  164  169  168  178  177  176  177  178  178   181 #>  [8418,]  164  169  168  178  178  177  178  179  179   182 #>  [8419,]  164  169  168  178  178  177  178  179  179   182 #>  [8420,]  164  169  168  178  177  176  177  178  178   181 #>  [8421,]  164  169  168  178  178  177  178  179  179   182 #>  [8422,]  164  169  168  178  177  176  177  178  178   181 #>  [8423,]  164  169  168  178  177  176  177  178  178   181 #>  [8424,]  164  169  168  178  177  176  177  178  178   181 #>  [8425,]  163  168  167  178  177  176  177  178  178   181 #>  [8426,]  164  169  168  178  178  177  178  179  179   182 #>  [8427,]  164  169  168  178  178  177  178  179  179   182 #>  [8428,]  164  169  168  178  177  176  177  178  178   181 #>  [8429,]  164  169  168  178  177  176  177  178  178   181 #>  [8430,]  164  169  168  178  178  177  178  179  179   182 #>  [8431,]  163  168  167  178  178  177  178  179  179   182 #>  [8432,]  164  169  168  178  178  177  178  179  179   182 #>  [8433,]  164  169  168  178  178  177  178  179  179   182 #>  [8434,]  164  169  168  178  177  176  177  178  178   181 #>  [8435,]  164  169  168  178  177  176  177  178  178   181 #>  [8436,]  164  169  168  178  178  177  178  179  179   182 #>  [8437,]  164  169  168  178  177  176  177  178  178   181 #>  [8438,]  164  169  168  178  178  177  178  179  179   182 #>  [8439,]  164  169  168  178  177  176  177  178  178   181 #>  [8440,]  164  169  168  178  177  176  177  178  178   181 #>  [8441,]  164  169  168  178  178  177  178  179  179   182 #>  [8442,]  164  169  168  178  178  177  178  179  179   182 #>  [8443,]  164  169  168  178  177  176  177  178  178   181 #>  [8444,]  164  169  168  178  177  176  177  178  178   181 #>  [8445,]  164  169  168  178  177  176  177  178  178   181 #>  [8446,]  164  169  168  178  177  176  177  178  178   181 #>  [8447,]  164  169  168  178  177  176  177  178  178   181 #>  [8448,]  164  169  168  178  178  177  178  179  179   182 #>  [8449,]  164  169  168  178  177  176  177  178  178   181 #>  [8450,]  164  169  168  178  177  176  177  178  178   181 #>  [8451,]  164  169  168  178  177  176  177  178  178   181 #>  [8452,]  163  168  167  178  178  177  178  179  179   182 #>  [8453,]  164  169  168  178  177  176  177  178  178   181 #>  [8454,]  164  169  168  178  177  176  177  178  178   181 #>  [8455,]  164  169  168  178  177  176  177  178  178   181 #>  [8456,]  164  169  168  178  177  176  177  178  178   181 #>  [8457,]  163  168  167  178  177  176  177  178  178   181 #>  [8458,]  164  169  168  178  178  177  178  179  179   182 #>  [8459,]  163  168  167  178  177  176  177  178  178   181 #>  [8460,]  163  168  167  178  178  177  178  179  179   182 #>  [8461,]  164  169  168  178  178  177  178  179  179   182 #>  [8462,]  164  169  168  178  178  177  178  179  179   182 #>  [8463,]  164  169  168  178  177  176  177  178  178   181 #>  [8464,]  164  169  168  178  178  177  178  179  179   182 #>  [8465,]  164  169  168  178  177  176  177  178  178   181 #>  [8466,]  164  169  168  178  177  176  177  178  178   181 #>  [8467,]  164  169  168  178  178  177  178  179  179   182 #>  [8468,]  164  169  168  178  178  177  178  179  179   182 #>  [8469,]  164  169  168  178  178  177  178  179  179   182 #>  [8470,]  164  169  168  178  177  176  177  178  178   181 #>  [8471,]  164  169  168  178  177  176  177  178  178   181 #>  [8472,]  164  169  168  178  177  176  177  178  178   181 #>  [8473,]  164  169  168  178  178  177  178  179  179   182 #>  [8474,]  164  169  168  178  178  177  178  179  179   182 #>  [8475,]  164  169  168  178  178  177  178  179  179   182 #>  [8476,]  164  169  168  178  177  176  177  178  178   181 #>  [8477,]  164  169  168  178  177  176  177  178  178   181 #>  [8478,]  164  169  168  178  177  176  177  178  178   181 #>  [8479,]  164  169  168  178  177  176  177  178  178   181 #>  [8480,]  164  169  168  178  177  176  177  178  178   181 #>  [8481,]  164  169  168  178  177  176  177  178  178   181 #>  [8482,]  164  169  168  178  178  177  178  179  179   182 #>  [8483,]  164  169  168  178  177  176  177  178  178   181 #>  [8484,]  164  169  168  178  177  176  177  178  178   181 #>  [8485,]  164  169  168  178  178  177  178  179  179   182 #>  [8486,]  164  169  168  178  177  176  177  178  178   181 #>  [8487,]  164  169  168  178  177  176  177  178  178   181 #>  [8488,]  164  169  168  178  177  176  177  178  178   181 #>  [8489,]  164  169  168  178  177  176  177  178  178   181 #>  [8490,]  164  169  168  178  177  176  177  178  178   181 #>  [8491,]  164  169  168  178  177  176  177  178  178   181 #>  [8492,]  164  169  168  178  178  177  178  179  179   182 #>  [8493,]  164  169  168  178  178  177  178  179  179   182 #>  [8494,]  164  169  168  178  177  176  177  178  178   181 #>  [8495,]  164  169  168  178  177  176  177  178  178   181 #>  [8496,]  163  168  167  178  178  177  178  179  179   182 #>  [8497,]  163  168  167  178  178  177  178  179  179   182 #>  [8498,]  164  169  168  178  177  176  177  178  178   181 #>  [8499,]  164  169  168  178  178  177  178  179  179   182 #>  [8500,]  164  169  168  178  177  176  177  178  178   181 #>  [8501,]  166  171  170  180  179  178  179  180  180   183 #>  [8502,]  166  171  170  180  179  178  179  180  180   183 #>  [8503,]  165  170  169  179  180  179  180  181  181   184 #>  [8504,]  166  171  170  180  179  178  179  180  180   183 #>  [8505,]  166  171  170  180  179  178  179  180  180   183 #>  [8506,]  165  170  169  179  181  180  180  181  181   184 #>  [8507,]  166  171  170  180  179  178  179  180  180   183 #>  [8508,]  166  171  170  180  179  178  179  180  180   183 #>  [8509,]  166  171  170  180  179  178  179  180  180   183 #>  [8510,]  166  171  170  180  179  178  179  180  180   183 #>  [8511,]  165  170  169  179  180  179  180  181  181   184 #>  [8512,]  166  171  170  180  179  178  179  180  180   183 #>  [8513,]  166  171  170  180  179  178  179  180  180   183 #>  [8514,]  166  171  170  180  179  178  179  180  180   183 #>  [8515,]  166  171  170  180  179  178  179  180  180   183 #>  [8516,]  165  170  169  179  180  179  180  181  181   184 #>  [8517,]  166  171  170  180  179  178  179  180  180   183 #>  [8518,]  166  171  170  180  179  178  179  180  180   183 #>  [8519,]  165  170  169  179  180  179  180  181  181   184 #>  [8520,]  166  171  170  180  179  178  179  180  180   183 #>  [8521,]  166  171  170  180  179  178  179  180  180   183 #>  [8522,]  166  171  170  180  179  178  179  180  180   183 #>  [8523,]  166  171  170  180  179  178  179  180  180   183 #>  [8524,]  166  171  170  180  179  178  179  180  180   183 #>  [8525,]  166  171  170  180  179  178  179  180  180   183 #>  [8526,]  166  171  170  180  179  178  179  180  180   183 #>  [8527,]  166  171  170  180  179  178  179  180  180   183 #>  [8528,]  165  170  169  179  181  180  180  181  181   184 #>  [8529,]  166  171  170  180  179  178  179  180  180   183 #>  [8530,]  166  171  170  180  179  178  179  180  180   183 #>  [8531,]  166  171  170  180  179  178  179  180  180   183 #>  [8532,]  166  171  170  180  179  178  179  180  180   183 #>  [8533,]  166  171  170  180  179  178  179  180  180   183 #>  [8534,]  165  170  169  179  180  179  180  181  181   184 #>  [8535,]  165  170  169  179  180  179  180  181  181   184 #>  [8536,]  166  171  170  180  179  178  179  180  180   183 #>  [8537,]  165  170  169  179  180  179  180  181  181   184 #>  [8538,]  165  170  169  179  181  180  180  181  181   184 #>  [8539,]  166  171  170  180  179  178  179  180  180   183 #>  [8540,]  166  171  170  180  179  178  179  180  180   183 #>  [8541,]  166  171  170  180  179  178  179  180  180   183 #>  [8542,]  166  171  170  180  179  178  179  180  180   183 #>  [8543,]  166  171  170  180  179  178  179  180  180   183 #>  [8544,]  166  171  170  180  179  178  179  180  180   183 #>  [8545,]  165  170  169  179  181  180  180  181  181   184 #>  [8546,]  166  171  170  180  179  178  179  180  180   183 #>  [8547,]  166  171  170  180  179  178  179  180  180   183 #>  [8548,]  166  171  170  180  179  178  179  180  180   183 #>  [8549,]  165  170  169  179  180  179  180  181  181   184 #>  [8550,]  166  171  170  180  179  178  179  180  180   183 #>  [8551,]  166  171  170  180  179  178  179  180  180   183 #>  [8552,]  165  170  169  179  181  180  180  181  181   184 #>  [8553,]  166  171  170  180  179  178  179  180  180   183 #>  [8554,]  166  171  170  180  179  178  179  180  180   183 #>  [8555,]  166  171  170  180  179  178  179  180  180   183 #>  [8556,]  166  171  170  180  179  178  179  180  180   183 #>  [8557,]  166  171  170  180  179  178  179  180  180   183 #>  [8558,]  166  171  170  180  179  178  179  180  180   183 #>  [8559,]  166  171  170  180  179  178  179  180  180   183 #>  [8560,]  166  171  170  180  179  178  179  180  180   183 #>  [8561,]  166  171  170  180  179  178  179  180  180   183 #>  [8562,]  166  171  170  180  179  178  179  180  180   183 #>  [8563,]  166  171  170  180  179  178  179  180  180   183 #>  [8564,]  165  170  169  179  181  180  180  181  181   184 #>  [8565,]  166  171  170  180  179  178  179  180  180   183 #>  [8566,]  166  171  170  180  179  178  179  180  180   183 #>  [8567,]  166  171  170  180  179  178  179  180  180   183 #>  [8568,]  165  170  169  179  181  180  180  181  181   184 #>  [8569,]  166  171  170  180  179  178  179  180  180   183 #>  [8570,]  166  171  170  180  179  178  179  180  180   183 #>  [8571,]  166  171  170  180  179  178  179  180  180   183 #>  [8572,]  165  170  169  179  181  180  180  181  181   184 #>  [8573,]  166  171  170  180  179  178  179  180  180   183 #>  [8574,]  166  171  170  180  179  178  179  180  180   183 #>  [8575,]  166  171  170  180  179  178  179  180  180   183 #>  [8576,]  166  171  170  180  179  178  179  180  180   183 #>  [8577,]  165  170  169  179  180  179  180  181  181   184 #>  [8578,]  166  171  170  180  179  178  179  180  180   183 #>  [8579,]  166  171  170  180  179  178  179  180  180   183 #>  [8580,]  166  171  170  180  179  178  179  180  180   183 #>  [8581,]  166  171  170  180  179  178  179  180  180   183 #>  [8582,]  166  171  170  180  179  178  179  180  180   183 #>  [8583,]  166  171  170  180  179  178  179  180  180   183 #>  [8584,]  166  171  170  180  179  178  179  180  180   183 #>  [8585,]  166  171  170  180  179  178  179  180  180   183 #>  [8586,]  166  171  170  180  179  178  179  180  180   183 #>  [8587,]  166  171  170  180  179  178  179  180  180   183 #>  [8588,]  166  171  170  180  179  178  179  180  180   183 #>  [8589,]  166  171  170  180  179  178  179  180  180   183 #>  [8590,]  166  171  170  180  179  178  179  180  180   183 #>  [8591,]  166  171  170  180  179  178  179  180  180   183 #>  [8592,]  166  171  170  180  179  178  179  180  180   183 #>  [8593,]  166  171  170  180  179  178  179  180  180   183 #>  [8594,]  166  171  170  180  179  178  179  180  180   183 #>  [8595,]  166  171  170  180  179  178  179  180  180   183 #>  [8596,]  165  170  169  179  181  180  180  181  181   184 #>  [8597,]  165  170  169  179  181  180  180  181  181   184 #>  [8598,]  166  171  170  180  179  178  179  180  180   183 #>  [8599,]  166  171  170  180  179  178  179  180  180   183 #>  [8600,]  165  170  169  179  180  179  180  181  181   184 #>  [8601,]  167  172  171  181  182  181  181  182  182   185 #>  [8602,]  168  173  172  182  183  182  182  183  183   186 #>  [8603,]  167  172  171  181  182  181  181  182  182   185 #>  [8604,]  167  172  171  181  182  181  181  182  182   185 #>  [8605,]  167  172  171  181  182  181  181  182  182   185 #>  [8606,]  167  172  171  181  182  181  181  182  182   185 #>  [8607,]  167  172  171  181  182  181  181  182  182   185 #>  [8608,]  167  172  171  181  182  181  181  182  182   185 #>  [8609,]  168  173  172  182  183  182  182  183  183   186 #>  [8610,]  168  173  172  182  183  182  182  183  183   186 #>  [8611,]  167  172  171  181  182  181  181  182  182   185 #>  [8612,]  168  173  172  182  183  182  182  183  183   186 #>  [8613,]  168  173  172  182  183  182  182  183  183   186 #>  [8614,]  167  172  171  181  182  181  181  182  182   185 #>  [8615,]  167  172  171  181  182  181  181  182  182   185 #>  [8616,]  167  172  171  181  182  181  181  182  182   185 #>  [8617,]  168  173  172  182  183  182  182  183  183   186 #>  [8618,]  168  173  172  182  183  182  182  183  183   186 #>  [8619,]  167  172  171  181  182  181  181  182  182   185 #>  [8620,]  168  173  172  182  183  182  182  183  183   186 #>  [8621,]  168  173  172  182  183  182  182  183  183   186 #>  [8622,]  167  172  171  181  182  181  181  182  182   185 #>  [8623,]  168  173  172  182  183  182  182  183  183   186 #>  [8624,]  168  173  172  182  183  182  182  183  183   186 #>  [8625,]  167  172  171  181  182  181  181  182  182   185 #>  [8626,]  167  172  171  181  182  181  181  182  182   185 #>  [8627,]  168  173  172  182  183  182  182  183  183   186 #>  [8628,]  167  172  171  181  182  181  181  182  182   185 #>  [8629,]  168  173  172  182  183  182  182  183  183   186 #>  [8630,]  167  172  171  181  182  181  181  182  182   185 #>  [8631,]  168  173  172  182  183  182  182  183  183   186 #>  [8632,]  168  173  172  182  183  182  182  183  183   186 #>  [8633,]  168  173  172  182  183  182  182  183  183   186 #>  [8634,]  167  172  171  181  182  181  181  182  182   185 #>  [8635,]  167  172  171  181  182  181  181  182  182   185 #>  [8636,]  168  173  172  182  183  182  182  183  183   186 #>  [8637,]  167  172  171  181  182  181  181  182  182   185 #>  [8638,]  167  172  171  181  182  181  181  182  182   185 #>  [8639,]  167  172  171  181  182  181  181  182  182   185 #>  [8640,]  168  173  172  182  183  182  182  183  183   186 #>  [8641,]  167  172  171  181  182  181  181  182  182   185 #>  [8642,]  167  172  171  181  182  181  181  182  182   185 #>  [8643,]  167  172  171  181  182  181  181  182  182   185 #>  [8644,]  167  172  171  181  182  181  181  182  182   185 #>  [8645,]  167  172  171  181  182  181  181  182  182   185 #>  [8646,]  167  172  171  181  182  181  181  182  182   185 #>  [8647,]  167  172  171  181  182  181  181  182  182   185 #>  [8648,]  167  172  171  181  182  181  181  182  182   185 #>  [8649,]  167  172  171  181  182  181  181  182  182   185 #>  [8650,]  167  172  171  181  182  181  181  182  182   185 #>  [8651,]  167  172  171  181  182  181  181  182  182   185 #>  [8652,]  167  172  171  181  182  181  181  182  182   185 #>  [8653,]  168  173  172  182  183  182  182  183  183   186 #>  [8654,]  167  172  171  181  182  181  181  182  182   185 #>  [8655,]  167  172  171  181  182  181  181  182  182   185 #>  [8656,]  167  172  171  181  182  181  181  182  182   185 #>  [8657,]  167  172  171  181  182  181  181  182  182   185 #>  [8658,]  167  172  171  181  182  181  181  182  182   185 #>  [8659,]  167  172  171  181  182  181  181  182  182   185 #>  [8660,]  168  173  172  182  183  182  182  183  183   186 #>  [8661,]  168  173  172  182  183  182  182  183  183   186 #>  [8662,]  167  172  171  181  182  181  181  182  182   185 #>  [8663,]  168  173  172  182  183  182  182  183  183   186 #>  [8664,]  167  172  171  181  182  181  181  182  182   185 #>  [8665,]  167  172  171  181  182  181  181  182  182   185 #>  [8666,]  167  172  171  181  182  181  181  182  182   185 #>  [8667,]  167  172  171  181  182  181  181  182  182   185 #>  [8668,]  167  172  171  181  182  181  181  182  182   185 #>  [8669,]  167  172  171  181  182  181  181  182  182   185 #>  [8670,]  168  173  172  182  183  182  182  183  183   186 #>  [8671,]  167  172  171  181  182  181  181  182  182   185 #>  [8672,]  167  172  171  181  182  181  181  182  182   185 #>  [8673,]  167  172  171  181  182  181  181  182  182   185 #>  [8674,]  167  172  171  181  182  181  181  182  182   185 #>  [8675,]  168  173  172  182  183  182  182  183  183   186 #>  [8676,]  167  172  171  181  182  181  181  182  182   185 #>  [8677,]  167  172  171  181  182  181  181  182  182   185 #>  [8678,]  167  172  171  181  182  181  181  182  182   185 #>  [8679,]  167  172  171  181  182  181  181  182  182   185 #>  [8680,]  168  173  172  182  183  182  182  183  183   186 #>  [8681,]  168  173  172  182  183  182  182  183  183   186 #>  [8682,]  167  172  171  181  182  181  181  182  182   185 #>  [8683,]  168  173  172  182  183  182  182  183  183   186 #>  [8684,]  168  173  172  182  183  182  182  183  183   186 #>  [8685,]  167  172  171  181  182  181  181  182  182   185 #>  [8686,]  168  173  172  182  183  182  182  183  183   186 #>  [8687,]  167  172  171  181  182  181  181  182  182   185 #>  [8688,]  168  173  172  182  183  182  182  183  183   186 #>  [8689,]  167  172  171  181  182  181  181  182  182   185 #>  [8690,]  167  172  171  181  182  181  181  182  182   185 #>  [8691,]  167  172  171  181  182  181  181  182  182   185 #>  [8692,]  167  172  171  181  182  181  181  182  182   185 #>  [8693,]  167  172  171  181  182  181  181  182  182   185 #>  [8694,]  167  172  171  181  182  181  181  182  182   185 #>  [8695,]  167  172  171  181  182  181  181  182  182   185 #>  [8696,]  167  172  171  181  182  181  181  182  182   185 #>  [8697,]  167  172  171  181  182  181  181  182  182   185 #>  [8698,]  167  172  171  181  182  181  181  182  182   185 #>  [8699,]  167  172  171  181  182  181  181  182  182   185 #>  [8700,]  167  172  171  181  182  181  181  182  182   185 #>  [8701,]  169  174  173  183  184  183  183  186  186   188 #>  [8702,]  169  174  173  183  184  183  183  186  186   188 #>  [8703,]  169  174  173  183  184  183  183  185  185   188 #>  [8704,]  170  175  174  184  185  184  184  184  184   187 #>  [8705,]  169  174  173  183  184  183  183  185  185   188 #>  [8706,]  170  175  174  184  185  184  184  184  184   187 #>  [8707,]  169  174  173  183  184  183  183  186  186   188 #>  [8708,]  169  174  173  183  184  183  183  186  186   188 #>  [8709,]  170  175  174  184  185  184  184  184  184   187 #>  [8710,]  170  175  174  184  185  184  184  184  184   187 #>  [8711,]  170  175  174  184  185  184  184  184  184   187 #>  [8712,]  170  175  174  184  185  184  184  184  184   187 #>  [8713,]  169  174  173  183  184  183  183  186  186   188 #>  [8714,]  170  175  174  184  185  184  184  184  184   187 #>  [8715,]  170  175  174  184  185  184  184  184  184   187 #>  [8716,]  169  174  173  183  184  183  183  186  186   188 #>  [8717,]  169  174  173  183  184  183  183  186  186   188 #>  [8718,]  170  175  174  184  185  184  184  184  184   187 #>  [8719,]  170  175  174  184  185  184  184  184  184   187 #>  [8720,]  169  174  173  183  184  183  183  185  185   188 #>  [8721,]  170  175  174  184  185  184  184  184  184   187 #>  [8722,]  169  174  173  183  184  183  183  185  185   188 #>  [8723,]  170  175  174  184  185  184  184  184  184   187 #>  [8724,]  169  174  173  183  184  183  183  185  185   188 #>  [8725,]  169  174  173  183  184  183  183  186  186   188 #>  [8726,]  170  175  174  184  185  184  184  184  184   187 #>  [8727,]  170  175  174  184  185  184  184  184  184   187 #>  [8728,]  169  174  173  183  184  183  183  186  186   188 #>  [8729,]  169  174  173  183  184  183  183  185  185   188 #>  [8730,]  170  175  174  184  185  184  184  184  184   187 #>  [8731,]  170  175  174  184  185  184  184  184  184   187 #>  [8732,]  170  175  174  184  185  184  184  184  184   187 #>  [8733,]  170  175  174  184  185  184  184  184  184   187 #>  [8734,]  170  175  174  184  185  184  184  184  184   187 #>  [8735,]  169  174  173  183  184  183  183  185  185   188 #>  [8736,]  170  175  174  184  185  184  184  184  184   187 #>  [8737,]  169  174  173  183  184  183  183  186  186   188 #>  [8738,]  170  175  174  184  185  184  184  184  184   187 #>  [8739,]  169  174  173  183  184  183  183  186  186   188 #>  [8740,]  169  174  173  183  184  183  183  185  185   188 #>  [8741,]  170  175  174  184  185  184  184  184  184   187 #>  [8742,]  170  175  174  184  185  184  184  184  184   187 #>  [8743,]  169  174  173  183  184  183  183  186  186   188 #>  [8744,]  169  174  173  183  184  183  183  186  186   188 #>  [8745,]  169  174  173  183  184  183  183  186  186   188 #>  [8746,]  169  174  173  183  184  183  183  186  186   188 #>  [8747,]  169  174  173  183  184  183  183  186  186   188 #>  [8748,]  170  175  174  184  185  184  184  184  184   187 #>  [8749,]  169  174  173  183  184  183  183  186  186   188 #>  [8750,]  169  174  173  183  184  183  183  186  186   188 #>  [8751,]  169  174  173  183  184  183  183  185  185   188 #>  [8752,]  170  175  174  184  185  184  184  184  184   187 #>  [8753,]  169  174  173  183  184  183  183  186  186   188 #>  [8754,]  169  174  173  183  184  183  183  185  185   188 #>  [8755,]  169  174  173  183  184  183  183  185  185   188 #>  [8756,]  169  174  173  183  184  183  183  186  186   188 #>  [8757,]  169  174  173  183  184  183  183  185  185   188 #>  [8758,]  170  175  174  184  185  184  184  184  184   187 #>  [8759,]  169  174  173  183  184  183  183  186  186   188 #>  [8760,]  170  175  174  184  185  184  184  184  184   187 #>  [8761,]  170  175  174  184  185  184  184  184  184   187 #>  [8762,]  170  175  174  184  185  184  184  184  184   187 #>  [8763,]  169  174  173  183  184  183  183  185  185   188 #>  [8764,]  170  175  174  184  185  184  184  184  184   187 #>  [8765,]  169  174  173  183  184  183  183  186  186   188 #>  [8766,]  169  174  173  183  184  183  183  185  185   188 #>  [8767,]  170  175  174  184  185  184  184  184  184   187 #>  [8768,]  170  175  174  184  185  184  184  184  184   187 #>  [8769,]  170  175  174  184  185  184  184  184  184   187 #>  [8770,]  169  174  173  183  184  183  183  186  186   188 #>  [8771,]  169  174  173  183  184  183  183  186  186   188 #>  [8772,]  169  174  173  183  184  183  183  186  186   188 #>  [8773,]  170  175  174  184  185  184  184  184  184   187 #>  [8774,]  170  175  174  184  185  184  184  184  184   187 #>  [8775,]  170  175  174  184  185  184  184  184  184   187 #>  [8776,]  169  174  173  183  184  183  183  186  186   188 #>  [8777,]  169  174  173  183  184  183  183  186  186   188 #>  [8778,]  169  174  173  183  184  183  183  185  185   188 #>  [8779,]  169  174  173  183  184  183  183  186  186   188 #>  [8780,]  170  175  174  184  185  184  184  184  184   187 #>  [8781,]  169  174  173  183  184  183  183  185  185   188 #>  [8782,]  170  175  174  184  185  184  184  184  184   187 #>  [8783,]  169  174  173  183  184  183  183  185  185   188 #>  [8784,]  169  174  173  183  184  183  183  186  186   188 #>  [8785,]  170  175  174  184  185  184  184  184  184   187 #>  [8786,]  169  174  173  183  184  183  183  186  186   188 #>  [8787,]  169  174  173  183  184  183  183  186  186   188 #>  [8788,]  169  174  173  183  184  183  183  186  186   188 #>  [8789,]  169  174  173  183  184  183  183  185  185   188 #>  [8790,]  169  174  173  183  184  183  183  186  186   188 #>  [8791,]  170  175  174  184  185  184  184  184  184   187 #>  [8792,]  170  175  174  184  185  184  184  184  184   187 #>  [8793,]  170  175  174  184  185  184  184  184  184   187 #>  [8794,]  169  174  173  183  184  183  183  186  186   188 #>  [8795,]  169  174  173  183  184  183  183  186  186   188 #>  [8796,]  170  175  174  184  185  184  184  184  184   187 #>  [8797,]  170  175  174  184  185  184  184  184  184   187 #>  [8798,]  169  174  173  183  184  183  183  185  185   188 #>  [8799,]  170  175  174  184  185  184  184  184  184   187 #>  [8800,]  169  174  173  183  184  183  183  186  186   188 #>  [8801,]  171  176  175  185  186  185  185  187  187   189 #>  [8802,]  172  177  176  186  187  186  186  188  188   190 #>  [8803,]  172  177  176  186  188  186  186  188  188   190 #>  [8804,]  171  176  175  185  186  185  185  187  187   189 #>  [8805,]  171  176  175  185  186  185  185  187  187   189 #>  [8806,]  172  177  176  186  187  186  186  188  188   190 #>  [8807,]  172  177  176  186  188  186  186  188  188   190 #>  [8808,]  171  176  175  185  186  185  185  187  187   189 #>  [8809,]  171  176  175  185  186  185  185  187  187   189 #>  [8810,]  171  176  175  185  186  185  185  187  187   189 #>  [8811,]  171  176  175  185  186  185  185  187  187   189 #>  [8812,]  172  177  176  186  187  186  186  188  188   190 #>  [8813,]  171  176  175  185  186  185  185  187  187   189 #>  [8814,]  171  176  175  185  186  185  185  187  187   189 #>  [8815,]  171  176  175  185  186  185  185  187  187   189 #>  [8816,]  171  176  175  185  186  185  185  187  187   189 #>  [8817,]  171  176  175  185  186  185  185  187  187   189 #>  [8818,]  172  177  176  186  188  186  186  188  188   190 #>  [8819,]  172  177  176  186  187  186  186  188  188   190 #>  [8820,]  172  177  176  186  188  186  186  188  188   190 #>  [8821,]  171  176  175  185  186  185  185  187  187   189 #>  [8822,]  171  176  175  185  186  185  185  187  187   189 #>  [8823,]  172  177  176  186  187  186  186  188  188   190 #>  [8824,]  171  176  175  185  186  185  185  187  187   189 #>  [8825,]  172  177  176  186  188  186  186  188  188   190 #>  [8826,]  171  176  175  185  186  185  185  187  187   189 #>  [8827,]  171  176  175  185  186  185  185  187  187   189 #>  [8828,]  172  177  176  186  188  186  186  188  188   190 #>  [8829,]  171  176  175  185  186  185  185  187  187   189 #>  [8830,]  171  176  175  185  186  185  185  187  187   189 #>  [8831,]  172  177  176  186  187  186  186  188  188   190 #>  [8832,]  172  177  176  186  188  186  186  188  188   190 #>  [8833,]  172  177  176  186  188  186  186  188  188   190 #>  [8834,]  172  177  176  186  187  186  186  188  188   190 #>  [8835,]  171  176  175  185  186  185  185  187  187   189 #>  [8836,]  171  176  175  185  186  185  185  187  187   189 #>  [8837,]  171  176  175  185  186  185  185  187  187   189 #>  [8838,]  171  176  175  185  186  185  185  187  187   189 #>  [8839,]  171  176  175  185  186  185  185  187  187   189 #>  [8840,]  172  177  176  186  188  186  186  188  188   190 #>  [8841,]  171  176  175  185  186  185  185  187  187   189 #>  [8842,]  172  177  176  186  187  186  186  188  188   190 #>  [8843,]  171  176  175  185  186  185  185  187  187   189 #>  [8844,]  171  176  175  185  186  185  185  187  187   189 #>  [8845,]  171  176  175  185  186  185  185  187  187   189 #>  [8846,]  171  176  175  185  186  185  185  187  187   189 #>  [8847,]  171  176  175  185  186  185  185  187  187   189 #>  [8848,]  172  177  176  186  187  186  186  188  188   190 #>  [8849,]  171  176  175  185  186  185  185  187  187   189 #>  [8850,]  171  176  175  185  186  185  185  187  187   189 #>  [8851,]  171  176  175  185  186  185  185  187  187   189 #>  [8852,]  171  176  175  185  186  185  185  187  187   189 #>  [8853,]  171  176  175  185  186  185  185  187  187   189 #>  [8854,]  171  176  175  185  186  185  185  187  187   189 #>  [8855,]  171  176  175  185  186  185  185  187  187   189 #>  [8856,]  172  177  176  186  187  186  186  188  188   190 #>  [8857,]  171  176  175  185  186  185  185  187  187   189 #>  [8858,]  171  176  175  185  186  185  185  187  187   189 #>  [8859,]  171  176  175  185  186  185  185  187  187   189 #>  [8860,]  172  177  176  186  187  186  186  188  188   190 #>  [8861,]  171  176  175  185  186  185  185  187  187   189 #>  [8862,]  171  176  175  185  186  185  185  187  187   189 #>  [8863,]  171  176  175  185  186  185  185  187  187   189 #>  [8864,]  172  177  176  186  187  186  186  188  188   190 #>  [8865,]  172  177  176  186  187  186  186  188  188   190 #>  [8866,]  171  176  175  185  186  185  185  187  187   189 #>  [8867,]  171  176  175  185  186  185  185  187  187   189 #>  [8868,]  171  176  175  185  186  185  185  187  187   189 #>  [8869,]  171  176  175  185  186  185  185  187  187   189 #>  [8870,]  172  177  176  186  187  186  186  188  188   190 #>  [8871,]  172  177  176  186  188  186  186  188  188   190 #>  [8872,]  171  176  175  185  186  185  185  187  187   189 #>  [8873,]  172  177  176  186  188  186  186  188  188   190 #>  [8874,]  171  176  175  185  186  185  185  187  187   189 #>  [8875,]  171  176  175  185  186  185  185  187  187   189 #>  [8876,]  171  176  175  185  186  185  185  187  187   189 #>  [8877,]  171  176  175  185  186  185  185  187  187   189 #>  [8878,]  172  177  176  186  187  186  186  188  188   190 #>  [8879,]  171  176  175  185  186  185  185  187  187   189 #>  [8880,]  171  176  175  185  186  185  185  187  187   189 #>  [8881,]  171  176  175  185  186  185  185  187  187   189 #>  [8882,]  171  176  175  185  186  185  185  187  187   189 #>  [8883,]  171  176  175  185  186  185  185  187  187   189 #>  [8884,]  172  177  176  186  188  186  186  188  188   190 #>  [8885,]  171  176  175  185  186  185  185  187  187   189 #>  [8886,]  171  176  175  185  186  185  185  187  187   189 #>  [8887,]  171  176  175  185  186  185  185  187  187   189 #>  [8888,]  171  176  175  185  186  185  185  187  187   189 #>  [8889,]  171  176  175  185  186  185  185  187  187   189 #>  [8890,]  171  176  175  185  186  185  185  187  187   189 #>  [8891,]  171  176  175  185  186  185  185  187  187   189 #>  [8892,]  171  176  175  185  186  185  185  187  187   189 #>  [8893,]  172  177  176  186  187  186  186  188  188   190 #>  [8894,]  171  176  175  185  186  185  185  187  187   189 #>  [8895,]  171  176  175  185  186  185  185  187  187   189 #>  [8896,]  171  176  175  185  186  185  185  187  187   189 #>  [8897,]  172  177  176  186  188  186  186  188  188   190 #>  [8898,]  172  177  176  186  188  186  186  188  188   190 #>  [8899,]  171  176  175  185  186  185  185  187  187   189 #>  [8900,]  172  177  176  186  187  186  186  188  188   190 #>  [8901,]  174  179  177  188  190  188  188  190  190   192 #>  [8902,]  173  178  177  187  189  187  187  189  189   191 #>  [8903,]  174  179  177  187  189  187  187  189  189   191 #>  [8904,]  174  179  177  187  189  187  187  189  189   191 #>  [8905,]  174  179  177  188  190  188  188  190  190   192 #>  [8906,]  173  178  177  187  189  187  187  189  189   191 #>  [8907,]  174  179  177  187  189  187  187  189  189   191 #>  [8908,]  174  179  177  187  189  187  187  189  189   191 #>  [8909,]  174  179  177  188  190  188  188  191  191   192 #>  [8910,]  174  179  177  187  189  187  187  189  189   191 #>  [8911,]  173  178  177  188  190  188  188  190  190   192 #>  [8912,]  173  178  177  187  189  187  187  189  189   191 #>  [8913,]  174  179  177  188  190  188  188  190  190   192 #>  [8914,]  174  179  177  187  189  187  187  189  189   191 #>  [8915,]  173  178  177  187  189  187  187  189  189   191 #>  [8916,]  174  179  177  187  189  187  187  189  189   191 #>  [8917,]  173  178  177  188  190  188  188  190  190   192 #>  [8918,]  174  179  177  188  190  188  188  190  190   192 #>  [8919,]  173  178  177  188  190  188  188  190  190   192 #>  [8920,]  174  179  177  188  190  188  188  190  190   192 #>  [8921,]  174  179  177  188  190  188  188  191  191   192 #>  [8922,]  174  179  177  188  190  188  188  190  190   192 #>  [8923,]  173  178  177  187  189  187  187  189  189   191 #>  [8924,]  174  179  177  188  190  188  188  190  190   192 #>  [8925,]  174  179  177  187  189  187  187  189  189   191 #>  [8926,]  173  178  177  187  189  187  187  189  189   191 #>  [8927,]  174  179  177  188  190  188  188  190  190   192 #>  [8928,]  174  179  177  188  190  188  188  190  190   192 #>  [8929,]  173  178  177  188  190  188  188  191  191   192 #>  [8930,]  173  178  177  187  189  187  187  189  189   191 #>  [8931,]  173  178  177  187  189  187  187  189  189   191 #>  [8932,]  174  179  177  187  189  187  187  189  189   191 #>  [8933,]  174  179  177  188  190  188  188  191  191   192 #>  [8934,]  173  178  177  187  189  187  187  189  189   191 #>  [8935,]  173  178  177  187  189  187  187  189  189   191 #>  [8936,]  174  179  177  188  190  188  188  190  190   192 #>  [8937,]  173  178  177  187  189  187  187  189  189   191 #>  [8938,]  174  179  177  188  190  188  188  190  190   192 #>  [8939,]  174  179  177  188  190  188  188  190  190   192 #>  [8940,]  174  179  177  187  189  187  187  189  189   191 #>  [8941,]  174  179  177  188  190  188  188  190  190   192 #>  [8942,]  173  178  177  188  190  188  188  190  190   192 #>  [8943,]  173  178  177  188  190  188  188  190  190   192 #>  [8944,]  173  178  177  187  189  187  187  189  189   191 #>  [8945,]  174  179  177  187  189  187  187  189  189   191 #>  [8946,]  174  179  177  187  189  187  187  189  189   191 #>  [8947,]  173  178  177  187  189  187  187  189  189   191 #>  [8948,]  173  178  177  188  190  188  188  190  190   192 #>  [8949,]  174  179  177  187  189  187  187  189  189   191 #>  [8950,]  174  179  177  188  190  188  188  190  190   192 #>  [8951,]  174  179  177  188  190  188  188  190  190   192 #>  [8952,]  174  179  177  187  189  187  187  189  189   191 #>  [8953,]  174  179  177  188  190  188  188  190  190   192 #>  [8954,]  174  179  177  188  190  188  188  190  190   192 #>  [8955,]  174  179  177  187  189  187  187  189  189   191 #>  [8956,]  173  178  177  188  190  188  188  190  190   192 #>  [8957,]  174  179  177  187  189  187  187  189  189   191 #>  [8958,]  174  179  177  188  190  188  188  190  190   192 #>  [8959,]  174  179  177  187  189  187  187  189  189   191 #>  [8960,]  173  178  177  187  189  187  187  189  189   191 #>  [8961,]  173  178  177  188  190  188  188  190  190   192 #>  [8962,]  174  179  177  188  190  188  188  190  190   192 #>  [8963,]  173  178  177  188  190  188  188  190  190   192 #>  [8964,]  173  178  177  188  190  188  188  190  190   192 #>  [8965,]  173  178  177  188  190  188  188  190  190   192 #>  [8966,]  173  178  177  188  190  188  188  190  190   192 #>  [8967,]  174  179  177  187  189  187  187  189  189   191 #>  [8968,]  173  178  177  187  189  187  187  189  189   191 #>  [8969,]  174  179  177  187  189  187  187  189  189   191 #>  [8970,]  173  178  177  188  190  188  188  191  191   192 #>  [8971,]  174  179  177  187  189  187  187  189  189   191 #>  [8972,]  174  179  177  187  189  187  187  189  189   191 #>  [8973,]  174  179  177  188  190  188  188  190  190   192 #>  [8974,]  174  179  177  187  189  187  187  189  189   191 #>  [8975,]  173  178  177  187  189  187  187  189  189   191 #>  [8976,]  174  179  177  187  189  187  187  189  189   191 #>  [8977,]  174  179  177  188  190  188  188  190  190   192 #>  [8978,]  173  178  177  187  189  187  187  189  189   191 #>  [8979,]  173  178  177  188  190  188  188  190  190   192 #>  [8980,]  174  179  177  187  189  187  187  189  189   191 #>  [8981,]  173  178  177  188  190  188  188  191  191   192 #>  [8982,]  174  179  177  188  190  188  188  190  190   192 #>  [8983,]  174  179  177  188  190  188  188  190  190   192 #>  [8984,]  174  179  177  188  190  188  188  190  190   192 #>  [8985,]  174  179  177  188  190  188  188  190  190   192 #>  [8986,]  174  179  177  187  189  187  187  189  189   191 #>  [8987,]  174  179  177  188  190  188  188  190  190   192 #>  [8988,]  174  179  177  187  189  187  187  189  189   191 #>  [8989,]  174  179  177  188  190  188  188  190  190   192 #>  [8990,]  174  179  177  188  190  188  188  190  190   192 #>  [8991,]  174  179  177  188  190  188  188  190  190   192 #>  [8992,]  173  178  177  187  189  187  187  189  189   191 #>  [8993,]  174  179  177  188  190  188  188  190  190   192 #>  [8994,]  173  178  177  188  190  188  188  190  190   192 #>  [8995,]  173  178  177  187  189  187  187  189  189   191 #>  [8996,]  173  178  177  187  189  187  187  189  189   191 #>  [8997,]  174  179  177  187  189  187  187  189  189   191 #>  [8998,]  174  179  177  187  189  187  187  189  189   191 #>  [8999,]  174  179  177  188  190  188  188  190  190   192 #>  [9000,]  173  178  177  188  190  188  188  190  190   192 #>  [9001,]  175  180  178  189  191  190  190  193  194   195 #>  [9002,]  175  180  178  189  191  190  190  193  193   194 #>  [9003,]  175  180  178  189  191  189  189  192  192   193 #>  [9004,]  176  181  179  190  191  190  190  193  193   194 #>  [9005,]  175  180  178  189  191  190  190  193  194   195 #>  [9006,]  175  180  178  189  191  189  189  192  192   193 #>  [9007,]  175  180  178  189  191  189  189  192  192   193 #>  [9008,]  175  180  178  189  191  190  190  193  193   194 #>  [9009,]  175  180  178  189  191  190  190  193  194   195 #>  [9010,]  176  181  179  190  191  190  190  193  193   194 #>  [9011,]  175  180  178  189  191  190  190  193  194   195 #>  [9012,]  175  180  178  189  191  190  190  193  193   194 #>  [9013,]  175  180  178  189  191  190  190  193  194   195 #>  [9014,]  175  180  178  189  191  190  190  193  193   194 #>  [9015,]  175  180  178  189  191  190  190  193  193   194 #>  [9016,]  175  180  178  189  191  190  190  193  193   194 #>  [9017,]  175  180  178  189  191  190  190  193  194   195 #>  [9018,]  176  181  179  190  191  190  190  193  194   195 #>  [9019,]  175  180  178  189  191  190  190  193  194   195 #>  [9020,]  175  180  178  189  191  189  189  192  192   193 #>  [9021,]  176  181  179  190  191  189  189  192  192   193 #>  [9022,]  175  180  178  189  191  190  190  193  194   195 #>  [9023,]  175  180  178  189  191  189  189  192  192   193 #>  [9024,]  175  180  178  189  191  190  190  193  194   195 #>  [9025,]  176  181  179  190  191  189  189  192  192   193 #>  [9026,]  175  180  178  189  191  190  190  193  193   194 #>  [9027,]  175  180  178  189  191  190  190  193  194   195 #>  [9028,]  175  180  178  189  191  190  190  193  194   195 #>  [9029,]  175  180  178  189  191  190  190  193  194   195 #>  [9030,]  175  180  178  189  191  190  190  193  193   194 #>  [9031,]  175  180  178  189  191  190  190  193  193   194 #>  [9032,]  175  180  178  189  191  190  190  193  193   194 #>  [9033,]  175  180  178  189  191  190  190  193  194   195 #>  [9034,]  175  180  178  189  191  189  189  192  192   193 #>  [9035,]  175  180  178  189  191  189  189  192  192   193 #>  [9036,]  175  180  178  189  191  190  190  193  194   195 #>  [9037,]  175  180  178  189  191  189  189  192  192   193 #>  [9038,]  175  180  178  189  191  190  190  193  194   195 #>  [9039,]  176  181  179  190  191  190  190  193  194   195 #>  [9040,]  175  180  178  189  191  190  190  193  193   194 #>  [9041,]  175  180  178  189  191  190  190  193  194   195 #>  [9042,]  175  180  178  189  191  189  189  192  192   193 #>  [9043,]  176  181  179  190  191  190  190  193  193   194 #>  [9044,]  175  180  178  189  191  189  189  192  192   193 #>  [9045,]  176  181  179  190  191  190  190  193  193   194 #>  [9046,]  175  180  178  189  191  190  190  193  193   194 #>  [9047,]  175  180  178  189  191  190  190  193  193   194 #>  [9048,]  175  180  178  189  191  190  190  193  193   194 #>  [9049,]  175  180  178  189  191  190  190  193  193   194 #>  [9050,]  175  180  178  189  191  189  189  192  192   193 #>  [9051,]  175  180  178  189  191  190  190  193  194   195 #>  [9052,]  175  180  178  189  191  190  190  193  193   194 #>  [9053,]  176  181  179  190  191  189  189  192  192   193 #>  [9054,]  175  180  178  189  191  189  189  192  192   193 #>  [9055,]  175  180  178  189  191  189  189  192  192   193 #>  [9056,]  175  180  178  189  191  189  189  192  192   193 #>  [9057,]  175  180  178  189  191  189  189  192  192   193 #>  [9058,]  175  180  178  189  191  190  190  193  194   195 #>  [9059,]  175  180  178  189  191  190  190  193  193   194 #>  [9060,]  175  180  178  189  191  189  189  192  192   193 #>  [9061,]  175  180  178  189  191  190  190  193  194   195 #>  [9062,]  175  180  178  189  191  190  190  193  194   195 #>  [9063,]  175  180  178  189  191  190  190  193  193   194 #>  [9064,]  175  180  178  189  191  189  189  192  192   193 #>  [9065,]  175  180  178  189  191  189  189  192  192   193 #>  [9066,]  175  180  178  189  191  190  190  193  194   195 #>  [9067,]  175  180  178  189  191  190  190  193  193   194 #>  [9068,]  175  180  178  189  191  190  190  193  193   194 #>  [9069,]  175  180  178  189  191  190  190  193  193   194 #>  [9070,]  175  180  178  189  191  190  190  193  194   195 #>  [9071,]  175  180  178  189  191  190  190  193  193   194 #>  [9072,]  176  181  179  190  191  190  190  193  193   194 #>  [9073,]  176  181  179  190  191  189  189  192  192   193 #>  [9074,]  176  181  179  190  191  189  189  192  192   193 #>  [9075,]  176  181  179  190  191  190  190  193  193   194 #>  [9076,]  176  181  179  190  191  190  190  193  193   194 #>  [9077,]  176  181  179  190  191  190  190  193  194   195 #>  [9078,]  175  180  178  189  191  190  190  193  193   194 #>  [9079,]  175  180  178  189  191  190  190  193  194   195 #>  [9080,]  175  180  178  189  191  189  189  192  192   193 #>  [9081,]  175  180  178  189  191  189  189  192  192   193 #>  [9082,]  175  180  178  189  191  189  189  192  192   193 #>  [9083,]  175  180  178  189  191  190  190  193  194   195 #>  [9084,]  175  180  178  189  191  189  189  192  192   193 #>  [9085,]  175  180  178  189  191  189  189  192  192   193 #>  [9086,]  175  180  178  189  191  189  189  192  192   193 #>  [9087,]  175  180  178  189  191  190  190  193  194   195 #>  [9088,]  175  180  178  189  191  189  189  192  192   193 #>  [9089,]  175  180  178  189  191  189  189  192  192   193 #>  [9090,]  175  180  178  189  191  190  190  193  194   195 #>  [9091,]  175  180  178  189  191  190  190  193  194   195 #>  [9092,]  175  180  178  189  191  190  190  193  193   194 #>  [9093,]  175  180  178  189  191  190  190  193  194   195 #>  [9094,]  176  181  179  190  191  189  189  192  192   193 #>  [9095,]  176  181  179  190  191  190  190  193  193   194 #>  [9096,]  175  180  178  189  191  190  190  193  193   194 #>  [9097,]  175  180  178  189  191  189  189  192  192   193 #>  [9098,]  175  180  178  189  191  189  189  192  192   193 #>  [9099,]  175  180  178  189  191  189  189  192  192   193 #>  [9100,]  175  180  178  189  191  190  190  193  194   195 #>  [9101,]  178  182  180  191  192  191  191  194  197   197 #>  [9102,]  177  182  180  191  192  191  191  194  197   197 #>  [9103,]  178  182  180  191  192  191  191  194  196   197 #>  [9104,]  178  182  180  191  192  191  191  194  196   197 #>  [9105,]  178  182  180  191  192  191  191  194  196   197 #>  [9106,]  177  182  181  192  193  192  192  195  195   196 #>  [9107,]  178  182  180  191  192  191  191  194  196   197 #>  [9108,]  178  182  181  192  193  192  192  195  195   196 #>  [9109,]  178  182  181  192  193  192  192  195  195   196 #>  [9110,]  178  182  180  191  192  191  191  194  196   197 #>  [9111,]  177  182  180  191  192  191  191  194  197   197 #>  [9112,]  177  182  181  192  193  192  192  195  195   196 #>  [9113,]  178  182  180  191  192  191  191  194  197   197 #>  [9114,]  178  182  180  191  192  191  191  194  197   197 #>  [9115,]  177  182  181  192  193  192  192  195  195   196 #>  [9116,]  178  182  180  191  192  191  191  194  197   197 #>  [9117,]  177  182  180  191  192  191  191  194  197   197 #>  [9118,]  177  182  180  191  192  191  191  194  196   197 #>  [9119,]  177  182  180  191  192  191  191  194  196   197 #>  [9120,]  178  182  180  191  192  191  191  194  196   197 #>  [9121,]  177  182  180  191  192  191  191  194  197   197 #>  [9122,]  178  182  180  191  192  191  191  194  197   197 #>  [9123,]  177  182  180  191  192  191  191  194  196   197 #>  [9124,]  178  182  180  191  192  191  191  194  196   197 #>  [9125,]  178  182  180  191  192  191  191  194  196   197 #>  [9126,]  177  182  181  192  193  192  192  195  195   196 #>  [9127,]  178  182  180  191  192  191  191  194  197   197 #>  [9128,]  178  182  180  191  192  191  191  194  196   197 #>  [9129,]  177  182  180  191  192  191  191  194  197   197 #>  [9130,]  177  182  180  191  192  191  191  194  196   197 #>  [9131,]  177  182  180  191  192  191  191  194  196   197 #>  [9132,]  177  182  180  191  192  191  191  194  196   197 #>  [9133,]  178  182  181  192  193  192  192  195  195   196 #>  [9134,]  177  182  180  191  192  191  191  194  196   197 #>  [9135,]  177  182  180  191  192  191  191  194  197   197 #>  [9136,]  178  182  180  191  192  191  191  194  196   197 #>  [9137,]  177  182  180  191  192  191  191  194  197   197 #>  [9138,]  178  182  180  191  192  191  191  194  196   197 #>  [9139,]  178  182  180  191  192  191  191  194  196   197 #>  [9140,]  178  182  180  191  192  191  191  194  196   197 #>  [9141,]  178  182  180  191  192  191  191  194  197   197 #>  [9142,]  177  182  180  191  192  191  191  194  196   197 #>  [9143,]  177  182  181  192  193  192  192  195  195   196 #>  [9144,]  177  182  180  191  192  191  191  194  197   197 #>  [9145,]  178  182  180  191  192  191  191  194  196   197 #>  [9146,]  177  182  181  192  193  192  192  195  195   196 #>  [9147,]  177  182  180  191  192  191  191  194  197   197 #>  [9148,]  177  182  180  191  192  191  191  194  196   197 #>  [9149,]  178  182  180  191  192  191  191  194  196   197 #>  [9150,]  178  182  180  191  192  191  191  194  197   197 #>  [9151,]  177  182  181  192  193  192  192  195  195   196 #>  [9152,]  178  182  180  191  192  191  191  194  197   197 #>  [9153,]  178  182  180  191  192  191  191  194  196   197 #>  [9154,]  178  182  180  191  192  191  191  194  196   197 #>  [9155,]  178  182  180  191  192  191  191  194  196   197 #>  [9156,]  177  182  181  192  193  192  192  195  195   196 #>  [9157,]  178  182  180  191  192  191  191  194  196   197 #>  [9158,]  178  182  180  191  192  191  191  194  197   197 #>  [9159,]  178  182  180  191  192  191  191  194  197   197 #>  [9160,]  177  182  180  191  192  191  191  194  196   197 #>  [9161,]  177  182  181  192  193  192  192  195  195   196 #>  [9162,]  177  182  180  191  192  191  191  194  196   197 #>  [9163,]  177  182  180  191  192  191  191  194  196   197 #>  [9164,]  177  182  181  192  193  192  192  195  195   196 #>  [9165,]  177  182  180  191  192  191  191  194  196   197 #>  [9166,]  177  182  181  192  193  192  192  195  195   196 #>  [9167,]  178  182  180  191  192  191  191  194  196   197 #>  [9168,]  177  182  181  192  193  192  192  195  195   196 #>  [9169,]  177  182  180  191  192  191  191  194  196   197 #>  [9170,]  177  182  180  191  192  191  191  194  197   197 #>  [9171,]  178  182  180  191  192  191  191  194  197   197 #>  [9172,]  178  182  180  191  192  191  191  194  196   197 #>  [9173,]  178  182  180  191  192  191  191  194  197   197 #>  [9174,]  178  182  180  191  192  191  191  194  196   197 #>  [9175,]  177  182  180  191  192  191  191  194  197   197 #>  [9176,]  178  182  181  192  193  192  192  195  195   196 #>  [9177,]  178  182  180  191  192  191  191  194  197   197 #>  [9178,]  177  182  180  191  192  191  191  194  196   197 #>  [9179,]  177  182  180  191  192  191  191  194  197   197 #>  [9180,]  178  182  180  191  192  191  191  194  196   197 #>  [9181,]  177  182  180  191  192  191  191  194  197   197 #>  [9182,]  177  182  180  191  192  191  191  194  196   197 #>  [9183,]  178  182  180  191  192  191  191  194  197   197 #>  [9184,]  178  182  180  191  192  191  191  194  197   197 #>  [9185,]  178  182  180  191  192  191  191  194  196   197 #>  [9186,]  178  182  180  191  192  191  191  194  197   197 #>  [9187,]  178  182  180  191  192  191  191  194  197   197 #>  [9188,]  178  182  180  191  192  191  191  194  196   197 #>  [9189,]  177  182  180  191  192  191  191  194  196   197 #>  [9190,]  178  182  180  191  192  191  191  194  197   197 #>  [9191,]  178  182  180  191  192  191  191  194  196   197 #>  [9192,]  177  182  180  191  192  191  191  194  196   197 #>  [9193,]  177  182  180  191  192  191  191  194  197   197 #>  [9194,]  177  182  181  192  193  192  192  195  195   196 #>  [9195,]  177  182  180  191  192  191  191  194  196   197 #>  [9196,]  177  182  180  191  192  191  191  194  197   197 #>  [9197,]  177  182  180  191  192  191  191  194  196   197 #>  [9198,]  178  182  180  191  192  191  191  194  196   197 #>  [9199,]  178  182  180  191  192  191  191  194  197   197 #>  [9200,]  177  182  180  191  192  191  191  194  197   197 #>  [9201,]  179  183  182  193  194  193  193  196  198   198 #>  [9202,]  179  183  182  193  194  193  193  196  198   198 #>  [9203,]  179  183  182  193  194  193  193  196  198   198 #>  [9204,]  179  183  182  193  194  193  193  196  198   198 #>  [9205,]  179  183  182  193  194  193  193  196  198   198 #>  [9206,]  180  184  183  194  195  194  195  197  199   199 #>  [9207,]  179  183  182  193  194  193  193  196  198   198 #>  [9208,]  180  184  183  194  195  194  195  197  199   199 #>  [9209,]  180  184  183  194  195  194  195  197  199   199 #>  [9210,]  179  183  182  193  194  193  193  196  198   198 #>  [9211,]  179  183  182  193  194  193  193  196  198   198 #>  [9212,]  180  184  183  194  195  194  195  197  199   199 #>  [9213,]  179  183  182  193  194  193  193  196  198   198 #>  [9214,]  179  183  182  193  194  193  193  196  198   198 #>  [9215,]  180  184  183  194  195  194  195  197  199   199 #>  [9216,]  179  183  182  193  194  193  193  196  198   198 #>  [9217,]  179  183  182  193  194  193  193  196  198   198 #>  [9218,]  179  183  182  193  194  193  193  196  198   198 #>  [9219,]  179  183  182  193  194  193  193  196  198   198 #>  [9220,]  180  184  183  194  195  194  194  197  199   199 #>  [9221,]  179  183  182  193  194  193  193  196  198   198 #>  [9222,]  179  183  182  193  194  193  193  196  198   198 #>  [9223,]  179  183  182  193  194  193  193  196  198   198 #>  [9224,]  179  183  182  193  194  193  193  196  198   198 #>  [9225,]  179  183  182  193  194  193  193  196  198   198 #>  [9226,]  180  184  183  194  195  194  195  197  199   199 #>  [9227,]  179  183  182  193  194  193  193  196  198   198 #>  [9228,]  179  183  182  193  194  193  193  196  198   198 #>  [9229,]  179  183  182  193  194  193  193  196  198   198 #>  [9230,]  179  183  182  193  194  193  193  196  198   198 #>  [9231,]  179  183  182  193  194  193  193  196  198   198 #>  [9232,]  179  183  182  193  194  193  193  196  198   198 #>  [9233,]  180  184  183  194  195  194  195  197  199   199 #>  [9234,]  179  183  182  193  194  193  193  196  198   198 #>  [9235,]  179  183  182  193  194  193  193  196  198   198 #>  [9236,]  179  183  182  193  194  193  193  196  198   198 #>  [9237,]  179  183  182  193  194  193  193  196  198   198 #>  [9238,]  179  183  182  193  194  193  193  196  198   198 #>  [9239,]  179  183  182  193  194  193  193  196  198   198 #>  [9240,]  179  183  182  193  194  193  193  196  198   198 #>  [9241,]  179  183  182  193  194  193  193  196  198   198 #>  [9242,]  179  183  182  193  194  193  193  196  198   198 #>  [9243,]  180  184  183  194  195  194  195  197  199   199 #>  [9244,]  179  183  182  193  194  193  193  196  198   198 #>  [9245,]  180  184  183  194  195  194  195  197  199   199 #>  [9246,]  180  184  183  194  195  194  195  197  199   199 #>  [9247,]  179  183  182  193  194  193  193  196  198   198 #>  [9248,]  179  183  182  193  194  193  193  196  198   198 #>  [9249,]  179  183  182  193  194  193  193  196  198   198 #>  [9250,]  180  184  183  194  195  194  194  197  199   199 #>  [9251,]  180  184  183  194  195  194  195  197  199   199 #>  [9252,]  179  183  182  193  194  193  193  196  198   198 #>  [9253,]  180  184  183  194  195  194  194  197  199   199 #>  [9254,]  179  183  182  193  194  193  193  196  198   198 #>  [9255,]  179  183  182  193  194  193  193  196  198   198 #>  [9256,]  180  184  183  194  195  194  195  197  199   199 #>  [9257,]  180  184  183  194  195  194  195  197  199   199 #>  [9258,]  180  184  183  194  195  194  194  197  199   199 #>  [9259,]  179  183  182  193  194  193  193  196  198   198 #>  [9260,]  179  183  182  193  194  193  193  196  198   198 #>  [9261,]  180  184  183  194  195  194  195  197  199   199 #>  [9262,]  179  183  182  193  194  193  193  196  198   198 #>  [9263,]  179  183  182  193  194  193  193  196  198   198 #>  [9264,]  180  184  183  194  195  194  195  197  199   199 #>  [9265,]  180  184  183  194  195  194  194  197  199   199 #>  [9266,]  180  184  183  194  195  194  195  197  199   199 #>  [9267,]  179  183  182  193  194  193  193  196  198   198 #>  [9268,]  180  184  183  194  195  194  195  197  199   199 #>  [9269,]  179  183  182  193  194  193  193  196  198   198 #>  [9270,]  179  183  182  193  194  193  193  196  198   198 #>  [9271,]  179  183  182  193  194  193  193  196  198   198 #>  [9272,]  180  184  183  194  195  194  194  197  199   199 #>  [9273,]  179  183  182  193  194  193  193  196  198   198 #>  [9274,]  179  183  182  193  194  193  193  196  198   198 #>  [9275,]  179  183  182  193  194  193  193  196  198   198 #>  [9276,]  180  184  183  194  195  194  195  197  199   199 #>  [9277,]  179  183  182  193  194  193  193  196  198   198 #>  [9278,]  180  184  183  194  195  194  194  197  199   199 #>  [9279,]  179  183  182  193  194  193  193  196  198   198 #>  [9280,]  179  183  182  193  194  193  193  196  198   198 #>  [9281,]  180  184  183  194  195  194  194  197  199   199 #>  [9282,]  179  183  182  193  194  193  193  196  198   198 #>  [9283,]  179  183  182  193  194  193  193  196  198   198 #>  [9284,]  179  183  182  193  194  193  193  196  198   198 #>  [9285,]  179  183  182  193  194  193  193  196  198   198 #>  [9286,]  179  183  182  193  194  193  193  196  198   198 #>  [9287,]  179  183  182  193  194  193  193  196  198   198 #>  [9288,]  179  183  182  193  194  193  193  196  198   198 #>  [9289,]  179  183  182  193  194  193  193  196  198   198 #>  [9290,]  179  183  182  193  194  193  193  196  198   198 #>  [9291,]  179  183  182  193  194  193  193  196  198   198 #>  [9292,]  180  184  183  194  195  194  194  197  199   199 #>  [9293,]  179  183  182  193  194  193  193  196  198   198 #>  [9294,]  180  184  183  194  195  194  195  197  199   199 #>  [9295,]  179  183  182  193  194  193  193  196  198   198 #>  [9296,]  180  184  183  194  195  194  194  197  199   199 #>  [9297,]  180  184  183  194  195  194  194  197  199   199 #>  [9298,]  179  183  182  193  194  193  193  196  198   198 #>  [9299,]  179  183  182  193  194  193  193  196  198   198 #>  [9300,]  179  183  182  193  194  193  193  196  198   198 #>  [9301,]  181  185  184  195  196  195  196  199  201   201 #>  [9302,]  181  185  184  195  196  195  196  198  200   200 #>  [9303,]  181  185  184  195  196  195  196  198  200   200 #>  [9304,]  181  185  184  195  196  195  196  199  201   201 #>  [9305,]  181  185  184  195  196  195  196  198  200   200 #>  [9306,]  181  185  184  195  196  195  196  198  200   200 #>  [9307,]  181  185  184  195  196  195  196  199  201   201 #>  [9308,]  182  186  185  196  197  196  196  198  200   200 #>  [9309,]  181  185  184  195  196  195  196  199  201   201 #>  [9310,]  181  185  184  195  196  195  196  199  201   201 #>  [9311,]  181  185  184  195  196  195  196  198  200   200 #>  [9312,]  181  185  184  195  196  195  196  198  200   200 #>  [9313,]  182  186  185  196  197  196  196  199  201   201 #>  [9314,]  181  185  184  195  196  195  196  199  201   201 #>  [9315,]  182  186  185  196  197  196  196  198  200   200 #>  [9316,]  181  185  184  195  196  195  196  199  201   201 #>  [9317,]  181  185  184  195  196  195  196  198  200   200 #>  [9318,]  181  185  184  195  196  195  196  198  200   200 #>  [9319,]  182  186  185  196  197  196  196  198  200   200 #>  [9320,]  182  186  185  196  197  196  196  199  201   201 #>  [9321,]  181  185  184  195  196  195  196  198  200   200 #>  [9322,]  182  186  185  196  197  196  196  199  201   201 #>  [9323,]  181  185  184  195  196  195  196  198  200   200 #>  [9324,]  181  185  184  195  196  195  196  199  201   201 #>  [9325,]  181  185  184  195  196  195  196  199  201   201 #>  [9326,]  181  185  184  195  196  195  196  198  200   200 #>  [9327,]  182  186  185  196  197  196  196  198  200   200 #>  [9328,]  181  185  184  195  196  195  196  199  201   201 #>  [9329,]  182  186  185  196  197  196  196  198  200   200 #>  [9330,]  181  185  184  195  196  195  196  198  200   200 #>  [9331,]  181  185  184  195  196  195  196  198  200   200 #>  [9332,]  181  185  184  195  196  195  196  198  200   200 #>  [9333,]  181  185  184  195  196  195  196  198  200   200 #>  [9334,]  181  185  184  195  196  195  196  198  200   200 #>  [9335,]  181  185  184  195  196  195  196  198  200   200 #>  [9336,]  182  186  185  196  197  196  196  199  201   201 #>  [9337,]  182  186  185  196  197  196  196  198  200   200 #>  [9338,]  182  186  185  196  197  196  196  198  200   200 #>  [9339,]  181  185  184  195  196  195  196  199  201   201 #>  [9340,]  181  185  184  195  196  195  196  198  200   200 #>  [9341,]  182  186  185  196  197  196  196  198  200   200 #>  [9342,]  181  185  184  195  196  195  196  198  200   200 #>  [9343,]  182  186  185  196  197  196  196  198  200   200 #>  [9344,]  181  185  184  195  196  195  196  198  200   200 #>  [9345,]  181  185  184  195  196  195  196  199  201   201 #>  [9346,]  182  186  185  196  197  196  196  198  200   200 #>  [9347,]  181  185  184  195  196  195  196  198  200   200 #>  [9348,]  181  185  184  195  196  195  196  198  200   200 #>  [9349,]  181  185  184  195  196  195  196  198  200   200 #>  [9350,]  182  186  185  196  197  196  196  199  201   201 #>  [9351,]  182  186  185  196  197  196  196  198  200   200 #>  [9352,]  181  185  184  195  196  195  196  199  201   201 #>  [9353,]  182  186  185  196  197  196  196  199  201   201 #>  [9354,]  181  185  184  195  196  195  196  199  201   201 #>  [9355,]  182  186  185  196  197  196  196  199  201   201 #>  [9356,]  181  185  184  195  196  195  196  198  200   200 #>  [9357,]  181  185  184  195  196  195  196  199  201   201 #>  [9358,]  182  186  185  196  197  196  196  199  201   201 #>  [9359,]  182  186  185  196  197  196  196  199  201   201 #>  [9360,]  182  186  185  196  197  196  196  198  200   200 #>  [9361,]  181  185  184  195  196  195  196  198  200   200 #>  [9362,]  181  185  184  195  196  195  196  198  200   200 #>  [9363,]  181  185  184  195  196  195  196  198  200   200 #>  [9364,]  182  186  185  196  197  196  196  198  200   200 #>  [9365,]  181  185  184  195  196  195  196  198  200   200 #>  [9366,]  182  186  185  196  197  196  196  198  200   200 #>  [9367,]  181  185  184  195  196  195  196  199  201   201 #>  [9368,]  181  185  184  195  196  195  196  198  200   200 #>  [9369,]  182  186  185  196  197  196  196  198  200   200 #>  [9370,]  181  185  184  195  196  195  196  198  200   200 #>  [9371,]  182  186  185  196  197  196  196  198  200   200 #>  [9372,]  181  185  184  195  196  195  196  199  201   201 #>  [9373,]  181  185  184  195  196  195  196  199  201   201 #>  [9374,]  181  185  184  195  196  195  196  198  200   200 #>  [9375,]  181  185  184  195  196  195  196  198  200   200 #>  [9376,]  181  185  184  195  196  195  196  199  201   201 #>  [9377,]  182  186  185  196  197  196  196  198  200   200 #>  [9378,]  181  185  184  195  196  195  196  198  200   200 #>  [9379,]  181  185  184  195  196  195  196  198  200   200 #>  [9380,]  182  186  185  196  197  196  196  198  200   200 #>  [9381,]  182  186  185  196  197  196  196  198  200   200 #>  [9382,]  181  185  184  195  196  195  196  198  200   200 #>  [9383,]  182  186  185  196  197  196  196  198  200   200 #>  [9384,]  182  186  185  196  197  196  196  198  200   200 #>  [9385,]  182  186  185  196  197  196  196  199  201   201 #>  [9386,]  181  185  184  195  196  195  196  199  201   201 #>  [9387,]  182  186  185  196  197  196  196  199  201   201 #>  [9388,]  181  185  184  195  196  195  196  198  200   200 #>  [9389,]  181  185  184  195  196  195  196  198  200   200 #>  [9390,]  182  186  185  196  197  196  196  199  201   201 #>  [9391,]  181  185  184  195  196  195  196  199  201   201 #>  [9392,]  181  185  184  195  196  195  196  198  200   200 #>  [9393,]  181  185  184  195  196  195  196  198  200   200 #>  [9394,]  181  185  184  195  196  195  196  198  200   200 #>  [9395,]  182  186  185  196  197  196  196  198  200   200 #>  [9396,]  182  186  185  196  197  196  196  198  200   200 #>  [9397,]  182  186  185  196  197  196  196  198  200   200 #>  [9398,]  181  185  184  195  196  195  196  198  200   200 #>  [9399,]  181  185  184  195  196  195  196  198  200   200 #>  [9400,]  182  186  185  196  197  196  196  198  200   200 #>  [9401,]  183  187  186  197  198  197  197  200  202   202 #>  [9402,]  184  188  187  198  199  198  198  201  203   202 #>  [9403,]  183  187  186  197  198  197  197  200  202   202 #>  [9404,]  183  187  186  197  198  197  197  200  202   202 #>  [9405,]  183  187  186  197  198  197  197  200  202   202 #>  [9406,]  183  187  186  197  198  197  197  200  202   202 #>  [9407,]  183  187  186  197  198  197  197  200  202   202 #>  [9408,]  183  187  186  197  198  197  197  200  202   202 #>  [9409,]  183  187  186  197  198  197  197  200  202   202 #>  [9410,]  184  188  187  198  199  198  198  201  203   202 #>  [9411,]  183  187  186  197  198  197  197  200  202   202 #>  [9412,]  184  188  187  198  199  198  198  201  203   202 #>  [9413,]  183  187  186  197  198  197  197  200  202   202 #>  [9414,]  183  187  186  197  198  197  197  200  202   202 #>  [9415,]  183  187  186  197  198  197  197  200  202   202 #>  [9416,]  183  187  186  197  198  197  197  200  202   202 #>  [9417,]  183  187  186  197  198  197  197  200  202   202 #>  [9418,]  183  187  186  197  198  197  197  200  202   202 #>  [9419,]  183  187  186  197  198  197  197  200  202   202 #>  [9420,]  183  187  186  197  198  197  197  200  202   202 #>  [9421,]  184  188  187  198  199  198  198  201  203   202 #>  [9422,]  183  187  186  197  198  197  197  200  202   202 #>  [9423,]  183  187  186  197  198  197  197  200  202   202 #>  [9424,]  183  187  186  197  198  197  197  200  202   202 #>  [9425,]  183  187  186  197  198  197  197  200  202   202 #>  [9426,]  183  187  186  197  198  197  197  200  202   202 #>  [9427,]  183  187  186  197  198  197  197  200  202   202 #>  [9428,]  183  187  186  197  198  197  197  200  202   202 #>  [9429,]  183  187  186  197  198  197  197  200  202   202 #>  [9430,]  183  187  186  197  198  197  197  200  202   202 #>  [9431,]  183  187  186  197  198  197  197  200  202   202 #>  [9432,]  183  187  186  197  198  197  197  200  202   202 #>  [9433,]  183  187  186  197  198  197  197  200  202   202 #>  [9434,]  183  187  186  197  198  197  197  200  202   202 #>  [9435,]  183  187  186  197  198  197  197  200  202   202 #>  [9436,]  183  187  186  197  198  197  197  200  202   202 #>  [9437,]  183  187  186  197  198  197  197  200  202   202 #>  [9438,]  183  187  186  197  198  197  197  200  202   202 #>  [9439,]  183  187  186  197  198  197  197  200  202   202 #>  [9440,]  183  187  186  197  198  197  197  200  202   202 #>  [9441,]  183  187  186  197  198  197  197  200  202   202 #>  [9442,]  183  187  186  197  198  197  197  200  202   202 #>  [9443,]  183  187  186  197  198  197  197  200  202   202 #>  [9444,]  183  187  186  197  198  197  197  200  202   202 #>  [9445,]  183  187  186  197  198  197  197  200  202   202 #>  [9446,]  183  187  186  197  198  197  197  200  202   202 #>  [9447,]  183  187  186  197  198  197  197  200  202   202 #>  [9448,]  183  187  186  197  198  197  197  200  202   202 #>  [9449,]  183  187  186  197  198  197  197  200  202   202 #>  [9450,]  183  187  186  197  198  197  197  200  202   202 #>  [9451,]  183  187  186  197  198  197  197  200  202   202 #>  [9452,]  183  187  186  197  198  197  197  200  202   202 #>  [9453,]  183  187  186  197  198  197  197  200  202   202 #>  [9454,]  183  187  186  197  198  197  197  200  202   202 #>  [9455,]  183  187  186  197  198  197  197  200  202   202 #>  [9456,]  183  187  186  197  198  197  197  200  202   202 #>  [9457,]  183  187  186  197  198  197  197  200  202   202 #>  [9458,]  183  187  186  197  198  197  197  200  202   202 #>  [9459,]  183  187  186  197  198  197  197  200  202   202 #>  [9460,]  183  187  186  197  198  197  197  200  202   202 #>  [9461,]  183  187  186  197  198  197  197  200  202   202 #>  [9462,]  183  187  186  197  198  197  197  200  202   202 #>  [9463,]  183  187  186  197  198  197  197  200  202   202 #>  [9464,]  183  187  186  197  198  197  197  200  202   202 #>  [9465,]  183  187  186  197  198  197  197  200  202   202 #>  [9466,]  183  187  186  197  198  197  197  200  202   202 #>  [9467,]  183  187  186  197  198  197  197  200  202   202 #>  [9468,]  183  187  186  197  198  197  197  200  202   202 #>  [9469,]  183  187  186  197  198  197  197  200  202   202 #>  [9470,]  183  187  186  197  198  197  197  200  202   202 #>  [9471,]  183  187  186  197  198  197  197  200  202   202 #>  [9472,]  183  187  186  197  198  197  197  200  202   202 #>  [9473,]  183  187  186  197  198  197  197  200  202   202 #>  [9474,]  183  187  186  197  198  197  197  200  202   202 #>  [9475,]  183  187  186  197  198  197  197  200  202   202 #>  [9476,]  183  187  186  197  198  197  197  200  202   202 #>  [9477,]  183  187  186  197  198  197  197  200  202   202 #>  [9478,]  183  187  186  197  198  197  197  200  202   202 #>  [9479,]  183  187  186  197  198  197  197  200  202   202 #>  [9480,]  183  187  186  197  198  197  197  200  202   202 #>  [9481,]  183  187  186  197  198  197  197  200  202   202 #>  [9482,]  183  187  186  197  198  197  197  200  202   202 #>  [9483,]  183  187  186  197  198  197  197  200  202   202 #>  [9484,]  183  187  186  197  198  197  197  200  202   202 #>  [9485,]  183  187  186  197  198  197  197  200  202   202 #>  [9486,]  184  188  187  198  199  198  198  201  203   202 #>  [9487,]  183  187  186  197  198  197  197  200  202   202 #>  [9488,]  183  187  186  197  198  197  197  200  202   202 #>  [9489,]  183  187  186  197  198  197  197  200  202   202 #>  [9490,]  183  187  186  197  198  197  197  200  202   202 #>  [9491,]  183  187  186  197  198  197  197  200  202   202 #>  [9492,]  183  187  186  197  198  197  197  200  202   202 #>  [9493,]  183  187  186  197  198  197  197  200  202   202 #>  [9494,]  183  187  186  197  198  197  197  200  202   202 #>  [9495,]  183  187  186  197  198  197  197  200  202   202 #>  [9496,]  183  187  186  197  198  197  197  200  202   202 #>  [9497,]  183  187  186  197  198  197  197  200  202   202 #>  [9498,]  183  187  186  197  198  197  197  200  202   202 #>  [9499,]  183  187  186  197  198  197  197  200  202   202 #>  [9500,]  183  187  186  197  198  197  197  200  202   202 #>  [9501,]  186  189  188  199  200  199  199  202  204   203 #>  [9502,]  186  189  188  199  200  199  199  202  204   203 #>  [9503,]  185  189  188  199  200  199  199  202  204   203 #>  [9504,]  185  189  189  200  202  200  200  203  204   203 #>  [9505,]  186  189  188  199  200  199  199  202  204   204 #>  [9506,]  186  189  188  199  200  199  199  202  204   203 #>  [9507,]  185  189  188  199  200  199  199  202  204   203 #>  [9508,]  185  189  188  199  200  199  199  202  204   203 #>  [9509,]  186  189  188  199  200  199  199  202  204   203 #>  [9510,]  186  189  188  199  200  199  199  202  204   203 #>  [9511,]  186  189  188  199  200  199  199  202  204   203 #>  [9512,]  185  189  189  200  201  200  200  203  204   203 #>  [9513,]  186  189  188  199  200  199  199  202  204   203 #>  [9514,]  186  189  189  200  202  200  200  203  204   203 #>  [9515,]  186  189  188  199  200  199  199  202  204   204 #>  [9516,]  186  189  188  199  200  199  199  202  204   203 #>  [9517,]  186  189  188  199  200  199  199  202  204   203 #>  [9518,]  186  189  188  199  200  199  199  202  204   204 #>  [9519,]  186  189  189  200  201  200  200  203  204   203 #>  [9520,]  186  189  188  199  200  199  199  202  204   203 #>  [9521,]  186  189  188  199  200  199  199  202  204   203 #>  [9522,]  186  189  188  199  200  199  199  202  204   203 #>  [9523,]  186  189  188  199  200  199  199  202  204   203 #>  [9524,]  186  189  188  199  200  199  199  202  204   203 #>  [9525,]  185  189  188  199  200  199  199  202  204   203 #>  [9526,]  186  189  188  199  200  199  199  202  204   203 #>  [9527,]  186  189  189  200  201  200  200  203  204   204 #>  [9528,]  186  189  188  199  200  199  199  202  204   203 #>  [9529,]  186  189  188  199  200  199  199  202  204   203 #>  [9530,]  186  189  188  199  200  199  199  202  204   203 #>  [9531,]  185  189  188  199  200  199  199  202  204   203 #>  [9532,]  186  189  188  199  200  199  199  202  204   204 #>  [9533,]  186  189  188  199  200  199  199  202  204   203 #>  [9534,]  186  189  188  199  200  199  199  202  204   203 #>  [9535,]  186  189  188  199  200  199  199  202  204   203 #>  [9536,]  186  189  188  199  200  199  199  202  204   203 #>  [9537,]  186  189  188  199  200  199  199  202  204   203 #>  [9538,]  186  189  189  200  201  200  200  203  204   203 #>  [9539,]  186  189  188  199  200  199  199  202  204   203 #>  [9540,]  186  189  188  199  200  199  199  202  204   203 #>  [9541,]  186  189  189  200  201  200  200  203  204   203 #>  [9542,]  186  189  189  200  201  200  200  203  204   203 #>  [9543,]  186  189  188  199  200  199  199  202  204   203 #>  [9544,]  186  189  188  199  200  199  199  202  204   203 #>  [9545,]  186  189  188  199  200  199  199  202  204   203 #>  [9546,]  186  189  188  199  200  199  199  202  204   203 #>  [9547,]  186  189  188  199  200  199  199  202  204   203 #>  [9548,]  186  189  189  200  201  200  200  203  204   203 #>  [9549,]  186  189  188  199  200  199  199  202  204   203 #>  [9550,]  186  189  188  199  200  199  199  202  204   203 #>  [9551,]  186  189  188  199  200  199  199  202  204   203 #>  [9552,]  185  189  188  199  200  199  199  202  204   203 #>  [9553,]  186  189  188  199  200  199  199  202  204   203 #>  [9554,]  186  189  188  199  200  199  199  202  204   203 #>  [9555,]  186  189  188  199  200  199  199  202  204   203 #>  [9556,]  186  189  188  199  200  199  199  202  204   203 #>  [9557,]  185  189  188  199  200  199  199  202  204   203 #>  [9558,]  186  189  188  199  200  199  199  202  204   203 #>  [9559,]  185  189  188  199  200  199  199  202  204   203 #>  [9560,]  185  189  188  199  200  199  199  202  204   203 #>  [9561,]  186  189  189  200  202  200  200  203  204   203 #>  [9562,]  186  189  188  199  200  199  199  202  204   203 #>  [9563,]  186  189  188  199  200  199  199  202  204   203 #>  [9564,]  186  189  188  199  200  199  199  202  204   203 #>  [9565,]  186  189  188  199  200  199  199  202  204   203 #>  [9566,]  186  189  188  199  200  199  199  202  204   203 #>  [9567,]  186  189  188  199  200  199  199  202  204   203 #>  [9568,]  186  189  188  199  200  199  199  202  204   203 #>  [9569,]  186  189  189  200  201  200  200  203  204   203 #>  [9570,]  186  189  188  199  200  199  199  202  204   203 #>  [9571,]  186  189  188  199  200  199  199  202  204   204 #>  [9572,]  186  189  188  199  200  199  199  202  204   203 #>  [9573,]  186  189  188  199  200  199  199  202  204   203 #>  [9574,]  186  189  189  200  201  200  200  203  204   203 #>  [9575,]  186  189  188  199  200  199  199  202  204   204 #>  [9576,]  186  189  188  199  200  199  199  202  204   203 #>  [9577,]  186  189  188  199  200  199  199  202  204   203 #>  [9578,]  186  189  188  199  200  199  199  202  204   203 #>  [9579,]  186  189  188  199  200  199  199  202  204   203 #>  [9580,]  186  189  188  199  200  199  199  202  204   203 #>  [9581,]  186  189  188  199  200  199  199  202  204   203 #>  [9582,]  186  189  189  200  201  200  200  203  204   203 #>  [9583,]  186  189  188  199  200  199  199  202  204   203 #>  [9584,]  186  189  188  199  200  199  199  202  204   203 #>  [9585,]  186  189  188  199  200  199  199  202  204   203 #>  [9586,]  186  189  188  199  200  199  199  202  204   203 #>  [9587,]  186  189  188  199  200  199  199  202  204   203 #>  [9588,]  186  189  188  199  200  199  199  202  204   203 #>  [9589,]  186  189  188  199  200  199  199  202  204   203 #>  [9590,]  186  189  188  199  200  199  199  202  204   203 #>  [9591,]  186  189  188  199  200  199  199  202  204   204 #>  [9592,]  186  189  189  200  202  200  200  203  204   203 #>  [9593,]  186  189  189  200  202  200  200  203  204   203 #>  [9594,]  186  189  188  199  200  199  199  202  204   203 #>  [9595,]  186  189  188  199  200  199  199  202  204   204 #>  [9596,]  185  189  189  200  202  200  200  203  204   203 #>  [9597,]  185  189  189  200  201  200  200  203  204   203 #>  [9598,]  186  189  188  199  200  199  199  202  204   203 #>  [9599,]  186  189  188  199  200  199  199  202  204   203 #>  [9600,]  186  189  188  199  200  199  199  202  204   204 #>  [9601,]  187  190  190  201  203  201  201  206  207   207 #>  [9602,]  187  190  190  201  203  201  201  206  207   207 #>  [9603,]  187  190  190  201  203  201  201  205  206   206 #>  [9604,]  187  190  190  201  203  201  201  206  207   207 #>  [9605,]  187  190  190  201  203  201  201  206  207   207 #>  [9606,]  187  190  190  201  203  201  201  206  207   207 #>  [9607,]  187  190  190  201  203  201  201  205  206   206 #>  [9608,]  187  190  190  201  203  201  201  205  206   206 #>  [9609,]  187  190  190  201  203  201  201  206  207   207 #>  [9610,]  187  190  190  201  203  201  201  206  207   207 #>  [9611,]  187  190  190  201  203  201  201  206  207   207 #>  [9612,]  187  190  190  201  203  201  201  206  207   207 #>  [9613,]  187  190  190  201  203  201  201  205  206   206 #>  [9614,]  187  190  190  201  203  201  201  206  207   207 #>  [9615,]  187  190  190  201  203  201  201  206  207   207 #>  [9616,]  187  190  190  201  203  201  201  205  206   206 #>  [9617,]  187  190  190  201  203  201  201  205  206   206 #>  [9618,]  187  190  190  201  203  201  201  206  207   207 #>  [9619,]  187  190  190  201  203  201  201  206  207   207 #>  [9620,]  187  190  191  202  204  202  202  204  205   205 #>  [9621,]  187  190  190  201  203  201  201  206  207   207 #>  [9622,]  187  190  191  202  204  202  202  204  205   205 #>  [9623,]  187  190  190  201  203  201  201  206  207   207 #>  [9624,]  187  190  190  201  203  201  201  205  206   206 #>  [9625,]  187  190  190  201  203  201  201  205  206   206 #>  [9626,]  187  190  190  201  203  201  201  206  207   207 #>  [9627,]  187  190  190  201  203  201  201  206  207   207 #>  [9628,]  187  190  190  201  203  201  201  206  207   207 #>  [9629,]  187  190  191  202  204  202  202  204  205   205 #>  [9630,]  187  190  190  201  203  201  201  206  207   207 #>  [9631,]  187  190  190  201  203  201  201  206  207   207 #>  [9632,]  187  190  190  201  203  201  201  206  207   207 #>  [9633,]  187  190  190  201  203  201  201  206  207   207 #>  [9634,]  187  190  190  201  203  201  201  206  207   207 #>  [9635,]  187  190  190  201  203  201  201  206  207   207 #>  [9636,]  187  190  190  201  203  201  201  206  207   207 #>  [9637,]  187  190  190  201  203  201  201  206  207   207 #>  [9638,]  187  190  190  201  203  201  201  206  207   207 #>  [9639,]  187  190  190  201  203  201  201  205  206   206 #>  [9640,]  187  190  190  201  203  201  201  205  206   206 #>  [9641,]  187  190  190  201  203  201  201  206  207   207 #>  [9642,]  187  190  190  201  203  201  201  206  207   207 #>  [9643,]  187  190  190  201  203  201  201  205  206   206 #>  [9644,]  187  190  190  201  203  201  201  205  206   206 #>  [9645,]  187  190  190  201  203  201  201  205  206   206 #>  [9646,]  187  190  190  201  203  201  201  205  206   206 #>  [9647,]  187  190  190  201  203  201  201  205  206   206 #>  [9648,]  187  190  190  201  203  201  201  206  207   207 #>  [9649,]  187  190  190  201  203  201  201  205  206   206 #>  [9650,]  187  190  190  201  203  201  201  205  206   206 #>  [9651,]  187  190  190  201  203  201  201  205  206   206 #>  [9652,]  187  190  190  201  203  201  201  206  207   207 #>  [9653,]  187  190  190  201  203  201  201  205  206   206 #>  [9654,]  187  190  190  201  203  201  201  205  206   206 #>  [9655,]  187  190  190  201  203  201  201  205  206   206 #>  [9656,]  187  190  190  201  203  201  201  205  206   206 #>  [9657,]  187  190  190  201  203  201  201  206  207   207 #>  [9658,]  187  190  191  202  204  202  202  204  205   205 #>  [9659,]  187  190  190  201  203  201  201  205  206   206 #>  [9660,]  187  190  190  201  203  201  201  206  207   207 #>  [9661,]  187  190  190  201  203  201  201  206  207   207 #>  [9662,]  187  190  190  201  203  201  201  206  207   207 #>  [9663,]  187  190  190  201  203  201  201  205  206   206 #>  [9664,]  187  190  191  202  204  202  202  204  205   205 #>  [9665,]  187  190  190  201  203  201  201  205  206   206 #>  [9666,]  187  190  190  201  203  201  201  205  206   206 #>  [9667,]  187  190  190  201  203  201  201  206  207   207 #>  [9668,]  187  190  190  201  203  201  201  206  207   207 #>  [9669,]  187  190  190  201  203  201  201  206  207   207 #>  [9670,]  187  190  190  201  203  201  201  205  206   206 #>  [9671,]  187  190  190  201  203  201  201  206  207   207 #>  [9672,]  187  190  190  201  203  201  201  205  206   206 #>  [9673,]  187  190  190  201  203  201  201  206  207   207 #>  [9674,]  187  190  190  201  203  201  201  206  207   207 #>  [9675,]  187  190  190  201  203  201  201  206  207   207 #>  [9676,]  187  190  190  201  203  201  201  205  206   206 #>  [9677,]  187  190  191  202  204  202  202  204  205   205 #>  [9678,]  187  190  190  201  203  201  201  205  206   206 #>  [9679,]  187  190  190  201  203  201  201  205  206   206 #>  [9680,]  187  190  190  201  203  201  201  206  207   207 #>  [9681,]  187  190  191  202  204  202  202  204  205   205 #>  [9682,]  187  190  190  201  203  201  201  206  207   207 #>  [9683,]  187  190  190  201  203  201  201  205  206   206 #>  [9684,]  187  190  190  201  203  201  201  205  206   206 #>  [9685,]  187  190  190  201  203  201  201  206  207   207 #>  [9686,]  187  190  190  201  203  201  201  205  206   206 #>  [9687,]  187  190  191  202  204  202  202  204  205   205 #>  [9688,]  187  190  190  201  203  201  201  206  207   207 #>  [9689,]  187  190  190  201  203  201  201  205  206   206 #>  [9690,]  187  190  190  201  203  201  201  205  206   206 #>  [9691,]  187  190  190  201  203  201  201  206  207   207 #>  [9692,]  187  190  190  201  203  201  201  206  207   207 #>  [9693,]  187  190  190  201  203  201  201  206  207   207 #>  [9694,]  187  190  190  201  203  201  201  205  206   206 #>  [9695,]  187  190  190  201  203  201  201  206  207   207 #>  [9696,]  187  190  190  201  203  201  201  206  207   207 #>  [9697,]  187  190  190  201  203  201  201  206  207   207 #>  [9698,]  187  190  190  201  203  201  201  205  206   206 #>  [9699,]  187  190  190  201  203  201  201  206  207   207 #>  [9700,]  187  190  191  202  204  202  202  204  205   205 #>  [9701,]  189  192  193  204  206  203  203  207  208   208 #>  [9702,]  189  192  193  204  206  203  203  207  208   208 #>  [9703,]  189  192  193  204  206  203  203  207  208   208 #>  [9704,]  189  192  193  204  206  203  203  207  208   208 #>  [9705,]  189  192  193  204  206  203  203  207  208   208 #>  [9706,]  189  192  193  204  206  203  203  207  208   208 #>  [9707,]  189  192  193  204  206  203  203  207  208   208 #>  [9708,]  189  192  193  204  206  203  203  207  208   208 #>  [9709,]  189  192  193  204  206  203  203  207  208   208 #>  [9710,]  189  192  193  204  206  203  203  207  208   208 #>  [9711,]  189  192  193  204  206  203  203  207  208   208 #>  [9712,]  189  192  193  204  206  203  203  207  208   208 #>  [9713,]  189  192  193  204  206  203  203  207  208   208 #>  [9714,]  189  192  193  204  206  203  203  207  208   208 #>  [9715,]  188  191  192  203  205  205  204  208  209   209 #>  [9716,]  189  192  193  204  206  203  203  207  208   208 #>  [9717,]  188  191  192  203  205  205  204  208  209   209 #>  [9718,]  189  192  193  204  206  203  203  207  208   208 #>  [9719,]  189  192  193  204  206  203  203  207  208   208 #>  [9720,]  189  192  193  204  206  203  203  207  208   208 #>  [9721,]  189  192  193  204  206  203  203  207  208   208 #>  [9722,]  189  192  193  204  206  203  203  207  208   208 #>  [9723,]  189  192  193  204  206  203  203  207  208   208 #>  [9724,]  189  192  193  204  206  203  203  207  208   208 #>  [9725,]  189  192  193  204  206  203  203  207  208   208 #>  [9726,]  189  192  193  204  206  203  203  207  208   208 #>  [9727,]  189  192  193  204  206  203  203  207  208   208 #>  [9728,]  189  192  193  204  206  203  203  207  208   208 #>  [9729,]  189  192  193  204  206  203  203  207  208   208 #>  [9730,]  189  192  193  204  206  203  203  207  208   208 #>  [9731,]  188  191  192  203  205  205  204  208  209   209 #>  [9732,]  189  192  193  204  206  203  203  207  208   208 #>  [9733,]  189  192  193  204  206  203  203  207  208   208 #>  [9734,]  188  191  192  203  205  204  204  208  209   209 #>  [9735,]  189  192  193  204  206  203  203  207  208   208 #>  [9736,]  189  192  193  204  206  203  203  207  208   208 #>  [9737,]  188  191  192  203  205  204  204  208  209   209 #>  [9738,]  189  192  193  204  206  203  203  207  208   208 #>  [9739,]  189  192  193  204  206  203  203  207  208   208 #>  [9740,]  189  192  193  204  206  203  203  207  208   208 #>  [9741,]  189  192  193  204  206  203  203  207  208   208 #>  [9742,]  188  191  192  203  205  204  204  208  209   209 #>  [9743,]  188  191  192  203  205  205  204  208  209   209 #>  [9744,]  188  191  192  203  205  205  204  208  209   209 #>  [9745,]  189  192  193  204  206  203  203  207  208   208 #>  [9746,]  189  192  193  204  206  203  203  207  208   208 #>  [9747,]  189  192  193  204  206  203  203  207  208   208 #>  [9748,]  188  191  192  203  205  205  204  208  209   209 #>  [9749,]  189  192  193  204  206  203  203  207  208   208 #>  [9750,]  189  192  193  204  206  203  203  207  208   208 #>  [9751,]  189  192  193  204  206  203  203  207  208   208 #>  [9752,]  189  192  193  204  206  203  203  207  208   208 #>  [9753,]  189  192  193  204  206  203  203  207  208   208 #>  [9754,]  189  192  193  204  206  203  203  207  208   208 #>  [9755,]  189  192  193  204  206  203  203  207  208   208 #>  [9756,]  189  192  193  204  206  203  203  207  208   208 #>  [9757,]  189  192  193  204  206  203  203  207  208   208 #>  [9758,]  189  192  193  204  206  203  203  207  208   208 #>  [9759,]  189  192  193  204  206  203  203  207  208   208 #>  [9760,]  189  192  193  204  206  203  203  207  208   208 #>  [9761,]  189  192  193  204  206  203  203  207  208   208 #>  [9762,]  189  192  193  204  206  203  203  207  208   208 #>  [9763,]  188  191  192  203  205  205  204  208  209   209 #>  [9764,]  189  192  193  204  206  203  203  207  208   208 #>  [9765,]  189  192  193  204  206  203  203  207  208   208 #>  [9766,]  189  192  193  204  206  203  203  207  208   208 #>  [9767,]  189  192  193  204  206  203  203  207  208   208 #>  [9768,]  189  192  193  204  206  203  203  207  208   208 #>  [9769,]  189  192  193  204  206  203  203  207  208   208 #>  [9770,]  188  191  192  203  205  205  204  208  209   209 #>  [9771,]  189  192  193  204  206  203  203  207  208   208 #>  [9772,]  189  192  193  204  206  203  203  207  208   208 #>  [9773,]  189  192  193  204  206  203  203  207  208   208 #>  [9774,]  189  192  193  204  206  203  203  207  208   208 #>  [9775,]  188  191  192  203  205  205  204  208  209   209 #>  [9776,]  189  192  193  204  206  203  203  207  208   208 #>  [9777,]  189  192  193  204  206  203  203  207  208   208 #>  [9778,]  188  191  192  203  205  205  204  208  209   209 #>  [9779,]  188  191  192  203  205  204  204  208  209   209 #>  [9780,]  189  192  193  204  206  203  203  207  208   208 #>  [9781,]  189  192  193  204  206  203  203  207  208   208 #>  [9782,]  189  192  193  204  206  203  203  207  208   208 #>  [9783,]  189  192  193  204  206  203  203  207  208   208 #>  [9784,]  189  192  193  204  206  203  203  207  208   208 #>  [9785,]  189  192  193  204  206  203  203  207  208   208 #>  [9786,]  189  192  193  204  206  203  203  207  208   208 #>  [9787,]  189  192  193  204  206  203  203  207  208   208 #>  [9788,]  189  192  193  204  206  203  203  207  208   208 #>  [9789,]  189  192  193  204  206  203  203  207  208   208 #>  [9790,]  189  192  193  204  206  203  203  207  208   208 #>  [9791,]  189  192  193  204  206  203  203  207  208   208 #>  [9792,]  189  192  193  204  206  203  203  207  208   208 #>  [9793,]  189  192  193  204  206  203  203  207  208   208 #>  [9794,]  189  192  193  204  206  203  203  207  208   208 #>  [9795,]  188  191  192  203  205  205  204  208  209   209 #>  [9796,]  189  192  193  204  206  203  203  207  208   208 #>  [9797,]  189  192  193  204  206  203  203  207  208   208 #>  [9798,]  189  192  193  204  206  203  203  207  208   208 #>  [9799,]  189  192  193  204  206  203  203  207  208   208 #>  [9800,]  188  191  192  203  205  204  204  208  209   209 #>  [9801,]  191  194  194  205  207  206  205  209  210   210 #>  [9802,]  190  193  196  207  209  207  206  210  211   211 #>  [9803,]  190  193  195  206  208  207  206  210  211   211 #>  [9804,]  191  194  194  205  207  206  205  209  210   210 #>  [9805,]  190  193  196  207  209  207  206  210  211   211 #>  [9806,]  190  193  195  206  208  207  206  210  211   211 #>  [9807,]  191  194  194  205  207  206  205  209  210   210 #>  [9808,]  191  194  194  205  207  206  205  209  210   210 #>  [9809,]  191  194  194  205  207  206  205  209  210   210 #>  [9810,]  191  194  194  205  207  206  205  209  210   210 #>  [9811,]  190  193  195  206  208  207  206  210  211   211 #>  [9812,]  190  193  196  207  209  207  206  210  211   211 #>  [9813,]  191  194  194  205  207  206  205  209  210   210 #>  [9814,]  190  193  195  206  208  207  206  210  211   211 #>  [9815,]  191  194  194  205  207  206  205  209  210   210 #>  [9816,]  191  194  194  205  207  206  205  209  210   210 #>  [9817,]  191  194  194  205  207  206  205  209  210   210 #>  [9818,]  191  194  194  205  207  206  205  209  210   210 #>  [9819,]  190  193  195  206  208  207  206  210  211   211 #>  [9820,]  190  193  196  207  209  207  206  210  211   211 #>  [9821,]  191  194  194  205  207  206  205  209  210   210 #>  [9822,]  190  193  196  207  209  207  206  210  211   211 #>  [9823,]  191  194  194  205  207  206  205  209  210   210 #>  [9824,]  190  193  196  207  209  207  206  210  211   211 #>  [9825,]  191  194  194  205  207  206  205  209  210   210 #>  [9826,]  190  193  195  206  208  207  206  210  211   211 #>  [9827,]  191  194  194  205  207  206  205  209  210   210 #>  [9828,]  191  194  194  205  207  206  205  209  210   210 #>  [9829,]  190  193  196  207  209  207  206  210  211   211 #>  [9830,]  190  193  196  207  209  207  206  210  211   211 #>  [9831,]  190  193  196  207  209  207  206  210  211   211 #>  [9832,]  190  193  196  207  209  207  206  210  211   211 #>  [9833,]  190  193  196  207  209  207  206  210  211   211 #>  [9834,]  190  193  195  206  208  207  206  210  211   211 #>  [9835,]  190  193  195  206  208  207  206  210  211   211 #>  [9836,]  190  193  196  207  209  207  206  210  211   211 #>  [9837,]  191  194  194  205  207  206  205  209  210   210 #>  [9838,]  191  194  194  205  207  206  205  209  210   210 #>  [9839,]  191  194  194  205  207  206  205  209  210   210 #>  [9840,]  190  193  196  207  209  207  206  210  211   211 #>  [9841,]  190  193  196  207  209  207  206  210  211   211 #>  [9842,]  190  193  195  206  208  207  206  210  211   211 #>  [9843,]  191  194  194  205  207  206  205  209  210   210 #>  [9844,]  191  194  194  205  207  206  205  209  210   210 #>  [9845,]  191  194  194  205  207  206  205  209  210   210 #>  [9846,]  191  194  194  205  207  206  205  209  210   210 #>  [9847,]  191  194  194  205  207  206  205  209  210   210 #>  [9848,]  190  193  196  207  209  207  206  210  211   211 #>  [9849,]  190  193  195  206  208  207  206  210  211   211 #>  [9850,]  190  193  196  207  209  207  206  210  211   211 #>  [9851,]  190  193  196  207  209  207  206  210  211   211 #>  [9852,]  190  193  195  206  208  207  206  210  211   211 #>  [9853,]  191  194  194  205  207  206  205  209  210   210 #>  [9854,]  190  193  196  207  209  207  206  210  211   211 #>  [9855,]  190  193  195  206  208  207  206  210  211   211 #>  [9856,]  191  194  194  205  207  206  205  209  210   210 #>  [9857,]  190  193  195  206  208  207  206  210  211   211 #>  [9858,]  190  193  196  207  209  207  206  210  211   211 #>  [9859,]  190  193  195  206  208  207  206  210  211   211 #>  [9860,]  190  193  196  207  209  207  206  210  211   211 #>  [9861,]  191  194  194  205  207  206  205  209  210   210 #>  [9862,]  190  193  195  206  208  207  206  210  211   211 #>  [9863,]  190  193  196  207  209  207  206  210  211   211 #>  [9864,]  191  194  194  205  207  206  205  209  210   210 #>  [9865,]  190  193  195  206  208  207  206  210  211   211 #>  [9866,]  190  193  196  207  209  207  206  210  211   211 #>  [9867,]  190  193  195  206  208  207  206  210  211   211 #>  [9868,]  190  193  195  206  208  207  206  210  211   211 #>  [9869,]  190  193  195  206  208  207  206  210  211   211 #>  [9870,]  191  194  194  205  207  206  205  209  210   210 #>  [9871,]  191  194  194  205  207  206  205  209  210   210 #>  [9872,]  191  194  194  205  207  206  205  209  210   210 #>  [9873,]  191  194  194  205  207  206  205  209  210   210 #>  [9874,]  191  194  194  205  207  206  205  209  210   210 #>  [9875,]  191  194  194  205  207  206  205  209  210   210 #>  [9876,]  191  194  194  205  207  206  205  209  210   210 #>  [9877,]  191  194  194  205  207  206  205  209  210   210 #>  [9878,]  190  193  196  207  209  207  206  210  211   211 #>  [9879,]  191  194  194  205  207  206  205  209  210   210 #>  [9880,]  190  193  196  207  209  207  206  210  211   211 #>  [9881,]  190  193  196  207  209  207  206  210  211   211 #>  [9882,]  191  194  194  205  207  206  205  209  210   210 #>  [9883,]  190  193  196  207  209  207  206  210  211   211 #>  [9884,]  191  194  194  205  207  206  205  209  210   210 #>  [9885,]  190  193  195  206  208  207  206  210  211   211 #>  [9886,]  191  194  194  205  207  206  205  209  210   210 #>  [9887,]  191  194  194  205  207  206  205  209  210   210 #>  [9888,]  191  194  194  205  207  206  205  209  210   210 #>  [9889,]  190  193  195  206  208  207  206  210  211   211 #>  [9890,]  191  194  194  205  207  206  205  209  210   210 #>  [9891,]  190  193  195  206  208  207  206  210  211   211 #>  [9892,]  190  193  196  207  209  207  206  210  211   211 #>  [9893,]  190  193  196  207  209  207  206  210  211   211 #>  [9894,]  191  194  194  205  207  206  205  209  210   210 #>  [9895,]  191  194  194  205  207  206  205  209  210   210 #>  [9896,]  191  194  194  205  207  206  205  209  210   210 #>  [9897,]  190  193  195  206  208  207  206  210  211   211 #>  [9898,]  190  193  195  206  208  207  206  210  211   211 #>  [9899,]  190  193  196  207  209  207  206  210  211   211 #>  [9900,]  191  194  194  205  207  206  205  209  210   210 #>  [9901,]  193  196  198  209  211  209  208  212  213   213 #>  [9902,]  192  195  197  208  210  208  207  211  212   212 #>  [9903,]  192  195  197  208  210  208  207  211  212   212 #>  [9904,]  193  196  198  209  211  209  208  212  213   213 #>  [9905,]  192  195  197  208  210  208  207  211  212   212 #>  [9906,]  192  195  197  208  210  208  207  211  212   212 #>  [9907,]  193  196  198  209  211  209  208  212  213   213 #>  [9908,]  192  195  197  208  210  208  207  211  212   212 #>  [9909,]  193  196  198  209  211  209  208  212  213   213 #>  [9910,]  193  196  198  209  211  209  208  212  213   213 #>  [9911,]  192  195  197  208  210  208  207  211  212   212 #>  [9912,]  192  195  197  208  210  208  207  211  212   212 #>  [9913,]  193  196  198  209  211  209  208  212  213   213 #>  [9914,]  193  196  198  209  211  209  208  212  213   213 #>  [9915,]  192  195  197  208  210  208  207  211  212   212 #>  [9916,]  193  196  198  209  211  209  208  212  213   213 #>  [9917,]  192  195  197  208  210  208  207  211  212   212 #>  [9918,]  192  195  197  208  210  208  207  211  212   212 #>  [9919,]  192  195  197  208  210  208  207  211  212   212 #>  [9920,]  193  196  198  209  211  209  208  212  213   213 #>  [9921,]  192  195  197  208  210  208  207  211  212   212 #>  [9922,]  193  196  198  209  211  209  208  212  213   213 #>  [9923,]  192  195  197  208  210  208  207  211  212   212 #>  [9924,]  193  196  198  209  211  209  208  212  213   213 #>  [9925,]  193  196  198  209  211  209  208  212  213   213 #>  [9926,]  192  195  197  208  210  208  207  211  212   212 #>  [9927,]  192  195  197  208  210  208  207  211  212   212 #>  [9928,]  193  196  198  209  211  209  208  212  213   213 #>  [9929,]  192  195  197  208  210  208  207  211  212   212 #>  [9930,]  192  195  197  208  210  208  207  211  212   212 #>  [9931,]  192  195  197  208  210  208  207  211  212   212 #>  [9932,]  192  195  197  208  210  208  207  211  212   212 #>  [9933,]  192  195  197  208  210  208  207  211  212   212 #>  [9934,]  192  195  197  208  210  208  207  211  212   212 #>  [9935,]  192  195  197  208  210  208  207  211  212   212 #>  [9936,]  193  196  198  209  211  209  208  212  213   213 #>  [9937,]  192  195  197  208  210  208  207  211  212   212 #>  [9938,]  192  195  197  208  210  208  207  211  212   212 #>  [9939,]  193  196  198  209  211  209  208  212  213   213 #>  [9940,]  192  195  197  208  210  208  207  211  212   212 #>  [9941,]  192  195  197  208  210  208  207  211  212   212 #>  [9942,]  192  195  197  208  210  208  207  211  212   212 #>  [9943,]  192  195  197  208  210  208  207  211  212   212 #>  [9944,]  192  195  197  208  210  208  207  211  212   212 #>  [9945,]  193  196  198  209  211  209  208  212  213   213 #>  [9946,]  192  195  197  208  210  208  207  211  212   212 #>  [9947,]  192  195  197  208  210  208  207  211  212   212 #>  [9948,]  192  195  197  208  210  208  207  211  212   212 #>  [9949,]  193  196  198  209  211  209  208  212  213   213 #>  [9950,]  193  196  198  209  211  209  208  212  213   213 #>  [9951,]  192  195  197  208  210  208  207  211  212   212 #>  [9952,]  193  196  198  209  211  209  208  212  213   213 #>  [9953,]  193  196  198  209  211  209  208  212  213   213 #>  [9954,]  193  196  198  209  211  209  208  212  213   213 #>  [9955,]  193  196  198  209  211  209  208  212  213   213 #>  [9956,]  192  195  197  208  210  208  207  211  212   212 #>  [9957,]  193  196  198  209  211  209  208  212  213   213 #>  [9958,]  193  196  198  209  211  209  208  212  213   213 #>  [9959,]  193  196  198  209  211  209  208  212  213   213 #>  [9960,]  192  195  197  208  210  208  207  211  212   212 #>  [9961,]  192  195  197  208  210  208  207  211  212   212 #>  [9962,]  192  195  197  208  210  208  207  211  212   212 #>  [9963,]  192  195  197  208  210  208  207  211  212   212 #>  [9964,]  192  195  197  208  210  208  207  211  212   212 #>  [9965,]  192  195  197  208  210  208  207  211  212   212 #>  [9966,]  192  195  197  208  210  208  207  211  212   212 #>  [9967,]  193  196  198  209  211  209  208  212  213   213 #>  [9968,]  192  195  197  208  210  208  207  211  212   212 #>  [9969,]  192  195  197  208  210  208  207  211  212   212 #>  [9970,]  192  195  197  208  210  208  207  211  212   212 #>  [9971,]  192  195  197  208  210  208  207  211  212   212 #>  [9972,]  193  196  198  209  211  209  208  212  213   213 #>  [9973,]  193  196  198  209  211  209  208  212  213   213 #>  [9974,]  192  195  197  208  210  208  207  211  212   212 #>  [9975,]  192  195  197  208  210  208  207  211  212   212 #>  [9976,]  193  196  198  209  211  209  208  212  213   213 #>  [9977,]  192  195  197  208  210  208  207  211  212   212 #>  [9978,]  192  195  197  208  210  208  207  211  212   212 #>  [9979,]  192  195  197  208  210  208  207  211  212   212 #>  [9980,]  192  195  197  208  210  208  207  211  212   212 #>  [9981,]  192  195  197  208  210  208  207  211  212   212 #>  [9982,]  192  195  197  208  210  208  207  211  212   212 #>  [9983,]  192  195  197  208  210  208  207  211  212   212 #>  [9984,]  192  195  197  208  210  208  207  211  212   212 #>  [9985,]  193  196  198  209  211  209  208  212  213   213 #>  [9986,]  193  196  198  209  211  209  208  212  213   213 #>  [9987,]  193  196  198  209  211  209  208  212  213   213 #>  [9988,]  193  196  198  209  211  209  208  212  213   213 #>  [9989,]  192  195  197  208  210  208  207  211  212   212 #>  [9990,]  193  196  198  209  211  209  208  212  213   213 #>  [9991,]  193  196  198  209  211  209  208  212  213   213 #>  [9992,]  192  195  197  208  210  208  207  211  212   212 #>  [9993,]  192  195  197  208  210  208  207  211  212   212 #>  [9994,]  192  195  197  208  210  208  207  211  212   212 #>  [9995,]  192  195  197  208  210  208  207  211  212   212 #>  [9996,]  192  195  197  208  210  208  207  211  212   212 #>  [9997,]  192  195  197  208  210  208  207  211  212   212 #>  [9998,]  192  195  197  208  210  208  207  211  212   212 #>  [9999,]  192  195  197  208  210  208  207  211  212   212 #>  [ reached getOption(\"max.print\") -- omitted 10001 rows ] computeForestLeafIndices(bart_model, X, \"mean\", 0) #>          [,1] #>     [1,]    0 #>     [2,]    0 #>     [3,]    0 #>     [4,]    0 #>     [5,]    0 #>     [6,]    0 #>     [7,]    0 #>     [8,]    0 #>     [9,]    0 #>    [10,]    0 #>    [11,]    0 #>    [12,]    0 #>    [13,]    0 #>    [14,]    0 #>    [15,]    0 #>    [16,]    0 #>    [17,]    0 #>    [18,]    0 #>    [19,]    0 #>    [20,]    1 #>    [21,]    0 #>    [22,]    1 #>    [23,]    0 #>    [24,]    0 #>    [25,]    0 #>    [26,]    0 #>    [27,]    0 #>    [28,]    0 #>    [29,]    1 #>    [30,]    0 #>    [31,]    0 #>    [32,]    0 #>    [33,]    0 #>    [34,]    0 #>    [35,]    0 #>    [36,]    0 #>    [37,]    0 #>    [38,]    0 #>    [39,]    0 #>    [40,]    0 #>    [41,]    0 #>    [42,]    0 #>    [43,]    0 #>    [44,]    0 #>    [45,]    0 #>    [46,]    0 #>    [47,]    0 #>    [48,]    0 #>    [49,]    0 #>    [50,]    0 #>    [51,]    0 #>    [52,]    0 #>    [53,]    0 #>    [54,]    0 #>    [55,]    0 #>    [56,]    0 #>    [57,]    0 #>    [58,]    1 #>    [59,]    0 #>    [60,]    0 #>    [61,]    0 #>    [62,]    0 #>    [63,]    0 #>    [64,]    1 #>    [65,]    0 #>    [66,]    0 #>    [67,]    0 #>    [68,]    0 #>    [69,]    0 #>    [70,]    0 #>    [71,]    0 #>    [72,]    0 #>    [73,]    0 #>    [74,]    0 #>    [75,]    0 #>    [76,]    0 #>    [77,]    1 #>    [78,]    0 #>    [79,]    0 #>    [80,]    0 #>    [81,]    0 #>    [82,]    0 #>    [83,]    0 #>    [84,]    0 #>    [85,]    0 #>    [86,]    0 #>    [87,]    1 #>    [88,]    0 #>    [89,]    0 #>    [90,]    0 #>    [91,]    0 #>    [92,]    0 #>    [93,]    0 #>    [94,]    0 #>    [95,]    0 #>    [96,]    0 #>    [97,]    0 #>    [98,]    0 #>    [99,]    0 #>   [100,]    0 #>   [101,]    2 #>   [102,]    2 #>   [103,]    2 #>   [104,]    2 #>   [105,]    2 #>   [106,]    2 #>   [107,]    2 #>   [108,]    2 #>   [109,]    2 #>   [110,]    2 #>   [111,]    2 #>   [112,]    2 #>   [113,]    2 #>   [114,]    2 #>   [115,]    2 #>   [116,]    2 #>   [117,]    2 #>   [118,]    2 #>   [119,]    2 #>   [120,]    2 #>   [121,]    2 #>   [122,]    2 #>   [123,]    2 #>   [124,]    2 #>   [125,]    2 #>   [126,]    2 #>   [127,]    2 #>   [128,]    2 #>   [129,]    2 #>   [130,]    2 #>   [131,]    2 #>   [132,]    2 #>   [133,]    2 #>   [134,]    2 #>   [135,]    2 #>   [136,]    2 #>   [137,]    2 #>   [138,]    2 #>   [139,]    2 #>   [140,]    2 #>   [141,]    2 #>   [142,]    2 #>   [143,]    2 #>   [144,]    2 #>   [145,]    2 #>   [146,]    2 #>   [147,]    2 #>   [148,]    2 #>   [149,]    2 #>   [150,]    2 #>   [151,]    2 #>   [152,]    2 #>   [153,]    2 #>   [154,]    2 #>   [155,]    2 #>   [156,]    2 #>   [157,]    2 #>   [158,]    2 #>   [159,]    2 #>   [160,]    2 #>   [161,]    2 #>   [162,]    2 #>   [163,]    2 #>   [164,]    2 #>   [165,]    2 #>   [166,]    2 #>   [167,]    2 #>   [168,]    2 #>   [169,]    2 #>   [170,]    2 #>   [171,]    2 #>   [172,]    2 #>   [173,]    2 #>   [174,]    2 #>   [175,]    2 #>   [176,]    2 #>   [177,]    2 #>   [178,]    2 #>   [179,]    2 #>   [180,]    2 #>   [181,]    2 #>   [182,]    2 #>   [183,]    2 #>   [184,]    2 #>   [185,]    2 #>   [186,]    2 #>   [187,]    2 #>   [188,]    2 #>   [189,]    2 #>   [190,]    2 #>   [191,]    2 #>   [192,]    2 #>   [193,]    2 #>   [194,]    2 #>   [195,]    2 #>   [196,]    2 #>   [197,]    2 #>   [198,]    2 #>   [199,]    2 #>   [200,]    2 #>   [201,]    4 #>   [202,]    4 #>   [203,]    4 #>   [204,]    3 #>   [205,]    4 #>   [206,]    4 #>   [207,]    4 #>   [208,]    3 #>   [209,]    3 #>   [210,]    3 #>   [211,]    4 #>   [212,]    4 #>   [213,]    4 #>   [214,]    4 #>   [215,]    4 #>   [216,]    4 #>   [217,]    4 #>   [218,]    4 #>   [219,]    4 #>   [220,]    4 #>   [221,]    4 #>   [222,]    4 #>   [223,]    4 #>   [224,]    4 #>   [225,]    4 #>   [226,]    4 #>   [227,]    4 #>   [228,]    4 #>   [229,]    4 #>   [230,]    4 #>   [231,]    4 #>   [232,]    4 #>   [233,]    4 #>   [234,]    4 #>   [235,]    4 #>   [236,]    4 #>   [237,]    4 #>   [238,]    4 #>   [239,]    4 #>   [240,]    4 #>   [241,]    4 #>   [242,]    4 #>   [243,]    3 #>   [244,]    4 #>   [245,]    4 #>   [246,]    4 #>   [247,]    4 #>   [248,]    4 #>   [249,]    4 #>   [250,]    4 #>   [251,]    3 #>   [252,]    4 #>   [253,]    4 #>   [254,]    4 #>   [255,]    4 #>   [256,]    4 #>   [257,]    4 #>   [258,]    4 #>   [259,]    4 #>   [260,]    3 #>   [261,]    4 #>   [262,]    4 #>   [263,]    4 #>   [264,]    4 #>   [265,]    4 #>   [266,]    4 #>   [267,]    3 #>   [268,]    4 #>   [269,]    4 #>   [270,]    4 #>   [271,]    4 #>   [272,]    4 #>   [273,]    4 #>   [274,]    4 #>   [275,]    4 #>   [276,]    4 #>   [277,]    4 #>   [278,]    4 #>   [279,]    4 #>   [280,]    4 #>   [281,]    4 #>   [282,]    4 #>   [283,]    4 #>   [284,]    4 #>   [285,]    3 #>   [286,]    4 #>   [287,]    4 #>   [288,]    4 #>   [289,]    4 #>   [290,]    4 #>   [291,]    3 #>   [292,]    4 #>   [293,]    4 #>   [294,]    4 #>   [295,]    3 #>   [296,]    4 #>   [297,]    4 #>   [298,]    4 #>   [299,]    4 #>   [300,]    4 #>   [301,]    5 #>   [302,]    5 #>   [303,]    5 #>   [304,]    6 #>   [305,]    5 #>   [306,]    5 #>   [307,]    6 #>   [308,]    5 #>   [309,]    5 #>   [310,]    6 #>   [311,]    5 #>   [312,]    5 #>   [313,]    5 #>   [314,]    5 #>   [315,]    5 #>   [316,]    6 #>   [317,]    5 #>   [318,]    5 #>   [319,]    5 #>   [320,]    6 #>   [321,]    5 #>   [322,]    5 #>   [323,]    5 #>   [324,]    6 #>   [325,]    6 #>   [326,]    5 #>   [327,]    5 #>   [328,]    6 #>   [329,]    5 #>   [330,]    5 #>   [331,]    5 #>   [332,]    5 #>   [333,]    5 #>   [334,]    5 #>   [335,]    5 #>   [336,]    5 #>   [337,]    5 #>   [338,]    5 #>   [339,]    6 #>   [340,]    5 #>   [341,]    5 #>   [342,]    5 #>   [343,]    5 #>   [344,]    5 #>   [345,]    5 #>   [346,]    5 #>   [347,]    5 #>   [348,]    5 #>   [349,]    5 #>   [350,]    6 #>   [351,]    5 #>   [352,]    6 #>   [353,]    5 #>   [354,]    6 #>   [355,]    5 #>   [356,]    5 #>   [357,]    5 #>   [358,]    5 #>   [359,]    5 #>   [360,]    5 #>   [361,]    5 #>   [362,]    5 #>   [363,]    5 #>   [364,]    5 #>   [365,]    5 #>   [366,]    5 #>   [367,]    5 #>   [368,]    5 #>   [369,]    5 #>   [370,]    5 #>   [371,]    5 #>   [372,]    5 #>   [373,]    6 #>   [374,]    5 #>   [375,]    5 #>   [376,]    6 #>   [377,]    5 #>   [378,]    5 #>   [379,]    5 #>   [380,]    5 #>   [381,]    5 #>   [382,]    5 #>   [383,]    5 #>   [384,]    5 #>   [385,]    5 #>   [386,]    6 #>   [387,]    5 #>   [388,]    5 #>   [389,]    5 #>   [390,]    5 #>   [391,]    6 #>   [392,]    5 #>   [393,]    5 #>   [394,]    5 #>   [395,]    5 #>   [396,]    5 #>   [397,]    5 #>   [398,]    5 #>   [399,]    5 #>   [400,]    5 #>   [401,]    8 #>   [402,]    8 #>   [403,]    7 #>   [404,]    8 #>   [405,]    7 #>   [406,]    7 #>   [407,]    8 #>   [408,]    8 #>   [409,]    8 #>   [410,]    8 #>   [411,]    7 #>   [412,]    7 #>   [413,]    8 #>   [414,]    7 #>   [415,]    8 #>   [416,]    8 #>   [417,]    8 #>   [418,]    8 #>   [419,]    7 #>   [420,]    7 #>   [421,]    8 #>   [422,]    7 #>   [423,]    8 #>   [424,]    7 #>   [425,]    8 #>   [426,]    7 #>   [427,]    8 #>   [428,]    8 #>   [429,]    7 #>   [430,]    7 #>   [431,]    8 #>   [432,]    7 #>   [433,]    7 #>   [434,]    7 #>   [435,]    7 #>   [436,]    7 #>   [437,]    8 #>   [438,]    8 #>   [439,]    8 #>   [440,]    7 #>   [441,]    7 #>   [442,]    7 #>   [443,]    8 #>   [444,]    8 #>   [445,]    8 #>   [446,]    8 #>   [447,]    8 #>   [448,]    7 #>   [449,]    8 #>   [450,]    8 #>   [451,]    7 #>   [452,]    7 #>   [453,]    8 #>   [454,]    7 #>   [455,]    7 #>   [456,]    8 #>   [457,]    7 #>   [458,]    7 #>   [459,]    8 #>   [460,]    7 #>   [461,]    8 #>   [462,]    7 #>   [463,]    7 #>   [464,]    8 #>   [465,]    8 #>   [466,]    7 #>   [467,]    7 #>   [468,]    7 #>   [469,]    7 #>   [470,]    8 #>   [471,]    8 #>   [472,]    8 #>   [473,]    8 #>   [474,]    8 #>   [475,]    8 #>   [476,]    8 #>   [477,]    8 #>   [478,]    7 #>   [479,]    8 #>   [480,]    7 #>   [481,]    7 #>   [482,]    8 #>   [483,]    7 #>   [484,]    8 #>   [485,]    8 #>   [486,]    8 #>   [487,]    8 #>   [488,]    8 #>   [489,]    7 #>   [490,]    8 #>   [491,]    7 #>   [492,]    8 #>   [493,]    7 #>   [494,]    8 #>   [495,]    8 #>   [496,]    8 #>   [497,]    7 #>   [498,]    7 #>   [499,]    7 #>   [500,]    8 #>   [501,]   10 #>   [502,]   10 #>   [503,]    9 #>   [504,]   10 #>   [505,]   10 #>   [506,]    9 #>   [507,]   10 #>   [508,]   10 #>   [509,]   10 #>   [510,]   10 #>   [511,]    9 #>   [512,]    9 #>   [513,]   10 #>   [514,]    9 #>   [515,]   10 #>   [516,]   10 #>   [517,]   10 #>   [518,]   10 #>   [519,]    9 #>   [520,]    9 #>   [521,]   10 #>   [522,]    9 #>   [523,]   10 #>   [524,]    9 #>   [525,]   10 #>   [526,]    9 #>   [527,]   10 #>   [528,]   10 #>   [529,]    9 #>   [530,]    9 #>   [531,]   10 #>   [532,]    9 #>   [533,]   10 #>   [534,]    9 #>   [535,]   10 #>   [536,]    9 #>   [537,]   10 #>   [538,]   10 #>   [539,]   10 #>   [540,]    9 #>   [541,]    9 #>   [542,]    9 #>   [543,]   10 #>   [544,]   10 #>   [545,]   10 #>   [546,]   10 #>   [547,]   10 #>   [548,]    9 #>   [549,]   10 #>   [550,]   10 #>   [551,]    9 #>   [552,]   10 #>   [553,]   10 #>   [554,]    9 #>   [555,]    9 #>   [556,]   10 #>   [557,]   10 #>   [558,]   10 #>   [559,]   10 #>   [560,]    9 #>   [561,]   10 #>   [562,]    9 #>   [563,]    9 #>   [564,]   10 #>   [565,]   10 #>   [566,]    9 #>   [567,]    9 #>   [568,]    9 #>   [569,]    9 #>   [570,]   10 #>   [571,]   10 #>   [572,]   10 #>   [573,]   10 #>   [574,]   10 #>   [575,]   10 #>   [576,]   10 #>   [577,]   10 #>   [578,]    9 #>   [579,]   10 #>   [580,]    9 #>   [581,]    9 #>   [582,]   10 #>   [583,]    9 #>   [584,]   10 #>   [585,]   10 #>   [586,]   10 #>   [587,]   10 #>   [588,]   10 #>   [589,]    9 #>   [590,]   10 #>   [591,]    9 #>   [592,]   10 #>   [593,]    9 #>   [594,]   10 #>   [595,]   10 #>   [596,]   10 #>   [597,]   10 #>   [598,]    9 #>   [599,]    9 #>   [600,]   10 #>   [601,]   12 #>   [602,]   11 #>   [603,]   11 #>   [604,]   11 #>   [605,]   11 #>   [606,]   11 #>   [607,]   11 #>   [608,]   11 #>   [609,]   11 #>   [610,]   11 #>   [611,]   11 #>   [612,]   11 #>   [613,]   11 #>   [614,]   12 #>   [615,]   12 #>   [616,]   12 #>   [617,]   11 #>   [618,]   11 #>   [619,]   11 #>   [620,]   11 #>   [621,]   11 #>   [622,]   11 #>   [623,]   11 #>   [624,]   11 #>   [625,]   11 #>   [626,]   11 #>   [627,]   11 #>   [628,]   11 #>   [629,]   11 #>   [630,]   11 #>   [631,]   11 #>   [632,]   11 #>   [633,]   11 #>   [634,]   11 #>   [635,]   11 #>   [636,]   11 #>   [637,]   11 #>   [638,]   11 #>   [639,]   11 #>   [640,]   11 #>   [641,]   12 #>   [642,]   11 #>   [643,]   11 #>   [644,]   12 #>   [645,]   11 #>   [646,]   11 #>   [647,]   11 #>   [648,]   11 #>   [649,]   11 #>   [650,]   12 #>   [651,]   11 #>   [652,]   11 #>   [653,]   11 #>   [654,]   11 #>   [655,]   11 #>   [656,]   11 #>   [657,]   11 #>   [658,]   11 #>   [659,]   12 #>   [660,]   11 #>   [661,]   11 #>   [662,]   11 #>   [663,]   11 #>   [664,]   11 #>   [665,]   11 #>   [666,]   11 #>   [667,]   11 #>   [668,]   11 #>   [669,]   11 #>   [670,]   12 #>   [671,]   11 #>   [672,]   11 #>   [673,]   12 #>   [674,]   11 #>   [675,]   11 #>   [676,]   11 #>   [677,]   11 #>   [678,]   11 #>   [679,]   11 #>   [680,]   11 #>   [681,]   11 #>   [682,]   11 #>   [683,]   11 #>   [684,]   11 #>   [685,]   11 #>   [686,]   11 #>   [687,]   11 #>   [688,]   11 #>   [689,]   11 #>   [690,]   11 #>   [691,]   11 #>   [692,]   11 #>   [693,]   11 #>   [694,]   11 #>   [695,]   11 #>   [696,]   12 #>   [697,]   11 #>   [698,]   11 #>   [699,]   12 #>   [700,]   11 #>   [701,]   14 #>   [702,]   14 #>   [703,]   13 #>   [704,]   13 #>   [705,]   13 #>   [706,]   14 #>   [707,]   14 #>   [708,]   13 #>   [709,]   13 #>   [710,]   13 #>   [711,]   14 #>   [712,]   14 #>   [713,]   14 #>   [714,]   14 #>   [715,]   14 #>   [716,]   14 #>   [717,]   14 #>   [718,]   13 #>   [719,]   14 #>   [720,]   13 #>   [721,]   14 #>   [722,]   14 #>   [723,]   14 #>   [724,]   13 #>   [725,]   14 #>   [726,]   14 #>   [727,]   14 #>   [728,]   14 #>   [729,]   14 #>   [730,]   13 #>   [731,]   13 #>   [732,]   13 #>   [733,]   14 #>   [734,]   14 #>   [735,]   14 #>   [736,]   14 #>   [737,]   14 #>   [738,]   14 #>   [739,]   13 #>   [740,]   14 #>   [741,]   14 #>   [742,]   14 #>   [743,]   13 #>   [744,]   14 #>   [745,]   13 #>   [746,]   14 #>   [747,]   14 #>   [748,]   13 #>   [749,]   13 #>   [750,]   14 #>   [751,]   13 #>   [752,]   14 #>   [753,]   13 #>   [754,]   14 #>   [755,]   14 #>   [756,]   13 #>   [757,]   14 #>   [758,]   14 #>   [759,]   14 #>   [760,]   13 #>   [761,]   14 #>   [762,]   13 #>   [763,]   14 #>   [764,]   13 #>   [765,]   13 #>   [766,]   13 #>   [767,]   13 #>   [768,]   14 #>   [769,]   14 #>   [770,]   14 #>   [771,]   14 #>   [772,]   13 #>   [773,]   14 #>   [774,]   14 #>   [775,]   14 #>   [776,]   14 #>   [777,]   14 #>   [778,]   13 #>   [779,]   14 #>   [780,]   14 #>   [781,]   14 #>   [782,]   14 #>   [783,]   14 #>   [784,]   14 #>   [785,]   13 #>   [786,]   14 #>   [787,]   14 #>   [788,]   13 #>   [789,]   13 #>   [790,]   14 #>   [791,]   13 #>   [792,]   14 #>   [793,]   14 #>   [794,]   14 #>   [795,]   13 #>   [796,]   14 #>   [797,]   14 #>   [798,]   14 #>   [799,]   14 #>   [800,]   14 #>   [801,]   15 #>   [802,]   15 #>   [803,]   15 #>   [804,]   16 #>   [805,]   15 #>   [806,]   16 #>   [807,]   15 #>   [808,]   15 #>   [809,]   16 #>   [810,]   16 #>   [811,]   16 #>   [812,]   16 #>   [813,]   15 #>   [814,]   16 #>   [815,]   16 #>   [816,]   15 #>   [817,]   15 #>   [818,]   16 #>   [819,]   16 #>   [820,]   15 #>   [821,]   16 #>   [822,]   15 #>   [823,]   15 #>   [824,]   15 #>   [825,]   15 #>   [826,]   16 #>   [827,]   16 #>   [828,]   15 #>   [829,]   15 #>   [830,]   16 #>   [831,]   16 #>   [832,]   16 #>   [833,]   16 #>   [834,]   16 #>   [835,]   15 #>   [836,]   16 #>   [837,]   15 #>   [838,]   16 #>   [839,]   15 #>   [840,]   15 #>   [841,]   16 #>   [842,]   16 #>   [843,]   15 #>   [844,]   15 #>   [845,]   15 #>   [846,]   15 #>   [847,]   15 #>   [848,]   16 #>   [849,]   15 #>   [850,]   15 #>   [851,]   15 #>   [852,]   16 #>   [853,]   15 #>   [854,]   15 #>   [855,]   15 #>   [856,]   15 #>   [857,]   15 #>   [858,]   16 #>   [859,]   15 #>   [860,]   16 #>   [861,]   16 #>   [862,]   16 #>   [863,]   15 #>   [864,]   16 #>   [865,]   15 #>   [866,]   15 #>   [867,]   16 #>   [868,]   16 #>   [869,]   16 #>   [870,]   15 #>   [871,]   15 #>   [872,]   15 #>   [873,]   16 #>   [874,]   16 #>   [875,]   16 #>   [876,]   15 #>   [877,]   15 #>   [878,]   15 #>   [879,]   15 #>   [880,]   16 #>   [881,]   15 #>   [882,]   16 #>   [883,]   15 #>   [884,]   15 #>   [885,]   16 #>   [886,]   15 #>   [887,]   15 #>   [888,]   15 #>   [889,]   15 #>   [890,]   15 #>   [891,]   15 #>   [892,]   16 #>   [893,]   16 #>   [894,]   15 #>   [895,]   15 #>   [896,]   16 #>   [897,]   16 #>   [898,]   15 #>   [899,]   16 #>   [900,]   15 #>   [901,]   17 #>   [902,]   18 #>   [903,]   17 #>   [904,]   17 #>   [905,]   18 #>   [906,]   17 #>   [907,]   18 #>   [908,]   17 #>   [909,]   18 #>   [910,]   18 #>   [911,]   17 #>   [912,]   18 #>   [913,]   18 #>   [914,]   17 #>   [915,]   18 #>   [916,]   17 #>   [917,]   18 #>   [918,]   18 #>   [919,]   17 #>   [920,]   18 #>   [921,]   18 #>   [922,]   18 #>   [923,]   18 #>   [924,]   18 #>   [925,]   18 #>   [926,]   17 #>   [927,]   18 #>   [928,]   17 #>   [929,]   18 #>   [930,]   18 #>   [931,]   18 #>   [932,]   18 #>   [933,]   18 #>   [934,]   17 #>   [935,]   17 #>   [936,]   18 #>   [937,]   17 #>   [938,]   17 #>   [939,]   18 #>   [940,]   18 #>   [941,]   18 #>   [942,]   17 #>   [943,]   18 #>   [944,]   18 #>   [945,]   17 #>   [946,]   18 #>   [947,]   18 #>   [948,]   18 #>   [949,]   17 #>   [950,]   18 #>   [951,]   18 #>   [952,]   17 #>   [953,]   18 #>   [954,]   18 #>   [955,]   18 #>   [956,]   17 #>   [957,]   18 #>   [958,]   18 #>   [959,]   17 #>   [960,]   18 #>   [961,]   18 #>   [962,]   17 #>   [963,]   18 #>   [964,]   17 #>   [965,]   17 #>   [966,]   18 #>   [967,]   18 #>   [968,]   17 #>   [969,]   17 #>   [970,]   18 #>   [971,]   18 #>   [972,]   17 #>   [973,]   17 #>   [974,]   18 #>   [975,]   18 #>   [976,]   18 #>   [977,]   17 #>   [978,]   18 #>   [979,]   17 #>   [980,]   18 #>   [981,]   18 #>   [982,]   18 #>   [983,]   18 #>   [984,]   18 #>   [985,]   18 #>   [986,]   18 #>   [987,]   18 #>   [988,]   18 #>   [989,]   17 #>   [990,]   18 #>   [991,]   17 #>   [992,]   18 #>   [993,]   18 #>   [994,]   17 #>   [995,]   18 #>   [996,]   17 #>   [997,]   17 #>   [998,]   18 #>   [999,]   18 #>  [1000,]   17 #>  [1001,]   20 #>  [1002,]   20 #>  [1003,]   20 #>  [1004,]   19 #>  [1005,]   20 #>  [1006,]   20 #>  [1007,]   20 #>  [1008,]   19 #>  [1009,]   19 #>  [1010,]   19 #>  [1011,]   20 #>  [1012,]   20 #>  [1013,]   20 #>  [1014,]   20 #>  [1015,]   20 #>  [1016,]   20 #>  [1017,]   20 #>  [1018,]   20 #>  [1019,]   20 #>  [1020,]   20 #>  [1021,]   20 #>  [1022,]   20 #>  [1023,]   20 #>  [1024,]   20 #>  [1025,]   20 #>  [1026,]   20 #>  [1027,]   20 #>  [1028,]   20 #>  [1029,]   20 #>  [1030,]   20 #>  [1031,]   20 #>  [1032,]   20 #>  [1033,]   20 #>  [1034,]   20 #>  [1035,]   20 #>  [1036,]   20 #>  [1037,]   20 #>  [1038,]   20 #>  [1039,]   20 #>  [1040,]   20 #>  [1041,]   20 #>  [1042,]   20 #>  [1043,]   19 #>  [1044,]   20 #>  [1045,]   20 #>  [1046,]   20 #>  [1047,]   20 #>  [1048,]   20 #>  [1049,]   20 #>  [1050,]   20 #>  [1051,]   19 #>  [1052,]   20 #>  [1053,]   20 #>  [1054,]   20 #>  [1055,]   20 #>  [1056,]   20 #>  [1057,]   20 #>  [1058,]   20 #>  [1059,]   20 #>  [1060,]   19 #>  [1061,]   20 #>  [1062,]   20 #>  [1063,]   20 #>  [1064,]   19 #>  [1065,]   20 #>  [1066,]   20 #>  [1067,]   19 #>  [1068,]   20 #>  [1069,]   20 #>  [1070,]   20 #>  [1071,]   20 #>  [1072,]   20 #>  [1073,]   20 #>  [1074,]   20 #>  [1075,]   20 #>  [1076,]   20 #>  [1077,]   20 #>  [1078,]   20 #>  [1079,]   20 #>  [1080,]   20 #>  [1081,]   20 #>  [1082,]   20 #>  [1083,]   20 #>  [1084,]   20 #>  [1085,]   19 #>  [1086,]   20 #>  [1087,]   20 #>  [1088,]   20 #>  [1089,]   20 #>  [1090,]   20 #>  [1091,]   19 #>  [1092,]   20 #>  [1093,]   20 #>  [1094,]   20 #>  [1095,]   19 #>  [1096,]   20 #>  [1097,]   20 #>  [1098,]   20 #>  [1099,]   20 #>  [1100,]   20 #>  [1101,]   21 #>  [1102,]   21 #>  [1103,]   21 #>  [1104,]   21 #>  [1105,]   21 #>  [1106,]   21 #>  [1107,]   21 #>  [1108,]   21 #>  [1109,]   21 #>  [1110,]   21 #>  [1111,]   21 #>  [1112,]   21 #>  [1113,]   21 #>  [1114,]   21 #>  [1115,]   21 #>  [1116,]   21 #>  [1117,]   21 #>  [1118,]   21 #>  [1119,]   21 #>  [1120,]   22 #>  [1121,]   21 #>  [1122,]   22 #>  [1123,]   21 #>  [1124,]   21 #>  [1125,]   21 #>  [1126,]   21 #>  [1127,]   21 #>  [1128,]   21 #>  [1129,]   22 #>  [1130,]   21 #>  [1131,]   21 #>  [1132,]   21 #>  [1133,]   21 #>  [1134,]   21 #>  [1135,]   21 #>  [1136,]   21 #>  [1137,]   21 #>  [1138,]   21 #>  [1139,]   21 #>  [1140,]   21 #>  [1141,]   21 #>  [1142,]   21 #>  [1143,]   21 #>  [1144,]   21 #>  [1145,]   21 #>  [1146,]   21 #>  [1147,]   21 #>  [1148,]   21 #>  [1149,]   21 #>  [1150,]   21 #>  [1151,]   21 #>  [1152,]   21 #>  [1153,]   21 #>  [1154,]   21 #>  [1155,]   21 #>  [1156,]   21 #>  [1157,]   21 #>  [1158,]   22 #>  [1159,]   21 #>  [1160,]   21 #>  [1161,]   21 #>  [1162,]   21 #>  [1163,]   21 #>  [1164,]   22 #>  [1165,]   21 #>  [1166,]   21 #>  [1167,]   21 #>  [1168,]   21 #>  [1169,]   21 #>  [1170,]   21 #>  [1171,]   21 #>  [1172,]   21 #>  [1173,]   21 #>  [1174,]   21 #>  [1175,]   21 #>  [1176,]   21 #>  [1177,]   22 #>  [1178,]   21 #>  [1179,]   21 #>  [1180,]   21 #>  [1181,]   21 #>  [1182,]   21 #>  [1183,]   21 #>  [1184,]   21 #>  [1185,]   21 #>  [1186,]   21 #>  [1187,]   22 #>  [1188,]   21 #>  [1189,]   21 #>  [1190,]   21 #>  [1191,]   21 #>  [1192,]   21 #>  [1193,]   21 #>  [1194,]   21 #>  [1195,]   21 #>  [1196,]   21 #>  [1197,]   21 #>  [1198,]   21 #>  [1199,]   21 #>  [1200,]   21 #>  [1201,]   24 #>  [1202,]   23 #>  [1203,]   23 #>  [1204,]   24 #>  [1205,]   23 #>  [1206,]   23 #>  [1207,]   24 #>  [1208,]   24 #>  [1209,]   24 #>  [1210,]   24 #>  [1211,]   23 #>  [1212,]   23 #>  [1213,]   24 #>  [1214,]   23 #>  [1215,]   24 #>  [1216,]   24 #>  [1217,]   24 #>  [1218,]   24 #>  [1219,]   23 #>  [1220,]   23 #>  [1221,]   24 #>  [1222,]   23 #>  [1223,]   24 #>  [1224,]   23 #>  [1225,]   24 #>  [1226,]   23 #>  [1227,]   24 #>  [1228,]   24 #>  [1229,]   23 #>  [1230,]   23 #>  [1231,]   23 #>  [1232,]   23 #>  [1233,]   23 #>  [1234,]   23 #>  [1235,]   23 #>  [1236,]   23 #>  [1237,]   24 #>  [1238,]   24 #>  [1239,]   24 #>  [1240,]   23 #>  [1241,]   23 #>  [1242,]   23 #>  [1243,]   24 #>  [1244,]   23 #>  [1245,]   24 #>  [1246,]   24 #>  [1247,]   24 #>  [1248,]   23 #>  [1249,]   23 #>  [1250,]   23 #>  [1251,]   23 #>  [1252,]   23 #>  [1253,]   24 #>  [1254,]   23 #>  [1255,]   23 #>  [1256,]   24 #>  [1257,]   23 #>  [1258,]   23 #>  [1259,]   23 #>  [1260,]   23 #>  [1261,]   24 #>  [1262,]   23 #>  [1263,]   23 #>  [1264,]   24 #>  [1265,]   23 #>  [1266,]   23 #>  [1267,]   23 #>  [1268,]   23 #>  [1269,]   23 #>  [1270,]   24 #>  [1271,]   24 #>  [1272,]   24 #>  [1273,]   24 #>  [1274,]   24 #>  [1275,]   24 #>  [1276,]   24 #>  [1277,]   24 #>  [1278,]   23 #>  [1279,]   24 #>  [1280,]   23 #>  [1281,]   23 #>  [1282,]   24 #>  [1283,]   23 #>  [1284,]   24 #>  [1285,]   23 #>  [1286,]   23 #>  [1287,]   24 #>  [1288,]   24 #>  [1289,]   23 #>  [1290,]   24 #>  [1291,]   23 #>  [1292,]   23 #>  [1293,]   23 #>  [1294,]   24 #>  [1295,]   24 #>  [1296,]   24 #>  [1297,]   23 #>  [1298,]   23 #>  [1299,]   23 #>  [1300,]   24 #>  [1301,]   26 #>  [1302,]   26 #>  [1303,]   25 #>  [1304,]   25 #>  [1305,]   26 #>  [1306,]   26 #>  [1307,]   25 #>  [1308,]   25 #>  [1309,]   26 #>  [1310,]   26 #>  [1311,]   26 #>  [1312,]   25 #>  [1313,]   26 #>  [1314,]   25 #>  [1315,]   26 #>  [1316,]   26 #>  [1317,]   26 #>  [1318,]   26 #>  [1319,]   26 #>  [1320,]   26 #>  [1321,]   26 #>  [1322,]   26 #>  [1323,]   25 #>  [1324,]   26 #>  [1325,]   25 #>  [1326,]   26 #>  [1327,]   26 #>  [1328,]   26 #>  [1329,]   26 #>  [1330,]   26 #>  [1331,]   25 #>  [1332,]   25 #>  [1333,]   26 #>  [1334,]   26 #>  [1335,]   26 #>  [1336,]   26 #>  [1337,]   25 #>  [1338,]   26 #>  [1339,]   26 #>  [1340,]   25 #>  [1341,]   26 #>  [1342,]   26 #>  [1343,]   26 #>  [1344,]   26 #>  [1345,]   26 #>  [1346,]   25 #>  [1347,]   25 #>  [1348,]   26 #>  [1349,]   26 #>  [1350,]   26 #>  [1351,]   26 #>  [1352,]   25 #>  [1353,]   26 #>  [1354,]   26 #>  [1355,]   25 #>  [1356,]   26 #>  [1357,]   25 #>  [1358,]   26 #>  [1359,]   25 #>  [1360,]   25 #>  [1361,]   26 #>  [1362,]   26 #>  [1363,]   26 #>  [1364,]   26 #>  [1365,]   26 #>  [1366,]   26 #>  [1367,]   25 #>  [1368,]   25 #>  [1369,]   26 #>  [1370,]   26 #>  [1371,]   26 #>  [1372,]   25 #>  [1373,]   26 #>  [1374,]   25 #>  [1375,]   26 #>  [1376,]   25 #>  [1377,]   26 #>  [1378,]   25 #>  [1379,]   26 #>  [1380,]   25 #>  [1381,]   26 #>  [1382,]   26 #>  [1383,]   26 #>  [1384,]   26 #>  [1385,]   26 #>  [1386,]   25 #>  [1387,]   26 #>  [1388,]   26 #>  [1389,]   26 #>  [1390,]   26 #>  [1391,]   26 #>  [1392,]   25 #>  [1393,]   26 #>  [1394,]   26 #>  [1395,]   26 #>  [1396,]   25 #>  [1397,]   25 #>  [1398,]   25 #>  [1399,]   26 #>  [1400,]   26 #>  [1401,]   28 #>  [1402,]   27 #>  [1403,]   27 #>  [1404,]   28 #>  [1405,]   27 #>  [1406,]   27 #>  [1407,]   28 #>  [1408,]   28 #>  [1409,]   28 #>  [1410,]   28 #>  [1411,]   27 #>  [1412,]   27 #>  [1413,]   28 #>  [1414,]   27 #>  [1415,]   28 #>  [1416,]   28 #>  [1417,]   28 #>  [1418,]   28 #>  [1419,]   27 #>  [1420,]   27 #>  [1421,]   28 #>  [1422,]   27 #>  [1423,]   28 #>  [1424,]   27 #>  [1425,]   28 #>  [1426,]   27 #>  [1427,]   28 #>  [1428,]   28 #>  [1429,]   27 #>  [1430,]   27 #>  [1431,]   27 #>  [1432,]   27 #>  [1433,]   27 #>  [1434,]   27 #>  [1435,]   27 #>  [1436,]   27 #>  [1437,]   28 #>  [1438,]   28 #>  [1439,]   28 #>  [1440,]   27 #>  [1441,]   27 #>  [1442,]   27 #>  [1443,]   28 #>  [1444,]   27 #>  [1445,]   28 #>  [1446,]   28 #>  [1447,]   28 #>  [1448,]   27 #>  [1449,]   27 #>  [1450,]   27 #>  [1451,]   27 #>  [1452,]   27 #>  [1453,]   28 #>  [1454,]   27 #>  [1455,]   27 #>  [1456,]   28 #>  [1457,]   27 #>  [1458,]   27 #>  [1459,]   27 #>  [1460,]   27 #>  [1461,]   28 #>  [1462,]   27 #>  [1463,]   27 #>  [1464,]   28 #>  [1465,]   27 #>  [1466,]   27 #>  [1467,]   27 #>  [1468,]   27 #>  [1469,]   27 #>  [1470,]   28 #>  [1471,]   28 #>  [1472,]   28 #>  [1473,]   28 #>  [1474,]   28 #>  [1475,]   28 #>  [1476,]   28 #>  [1477,]   28 #>  [1478,]   27 #>  [1479,]   28 #>  [1480,]   27 #>  [1481,]   27 #>  [1482,]   28 #>  [1483,]   27 #>  [1484,]   28 #>  [1485,]   27 #>  [1486,]   27 #>  [1487,]   28 #>  [1488,]   28 #>  [1489,]   27 #>  [1490,]   28 #>  [1491,]   27 #>  [1492,]   27 #>  [1493,]   27 #>  [1494,]   28 #>  [1495,]   28 #>  [1496,]   28 #>  [1497,]   27 #>  [1498,]   27 #>  [1499,]   27 #>  [1500,]   28 #>  [1501,]   30 #>  [1502,]   30 #>  [1503,]   29 #>  [1504,]   29 #>  [1505,]   29 #>  [1506,]   29 #>  [1507,]   30 #>  [1508,]   30 #>  [1509,]   29 #>  [1510,]   29 #>  [1511,]   29 #>  [1512,]   30 #>  [1513,]   30 #>  [1514,]   29 #>  [1515,]   30 #>  [1516,]   30 #>  [1517,]   29 #>  [1518,]   30 #>  [1519,]   30 #>  [1520,]   30 #>  [1521,]   29 #>  [1522,]   30 #>  [1523,]   30 #>  [1524,]   29 #>  [1525,]   29 #>  [1526,]   30 #>  [1527,]   30 #>  [1528,]   29 #>  [1529,]   30 #>  [1530,]   30 #>  [1531,]   29 #>  [1532,]   29 #>  [1533,]   30 #>  [1534,]   29 #>  [1535,]   29 #>  [1536,]   30 #>  [1537,]   30 #>  [1538,]   30 #>  [1539,]   29 #>  [1540,]   29 #>  [1541,]   30 #>  [1542,]   29 #>  [1543,]   30 #>  [1544,]   30 #>  [1545,]   30 #>  [1546,]   30 #>  [1547,]   29 #>  [1548,]   29 #>  [1549,]   30 #>  [1550,]   30 #>  [1551,]   30 #>  [1552,]   29 #>  [1553,]   30 #>  [1554,]   29 #>  [1555,]   30 #>  [1556,]   30 #>  [1557,]   29 #>  [1558,]   30 #>  [1559,]   30 #>  [1560,]   30 #>  [1561,]   30 #>  [1562,]   29 #>  [1563,]   30 #>  [1564,]   30 #>  [1565,]   29 #>  [1566,]   30 #>  [1567,]   29 #>  [1568,]   30 #>  [1569,]   30 #>  [1570,]   29 #>  [1571,]   30 #>  [1572,]   29 #>  [1573,]   29 #>  [1574,]   29 #>  [1575,]   30 #>  [1576,]   29 #>  [1577,]   30 #>  [1578,]   30 #>  [1579,]   29 #>  [1580,]   30 #>  [1581,]   30 #>  [1582,]   29 #>  [1583,]   30 #>  [1584,]   30 #>  [1585,]   30 #>  [1586,]   29 #>  [1587,]   30 #>  [1588,]   29 #>  [1589,]   29 #>  [1590,]   30 #>  [1591,]   29 #>  [1592,]   29 #>  [1593,]   30 #>  [1594,]   29 #>  [1595,]   30 #>  [1596,]   30 #>  [1597,]   30 #>  [1598,]   29 #>  [1599,]   29 #>  [1600,]   30 #>  [1601,]   31 #>  [1602,]   31 #>  [1603,]   31 #>  [1604,]   31 #>  [1605,]   31 #>  [1606,]   32 #>  [1607,]   31 #>  [1608,]   32 #>  [1609,]   32 #>  [1610,]   31 #>  [1611,]   31 #>  [1612,]   32 #>  [1613,]   31 #>  [1614,]   31 #>  [1615,]   32 #>  [1616,]   31 #>  [1617,]   31 #>  [1618,]   31 #>  [1619,]   31 #>  [1620,]   31 #>  [1621,]   31 #>  [1622,]   31 #>  [1623,]   31 #>  [1624,]   31 #>  [1625,]   31 #>  [1626,]   32 #>  [1627,]   31 #>  [1628,]   31 #>  [1629,]   31 #>  [1630,]   31 #>  [1631,]   31 #>  [1632,]   31 #>  [1633,]   32 #>  [1634,]   31 #>  [1635,]   31 #>  [1636,]   31 #>  [1637,]   31 #>  [1638,]   31 #>  [1639,]   31 #>  [1640,]   31 #>  [1641,]   31 #>  [1642,]   31 #>  [1643,]   32 #>  [1644,]   31 #>  [1645,]   31 #>  [1646,]   32 #>  [1647,]   31 #>  [1648,]   31 #>  [1649,]   31 #>  [1650,]   31 #>  [1651,]   32 #>  [1652,]   31 #>  [1653,]   31 #>  [1654,]   31 #>  [1655,]   31 #>  [1656,]   32 #>  [1657,]   32 #>  [1658,]   31 #>  [1659,]   31 #>  [1660,]   31 #>  [1661,]   32 #>  [1662,]   31 #>  [1663,]   31 #>  [1664,]   32 #>  [1665,]   31 #>  [1666,]   32 #>  [1667,]   31 #>  [1668,]   32 #>  [1669,]   31 #>  [1670,]   31 #>  [1671,]   31 #>  [1672,]   31 #>  [1673,]   31 #>  [1674,]   31 #>  [1675,]   31 #>  [1676,]   32 #>  [1677,]   31 #>  [1678,]   31 #>  [1679,]   31 #>  [1680,]   31 #>  [1681,]   31 #>  [1682,]   31 #>  [1683,]   31 #>  [1684,]   31 #>  [1685,]   31 #>  [1686,]   31 #>  [1687,]   31 #>  [1688,]   31 #>  [1689,]   31 #>  [1690,]   31 #>  [1691,]   31 #>  [1692,]   31 #>  [1693,]   31 #>  [1694,]   32 #>  [1695,]   31 #>  [1696,]   31 #>  [1697,]   31 #>  [1698,]   31 #>  [1699,]   31 #>  [1700,]   31 #>  [1701,]   34 #>  [1702,]   34 #>  [1703,]   33 #>  [1704,]   34 #>  [1705,]   33 #>  [1706,]   34 #>  [1707,]   34 #>  [1708,]   34 #>  [1709,]   33 #>  [1710,]   33 #>  [1711,]   33 #>  [1712,]   34 #>  [1713,]   34 #>  [1714,]   33 #>  [1715,]   34 #>  [1716,]   34 #>  [1717,]   34 #>  [1718,]   34 #>  [1719,]   34 #>  [1720,]   34 #>  [1721,]   33 #>  [1722,]   34 #>  [1723,]   34 #>  [1724,]   34 #>  [1725,]   34 #>  [1726,]   34 #>  [1727,]   34 #>  [1728,]   33 #>  [1729,]   34 #>  [1730,]   34 #>  [1731,]   33 #>  [1732,]   33 #>  [1733,]   34 #>  [1734,]   33 #>  [1735,]   33 #>  [1736,]   34 #>  [1737,]   34 #>  [1738,]   34 #>  [1739,]   33 #>  [1740,]   33 #>  [1741,]   34 #>  [1742,]   34 #>  [1743,]   34 #>  [1744,]   34 #>  [1745,]   34 #>  [1746,]   34 #>  [1747,]   34 #>  [1748,]   33 #>  [1749,]   34 #>  [1750,]   34 #>  [1751,]   34 #>  [1752,]   33 #>  [1753,]   34 #>  [1754,]   34 #>  [1755,]   34 #>  [1756,]   34 #>  [1757,]   34 #>  [1758,]   34 #>  [1759,]   34 #>  [1760,]   34 #>  [1761,]   34 #>  [1762,]   33 #>  [1763,]   34 #>  [1764,]   34 #>  [1765,]   33 #>  [1766,]   34 #>  [1767,]   34 #>  [1768,]   34 #>  [1769,]   34 #>  [1770,]   33 #>  [1771,]   34 #>  [1772,]   33 #>  [1773,]   34 #>  [1774,]   33 #>  [1775,]   34 #>  [1776,]   34 #>  [1777,]   34 #>  [1778,]   34 #>  [1779,]   34 #>  [1780,]   34 #>  [1781,]   34 #>  [1782,]   33 #>  [1783,]   34 #>  [1784,]   34 #>  [1785,]   34 #>  [1786,]   34 #>  [1787,]   34 #>  [1788,]   34 #>  [1789,]   34 #>  [1790,]   34 #>  [1791,]   34 #>  [1792,]   34 #>  [1793,]   34 #>  [1794,]   34 #>  [1795,]   34 #>  [1796,]   34 #>  [1797,]   34 #>  [1798,]   33 #>  [1799,]   34 #>  [1800,]   34 #>  [1801,]   35 #>  [1802,]   36 #>  [1803,]   36 #>  [1804,]   35 #>  [1805,]   35 #>  [1806,]   36 #>  [1807,]   36 #>  [1808,]   35 #>  [1809,]   35 #>  [1810,]   35 #>  [1811,]   35 #>  [1812,]   36 #>  [1813,]   35 #>  [1814,]   35 #>  [1815,]   35 #>  [1816,]   35 #>  [1817,]   35 #>  [1818,]   36 #>  [1819,]   36 #>  [1820,]   36 #>  [1821,]   35 #>  [1822,]   35 #>  [1823,]   36 #>  [1824,]   35 #>  [1825,]   36 #>  [1826,]   35 #>  [1827,]   35 #>  [1828,]   36 #>  [1829,]   35 #>  [1830,]   35 #>  [1831,]   36 #>  [1832,]   36 #>  [1833,]   36 #>  [1834,]   36 #>  [1835,]   35 #>  [1836,]   35 #>  [1837,]   35 #>  [1838,]   35 #>  [1839,]   35 #>  [1840,]   36 #>  [1841,]   35 #>  [1842,]   36 #>  [1843,]   35 #>  [1844,]   35 #>  [1845,]   35 #>  [1846,]   35 #>  [1847,]   35 #>  [1848,]   36 #>  [1849,]   35 #>  [1850,]   35 #>  [1851,]   35 #>  [1852,]   35 #>  [1853,]   35 #>  [1854,]   35 #>  [1855,]   35 #>  [1856,]   36 #>  [1857,]   35 #>  [1858,]   35 #>  [1859,]   35 #>  [1860,]   36 #>  [1861,]   35 #>  [1862,]   35 #>  [1863,]   35 #>  [1864,]   36 #>  [1865,]   36 #>  [1866,]   35 #>  [1867,]   35 #>  [1868,]   35 #>  [1869,]   35 #>  [1870,]   36 #>  [1871,]   36 #>  [1872,]   35 #>  [1873,]   36 #>  [1874,]   35 #>  [1875,]   35 #>  [1876,]   35 #>  [1877,]   35 #>  [1878,]   36 #>  [1879,]   35 #>  [1880,]   35 #>  [1881,]   35 #>  [1882,]   35 #>  [1883,]   35 #>  [1884,]   36 #>  [1885,]   35 #>  [1886,]   35 #>  [1887,]   35 #>  [1888,]   35 #>  [1889,]   35 #>  [1890,]   35 #>  [1891,]   35 #>  [1892,]   35 #>  [1893,]   36 #>  [1894,]   35 #>  [1895,]   35 #>  [1896,]   35 #>  [1897,]   36 #>  [1898,]   36 #>  [1899,]   35 #>  [1900,]   36 #>  [1901,]   38 #>  [1902,]   37 #>  [1903,]   38 #>  [1904,]   38 #>  [1905,]   38 #>  [1906,]   37 #>  [1907,]   38 #>  [1908,]   38 #>  [1909,]   38 #>  [1910,]   38 #>  [1911,]   37 #>  [1912,]   37 #>  [1913,]   38 #>  [1914,]   38 #>  [1915,]   37 #>  [1916,]   38 #>  [1917,]   37 #>  [1918,]   38 #>  [1919,]   37 #>  [1920,]   38 #>  [1921,]   38 #>  [1922,]   38 #>  [1923,]   37 #>  [1924,]   38 #>  [1925,]   38 #>  [1926,]   37 #>  [1927,]   38 #>  [1928,]   38 #>  [1929,]   37 #>  [1930,]   37 #>  [1931,]   37 #>  [1932,]   38 #>  [1933,]   38 #>  [1934,]   37 #>  [1935,]   37 #>  [1936,]   38 #>  [1937,]   37 #>  [1938,]   38 #>  [1939,]   38 #>  [1940,]   38 #>  [1941,]   38 #>  [1942,]   37 #>  [1943,]   37 #>  [1944,]   37 #>  [1945,]   38 #>  [1946,]   38 #>  [1947,]   37 #>  [1948,]   37 #>  [1949,]   38 #>  [1950,]   38 #>  [1951,]   38 #>  [1952,]   38 #>  [1953,]   38 #>  [1954,]   38 #>  [1955,]   38 #>  [1956,]   37 #>  [1957,]   38 #>  [1958,]   38 #>  [1959,]   38 #>  [1960,]   37 #>  [1961,]   37 #>  [1962,]   38 #>  [1963,]   37 #>  [1964,]   37 #>  [1965,]   37 #>  [1966,]   37 #>  [1967,]   38 #>  [1968,]   37 #>  [1969,]   38 #>  [1970,]   37 #>  [1971,]   38 #>  [1972,]   38 #>  [1973,]   38 #>  [1974,]   38 #>  [1975,]   37 #>  [1976,]   38 #>  [1977,]   38 #>  [1978,]   37 #>  [1979,]   37 #>  [1980,]   38 #>  [1981,]   37 #>  [1982,]   38 #>  [1983,]   38 #>  [1984,]   38 #>  [1985,]   38 #>  [1986,]   38 #>  [1987,]   38 #>  [1988,]   38 #>  [1989,]   38 #>  [1990,]   38 #>  [1991,]   38 #>  [1992,]   37 #>  [1993,]   38 #>  [1994,]   37 #>  [1995,]   37 #>  [1996,]   37 #>  [1997,]   38 #>  [1998,]   38 #>  [1999,]   38 #>  [2000,]   37 #>  [2001,]   39 #>  [2002,]   39 #>  [2003,]   39 #>  [2004,]   39 #>  [2005,]   39 #>  [2006,]   39 #>  [2007,]   39 #>  [2008,]   39 #>  [2009,]   40 #>  [2010,]   39 #>  [2011,]   39 #>  [2012,]   39 #>  [2013,]   40 #>  [2014,]   39 #>  [2015,]   39 #>  [2016,]   39 #>  [2017,]   40 #>  [2018,]   40 #>  [2019,]   39 #>  [2020,]   39 #>  [2021,]   39 #>  [2022,]   39 #>  [2023,]   39 #>  [2024,]   39 #>  [2025,]   39 #>  [2026,]   39 #>  [2027,]   40 #>  [2028,]   39 #>  [2029,]   39 #>  [2030,]   39 #>  [2031,]   39 #>  [2032,]   39 #>  [2033,]   39 #>  [2034,]   39 #>  [2035,]   39 #>  [2036,]   39 #>  [2037,]   39 #>  [2038,]   39 #>  [2039,]   39 #>  [2040,]   39 #>  [2041,]   39 #>  [2042,]   40 #>  [2043,]   39 #>  [2044,]   39 #>  [2045,]   39 #>  [2046,]   39 #>  [2047,]   39 #>  [2048,]   39 #>  [2049,]   39 #>  [2050,]   39 #>  [2051,]   40 #>  [2052,]   39 #>  [2053,]   40 #>  [2054,]   39 #>  [2055,]   39 #>  [2056,]   39 #>  [2057,]   39 #>  [2058,]   39 #>  [2059,]   39 #>  [2060,]   39 #>  [2061,]   39 #>  [2062,]   39 #>  [2063,]   39 #>  [2064,]   39 #>  [2065,]   40 #>  [2066,]   40 #>  [2067,]   39 #>  [2068,]   39 #>  [2069,]   39 #>  [2070,]   39 #>  [2071,]   39 #>  [2072,]   39 #>  [2073,]   39 #>  [2074,]   39 #>  [2075,]   39 #>  [2076,]   39 #>  [2077,]   39 #>  [2078,]   39 #>  [2079,]   40 #>  [2080,]   39 #>  [2081,]   39 #>  [2082,]   40 #>  [2083,]   39 #>  [2084,]   40 #>  [2085,]   39 #>  [2086,]   39 #>  [2087,]   39 #>  [2088,]   39 #>  [2089,]   39 #>  [2090,]   39 #>  [2091,]   40 #>  [2092,]   39 #>  [2093,]   40 #>  [2094,]   40 #>  [2095,]   39 #>  [2096,]   39 #>  [2097,]   39 #>  [2098,]   39 #>  [2099,]   39 #>  [2100,]   39 #>  [2101,]   41 #>  [2102,]   41 #>  [2103,]   41 #>  [2104,]   41 #>  [2105,]   41 #>  [2106,]   41 #>  [2107,]   42 #>  [2108,]   41 #>  [2109,]   41 #>  [2110,]   41 #>  [2111,]   41 #>  [2112,]   41 #>  [2113,]   41 #>  [2114,]   41 #>  [2115,]   41 #>  [2116,]   42 #>  [2117,]   41 #>  [2118,]   41 #>  [2119,]   41 #>  [2120,]   42 #>  [2121,]   41 #>  [2122,]   41 #>  [2123,]   41 #>  [2124,]   42 #>  [2125,]   41 #>  [2126,]   41 #>  [2127,]   41 #>  [2128,]   42 #>  [2129,]   41 #>  [2130,]   41 #>  [2131,]   41 #>  [2132,]   41 #>  [2133,]   41 #>  [2134,]   41 #>  [2135,]   41 #>  [2136,]   41 #>  [2137,]   41 #>  [2138,]   41 #>  [2139,]   41 #>  [2140,]   41 #>  [2141,]   41 #>  [2142,]   41 #>  [2143,]   41 #>  [2144,]   41 #>  [2145,]   41 #>  [2146,]   41 #>  [2147,]   41 #>  [2148,]   41 #>  [2149,]   41 #>  [2150,]   42 #>  [2151,]   41 #>  [2152,]   42 #>  [2153,]   41 #>  [2154,]   41 #>  [2155,]   41 #>  [2156,]   41 #>  [2157,]   41 #>  [2158,]   41 #>  [2159,]   41 #>  [2160,]   41 #>  [2161,]   41 #>  [2162,]   41 #>  [2163,]   41 #>  [2164,]   41 #>  [2165,]   41 #>  [2166,]   41 #>  [2167,]   41 #>  [2168,]   41 #>  [2169,]   41 #>  [2170,]   41 #>  [2171,]   41 #>  [2172,]   41 #>  [2173,]   41 #>  [2174,]   41 #>  [2175,]   41 #>  [2176,]   42 #>  [2177,]   41 #>  [2178,]   41 #>  [2179,]   41 #>  [2180,]   41 #>  [2181,]   41 #>  [2182,]   41 #>  [2183,]   41 #>  [2184,]   41 #>  [2185,]   41 #>  [2186,]   42 #>  [2187,]   41 #>  [2188,]   41 #>  [2189,]   41 #>  [2190,]   41 #>  [2191,]   42 #>  [2192,]   41 #>  [2193,]   41 #>  [2194,]   41 #>  [2195,]   41 #>  [2196,]   41 #>  [2197,]   41 #>  [2198,]   41 #>  [2199,]   41 #>  [2200,]   41 #>  [2201,]   43 #>  [2202,]   43 #>  [2203,]   43 #>  [2204,]   43 #>  [2205,]   44 #>  [2206,]   43 #>  [2207,]   43 #>  [2208,]   43 #>  [2209,]   43 #>  [2210,]   43 #>  [2211,]   43 #>  [2212,]   43 #>  [2213,]   43 #>  [2214,]   43 #>  [2215,]   43 #>  [2216,]   43 #>  [2217,]   43 #>  [2218,]   44 #>  [2219,]   43 #>  [2220,]   43 #>  [2221,]   43 #>  [2222,]   43 #>  [2223,]   43 #>  [2224,]   43 #>  [2225,]   43 #>  [2226,]   43 #>  [2227,]   43 #>  [2228,]   43 #>  [2229,]   43 #>  [2230,]   43 #>  [2231,]   43 #>  [2232,]   44 #>  [2233,]   43 #>  [2234,]   43 #>  [2235,]   43 #>  [2236,]   43 #>  [2237,]   43 #>  [2238,]   43 #>  [2239,]   43 #>  [2240,]   43 #>  [2241,]   43 #>  [2242,]   43 #>  [2243,]   43 #>  [2244,]   43 #>  [2245,]   43 #>  [2246,]   43 #>  [2247,]   43 #>  [2248,]   43 #>  [2249,]   43 #>  [2250,]   43 #>  [2251,]   43 #>  [2252,]   43 #>  [2253,]   43 #>  [2254,]   43 #>  [2255,]   43 #>  [2256,]   43 #>  [2257,]   43 #>  [2258,]   43 #>  [2259,]   43 #>  [2260,]   43 #>  [2261,]   43 #>  [2262,]   43 #>  [2263,]   43 #>  [2264,]   43 #>  [2265,]   43 #>  [2266,]   43 #>  [2267,]   43 #>  [2268,]   43 #>  [2269,]   43 #>  [2270,]   43 #>  [2271,]   44 #>  [2272,]   43 #>  [2273,]   43 #>  [2274,]   43 #>  [2275,]   44 #>  [2276,]   43 #>  [2277,]   43 #>  [2278,]   43 #>  [2279,]   43 #>  [2280,]   43 #>  [2281,]   43 #>  [2282,]   43 #>  [2283,]   43 #>  [2284,]   43 #>  [2285,]   43 #>  [2286,]   43 #>  [2287,]   43 #>  [2288,]   43 #>  [2289,]   43 #>  [2290,]   43 #>  [2291,]   44 #>  [2292,]   43 #>  [2293,]   43 #>  [2294,]   43 #>  [2295,]   44 #>  [2296,]   43 #>  [2297,]   43 #>  [2298,]   43 #>  [2299,]   43 #>  [2300,]   44 #>  [2301,]   46 #>  [2302,]   46 #>  [2303,]   45 #>  [2304,]   46 #>  [2305,]   45 #>  [2306,]   45 #>  [2307,]   46 #>  [2308,]   46 #>  [2309,]   46 #>  [2310,]   46 #>  [2311,]   45 #>  [2312,]   45 #>  [2313,]   46 #>  [2314,]   45 #>  [2315,]   46 #>  [2316,]   46 #>  [2317,]   46 #>  [2318,]   46 #>  [2319,]   45 #>  [2320,]   45 #>  [2321,]   46 #>  [2322,]   45 #>  [2323,]   46 #>  [2324,]   45 #>  [2325,]   46 #>  [2326,]   45 #>  [2327,]   46 #>  [2328,]   46 #>  [2329,]   45 #>  [2330,]   45 #>  [2331,]   46 #>  [2332,]   45 #>  [2333,]   46 #>  [2334,]   45 #>  [2335,]   46 #>  [2336,]   45 #>  [2337,]   46 #>  [2338,]   46 #>  [2339,]   46 #>  [2340,]   45 #>  [2341,]   45 #>  [2342,]   45 #>  [2343,]   46 #>  [2344,]   46 #>  [2345,]   46 #>  [2346,]   46 #>  [2347,]   46 #>  [2348,]   45 #>  [2349,]   46 #>  [2350,]   46 #>  [2351,]   45 #>  [2352,]   46 #>  [2353,]   46 #>  [2354,]   45 #>  [2355,]   45 #>  [2356,]   46 #>  [2357,]   46 #>  [2358,]   46 #>  [2359,]   46 #>  [2360,]   45 #>  [2361,]   46 #>  [2362,]   45 #>  [2363,]   45 #>  [2364,]   46 #>  [2365,]   46 #>  [2366,]   45 #>  [2367,]   45 #>  [2368,]   45 #>  [2369,]   45 #>  [2370,]   46 #>  [2371,]   46 #>  [2372,]   46 #>  [2373,]   46 #>  [2374,]   46 #>  [2375,]   46 #>  [2376,]   46 #>  [2377,]   46 #>  [2378,]   45 #>  [2379,]   46 #>  [2380,]   45 #>  [2381,]   45 #>  [2382,]   46 #>  [2383,]   45 #>  [2384,]   46 #>  [2385,]   46 #>  [2386,]   46 #>  [2387,]   46 #>  [2388,]   46 #>  [2389,]   45 #>  [2390,]   46 #>  [2391,]   45 #>  [2392,]   46 #>  [2393,]   45 #>  [2394,]   46 #>  [2395,]   46 #>  [2396,]   46 #>  [2397,]   46 #>  [2398,]   45 #>  [2399,]   45 #>  [2400,]   46 #>  [2401,]   48 #>  [2402,]   47 #>  [2403,]   48 #>  [2404,]   48 #>  [2405,]   48 #>  [2406,]   47 #>  [2407,]   48 #>  [2408,]   48 #>  [2409,]   48 #>  [2410,]   48 #>  [2411,]   47 #>  [2412,]   47 #>  [2413,]   48 #>  [2414,]   48 #>  [2415,]   47 #>  [2416,]   48 #>  [2417,]   47 #>  [2418,]   48 #>  [2419,]   48 #>  [2420,]   48 #>  [2421,]   48 #>  [2422,]   48 #>  [2423,]   47 #>  [2424,]   48 #>  [2425,]   48 #>  [2426,]   48 #>  [2427,]   48 #>  [2428,]   48 #>  [2429,]   47 #>  [2430,]   47 #>  [2431,]   47 #>  [2432,]   48 #>  [2433,]   48 #>  [2434,]   47 #>  [2435,]   47 #>  [2436,]   48 #>  [2437,]   47 #>  [2438,]   48 #>  [2439,]   48 #>  [2440,]   48 #>  [2441,]   48 #>  [2442,]   47 #>  [2443,]   47 #>  [2444,]   47 #>  [2445,]   48 #>  [2446,]   48 #>  [2447,]   47 #>  [2448,]   47 #>  [2449,]   48 #>  [2450,]   48 #>  [2451,]   48 #>  [2452,]   48 #>  [2453,]   48 #>  [2454,]   48 #>  [2455,]   48 #>  [2456,]   47 #>  [2457,]   48 #>  [2458,]   48 #>  [2459,]   48 #>  [2460,]   47 #>  [2461,]   47 #>  [2462,]   48 #>  [2463,]   47 #>  [2464,]   47 #>  [2465,]   47 #>  [2466,]   47 #>  [2467,]   48 #>  [2468,]   48 #>  [2469,]   48 #>  [2470,]   47 #>  [2471,]   48 #>  [2472,]   48 #>  [2473,]   48 #>  [2474,]   48 #>  [2475,]   47 #>  [2476,]   48 #>  [2477,]   48 #>  [2478,]   47 #>  [2479,]   47 #>  [2480,]   48 #>  [2481,]   47 #>  [2482,]   48 #>  [2483,]   48 #>  [2484,]   48 #>  [2485,]   48 #>  [2486,]   48 #>  [2487,]   48 #>  [2488,]   48 #>  [2489,]   48 #>  [2490,]   48 #>  [2491,]   48 #>  [2492,]   47 #>  [2493,]   48 #>  [2494,]   47 #>  [2495,]   47 #>  [2496,]   48 #>  [2497,]   48 #>  [2498,]   48 #>  [2499,]   48 #>  [2500,]   47 #>  [2501,]   50 #>  [2502,]   49 #>  [2503,]   49 #>  [2504,]   49 #>  [2505,]   49 #>  [2506,]   49 #>  [2507,]   49 #>  [2508,]   49 #>  [2509,]   49 #>  [2510,]   49 #>  [2511,]   49 #>  [2512,]   49 #>  [2513,]   49 #>  [2514,]   50 #>  [2515,]   50 #>  [2516,]   50 #>  [2517,]   49 #>  [2518,]   49 #>  [2519,]   49 #>  [2520,]   49 #>  [2521,]   49 #>  [2522,]   49 #>  [2523,]   49 #>  [2524,]   49 #>  [2525,]   49 #>  [2526,]   49 #>  [2527,]   49 #>  [2528,]   49 #>  [2529,]   49 #>  [2530,]   49 #>  [2531,]   49 #>  [2532,]   49 #>  [2533,]   49 #>  [2534,]   49 #>  [2535,]   49 #>  [2536,]   49 #>  [2537,]   49 #>  [2538,]   49 #>  [2539,]   49 #>  [2540,]   49 #>  [2541,]   50 #>  [2542,]   49 #>  [2543,]   49 #>  [2544,]   50 #>  [2545,]   49 #>  [2546,]   49 #>  [2547,]   49 #>  [2548,]   49 #>  [2549,]   49 #>  [2550,]   50 #>  [2551,]   49 #>  [2552,]   49 #>  [2553,]   49 #>  [2554,]   49 #>  [2555,]   49 #>  [2556,]   49 #>  [2557,]   49 #>  [2558,]   49 #>  [2559,]   50 #>  [2560,]   49 #>  [2561,]   49 #>  [2562,]   49 #>  [2563,]   49 #>  [2564,]   49 #>  [2565,]   49 #>  [2566,]   49 #>  [2567,]   49 #>  [2568,]   49 #>  [2569,]   49 #>  [2570,]   50 #>  [2571,]   49 #>  [2572,]   49 #>  [2573,]   50 #>  [2574,]   49 #>  [2575,]   49 #>  [2576,]   49 #>  [2577,]   49 #>  [2578,]   49 #>  [2579,]   49 #>  [2580,]   49 #>  [2581,]   49 #>  [2582,]   49 #>  [2583,]   49 #>  [2584,]   49 #>  [2585,]   49 #>  [2586,]   49 #>  [2587,]   49 #>  [2588,]   49 #>  [2589,]   49 #>  [2590,]   49 #>  [2591,]   49 #>  [2592,]   49 #>  [2593,]   49 #>  [2594,]   49 #>  [2595,]   49 #>  [2596,]   50 #>  [2597,]   49 #>  [2598,]   49 #>  [2599,]   50 #>  [2600,]   49 #>  [2601,]   52 #>  [2602,]   52 #>  [2603,]   51 #>  [2604,]   51 #>  [2605,]   51 #>  [2606,]   51 #>  [2607,]   52 #>  [2608,]   52 #>  [2609,]   51 #>  [2610,]   51 #>  [2611,]   51 #>  [2612,]   52 #>  [2613,]   52 #>  [2614,]   51 #>  [2615,]   52 #>  [2616,]   52 #>  [2617,]   52 #>  [2618,]   52 #>  [2619,]   52 #>  [2620,]   52 #>  [2621,]   51 #>  [2622,]   52 #>  [2623,]   52 #>  [2624,]   51 #>  [2625,]   51 #>  [2626,]   52 #>  [2627,]   52 #>  [2628,]   51 #>  [2629,]   52 #>  [2630,]   52 #>  [2631,]   51 #>  [2632,]   51 #>  [2633,]   52 #>  [2634,]   51 #>  [2635,]   51 #>  [2636,]   52 #>  [2637,]   52 #>  [2638,]   52 #>  [2639,]   51 #>  [2640,]   51 #>  [2641,]   52 #>  [2642,]   51 #>  [2643,]   52 #>  [2644,]   52 #>  [2645,]   52 #>  [2646,]   52 #>  [2647,]   51 #>  [2648,]   51 #>  [2649,]   52 #>  [2650,]   52 #>  [2651,]   52 #>  [2652,]   51 #>  [2653,]   52 #>  [2654,]   51 #>  [2655,]   52 #>  [2656,]   52 #>  [2657,]   51 #>  [2658,]   52 #>  [2659,]   52 #>  [2660,]   52 #>  [2661,]   52 #>  [2662,]   51 #>  [2663,]   52 #>  [2664,]   52 #>  [2665,]   51 #>  [2666,]   52 #>  [2667,]   51 #>  [2668,]   52 #>  [2669,]   52 #>  [2670,]   51 #>  [2671,]   52 #>  [2672,]   51 #>  [2673,]   51 #>  [2674,]   51 #>  [2675,]   52 #>  [2676,]   51 #>  [2677,]   52 #>  [2678,]   52 #>  [2679,]   51 #>  [2680,]   52 #>  [2681,]   52 #>  [2682,]   51 #>  [2683,]   52 #>  [2684,]   52 #>  [2685,]   52 #>  [2686,]   51 #>  [2687,]   52 #>  [2688,]   51 #>  [2689,]   51 #>  [2690,]   52 #>  [2691,]   51 #>  [2692,]   51 #>  [2693,]   52 #>  [2694,]   51 #>  [2695,]   52 #>  [2696,]   52 #>  [2697,]   52 #>  [2698,]   51 #>  [2699,]   51 #>  [2700,]   52 #>  [2701,]   53 #>  [2702,]   54 #>  [2703,]   53 #>  [2704,]   53 #>  [2705,]   53 #>  [2706,]   53 #>  [2707,]   53 #>  [2708,]   53 #>  [2709,]   54 #>  [2710,]   54 #>  [2711,]   53 #>  [2712,]   54 #>  [2713,]   54 #>  [2714,]   53 #>  [2715,]   53 #>  [2716,]   53 #>  [2717,]   54 #>  [2718,]   54 #>  [2719,]   53 #>  [2720,]   54 #>  [2721,]   54 #>  [2722,]   53 #>  [2723,]   54 #>  [2724,]   54 #>  [2725,]   53 #>  [2726,]   53 #>  [2727,]   53 #>  [2728,]   53 #>  [2729,]   54 #>  [2730,]   53 #>  [2731,]   54 #>  [2732,]   54 #>  [2733,]   54 #>  [2734,]   53 #>  [2735,]   53 #>  [2736,]   54 #>  [2737,]   53 #>  [2738,]   53 #>  [2739,]   53 #>  [2740,]   54 #>  [2741,]   53 #>  [2742,]   53 #>  [2743,]   53 #>  [2744,]   53 #>  [2745,]   53 #>  [2746,]   53 #>  [2747,]   53 #>  [2748,]   53 #>  [2749,]   53 #>  [2750,]   53 #>  [2751,]   53 #>  [2752,]   53 #>  [2753,]   54 #>  [2754,]   53 #>  [2755,]   53 #>  [2756,]   53 #>  [2757,]   53 #>  [2758,]   53 #>  [2759,]   53 #>  [2760,]   54 #>  [2761,]   54 #>  [2762,]   53 #>  [2763,]   54 #>  [2764,]   53 #>  [2765,]   53 #>  [2766,]   53 #>  [2767,]   53 #>  [2768,]   53 #>  [2769,]   53 #>  [2770,]   54 #>  [2771,]   53 #>  [2772,]   53 #>  [2773,]   53 #>  [2774,]   53 #>  [2775,]   54 #>  [2776,]   53 #>  [2777,]   53 #>  [2778,]   53 #>  [2779,]   53 #>  [2780,]   54 #>  [2781,]   54 #>  [2782,]   53 #>  [2783,]   54 #>  [2784,]   54 #>  [2785,]   53 #>  [2786,]   54 #>  [2787,]   53 #>  [2788,]   54 #>  [2789,]   53 #>  [2790,]   53 #>  [2791,]   53 #>  [2792,]   53 #>  [2793,]   53 #>  [2794,]   53 #>  [2795,]   53 #>  [2796,]   53 #>  [2797,]   53 #>  [2798,]   53 #>  [2799,]   53 #>  [2800,]   53 #>  [2801,]   56 #>  [2802,]   56 #>  [2803,]   55 #>  [2804,]   55 #>  [2805,]   56 #>  [2806,]   56 #>  [2807,]   55 #>  [2808,]   55 #>  [2809,]   56 #>  [2810,]   56 #>  [2811,]   56 #>  [2812,]   55 #>  [2813,]   56 #>  [2814,]   55 #>  [2815,]   56 #>  [2816,]   56 #>  [2817,]   56 #>  [2818,]   56 #>  [2819,]   56 #>  [2820,]   56 #>  [2821,]   56 #>  [2822,]   56 #>  [2823,]   55 #>  [2824,]   56 #>  [2825,]   55 #>  [2826,]   56 #>  [2827,]   56 #>  [2828,]   56 #>  [2829,]   56 #>  [2830,]   56 #>  [2831,]   55 #>  [2832,]   55 #>  [2833,]   56 #>  [2834,]   56 #>  [2835,]   56 #>  [2836,]   56 #>  [2837,]   55 #>  [2838,]   56 #>  [2839,]   56 #>  [2840,]   55 #>  [2841,]   56 #>  [2842,]   56 #>  [2843,]   56 #>  [2844,]   56 #>  [2845,]   56 #>  [2846,]   55 #>  [2847,]   55 #>  [2848,]   56 #>  [2849,]   56 #>  [2850,]   56 #>  [2851,]   56 #>  [2852,]   55 #>  [2853,]   56 #>  [2854,]   56 #>  [2855,]   55 #>  [2856,]   56 #>  [2857,]   55 #>  [2858,]   56 #>  [2859,]   55 #>  [2860,]   55 #>  [2861,]   56 #>  [2862,]   56 #>  [2863,]   56 #>  [2864,]   56 #>  [2865,]   56 #>  [2866,]   56 #>  [2867,]   55 #>  [2868,]   55 #>  [2869,]   56 #>  [2870,]   56 #>  [2871,]   56 #>  [2872,]   55 #>  [2873,]   56 #>  [2874,]   55 #>  [2875,]   56 #>  [2876,]   55 #>  [2877,]   56 #>  [2878,]   55 #>  [2879,]   56 #>  [2880,]   55 #>  [2881,]   56 #>  [2882,]   56 #>  [2883,]   56 #>  [2884,]   56 #>  [2885,]   56 #>  [2886,]   55 #>  [2887,]   56 #>  [2888,]   56 #>  [2889,]   56 #>  [2890,]   56 #>  [2891,]   56 #>  [2892,]   55 #>  [2893,]   56 #>  [2894,]   56 #>  [2895,]   56 #>  [2896,]   55 #>  [2897,]   55 #>  [2898,]   55 #>  [2899,]   56 #>  [2900,]   56 #>  [2901,]   57 #>  [2902,]   58 #>  [2903,]   57 #>  [2904,]   57 #>  [2905,]   58 #>  [2906,]   57 #>  [2907,]   58 #>  [2908,]   57 #>  [2909,]   58 #>  [2910,]   58 #>  [2911,]   57 #>  [2912,]   58 #>  [2913,]   58 #>  [2914,]   57 #>  [2915,]   58 #>  [2916,]   57 #>  [2917,]   58 #>  [2918,]   58 #>  [2919,]   57 #>  [2920,]   58 #>  [2921,]   58 #>  [2922,]   58 #>  [2923,]   58 #>  [2924,]   58 #>  [2925,]   58 #>  [2926,]   57 #>  [2927,]   58 #>  [2928,]   57 #>  [2929,]   58 #>  [2930,]   58 #>  [2931,]   58 #>  [2932,]   58 #>  [2933,]   58 #>  [2934,]   57 #>  [2935,]   57 #>  [2936,]   58 #>  [2937,]   57 #>  [2938,]   57 #>  [2939,]   58 #>  [2940,]   58 #>  [2941,]   58 #>  [2942,]   57 #>  [2943,]   58 #>  [2944,]   58 #>  [2945,]   57 #>  [2946,]   58 #>  [2947,]   58 #>  [2948,]   58 #>  [2949,]   57 #>  [2950,]   58 #>  [2951,]   58 #>  [2952,]   57 #>  [2953,]   58 #>  [2954,]   58 #>  [2955,]   57 #>  [2956,]   57 #>  [2957,]   58 #>  [2958,]   58 #>  [2959,]   57 #>  [2960,]   58 #>  [2961,]   58 #>  [2962,]   57 #>  [2963,]   58 #>  [2964,]   57 #>  [2965,]   57 #>  [2966,]   58 #>  [2967,]   58 #>  [2968,]   57 #>  [2969,]   57 #>  [2970,]   58 #>  [2971,]   58 #>  [2972,]   57 #>  [2973,]   57 #>  [2974,]   58 #>  [2975,]   58 #>  [2976,]   58 #>  [2977,]   57 #>  [2978,]   58 #>  [2979,]   57 #>  [2980,]   58 #>  [2981,]   58 #>  [2982,]   58 #>  [2983,]   58 #>  [2984,]   58 #>  [2985,]   58 #>  [2986,]   58 #>  [2987,]   58 #>  [2988,]   58 #>  [2989,]   57 #>  [2990,]   58 #>  [2991,]   57 #>  [2992,]   58 #>  [2993,]   58 #>  [2994,]   57 #>  [2995,]   58 #>  [2996,]   57 #>  [2997,]   57 #>  [2998,]   58 #>  [2999,]   58 #>  [3000,]   57 #>  [3001,]   59 #>  [3002,]   59 #>  [3003,]   59 #>  [3004,]   59 #>  [3005,]   59 #>  [3006,]   59 #>  [3007,]   59 #>  [3008,]   59 #>  [3009,]   59 #>  [3010,]   59 #>  [3011,]   59 #>  [3012,]   59 #>  [3013,]   59 #>  [3014,]   59 #>  [3015,]   59 #>  [3016,]   59 #>  [3017,]   59 #>  [3018,]   60 #>  [3019,]   59 #>  [3020,]   59 #>  [3021,]   59 #>  [3022,]   59 #>  [3023,]   59 #>  [3024,]   59 #>  [3025,]   59 #>  [3026,]   59 #>  [3027,]   59 #>  [3028,]   59 #>  [3029,]   59 #>  [3030,]   59 #>  [3031,]   59 #>  [3032,]   59 #>  [3033,]   59 #>  [3034,]   59 #>  [3035,]   59 #>  [3036,]   59 #>  [3037,]   59 #>  [3038,]   59 #>  [3039,]   59 #>  [3040,]   59 #>  [3041,]   59 #>  [3042,]   59 #>  [3043,]   59 #>  [3044,]   59 #>  [3045,]   59 #>  [3046,]   59 #>  [3047,]   59 #>  [3048,]   59 #>  [3049,]   59 #>  [3050,]   59 #>  [3051,]   60 #>  [3052,]   59 #>  [3053,]   60 #>  [3054,]   59 #>  [3055,]   59 #>  [3056,]   59 #>  [3057,]   59 #>  [3058,]   59 #>  [3059,]   59 #>  [3060,]   59 #>  [3061,]   59 #>  [3062,]   59 #>  [3063,]   59 #>  [3064,]   59 #>  [3065,]   59 #>  [3066,]   59 #>  [3067,]   59 #>  [3068,]   59 #>  [3069,]   59 #>  [3070,]   59 #>  [3071,]   59 #>  [3072,]   59 #>  [3073,]   59 #>  [3074,]   59 #>  [3075,]   59 #>  [3076,]   59 #>  [3077,]   59 #>  [3078,]   59 #>  [3079,]   59 #>  [3080,]   59 #>  [3081,]   59 #>  [3082,]   59 #>  [3083,]   59 #>  [3084,]   60 #>  [3085,]   59 #>  [3086,]   59 #>  [3087,]   59 #>  [3088,]   59 #>  [3089,]   59 #>  [3090,]   59 #>  [3091,]   59 #>  [3092,]   59 #>  [3093,]   59 #>  [3094,]   60 #>  [3095,]   59 #>  [3096,]   59 #>  [3097,]   59 #>  [3098,]   59 #>  [3099,]   59 #>  [3100,]   59 #>  [3101,]   61 #>  [3102,]   62 #>  [3103,]   61 #>  [3104,]   61 #>  [3105,]   61 #>  [3106,]   61 #>  [3107,]   61 #>  [3108,]   61 #>  [3109,]   62 #>  [3110,]   62 #>  [3111,]   61 #>  [3112,]   62 #>  [3113,]   62 #>  [3114,]   61 #>  [3115,]   61 #>  [3116,]   61 #>  [3117,]   62 #>  [3118,]   61 #>  [3119,]   61 #>  [3120,]   61 #>  [3121,]   62 #>  [3122,]   61 #>  [3123,]   61 #>  [3124,]   62 #>  [3125,]   61 #>  [3126,]   61 #>  [3127,]   61 #>  [3128,]   61 #>  [3129,]   62 #>  [3130,]   61 #>  [3131,]   61 #>  [3132,]   62 #>  [3133,]   62 #>  [3134,]   61 #>  [3135,]   61 #>  [3136,]   61 #>  [3137,]   61 #>  [3138,]   61 #>  [3139,]   61 #>  [3140,]   62 #>  [3141,]   61 #>  [3142,]   61 #>  [3143,]   61 #>  [3144,]   61 #>  [3145,]   61 #>  [3146,]   61 #>  [3147,]   61 #>  [3148,]   61 #>  [3149,]   61 #>  [3150,]   61 #>  [3151,]   61 #>  [3152,]   61 #>  [3153,]   62 #>  [3154,]   61 #>  [3155,]   61 #>  [3156,]   61 #>  [3157,]   61 #>  [3158,]   61 #>  [3159,]   61 #>  [3160,]   62 #>  [3161,]   62 #>  [3162,]   61 #>  [3163,]   62 #>  [3164,]   61 #>  [3165,]   61 #>  [3166,]   61 #>  [3167,]   61 #>  [3168,]   61 #>  [3169,]   61 #>  [3170,]   62 #>  [3171,]   61 #>  [3172,]   61 #>  [3173,]   61 #>  [3174,]   61 #>  [3175,]   62 #>  [3176,]   61 #>  [3177,]   61 #>  [3178,]   61 #>  [3179,]   61 #>  [3180,]   62 #>  [3181,]   62 #>  [3182,]   61 #>  [3183,]   62 #>  [3184,]   61 #>  [3185,]   61 #>  [3186,]   62 #>  [3187,]   61 #>  [3188,]   61 #>  [3189,]   61 #>  [3190,]   61 #>  [3191,]   61 #>  [3192,]   61 #>  [3193,]   61 #>  [3194,]   61 #>  [3195,]   61 #>  [3196,]   61 #>  [3197,]   61 #>  [3198,]   61 #>  [3199,]   61 #>  [3200,]   61 #>  [3201,]   63 #>  [3202,]   63 #>  [3203,]   63 #>  [3204,]   63 #>  [3205,]   63 #>  [3206,]   63 #>  [3207,]   63 #>  [3208,]   63 #>  [3209,]   64 #>  [3210,]   63 #>  [3211,]   63 #>  [3212,]   63 #>  [3213,]   64 #>  [3214,]   63 #>  [3215,]   63 #>  [3216,]   63 #>  [3217,]   64 #>  [3218,]   64 #>  [3219,]   63 #>  [3220,]   63 #>  [3221,]   63 #>  [3222,]   63 #>  [3223,]   63 #>  [3224,]   63 #>  [3225,]   63 #>  [3226,]   63 #>  [3227,]   64 #>  [3228,]   63 #>  [3229,]   63 #>  [3230,]   63 #>  [3231,]   63 #>  [3232,]   63 #>  [3233,]   63 #>  [3234,]   63 #>  [3235,]   63 #>  [3236,]   63 #>  [3237,]   63 #>  [3238,]   63 #>  [3239,]   63 #>  [3240,]   63 #>  [3241,]   63 #>  [3242,]   64 #>  [3243,]   63 #>  [3244,]   63 #>  [3245,]   63 #>  [3246,]   63 #>  [3247,]   63 #>  [3248,]   63 #>  [3249,]   63 #>  [3250,]   63 #>  [3251,]   64 #>  [3252,]   63 #>  [3253,]   64 #>  [3254,]   63 #>  [3255,]   63 #>  [3256,]   63 #>  [3257,]   63 #>  [3258,]   63 #>  [3259,]   63 #>  [3260,]   63 #>  [3261,]   63 #>  [3262,]   63 #>  [3263,]   63 #>  [3264,]   63 #>  [3265,]   64 #>  [3266,]   64 #>  [3267,]   63 #>  [3268,]   63 #>  [3269,]   63 #>  [3270,]   63 #>  [3271,]   63 #>  [3272,]   63 #>  [3273,]   63 #>  [3274,]   63 #>  [3275,]   63 #>  [3276,]   63 #>  [3277,]   63 #>  [3278,]   63 #>  [3279,]   64 #>  [3280,]   63 #>  [3281,]   63 #>  [3282,]   64 #>  [3283,]   63 #>  [3284,]   64 #>  [3285,]   63 #>  [3286,]   63 #>  [3287,]   63 #>  [3288,]   63 #>  [3289,]   63 #>  [3290,]   63 #>  [3291,]   64 #>  [3292,]   63 #>  [3293,]   64 #>  [3294,]   64 #>  [3295,]   63 #>  [3296,]   63 #>  [3297,]   63 #>  [3298,]   63 #>  [3299,]   63 #>  [3300,]   63 #>  [3301,]   66 #>  [3302,]   66 #>  [3303,]   66 #>  [3304,]   65 #>  [3305,]   66 #>  [3306,]   66 #>  [3307,]   66 #>  [3308,]   65 #>  [3309,]   65 #>  [3310,]   65 #>  [3311,]   66 #>  [3312,]   66 #>  [3313,]   66 #>  [3314,]   66 #>  [3315,]   66 #>  [3316,]   66 #>  [3317,]   66 #>  [3318,]   66 #>  [3319,]   66 #>  [3320,]   66 #>  [3321,]   66 #>  [3322,]   66 #>  [3323,]   66 #>  [3324,]   66 #>  [3325,]   66 #>  [3326,]   66 #>  [3327,]   66 #>  [3328,]   66 #>  [3329,]   66 #>  [3330,]   66 #>  [3331,]   66 #>  [3332,]   66 #>  [3333,]   66 #>  [3334,]   66 #>  [3335,]   66 #>  [3336,]   66 #>  [3337,]   66 #>  [3338,]   66 #>  [3339,]   66 #>  [3340,]   66 #>  [3341,]   66 #>  [3342,]   66 #>  [3343,]   65 #>  [3344,]   66 #>  [3345,]   66 #>  [3346,]   66 #>  [3347,]   66 #>  [3348,]   66 #>  [3349,]   66 #>  [3350,]   66 #>  [3351,]   65 #>  [3352,]   66 #>  [3353,]   66 #>  [3354,]   66 #>  [3355,]   66 #>  [3356,]   66 #>  [3357,]   66 #>  [3358,]   66 #>  [3359,]   66 #>  [3360,]   65 #>  [3361,]   66 #>  [3362,]   66 #>  [3363,]   66 #>  [3364,]   65 #>  [3365,]   66 #>  [3366,]   66 #>  [3367,]   65 #>  [3368,]   66 #>  [3369,]   66 #>  [3370,]   66 #>  [3371,]   66 #>  [3372,]   66 #>  [3373,]   66 #>  [3374,]   66 #>  [3375,]   66 #>  [3376,]   66 #>  [3377,]   66 #>  [3378,]   66 #>  [3379,]   66 #>  [3380,]   66 #>  [3381,]   66 #>  [3382,]   66 #>  [3383,]   66 #>  [3384,]   66 #>  [3385,]   65 #>  [3386,]   66 #>  [3387,]   66 #>  [3388,]   66 #>  [3389,]   66 #>  [3390,]   66 #>  [3391,]   65 #>  [3392,]   66 #>  [3393,]   66 #>  [3394,]   66 #>  [3395,]   65 #>  [3396,]   66 #>  [3397,]   66 #>  [3398,]   66 #>  [3399,]   66 #>  [3400,]   66 #>  [3401,]   67 #>  [3402,]   67 #>  [3403,]   67 #>  [3404,]   68 #>  [3405,]   67 #>  [3406,]   68 #>  [3407,]   67 #>  [3408,]   67 #>  [3409,]   68 #>  [3410,]   68 #>  [3411,]   68 #>  [3412,]   68 #>  [3413,]   67 #>  [3414,]   68 #>  [3415,]   68 #>  [3416,]   67 #>  [3417,]   67 #>  [3418,]   68 #>  [3419,]   68 #>  [3420,]   67 #>  [3421,]   68 #>  [3422,]   67 #>  [3423,]   67 #>  [3424,]   67 #>  [3425,]   67 #>  [3426,]   68 #>  [3427,]   68 #>  [3428,]   67 #>  [3429,]   67 #>  [3430,]   68 #>  [3431,]   68 #>  [3432,]   68 #>  [3433,]   68 #>  [3434,]   67 #>  [3435,]   67 #>  [3436,]   68 #>  [3437,]   67 #>  [3438,]   68 #>  [3439,]   67 #>  [3440,]   67 #>  [3441,]   68 #>  [3442,]   68 #>  [3443,]   67 #>  [3444,]   67 #>  [3445,]   67 #>  [3446,]   67 #>  [3447,]   67 #>  [3448,]   68 #>  [3449,]   67 #>  [3450,]   67 #>  [3451,]   67 #>  [3452,]   67 #>  [3453,]   67 #>  [3454,]   67 #>  [3455,]   67 #>  [3456,]   67 #>  [3457,]   67 #>  [3458,]   68 #>  [3459,]   67 #>  [3460,]   68 #>  [3461,]   68 #>  [3462,]   68 #>  [3463,]   67 #>  [3464,]   67 #>  [3465,]   67 #>  [3466,]   67 #>  [3467,]   67 #>  [3468,]   68 #>  [3469,]   68 #>  [3470,]   67 #>  [3471,]   67 #>  [3472,]   67 #>  [3473,]   67 #>  [3474,]   68 #>  [3475,]   68 #>  [3476,]   67 #>  [3477,]   67 #>  [3478,]   67 #>  [3479,]   67 #>  [3480,]   67 #>  [3481,]   67 #>  [3482,]   68 #>  [3483,]   67 #>  [3484,]   67 #>  [3485,]   68 #>  [3486,]   67 #>  [3487,]   67 #>  [3488,]   67 #>  [3489,]   67 #>  [3490,]   67 #>  [3491,]   67 #>  [3492,]   68 #>  [3493,]   68 #>  [3494,]   67 #>  [3495,]   67 #>  [3496,]   68 #>  [3497,]   68 #>  [3498,]   67 #>  [3499,]   68 #>  [3500,]   67 #>  [3501,]   69 #>  [3502,]   70 #>  [3503,]   69 #>  [3504,]   69 #>  [3505,]   69 #>  [3506,]   69 #>  [3507,]   69 #>  [3508,]   69 #>  [3509,]   70 #>  [3510,]   70 #>  [3511,]   69 #>  [3512,]   70 #>  [3513,]   70 #>  [3514,]   69 #>  [3515,]   69 #>  [3516,]   69 #>  [3517,]   70 #>  [3518,]   69 #>  [3519,]   69 #>  [3520,]   69 #>  [3521,]   70 #>  [3522,]   69 #>  [3523,]   69 #>  [3524,]   70 #>  [3525,]   69 #>  [3526,]   69 #>  [3527,]   69 #>  [3528,]   69 #>  [3529,]   70 #>  [3530,]   69 #>  [3531,]   69 #>  [3532,]   70 #>  [3533,]   70 #>  [3534,]   69 #>  [3535,]   69 #>  [3536,]   69 #>  [3537,]   69 #>  [3538,]   69 #>  [3539,]   69 #>  [3540,]   70 #>  [3541,]   69 #>  [3542,]   69 #>  [3543,]   69 #>  [3544,]   69 #>  [3545,]   69 #>  [3546,]   69 #>  [3547,]   69 #>  [3548,]   69 #>  [3549,]   69 #>  [3550,]   69 #>  [3551,]   69 #>  [3552,]   69 #>  [3553,]   70 #>  [3554,]   69 #>  [3555,]   69 #>  [3556,]   69 #>  [3557,]   69 #>  [3558,]   69 #>  [3559,]   69 #>  [3560,]   70 #>  [3561,]   70 #>  [3562,]   69 #>  [3563,]   70 #>  [3564,]   69 #>  [3565,]   69 #>  [3566,]   69 #>  [3567,]   69 #>  [3568,]   69 #>  [3569,]   69 #>  [3570,]   70 #>  [3571,]   69 #>  [3572,]   69 #>  [3573,]   69 #>  [3574,]   69 #>  [3575,]   70 #>  [3576,]   69 #>  [3577,]   69 #>  [3578,]   69 #>  [3579,]   69 #>  [3580,]   70 #>  [3581,]   70 #>  [3582,]   69 #>  [3583,]   70 #>  [3584,]   69 #>  [3585,]   69 #>  [3586,]   70 #>  [3587,]   69 #>  [3588,]   69 #>  [3589,]   69 #>  [3590,]   69 #>  [3591,]   69 #>  [3592,]   69 #>  [3593,]   69 #>  [3594,]   69 #>  [3595,]   69 #>  [3596,]   69 #>  [3597,]   69 #>  [3598,]   69 #>  [3599,]   69 #>  [3600,]   69 #>  [3601,]   72 #>  [3602,]   71 #>  [3603,]   71 #>  [3604,]   72 #>  [3605,]   72 #>  [3606,]   72 #>  [3607,]   71 #>  [3608,]   72 #>  [3609,]   72 #>  [3610,]   71 #>  [3611,]   72 #>  [3612,]   72 #>  [3613,]   71 #>  [3614,]   72 #>  [3615,]   72 #>  [3616,]   71 #>  [3617,]   71 #>  [3618,]   71 #>  [3619,]   71 #>  [3620,]   72 #>  [3621,]   71 #>  [3622,]   71 #>  [3623,]   71 #>  [3624,]   71 #>  [3625,]   71 #>  [3626,]   72 #>  [3627,]   71 #>  [3628,]   72 #>  [3629,]   71 #>  [3630,]   71 #>  [3631,]   71 #>  [3632,]   71 #>  [3633,]   72 #>  [3634,]   71 #>  [3635,]   71 #>  [3636,]   71 #>  [3637,]   71 #>  [3638,]   72 #>  [3639,]   71 #>  [3640,]   71 #>  [3641,]   72 #>  [3642,]   72 #>  [3643,]   72 #>  [3644,]   71 #>  [3645,]   72 #>  [3646,]   72 #>  [3647,]   71 #>  [3648,]   71 #>  [3649,]   71 #>  [3650,]   72 #>  [3651,]   72 #>  [3652,]   72 #>  [3653,]   72 #>  [3654,]   71 #>  [3655,]   72 #>  [3656,]   72 #>  [3657,]   72 #>  [3658,]   72 #>  [3659,]   71 #>  [3660,]   72 #>  [3661,]   72 #>  [3662,]   71 #>  [3663,]   72 #>  [3664,]   72 #>  [3665,]   72 #>  [3666,]   72 #>  [3667,]   72 #>  [3668,]   72 #>  [3669,]   71 #>  [3670,]   71 #>  [3671,]   72 #>  [3672,]   72 #>  [3673,]   72 #>  [3674,]   72 #>  [3675,]   72 #>  [3676,]   72 #>  [3677,]   71 #>  [3678,]   72 #>  [3679,]   71 #>  [3680,]   71 #>  [3681,]   72 #>  [3682,]   71 #>  [3683,]   71 #>  [3684,]   72 #>  [3685,]   71 #>  [3686,]   71 #>  [3687,]   72 #>  [3688,]   72 #>  [3689,]   72 #>  [3690,]   72 #>  [3691,]   72 #>  [3692,]   72 #>  [3693,]   71 #>  [3694,]   72 #>  [3695,]   71 #>  [3696,]   72 #>  [3697,]   72 #>  [3698,]   71 #>  [3699,]   72 #>  [3700,]   71 #>  [3701,]   74 #>  [3702,]   73 #>  [3703,]   73 #>  [3704,]   73 #>  [3705,]   74 #>  [3706,]   73 #>  [3707,]   73 #>  [3708,]   73 #>  [3709,]   73 #>  [3710,]   73 #>  [3711,]   73 #>  [3712,]   73 #>  [3713,]   73 #>  [3714,]   74 #>  [3715,]   74 #>  [3716,]   73 #>  [3717,]   73 #>  [3718,]   74 #>  [3719,]   73 #>  [3720,]   73 #>  [3721,]   73 #>  [3722,]   73 #>  [3723,]   73 #>  [3724,]   73 #>  [3725,]   73 #>  [3726,]   74 #>  [3727,]   74 #>  [3728,]   73 #>  [3729,]   73 #>  [3730,]   73 #>  [3731,]   74 #>  [3732,]   74 #>  [3733,]   73 #>  [3734,]   73 #>  [3735,]   73 #>  [3736,]   73 #>  [3737,]   73 #>  [3738,]   73 #>  [3739,]   73 #>  [3740,]   73 #>  [3741,]   73 #>  [3742,]   73 #>  [3743,]   74 #>  [3744,]   73 #>  [3745,]   73 #>  [3746,]   73 #>  [3747,]   73 #>  [3748,]   73 #>  [3749,]   73 #>  [3750,]   73 #>  [3751,]   73 #>  [3752,]   73 #>  [3753,]   73 #>  [3754,]   73 #>  [3755,]   73 #>  [3756,]   73 #>  [3757,]   73 #>  [3758,]   74 #>  [3759,]   74 #>  [3760,]   73 #>  [3761,]   74 #>  [3762,]   73 #>  [3763,]   73 #>  [3764,]   73 #>  [3765,]   73 #>  [3766,]   74 #>  [3767,]   73 #>  [3768,]   73 #>  [3769,]   73 #>  [3770,]   74 #>  [3771,]   74 #>  [3772,]   73 #>  [3773,]   73 #>  [3774,]   73 #>  [3775,]   74 #>  [3776,]   73 #>  [3777,]   73 #>  [3778,]   73 #>  [3779,]   74 #>  [3780,]   73 #>  [3781,]   73 #>  [3782,]   73 #>  [3783,]   73 #>  [3784,]   73 #>  [3785,]   73 #>  [3786,]   73 #>  [3787,]   74 #>  [3788,]   73 #>  [3789,]   73 #>  [3790,]   73 #>  [3791,]   74 #>  [3792,]   73 #>  [3793,]   73 #>  [3794,]   73 #>  [3795,]   74 #>  [3796,]   73 #>  [3797,]   73 #>  [3798,]   73 #>  [3799,]   73 #>  [3800,]   74 #>  [3801,]   75 #>  [3802,]   75 #>  [3803,]   76 #>  [3804,]   75 #>  [3805,]   75 #>  [3806,]   76 #>  [3807,]   75 #>  [3808,]   75 #>  [3809,]   75 #>  [3810,]   75 #>  [3811,]   75 #>  [3812,]   76 #>  [3813,]   75 #>  [3814,]   75 #>  [3815,]   75 #>  [3816,]   75 #>  [3817,]   75 #>  [3818,]   75 #>  [3819,]   76 #>  [3820,]   76 #>  [3821,]   75 #>  [3822,]   75 #>  [3823,]   75 #>  [3824,]   75 #>  [3825,]   76 #>  [3826,]   75 #>  [3827,]   75 #>  [3828,]   76 #>  [3829,]   75 #>  [3830,]   75 #>  [3831,]   75 #>  [3832,]   75 #>  [3833,]   76 #>  [3834,]   76 #>  [3835,]   75 #>  [3836,]   75 #>  [3837,]   75 #>  [3838,]   75 #>  [3839,]   75 #>  [3840,]   75 #>  [3841,]   75 #>  [3842,]   75 #>  [3843,]   75 #>  [3844,]   75 #>  [3845,]   75 #>  [3846,]   75 #>  [3847,]   75 #>  [3848,]   75 #>  [3849,]   75 #>  [3850,]   75 #>  [3851,]   75 #>  [3852,]   75 #>  [3853,]   75 #>  [3854,]   75 #>  [3855,]   75 #>  [3856,]   75 #>  [3857,]   75 #>  [3858,]   75 #>  [3859,]   75 #>  [3860,]   76 #>  [3861,]   75 #>  [3862,]   75 #>  [3863,]   75 #>  [3864,]   75 #>  [3865,]   76 #>  [3866,]   75 #>  [3867,]   75 #>  [3868,]   75 #>  [3869,]   75 #>  [3870,]   76 #>  [3871,]   75 #>  [3872,]   75 #>  [3873,]   76 #>  [3874,]   75 #>  [3875,]   75 #>  [3876,]   75 #>  [3877,]   75 #>  [3878,]   75 #>  [3879,]   75 #>  [3880,]   75 #>  [3881,]   75 #>  [3882,]   75 #>  [3883,]   75 #>  [3884,]   75 #>  [3885,]   75 #>  [3886,]   75 #>  [3887,]   75 #>  [3888,]   75 #>  [3889,]   75 #>  [3890,]   75 #>  [3891,]   75 #>  [3892,]   75 #>  [3893,]   76 #>  [3894,]   75 #>  [3895,]   75 #>  [3896,]   75 #>  [3897,]   76 #>  [3898,]   76 #>  [3899,]   75 #>  [3900,]   75 #>  [3901,]   77 #>  [3902,]   78 #>  [3903,]   78 #>  [3904,]   77 #>  [3905,]   77 #>  [3906,]   78 #>  [3907,]   78 #>  [3908,]   77 #>  [3909,]   77 #>  [3910,]   78 #>  [3911,]   77 #>  [3912,]   78 #>  [3913,]   77 #>  [3914,]   77 #>  [3915,]   77 #>  [3916,]   77 #>  [3917,]   77 #>  [3918,]   78 #>  [3919,]   78 #>  [3920,]   78 #>  [3921,]   77 #>  [3922,]   77 #>  [3923,]   78 #>  [3924,]   77 #>  [3925,]   78 #>  [3926,]   77 #>  [3927,]   77 #>  [3928,]   78 #>  [3929,]   78 #>  [3930,]   77 #>  [3931,]   78 #>  [3932,]   78 #>  [3933,]   78 #>  [3934,]   78 #>  [3935,]   77 #>  [3936,]   77 #>  [3937,]   77 #>  [3938,]   77 #>  [3939,]   78 #>  [3940,]   78 #>  [3941,]   77 #>  [3942,]   78 #>  [3943,]   77 #>  [3944,]   77 #>  [3945,]   77 #>  [3946,]   77 #>  [3947,]   78 #>  [3948,]   78 #>  [3949,]   77 #>  [3950,]   78 #>  [3951,]   77 #>  [3952,]   77 #>  [3953,]   78 #>  [3954,]   77 #>  [3955,]   77 #>  [3956,]   78 #>  [3957,]   78 #>  [3958,]   77 #>  [3959,]   77 #>  [3960,]   78 #>  [3961,]   78 #>  [3962,]   77 #>  [3963,]   78 #>  [3964,]   78 #>  [3965,]   78 #>  [3966,]   77 #>  [3967,]   77 #>  [3968,]   77 #>  [3969,]   77 #>  [3970,]   78 #>  [3971,]   78 #>  [3972,]   77 #>  [3973,]   78 #>  [3974,]   77 #>  [3975,]   78 #>  [3976,]   77 #>  [3977,]   78 #>  [3978,]   78 #>  [3979,]   77 #>  [3980,]   77 #>  [3981,]   77 #>  [3982,]   77 #>  [3983,]   77 #>  [3984,]   78 #>  [3985,]   77 #>  [3986,]   78 #>  [3987,]   77 #>  [3988,]   77 #>  [3989,]   77 #>  [3990,]   77 #>  [3991,]   77 #>  [3992,]   77 #>  [3993,]   78 #>  [3994,]   78 #>  [3995,]   77 #>  [3996,]   77 #>  [3997,]   78 #>  [3998,]   78 #>  [3999,]   77 #>  [4000,]   78 #>  [4001,]   79 #>  [4002,]   79 #>  [4003,]   79 #>  [4004,]   79 #>  [4005,]   79 #>  [4006,]   79 #>  [4007,]   79 #>  [4008,]   79 #>  [4009,]   79 #>  [4010,]   79 #>  [4011,]   79 #>  [4012,]   79 #>  [4013,]   79 #>  [4014,]   79 #>  [4015,]   79 #>  [4016,]   79 #>  [4017,]   79 #>  [4018,]   79 #>  [4019,]   79 #>  [4020,]   79 #>  [4021,]   79 #>  [4022,]   79 #>  [4023,]   79 #>  [4024,]   79 #>  [4025,]   79 #>  [4026,]   79 #>  [4027,]   79 #>  [4028,]   79 #>  [4029,]   79 #>  [4030,]   79 #>  [4031,]   79 #>  [4032,]   79 #>  [4033,]   79 #>  [4034,]   79 #>  [4035,]   79 #>  [4036,]   79 #>  [4037,]   79 #>  [4038,]   79 #>  [4039,]   79 #>  [4040,]   79 #>  [4041,]   79 #>  [4042,]   79 #>  [4043,]   79 #>  [4044,]   79 #>  [4045,]   79 #>  [4046,]   79 #>  [4047,]   79 #>  [4048,]   79 #>  [4049,]   79 #>  [4050,]   79 #>  [4051,]   79 #>  [4052,]   79 #>  [4053,]   79 #>  [4054,]   79 #>  [4055,]   79 #>  [4056,]   79 #>  [4057,]   79 #>  [4058,]   79 #>  [4059,]   79 #>  [4060,]   79 #>  [4061,]   79 #>  [4062,]   79 #>  [4063,]   79 #>  [4064,]   79 #>  [4065,]   79 #>  [4066,]   79 #>  [4067,]   79 #>  [4068,]   79 #>  [4069,]   79 #>  [4070,]   79 #>  [4071,]   79 #>  [4072,]   79 #>  [4073,]   79 #>  [4074,]   79 #>  [4075,]   79 #>  [4076,]   79 #>  [4077,]   79 #>  [4078,]   79 #>  [4079,]   79 #>  [4080,]   79 #>  [4081,]   79 #>  [4082,]   79 #>  [4083,]   79 #>  [4084,]   79 #>  [4085,]   79 #>  [4086,]   79 #>  [4087,]   79 #>  [4088,]   79 #>  [4089,]   79 #>  [4090,]   79 #>  [4091,]   79 #>  [4092,]   79 #>  [4093,]   79 #>  [4094,]   79 #>  [4095,]   79 #>  [4096,]   79 #>  [4097,]   79 #>  [4098,]   79 #>  [4099,]   79 #>  [4100,]   79 #>  [4101,]   81 #>  [4102,]   81 #>  [4103,]   81 #>  [4104,]   81 #>  [4105,]   81 #>  [4106,]   81 #>  [4107,]   81 #>  [4108,]   81 #>  [4109,]   81 #>  [4110,]   81 #>  [4111,]   81 #>  [4112,]   81 #>  [4113,]   81 #>  [4114,]   81 #>  [4115,]   81 #>  [4116,]   81 #>  [4117,]   81 #>  [4118,]   81 #>  [4119,]   81 #>  [4120,]   81 #>  [4121,]   81 #>  [4122,]   81 #>  [4123,]   81 #>  [4124,]   81 #>  [4125,]   80 #>  [4126,]   81 #>  [4127,]   81 #>  [4128,]   81 #>  [4129,]   81 #>  [4130,]   81 #>  [4131,]   81 #>  [4132,]   81 #>  [4133,]   81 #>  [4134,]   81 #>  [4135,]   81 #>  [4136,]   81 #>  [4137,]   81 #>  [4138,]   81 #>  [4139,]   81 #>  [4140,]   81 #>  [4141,]   81 #>  [4142,]   81 #>  [4143,]   81 #>  [4144,]   81 #>  [4145,]   81 #>  [4146,]   81 #>  [4147,]   81 #>  [4148,]   81 #>  [4149,]   81 #>  [4150,]   81 #>  [4151,]   81 #>  [4152,]   81 #>  [4153,]   81 #>  [4154,]   81 #>  [4155,]   81 #>  [4156,]   80 #>  [4157,]   81 #>  [4158,]   81 #>  [4159,]   81 #>  [4160,]   81 #>  [4161,]   81 #>  [4162,]   81 #>  [4163,]   81 #>  [4164,]   81 #>  [4165,]   80 #>  [4166,]   81 #>  [4167,]   81 #>  [4168,]   81 #>  [4169,]   81 #>  [4170,]   81 #>  [4171,]   81 #>  [4172,]   81 #>  [4173,]   81 #>  [4174,]   81 #>  [4175,]   81 #>  [4176,]   81 #>  [4177,]   81 #>  [4178,]   81 #>  [4179,]   81 #>  [4180,]   80 #>  [4181,]   81 #>  [4182,]   81 #>  [4183,]   81 #>  [4184,]   81 #>  [4185,]   80 #>  [4186,]   81 #>  [4187,]   81 #>  [4188,]   81 #>  [4189,]   80 #>  [4190,]   81 #>  [4191,]   81 #>  [4192,]   81 #>  [4193,]   81 #>  [4194,]   81 #>  [4195,]   81 #>  [4196,]   81 #>  [4197,]   81 #>  [4198,]   81 #>  [4199,]   81 #>  [4200,]   81 #>  [4201,]   83 #>  [4202,]   82 #>  [4203,]   82 #>  [4204,]   83 #>  [4205,]   82 #>  [4206,]   82 #>  [4207,]   83 #>  [4208,]   82 #>  [4209,]   83 #>  [4210,]   83 #>  [4211,]   82 #>  [4212,]   82 #>  [4213,]   83 #>  [4214,]   83 #>  [4215,]   82 #>  [4216,]   83 #>  [4217,]   82 #>  [4218,]   82 #>  [4219,]   82 #>  [4220,]   83 #>  [4221,]   82 #>  [4222,]   83 #>  [4223,]   82 #>  [4224,]   83 #>  [4225,]   83 #>  [4226,]   82 #>  [4227,]   82 #>  [4228,]   83 #>  [4229,]   82 #>  [4230,]   82 #>  [4231,]   82 #>  [4232,]   82 #>  [4233,]   82 #>  [4234,]   82 #>  [4235,]   82 #>  [4236,]   83 #>  [4237,]   82 #>  [4238,]   82 #>  [4239,]   83 #>  [4240,]   82 #>  [4241,]   82 #>  [4242,]   82 #>  [4243,]   82 #>  [4244,]   82 #>  [4245,]   83 #>  [4246,]   82 #>  [4247,]   82 #>  [4248,]   82 #>  [4249,]   83 #>  [4250,]   83 #>  [4251,]   82 #>  [4252,]   83 #>  [4253,]   83 #>  [4254,]   83 #>  [4255,]   83 #>  [4256,]   82 #>  [4257,]   83 #>  [4258,]   83 #>  [4259,]   83 #>  [4260,]   82 #>  [4261,]   82 #>  [4262,]   82 #>  [4263,]   82 #>  [4264,]   82 #>  [4265,]   82 #>  [4266,]   82 #>  [4267,]   83 #>  [4268,]   82 #>  [4269,]   82 #>  [4270,]   82 #>  [4271,]   82 #>  [4272,]   83 #>  [4273,]   83 #>  [4274,]   82 #>  [4275,]   82 #>  [4276,]   83 #>  [4277,]   82 #>  [4278,]   82 #>  [4279,]   82 #>  [4280,]   82 #>  [4281,]   82 #>  [4282,]   82 #>  [4283,]   82 #>  [4284,]   82 #>  [4285,]   83 #>  [4286,]   83 #>  [4287,]   83 #>  [4288,]   83 #>  [4289,]   82 #>  [4290,]   83 #>  [4291,]   83 #>  [4292,]   82 #>  [4293,]   82 #>  [4294,]   82 #>  [4295,]   82 #>  [4296,]   82 #>  [4297,]   82 #>  [4298,]   82 #>  [4299,]   82 #>  [4300,]   82 #>  [4301,]   85 #>  [4302,]   85 #>  [4303,]   84 #>  [4304,]   84 #>  [4305,]   84 #>  [4306,]   85 #>  [4307,]   85 #>  [4308,]   84 #>  [4309,]   84 #>  [4310,]   84 #>  [4311,]   85 #>  [4312,]   85 #>  [4313,]   85 #>  [4314,]   85 #>  [4315,]   85 #>  [4316,]   85 #>  [4317,]   85 #>  [4318,]   84 #>  [4319,]   85 #>  [4320,]   84 #>  [4321,]   85 #>  [4322,]   85 #>  [4323,]   84 #>  [4324,]   84 #>  [4325,]   85 #>  [4326,]   85 #>  [4327,]   85 #>  [4328,]   85 #>  [4329,]   85 #>  [4330,]   84 #>  [4331,]   84 #>  [4332,]   84 #>  [4333,]   85 #>  [4334,]   84 #>  [4335,]   85 #>  [4336,]   84 #>  [4337,]   85 #>  [4338,]   85 #>  [4339,]   84 #>  [4340,]   85 #>  [4341,]   85 #>  [4342,]   84 #>  [4343,]   84 #>  [4344,]   85 #>  [4345,]   84 #>  [4346,]   85 #>  [4347,]   85 #>  [4348,]   84 #>  [4349,]   84 #>  [4350,]   85 #>  [4351,]   84 #>  [4352,]   85 #>  [4353,]   84 #>  [4354,]   85 #>  [4355,]   85 #>  [4356,]   84 #>  [4357,]   85 #>  [4358,]   85 #>  [4359,]   85 #>  [4360,]   84 #>  [4361,]   85 #>  [4362,]   84 #>  [4363,]   85 #>  [4364,]   84 #>  [4365,]   84 #>  [4366,]   84 #>  [4367,]   84 #>  [4368,]   85 #>  [4369,]   85 #>  [4370,]   85 #>  [4371,]   85 #>  [4372,]   84 #>  [4373,]   85 #>  [4374,]   85 #>  [4375,]   85 #>  [4376,]   85 #>  [4377,]   85 #>  [4378,]   84 #>  [4379,]   85 #>  [4380,]   85 #>  [4381,]   85 #>  [4382,]   85 #>  [4383,]   85 #>  [4384,]   85 #>  [4385,]   84 #>  [4386,]   85 #>  [4387,]   85 #>  [4388,]   84 #>  [4389,]   84 #>  [4390,]   85 #>  [4391,]   84 #>  [4392,]   85 #>  [4393,]   85 #>  [4394,]   85 #>  [4395,]   84 #>  [4396,]   85 #>  [4397,]   85 #>  [4398,]   85 #>  [4399,]   85 #>  [4400,]   85 #>  [4401,]   87 #>  [4402,]   86 #>  [4403,]   86 #>  [4404,]   87 #>  [4405,]   86 #>  [4406,]   86 #>  [4407,]   87 #>  [4408,]   87 #>  [4409,]   87 #>  [4410,]   87 #>  [4411,]   86 #>  [4412,]   86 #>  [4413,]   87 #>  [4414,]   86 #>  [4415,]   87 #>  [4416,]   87 #>  [4417,]   87 #>  [4418,]   87 #>  [4419,]   86 #>  [4420,]   86 #>  [4421,]   87 #>  [4422,]   86 #>  [4423,]   87 #>  [4424,]   86 #>  [4425,]   87 #>  [4426,]   86 #>  [4427,]   87 #>  [4428,]   87 #>  [4429,]   86 #>  [4430,]   86 #>  [4431,]   86 #>  [4432,]   86 #>  [4433,]   86 #>  [4434,]   86 #>  [4435,]   86 #>  [4436,]   86 #>  [4437,]   86 #>  [4438,]   86 #>  [4439,]   87 #>  [4440,]   86 #>  [4441,]   86 #>  [4442,]   86 #>  [4443,]   87 #>  [4444,]   86 #>  [4445,]   87 #>  [4446,]   87 #>  [4447,]   87 #>  [4448,]   86 #>  [4449,]   86 #>  [4450,]   86 #>  [4451,]   86 #>  [4452,]   86 #>  [4453,]   87 #>  [4454,]   86 #>  [4455,]   86 #>  [4456,]   87 #>  [4457,]   86 #>  [4458,]   86 #>  [4459,]   86 #>  [4460,]   86 #>  [4461,]   87 #>  [4462,]   86 #>  [4463,]   86 #>  [4464,]   87 #>  [4465,]   86 #>  [4466,]   86 #>  [4467,]   86 #>  [4468,]   86 #>  [4469,]   86 #>  [4470,]   87 #>  [4471,]   87 #>  [4472,]   87 #>  [4473,]   87 #>  [4474,]   87 #>  [4475,]   87 #>  [4476,]   87 #>  [4477,]   87 #>  [4478,]   86 #>  [4479,]   86 #>  [4480,]   86 #>  [4481,]   86 #>  [4482,]   87 #>  [4483,]   86 #>  [4484,]   87 #>  [4485,]   86 #>  [4486,]   86 #>  [4487,]   86 #>  [4488,]   87 #>  [4489,]   86 #>  [4490,]   86 #>  [4491,]   86 #>  [4492,]   86 #>  [4493,]   86 #>  [4494,]   87 #>  [4495,]   87 #>  [4496,]   86 #>  [4497,]   86 #>  [4498,]   86 #>  [4499,]   86 #>  [4500,]   87 #>  [4501,]   88 #>  [4502,]   88 #>  [4503,]   88 #>  [4504,]   89 #>  [4505,]   88 #>  [4506,]   88 #>  [4507,]   88 #>  [4508,]   88 #>  [4509,]   89 #>  [4510,]   88 #>  [4511,]   89 #>  [4512,]   89 #>  [4513,]   88 #>  [4514,]   89 #>  [4515,]   89 #>  [4516,]   88 #>  [4517,]   88 #>  [4518,]   89 #>  [4519,]   89 #>  [4520,]   88 #>  [4521,]   89 #>  [4522,]   88 #>  [4523,]   88 #>  [4524,]   88 #>  [4525,]   88 #>  [4526,]   89 #>  [4527,]   89 #>  [4528,]   88 #>  [4529,]   88 #>  [4530,]   89 #>  [4531,]   89 #>  [4532,]   88 #>  [4533,]   89 #>  [4534,]   88 #>  [4535,]   88 #>  [4536,]   89 #>  [4537,]   88 #>  [4538,]   89 #>  [4539,]   88 #>  [4540,]   88 #>  [4541,]   89 #>  [4542,]   89 #>  [4543,]   88 #>  [4544,]   88 #>  [4545,]   88 #>  [4546,]   88 #>  [4547,]   88 #>  [4548,]   89 #>  [4549,]   88 #>  [4550,]   88 #>  [4551,]   88 #>  [4552,]   88 #>  [4553,]   88 #>  [4554,]   88 #>  [4555,]   88 #>  [4556,]   88 #>  [4557,]   88 #>  [4558,]   89 #>  [4559,]   88 #>  [4560,]   89 #>  [4561,]   89 #>  [4562,]   89 #>  [4563,]   88 #>  [4564,]   88 #>  [4565,]   88 #>  [4566,]   88 #>  [4567,]   88 #>  [4568,]   89 #>  [4569,]   89 #>  [4570,]   88 #>  [4571,]   88 #>  [4572,]   88 #>  [4573,]   88 #>  [4574,]   89 #>  [4575,]   89 #>  [4576,]   88 #>  [4577,]   88 #>  [4578,]   88 #>  [4579,]   88 #>  [4580,]   88 #>  [4581,]   88 #>  [4582,]   89 #>  [4583,]   88 #>  [4584,]   88 #>  [4585,]   89 #>  [4586,]   88 #>  [4587,]   88 #>  [4588,]   88 #>  [4589,]   88 #>  [4590,]   88 #>  [4591,]   88 #>  [4592,]   89 #>  [4593,]   89 #>  [4594,]   88 #>  [4595,]   88 #>  [4596,]   89 #>  [4597,]   89 #>  [4598,]   88 #>  [4599,]   89 #>  [4600,]   88 #>  [4601,]   90 #>  [4602,]   90 #>  [4603,]   90 #>  [4604,]   90 #>  [4605,]   90 #>  [4606,]   90 #>  [4607,]   90 #>  [4608,]   90 #>  [4609,]   90 #>  [4610,]   90 #>  [4611,]   90 #>  [4612,]   90 #>  [4613,]   90 #>  [4614,]   90 #>  [4615,]   90 #>  [4616,]   90 #>  [4617,]   90 #>  [4618,]   90 #>  [4619,]   90 #>  [4620,]   90 #>  [4621,]   90 #>  [4622,]   90 #>  [4623,]   90 #>  [4624,]   90 #>  [4625,]   90 #>  [4626,]   90 #>  [4627,]   90 #>  [4628,]   90 #>  [4629,]   90 #>  [4630,]   90 #>  [4631,]   90 #>  [4632,]   90 #>  [4633,]   90 #>  [4634,]   90 #>  [4635,]   90 #>  [4636,]   90 #>  [4637,]   90 #>  [4638,]   90 #>  [4639,]   90 #>  [4640,]   90 #>  [4641,]   90 #>  [4642,]   90 #>  [4643,]   90 #>  [4644,]   90 #>  [4645,]   90 #>  [4646,]   90 #>  [4647,]   90 #>  [4648,]   90 #>  [4649,]   90 #>  [4650,]   90 #>  [4651,]   90 #>  [4652,]   90 #>  [4653,]   90 #>  [4654,]   90 #>  [4655,]   90 #>  [4656,]   90 #>  [4657,]   90 #>  [4658,]   90 #>  [4659,]   90 #>  [4660,]   90 #>  [4661,]   90 #>  [4662,]   90 #>  [4663,]   90 #>  [4664,]   90 #>  [4665,]   90 #>  [4666,]   90 #>  [4667,]   90 #>  [4668,]   90 #>  [4669,]   90 #>  [4670,]   90 #>  [4671,]   90 #>  [4672,]   90 #>  [4673,]   90 #>  [4674,]   90 #>  [4675,]   90 #>  [4676,]   90 #>  [4677,]   90 #>  [4678,]   90 #>  [4679,]   90 #>  [4680,]   90 #>  [4681,]   90 #>  [4682,]   90 #>  [4683,]   90 #>  [4684,]   90 #>  [4685,]   90 #>  [4686,]   90 #>  [4687,]   90 #>  [4688,]   90 #>  [4689,]   90 #>  [4690,]   90 #>  [4691,]   90 #>  [4692,]   90 #>  [4693,]   90 #>  [4694,]   90 #>  [4695,]   90 #>  [4696,]   90 #>  [4697,]   90 #>  [4698,]   90 #>  [4699,]   90 #>  [4700,]   90 #>  [4701,]   92 #>  [4702,]   92 #>  [4703,]   91 #>  [4704,]   92 #>  [4705,]   92 #>  [4706,]   92 #>  [4707,]   91 #>  [4708,]   92 #>  [4709,]   92 #>  [4710,]   92 #>  [4711,]   92 #>  [4712,]   92 #>  [4713,]   92 #>  [4714,]   92 #>  [4715,]   92 #>  [4716,]   92 #>  [4717,]   92 #>  [4718,]   92 #>  [4719,]   92 #>  [4720,]   92 #>  [4721,]   92 #>  [4722,]   92 #>  [4723,]   92 #>  [4724,]   92 #>  [4725,]   92 #>  [4726,]   92 #>  [4727,]   92 #>  [4728,]   92 #>  [4729,]   92 #>  [4730,]   92 #>  [4731,]   92 #>  [4732,]   92 #>  [4733,]   92 #>  [4734,]   92 #>  [4735,]   92 #>  [4736,]   92 #>  [4737,]   92 #>  [4738,]   92 #>  [4739,]   92 #>  [4740,]   92 #>  [4741,]   92 #>  [4742,]   92 #>  [4743,]   92 #>  [4744,]   92 #>  [4745,]   92 #>  [4746,]   92 #>  [4747,]   92 #>  [4748,]   92 #>  [4749,]   91 #>  [4750,]   92 #>  [4751,]   92 #>  [4752,]   92 #>  [4753,]   91 #>  [4754,]   92 #>  [4755,]   91 #>  [4756,]   91 #>  [4757,]   92 #>  [4758,]   92 #>  [4759,]   92 #>  [4760,]   92 #>  [4761,]   92 #>  [4762,]   92 #>  [4763,]   92 #>  [4764,]   92 #>  [4765,]   92 #>  [4766,]   91 #>  [4767,]   92 #>  [4768,]   92 #>  [4769,]   92 #>  [4770,]   92 #>  [4771,]   92 #>  [4772,]   92 #>  [4773,]   92 #>  [4774,]   92 #>  [4775,]   92 #>  [4776,]   92 #>  [4777,]   92 #>  [4778,]   92 #>  [4779,]   92 #>  [4780,]   92 #>  [4781,]   92 #>  [4782,]   92 #>  [4783,]   92 #>  [4784,]   92 #>  [4785,]   92 #>  [4786,]   92 #>  [4787,]   92 #>  [4788,]   92 #>  [4789,]   92 #>  [4790,]   92 #>  [4791,]   92 #>  [4792,]   92 #>  [4793,]   92 #>  [4794,]   92 #>  [4795,]   92 #>  [4796,]   92 #>  [4797,]   92 #>  [4798,]   92 #>  [4799,]   92 #>  [4800,]   92 #>  [4801,]   94 #>  [4802,]   94 #>  [4803,]   94 #>  [4804,]   94 #>  [4805,]   94 #>  [4806,]   94 #>  [4807,]   94 #>  [4808,]   94 #>  [4809,]   94 #>  [4810,]   94 #>  [4811,]   94 #>  [4812,]   94 #>  [4813,]   94 #>  [4814,]   94 #>  [4815,]   93 #>  [4816,]   94 #>  [4817,]   93 #>  [4818,]   94 #>  [4819,]   94 #>  [4820,]   94 #>  [4821,]   94 #>  [4822,]   94 #>  [4823,]   94 #>  [4824,]   94 #>  [4825,]   94 #>  [4826,]   94 #>  [4827,]   94 #>  [4828,]   94 #>  [4829,]   94 #>  [4830,]   94 #>  [4831,]   93 #>  [4832,]   94 #>  [4833,]   94 #>  [4834,]   93 #>  [4835,]   94 #>  [4836,]   94 #>  [4837,]   93 #>  [4838,]   94 #>  [4839,]   94 #>  [4840,]   94 #>  [4841,]   94 #>  [4842,]   93 #>  [4843,]   93 #>  [4844,]   93 #>  [4845,]   94 #>  [4846,]   94 #>  [4847,]   94 #>  [4848,]   93 #>  [4849,]   94 #>  [4850,]   94 #>  [4851,]   94 #>  [4852,]   94 #>  [4853,]   94 #>  [4854,]   94 #>  [4855,]   94 #>  [4856,]   94 #>  [4857,]   94 #>  [4858,]   94 #>  [4859,]   94 #>  [4860,]   94 #>  [4861,]   94 #>  [4862,]   94 #>  [4863,]   93 #>  [4864,]   94 #>  [4865,]   94 #>  [4866,]   94 #>  [4867,]   94 #>  [4868,]   94 #>  [4869,]   94 #>  [4870,]   93 #>  [4871,]   94 #>  [4872,]   94 #>  [4873,]   94 #>  [4874,]   94 #>  [4875,]   93 #>  [4876,]   94 #>  [4877,]   94 #>  [4878,]   93 #>  [4879,]   93 #>  [4880,]   94 #>  [4881,]   94 #>  [4882,]   94 #>  [4883,]   94 #>  [4884,]   94 #>  [4885,]   94 #>  [4886,]   94 #>  [4887,]   94 #>  [4888,]   94 #>  [4889,]   94 #>  [4890,]   94 #>  [4891,]   94 #>  [4892,]   94 #>  [4893,]   94 #>  [4894,]   94 #>  [4895,]   93 #>  [4896,]   94 #>  [4897,]   94 #>  [4898,]   94 #>  [4899,]   94 #>  [4900,]   93 #>  [4901,]   96 #>  [4902,]   96 #>  [4903,]   96 #>  [4904,]   96 #>  [4905,]   96 #>  [4906,]   96 #>  [4907,]   96 #>  [4908,]   96 #>  [4909,]   96 #>  [4910,]   96 #>  [4911,]   96 #>  [4912,]   96 #>  [4913,]   96 #>  [4914,]   96 #>  [4915,]   95 #>  [4916,]   96 #>  [4917,]   96 #>  [4918,]   96 #>  [4919,]   96 #>  [4920,]   96 #>  [4921,]   96 #>  [4922,]   96 #>  [4923,]   96 #>  [4924,]   96 #>  [4925,]   96 #>  [4926,]   96 #>  [4927,]   96 #>  [4928,]   96 #>  [4929,]   96 #>  [4930,]   96 #>  [4931,]   95 #>  [4932,]   96 #>  [4933,]   96 #>  [4934,]   95 #>  [4935,]   96 #>  [4936,]   96 #>  [4937,]   96 #>  [4938,]   96 #>  [4939,]   96 #>  [4940,]   96 #>  [4941,]   96 #>  [4942,]   95 #>  [4943,]   95 #>  [4944,]   96 #>  [4945,]   96 #>  [4946,]   96 #>  [4947,]   96 #>  [4948,]   96 #>  [4949,]   96 #>  [4950,]   96 #>  [4951,]   96 #>  [4952,]   96 #>  [4953,]   96 #>  [4954,]   96 #>  [4955,]   96 #>  [4956,]   96 #>  [4957,]   96 #>  [4958,]   96 #>  [4959,]   96 #>  [4960,]   96 #>  [4961,]   96 #>  [4962,]   96 #>  [4963,]   95 #>  [4964,]   96 #>  [4965,]   96 #>  [4966,]   96 #>  [4967,]   96 #>  [4968,]   96 #>  [4969,]   96 #>  [4970,]   96 #>  [4971,]   96 #>  [4972,]   96 #>  [4973,]   96 #>  [4974,]   96 #>  [4975,]   95 #>  [4976,]   96 #>  [4977,]   96 #>  [4978,]   96 #>  [4979,]   96 #>  [4980,]   96 #>  [4981,]   96 #>  [4982,]   96 #>  [4983,]   96 #>  [4984,]   96 #>  [4985,]   96 #>  [4986,]   96 #>  [4987,]   96 #>  [4988,]   96 #>  [4989,]   96 #>  [4990,]   96 #>  [4991,]   96 #>  [4992,]   96 #>  [4993,]   96 #>  [4994,]   96 #>  [4995,]   96 #>  [4996,]   96 #>  [4997,]   96 #>  [4998,]   96 #>  [4999,]   96 #>  [5000,]   96 #>  [5001,]   98 #>  [5002,]   98 #>  [5003,]   97 #>  [5004,]   98 #>  [5005,]   98 #>  [5006,]   98 #>  [5007,]   97 #>  [5008,]   98 #>  [5009,]   98 #>  [5010,]   98 #>  [5011,]   98 #>  [5012,]   97 #>  [5013,]   98 #>  [5014,]   98 #>  [5015,]   98 #>  [5016,]   98 #>  [5017,]   98 #>  [5018,]   98 #>  [5019,]   98 #>  [5020,]   98 #>  [5021,]   98 #>  [5022,]   98 #>  [5023,]   98 #>  [5024,]   98 #>  [5025,]   98 #>  [5026,]   98 #>  [5027,]   98 #>  [5028,]   98 #>  [5029,]   98 #>  [5030,]   98 #>  [5031,]   97 #>  [5032,]   98 #>  [5033,]   98 #>  [5034,]   98 #>  [5035,]   98 #>  [5036,]   98 #>  [5037,]   98 #>  [5038,]   98 #>  [5039,]   98 #>  [5040,]   98 #>  [5041,]   98 #>  [5042,]   98 #>  [5043,]   98 #>  [5044,]   98 #>  [5045,]   98 #>  [5046,]   98 #>  [5047,]   98 #>  [5048,]   98 #>  [5049,]   98 #>  [5050,]   98 #>  [5051,]   98 #>  [5052,]   97 #>  [5053,]   98 #>  [5054,]   98 #>  [5055,]   98 #>  [5056,]   98 #>  [5057,]   98 #>  [5058,]   98 #>  [5059,]   97 #>  [5060,]   97 #>  [5061,]   98 #>  [5062,]   98 #>  [5063,]   98 #>  [5064,]   98 #>  [5065,]   98 #>  [5066,]   98 #>  [5067,]   98 #>  [5068,]   98 #>  [5069,]   98 #>  [5070,]   98 #>  [5071,]   98 #>  [5072,]   98 #>  [5073,]   98 #>  [5074,]   98 #>  [5075,]   98 #>  [5076,]   98 #>  [5077,]   98 #>  [5078,]   98 #>  [5079,]   98 #>  [5080,]   98 #>  [5081,]   98 #>  [5082,]   98 #>  [5083,]   98 #>  [5084,]   98 #>  [5085,]   98 #>  [5086,]   98 #>  [5087,]   98 #>  [5088,]   98 #>  [5089,]   98 #>  [5090,]   98 #>  [5091,]   98 #>  [5092,]   98 #>  [5093,]   98 #>  [5094,]   98 #>  [5095,]   98 #>  [5096,]   98 #>  [5097,]   97 #>  [5098,]   98 #>  [5099,]   98 #>  [5100,]   98 #>  [5101,]  100 #>  [5102,]  100 #>  [5103,]  100 #>  [5104,]   99 #>  [5105,]  100 #>  [5106,]  100 #>  [5107,]  100 #>  [5108,]   99 #>  [5109,]   99 #>  [5110,]   99 #>  [5111,]  100 #>  [5112,]  100 #>  [5113,]  100 #>  [5114,]  100 #>  [5115,]  100 #>  [5116,]  100 #>  [5117,]  100 #>  [5118,]  100 #>  [5119,]  100 #>  [5120,]  100 #>  [5121,]  100 #>  [5122,]  100 #>  [5123,]  100 #>  [5124,]  100 #>  [5125,]  100 #>  [5126,]  100 #>  [5127,]  100 #>  [5128,]  100 #>  [5129,]  100 #>  [5130,]  100 #>  [5131,]  100 #>  [5132,]  100 #>  [5133,]  100 #>  [5134,]  100 #>  [5135,]  100 #>  [5136,]  100 #>  [5137,]  100 #>  [5138,]  100 #>  [5139,]  100 #>  [5140,]  100 #>  [5141,]  100 #>  [5142,]  100 #>  [5143,]  100 #>  [5144,]  100 #>  [5145,]  100 #>  [5146,]  100 #>  [5147,]  100 #>  [5148,]  100 #>  [5149,]  100 #>  [5150,]  100 #>  [5151,]  100 #>  [5152,]  100 #>  [5153,]  100 #>  [5154,]  100 #>  [5155,]  100 #>  [5156,]  100 #>  [5157,]  100 #>  [5158,]  100 #>  [5159,]  100 #>  [5160,]  100 #>  [5161,]  100 #>  [5162,]  100 #>  [5163,]  100 #>  [5164,]  100 #>  [5165,]  100 #>  [5166,]  100 #>  [5167,]  100 #>  [5168,]  100 #>  [5169,]  100 #>  [5170,]  100 #>  [5171,]  100 #>  [5172,]  100 #>  [5173,]  100 #>  [5174,]  100 #>  [5175,]  100 #>  [5176,]  100 #>  [5177,]  100 #>  [5178,]  100 #>  [5179,]  100 #>  [5180,]  100 #>  [5181,]  100 #>  [5182,]  100 #>  [5183,]  100 #>  [5184,]  100 #>  [5185,]  100 #>  [5186,]  100 #>  [5187,]  100 #>  [5188,]  100 #>  [5189,]  100 #>  [5190,]  100 #>  [5191,]  100 #>  [5192,]  100 #>  [5193,]  100 #>  [5194,]  100 #>  [5195,]   99 #>  [5196,]  100 #>  [5197,]  100 #>  [5198,]  100 #>  [5199,]  100 #>  [5200,]  100 #>  [5201,]  101 #>  [5202,]  101 #>  [5203,]  101 #>  [5204,]  101 #>  [5205,]  101 #>  [5206,]  101 #>  [5207,]  101 #>  [5208,]  101 #>  [5209,]  101 #>  [5210,]  101 #>  [5211,]  101 #>  [5212,]  101 #>  [5213,]  101 #>  [5214,]  101 #>  [5215,]  101 #>  [5216,]  101 #>  [5217,]  101 #>  [5218,]  101 #>  [5219,]  101 #>  [5220,]  101 #>  [5221,]  101 #>  [5222,]  101 #>  [5223,]  101 #>  [5224,]  101 #>  [5225,]  101 #>  [5226,]  101 #>  [5227,]  101 #>  [5228,]  101 #>  [5229,]  101 #>  [5230,]  101 #>  [5231,]  101 #>  [5232,]  101 #>  [5233,]  101 #>  [5234,]  101 #>  [5235,]  101 #>  [5236,]  101 #>  [5237,]  101 #>  [5238,]  101 #>  [5239,]  101 #>  [5240,]  101 #>  [5241,]  101 #>  [5242,]  101 #>  [5243,]  101 #>  [5244,]  101 #>  [5245,]  101 #>  [5246,]  101 #>  [5247,]  101 #>  [5248,]  101 #>  [5249,]  101 #>  [5250,]  101 #>  [5251,]  101 #>  [5252,]  101 #>  [5253,]  101 #>  [5254,]  101 #>  [5255,]  101 #>  [5256,]  101 #>  [5257,]  101 #>  [5258,]  101 #>  [5259,]  101 #>  [5260,]  101 #>  [5261,]  101 #>  [5262,]  101 #>  [5263,]  101 #>  [5264,]  101 #>  [5265,]  101 #>  [5266,]  101 #>  [5267,]  101 #>  [5268,]  101 #>  [5269,]  101 #>  [5270,]  101 #>  [5271,]  101 #>  [5272,]  101 #>  [5273,]  101 #>  [5274,]  101 #>  [5275,]  101 #>  [5276,]  101 #>  [5277,]  101 #>  [5278,]  101 #>  [5279,]  101 #>  [5280,]  101 #>  [5281,]  101 #>  [5282,]  101 #>  [5283,]  101 #>  [5284,]  101 #>  [5285,]  101 #>  [5286,]  101 #>  [5287,]  101 #>  [5288,]  101 #>  [5289,]  101 #>  [5290,]  101 #>  [5291,]  101 #>  [5292,]  101 #>  [5293,]  101 #>  [5294,]  101 #>  [5295,]  101 #>  [5296,]  101 #>  [5297,]  101 #>  [5298,]  101 #>  [5299,]  101 #>  [5300,]  101 #>  [5301,]  102 #>  [5302,]  102 #>  [5303,]  102 #>  [5304,]  102 #>  [5305,]  102 #>  [5306,]  103 #>  [5307,]  102 #>  [5308,]  103 #>  [5309,]  103 #>  [5310,]  102 #>  [5311,]  102 #>  [5312,]  103 #>  [5313,]  102 #>  [5314,]  102 #>  [5315,]  103 #>  [5316,]  102 #>  [5317,]  102 #>  [5318,]  102 #>  [5319,]  102 #>  [5320,]  103 #>  [5321,]  102 #>  [5322,]  102 #>  [5323,]  102 #>  [5324,]  102 #>  [5325,]  102 #>  [5326,]  103 #>  [5327,]  102 #>  [5328,]  102 #>  [5329,]  102 #>  [5330,]  102 #>  [5331,]  102 #>  [5332,]  102 #>  [5333,]  103 #>  [5334,]  102 #>  [5335,]  102 #>  [5336,]  102 #>  [5337,]  102 #>  [5338,]  102 #>  [5339,]  102 #>  [5340,]  102 #>  [5341,]  102 #>  [5342,]  102 #>  [5343,]  103 #>  [5344,]  102 #>  [5345,]  103 #>  [5346,]  103 #>  [5347,]  102 #>  [5348,]  102 #>  [5349,]  102 #>  [5350,]  103 #>  [5351,]  103 #>  [5352,]  102 #>  [5353,]  103 #>  [5354,]  102 #>  [5355,]  102 #>  [5356,]  103 #>  [5357,]  103 #>  [5358,]  103 #>  [5359,]  102 #>  [5360,]  102 #>  [5361,]  103 #>  [5362,]  102 #>  [5363,]  102 #>  [5364,]  103 #>  [5365,]  103 #>  [5366,]  103 #>  [5367,]  102 #>  [5368,]  103 #>  [5369,]  102 #>  [5370,]  102 #>  [5371,]  102 #>  [5372,]  103 #>  [5373,]  102 #>  [5374,]  102 #>  [5375,]  102 #>  [5376,]  103 #>  [5377,]  102 #>  [5378,]  103 #>  [5379,]  102 #>  [5380,]  102 #>  [5381,]  103 #>  [5382,]  102 #>  [5383,]  102 #>  [5384,]  102 #>  [5385,]  102 #>  [5386,]  102 #>  [5387,]  102 #>  [5388,]  102 #>  [5389,]  102 #>  [5390,]  102 #>  [5391,]  102 #>  [5392,]  103 #>  [5393,]  102 #>  [5394,]  103 #>  [5395,]  102 #>  [5396,]  103 #>  [5397,]  103 #>  [5398,]  102 #>  [5399,]  102 #>  [5400,]  102 #>  [5401,]  104 #>  [5402,]  105 #>  [5403,]  104 #>  [5404,]  105 #>  [5405,]  105 #>  [5406,]  104 #>  [5407,]  105 #>  [5408,]  105 #>  [5409,]  105 #>  [5410,]  105 #>  [5411,]  104 #>  [5412,]  105 #>  [5413,]  105 #>  [5414,]  104 #>  [5415,]  105 #>  [5416,]  104 #>  [5417,]  105 #>  [5418,]  105 #>  [5419,]  104 #>  [5420,]  105 #>  [5421,]  105 #>  [5422,]  105 #>  [5423,]  105 #>  [5424,]  105 #>  [5425,]  105 #>  [5426,]  104 #>  [5427,]  105 #>  [5428,]  104 #>  [5429,]  105 #>  [5430,]  105 #>  [5431,]  105 #>  [5432,]  105 #>  [5433,]  105 #>  [5434,]  104 #>  [5435,]  104 #>  [5436,]  105 #>  [5437,]  104 #>  [5438,]  104 #>  [5439,]  105 #>  [5440,]  105 #>  [5441,]  105 #>  [5442,]  104 #>  [5443,]  105 #>  [5444,]  105 #>  [5445,]  104 #>  [5446,]  105 #>  [5447,]  105 #>  [5448,]  105 #>  [5449,]  104 #>  [5450,]  105 #>  [5451,]  105 #>  [5452,]  104 #>  [5453,]  105 #>  [5454,]  105 #>  [5455,]  105 #>  [5456,]  105 #>  [5457,]  105 #>  [5458,]  105 #>  [5459,]  104 #>  [5460,]  105 #>  [5461,]  105 #>  [5462,]  105 #>  [5463,]  105 #>  [5464,]  104 #>  [5465,]  104 #>  [5466,]  105 #>  [5467,]  105 #>  [5468,]  104 #>  [5469,]  105 #>  [5470,]  105 #>  [5471,]  105 #>  [5472,]  104 #>  [5473,]  104 #>  [5474,]  105 #>  [5475,]  105 #>  [5476,]  105 #>  [5477,]  104 #>  [5478,]  105 #>  [5479,]  104 #>  [5480,]  105 #>  [5481,]  105 #>  [5482,]  105 #>  [5483,]  105 #>  [5484,]  105 #>  [5485,]  105 #>  [5486,]  105 #>  [5487,]  105 #>  [5488,]  105 #>  [5489,]  104 #>  [5490,]  105 #>  [5491,]  105 #>  [5492,]  105 #>  [5493,]  105 #>  [5494,]  104 #>  [5495,]  105 #>  [5496,]  104 #>  [5497,]  104 #>  [5498,]  105 #>  [5499,]  105 #>  [5500,]  104 #>  [5501,]  107 #>  [5502,]  107 #>  [5503,]  106 #>  [5504,]  107 #>  [5505,]  107 #>  [5506,]  107 #>  [5507,]  106 #>  [5508,]  106 #>  [5509,]  107 #>  [5510,]  107 #>  [5511,]  107 #>  [5512,]  107 #>  [5513,]  107 #>  [5514,]  107 #>  [5515,]  107 #>  [5516,]  107 #>  [5517,]  107 #>  [5518,]  107 #>  [5519,]  107 #>  [5520,]  106 #>  [5521,]  107 #>  [5522,]  107 #>  [5523,]  107 #>  [5524,]  107 #>  [5525,]  106 #>  [5526,]  107 #>  [5527,]  107 #>  [5528,]  107 #>  [5529,]  107 #>  [5530,]  107 #>  [5531,]  107 #>  [5532,]  107 #>  [5533,]  107 #>  [5534,]  107 #>  [5535,]  107 #>  [5536,]  107 #>  [5537,]  107 #>  [5538,]  107 #>  [5539,]  106 #>  [5540,]  107 #>  [5541,]  107 #>  [5542,]  107 #>  [5543,]  107 #>  [5544,]  106 #>  [5545,]  107 #>  [5546,]  106 #>  [5547,]  107 #>  [5548,]  107 #>  [5549,]  106 #>  [5550,]  106 #>  [5551,]  107 #>  [5552,]  107 #>  [5553,]  106 #>  [5554,]  107 #>  [5555,]  106 #>  [5556,]  106 #>  [5557,]  107 #>  [5558,]  107 #>  [5559,]  106 #>  [5560,]  107 #>  [5561,]  107 #>  [5562,]  107 #>  [5563,]  107 #>  [5564,]  107 #>  [5565,]  106 #>  [5566,]  106 #>  [5567,]  107 #>  [5568,]  107 #>  [5569,]  107 #>  [5570,]  106 #>  [5571,]  107 #>  [5572,]  106 #>  [5573,]  107 #>  [5574,]  107 #>  [5575,]  107 #>  [5576,]  107 #>  [5577,]  107 #>  [5578,]  107 #>  [5579,]  107 #>  [5580,]  107 #>  [5581,]  107 #>  [5582,]  107 #>  [5583,]  107 #>  [5584,]  106 #>  [5585,]  107 #>  [5586,]  106 #>  [5587,]  107 #>  [5588,]  107 #>  [5589,]  107 #>  [5590,]  106 #>  [5591,]  107 #>  [5592,]  107 #>  [5593,]  107 #>  [5594,]  107 #>  [5595,]  107 #>  [5596,]  107 #>  [5597,]  107 #>  [5598,]  106 #>  [5599,]  107 #>  [5600,]  106 #>  [5601,]  109 #>  [5602,]  109 #>  [5603,]  108 #>  [5604,]  108 #>  [5605,]  109 #>  [5606,]  109 #>  [5607,]  108 #>  [5608,]  108 #>  [5609,]  109 #>  [5610,]  108 #>  [5611,]  109 #>  [5612,]  108 #>  [5613,]  109 #>  [5614,]  108 #>  [5615,]  109 #>  [5616,]  108 #>  [5617,]  109 #>  [5618,]  109 #>  [5619,]  109 #>  [5620,]  109 #>  [5621,]  109 #>  [5622,]  109 #>  [5623,]  108 #>  [5624,]  109 #>  [5625,]  108 #>  [5626,]  108 #>  [5627,]  109 #>  [5628,]  109 #>  [5629,]  109 #>  [5630,]  109 #>  [5631,]  108 #>  [5632,]  108 #>  [5633,]  109 #>  [5634,]  109 #>  [5635,]  108 #>  [5636,]  109 #>  [5637,]  108 #>  [5638,]  109 #>  [5639,]  109 #>  [5640,]  108 #>  [5641,]  109 #>  [5642,]  109 #>  [5643,]  109 #>  [5644,]  108 #>  [5645,]  108 #>  [5646,]  108 #>  [5647,]  108 #>  [5648,]  109 #>  [5649,]  109 #>  [5650,]  109 #>  [5651,]  109 #>  [5652,]  108 #>  [5653,]  109 #>  [5654,]  109 #>  [5655,]  108 #>  [5656,]  109 #>  [5657,]  108 #>  [5658,]  109 #>  [5659,]  108 #>  [5660,]  108 #>  [5661,]  109 #>  [5662,]  109 #>  [5663,]  109 #>  [5664,]  109 #>  [5665,]  109 #>  [5666,]  109 #>  [5667,]  108 #>  [5668,]  108 #>  [5669,]  109 #>  [5670,]  109 #>  [5671,]  109 #>  [5672,]  108 #>  [5673,]  109 #>  [5674,]  108 #>  [5675,]  108 #>  [5676,]  108 #>  [5677,]  109 #>  [5678,]  108 #>  [5679,]  109 #>  [5680,]  108 #>  [5681,]  109 #>  [5682,]  109 #>  [5683,]  109 #>  [5684,]  109 #>  [5685,]  109 #>  [5686,]  108 #>  [5687,]  109 #>  [5688,]  108 #>  [5689,]  109 #>  [5690,]  109 #>  [5691,]  109 #>  [5692,]  108 #>  [5693,]  109 #>  [5694,]  109 #>  [5695,]  108 #>  [5696,]  108 #>  [5697,]  108 #>  [5698,]  108 #>  [5699,]  109 #>  [5700,]  109 #>  [5701,]  111 #>  [5702,]  111 #>  [5703,]  110 #>  [5704,]  111 #>  [5705,]  111 #>  [5706,]  110 #>  [5707,]  111 #>  [5708,]  111 #>  [5709,]  111 #>  [5710,]  111 #>  [5711,]  111 #>  [5712,]  111 #>  [5713,]  111 #>  [5714,]  111 #>  [5715,]  111 #>  [5716,]  111 #>  [5717,]  111 #>  [5718,]  111 #>  [5719,]  110 #>  [5720,]  111 #>  [5721,]  111 #>  [5722,]  111 #>  [5723,]  111 #>  [5724,]  111 #>  [5725,]  111 #>  [5726,]  111 #>  [5727,]  111 #>  [5728,]  111 #>  [5729,]  111 #>  [5730,]  111 #>  [5731,]  111 #>  [5732,]  111 #>  [5733,]  111 #>  [5734,]  110 #>  [5735,]  111 #>  [5736,]  111 #>  [5737,]  110 #>  [5738,]  110 #>  [5739,]  111 #>  [5740,]  111 #>  [5741,]  111 #>  [5742,]  111 #>  [5743,]  111 #>  [5744,]  111 #>  [5745,]  110 #>  [5746,]  111 #>  [5747,]  111 #>  [5748,]  111 #>  [5749,]  110 #>  [5750,]  111 #>  [5751,]  111 #>  [5752,]  110 #>  [5753,]  111 #>  [5754,]  111 #>  [5755,]  111 #>  [5756,]  111 #>  [5757,]  111 #>  [5758,]  111 #>  [5759,]  111 #>  [5760,]  111 #>  [5761,]  111 #>  [5762,]  111 #>  [5763,]  111 #>  [5764,]  111 #>  [5765,]  111 #>  [5766,]  111 #>  [5767,]  111 #>  [5768,]  110 #>  [5769,]  111 #>  [5770,]  111 #>  [5771,]  111 #>  [5772,]  110 #>  [5773,]  111 #>  [5774,]  111 #>  [5775,]  111 #>  [5776,]  111 #>  [5777,]  111 #>  [5778,]  111 #>  [5779,]  111 #>  [5780,]  111 #>  [5781,]  111 #>  [5782,]  111 #>  [5783,]  111 #>  [5784,]  111 #>  [5785,]  111 #>  [5786,]  111 #>  [5787,]  111 #>  [5788,]  111 #>  [5789,]  111 #>  [5790,]  111 #>  [5791,]  111 #>  [5792,]  111 #>  [5793,]  111 #>  [5794,]  111 #>  [5795,]  111 #>  [5796,]  110 #>  [5797,]  111 #>  [5798,]  111 #>  [5799,]  111 #>  [5800,]  111 #>  [5801,]  113 #>  [5802,]  113 #>  [5803,]  112 #>  [5804,]  113 #>  [5805,]  112 #>  [5806,]  112 #>  [5807,]  113 #>  [5808,]  113 #>  [5809,]  113 #>  [5810,]  113 #>  [5811,]  112 #>  [5812,]  112 #>  [5813,]  113 #>  [5814,]  112 #>  [5815,]  113 #>  [5816,]  113 #>  [5817,]  113 #>  [5818,]  113 #>  [5819,]  112 #>  [5820,]  112 #>  [5821,]  113 #>  [5822,]  112 #>  [5823,]  113 #>  [5824,]  112 #>  [5825,]  113 #>  [5826,]  112 #>  [5827,]  113 #>  [5828,]  113 #>  [5829,]  112 #>  [5830,]  112 #>  [5831,]  113 #>  [5832,]  112 #>  [5833,]  112 #>  [5834,]  112 #>  [5835,]  112 #>  [5836,]  112 #>  [5837,]  113 #>  [5838,]  113 #>  [5839,]  113 #>  [5840,]  112 #>  [5841,]  112 #>  [5842,]  112 #>  [5843,]  113 #>  [5844,]  113 #>  [5845,]  113 #>  [5846,]  113 #>  [5847,]  113 #>  [5848,]  112 #>  [5849,]  113 #>  [5850,]  113 #>  [5851,]  112 #>  [5852,]  112 #>  [5853,]  113 #>  [5854,]  112 #>  [5855,]  112 #>  [5856,]  113 #>  [5857,]  112 #>  [5858,]  112 #>  [5859,]  113 #>  [5860,]  112 #>  [5861,]  113 #>  [5862,]  112 #>  [5863,]  112 #>  [5864,]  113 #>  [5865,]  113 #>  [5866,]  112 #>  [5867,]  112 #>  [5868,]  112 #>  [5869,]  112 #>  [5870,]  113 #>  [5871,]  113 #>  [5872,]  113 #>  [5873,]  113 #>  [5874,]  113 #>  [5875,]  113 #>  [5876,]  113 #>  [5877,]  113 #>  [5878,]  112 #>  [5879,]  113 #>  [5880,]  112 #>  [5881,]  112 #>  [5882,]  113 #>  [5883,]  112 #>  [5884,]  113 #>  [5885,]  113 #>  [5886,]  113 #>  [5887,]  113 #>  [5888,]  113 #>  [5889,]  112 #>  [5890,]  113 #>  [5891,]  112 #>  [5892,]  113 #>  [5893,]  112 #>  [5894,]  113 #>  [5895,]  113 #>  [5896,]  113 #>  [5897,]  112 #>  [5898,]  112 #>  [5899,]  112 #>  [5900,]  113 #>  [5901,]  114 #>  [5902,]  114 #>  [5903,]  114 #>  [5904,]  115 #>  [5905,]  114 #>  [5906,]  114 #>  [5907,]  114 #>  [5908,]  114 #>  [5909,]  114 #>  [5910,]  114 #>  [5911,]  114 #>  [5912,]  114 #>  [5913,]  114 #>  [5914,]  115 #>  [5915,]  114 #>  [5916,]  114 #>  [5917,]  114 #>  [5918,]  114 #>  [5919,]  114 #>  [5920,]  114 #>  [5921,]  114 #>  [5922,]  114 #>  [5923,]  114 #>  [5924,]  114 #>  [5925,]  114 #>  [5926,]  114 #>  [5927,]  114 #>  [5928,]  114 #>  [5929,]  114 #>  [5930,]  114 #>  [5931,]  114 #>  [5932,]  114 #>  [5933,]  114 #>  [5934,]  114 #>  [5935,]  114 #>  [5936,]  114 #>  [5937,]  114 #>  [5938,]  114 #>  [5939,]  114 #>  [5940,]  114 #>  [5941,]  114 #>  [5942,]  114 #>  [5943,]  114 #>  [5944,]  114 #>  [5945,]  114 #>  [5946,]  114 #>  [5947,]  114 #>  [5948,]  114 #>  [5949,]  114 #>  [5950,]  114 #>  [5951,]  114 #>  [5952,]  114 #>  [5953,]  114 #>  [5954,]  114 #>  [5955,]  114 #>  [5956,]  114 #>  [5957,]  114 #>  [5958,]  114 #>  [5959,]  114 #>  [5960,]  114 #>  [5961,]  115 #>  [5962,]  114 #>  [5963,]  114 #>  [5964,]  114 #>  [5965,]  114 #>  [5966,]  114 #>  [5967,]  114 #>  [5968,]  114 #>  [5969,]  114 #>  [5970,]  114 #>  [5971,]  114 #>  [5972,]  114 #>  [5973,]  114 #>  [5974,]  114 #>  [5975,]  114 #>  [5976,]  114 #>  [5977,]  114 #>  [5978,]  114 #>  [5979,]  114 #>  [5980,]  114 #>  [5981,]  114 #>  [5982,]  114 #>  [5983,]  114 #>  [5984,]  114 #>  [5985,]  114 #>  [5986,]  114 #>  [5987,]  114 #>  [5988,]  114 #>  [5989,]  114 #>  [5990,]  114 #>  [5991,]  114 #>  [5992,]  115 #>  [5993,]  115 #>  [5994,]  114 #>  [5995,]  114 #>  [5996,]  115 #>  [5997,]  114 #>  [5998,]  114 #>  [5999,]  114 #>  [6000,]  114 #>  [6001,]  117 #>  [6002,]  117 #>  [6003,]  116 #>  [6004,]  116 #>  [6005,]  116 #>  [6006,]  116 #>  [6007,]  117 #>  [6008,]  117 #>  [6009,]  116 #>  [6010,]  116 #>  [6011,]  116 #>  [6012,]  117 #>  [6013,]  117 #>  [6014,]  116 #>  [6015,]  117 #>  [6016,]  117 #>  [6017,]  117 #>  [6018,]  117 #>  [6019,]  117 #>  [6020,]  117 #>  [6021,]  116 #>  [6022,]  117 #>  [6023,]  117 #>  [6024,]  116 #>  [6025,]  116 #>  [6026,]  117 #>  [6027,]  117 #>  [6028,]  116 #>  [6029,]  117 #>  [6030,]  117 #>  [6031,]  116 #>  [6032,]  116 #>  [6033,]  117 #>  [6034,]  116 #>  [6035,]  116 #>  [6036,]  117 #>  [6037,]  117 #>  [6038,]  117 #>  [6039,]  116 #>  [6040,]  116 #>  [6041,]  117 #>  [6042,]  116 #>  [6043,]  117 #>  [6044,]  117 #>  [6045,]  117 #>  [6046,]  117 #>  [6047,]  116 #>  [6048,]  116 #>  [6049,]  117 #>  [6050,]  117 #>  [6051,]  117 #>  [6052,]  116 #>  [6053,]  117 #>  [6054,]  116 #>  [6055,]  117 #>  [6056,]  117 #>  [6057,]  116 #>  [6058,]  117 #>  [6059,]  117 #>  [6060,]  117 #>  [6061,]  117 #>  [6062,]  116 #>  [6063,]  117 #>  [6064,]  117 #>  [6065,]  116 #>  [6066,]  117 #>  [6067,]  117 #>  [6068,]  117 #>  [6069,]  117 #>  [6070,]  116 #>  [6071,]  117 #>  [6072,]  116 #>  [6073,]  116 #>  [6074,]  116 #>  [6075,]  117 #>  [6076,]  116 #>  [6077,]  117 #>  [6078,]  117 #>  [6079,]  116 #>  [6080,]  117 #>  [6081,]  117 #>  [6082,]  116 #>  [6083,]  117 #>  [6084,]  117 #>  [6085,]  117 #>  [6086,]  117 #>  [6087,]  117 #>  [6088,]  117 #>  [6089,]  116 #>  [6090,]  117 #>  [6091,]  116 #>  [6092,]  117 #>  [6093,]  117 #>  [6094,]  117 #>  [6095,]  117 #>  [6096,]  117 #>  [6097,]  117 #>  [6098,]  116 #>  [6099,]  117 #>  [6100,]  117 #>  [6101,]  119 #>  [6102,]  119 #>  [6103,]  118 #>  [6104,]  119 #>  [6105,]  119 #>  [6106,]  119 #>  [6107,]  118 #>  [6108,]  119 #>  [6109,]  119 #>  [6110,]  119 #>  [6111,]  119 #>  [6112,]  119 #>  [6113,]  118 #>  [6114,]  119 #>  [6115,]  119 #>  [6116,]  118 #>  [6117,]  119 #>  [6118,]  119 #>  [6119,]  119 #>  [6120,]  119 #>  [6121,]  118 #>  [6122,]  119 #>  [6123,]  118 #>  [6124,]  119 #>  [6125,]  119 #>  [6126,]  119 #>  [6127,]  119 #>  [6128,]  119 #>  [6129,]  119 #>  [6130,]  118 #>  [6131,]  118 #>  [6132,]  119 #>  [6133,]  119 #>  [6134,]  119 #>  [6135,]  119 #>  [6136,]  119 #>  [6137,]  119 #>  [6138,]  119 #>  [6139,]  118 #>  [6140,]  118 #>  [6141,]  119 #>  [6142,]  119 #>  [6143,]  119 #>  [6144,]  119 #>  [6145,]  119 #>  [6146,]  119 #>  [6147,]  118 #>  [6148,]  119 #>  [6149,]  118 #>  [6150,]  119 #>  [6151,]  119 #>  [6152,]  119 #>  [6153,]  119 #>  [6154,]  118 #>  [6155,]  119 #>  [6156,]  119 #>  [6157,]  119 #>  [6158,]  119 #>  [6159,]  119 #>  [6160,]  119 #>  [6161,]  119 #>  [6162,]  118 #>  [6163,]  119 #>  [6164,]  119 #>  [6165,]  119 #>  [6166,]  119 #>  [6167,]  119 #>  [6168,]  119 #>  [6169,]  119 #>  [6170,]  118 #>  [6171,]  119 #>  [6172,]  119 #>  [6173,]  119 #>  [6174,]  119 #>  [6175,]  119 #>  [6176,]  119 #>  [6177,]  118 #>  [6178,]  119 #>  [6179,]  118 #>  [6180,]  118 #>  [6181,]  119 #>  [6182,]  119 #>  [6183,]  118 #>  [6184,]  119 #>  [6185,]  119 #>  [6186,]  119 #>  [6187,]  119 #>  [6188,]  119 #>  [6189,]  119 #>  [6190,]  119 #>  [6191,]  119 #>  [6192,]  119 #>  [6193,]  119 #>  [6194,]  119 #>  [6195,]  118 #>  [6196,]  119 #>  [6197,]  119 #>  [6198,]  118 #>  [6199,]  119 #>  [6200,]  119 #>  [6201,]  121 #>  [6202,]  120 #>  [6203,]  121 #>  [6204,]  121 #>  [6205,]  121 #>  [6206,]  120 #>  [6207,]  121 #>  [6208,]  121 #>  [6209,]  121 #>  [6210,]  121 #>  [6211,]  120 #>  [6212,]  120 #>  [6213,]  121 #>  [6214,]  121 #>  [6215,]  120 #>  [6216,]  121 #>  [6217,]  120 #>  [6218,]  120 #>  [6219,]  120 #>  [6220,]  121 #>  [6221,]  120 #>  [6222,]  121 #>  [6223,]  120 #>  [6224,]  121 #>  [6225,]  121 #>  [6226,]  120 #>  [6227,]  121 #>  [6228,]  121 #>  [6229,]  120 #>  [6230,]  120 #>  [6231,]  120 #>  [6232,]  120 #>  [6233,]  121 #>  [6234,]  120 #>  [6235,]  120 #>  [6236,]  121 #>  [6237,]  120 #>  [6238,]  120 #>  [6239,]  121 #>  [6240,]  121 #>  [6241,]  121 #>  [6242,]  120 #>  [6243,]  120 #>  [6244,]  120 #>  [6245,]  121 #>  [6246,]  120 #>  [6247,]  120 #>  [6248,]  120 #>  [6249,]  121 #>  [6250,]  121 #>  [6251,]  120 #>  [6252,]  121 #>  [6253,]  121 #>  [6254,]  121 #>  [6255,]  121 #>  [6256,]  120 #>  [6257,]  121 #>  [6258,]  121 #>  [6259,]  121 #>  [6260,]  120 #>  [6261,]  120 #>  [6262,]  120 #>  [6263,]  120 #>  [6264,]  120 #>  [6265,]  120 #>  [6266,]  120 #>  [6267,]  121 #>  [6268,]  120 #>  [6269,]  120 #>  [6270,]  120 #>  [6271,]  121 #>  [6272,]  121 #>  [6273,]  121 #>  [6274,]  121 #>  [6275,]  120 #>  [6276,]  121 #>  [6277,]  121 #>  [6278,]  120 #>  [6279,]  120 #>  [6280,]  121 #>  [6281,]  120 #>  [6282,]  120 #>  [6283,]  120 #>  [6284,]  121 #>  [6285,]  121 #>  [6286,]  121 #>  [6287,]  121 #>  [6288,]  121 #>  [6289,]  120 #>  [6290,]  121 #>  [6291,]  121 #>  [6292,]  120 #>  [6293,]  120 #>  [6294,]  120 #>  [6295,]  120 #>  [6296,]  120 #>  [6297,]  120 #>  [6298,]  120 #>  [6299,]  121 #>  [6300,]  120 #>  [6301,]  122 #>  [6302,]  123 #>  [6303,]  122 #>  [6304,]  122 #>  [6305,]  122 #>  [6306,]  122 #>  [6307,]  122 #>  [6308,]  122 #>  [6309,]  123 #>  [6310,]  123 #>  [6311,]  122 #>  [6312,]  123 #>  [6313,]  122 #>  [6314,]  122 #>  [6315,]  122 #>  [6316,]  122 #>  [6317,]  123 #>  [6318,]  122 #>  [6319,]  122 #>  [6320,]  122 #>  [6321,]  123 #>  [6322,]  122 #>  [6323,]  122 #>  [6324,]  122 #>  [6325,]  122 #>  [6326,]  122 #>  [6327,]  122 #>  [6328,]  122 #>  [6329,]  123 #>  [6330,]  122 #>  [6331,]  122 #>  [6332,]  122 #>  [6333,]  123 #>  [6334,]  122 #>  [6335,]  122 #>  [6336,]  122 #>  [6337,]  122 #>  [6338,]  122 #>  [6339,]  122 #>  [6340,]  122 #>  [6341,]  122 #>  [6342,]  122 #>  [6343,]  122 #>  [6344,]  122 #>  [6345,]  122 #>  [6346,]  122 #>  [6347,]  122 #>  [6348,]  122 #>  [6349,]  122 #>  [6350,]  122 #>  [6351,]  122 #>  [6352,]  122 #>  [6353,]  122 #>  [6354,]  122 #>  [6355,]  122 #>  [6356,]  122 #>  [6357,]  122 #>  [6358,]  122 #>  [6359,]  122 #>  [6360,]  123 #>  [6361,]  122 #>  [6362,]  122 #>  [6363,]  123 #>  [6364,]  122 #>  [6365,]  122 #>  [6366,]  122 #>  [6367,]  122 #>  [6368,]  122 #>  [6369,]  122 #>  [6370,]  123 #>  [6371,]  122 #>  [6372,]  122 #>  [6373,]  122 #>  [6374,]  122 #>  [6375,]  122 #>  [6376,]  122 #>  [6377,]  122 #>  [6378,]  122 #>  [6379,]  122 #>  [6380,]  123 #>  [6381,]  123 #>  [6382,]  122 #>  [6383,]  122 #>  [6384,]  122 #>  [6385,]  122 #>  [6386,]  123 #>  [6387,]  122 #>  [6388,]  122 #>  [6389,]  122 #>  [6390,]  122 #>  [6391,]  122 #>  [6392,]  122 #>  [6393,]  122 #>  [6394,]  122 #>  [6395,]  122 #>  [6396,]  122 #>  [6397,]  122 #>  [6398,]  122 #>  [6399,]  122 #>  [6400,]  122 #>  [6401,]  124 #>  [6402,]  124 #>  [6403,]  124 #>  [6404,]  124 #>  [6405,]  124 #>  [6406,]  124 #>  [6407,]  124 #>  [6408,]  124 #>  [6409,]  124 #>  [6410,]  124 #>  [6411,]  124 #>  [6412,]  124 #>  [6413,]  124 #>  [6414,]  124 #>  [6415,]  124 #>  [6416,]  124 #>  [6417,]  124 #>  [6418,]  124 #>  [6419,]  124 #>  [6420,]  124 #>  [6421,]  124 #>  [6422,]  124 #>  [6423,]  124 #>  [6424,]  124 #>  [6425,]  124 #>  [6426,]  124 #>  [6427,]  124 #>  [6428,]  124 #>  [6429,]  124 #>  [6430,]  124 #>  [6431,]  124 #>  [6432,]  124 #>  [6433,]  124 #>  [6434,]  124 #>  [6435,]  124 #>  [6436,]  124 #>  [6437,]  124 #>  [6438,]  124 #>  [6439,]  124 #>  [6440,]  124 #>  [6441,]  124 #>  [6442,]  124 #>  [6443,]  124 #>  [6444,]  124 #>  [6445,]  124 #>  [6446,]  124 #>  [6447,]  124 #>  [6448,]  124 #>  [6449,]  124 #>  [6450,]  124 #>  [6451,]  124 #>  [6452,]  124 #>  [6453,]  124 #>  [6454,]  124 #>  [6455,]  124 #>  [6456,]  124 #>  [6457,]  124 #>  [6458,]  124 #>  [6459,]  124 #>  [6460,]  124 #>  [6461,]  124 #>  [6462,]  124 #>  [6463,]  124 #>  [6464,]  124 #>  [6465,]  124 #>  [6466,]  124 #>  [6467,]  124 #>  [6468,]  124 #>  [6469,]  124 #>  [6470,]  124 #>  [6471,]  124 #>  [6472,]  124 #>  [6473,]  124 #>  [6474,]  124 #>  [6475,]  124 #>  [6476,]  124 #>  [6477,]  124 #>  [6478,]  124 #>  [6479,]  124 #>  [6480,]  124 #>  [6481,]  124 #>  [6482,]  124 #>  [6483,]  124 #>  [6484,]  124 #>  [6485,]  124 #>  [6486,]  124 #>  [6487,]  124 #>  [6488,]  124 #>  [6489,]  124 #>  [6490,]  124 #>  [6491,]  124 #>  [6492,]  124 #>  [6493,]  124 #>  [6494,]  124 #>  [6495,]  124 #>  [6496,]  124 #>  [6497,]  124 #>  [6498,]  124 #>  [6499,]  124 #>  [6500,]  124 #>  [6501,]  126 #>  [6502,]  125 #>  [6503,]  125 #>  [6504,]  125 #>  [6505,]  125 #>  [6506,]  125 #>  [6507,]  125 #>  [6508,]  125 #>  [6509,]  125 #>  [6510,]  125 #>  [6511,]  125 #>  [6512,]  125 #>  [6513,]  125 #>  [6514,]  126 #>  [6515,]  126 #>  [6516,]  126 #>  [6517,]  125 #>  [6518,]  125 #>  [6519,]  125 #>  [6520,]  125 #>  [6521,]  125 #>  [6522,]  125 #>  [6523,]  125 #>  [6524,]  125 #>  [6525,]  125 #>  [6526,]  125 #>  [6527,]  125 #>  [6528,]  125 #>  [6529,]  125 #>  [6530,]  125 #>  [6531,]  125 #>  [6532,]  125 #>  [6533,]  125 #>  [6534,]  125 #>  [6535,]  125 #>  [6536,]  125 #>  [6537,]  125 #>  [6538,]  125 #>  [6539,]  125 #>  [6540,]  125 #>  [6541,]  126 #>  [6542,]  125 #>  [6543,]  125 #>  [6544,]  126 #>  [6545,]  125 #>  [6546,]  125 #>  [6547,]  125 #>  [6548,]  125 #>  [6549,]  125 #>  [6550,]  126 #>  [6551,]  125 #>  [6552,]  125 #>  [6553,]  125 #>  [6554,]  125 #>  [6555,]  125 #>  [6556,]  125 #>  [6557,]  125 #>  [6558,]  125 #>  [6559,]  126 #>  [6560,]  125 #>  [6561,]  125 #>  [6562,]  125 #>  [6563,]  125 #>  [6564,]  125 #>  [6565,]  125 #>  [6566,]  125 #>  [6567,]  125 #>  [6568,]  125 #>  [6569,]  125 #>  [6570,]  126 #>  [6571,]  125 #>  [6572,]  125 #>  [6573,]  126 #>  [6574,]  125 #>  [6575,]  125 #>  [6576,]  125 #>  [6577,]  125 #>  [6578,]  125 #>  [6579,]  125 #>  [6580,]  125 #>  [6581,]  125 #>  [6582,]  125 #>  [6583,]  125 #>  [6584,]  125 #>  [6585,]  125 #>  [6586,]  125 #>  [6587,]  125 #>  [6588,]  125 #>  [6589,]  125 #>  [6590,]  125 #>  [6591,]  125 #>  [6592,]  125 #>  [6593,]  125 #>  [6594,]  125 #>  [6595,]  125 #>  [6596,]  126 #>  [6597,]  125 #>  [6598,]  125 #>  [6599,]  126 #>  [6600,]  125 #>  [6601,]  128 #>  [6602,]  128 #>  [6603,]  127 #>  [6604,]  127 #>  [6605,]  127 #>  [6606,]  127 #>  [6607,]  127 #>  [6608,]  128 #>  [6609,]  127 #>  [6610,]  127 #>  [6611,]  127 #>  [6612,]  127 #>  [6613,]  128 #>  [6614,]  127 #>  [6615,]  128 #>  [6616,]  128 #>  [6617,]  127 #>  [6618,]  127 #>  [6619,]  128 #>  [6620,]  128 #>  [6621,]  127 #>  [6622,]  128 #>  [6623,]  128 #>  [6624,]  127 #>  [6625,]  127 #>  [6626,]  128 #>  [6627,]  128 #>  [6628,]  127 #>  [6629,]  128 #>  [6630,]  128 #>  [6631,]  127 #>  [6632,]  127 #>  [6633,]  128 #>  [6634,]  127 #>  [6635,]  127 #>  [6636,]  128 #>  [6637,]  128 #>  [6638,]  128 #>  [6639,]  127 #>  [6640,]  127 #>  [6641,]  128 #>  [6642,]  127 #>  [6643,]  128 #>  [6644,]  128 #>  [6645,]  127 #>  [6646,]  128 #>  [6647,]  127 #>  [6648,]  127 #>  [6649,]  127 #>  [6650,]  128 #>  [6651,]  128 #>  [6652,]  127 #>  [6653,]  128 #>  [6654,]  127 #>  [6655,]  128 #>  [6656,]  128 #>  [6657,]  127 #>  [6658,]  128 #>  [6659,]  128 #>  [6660,]  128 #>  [6661,]  128 #>  [6662,]  127 #>  [6663,]  128 #>  [6664,]  128 #>  [6665,]  127 #>  [6666,]  128 #>  [6667,]  127 #>  [6668,]  128 #>  [6669,]  128 #>  [6670,]  127 #>  [6671,]  128 #>  [6672,]  127 #>  [6673,]  127 #>  [6674,]  127 #>  [6675,]  128 #>  [6676,]  127 #>  [6677,]  128 #>  [6678,]  128 #>  [6679,]  127 #>  [6680,]  128 #>  [6681,]  128 #>  [6682,]  127 #>  [6683,]  128 #>  [6684,]  128 #>  [6685,]  128 #>  [6686,]  127 #>  [6687,]  128 #>  [6688,]  127 #>  [6689,]  127 #>  [6690,]  128 #>  [6691,]  127 #>  [6692,]  127 #>  [6693,]  128 #>  [6694,]  127 #>  [6695,]  128 #>  [6696,]  128 #>  [6697,]  128 #>  [6698,]  127 #>  [6699,]  127 #>  [6700,]  128 #>  [6701,]  130 #>  [6702,]  130 #>  [6703,]  129 #>  [6704,]  129 #>  [6705,]  129 #>  [6706,]  130 #>  [6707,]  129 #>  [6708,]  129 #>  [6709,]  129 #>  [6710,]  129 #>  [6711,]  130 #>  [6712,]  129 #>  [6713,]  130 #>  [6714,]  130 #>  [6715,]  130 #>  [6716,]  130 #>  [6717,]  130 #>  [6718,]  129 #>  [6719,]  129 #>  [6720,]  129 #>  [6721,]  130 #>  [6722,]  130 #>  [6723,]  129 #>  [6724,]  129 #>  [6725,]  129 #>  [6726,]  130 #>  [6727,]  130 #>  [6728,]  129 #>  [6729,]  130 #>  [6730,]  129 #>  [6731,]  129 #>  [6732,]  129 #>  [6733,]  130 #>  [6734,]  129 #>  [6735,]  130 #>  [6736,]  129 #>  [6737,]  130 #>  [6738,]  129 #>  [6739,]  129 #>  [6740,]  129 #>  [6741,]  130 #>  [6742,]  129 #>  [6743,]  129 #>  [6744,]  130 #>  [6745,]  129 #>  [6746,]  129 #>  [6747,]  130 #>  [6748,]  129 #>  [6749,]  129 #>  [6750,]  130 #>  [6751,]  129 #>  [6752,]  130 #>  [6753,]  129 #>  [6754,]  129 #>  [6755,]  129 #>  [6756,]  129 #>  [6757,]  129 #>  [6758,]  130 #>  [6759,]  130 #>  [6760,]  129 #>  [6761,]  130 #>  [6762,]  129 #>  [6763,]  129 #>  [6764,]  129 #>  [6765,]  129 #>  [6766,]  129 #>  [6767,]  129 #>  [6768,]  130 #>  [6769,]  129 #>  [6770,]  130 #>  [6771,]  130 #>  [6772,]  129 #>  [6773,]  130 #>  [6774,]  129 #>  [6775,]  130 #>  [6776,]  130 #>  [6777,]  130 #>  [6778,]  129 #>  [6779,]  130 #>  [6780,]  129 #>  [6781,]  130 #>  [6782,]  129 #>  [6783,]  130 #>  [6784,]  130 #>  [6785,]  129 #>  [6786,]  130 #>  [6787,]  130 #>  [6788,]  129 #>  [6789,]  129 #>  [6790,]  130 #>  [6791,]  129 #>  [6792,]  129 #>  [6793,]  130 #>  [6794,]  130 #>  [6795,]  129 #>  [6796,]  130 #>  [6797,]  130 #>  [6798,]  129 #>  [6799,]  130 #>  [6800,]  130 #>  [6801,]  132 #>  [6802,]  131 #>  [6803,]  131 #>  [6804,]  131 #>  [6805,]  131 #>  [6806,]  132 #>  [6807,]  131 #>  [6808,]  132 #>  [6809,]  132 #>  [6810,]  131 #>  [6811,]  131 #>  [6812,]  132 #>  [6813,]  131 #>  [6814,]  131 #>  [6815,]  132 #>  [6816,]  131 #>  [6817,]  131 #>  [6818,]  131 #>  [6819,]  131 #>  [6820,]  132 #>  [6821,]  131 #>  [6822,]  131 #>  [6823,]  131 #>  [6824,]  131 #>  [6825,]  131 #>  [6826,]  132 #>  [6827,]  131 #>  [6828,]  131 #>  [6829,]  131 #>  [6830,]  131 #>  [6831,]  131 #>  [6832,]  131 #>  [6833,]  132 #>  [6834,]  131 #>  [6835,]  131 #>  [6836,]  131 #>  [6837,]  131 #>  [6838,]  131 #>  [6839,]  131 #>  [6840,]  131 #>  [6841,]  131 #>  [6842,]  131 #>  [6843,]  132 #>  [6844,]  131 #>  [6845,]  132 #>  [6846,]  132 #>  [6847,]  131 #>  [6848,]  131 #>  [6849,]  131 #>  [6850,]  132 #>  [6851,]  132 #>  [6852,]  131 #>  [6853,]  132 #>  [6854,]  131 #>  [6855,]  132 #>  [6856,]  132 #>  [6857,]  132 #>  [6858,]  132 #>  [6859,]  131 #>  [6860,]  132 #>  [6861,]  132 #>  [6862,]  131 #>  [6863,]  131 #>  [6864,]  132 #>  [6865,]  132 #>  [6866,]  132 #>  [6867,]  131 #>  [6868,]  132 #>  [6869,]  131 #>  [6870,]  131 #>  [6871,]  132 #>  [6872,]  132 #>  [6873,]  132 #>  [6874,]  132 #>  [6875,]  132 #>  [6876,]  132 #>  [6877,]  131 #>  [6878,]  132 #>  [6879,]  131 #>  [6880,]  131 #>  [6881,]  132 #>  [6882,]  131 #>  [6883,]  131 #>  [6884,]  131 #>  [6885,]  131 #>  [6886,]  131 #>  [6887,]  131 #>  [6888,]  131 #>  [6889,]  131 #>  [6890,]  131 #>  [6891,]  131 #>  [6892,]  132 #>  [6893,]  131 #>  [6894,]  132 #>  [6895,]  131 #>  [6896,]  132 #>  [6897,]  132 #>  [6898,]  131 #>  [6899,]  131 #>  [6900,]  131 #>  [6901,]  134 #>  [6902,]  134 #>  [6903,]  133 #>  [6904,]  133 #>  [6905,]  133 #>  [6906,]  134 #>  [6907,]  133 #>  [6908,]  133 #>  [6909,]  133 #>  [6910,]  133 #>  [6911,]  133 #>  [6912,]  133 #>  [6913,]  134 #>  [6914,]  134 #>  [6915,]  134 #>  [6916,]  134 #>  [6917,]  134 #>  [6918,]  133 #>  [6919,]  133 #>  [6920,]  133 #>  [6921,]  134 #>  [6922,]  134 #>  [6923,]  133 #>  [6924,]  133 #>  [6925,]  133 #>  [6926,]  134 #>  [6927,]  134 #>  [6928,]  133 #>  [6929,]  134 #>  [6930,]  133 #>  [6931,]  133 #>  [6932,]  133 #>  [6933,]  134 #>  [6934,]  133 #>  [6935,]  134 #>  [6936,]  133 #>  [6937,]  134 #>  [6938,]  133 #>  [6939,]  133 #>  [6940,]  133 #>  [6941,]  134 #>  [6942,]  133 #>  [6943,]  133 #>  [6944,]  134 #>  [6945,]  133 #>  [6946,]  133 #>  [6947,]  133 #>  [6948,]  133 #>  [6949,]  133 #>  [6950,]  134 #>  [6951,]  133 #>  [6952,]  134 #>  [6953,]  133 #>  [6954,]  133 #>  [6955,]  133 #>  [6956,]  133 #>  [6957,]  133 #>  [6958,]  134 #>  [6959,]  134 #>  [6960,]  133 #>  [6961,]  134 #>  [6962,]  133 #>  [6963,]  133 #>  [6964,]  133 #>  [6965,]  133 #>  [6966,]  133 #>  [6967,]  133 #>  [6968,]  134 #>  [6969,]  133 #>  [6970,]  134 #>  [6971,]  134 #>  [6972,]  133 #>  [6973,]  134 #>  [6974,]  133 #>  [6975,]  133 #>  [6976,]  134 #>  [6977,]  134 #>  [6978,]  133 #>  [6979,]  134 #>  [6980,]  133 #>  [6981,]  134 #>  [6982,]  133 #>  [6983,]  134 #>  [6984,]  133 #>  [6985,]  133 #>  [6986,]  134 #>  [6987,]  133 #>  [6988,]  133 #>  [6989,]  133 #>  [6990,]  134 #>  [6991,]  133 #>  [6992,]  133 #>  [6993,]  134 #>  [6994,]  134 #>  [6995,]  133 #>  [6996,]  134 #>  [6997,]  133 #>  [6998,]  133 #>  [6999,]  134 #>  [7000,]  134 #>  [7001,]  136 #>  [7002,]  136 #>  [7003,]  135 #>  [7004,]  136 #>  [7005,]  136 #>  [7006,]  136 #>  [7007,]  136 #>  [7008,]  136 #>  [7009,]  135 #>  [7010,]  135 #>  [7011,]  135 #>  [7012,]  136 #>  [7013,]  136 #>  [7014,]  135 #>  [7015,]  136 #>  [7016,]  136 #>  [7017,]  136 #>  [7018,]  136 #>  [7019,]  136 #>  [7020,]  136 #>  [7021,]  135 #>  [7022,]  136 #>  [7023,]  136 #>  [7024,]  136 #>  [7025,]  136 #>  [7026,]  136 #>  [7027,]  136 #>  [7028,]  135 #>  [7029,]  136 #>  [7030,]  136 #>  [7031,]  135 #>  [7032,]  135 #>  [7033,]  136 #>  [7034,]  135 #>  [7035,]  135 #>  [7036,]  136 #>  [7037,]  136 #>  [7038,]  136 #>  [7039,]  135 #>  [7040,]  135 #>  [7041,]  136 #>  [7042,]  136 #>  [7043,]  136 #>  [7044,]  136 #>  [7045,]  136 #>  [7046,]  136 #>  [7047,]  136 #>  [7048,]  135 #>  [7049,]  136 #>  [7050,]  136 #>  [7051,]  136 #>  [7052,]  135 #>  [7053,]  136 #>  [7054,]  136 #>  [7055,]  136 #>  [7056,]  136 #>  [7057,]  136 #>  [7058,]  136 #>  [7059,]  136 #>  [7060,]  136 #>  [7061,]  136 #>  [7062,]  136 #>  [7063,]  136 #>  [7064,]  136 #>  [7065,]  135 #>  [7066,]  136 #>  [7067,]  136 #>  [7068,]  136 #>  [7069,]  136 #>  [7070,]  135 #>  [7071,]  136 #>  [7072,]  136 #>  [7073,]  136 #>  [7074,]  135 #>  [7075,]  136 #>  [7076,]  136 #>  [7077,]  136 #>  [7078,]  136 #>  [7079,]  136 #>  [7080,]  136 #>  [7081,]  136 #>  [7082,]  135 #>  [7083,]  136 #>  [7084,]  136 #>  [7085,]  136 #>  [7086,]  136 #>  [7087,]  136 #>  [7088,]  136 #>  [7089,]  136 #>  [7090,]  136 #>  [7091,]  136 #>  [7092,]  136 #>  [7093,]  136 #>  [7094,]  136 #>  [7095,]  136 #>  [7096,]  136 #>  [7097,]  136 #>  [7098,]  135 #>  [7099,]  136 #>  [7100,]  136 #>  [7101,]  137 #>  [7102,]  137 #>  [7103,]  137 #>  [7104,]  138 #>  [7105,]  137 #>  [7106,]  137 #>  [7107,]  138 #>  [7108,]  137 #>  [7109,]  137 #>  [7110,]  138 #>  [7111,]  137 #>  [7112,]  137 #>  [7113,]  137 #>  [7114,]  137 #>  [7115,]  138 #>  [7116,]  138 #>  [7117,]  138 #>  [7118,]  138 #>  [7119,]  137 #>  [7120,]  137 #>  [7121,]  138 #>  [7122,]  137 #>  [7123,]  138 #>  [7124,]  137 #>  [7125,]  138 #>  [7126,]  137 #>  [7127,]  138 #>  [7128,]  138 #>  [7129,]  137 #>  [7130,]  137 #>  [7131,]  137 #>  [7132,]  137 #>  [7133,]  137 #>  [7134,]  137 #>  [7135,]  137 #>  [7136,]  137 #>  [7137,]  137 #>  [7138,]  137 #>  [7139,]  138 #>  [7140,]  137 #>  [7141,]  137 #>  [7142,]  137 #>  [7143,]  138 #>  [7144,]  137 #>  [7145,]  138 #>  [7146,]  137 #>  [7147,]  138 #>  [7148,]  137 #>  [7149,]  137 #>  [7150,]  137 #>  [7151,]  137 #>  [7152,]  137 #>  [7153,]  138 #>  [7154,]  137 #>  [7155,]  137 #>  [7156,]  137 #>  [7157,]  137 #>  [7158,]  137 #>  [7159,]  137 #>  [7160,]  137 #>  [7161,]  138 #>  [7162,]  137 #>  [7163,]  137 #>  [7164,]  138 #>  [7165,]  137 #>  [7166,]  137 #>  [7167,]  137 #>  [7168,]  137 #>  [7169,]  137 #>  [7170,]  137 #>  [7171,]  138 #>  [7172,]  138 #>  [7173,]  138 #>  [7174,]  138 #>  [7175,]  138 #>  [7176,]  138 #>  [7177,]  138 #>  [7178,]  137 #>  [7179,]  137 #>  [7180,]  137 #>  [7181,]  137 #>  [7182,]  137 #>  [7183,]  137 #>  [7184,]  138 #>  [7185,]  137 #>  [7186,]  137 #>  [7187,]  137 #>  [7188,]  138 #>  [7189,]  137 #>  [7190,]  137 #>  [7191,]  137 #>  [7192,]  137 #>  [7193,]  137 #>  [7194,]  138 #>  [7195,]  138 #>  [7196,]  137 #>  [7197,]  137 #>  [7198,]  137 #>  [7199,]  137 #>  [7200,]  138 #>  [7201,]  140 #>  [7202,]  140 #>  [7203,]  140 #>  [7204,]  140 #>  [7205,]  140 #>  [7206,]  140 #>  [7207,]  140 #>  [7208,]  140 #>  [7209,]  140 #>  [7210,]  140 #>  [7211,]  140 #>  [7212,]  139 #>  [7213,]  140 #>  [7214,]  140 #>  [7215,]  139 #>  [7216,]  140 #>  [7217,]  139 #>  [7218,]  140 #>  [7219,]  140 #>  [7220,]  140 #>  [7221,]  140 #>  [7222,]  140 #>  [7223,]  139 #>  [7224,]  140 #>  [7225,]  140 #>  [7226,]  140 #>  [7227,]  140 #>  [7228,]  140 #>  [7229,]  140 #>  [7230,]  140 #>  [7231,]  139 #>  [7232,]  140 #>  [7233,]  140 #>  [7234,]  139 #>  [7235,]  140 #>  [7236,]  140 #>  [7237,]  139 #>  [7238,]  140 #>  [7239,]  140 #>  [7240,]  140 #>  [7241,]  140 #>  [7242,]  139 #>  [7243,]  139 #>  [7244,]  139 #>  [7245,]  140 #>  [7246,]  140 #>  [7247,]  140 #>  [7248,]  139 #>  [7249,]  140 #>  [7250,]  140 #>  [7251,]  140 #>  [7252,]  140 #>  [7253,]  140 #>  [7254,]  140 #>  [7255,]  140 #>  [7256,]  140 #>  [7257,]  140 #>  [7258,]  140 #>  [7259,]  140 #>  [7260,]  140 #>  [7261,]  140 #>  [7262,]  140 #>  [7263,]  139 #>  [7264,]  140 #>  [7265,]  140 #>  [7266,]  140 #>  [7267,]  140 #>  [7268,]  140 #>  [7269,]  140 #>  [7270,]  139 #>  [7271,]  140 #>  [7272,]  140 #>  [7273,]  140 #>  [7274,]  140 #>  [7275,]  139 #>  [7276,]  140 #>  [7277,]  140 #>  [7278,]  139 #>  [7279,]  139 #>  [7280,]  140 #>  [7281,]  139 #>  [7282,]  140 #>  [7283,]  140 #>  [7284,]  140 #>  [7285,]  140 #>  [7286,]  140 #>  [7287,]  140 #>  [7288,]  140 #>  [7289,]  140 #>  [7290,]  140 #>  [7291,]  140 #>  [7292,]  140 #>  [7293,]  140 #>  [7294,]  139 #>  [7295,]  139 #>  [7296,]  140 #>  [7297,]  140 #>  [7298,]  140 #>  [7299,]  140 #>  [7300,]  139 #>  [7301,]  142 #>  [7302,]  142 #>  [7303,]  141 #>  [7304,]  141 #>  [7305,]  141 #>  [7306,]  142 #>  [7307,]  141 #>  [7308,]  141 #>  [7309,]  141 #>  [7310,]  141 #>  [7311,]  141 #>  [7312,]  141 #>  [7313,]  142 #>  [7314,]  142 #>  [7315,]  142 #>  [7316,]  142 #>  [7317,]  142 #>  [7318,]  141 #>  [7319,]  141 #>  [7320,]  141 #>  [7321,]  142 #>  [7322,]  142 #>  [7323,]  141 #>  [7324,]  141 #>  [7325,]  141 #>  [7326,]  142 #>  [7327,]  142 #>  [7328,]  141 #>  [7329,]  142 #>  [7330,]  141 #>  [7331,]  141 #>  [7332,]  141 #>  [7333,]  142 #>  [7334,]  141 #>  [7335,]  142 #>  [7336,]  141 #>  [7337,]  142 #>  [7338,]  141 #>  [7339,]  141 #>  [7340,]  141 #>  [7341,]  142 #>  [7342,]  141 #>  [7343,]  141 #>  [7344,]  142 #>  [7345,]  141 #>  [7346,]  141 #>  [7347,]  141 #>  [7348,]  141 #>  [7349,]  141 #>  [7350,]  142 #>  [7351,]  141 #>  [7352,]  142 #>  [7353,]  141 #>  [7354,]  141 #>  [7355,]  141 #>  [7356,]  141 #>  [7357,]  141 #>  [7358,]  142 #>  [7359,]  142 #>  [7360,]  141 #>  [7361,]  142 #>  [7362,]  141 #>  [7363,]  141 #>  [7364,]  141 #>  [7365,]  141 #>  [7366,]  141 #>  [7367,]  141 #>  [7368,]  142 #>  [7369,]  141 #>  [7370,]  142 #>  [7371,]  142 #>  [7372,]  141 #>  [7373,]  142 #>  [7374,]  141 #>  [7375,]  141 #>  [7376,]  142 #>  [7377,]  142 #>  [7378,]  141 #>  [7379,]  142 #>  [7380,]  141 #>  [7381,]  142 #>  [7382,]  141 #>  [7383,]  142 #>  [7384,]  141 #>  [7385,]  141 #>  [7386,]  142 #>  [7387,]  141 #>  [7388,]  141 #>  [7389,]  141 #>  [7390,]  142 #>  [7391,]  141 #>  [7392,]  141 #>  [7393,]  142 #>  [7394,]  142 #>  [7395,]  141 #>  [7396,]  142 #>  [7397,]  141 #>  [7398,]  141 #>  [7399,]  142 #>  [7400,]  142 #>  [7401,]  143 #>  [7402,]  143 #>  [7403,]  143 #>  [7404,]  144 #>  [7405,]  143 #>  [7406,]  144 #>  [7407,]  143 #>  [7408,]  143 #>  [7409,]  144 #>  [7410,]  144 #>  [7411,]  144 #>  [7412,]  144 #>  [7413,]  143 #>  [7414,]  144 #>  [7415,]  144 #>  [7416,]  143 #>  [7417,]  143 #>  [7418,]  144 #>  [7419,]  144 #>  [7420,]  143 #>  [7421,]  144 #>  [7422,]  143 #>  [7423,]  144 #>  [7424,]  143 #>  [7425,]  143 #>  [7426,]  144 #>  [7427,]  144 #>  [7428,]  143 #>  [7429,]  143 #>  [7430,]  144 #>  [7431,]  144 #>  [7432,]  144 #>  [7433,]  144 #>  [7434,]  144 #>  [7435,]  143 #>  [7436,]  144 #>  [7437,]  143 #>  [7438,]  144 #>  [7439,]  143 #>  [7440,]  143 #>  [7441,]  144 #>  [7442,]  144 #>  [7443,]  143 #>  [7444,]  143 #>  [7445,]  143 #>  [7446,]  143 #>  [7447,]  143 #>  [7448,]  144 #>  [7449,]  143 #>  [7450,]  143 #>  [7451,]  143 #>  [7452,]  144 #>  [7453,]  143 #>  [7454,]  143 #>  [7455,]  143 #>  [7456,]  143 #>  [7457,]  143 #>  [7458,]  144 #>  [7459,]  143 #>  [7460,]  144 #>  [7461,]  144 #>  [7462,]  144 #>  [7463,]  143 #>  [7464,]  144 #>  [7465,]  143 #>  [7466,]  143 #>  [7467,]  144 #>  [7468,]  144 #>  [7469,]  144 #>  [7470,]  143 #>  [7471,]  143 #>  [7472,]  143 #>  [7473,]  144 #>  [7474,]  144 #>  [7475,]  144 #>  [7476,]  143 #>  [7477,]  143 #>  [7478,]  143 #>  [7479,]  143 #>  [7480,]  144 #>  [7481,]  143 #>  [7482,]  144 #>  [7483,]  143 #>  [7484,]  143 #>  [7485,]  144 #>  [7486,]  143 #>  [7487,]  143 #>  [7488,]  143 #>  [7489,]  143 #>  [7490,]  143 #>  [7491,]  144 #>  [7492,]  144 #>  [7493,]  144 #>  [7494,]  143 #>  [7495,]  143 #>  [7496,]  144 #>  [7497,]  144 #>  [7498,]  143 #>  [7499,]  144 #>  [7500,]  143 #>  [7501,]  146 #>  [7502,]  146 #>  [7503,]  145 #>  [7504,]  146 #>  [7505,]  146 #>  [7506,]  146 #>  [7507,]  146 #>  [7508,]  146 #>  [7509,]  146 #>  [7510,]  146 #>  [7511,]  146 #>  [7512,]  145 #>  [7513,]  146 #>  [7514,]  145 #>  [7515,]  146 #>  [7516,]  146 #>  [7517,]  146 #>  [7518,]  146 #>  [7519,]  146 #>  [7520,]  146 #>  [7521,]  146 #>  [7522,]  146 #>  [7523,]  146 #>  [7524,]  146 #>  [7525,]  146 #>  [7526,]  145 #>  [7527,]  146 #>  [7528,]  146 #>  [7529,]  146 #>  [7530,]  146 #>  [7531,]  146 #>  [7532,]  145 #>  [7533,]  146 #>  [7534,]  146 #>  [7535,]  146 #>  [7536,]  146 #>  [7537,]  146 #>  [7538,]  146 #>  [7539,]  146 #>  [7540,]  146 #>  [7541,]  146 #>  [7542,]  146 #>  [7543,]  146 #>  [7544,]  146 #>  [7545,]  146 #>  [7546,]  146 #>  [7547,]  146 #>  [7548,]  146 #>  [7549,]  146 #>  [7550,]  146 #>  [7551,]  146 #>  [7552,]  146 #>  [7553,]  146 #>  [7554,]  146 #>  [7555,]  146 #>  [7556,]  146 #>  [7557,]  146 #>  [7558,]  146 #>  [7559,]  146 #>  [7560,]  146 #>  [7561,]  146 #>  [7562,]  146 #>  [7563,]  146 #>  [7564,]  146 #>  [7565,]  146 #>  [7566,]  146 #>  [7567,]  146 #>  [7568,]  146 #>  [7569,]  145 #>  [7570,]  146 #>  [7571,]  146 #>  [7572,]  146 #>  [7573,]  146 #>  [7574,]  146 #>  [7575,]  146 #>  [7576,]  146 #>  [7577,]  146 #>  [7578,]  146 #>  [7579,]  146 #>  [7580,]  145 #>  [7581,]  146 #>  [7582,]  146 #>  [7583,]  146 #>  [7584,]  146 #>  [7585,]  146 #>  [7586,]  146 #>  [7587,]  146 #>  [7588,]  146 #>  [7589,]  146 #>  [7590,]  146 #>  [7591,]  146 #>  [7592,]  146 #>  [7593,]  146 #>  [7594,]  146 #>  [7595,]  146 #>  [7596,]  146 #>  [7597,]  146 #>  [7598,]  146 #>  [7599,]  146 #>  [7600,]  146 #>  [7601,]  147 #>  [7602,]  147 #>  [7603,]  147 #>  [7604,]  147 #>  [7605,]  147 #>  [7606,]  147 #>  [7607,]  148 #>  [7608,]  147 #>  [7609,]  147 #>  [7610,]  147 #>  [7611,]  147 #>  [7612,]  147 #>  [7613,]  147 #>  [7614,]  147 #>  [7615,]  147 #>  [7616,]  147 #>  [7617,]  147 #>  [7618,]  147 #>  [7619,]  147 #>  [7620,]  148 #>  [7621,]  147 #>  [7622,]  147 #>  [7623,]  147 #>  [7624,]  148 #>  [7625,]  147 #>  [7626,]  147 #>  [7627,]  147 #>  [7628,]  148 #>  [7629,]  147 #>  [7630,]  147 #>  [7631,]  147 #>  [7632,]  147 #>  [7633,]  147 #>  [7634,]  147 #>  [7635,]  147 #>  [7636,]  147 #>  [7637,]  147 #>  [7638,]  147 #>  [7639,]  147 #>  [7640,]  147 #>  [7641,]  147 #>  [7642,]  147 #>  [7643,]  147 #>  [7644,]  147 #>  [7645,]  147 #>  [7646,]  147 #>  [7647,]  147 #>  [7648,]  147 #>  [7649,]  147 #>  [7650,]  148 #>  [7651,]  147 #>  [7652,]  148 #>  [7653,]  147 #>  [7654,]  147 #>  [7655,]  147 #>  [7656,]  147 #>  [7657,]  147 #>  [7658,]  147 #>  [7659,]  147 #>  [7660,]  147 #>  [7661,]  147 #>  [7662,]  147 #>  [7663,]  147 #>  [7664,]  147 #>  [7665,]  147 #>  [7666,]  147 #>  [7667,]  147 #>  [7668,]  147 #>  [7669,]  147 #>  [7670,]  147 #>  [7671,]  147 #>  [7672,]  147 #>  [7673,]  147 #>  [7674,]  147 #>  [7675,]  147 #>  [7676,]  148 #>  [7677,]  147 #>  [7678,]  147 #>  [7679,]  147 #>  [7680,]  147 #>  [7681,]  147 #>  [7682,]  147 #>  [7683,]  147 #>  [7684,]  147 #>  [7685,]  147 #>  [7686,]  148 #>  [7687,]  147 #>  [7688,]  147 #>  [7689,]  147 #>  [7690,]  147 #>  [7691,]  148 #>  [7692,]  147 #>  [7693,]  147 #>  [7694,]  147 #>  [7695,]  147 #>  [7696,]  147 #>  [7697,]  147 #>  [7698,]  147 #>  [7699,]  147 #>  [7700,]  147 #>  [7701,]  149 #>  [7702,]  150 #>  [7703,]  149 #>  [7704,]  149 #>  [7705,]  149 #>  [7706,]  149 #>  [7707,]  149 #>  [7708,]  149 #>  [7709,]  150 #>  [7710,]  150 #>  [7711,]  149 #>  [7712,]  150 #>  [7713,]  149 #>  [7714,]  149 #>  [7715,]  149 #>  [7716,]  149 #>  [7717,]  149 #>  [7718,]  149 #>  [7719,]  149 #>  [7720,]  149 #>  [7721,]  150 #>  [7722,]  149 #>  [7723,]  149 #>  [7724,]  149 #>  [7725,]  149 #>  [7726,]  149 #>  [7727,]  149 #>  [7728,]  149 #>  [7729,]  150 #>  [7730,]  149 #>  [7731,]  149 #>  [7732,]  149 #>  [7733,]  150 #>  [7734,]  149 #>  [7735,]  149 #>  [7736,]  149 #>  [7737,]  149 #>  [7738,]  149 #>  [7739,]  149 #>  [7740,]  149 #>  [7741,]  149 #>  [7742,]  149 #>  [7743,]  149 #>  [7744,]  149 #>  [7745,]  149 #>  [7746,]  149 #>  [7747,]  149 #>  [7748,]  149 #>  [7749,]  149 #>  [7750,]  149 #>  [7751,]  149 #>  [7752,]  149 #>  [7753,]  149 #>  [7754,]  149 #>  [7755,]  149 #>  [7756,]  149 #>  [7757,]  149 #>  [7758,]  149 #>  [7759,]  149 #>  [7760,]  150 #>  [7761,]  149 #>  [7762,]  149 #>  [7763,]  149 #>  [7764,]  149 #>  [7765,]  149 #>  [7766,]  149 #>  [7767,]  149 #>  [7768,]  149 #>  [7769,]  149 #>  [7770,]  150 #>  [7771,]  149 #>  [7772,]  149 #>  [7773,]  149 #>  [7774,]  149 #>  [7775,]  149 #>  [7776,]  149 #>  [7777,]  149 #>  [7778,]  149 #>  [7779,]  149 #>  [7780,]  149 #>  [7781,]  150 #>  [7782,]  149 #>  [7783,]  149 #>  [7784,]  149 #>  [7785,]  149 #>  [7786,]  150 #>  [7787,]  149 #>  [7788,]  149 #>  [7789,]  149 #>  [7790,]  149 #>  [7791,]  149 #>  [7792,]  149 #>  [7793,]  149 #>  [7794,]  149 #>  [7795,]  149 #>  [7796,]  149 #>  [7797,]  149 #>  [7798,]  149 #>  [7799,]  149 #>  [7800,]  149 #>  [7801,]  152 #>  [7802,]  152 #>  [7803,]  151 #>  [7804,]  152 #>  [7805,]  151 #>  [7806,]  152 #>  [7807,]  151 #>  [7808,]  151 #>  [7809,]  152 #>  [7810,]  152 #>  [7811,]  152 #>  [7812,]  152 #>  [7813,]  151 #>  [7814,]  152 #>  [7815,]  152 #>  [7816,]  151 #>  [7817,]  151 #>  [7818,]  152 #>  [7819,]  152 #>  [7820,]  151 #>  [7821,]  152 #>  [7822,]  151 #>  [7823,]  152 #>  [7824,]  151 #>  [7825,]  151 #>  [7826,]  152 #>  [7827,]  152 #>  [7828,]  152 #>  [7829,]  151 #>  [7830,]  152 #>  [7831,]  152 #>  [7832,]  152 #>  [7833,]  152 #>  [7834,]  152 #>  [7835,]  152 #>  [7836,]  152 #>  [7837,]  152 #>  [7838,]  152 #>  [7839,]  151 #>  [7840,]  151 #>  [7841,]  152 #>  [7842,]  152 #>  [7843,]  151 #>  [7844,]  151 #>  [7845,]  151 #>  [7846,]  151 #>  [7847,]  151 #>  [7848,]  152 #>  [7849,]  151 #>  [7850,]  151 #>  [7851,]  151 #>  [7852,]  152 #>  [7853,]  151 #>  [7854,]  151 #>  [7855,]  151 #>  [7856,]  151 #>  [7857,]  152 #>  [7858,]  152 #>  [7859,]  151 #>  [7860,]  152 #>  [7861,]  152 #>  [7862,]  152 #>  [7863,]  151 #>  [7864,]  152 #>  [7865,]  151 #>  [7866,]  151 #>  [7867,]  152 #>  [7868,]  152 #>  [7869,]  152 #>  [7870,]  151 #>  [7871,]  151 #>  [7872,]  151 #>  [7873,]  152 #>  [7874,]  152 #>  [7875,]  152 #>  [7876,]  151 #>  [7877,]  151 #>  [7878,]  151 #>  [7879,]  151 #>  [7880,]  152 #>  [7881,]  151 #>  [7882,]  152 #>  [7883,]  151 #>  [7884,]  151 #>  [7885,]  152 #>  [7886,]  151 #>  [7887,]  152 #>  [7888,]  152 #>  [7889,]  151 #>  [7890,]  151 #>  [7891,]  152 #>  [7892,]  152 #>  [7893,]  152 #>  [7894,]  151 #>  [7895,]  152 #>  [7896,]  152 #>  [7897,]  152 #>  [7898,]  151 #>  [7899,]  152 #>  [7900,]  151 #>  [7901,]  154 #>  [7902,]  154 #>  [7903,]  153 #>  [7904,]  153 #>  [7905,]  154 #>  [7906,]  154 #>  [7907,]  153 #>  [7908,]  153 #>  [7909,]  154 #>  [7910,]  153 #>  [7911,]  154 #>  [7912,]  153 #>  [7913,]  154 #>  [7914,]  153 #>  [7915,]  154 #>  [7916,]  153 #>  [7917,]  154 #>  [7918,]  154 #>  [7919,]  154 #>  [7920,]  154 #>  [7921,]  154 #>  [7922,]  154 #>  [7923,]  153 #>  [7924,]  154 #>  [7925,]  153 #>  [7926,]  153 #>  [7927,]  154 #>  [7928,]  154 #>  [7929,]  154 #>  [7930,]  153 #>  [7931,]  153 #>  [7932,]  153 #>  [7933,]  154 #>  [7934,]  153 #>  [7935,]  153 #>  [7936,]  154 #>  [7937,]  153 #>  [7938,]  154 #>  [7939,]  154 #>  [7940,]  153 #>  [7941,]  154 #>  [7942,]  154 #>  [7943,]  154 #>  [7944,]  153 #>  [7945,]  153 #>  [7946,]  153 #>  [7947,]  153 #>  [7948,]  154 #>  [7949,]  153 #>  [7950,]  154 #>  [7951,]  154 #>  [7952,]  153 #>  [7953,]  154 #>  [7954,]  154 #>  [7955,]  153 #>  [7956,]  154 #>  [7957,]  153 #>  [7958,]  154 #>  [7959,]  153 #>  [7960,]  153 #>  [7961,]  154 #>  [7962,]  154 #>  [7963,]  154 #>  [7964,]  154 #>  [7965,]  154 #>  [7966,]  154 #>  [7967,]  153 #>  [7968,]  153 #>  [7969,]  153 #>  [7970,]  154 #>  [7971,]  153 #>  [7972,]  153 #>  [7973,]  154 #>  [7974,]  153 #>  [7975,]  153 #>  [7976,]  153 #>  [7977,]  154 #>  [7978,]  153 #>  [7979,]  154 #>  [7980,]  153 #>  [7981,]  154 #>  [7982,]  154 #>  [7983,]  154 #>  [7984,]  154 #>  [7985,]  154 #>  [7986,]  153 #>  [7987,]  154 #>  [7988,]  153 #>  [7989,]  154 #>  [7990,]  154 #>  [7991,]  154 #>  [7992,]  153 #>  [7993,]  154 #>  [7994,]  154 #>  [7995,]  153 #>  [7996,]  153 #>  [7997,]  153 #>  [7998,]  153 #>  [7999,]  154 #>  [8000,]  154 #>  [8001,]  155 #>  [8002,]  155 #>  [8003,]  155 #>  [8004,]  156 #>  [8005,]  155 #>  [8006,]  155 #>  [8007,]  156 #>  [8008,]  155 #>  [8009,]  155 #>  [8010,]  156 #>  [8011,]  155 #>  [8012,]  155 #>  [8013,]  155 #>  [8014,]  155 #>  [8015,]  155 #>  [8016,]  156 #>  [8017,]  155 #>  [8018,]  155 #>  [8019,]  155 #>  [8020,]  156 #>  [8021,]  155 #>  [8022,]  155 #>  [8023,]  155 #>  [8024,]  156 #>  [8025,]  156 #>  [8026,]  155 #>  [8027,]  155 #>  [8028,]  156 #>  [8029,]  155 #>  [8030,]  155 #>  [8031,]  155 #>  [8032,]  155 #>  [8033,]  155 #>  [8034,]  155 #>  [8035,]  155 #>  [8036,]  155 #>  [8037,]  155 #>  [8038,]  155 #>  [8039,]  156 #>  [8040,]  155 #>  [8041,]  155 #>  [8042,]  155 #>  [8043,]  155 #>  [8044,]  155 #>  [8045,]  155 #>  [8046,]  155 #>  [8047,]  155 #>  [8048,]  155 #>  [8049,]  155 #>  [8050,]  156 #>  [8051,]  155 #>  [8052,]  156 #>  [8053,]  155 #>  [8054,]  156 #>  [8055,]  155 #>  [8056,]  155 #>  [8057,]  155 #>  [8058,]  155 #>  [8059,]  155 #>  [8060,]  155 #>  [8061,]  155 #>  [8062,]  155 #>  [8063,]  155 #>  [8064,]  155 #>  [8065,]  155 #>  [8066,]  155 #>  [8067,]  155 #>  [8068,]  155 #>  [8069,]  155 #>  [8070,]  155 #>  [8071,]  155 #>  [8072,]  155 #>  [8073,]  156 #>  [8074,]  155 #>  [8075,]  155 #>  [8076,]  156 #>  [8077,]  155 #>  [8078,]  155 #>  [8079,]  155 #>  [8080,]  155 #>  [8081,]  155 #>  [8082,]  155 #>  [8083,]  155 #>  [8084,]  155 #>  [8085,]  155 #>  [8086,]  156 #>  [8087,]  155 #>  [8088,]  155 #>  [8089,]  155 #>  [8090,]  155 #>  [8091,]  156 #>  [8092,]  155 #>  [8093,]  155 #>  [8094,]  155 #>  [8095,]  155 #>  [8096,]  155 #>  [8097,]  155 #>  [8098,]  155 #>  [8099,]  155 #>  [8100,]  155 #>  [8101,]  158 #>  [8102,]  158 #>  [8103,]  157 #>  [8104,]  157 #>  [8105,]  157 #>  [8106,]  158 #>  [8107,]  158 #>  [8108,]  157 #>  [8109,]  157 #>  [8110,]  157 #>  [8111,]  158 #>  [8112,]  157 #>  [8113,]  158 #>  [8114,]  158 #>  [8115,]  158 #>  [8116,]  158 #>  [8117,]  158 #>  [8118,]  157 #>  [8119,]  158 #>  [8120,]  157 #>  [8121,]  158 #>  [8122,]  158 #>  [8123,]  157 #>  [8124,]  157 #>  [8125,]  158 #>  [8126,]  158 #>  [8127,]  158 #>  [8128,]  158 #>  [8129,]  158 #>  [8130,]  157 #>  [8131,]  157 #>  [8132,]  157 #>  [8133,]  158 #>  [8134,]  157 #>  [8135,]  158 #>  [8136,]  157 #>  [8137,]  158 #>  [8138,]  157 #>  [8139,]  157 #>  [8140,]  158 #>  [8141,]  158 #>  [8142,]  157 #>  [8143,]  157 #>  [8144,]  158 #>  [8145,]  157 #>  [8146,]  158 #>  [8147,]  158 #>  [8148,]  157 #>  [8149,]  157 #>  [8150,]  158 #>  [8151,]  157 #>  [8152,]  158 #>  [8153,]  157 #>  [8154,]  158 #>  [8155,]  158 #>  [8156,]  157 #>  [8157,]  158 #>  [8158,]  158 #>  [8159,]  158 #>  [8160,]  157 #>  [8161,]  158 #>  [8162,]  157 #>  [8163,]  158 #>  [8164,]  157 #>  [8165,]  157 #>  [8166,]  157 #>  [8167,]  157 #>  [8168,]  158 #>  [8169,]  158 #>  [8170,]  158 #>  [8171,]  158 #>  [8172,]  157 #>  [8173,]  158 #>  [8174,]  158 #>  [8175,]  158 #>  [8176,]  158 #>  [8177,]  158 #>  [8178,]  157 #>  [8179,]  158 #>  [8180,]  158 #>  [8181,]  158 #>  [8182,]  158 #>  [8183,]  158 #>  [8184,]  158 #>  [8185,]  157 #>  [8186,]  158 #>  [8187,]  158 #>  [8188,]  157 #>  [8189,]  157 #>  [8190,]  158 #>  [8191,]  157 #>  [8192,]  158 #>  [8193,]  158 #>  [8194,]  158 #>  [8195,]  157 #>  [8196,]  158 #>  [8197,]  158 #>  [8198,]  158 #>  [8199,]  158 #>  [8200,]  158 #>  [8201,]  159 #>  [8202,]  159 #>  [8203,]  159 #>  [8204,]  160 #>  [8205,]  159 #>  [8206,]  160 #>  [8207,]  159 #>  [8208,]  159 #>  [8209,]  160 #>  [8210,]  160 #>  [8211,]  160 #>  [8212,]  160 #>  [8213,]  159 #>  [8214,]  160 #>  [8215,]  160 #>  [8216,]  159 #>  [8217,]  159 #>  [8218,]  160 #>  [8219,]  160 #>  [8220,]  159 #>  [8221,]  160 #>  [8222,]  159 #>  [8223,]  159 #>  [8224,]  159 #>  [8225,]  159 #>  [8226,]  160 #>  [8227,]  160 #>  [8228,]  159 #>  [8229,]  159 #>  [8230,]  160 #>  [8231,]  160 #>  [8232,]  160 #>  [8233,]  160 #>  [8234,]  159 #>  [8235,]  159 #>  [8236,]  160 #>  [8237,]  159 #>  [8238,]  160 #>  [8239,]  159 #>  [8240,]  159 #>  [8241,]  160 #>  [8242,]  160 #>  [8243,]  159 #>  [8244,]  159 #>  [8245,]  159 #>  [8246,]  159 #>  [8247,]  159 #>  [8248,]  160 #>  [8249,]  159 #>  [8250,]  159 #>  [8251,]  159 #>  [8252,]  159 #>  [8253,]  159 #>  [8254,]  159 #>  [8255,]  159 #>  [8256,]  159 #>  [8257,]  159 #>  [8258,]  160 #>  [8259,]  159 #>  [8260,]  160 #>  [8261,]  160 #>  [8262,]  160 #>  [8263,]  159 #>  [8264,]  160 #>  [8265,]  159 #>  [8266,]  159 #>  [8267,]  159 #>  [8268,]  160 #>  [8269,]  160 #>  [8270,]  159 #>  [8271,]  159 #>  [8272,]  159 #>  [8273,]  159 #>  [8274,]  160 #>  [8275,]  160 #>  [8276,]  159 #>  [8277,]  159 #>  [8278,]  159 #>  [8279,]  159 #>  [8280,]  159 #>  [8281,]  159 #>  [8282,]  160 #>  [8283,]  159 #>  [8284,]  159 #>  [8285,]  160 #>  [8286,]  159 #>  [8287,]  159 #>  [8288,]  159 #>  [8289,]  159 #>  [8290,]  159 #>  [8291,]  159 #>  [8292,]  160 #>  [8293,]  160 #>  [8294,]  159 #>  [8295,]  159 #>  [8296,]  160 #>  [8297,]  160 #>  [8298,]  159 #>  [8299,]  160 #>  [8300,]  159 #>  [8301,]  162 #>  [8302,]  161 #>  [8303,]  161 #>  [8304,]  162 #>  [8305,]  162 #>  [8306,]  161 #>  [8307,]  161 #>  [8308,]  161 #>  [8309,]  161 #>  [8310,]  162 #>  [8311,]  162 #>  [8312,]  162 #>  [8313,]  162 #>  [8314,]  162 #>  [8315,]  162 #>  [8316,]  162 #>  [8317,]  162 #>  [8318,]  162 #>  [8319,]  162 #>  [8320,]  161 #>  [8321,]  161 #>  [8322,]  162 #>  [8323,]  161 #>  [8324,]  162 #>  [8325,]  161 #>  [8326,]  162 #>  [8327,]  162 #>  [8328,]  162 #>  [8329,]  161 #>  [8330,]  161 #>  [8331,]  162 #>  [8332,]  162 #>  [8333,]  162 #>  [8334,]  161 #>  [8335,]  161 #>  [8336,]  161 #>  [8337,]  161 #>  [8338,]  162 #>  [8339,]  162 #>  [8340,]  161 #>  [8341,]  161 #>  [8342,]  161 #>  [8343,]  162 #>  [8344,]  161 #>  [8345,]  161 #>  [8346,]  162 #>  [8347,]  162 #>  [8348,]  162 #>  [8349,]  161 #>  [8350,]  161 #>  [8351,]  162 #>  [8352,]  162 #>  [8353,]  161 #>  [8354,]  161 #>  [8355,]  161 #>  [8356,]  161 #>  [8357,]  161 #>  [8358,]  162 #>  [8359,]  162 #>  [8360,]  161 #>  [8361,]  162 #>  [8362,]  161 #>  [8363,]  162 #>  [8364,]  161 #>  [8365,]  161 #>  [8366,]  162 #>  [8367,]  161 #>  [8368,]  162 #>  [8369,]  162 #>  [8370,]  162 #>  [8371,]  162 #>  [8372,]  161 #>  [8373,]  161 #>  [8374,]  161 #>  [8375,]  162 #>  [8376,]  161 #>  [8377,]  162 #>  [8378,]  161 #>  [8379,]  162 #>  [8380,]  161 #>  [8381,]  161 #>  [8382,]  161 #>  [8383,]  162 #>  [8384,]  161 #>  [8385,]  161 #>  [8386,]  161 #>  [8387,]  162 #>  [8388,]  161 #>  [8389,]  161 #>  [8390,]  162 #>  [8391,]  162 #>  [8392,]  162 #>  [8393,]  161 #>  [8394,]  161 #>  [8395,]  162 #>  [8396,]  162 #>  [8397,]  161 #>  [8398,]  161 #>  [8399,]  161 #>  [8400,]  162 #>  [8401,]  164 #>  [8402,]  164 #>  [8403,]  163 #>  [8404,]  163 #>  [8405,]  164 #>  [8406,]  164 #>  [8407,]  163 #>  [8408,]  163 #>  [8409,]  164 #>  [8410,]  164 #>  [8411,]  164 #>  [8412,]  163 #>  [8413,]  164 #>  [8414,]  164 #>  [8415,]  164 #>  [8416,]  164 #>  [8417,]  164 #>  [8418,]  164 #>  [8419,]  164 #>  [8420,]  164 #>  [8421,]  164 #>  [8422,]  164 #>  [8423,]  164 #>  [8424,]  164 #>  [8425,]  163 #>  [8426,]  164 #>  [8427,]  164 #>  [8428,]  164 #>  [8429,]  164 #>  [8430,]  164 #>  [8431,]  163 #>  [8432,]  164 #>  [8433,]  164 #>  [8434,]  164 #>  [8435,]  164 #>  [8436,]  164 #>  [8437,]  164 #>  [8438,]  164 #>  [8439,]  164 #>  [8440,]  164 #>  [8441,]  164 #>  [8442,]  164 #>  [8443,]  164 #>  [8444,]  164 #>  [8445,]  164 #>  [8446,]  164 #>  [8447,]  164 #>  [8448,]  164 #>  [8449,]  164 #>  [8450,]  164 #>  [8451,]  164 #>  [8452,]  163 #>  [8453,]  164 #>  [8454,]  164 #>  [8455,]  164 #>  [8456,]  164 #>  [8457,]  163 #>  [8458,]  164 #>  [8459,]  163 #>  [8460,]  163 #>  [8461,]  164 #>  [8462,]  164 #>  [8463,]  164 #>  [8464,]  164 #>  [8465,]  164 #>  [8466,]  164 #>  [8467,]  164 #>  [8468,]  164 #>  [8469,]  164 #>  [8470,]  164 #>  [8471,]  164 #>  [8472,]  164 #>  [8473,]  164 #>  [8474,]  164 #>  [8475,]  164 #>  [8476,]  164 #>  [8477,]  164 #>  [8478,]  164 #>  [8479,]  164 #>  [8480,]  164 #>  [8481,]  164 #>  [8482,]  164 #>  [8483,]  164 #>  [8484,]  164 #>  [8485,]  164 #>  [8486,]  164 #>  [8487,]  164 #>  [8488,]  164 #>  [8489,]  164 #>  [8490,]  164 #>  [8491,]  164 #>  [8492,]  164 #>  [8493,]  164 #>  [8494,]  164 #>  [8495,]  164 #>  [8496,]  163 #>  [8497,]  163 #>  [8498,]  164 #>  [8499,]  164 #>  [8500,]  164 #>  [8501,]  166 #>  [8502,]  166 #>  [8503,]  165 #>  [8504,]  166 #>  [8505,]  166 #>  [8506,]  165 #>  [8507,]  166 #>  [8508,]  166 #>  [8509,]  166 #>  [8510,]  166 #>  [8511,]  165 #>  [8512,]  166 #>  [8513,]  166 #>  [8514,]  166 #>  [8515,]  166 #>  [8516,]  165 #>  [8517,]  166 #>  [8518,]  166 #>  [8519,]  165 #>  [8520,]  166 #>  [8521,]  166 #>  [8522,]  166 #>  [8523,]  166 #>  [8524,]  166 #>  [8525,]  166 #>  [8526,]  166 #>  [8527,]  166 #>  [8528,]  165 #>  [8529,]  166 #>  [8530,]  166 #>  [8531,]  166 #>  [8532,]  166 #>  [8533,]  166 #>  [8534,]  165 #>  [8535,]  165 #>  [8536,]  166 #>  [8537,]  165 #>  [8538,]  165 #>  [8539,]  166 #>  [8540,]  166 #>  [8541,]  166 #>  [8542,]  166 #>  [8543,]  166 #>  [8544,]  166 #>  [8545,]  165 #>  [8546,]  166 #>  [8547,]  166 #>  [8548,]  166 #>  [8549,]  165 #>  [8550,]  166 #>  [8551,]  166 #>  [8552,]  165 #>  [8553,]  166 #>  [8554,]  166 #>  [8555,]  166 #>  [8556,]  166 #>  [8557,]  166 #>  [8558,]  166 #>  [8559,]  166 #>  [8560,]  166 #>  [8561,]  166 #>  [8562,]  166 #>  [8563,]  166 #>  [8564,]  165 #>  [8565,]  166 #>  [8566,]  166 #>  [8567,]  166 #>  [8568,]  165 #>  [8569,]  166 #>  [8570,]  166 #>  [8571,]  166 #>  [8572,]  165 #>  [8573,]  166 #>  [8574,]  166 #>  [8575,]  166 #>  [8576,]  166 #>  [8577,]  165 #>  [8578,]  166 #>  [8579,]  166 #>  [8580,]  166 #>  [8581,]  166 #>  [8582,]  166 #>  [8583,]  166 #>  [8584,]  166 #>  [8585,]  166 #>  [8586,]  166 #>  [8587,]  166 #>  [8588,]  166 #>  [8589,]  166 #>  [8590,]  166 #>  [8591,]  166 #>  [8592,]  166 #>  [8593,]  166 #>  [8594,]  166 #>  [8595,]  166 #>  [8596,]  165 #>  [8597,]  165 #>  [8598,]  166 #>  [8599,]  166 #>  [8600,]  165 #>  [8601,]  167 #>  [8602,]  168 #>  [8603,]  167 #>  [8604,]  167 #>  [8605,]  167 #>  [8606,]  167 #>  [8607,]  167 #>  [8608,]  167 #>  [8609,]  168 #>  [8610,]  168 #>  [8611,]  167 #>  [8612,]  168 #>  [8613,]  168 #>  [8614,]  167 #>  [8615,]  167 #>  [8616,]  167 #>  [8617,]  168 #>  [8618,]  168 #>  [8619,]  167 #>  [8620,]  168 #>  [8621,]  168 #>  [8622,]  167 #>  [8623,]  168 #>  [8624,]  168 #>  [8625,]  167 #>  [8626,]  167 #>  [8627,]  168 #>  [8628,]  167 #>  [8629,]  168 #>  [8630,]  167 #>  [8631,]  168 #>  [8632,]  168 #>  [8633,]  168 #>  [8634,]  167 #>  [8635,]  167 #>  [8636,]  168 #>  [8637,]  167 #>  [8638,]  167 #>  [8639,]  167 #>  [8640,]  168 #>  [8641,]  167 #>  [8642,]  167 #>  [8643,]  167 #>  [8644,]  167 #>  [8645,]  167 #>  [8646,]  167 #>  [8647,]  167 #>  [8648,]  167 #>  [8649,]  167 #>  [8650,]  167 #>  [8651,]  167 #>  [8652,]  167 #>  [8653,]  168 #>  [8654,]  167 #>  [8655,]  167 #>  [8656,]  167 #>  [8657,]  167 #>  [8658,]  167 #>  [8659,]  167 #>  [8660,]  168 #>  [8661,]  168 #>  [8662,]  167 #>  [8663,]  168 #>  [8664,]  167 #>  [8665,]  167 #>  [8666,]  167 #>  [8667,]  167 #>  [8668,]  167 #>  [8669,]  167 #>  [8670,]  168 #>  [8671,]  167 #>  [8672,]  167 #>  [8673,]  167 #>  [8674,]  167 #>  [8675,]  168 #>  [8676,]  167 #>  [8677,]  167 #>  [8678,]  167 #>  [8679,]  167 #>  [8680,]  168 #>  [8681,]  168 #>  [8682,]  167 #>  [8683,]  168 #>  [8684,]  168 #>  [8685,]  167 #>  [8686,]  168 #>  [8687,]  167 #>  [8688,]  168 #>  [8689,]  167 #>  [8690,]  167 #>  [8691,]  167 #>  [8692,]  167 #>  [8693,]  167 #>  [8694,]  167 #>  [8695,]  167 #>  [8696,]  167 #>  [8697,]  167 #>  [8698,]  167 #>  [8699,]  167 #>  [8700,]  167 #>  [8701,]  169 #>  [8702,]  169 #>  [8703,]  169 #>  [8704,]  170 #>  [8705,]  169 #>  [8706,]  170 #>  [8707,]  169 #>  [8708,]  169 #>  [8709,]  170 #>  [8710,]  170 #>  [8711,]  170 #>  [8712,]  170 #>  [8713,]  169 #>  [8714,]  170 #>  [8715,]  170 #>  [8716,]  169 #>  [8717,]  169 #>  [8718,]  170 #>  [8719,]  170 #>  [8720,]  169 #>  [8721,]  170 #>  [8722,]  169 #>  [8723,]  170 #>  [8724,]  169 #>  [8725,]  169 #>  [8726,]  170 #>  [8727,]  170 #>  [8728,]  169 #>  [8729,]  169 #>  [8730,]  170 #>  [8731,]  170 #>  [8732,]  170 #>  [8733,]  170 #>  [8734,]  170 #>  [8735,]  169 #>  [8736,]  170 #>  [8737,]  169 #>  [8738,]  170 #>  [8739,]  169 #>  [8740,]  169 #>  [8741,]  170 #>  [8742,]  170 #>  [8743,]  169 #>  [8744,]  169 #>  [8745,]  169 #>  [8746,]  169 #>  [8747,]  169 #>  [8748,]  170 #>  [8749,]  169 #>  [8750,]  169 #>  [8751,]  169 #>  [8752,]  170 #>  [8753,]  169 #>  [8754,]  169 #>  [8755,]  169 #>  [8756,]  169 #>  [8757,]  169 #>  [8758,]  170 #>  [8759,]  169 #>  [8760,]  170 #>  [8761,]  170 #>  [8762,]  170 #>  [8763,]  169 #>  [8764,]  170 #>  [8765,]  169 #>  [8766,]  169 #>  [8767,]  170 #>  [8768,]  170 #>  [8769,]  170 #>  [8770,]  169 #>  [8771,]  169 #>  [8772,]  169 #>  [8773,]  170 #>  [8774,]  170 #>  [8775,]  170 #>  [8776,]  169 #>  [8777,]  169 #>  [8778,]  169 #>  [8779,]  169 #>  [8780,]  170 #>  [8781,]  169 #>  [8782,]  170 #>  [8783,]  169 #>  [8784,]  169 #>  [8785,]  170 #>  [8786,]  169 #>  [8787,]  169 #>  [8788,]  169 #>  [8789,]  169 #>  [8790,]  169 #>  [8791,]  170 #>  [8792,]  170 #>  [8793,]  170 #>  [8794,]  169 #>  [8795,]  169 #>  [8796,]  170 #>  [8797,]  170 #>  [8798,]  169 #>  [8799,]  170 #>  [8800,]  169 #>  [8801,]  171 #>  [8802,]  172 #>  [8803,]  172 #>  [8804,]  171 #>  [8805,]  171 #>  [8806,]  172 #>  [8807,]  172 #>  [8808,]  171 #>  [8809,]  171 #>  [8810,]  171 #>  [8811,]  171 #>  [8812,]  172 #>  [8813,]  171 #>  [8814,]  171 #>  [8815,]  171 #>  [8816,]  171 #>  [8817,]  171 #>  [8818,]  172 #>  [8819,]  172 #>  [8820,]  172 #>  [8821,]  171 #>  [8822,]  171 #>  [8823,]  172 #>  [8824,]  171 #>  [8825,]  172 #>  [8826,]  171 #>  [8827,]  171 #>  [8828,]  172 #>  [8829,]  171 #>  [8830,]  171 #>  [8831,]  172 #>  [8832,]  172 #>  [8833,]  172 #>  [8834,]  172 #>  [8835,]  171 #>  [8836,]  171 #>  [8837,]  171 #>  [8838,]  171 #>  [8839,]  171 #>  [8840,]  172 #>  [8841,]  171 #>  [8842,]  172 #>  [8843,]  171 #>  [8844,]  171 #>  [8845,]  171 #>  [8846,]  171 #>  [8847,]  171 #>  [8848,]  172 #>  [8849,]  171 #>  [8850,]  171 #>  [8851,]  171 #>  [8852,]  171 #>  [8853,]  171 #>  [8854,]  171 #>  [8855,]  171 #>  [8856,]  172 #>  [8857,]  171 #>  [8858,]  171 #>  [8859,]  171 #>  [8860,]  172 #>  [8861,]  171 #>  [8862,]  171 #>  [8863,]  171 #>  [8864,]  172 #>  [8865,]  172 #>  [8866,]  171 #>  [8867,]  171 #>  [8868,]  171 #>  [8869,]  171 #>  [8870,]  172 #>  [8871,]  172 #>  [8872,]  171 #>  [8873,]  172 #>  [8874,]  171 #>  [8875,]  171 #>  [8876,]  171 #>  [8877,]  171 #>  [8878,]  172 #>  [8879,]  171 #>  [8880,]  171 #>  [8881,]  171 #>  [8882,]  171 #>  [8883,]  171 #>  [8884,]  172 #>  [8885,]  171 #>  [8886,]  171 #>  [8887,]  171 #>  [8888,]  171 #>  [8889,]  171 #>  [8890,]  171 #>  [8891,]  171 #>  [8892,]  171 #>  [8893,]  172 #>  [8894,]  171 #>  [8895,]  171 #>  [8896,]  171 #>  [8897,]  172 #>  [8898,]  172 #>  [8899,]  171 #>  [8900,]  172 #>  [8901,]  174 #>  [8902,]  173 #>  [8903,]  174 #>  [8904,]  174 #>  [8905,]  174 #>  [8906,]  173 #>  [8907,]  174 #>  [8908,]  174 #>  [8909,]  174 #>  [8910,]  174 #>  [8911,]  173 #>  [8912,]  173 #>  [8913,]  174 #>  [8914,]  174 #>  [8915,]  173 #>  [8916,]  174 #>  [8917,]  173 #>  [8918,]  174 #>  [8919,]  173 #>  [8920,]  174 #>  [8921,]  174 #>  [8922,]  174 #>  [8923,]  173 #>  [8924,]  174 #>  [8925,]  174 #>  [8926,]  173 #>  [8927,]  174 #>  [8928,]  174 #>  [8929,]  173 #>  [8930,]  173 #>  [8931,]  173 #>  [8932,]  174 #>  [8933,]  174 #>  [8934,]  173 #>  [8935,]  173 #>  [8936,]  174 #>  [8937,]  173 #>  [8938,]  174 #>  [8939,]  174 #>  [8940,]  174 #>  [8941,]  174 #>  [8942,]  173 #>  [8943,]  173 #>  [8944,]  173 #>  [8945,]  174 #>  [8946,]  174 #>  [8947,]  173 #>  [8948,]  173 #>  [8949,]  174 #>  [8950,]  174 #>  [8951,]  174 #>  [8952,]  174 #>  [8953,]  174 #>  [8954,]  174 #>  [8955,]  174 #>  [8956,]  173 #>  [8957,]  174 #>  [8958,]  174 #>  [8959,]  174 #>  [8960,]  173 #>  [8961,]  173 #>  [8962,]  174 #>  [8963,]  173 #>  [8964,]  173 #>  [8965,]  173 #>  [8966,]  173 #>  [8967,]  174 #>  [8968,]  173 #>  [8969,]  174 #>  [8970,]  173 #>  [8971,]  174 #>  [8972,]  174 #>  [8973,]  174 #>  [8974,]  174 #>  [8975,]  173 #>  [8976,]  174 #>  [8977,]  174 #>  [8978,]  173 #>  [8979,]  173 #>  [8980,]  174 #>  [8981,]  173 #>  [8982,]  174 #>  [8983,]  174 #>  [8984,]  174 #>  [8985,]  174 #>  [8986,]  174 #>  [8987,]  174 #>  [8988,]  174 #>  [8989,]  174 #>  [8990,]  174 #>  [8991,]  174 #>  [8992,]  173 #>  [8993,]  174 #>  [8994,]  173 #>  [8995,]  173 #>  [8996,]  173 #>  [8997,]  174 #>  [8998,]  174 #>  [8999,]  174 #>  [9000,]  173 #>  [9001,]  175 #>  [9002,]  175 #>  [9003,]  175 #>  [9004,]  176 #>  [9005,]  175 #>  [9006,]  175 #>  [9007,]  175 #>  [9008,]  175 #>  [9009,]  175 #>  [9010,]  176 #>  [9011,]  175 #>  [9012,]  175 #>  [9013,]  175 #>  [9014,]  175 #>  [9015,]  175 #>  [9016,]  175 #>  [9017,]  175 #>  [9018,]  176 #>  [9019,]  175 #>  [9020,]  175 #>  [9021,]  176 #>  [9022,]  175 #>  [9023,]  175 #>  [9024,]  175 #>  [9025,]  176 #>  [9026,]  175 #>  [9027,]  175 #>  [9028,]  175 #>  [9029,]  175 #>  [9030,]  175 #>  [9031,]  175 #>  [9032,]  175 #>  [9033,]  175 #>  [9034,]  175 #>  [9035,]  175 #>  [9036,]  175 #>  [9037,]  175 #>  [9038,]  175 #>  [9039,]  176 #>  [9040,]  175 #>  [9041,]  175 #>  [9042,]  175 #>  [9043,]  176 #>  [9044,]  175 #>  [9045,]  176 #>  [9046,]  175 #>  [9047,]  175 #>  [9048,]  175 #>  [9049,]  175 #>  [9050,]  175 #>  [9051,]  175 #>  [9052,]  175 #>  [9053,]  176 #>  [9054,]  175 #>  [9055,]  175 #>  [9056,]  175 #>  [9057,]  175 #>  [9058,]  175 #>  [9059,]  175 #>  [9060,]  175 #>  [9061,]  175 #>  [9062,]  175 #>  [9063,]  175 #>  [9064,]  175 #>  [9065,]  175 #>  [9066,]  175 #>  [9067,]  175 #>  [9068,]  175 #>  [9069,]  175 #>  [9070,]  175 #>  [9071,]  175 #>  [9072,]  176 #>  [9073,]  176 #>  [9074,]  176 #>  [9075,]  176 #>  [9076,]  176 #>  [9077,]  176 #>  [9078,]  175 #>  [9079,]  175 #>  [9080,]  175 #>  [9081,]  175 #>  [9082,]  175 #>  [9083,]  175 #>  [9084,]  175 #>  [9085,]  175 #>  [9086,]  175 #>  [9087,]  175 #>  [9088,]  175 #>  [9089,]  175 #>  [9090,]  175 #>  [9091,]  175 #>  [9092,]  175 #>  [9093,]  175 #>  [9094,]  176 #>  [9095,]  176 #>  [9096,]  175 #>  [9097,]  175 #>  [9098,]  175 #>  [9099,]  175 #>  [9100,]  175 #>  [9101,]  178 #>  [9102,]  177 #>  [9103,]  178 #>  [9104,]  178 #>  [9105,]  178 #>  [9106,]  177 #>  [9107,]  178 #>  [9108,]  178 #>  [9109,]  178 #>  [9110,]  178 #>  [9111,]  177 #>  [9112,]  177 #>  [9113,]  178 #>  [9114,]  178 #>  [9115,]  177 #>  [9116,]  178 #>  [9117,]  177 #>  [9118,]  177 #>  [9119,]  177 #>  [9120,]  178 #>  [9121,]  177 #>  [9122,]  178 #>  [9123,]  177 #>  [9124,]  178 #>  [9125,]  178 #>  [9126,]  177 #>  [9127,]  178 #>  [9128,]  178 #>  [9129,]  177 #>  [9130,]  177 #>  [9131,]  177 #>  [9132,]  177 #>  [9133,]  178 #>  [9134,]  177 #>  [9135,]  177 #>  [9136,]  178 #>  [9137,]  177 #>  [9138,]  178 #>  [9139,]  178 #>  [9140,]  178 #>  [9141,]  178 #>  [9142,]  177 #>  [9143,]  177 #>  [9144,]  177 #>  [9145,]  178 #>  [9146,]  177 #>  [9147,]  177 #>  [9148,]  177 #>  [9149,]  178 #>  [9150,]  178 #>  [9151,]  177 #>  [9152,]  178 #>  [9153,]  178 #>  [9154,]  178 #>  [9155,]  178 #>  [9156,]  177 #>  [9157,]  178 #>  [9158,]  178 #>  [9159,]  178 #>  [9160,]  177 #>  [9161,]  177 #>  [9162,]  177 #>  [9163,]  177 #>  [9164,]  177 #>  [9165,]  177 #>  [9166,]  177 #>  [9167,]  178 #>  [9168,]  177 #>  [9169,]  177 #>  [9170,]  177 #>  [9171,]  178 #>  [9172,]  178 #>  [9173,]  178 #>  [9174,]  178 #>  [9175,]  177 #>  [9176,]  178 #>  [9177,]  178 #>  [9178,]  177 #>  [9179,]  177 #>  [9180,]  178 #>  [9181,]  177 #>  [9182,]  177 #>  [9183,]  178 #>  [9184,]  178 #>  [9185,]  178 #>  [9186,]  178 #>  [9187,]  178 #>  [9188,]  178 #>  [9189,]  177 #>  [9190,]  178 #>  [9191,]  178 #>  [9192,]  177 #>  [9193,]  177 #>  [9194,]  177 #>  [9195,]  177 #>  [9196,]  177 #>  [9197,]  177 #>  [9198,]  178 #>  [9199,]  178 #>  [9200,]  177 #>  [9201,]  179 #>  [9202,]  179 #>  [9203,]  179 #>  [9204,]  179 #>  [9205,]  179 #>  [9206,]  180 #>  [9207,]  179 #>  [9208,]  180 #>  [9209,]  180 #>  [9210,]  179 #>  [9211,]  179 #>  [9212,]  180 #>  [9213,]  179 #>  [9214,]  179 #>  [9215,]  180 #>  [9216,]  179 #>  [9217,]  179 #>  [9218,]  179 #>  [9219,]  179 #>  [9220,]  180 #>  [9221,]  179 #>  [9222,]  179 #>  [9223,]  179 #>  [9224,]  179 #>  [9225,]  179 #>  [9226,]  180 #>  [9227,]  179 #>  [9228,]  179 #>  [9229,]  179 #>  [9230,]  179 #>  [9231,]  179 #>  [9232,]  179 #>  [9233,]  180 #>  [9234,]  179 #>  [9235,]  179 #>  [9236,]  179 #>  [9237,]  179 #>  [9238,]  179 #>  [9239,]  179 #>  [9240,]  179 #>  [9241,]  179 #>  [9242,]  179 #>  [9243,]  180 #>  [9244,]  179 #>  [9245,]  180 #>  [9246,]  180 #>  [9247,]  179 #>  [9248,]  179 #>  [9249,]  179 #>  [9250,]  180 #>  [9251,]  180 #>  [9252,]  179 #>  [9253,]  180 #>  [9254,]  179 #>  [9255,]  179 #>  [9256,]  180 #>  [9257,]  180 #>  [9258,]  180 #>  [9259,]  179 #>  [9260,]  179 #>  [9261,]  180 #>  [9262,]  179 #>  [9263,]  179 #>  [9264,]  180 #>  [9265,]  180 #>  [9266,]  180 #>  [9267,]  179 #>  [9268,]  180 #>  [9269,]  179 #>  [9270,]  179 #>  [9271,]  179 #>  [9272,]  180 #>  [9273,]  179 #>  [9274,]  179 #>  [9275,]  179 #>  [9276,]  180 #>  [9277,]  179 #>  [9278,]  180 #>  [9279,]  179 #>  [9280,]  179 #>  [9281,]  180 #>  [9282,]  179 #>  [9283,]  179 #>  [9284,]  179 #>  [9285,]  179 #>  [9286,]  179 #>  [9287,]  179 #>  [9288,]  179 #>  [9289,]  179 #>  [9290,]  179 #>  [9291,]  179 #>  [9292,]  180 #>  [9293,]  179 #>  [9294,]  180 #>  [9295,]  179 #>  [9296,]  180 #>  [9297,]  180 #>  [9298,]  179 #>  [9299,]  179 #>  [9300,]  179 #>  [9301,]  181 #>  [9302,]  181 #>  [9303,]  181 #>  [9304,]  181 #>  [9305,]  181 #>  [9306,]  181 #>  [9307,]  181 #>  [9308,]  182 #>  [9309,]  181 #>  [9310,]  181 #>  [9311,]  181 #>  [9312,]  181 #>  [9313,]  182 #>  [9314,]  181 #>  [9315,]  182 #>  [9316,]  181 #>  [9317,]  181 #>  [9318,]  181 #>  [9319,]  182 #>  [9320,]  182 #>  [9321,]  181 #>  [9322,]  182 #>  [9323,]  181 #>  [9324,]  181 #>  [9325,]  181 #>  [9326,]  181 #>  [9327,]  182 #>  [9328,]  181 #>  [9329,]  182 #>  [9330,]  181 #>  [9331,]  181 #>  [9332,]  181 #>  [9333,]  181 #>  [9334,]  181 #>  [9335,]  181 #>  [9336,]  182 #>  [9337,]  182 #>  [9338,]  182 #>  [9339,]  181 #>  [9340,]  181 #>  [9341,]  182 #>  [9342,]  181 #>  [9343,]  182 #>  [9344,]  181 #>  [9345,]  181 #>  [9346,]  182 #>  [9347,]  181 #>  [9348,]  181 #>  [9349,]  181 #>  [9350,]  182 #>  [9351,]  182 #>  [9352,]  181 #>  [9353,]  182 #>  [9354,]  181 #>  [9355,]  182 #>  [9356,]  181 #>  [9357,]  181 #>  [9358,]  182 #>  [9359,]  182 #>  [9360,]  182 #>  [9361,]  181 #>  [9362,]  181 #>  [9363,]  181 #>  [9364,]  182 #>  [9365,]  181 #>  [9366,]  182 #>  [9367,]  181 #>  [9368,]  181 #>  [9369,]  182 #>  [9370,]  181 #>  [9371,]  182 #>  [9372,]  181 #>  [9373,]  181 #>  [9374,]  181 #>  [9375,]  181 #>  [9376,]  181 #>  [9377,]  182 #>  [9378,]  181 #>  [9379,]  181 #>  [9380,]  182 #>  [9381,]  182 #>  [9382,]  181 #>  [9383,]  182 #>  [9384,]  182 #>  [9385,]  182 #>  [9386,]  181 #>  [9387,]  182 #>  [9388,]  181 #>  [9389,]  181 #>  [9390,]  182 #>  [9391,]  181 #>  [9392,]  181 #>  [9393,]  181 #>  [9394,]  181 #>  [9395,]  182 #>  [9396,]  182 #>  [9397,]  182 #>  [9398,]  181 #>  [9399,]  181 #>  [9400,]  182 #>  [9401,]  183 #>  [9402,]  184 #>  [9403,]  183 #>  [9404,]  183 #>  [9405,]  183 #>  [9406,]  183 #>  [9407,]  183 #>  [9408,]  183 #>  [9409,]  183 #>  [9410,]  184 #>  [9411,]  183 #>  [9412,]  184 #>  [9413,]  183 #>  [9414,]  183 #>  [9415,]  183 #>  [9416,]  183 #>  [9417,]  183 #>  [9418,]  183 #>  [9419,]  183 #>  [9420,]  183 #>  [9421,]  184 #>  [9422,]  183 #>  [9423,]  183 #>  [9424,]  183 #>  [9425,]  183 #>  [9426,]  183 #>  [9427,]  183 #>  [9428,]  183 #>  [9429,]  183 #>  [9430,]  183 #>  [9431,]  183 #>  [9432,]  183 #>  [9433,]  183 #>  [9434,]  183 #>  [9435,]  183 #>  [9436,]  183 #>  [9437,]  183 #>  [9438,]  183 #>  [9439,]  183 #>  [9440,]  183 #>  [9441,]  183 #>  [9442,]  183 #>  [9443,]  183 #>  [9444,]  183 #>  [9445,]  183 #>  [9446,]  183 #>  [9447,]  183 #>  [9448,]  183 #>  [9449,]  183 #>  [9450,]  183 #>  [9451,]  183 #>  [9452,]  183 #>  [9453,]  183 #>  [9454,]  183 #>  [9455,]  183 #>  [9456,]  183 #>  [9457,]  183 #>  [9458,]  183 #>  [9459,]  183 #>  [9460,]  183 #>  [9461,]  183 #>  [9462,]  183 #>  [9463,]  183 #>  [9464,]  183 #>  [9465,]  183 #>  [9466,]  183 #>  [9467,]  183 #>  [9468,]  183 #>  [9469,]  183 #>  [9470,]  183 #>  [9471,]  183 #>  [9472,]  183 #>  [9473,]  183 #>  [9474,]  183 #>  [9475,]  183 #>  [9476,]  183 #>  [9477,]  183 #>  [9478,]  183 #>  [9479,]  183 #>  [9480,]  183 #>  [9481,]  183 #>  [9482,]  183 #>  [9483,]  183 #>  [9484,]  183 #>  [9485,]  183 #>  [9486,]  184 #>  [9487,]  183 #>  [9488,]  183 #>  [9489,]  183 #>  [9490,]  183 #>  [9491,]  183 #>  [9492,]  183 #>  [9493,]  183 #>  [9494,]  183 #>  [9495,]  183 #>  [9496,]  183 #>  [9497,]  183 #>  [9498,]  183 #>  [9499,]  183 #>  [9500,]  183 #>  [9501,]  186 #>  [9502,]  186 #>  [9503,]  185 #>  [9504,]  185 #>  [9505,]  186 #>  [9506,]  186 #>  [9507,]  185 #>  [9508,]  185 #>  [9509,]  186 #>  [9510,]  186 #>  [9511,]  186 #>  [9512,]  185 #>  [9513,]  186 #>  [9514,]  186 #>  [9515,]  186 #>  [9516,]  186 #>  [9517,]  186 #>  [9518,]  186 #>  [9519,]  186 #>  [9520,]  186 #>  [9521,]  186 #>  [9522,]  186 #>  [9523,]  186 #>  [9524,]  186 #>  [9525,]  185 #>  [9526,]  186 #>  [9527,]  186 #>  [9528,]  186 #>  [9529,]  186 #>  [9530,]  186 #>  [9531,]  185 #>  [9532,]  186 #>  [9533,]  186 #>  [9534,]  186 #>  [9535,]  186 #>  [9536,]  186 #>  [9537,]  186 #>  [9538,]  186 #>  [9539,]  186 #>  [9540,]  186 #>  [9541,]  186 #>  [9542,]  186 #>  [9543,]  186 #>  [9544,]  186 #>  [9545,]  186 #>  [9546,]  186 #>  [9547,]  186 #>  [9548,]  186 #>  [9549,]  186 #>  [9550,]  186 #>  [9551,]  186 #>  [9552,]  185 #>  [9553,]  186 #>  [9554,]  186 #>  [9555,]  186 #>  [9556,]  186 #>  [9557,]  185 #>  [9558,]  186 #>  [9559,]  185 #>  [9560,]  185 #>  [9561,]  186 #>  [9562,]  186 #>  [9563,]  186 #>  [9564,]  186 #>  [9565,]  186 #>  [9566,]  186 #>  [9567,]  186 #>  [9568,]  186 #>  [9569,]  186 #>  [9570,]  186 #>  [9571,]  186 #>  [9572,]  186 #>  [9573,]  186 #>  [9574,]  186 #>  [9575,]  186 #>  [9576,]  186 #>  [9577,]  186 #>  [9578,]  186 #>  [9579,]  186 #>  [9580,]  186 #>  [9581,]  186 #>  [9582,]  186 #>  [9583,]  186 #>  [9584,]  186 #>  [9585,]  186 #>  [9586,]  186 #>  [9587,]  186 #>  [9588,]  186 #>  [9589,]  186 #>  [9590,]  186 #>  [9591,]  186 #>  [9592,]  186 #>  [9593,]  186 #>  [9594,]  186 #>  [9595,]  186 #>  [9596,]  185 #>  [9597,]  185 #>  [9598,]  186 #>  [9599,]  186 #>  [9600,]  186 #>  [9601,]  187 #>  [9602,]  187 #>  [9603,]  187 #>  [9604,]  187 #>  [9605,]  187 #>  [9606,]  187 #>  [9607,]  187 #>  [9608,]  187 #>  [9609,]  187 #>  [9610,]  187 #>  [9611,]  187 #>  [9612,]  187 #>  [9613,]  187 #>  [9614,]  187 #>  [9615,]  187 #>  [9616,]  187 #>  [9617,]  187 #>  [9618,]  187 #>  [9619,]  187 #>  [9620,]  187 #>  [9621,]  187 #>  [9622,]  187 #>  [9623,]  187 #>  [9624,]  187 #>  [9625,]  187 #>  [9626,]  187 #>  [9627,]  187 #>  [9628,]  187 #>  [9629,]  187 #>  [9630,]  187 #>  [9631,]  187 #>  [9632,]  187 #>  [9633,]  187 #>  [9634,]  187 #>  [9635,]  187 #>  [9636,]  187 #>  [9637,]  187 #>  [9638,]  187 #>  [9639,]  187 #>  [9640,]  187 #>  [9641,]  187 #>  [9642,]  187 #>  [9643,]  187 #>  [9644,]  187 #>  [9645,]  187 #>  [9646,]  187 #>  [9647,]  187 #>  [9648,]  187 #>  [9649,]  187 #>  [9650,]  187 #>  [9651,]  187 #>  [9652,]  187 #>  [9653,]  187 #>  [9654,]  187 #>  [9655,]  187 #>  [9656,]  187 #>  [9657,]  187 #>  [9658,]  187 #>  [9659,]  187 #>  [9660,]  187 #>  [9661,]  187 #>  [9662,]  187 #>  [9663,]  187 #>  [9664,]  187 #>  [9665,]  187 #>  [9666,]  187 #>  [9667,]  187 #>  [9668,]  187 #>  [9669,]  187 #>  [9670,]  187 #>  [9671,]  187 #>  [9672,]  187 #>  [9673,]  187 #>  [9674,]  187 #>  [9675,]  187 #>  [9676,]  187 #>  [9677,]  187 #>  [9678,]  187 #>  [9679,]  187 #>  [9680,]  187 #>  [9681,]  187 #>  [9682,]  187 #>  [9683,]  187 #>  [9684,]  187 #>  [9685,]  187 #>  [9686,]  187 #>  [9687,]  187 #>  [9688,]  187 #>  [9689,]  187 #>  [9690,]  187 #>  [9691,]  187 #>  [9692,]  187 #>  [9693,]  187 #>  [9694,]  187 #>  [9695,]  187 #>  [9696,]  187 #>  [9697,]  187 #>  [9698,]  187 #>  [9699,]  187 #>  [9700,]  187 #>  [9701,]  189 #>  [9702,]  189 #>  [9703,]  189 #>  [9704,]  189 #>  [9705,]  189 #>  [9706,]  189 #>  [9707,]  189 #>  [9708,]  189 #>  [9709,]  189 #>  [9710,]  189 #>  [9711,]  189 #>  [9712,]  189 #>  [9713,]  189 #>  [9714,]  189 #>  [9715,]  188 #>  [9716,]  189 #>  [9717,]  188 #>  [9718,]  189 #>  [9719,]  189 #>  [9720,]  189 #>  [9721,]  189 #>  [9722,]  189 #>  [9723,]  189 #>  [9724,]  189 #>  [9725,]  189 #>  [9726,]  189 #>  [9727,]  189 #>  [9728,]  189 #>  [9729,]  189 #>  [9730,]  189 #>  [9731,]  188 #>  [9732,]  189 #>  [9733,]  189 #>  [9734,]  188 #>  [9735,]  189 #>  [9736,]  189 #>  [9737,]  188 #>  [9738,]  189 #>  [9739,]  189 #>  [9740,]  189 #>  [9741,]  189 #>  [9742,]  188 #>  [9743,]  188 #>  [9744,]  188 #>  [9745,]  189 #>  [9746,]  189 #>  [9747,]  189 #>  [9748,]  188 #>  [9749,]  189 #>  [9750,]  189 #>  [9751,]  189 #>  [9752,]  189 #>  [9753,]  189 #>  [9754,]  189 #>  [9755,]  189 #>  [9756,]  189 #>  [9757,]  189 #>  [9758,]  189 #>  [9759,]  189 #>  [9760,]  189 #>  [9761,]  189 #>  [9762,]  189 #>  [9763,]  188 #>  [9764,]  189 #>  [9765,]  189 #>  [9766,]  189 #>  [9767,]  189 #>  [9768,]  189 #>  [9769,]  189 #>  [9770,]  188 #>  [9771,]  189 #>  [9772,]  189 #>  [9773,]  189 #>  [9774,]  189 #>  [9775,]  188 #>  [9776,]  189 #>  [9777,]  189 #>  [9778,]  188 #>  [9779,]  188 #>  [9780,]  189 #>  [9781,]  189 #>  [9782,]  189 #>  [9783,]  189 #>  [9784,]  189 #>  [9785,]  189 #>  [9786,]  189 #>  [9787,]  189 #>  [9788,]  189 #>  [9789,]  189 #>  [9790,]  189 #>  [9791,]  189 #>  [9792,]  189 #>  [9793,]  189 #>  [9794,]  189 #>  [9795,]  188 #>  [9796,]  189 #>  [9797,]  189 #>  [9798,]  189 #>  [9799,]  189 #>  [9800,]  188 #>  [9801,]  191 #>  [9802,]  190 #>  [9803,]  190 #>  [9804,]  191 #>  [9805,]  190 #>  [9806,]  190 #>  [9807,]  191 #>  [9808,]  191 #>  [9809,]  191 #>  [9810,]  191 #>  [9811,]  190 #>  [9812,]  190 #>  [9813,]  191 #>  [9814,]  190 #>  [9815,]  191 #>  [9816,]  191 #>  [9817,]  191 #>  [9818,]  191 #>  [9819,]  190 #>  [9820,]  190 #>  [9821,]  191 #>  [9822,]  190 #>  [9823,]  191 #>  [9824,]  190 #>  [9825,]  191 #>  [9826,]  190 #>  [9827,]  191 #>  [9828,]  191 #>  [9829,]  190 #>  [9830,]  190 #>  [9831,]  190 #>  [9832,]  190 #>  [9833,]  190 #>  [9834,]  190 #>  [9835,]  190 #>  [9836,]  190 #>  [9837,]  191 #>  [9838,]  191 #>  [9839,]  191 #>  [9840,]  190 #>  [9841,]  190 #>  [9842,]  190 #>  [9843,]  191 #>  [9844,]  191 #>  [9845,]  191 #>  [9846,]  191 #>  [9847,]  191 #>  [9848,]  190 #>  [9849,]  190 #>  [9850,]  190 #>  [9851,]  190 #>  [9852,]  190 #>  [9853,]  191 #>  [9854,]  190 #>  [9855,]  190 #>  [9856,]  191 #>  [9857,]  190 #>  [9858,]  190 #>  [9859,]  190 #>  [9860,]  190 #>  [9861,]  191 #>  [9862,]  190 #>  [9863,]  190 #>  [9864,]  191 #>  [9865,]  190 #>  [9866,]  190 #>  [9867,]  190 #>  [9868,]  190 #>  [9869,]  190 #>  [9870,]  191 #>  [9871,]  191 #>  [9872,]  191 #>  [9873,]  191 #>  [9874,]  191 #>  [9875,]  191 #>  [9876,]  191 #>  [9877,]  191 #>  [9878,]  190 #>  [9879,]  191 #>  [9880,]  190 #>  [9881,]  190 #>  [9882,]  191 #>  [9883,]  190 #>  [9884,]  191 #>  [9885,]  190 #>  [9886,]  191 #>  [9887,]  191 #>  [9888,]  191 #>  [9889,]  190 #>  [9890,]  191 #>  [9891,]  190 #>  [9892,]  190 #>  [9893,]  190 #>  [9894,]  191 #>  [9895,]  191 #>  [9896,]  191 #>  [9897,]  190 #>  [9898,]  190 #>  [9899,]  190 #>  [9900,]  191 #>  [9901,]  193 #>  [9902,]  192 #>  [9903,]  192 #>  [9904,]  193 #>  [9905,]  192 #>  [9906,]  192 #>  [9907,]  193 #>  [9908,]  192 #>  [9909,]  193 #>  [9910,]  193 #>  [9911,]  192 #>  [9912,]  192 #>  [9913,]  193 #>  [9914,]  193 #>  [9915,]  192 #>  [9916,]  193 #>  [9917,]  192 #>  [9918,]  192 #>  [9919,]  192 #>  [9920,]  193 #>  [9921,]  192 #>  [9922,]  193 #>  [9923,]  192 #>  [9924,]  193 #>  [9925,]  193 #>  [9926,]  192 #>  [9927,]  192 #>  [9928,]  193 #>  [9929,]  192 #>  [9930,]  192 #>  [9931,]  192 #>  [9932,]  192 #>  [9933,]  192 #>  [9934,]  192 #>  [9935,]  192 #>  [9936,]  193 #>  [9937,]  192 #>  [9938,]  192 #>  [9939,]  193 #>  [9940,]  192 #>  [9941,]  192 #>  [9942,]  192 #>  [9943,]  192 #>  [9944,]  192 #>  [9945,]  193 #>  [9946,]  192 #>  [9947,]  192 #>  [9948,]  192 #>  [9949,]  193 #>  [9950,]  193 #>  [9951,]  192 #>  [9952,]  193 #>  [9953,]  193 #>  [9954,]  193 #>  [9955,]  193 #>  [9956,]  192 #>  [9957,]  193 #>  [9958,]  193 #>  [9959,]  193 #>  [9960,]  192 #>  [9961,]  192 #>  [9962,]  192 #>  [9963,]  192 #>  [9964,]  192 #>  [9965,]  192 #>  [9966,]  192 #>  [9967,]  193 #>  [9968,]  192 #>  [9969,]  192 #>  [9970,]  192 #>  [9971,]  192 #>  [9972,]  193 #>  [9973,]  193 #>  [9974,]  192 #>  [9975,]  192 #>  [9976,]  193 #>  [9977,]  192 #>  [9978,]  192 #>  [9979,]  192 #>  [9980,]  192 #>  [9981,]  192 #>  [9982,]  192 #>  [9983,]  192 #>  [9984,]  192 #>  [9985,]  193 #>  [9986,]  193 #>  [9987,]  193 #>  [9988,]  193 #>  [9989,]  192 #>  [9990,]  193 #>  [9991,]  193 #>  [9992,]  192 #>  [9993,]  192 #>  [9994,]  192 #>  [9995,]  192 #>  [9996,]  192 #>  [9997,]  192 #>  [9998,]  192 #>  [9999,]  192 #> [10000,]  192 #> [10001,]  195 #> [10002,]  195 #> [10003,]  195 #> [10004,]  194 #> [10005,]  195 #> [10006,]  195 #> [10007,]  195 #> [10008,]  194 #> [10009,]  194 #> [10010,]  195 #> [10011,]  194 #> [10012,]  195 #> [10013,]  194 #> [10014,]  195 #> [10015,]  195 #> [10016,]  195 #> [10017,]  194 #> [10018,]  195 #> [10019,]  195 #> [10020,]  195 #> [10021,]  195 #> [10022,]  194 #> [10023,]  195 #> [10024,]  195 #> [10025,]  195 #> [10026,]  195 #> [10027,]  194 #> [10028,]  195 #> [10029,]  195 #> [10030,]  194 #> [10031,]  195 #> [10032,]  195 #> [10033,]  195 #> [10034,]  195 #> [10035,]  194 #> [10036,]  195 #> [10037,]  195 #> [10038,]  195 #> [10039,]  195 #> [10040,]  195 #> [10041,]  195 #> [10042,]  195 #> [10043,]  194 #> [10044,]  194 #> [10045,]  195 #> [10046,]  195 #> [10047,]  195 #> [10048,]  195 #> [10049,]  194 #> [10050,]  195 #> [10051,]  195 #> [10052,]  194 #> [10053,]  195 #> [10054,]  194 #> [10055,]  194 #> [10056,]  195 #> [10057,]  195 #> [10058,]  194 #> [10059,]  195 #> [10060,]  195 #> [10061,]  195 #> [10062,]  195 #> [10063,]  195 #> [10064,]  195 #> [10065,]  195 #> [10066,]  194 #> [10067,]  195 #> [10068,]  195 #> [10069,]  194 #> [10070,]  195 #> [10071,]  195 #> [10072,]  195 #> [10073,]  195 #> [10074,]  195 #> [10075,]  195 #> [10076,]  195 #> [10077,]  195 #> [10078,]  195 #> [10079,]  194 #> [10080,]  194 #> [10081,]  194 #> [10082,]  194 #> [10083,]  194 #> [10084,]  195 #> [10085,]  195 #> [10086,]  195 #> [10087,]  194 #> [10088,]  194 #> [10089,]  194 #> [10090,]  194 #> [10091,]  195 #> [10092,]  194 #> [10093,]  195 #> [10094,]  195 #> [10095,]  194 #> [10096,]  194 #> [10097,]  195 #> [10098,]  195 #> [10099,]  194 #> [10100,]  195 #> [10101,]  197 #> [10102,]  197 #> [10103,]  196 #> [10104,]  197 #> [10105,]  197 #> [10106,]  197 #> [10107,]  196 #> [10108,]  196 #> [10109,]  197 #> [10110,]  197 #> [10111,]  197 #> [10112,]  197 #> [10113,]  196 #> [10114,]  197 #> [10115,]  197 #> [10116,]  196 #> [10117,]  196 #> [10118,]  197 #> [10119,]  197 #> [10120,]  196 #> [10121,]  197 #> [10122,]  196 #> [10123,]  197 #> [10124,]  196 #> [10125,]  196 #> [10126,]  197 #> [10127,]  197 #> [10128,]  197 #> [10129,]  197 #> [10130,]  197 #> [10131,]  197 #> [10132,]  197 #> [10133,]  197 #> [10134,]  197 #> [10135,]  197 #> [10136,]  197 #> [10137,]  197 #> [10138,]  197 #> [10139,]  196 #> [10140,]  196 #> [10141,]  197 #> [10142,]  197 #> [10143,]  196 #> [10144,]  196 #> [10145,]  196 #> [10146,]  196 #> [10147,]  196 #> [10148,]  197 #> [10149,]  196 #> [10150,]  196 #> [10151,]  197 #> [10152,]  197 #> [10153,]  196 #> [10154,]  196 #> [10155,]  196 #> [10156,]  196 #> [10157,]  197 #> [10158,]  197 #> [10159,]  196 #> [10160,]  197 #> [10161,]  197 #> [10162,]  197 #> [10163,]  196 #> [10164,]  197 #> [10165,]  196 #> [10166,]  196 #> [10167,]  197 #> [10168,]  197 #> [10169,]  197 #> [10170,]  196 #> [10171,]  197 #> [10172,]  196 #> [10173,]  197 #> [10174,]  197 #> [10175,]  197 #> [10176,]  197 #> [10177,]  196 #> [10178,]  196 #> [10179,]  196 #> [10180,]  197 #> [10181,]  197 #> [10182,]  197 #> [10183,]  197 #> [10184,]  196 #> [10185,]  197 #> [10186,]  196 #> [10187,]  197 #> [10188,]  197 #> [10189,]  196 #> [10190,]  196 #> [10191,]  197 #> [10192,]  197 #> [10193,]  197 #> [10194,]  196 #> [10195,]  197 #> [10196,]  197 #> [10197,]  197 #> [10198,]  196 #> [10199,]  197 #> [10200,]  196 #> [10201,]  199 #> [10202,]  199 #> [10203,]  198 #> [10204,]  199 #> [10205,]  199 #> [10206,]  199 #> [10207,]  198 #> [10208,]  199 #> [10209,]  199 #> [10210,]  199 #> [10211,]  199 #> [10212,]  199 #> [10213,]  199 #> [10214,]  199 #> [10215,]  199 #> [10216,]  199 #> [10217,]  199 #> [10218,]  199 #> [10219,]  199 #> [10220,]  199 #> [10221,]  198 #> [10222,]  199 #> [10223,]  198 #> [10224,]  199 #> [10225,]  199 #> [10226,]  199 #> [10227,]  199 #> [10228,]  199 #> [10229,]  199 #> [10230,]  198 #> [10231,]  198 #> [10232,]  199 #> [10233,]  199 #> [10234,]  199 #> [10235,]  199 #> [10236,]  199 #> [10237,]  199 #> [10238,]  199 #> [10239,]  198 #> [10240,]  199 #> [10241,]  199 #> [10242,]  199 #> [10243,]  199 #> [10244,]  199 #> [10245,]  199 #> [10246,]  199 #> [10247,]  198 #> [10248,]  199 #> [10249,]  198 #> [10250,]  199 #> [10251,]  199 #> [10252,]  199 #> [10253,]  199 #> [10254,]  198 #> [10255,]  199 #> [10256,]  199 #> [10257,]  199 #> [10258,]  199 #> [10259,]  199 #> [10260,]  199 #> [10261,]  199 #> [10262,]  198 #> [10263,]  199 #> [10264,]  199 #> [10265,]  199 #> [10266,]  199 #> [10267,]  199 #> [10268,]  199 #> [10269,]  199 #> [10270,]  198 #> [10271,]  199 #> [10272,]  199 #> [10273,]  199 #> [10274,]  199 #> [10275,]  199 #> [10276,]  199 #> [10277,]  199 #> [10278,]  199 #> [10279,]  198 #> [10280,]  198 #> [10281,]  199 #> [10282,]  199 #> [10283,]  198 #> [10284,]  199 #> [10285,]  199 #> [10286,]  199 #> [10287,]  199 #> [10288,]  199 #> [10289,]  199 #> [10290,]  199 #> [10291,]  199 #> [10292,]  199 #> [10293,]  199 #> [10294,]  199 #> [10295,]  198 #> [10296,]  199 #> [10297,]  199 #> [10298,]  198 #> [10299,]  199 #> [10300,]  199 #> [10301,]  201 #> [10302,]  201 #> [10303,]  200 #> [10304,]  201 #> [10305,]  201 #> [10306,]  201 #> [10307,]  200 #> [10308,]  201 #> [10309,]  201 #> [10310,]  201 #> [10311,]  201 #> [10312,]  201 #> [10313,]  200 #> [10314,]  201 #> [10315,]  201 #> [10316,]  200 #> [10317,]  201 #> [10318,]  201 #> [10319,]  200 #> [10320,]  201 #> [10321,]  200 #> [10322,]  201 #> [10323,]  200 #> [10324,]  201 #> [10325,]  201 #> [10326,]  201 #> [10327,]  201 #> [10328,]  201 #> [10329,]  201 #> [10330,]  200 #> [10331,]  200 #> [10332,]  201 #> [10333,]  201 #> [10334,]  200 #> [10335,]  200 #> [10336,]  200 #> [10337,]  200 #> [10338,]  201 #> [10339,]  200 #> [10340,]  200 #> [10341,]  201 #> [10342,]  201 #> [10343,]  201 #> [10344,]  201 #> [10345,]  201 #> [10346,]  201 #> [10347,]  200 #> [10348,]  201 #> [10349,]  200 #> [10350,]  201 #> [10351,]  201 #> [10352,]  201 #> [10353,]  201 #> [10354,]  200 #> [10355,]  201 #> [10356,]  201 #> [10357,]  201 #> [10358,]  201 #> [10359,]  201 #> [10360,]  201 #> [10361,]  201 #> [10362,]  200 #> [10363,]  201 #> [10364,]  201 #> [10365,]  201 #> [10366,]  201 #> [10367,]  201 #> [10368,]  201 #> [10369,]  201 #> [10370,]  200 #> [10371,]  201 #> [10372,]  201 #> [10373,]  201 #> [10374,]  201 #> [10375,]  201 #> [10376,]  201 #> [10377,]  200 #> [10378,]  201 #> [10379,]  200 #> [10380,]  200 #> [10381,]  201 #> [10382,]  201 #> [10383,]  200 #> [10384,]  201 #> [10385,]  201 #> [10386,]  201 #> [10387,]  201 #> [10388,]  201 #> [10389,]  201 #> [10390,]  201 #> [10391,]  201 #> [10392,]  201 #> [10393,]  200 #> [10394,]  201 #> [10395,]  200 #> [10396,]  201 #> [10397,]  201 #> [10398,]  200 #> [10399,]  201 #> [10400,]  200 #> [10401,]  202 #> [10402,]  203 #> [10403,]  203 #> [10404,]  202 #> [10405,]  202 #> [10406,]  203 #> [10407,]  203 #> [10408,]  202 #> [10409,]  202 #> [10410,]  202 #> [10411,]  202 #> [10412,]  203 #> [10413,]  202 #> [10414,]  202 #> [10415,]  202 #> [10416,]  202 #> [10417,]  202 #> [10418,]  203 #> [10419,]  203 #> [10420,]  203 #> [10421,]  202 #> [10422,]  202 #> [10423,]  203 #> [10424,]  202 #> [10425,]  203 #> [10426,]  202 #> [10427,]  202 #> [10428,]  203 #> [10429,]  203 #> [10430,]  202 #> [10431,]  203 #> [10432,]  203 #> [10433,]  203 #> [10434,]  203 #> [10435,]  202 #> [10436,]  202 #> [10437,]  202 #> [10438,]  202 #> [10439,]  202 #> [10440,]  203 #> [10441,]  202 #> [10442,]  203 #> [10443,]  202 #> [10444,]  202 #> [10445,]  202 #> [10446,]  202 #> [10447,]  202 #> [10448,]  203 #> [10449,]  202 #> [10450,]  202 #> [10451,]  202 #> [10452,]  202 #> [10453,]  202 #> [10454,]  202 #> [10455,]  202 #> [10456,]  203 #> [10457,]  202 #> [10458,]  202 #> [10459,]  202 #> [10460,]  203 #> [10461,]  203 #> [10462,]  202 #> [10463,]  202 #> [10464,]  203 #> [10465,]  203 #> [10466,]  202 #> [10467,]  202 #> [10468,]  202 #> [10469,]  202 #> [10470,]  203 #> [10471,]  203 #> [10472,]  202 #> [10473,]  203 #> [10474,]  202 #> [10475,]  202 #> [10476,]  202 #> [10477,]  202 #> [10478,]  203 #> [10479,]  202 #> [10480,]  202 #> [10481,]  202 #> [10482,]  202 #> [10483,]  202 #> [10484,]  203 #> [10485,]  202 #> [10486,]  202 #> [10487,]  202 #> [10488,]  202 #> [10489,]  202 #> [10490,]  202 #> [10491,]  202 #> [10492,]  202 #> [10493,]  203 #> [10494,]  202 #> [10495,]  202 #> [10496,]  202 #> [10497,]  203 #> [10498,]  203 #> [10499,]  202 #> [10500,]  203 #> [10501,]  204 #> [10502,]  204 #> [10503,]  204 #> [10504,]  204 #> [10505,]  204 #> [10506,]  204 #> [10507,]  204 #> [10508,]  204 #> [10509,]  204 #> [10510,]  204 #> [10511,]  204 #> [10512,]  204 #> [10513,]  205 #> [10514,]  204 #> [10515,]  205 #> [10516,]  204 #> [10517,]  204 #> [10518,]  204 #> [10519,]  205 #> [10520,]  205 #> [10521,]  204 #> [10522,]  205 #> [10523,]  204 #> [10524,]  204 #> [10525,]  204 #> [10526,]  204 #> [10527,]  205 #> [10528,]  204 #> [10529,]  205 #> [10530,]  204 #> [10531,]  204 #> [10532,]  204 #> [10533,]  204 #> [10534,]  204 #> [10535,]  204 #> [10536,]  205 #> [10537,]  205 #> [10538,]  205 #> [10539,]  204 #> [10540,]  204 #> [10541,]  204 #> [10542,]  204 #> [10543,]  204 #> [10544,]  204 #> [10545,]  204 #> [10546,]  205 #> [10547,]  204 #> [10548,]  204 #> [10549,]  204 #> [10550,]  204 #> [10551,]  205 #> [10552,]  204 #> [10553,]  205 #> [10554,]  204 #> [10555,]  205 #> [10556,]  204 #> [10557,]  204 #> [10558,]  205 #> [10559,]  204 #> [10560,]  204 #> [10561,]  204 #> [10562,]  204 #> [10563,]  204 #> [10564,]  205 #> [10565,]  204 #> [10566,]  205 #> [10567,]  204 #> [10568,]  204 #> [10569,]  205 #> [10570,]  204 #> [10571,]  205 #> [10572,]  204 #> [10573,]  204 #> [10574,]  204 #> [10575,]  204 #> [10576,]  204 #> [10577,]  205 #> [10578,]  204 #> [10579,]  204 #> [10580,]  205 #> [10581,]  205 #> [10582,]  204 #> [10583,]  205 #> [10584,]  204 #> [10585,]  204 #> [10586,]  204 #> [10587,]  205 #> [10588,]  204 #> [10589,]  204 #> [10590,]  205 #> [10591,]  204 #> [10592,]  204 #> [10593,]  204 #> [10594,]  204 #> [10595,]  204 #> [10596,]  205 #> [10597,]  205 #> [10598,]  204 #> [10599,]  204 #> [10600,]  205 #> [10601,]  206 #> [10602,]  206 #> [10603,]  206 #> [10604,]  206 #> [10605,]  206 #> [10606,]  206 #> [10607,]  206 #> [10608,]  206 #> [10609,]  206 #> [10610,]  206 #> [10611,]  206 #> [10612,]  206 #> [10613,]  206 #> [10614,]  206 #> [10615,]  206 #> [10616,]  206 #> [10617,]  206 #> [10618,]  206 #> [10619,]  206 #> [10620,]  206 #> [10621,]  206 #> [10622,]  206 #> [10623,]  206 #> [10624,]  206 #> [10625,]  206 #> [10626,]  206 #> [10627,]  206 #> [10628,]  206 #> [10629,]  206 #> [10630,]  206 #> [10631,]  206 #> [10632,]  206 #> [10633,]  206 #> [10634,]  206 #> [10635,]  206 #> [10636,]  206 #> [10637,]  206 #> [10638,]  206 #> [10639,]  206 #> [10640,]  206 #> [10641,]  206 #> [10642,]  206 #> [10643,]  206 #> [10644,]  206 #> [10645,]  206 #> [10646,]  206 #> [10647,]  206 #> [10648,]  206 #> [10649,]  206 #> [10650,]  206 #> [10651,]  206 #> [10652,]  206 #> [10653,]  206 #> [10654,]  206 #> [10655,]  206 #> [10656,]  206 #> [10657,]  206 #> [10658,]  206 #> [10659,]  206 #> [10660,]  206 #> [10661,]  206 #> [10662,]  206 #> [10663,]  206 #> [10664,]  206 #> [10665,]  206 #> [10666,]  206 #> [10667,]  206 #> [10668,]  206 #> [10669,]  206 #> [10670,]  206 #> [10671,]  206 #> [10672,]  206 #> [10673,]  206 #> [10674,]  206 #> [10675,]  206 #> [10676,]  206 #> [10677,]  206 #> [10678,]  206 #> [10679,]  206 #> [10680,]  206 #> [10681,]  206 #> [10682,]  206 #> [10683,]  206 #> [10684,]  206 #> [10685,]  206 #> [10686,]  206 #> [10687,]  206 #> [10688,]  206 #> [10689,]  206 #> [10690,]  206 #> [10691,]  206 #> [10692,]  206 #> [10693,]  206 #> [10694,]  206 #> [10695,]  206 #> [10696,]  206 #> [10697,]  206 #> [10698,]  206 #> [10699,]  206 #> [10700,]  206 #> [10701,]  208 #> [10702,]  208 #> [10703,]  207 #> [10704,]  208 #> [10705,]  208 #> [10706,]  208 #> [10707,]  208 #> [10708,]  208 #> [10709,]  208 #> [10710,]  207 #> [10711,]  207 #> [10712,]  208 #> [10713,]  208 #> [10714,]  207 #> [10715,]  208 #> [10716,]  208 #> [10717,]  208 #> [10718,]  208 #> [10719,]  208 #> [10720,]  208 #> [10721,]  207 #> [10722,]  208 #> [10723,]  208 #> [10724,]  208 #> [10725,]  208 #> [10726,]  208 #> [10727,]  208 #> [10728,]  207 #> [10729,]  208 #> [10730,]  208 #> [10731,]  207 #> [10732,]  207 #> [10733,]  208 #> [10734,]  207 #> [10735,]  208 #> [10736,]  208 #> [10737,]  208 #> [10738,]  208 #> [10739,]  208 #> [10740,]  207 #> [10741,]  208 #> [10742,]  208 #> [10743,]  208 #> [10744,]  208 #> [10745,]  208 #> [10746,]  208 #> [10747,]  208 #> [10748,]  207 #> [10749,]  208 #> [10750,]  208 #> [10751,]  208 #> [10752,]  208 #> [10753,]  208 #> [10754,]  208 #> [10755,]  208 #> [10756,]  208 #> [10757,]  208 #> [10758,]  208 #> [10759,]  208 #> [10760,]  208 #> [10761,]  208 #> [10762,]  208 #> [10763,]  208 #> [10764,]  208 #> [10765,]  208 #> [10766,]  208 #> [10767,]  208 #> [10768,]  208 #> [10769,]  208 #> [10770,]  207 #> [10771,]  208 #> [10772,]  208 #> [10773,]  208 #> [10774,]  207 #> [10775,]  208 #> [10776,]  208 #> [10777,]  208 #> [10778,]  208 #> [10779,]  208 #> [10780,]  208 #> [10781,]  208 #> [10782,]  207 #> [10783,]  208 #> [10784,]  208 #> [10785,]  208 #> [10786,]  208 #> [10787,]  208 #> [10788,]  208 #> [10789,]  208 #> [10790,]  208 #> [10791,]  208 #> [10792,]  208 #> [10793,]  208 #> [10794,]  208 #> [10795,]  208 #> [10796,]  208 #> [10797,]  208 #> [10798,]  207 #> [10799,]  208 #> [10800,]  208 #> [10801,]  210 #> [10802,]  210 #> [10803,]  209 #> [10804,]  209 #> [10805,]  209 #> [10806,]  209 #> [10807,]  210 #> [10808,]  210 #> [10809,]  209 #> [10810,]  209 #> [10811,]  209 #> [10812,]  210 #> [10813,]  210 #> [10814,]  209 #> [10815,]  210 #> [10816,]  210 #> [10817,]  210 #> [10818,]  210 #> [10819,]  210 #> [10820,]  210 #> [10821,]  209 #> [10822,]  210 #> [10823,]  210 #> [10824,]  209 #> [10825,]  209 #> [10826,]  210 #> [10827,]  210 #> [10828,]  209 #> [10829,]  210 #> [10830,]  210 #> [10831,]  209 #> [10832,]  209 #> [10833,]  210 #> [10834,]  209 #> [10835,]  209 #> [10836,]  210 #> [10837,]  210 #> [10838,]  210 #> [10839,]  209 #> [10840,]  209 #> [10841,]  210 #> [10842,]  209 #> [10843,]  210 #> [10844,]  210 #> [10845,]  210 #> [10846,]  210 #> [10847,]  209 #> [10848,]  209 #> [10849,]  210 #> [10850,]  210 #> [10851,]  210 #> [10852,]  209 #> [10853,]  210 #> [10854,]  209 #> [10855,]  210 #> [10856,]  210 #> [10857,]  209 #> [10858,]  210 #> [10859,]  210 #> [10860,]  210 #> [10861,]  210 #> [10862,]  209 #> [10863,]  210 #> [10864,]  210 #> [10865,]  209 #> [10866,]  210 #> [10867,]  209 #> [10868,]  210 #> [10869,]  210 #> [10870,]  209 #> [10871,]  210 #> [10872,]  209 #> [10873,]  209 #> [10874,]  209 #> [10875,]  210 #> [10876,]  209 #> [10877,]  210 #> [10878,]  210 #> [10879,]  209 #> [10880,]  210 #> [10881,]  210 #> [10882,]  209 #> [10883,]  210 #> [10884,]  210 #> [10885,]  210 #> [10886,]  209 #> [10887,]  210 #> [10888,]  209 #> [10889,]  209 #> [10890,]  210 #> [10891,]  209 #> [10892,]  209 #> [10893,]  210 #> [10894,]  209 #> [10895,]  210 #> [10896,]  210 #> [10897,]  210 #> [10898,]  209 #> [10899,]  209 #> [10900,]  210 #> [10901,]  211 #> [10902,]  211 #> [10903,]  211 #> [10904,]  211 #> [10905,]  211 #> [10906,]  211 #> [10907,]  211 #> [10908,]  211 #> [10909,]  211 #> [10910,]  211 #> [10911,]  211 #> [10912,]  211 #> [10913,]  211 #> [10914,]  211 #> [10915,]  211 #> [10916,]  211 #> [10917,]  211 #> [10918,]  211 #> [10919,]  211 #> [10920,]  211 #> [10921,]  211 #> [10922,]  211 #> [10923,]  211 #> [10924,]  211 #> [10925,]  211 #> [10926,]  211 #> [10927,]  211 #> [10928,]  211 #> [10929,]  211 #> [10930,]  211 #> [10931,]  211 #> [10932,]  211 #> [10933,]  211 #> [10934,]  211 #> [10935,]  211 #> [10936,]  211 #> [10937,]  211 #> [10938,]  211 #> [10939,]  211 #> [10940,]  211 #> [10941,]  211 #> [10942,]  211 #> [10943,]  211 #> [10944,]  211 #> [10945,]  211 #> [10946,]  211 #> [10947,]  211 #> [10948,]  211 #> [10949,]  211 #> [10950,]  211 #> [10951,]  211 #> [10952,]  211 #> [10953,]  211 #> [10954,]  211 #> [10955,]  211 #> [10956,]  211 #> [10957,]  211 #> [10958,]  211 #> [10959,]  211 #> [10960,]  211 #> [10961,]  211 #> [10962,]  211 #> [10963,]  211 #> [10964,]  211 #> [10965,]  211 #> [10966,]  211 #> [10967,]  211 #> [10968,]  211 #> [10969,]  211 #> [10970,]  211 #> [10971,]  211 #> [10972,]  211 #> [10973,]  211 #> [10974,]  211 #> [10975,]  211 #> [10976,]  211 #> [10977,]  211 #> [10978,]  211 #> [10979,]  211 #> [10980,]  211 #> [10981,]  211 #> [10982,]  211 #> [10983,]  211 #> [10984,]  211 #> [10985,]  211 #> [10986,]  211 #> [10987,]  211 #> [10988,]  211 #> [10989,]  211 #> [10990,]  211 #> [10991,]  211 #> [10992,]  211 #> [10993,]  211 #> [10994,]  211 #> [10995,]  211 #> [10996,]  211 #> [10997,]  211 #> [10998,]  211 #> [10999,]  211 #> [11000,]  211 #> [11001,]  213 #> [11002,]  213 #> [11003,]  213 #> [11004,]  212 #> [11005,]  213 #> [11006,]  213 #> [11007,]  213 #> [11008,]  212 #> [11009,]  212 #> [11010,]  212 #> [11011,]  213 #> [11012,]  213 #> [11013,]  213 #> [11014,]  213 #> [11015,]  213 #> [11016,]  213 #> [11017,]  213 #> [11018,]  213 #> [11019,]  213 #> [11020,]  213 #> [11021,]  213 #> [11022,]  213 #> [11023,]  213 #> [11024,]  213 #> [11025,]  213 #> [11026,]  213 #> [11027,]  213 #> [11028,]  213 #> [11029,]  213 #> [11030,]  213 #> [11031,]  213 #> [11032,]  213 #> [11033,]  213 #> [11034,]  213 #> [11035,]  213 #> [11036,]  213 #> [11037,]  213 #> [11038,]  213 #> [11039,]  213 #> [11040,]  213 #> [11041,]  213 #> [11042,]  213 #> [11043,]  213 #> [11044,]  213 #> [11045,]  213 #> [11046,]  213 #> [11047,]  213 #> [11048,]  213 #> [11049,]  213 #> [11050,]  213 #> [11051,]  213 #> [11052,]  213 #> [11053,]  213 #> [11054,]  213 #> [11055,]  213 #> [11056,]  213 #> [11057,]  213 #> [11058,]  213 #> [11059,]  213 #> [11060,]  213 #> [11061,]  213 #> [11062,]  213 #> [11063,]  213 #> [11064,]  213 #> [11065,]  213 #> [11066,]  213 #> [11067,]  213 #> [11068,]  213 #> [11069,]  213 #> [11070,]  213 #> [11071,]  213 #> [11072,]  213 #> [11073,]  213 #> [11074,]  213 #> [11075,]  213 #> [11076,]  213 #> [11077,]  213 #> [11078,]  213 #> [11079,]  213 #> [11080,]  213 #> [11081,]  213 #> [11082,]  213 #> [11083,]  213 #> [11084,]  213 #> [11085,]  213 #> [11086,]  213 #> [11087,]  213 #> [11088,]  213 #> [11089,]  213 #> [11090,]  213 #> [11091,]  213 #> [11092,]  213 #> [11093,]  213 #> [11094,]  213 #> [11095,]  212 #> [11096,]  213 #> [11097,]  213 #> [11098,]  213 #> [11099,]  213 #> [11100,]  213 #> [11101,]  215 #> [11102,]  215 #> [11103,]  214 #> [11104,]  214 #> [11105,]  214 #> [11106,]  215 #> [11107,]  215 #> [11108,]  214 #> [11109,]  214 #> [11110,]  214 #> [11111,]  215 #> [11112,]  214 #> [11113,]  215 #> [11114,]  215 #> [11115,]  215 #> [11116,]  215 #> [11117,]  215 #> [11118,]  214 #> [11119,]  215 #> [11120,]  214 #> [11121,]  215 #> [11122,]  215 #> [11123,]  214 #> [11124,]  214 #> [11125,]  214 #> [11126,]  215 #> [11127,]  215 #> [11128,]  214 #> [11129,]  215 #> [11130,]  214 #> [11131,]  214 #> [11132,]  214 #> [11133,]  215 #> [11134,]  214 #> [11135,]  215 #> [11136,]  214 #> [11137,]  215 #> [11138,]  214 #> [11139,]  214 #> [11140,]  215 #> [11141,]  215 #> [11142,]  214 #> [11143,]  214 #> [11144,]  215 #> [11145,]  214 #> [11146,]  214 #> [11147,]  215 #> [11148,]  214 #> [11149,]  214 #> [11150,]  215 #> [11151,]  214 #> [11152,]  215 #> [11153,]  214 #> [11154,]  214 #> [11155,]  215 #> [11156,]  214 #> [11157,]  214 #> [11158,]  215 #> [11159,]  215 #> [11160,]  214 #> [11161,]  215 #> [11162,]  214 #> [11163,]  214 #> [11164,]  214 #> [11165,]  214 #> [11166,]  214 #> [11167,]  214 #> [11168,]  215 #> [11169,]  215 #> [11170,]  215 #> [11171,]  215 #> [11172,]  214 #> [11173,]  215 #> [11174,]  215 #> [11175,]  215 #> [11176,]  215 #> [11177,]  215 #> [11178,]  214 #> [11179,]  215 #> [11180,]  214 #> [11181,]  215 #> [11182,]  214 #> [11183,]  215 #> [11184,]  215 #> [11185,]  214 #> [11186,]  215 #> [11187,]  215 #> [11188,]  214 #> [11189,]  214 #> [11190,]  215 #> [11191,]  214 #> [11192,]  215 #> [11193,]  215 #> [11194,]  215 #> [11195,]  214 #> [11196,]  215 #> [11197,]  215 #> [11198,]  215 #> [11199,]  215 #> [11200,]  215 #> [11201,]  216 #> [11202,]  217 #> [11203,]  217 #> [11204,]  216 #> [11205,]  217 #> [11206,]  217 #> [11207,]  217 #> [11208,]  216 #> [11209,]  216 #> [11210,]  217 #> [11211,]  216 #> [11212,]  217 #> [11213,]  216 #> [11214,]  216 #> [11215,]  216 #> [11216,]  216 #> [11217,]  216 #> [11218,]  217 #> [11219,]  217 #> [11220,]  217 #> [11221,]  216 #> [11222,]  216 #> [11223,]  217 #> [11224,]  216 #> [11225,]  217 #> [11226,]  217 #> [11227,]  216 #> [11228,]  217 #> [11229,]  217 #> [11230,]  216 #> [11231,]  217 #> [11232,]  217 #> [11233,]  217 #> [11234,]  217 #> [11235,]  216 #> [11236,]  217 #> [11237,]  216 #> [11238,]  216 #> [11239,]  217 #> [11240,]  217 #> [11241,]  216 #> [11242,]  217 #> [11243,]  216 #> [11244,]  216 #> [11245,]  216 #> [11246,]  216 #> [11247,]  217 #> [11248,]  217 #> [11249,]  216 #> [11250,]  217 #> [11251,]  216 #> [11252,]  216 #> [11253,]  217 #> [11254,]  216 #> [11255,]  216 #> [11256,]  217 #> [11257,]  217 #> [11258,]  216 #> [11259,]  217 #> [11260,]  217 #> [11261,]  217 #> [11262,]  216 #> [11263,]  217 #> [11264,]  217 #> [11265,]  217 #> [11266,]  216 #> [11267,]  216 #> [11268,]  216 #> [11269,]  216 #> [11270,]  217 #> [11271,]  217 #> [11272,]  217 #> [11273,]  217 #> [11274,]  216 #> [11275,]  217 #> [11276,]  217 #> [11277,]  217 #> [11278,]  217 #> [11279,]  216 #> [11280,]  216 #> [11281,]  216 #> [11282,]  216 #> [11283,]  216 #> [11284,]  217 #> [11285,]  216 #> [11286,]  217 #> [11287,]  216 #> [11288,]  216 #> [11289,]  216 #> [11290,]  216 #> [11291,]  216 #> [11292,]  216 #> [11293,]  217 #> [11294,]  217 #> [11295,]  216 #> [11296,]  216 #> [11297,]  217 #> [11298,]  217 #> [11299,]  216 #> [11300,]  217 #> [11301,]  219 #> [11302,]  219 #> [11303,]  218 #> [11304,]  218 #> [11305,]  218 #> [11306,]  219 #> [11307,]  218 #> [11308,]  218 #> [11309,]  218 #> [11310,]  218 #> [11311,]  219 #> [11312,]  218 #> [11313,]  219 #> [11314,]  219 #> [11315,]  219 #> [11316,]  219 #> [11317,]  219 #> [11318,]  218 #> [11319,]  219 #> [11320,]  218 #> [11321,]  219 #> [11322,]  219 #> [11323,]  218 #> [11324,]  218 #> [11325,]  218 #> [11326,]  219 #> [11327,]  219 #> [11328,]  218 #> [11329,]  219 #> [11330,]  218 #> [11331,]  218 #> [11332,]  218 #> [11333,]  219 #> [11334,]  218 #> [11335,]  219 #> [11336,]  218 #> [11337,]  219 #> [11338,]  218 #> [11339,]  218 #> [11340,]  218 #> [11341,]  219 #> [11342,]  218 #> [11343,]  218 #> [11344,]  219 #> [11345,]  218 #> [11346,]  218 #> [11347,]  219 #> [11348,]  218 #> [11349,]  218 #> [11350,]  219 #> [11351,]  218 #> [11352,]  219 #> [11353,]  218 #> [11354,]  218 #> [11355,]  219 #> [11356,]  218 #> [11357,]  218 #> [11358,]  219 #> [11359,]  219 #> [11360,]  218 #> [11361,]  219 #> [11362,]  218 #> [11363,]  218 #> [11364,]  218 #> [11365,]  218 #> [11366,]  218 #> [11367,]  218 #> [11368,]  219 #> [11369,]  219 #> [11370,]  219 #> [11371,]  219 #> [11372,]  218 #> [11373,]  219 #> [11374,]  219 #> [11375,]  219 #> [11376,]  219 #> [11377,]  219 #> [11378,]  218 #> [11379,]  219 #> [11380,]  218 #> [11381,]  219 #> [11382,]  218 #> [11383,]  219 #> [11384,]  219 #> [11385,]  218 #> [11386,]  219 #> [11387,]  219 #> [11388,]  218 #> [11389,]  218 #> [11390,]  219 #> [11391,]  218 #> [11392,]  219 #> [11393,]  219 #> [11394,]  219 #> [11395,]  218 #> [11396,]  219 #> [11397,]  219 #> [11398,]  219 #> [11399,]  219 #> [11400,]  219 #> [11401,]  220 #> [11402,]  220 #> [11403,]  220 #> [11404,]  220 #> [11405,]  220 #> [11406,]  220 #> [11407,]  220 #> [11408,]  221 #> [11409,]  221 #> [11410,]  220 #> [11411,]  220 #> [11412,]  220 #> [11413,]  220 #> [11414,]  220 #> [11415,]  220 #> [11416,]  220 #> [11417,]  220 #> [11418,]  220 #> [11419,]  220 #> [11420,]  220 #> [11421,]  220 #> [11422,]  220 #> [11423,]  220 #> [11424,]  220 #> [11425,]  220 #> [11426,]  221 #> [11427,]  220 #> [11428,]  220 #> [11429,]  220 #> [11430,]  220 #> [11431,]  220 #> [11432,]  220 #> [11433,]  220 #> [11434,]  220 #> [11435,]  220 #> [11436,]  220 #> [11437,]  220 #> [11438,]  220 #> [11439,]  220 #> [11440,]  220 #> [11441,]  220 #> [11442,]  220 #> [11443,]  221 #> [11444,]  220 #> [11445,]  220 #> [11446,]  220 #> [11447,]  220 #> [11448,]  220 #> [11449,]  220 #> [11450,]  220 #> [11451,]  220 #> [11452,]  220 #> [11453,]  220 #> [11454,]  220 #> [11455,]  220 #> [11456,]  221 #> [11457,]  220 #> [11458,]  220 #> [11459,]  220 #> [11460,]  220 #> [11461,]  221 #> [11462,]  220 #> [11463,]  220 #> [11464,]  221 #> [11465,]  220 #> [11466,]  220 #> [11467,]  220 #> [11468,]  220 #> [11469,]  220 #> [11470,]  220 #> [11471,]  220 #> [11472,]  220 #> [11473,]  220 #> [11474,]  220 #> [11475,]  220 #> [11476,]  221 #> [11477,]  220 #> [11478,]  220 #> [11479,]  220 #> [11480,]  220 #> [11481,]  220 #> [11482,]  220 #> [11483,]  220 #> [11484,]  220 #> [11485,]  220 #> [11486,]  220 #> [11487,]  220 #> [11488,]  220 #> [11489,]  220 #> [11490,]  220 #> [11491,]  220 #> [11492,]  220 #> [11493,]  220 #> [11494,]  221 #> [11495,]  220 #> [11496,]  220 #> [11497,]  220 #> [11498,]  220 #> [11499,]  220 #> [11500,]  220 #> [11501,]  222 #> [11502,]  222 #> [11503,]  223 #> [11504,]  222 #> [11505,]  222 #> [11506,]  223 #> [11507,]  222 #> [11508,]  222 #> [11509,]  222 #> [11510,]  222 #> [11511,]  222 #> [11512,]  223 #> [11513,]  222 #> [11514,]  222 #> [11515,]  222 #> [11516,]  222 #> [11517,]  222 #> [11518,]  222 #> [11519,]  223 #> [11520,]  223 #> [11521,]  222 #> [11522,]  222 #> [11523,]  222 #> [11524,]  222 #> [11525,]  223 #> [11526,]  222 #> [11527,]  222 #> [11528,]  223 #> [11529,]  222 #> [11530,]  222 #> [11531,]  222 #> [11532,]  222 #> [11533,]  223 #> [11534,]  223 #> [11535,]  222 #> [11536,]  222 #> [11537,]  222 #> [11538,]  222 #> [11539,]  222 #> [11540,]  222 #> [11541,]  222 #> [11542,]  222 #> [11543,]  222 #> [11544,]  222 #> [11545,]  222 #> [11546,]  222 #> [11547,]  222 #> [11548,]  222 #> [11549,]  222 #> [11550,]  222 #> [11551,]  222 #> [11552,]  222 #> [11553,]  222 #> [11554,]  222 #> [11555,]  222 #> [11556,]  222 #> [11557,]  222 #> [11558,]  222 #> [11559,]  222 #> [11560,]  223 #> [11561,]  222 #> [11562,]  222 #> [11563,]  222 #> [11564,]  222 #> [11565,]  223 #> [11566,]  222 #> [11567,]  222 #> [11568,]  222 #> [11569,]  222 #> [11570,]  223 #> [11571,]  222 #> [11572,]  222 #> [11573,]  223 #> [11574,]  222 #> [11575,]  222 #> [11576,]  222 #> [11577,]  222 #> [11578,]  222 #> [11579,]  222 #> [11580,]  222 #> [11581,]  222 #> [11582,]  222 #> [11583,]  222 #> [11584,]  222 #> [11585,]  222 #> [11586,]  222 #> [11587,]  222 #> [11588,]  222 #> [11589,]  222 #> [11590,]  222 #> [11591,]  222 #> [11592,]  222 #> [11593,]  223 #> [11594,]  222 #> [11595,]  222 #> [11596,]  222 #> [11597,]  223 #> [11598,]  223 #> [11599,]  222 #> [11600,]  222 #> [11601,]  225 #> [11602,]  225 #> [11603,]  224 #> [11604,]  224 #> [11605,]  225 #> [11606,]  225 #> [11607,]  224 #> [11608,]  224 #> [11609,]  225 #> [11610,]  224 #> [11611,]  225 #> [11612,]  224 #> [11613,]  225 #> [11614,]  224 #> [11615,]  225 #> [11616,]  224 #> [11617,]  225 #> [11618,]  225 #> [11619,]  225 #> [11620,]  225 #> [11621,]  225 #> [11622,]  225 #> [11623,]  224 #> [11624,]  225 #> [11625,]  224 #> [11626,]  224 #> [11627,]  225 #> [11628,]  225 #> [11629,]  225 #> [11630,]  224 #> [11631,]  224 #> [11632,]  224 #> [11633,]  225 #> [11634,]  224 #> [11635,]  224 #> [11636,]  225 #> [11637,]  224 #> [11638,]  225 #> [11639,]  225 #> [11640,]  224 #> [11641,]  225 #> [11642,]  225 #> [11643,]  225 #> [11644,]  224 #> [11645,]  224 #> [11646,]  224 #> [11647,]  224 #> [11648,]  225 #> [11649,]  224 #> [11650,]  225 #> [11651,]  225 #> [11652,]  224 #> [11653,]  225 #> [11654,]  225 #> [11655,]  224 #> [11656,]  225 #> [11657,]  224 #> [11658,]  225 #> [11659,]  224 #> [11660,]  224 #> [11661,]  225 #> [11662,]  225 #> [11663,]  225 #> [11664,]  225 #> [11665,]  225 #> [11666,]  225 #> [11667,]  224 #> [11668,]  224 #> [11669,]  224 #> [11670,]  225 #> [11671,]  224 #> [11672,]  224 #> [11673,]  225 #> [11674,]  224 #> [11675,]  224 #> [11676,]  224 #> [11677,]  225 #> [11678,]  224 #> [11679,]  225 #> [11680,]  224 #> [11681,]  225 #> [11682,]  225 #> [11683,]  225 #> [11684,]  225 #> [11685,]  225 #> [11686,]  224 #> [11687,]  225 #> [11688,]  224 #> [11689,]  225 #> [11690,]  225 #> [11691,]  225 #> [11692,]  224 #> [11693,]  225 #> [11694,]  225 #> [11695,]  224 #> [11696,]  224 #> [11697,]  224 #> [11698,]  224 #> [11699,]  225 #> [11700,]  225 #> [11701,]  226 #> [11702,]  227 #> [11703,]  226 #> [11704,]  226 #> [11705,]  227 #> [11706,]  226 #> [11707,]  227 #> [11708,]  226 #> [11709,]  227 #> [11710,]  227 #> [11711,]  226 #> [11712,]  227 #> [11713,]  227 #> [11714,]  226 #> [11715,]  227 #> [11716,]  226 #> [11717,]  227 #> [11718,]  227 #> [11719,]  226 #> [11720,]  227 #> [11721,]  227 #> [11722,]  227 #> [11723,]  227 #> [11724,]  227 #> [11725,]  227 #> [11726,]  226 #> [11727,]  227 #> [11728,]  226 #> [11729,]  227 #> [11730,]  227 #> [11731,]  227 #> [11732,]  227 #> [11733,]  227 #> [11734,]  226 #> [11735,]  226 #> [11736,]  227 #> [11737,]  226 #> [11738,]  226 #> [11739,]  227 #> [11740,]  227 #> [11741,]  227 #> [11742,]  226 #> [11743,]  227 #> [11744,]  227 #> [11745,]  226 #> [11746,]  227 #> [11747,]  227 #> [11748,]  227 #> [11749,]  226 #> [11750,]  227 #> [11751,]  227 #> [11752,]  226 #> [11753,]  227 #> [11754,]  227 #> [11755,]  227 #> [11756,]  226 #> [11757,]  227 #> [11758,]  227 #> [11759,]  226 #> [11760,]  227 #> [11761,]  227 #> [11762,]  226 #> [11763,]  227 #> [11764,]  226 #> [11765,]  226 #> [11766,]  227 #> [11767,]  227 #> [11768,]  226 #> [11769,]  226 #> [11770,]  227 #> [11771,]  227 #> [11772,]  226 #> [11773,]  226 #> [11774,]  227 #> [11775,]  227 #> [11776,]  227 #> [11777,]  226 #> [11778,]  227 #> [11779,]  226 #> [11780,]  227 #> [11781,]  227 #> [11782,]  227 #> [11783,]  227 #> [11784,]  227 #> [11785,]  227 #> [11786,]  227 #> [11787,]  227 #> [11788,]  227 #> [11789,]  226 #> [11790,]  227 #> [11791,]  226 #> [11792,]  227 #> [11793,]  227 #> [11794,]  226 #> [11795,]  227 #> [11796,]  226 #> [11797,]  226 #> [11798,]  227 #> [11799,]  227 #> [11800,]  226 #> [11801,]  229 #> [11802,]  228 #> [11803,]  229 #> [11804,]  229 #> [11805,]  228 #> [11806,]  228 #> [11807,]  229 #> [11808,]  228 #> [11809,]  229 #> [11810,]  229 #> [11811,]  228 #> [11812,]  228 #> [11813,]  229 #> [11814,]  229 #> [11815,]  228 #> [11816,]  229 #> [11817,]  228 #> [11818,]  228 #> [11819,]  228 #> [11820,]  229 #> [11821,]  228 #> [11822,]  229 #> [11823,]  228 #> [11824,]  229 #> [11825,]  229 #> [11826,]  228 #> [11827,]  229 #> [11828,]  229 #> [11829,]  228 #> [11830,]  228 #> [11831,]  228 #> [11832,]  228 #> [11833,]  228 #> [11834,]  228 #> [11835,]  228 #> [11836,]  229 #> [11837,]  228 #> [11838,]  228 #> [11839,]  229 #> [11840,]  228 #> [11841,]  229 #> [11842,]  228 #> [11843,]  228 #> [11844,]  228 #> [11845,]  229 #> [11846,]  228 #> [11847,]  228 #> [11848,]  228 #> [11849,]  229 #> [11850,]  229 #> [11851,]  228 #> [11852,]  229 #> [11853,]  229 #> [11854,]  229 #> [11855,]  229 #> [11856,]  228 #> [11857,]  229 #> [11858,]  229 #> [11859,]  229 #> [11860,]  228 #> [11861,]  228 #> [11862,]  228 #> [11863,]  228 #> [11864,]  228 #> [11865,]  228 #> [11866,]  228 #> [11867,]  229 #> [11868,]  228 #> [11869,]  228 #> [11870,]  228 #> [11871,]  229 #> [11872,]  229 #> [11873,]  229 #> [11874,]  229 #> [11875,]  228 #> [11876,]  229 #> [11877,]  228 #> [11878,]  228 #> [11879,]  228 #> [11880,]  229 #> [11881,]  228 #> [11882,]  228 #> [11883,]  228 #> [11884,]  228 #> [11885,]  229 #> [11886,]  229 #> [11887,]  229 #> [11888,]  229 #> [11889,]  228 #> [11890,]  229 #> [11891,]  229 #> [11892,]  228 #> [11893,]  228 #> [11894,]  228 #> [11895,]  228 #> [11896,]  228 #> [11897,]  228 #> [11898,]  228 #> [11899,]  228 #> [11900,]  228 #> [11901,]  231 #> [11902,]  231 #> [11903,]  231 #> [11904,]  231 #> [11905,]  231 #> [11906,]  231 #> [11907,]  231 #> [11908,]  231 #> [11909,]  231 #> [11910,]  231 #> [11911,]  231 #> [11912,]  231 #> [11913,]  231 #> [11914,]  231 #> [11915,]  230 #> [11916,]  231 #> [11917,]  230 #> [11918,]  231 #> [11919,]  231 #> [11920,]  231 #> [11921,]  231 #> [11922,]  231 #> [11923,]  231 #> [11924,]  231 #> [11925,]  231 #> [11926,]  231 #> [11927,]  231 #> [11928,]  231 #> [11929,]  231 #> [11930,]  231 #> [11931,]  230 #> [11932,]  231 #> [11933,]  231 #> [11934,]  230 #> [11935,]  231 #> [11936,]  231 #> [11937,]  230 #> [11938,]  231 #> [11939,]  231 #> [11940,]  231 #> [11941,]  231 #> [11942,]  230 #> [11943,]  230 #> [11944,]  230 #> [11945,]  231 #> [11946,]  231 #> [11947,]  231 #> [11948,]  230 #> [11949,]  231 #> [11950,]  231 #> [11951,]  231 #> [11952,]  231 #> [11953,]  231 #> [11954,]  231 #> [11955,]  231 #> [11956,]  231 #> [11957,]  231 #> [11958,]  231 #> [11959,]  231 #> [11960,]  231 #> [11961,]  231 #> [11962,]  231 #> [11963,]  230 #> [11964,]  231 #> [11965,]  231 #> [11966,]  231 #> [11967,]  231 #> [11968,]  231 #> [11969,]  231 #> [11970,]  230 #> [11971,]  231 #> [11972,]  231 #> [11973,]  231 #> [11974,]  231 #> [11975,]  230 #> [11976,]  231 #> [11977,]  231 #> [11978,]  230 #> [11979,]  230 #> [11980,]  231 #> [11981,]  231 #> [11982,]  231 #> [11983,]  231 #> [11984,]  231 #> [11985,]  231 #> [11986,]  231 #> [11987,]  231 #> [11988,]  231 #> [11989,]  231 #> [11990,]  231 #> [11991,]  231 #> [11992,]  231 #> [11993,]  231 #> [11994,]  230 #> [11995,]  230 #> [11996,]  231 #> [11997,]  231 #> [11998,]  231 #> [11999,]  231 #> [12000,]  230 #> [12001,]  233 #> [12002,]  232 #> [12003,]  232 #> [12004,]  232 #> [12005,]  233 #> [12006,]  232 #> [12007,]  232 #> [12008,]  232 #> [12009,]  232 #> [12010,]  232 #> [12011,]  232 #> [12012,]  232 #> [12013,]  232 #> [12014,]  233 #> [12015,]  233 #> [12016,]  232 #> [12017,]  232 #> [12018,]  233 #> [12019,]  232 #> [12020,]  232 #> [12021,]  232 #> [12022,]  232 #> [12023,]  232 #> [12024,]  232 #> [12025,]  232 #> [12026,]  232 #> [12027,]  233 #> [12028,]  232 #> [12029,]  232 #> [12030,]  232 #> [12031,]  232 #> [12032,]  233 #> [12033,]  232 #> [12034,]  232 #> [12035,]  232 #> [12036,]  232 #> [12037,]  232 #> [12038,]  232 #> [12039,]  232 #> [12040,]  232 #> [12041,]  232 #> [12042,]  232 #> [12043,]  233 #> [12044,]  232 #> [12045,]  232 #> [12046,]  232 #> [12047,]  232 #> [12048,]  232 #> [12049,]  232 #> [12050,]  232 #> [12051,]  232 #> [12052,]  232 #> [12053,]  232 #> [12054,]  232 #> [12055,]  232 #> [12056,]  232 #> [12057,]  232 #> [12058,]  233 #> [12059,]  232 #> [12060,]  232 #> [12061,]  232 #> [12062,]  232 #> [12063,]  232 #> [12064,]  232 #> [12065,]  232 #> [12066,]  232 #> [12067,]  232 #> [12068,]  232 #> [12069,]  232 #> [12070,]  233 #> [12071,]  233 #> [12072,]  232 #> [12073,]  232 #> [12074,]  232 #> [12075,]  233 #> [12076,]  232 #> [12077,]  232 #> [12078,]  232 #> [12079,]  233 #> [12080,]  232 #> [12081,]  232 #> [12082,]  232 #> [12083,]  232 #> [12084,]  232 #> [12085,]  232 #> [12086,]  232 #> [12087,]  233 #> [12088,]  232 #> [12089,]  232 #> [12090,]  232 #> [12091,]  233 #> [12092,]  232 #> [12093,]  232 #> [12094,]  232 #> [12095,]  233 #> [12096,]  232 #> [12097,]  232 #> [12098,]  232 #> [12099,]  232 #> [12100,]  233 #> [12101,]  235 #> [12102,]  234 #> [12103,]  234 #> [12104,]  234 #> [12105,]  234 #> [12106,]  234 #> [12107,]  234 #> [12108,]  234 #> [12109,]  235 #> [12110,]  234 #> [12111,]  235 #> [12112,]  234 #> [12113,]  235 #> [12114,]  234 #> [12115,]  234 #> [12116,]  234 #> [12117,]  235 #> [12118,]  235 #> [12119,]  234 #> [12120,]  235 #> [12121,]  234 #> [12122,]  234 #> [12123,]  234 #> [12124,]  234 #> [12125,]  234 #> [12126,]  234 #> [12127,]  235 #> [12128,]  235 #> [12129,]  234 #> [12130,]  234 #> [12131,]  234 #> [12132,]  234 #> [12133,]  235 #> [12134,]  234 #> [12135,]  234 #> [12136,]  235 #> [12137,]  234 #> [12138,]  235 #> [12139,]  235 #> [12140,]  234 #> [12141,]  234 #> [12142,]  235 #> [12143,]  234 #> [12144,]  234 #> [12145,]  234 #> [12146,]  234 #> [12147,]  234 #> [12148,]  234 #> [12149,]  234 #> [12150,]  234 #> [12151,]  235 #> [12152,]  234 #> [12153,]  235 #> [12154,]  235 #> [12155,]  234 #> [12156,]  235 #> [12157,]  234 #> [12158,]  235 #> [12159,]  234 #> [12160,]  234 #> [12161,]  234 #> [12162,]  235 #> [12163,]  234 #> [12164,]  234 #> [12165,]  235 #> [12166,]  235 #> [12167,]  234 #> [12168,]  234 #> [12169,]  234 #> [12170,]  234 #> [12171,]  234 #> [12172,]  234 #> [12173,]  234 #> [12174,]  234 #> [12175,]  234 #> [12176,]  234 #> [12177,]  235 #> [12178,]  234 #> [12179,]  235 #> [12180,]  234 #> [12181,]  234 #> [12182,]  235 #> [12183,]  235 #> [12184,]  235 #> [12185,]  235 #> [12186,]  234 #> [12187,]  235 #> [12188,]  234 #> [12189,]  235 #> [12190,]  234 #> [12191,]  235 #> [12192,]  234 #> [12193,]  235 #> [12194,]  235 #> [12195,]  234 #> [12196,]  234 #> [12197,]  234 #> [12198,]  234 #> [12199,]  234 #> [12200,]  234 #> [12201,]  237 #> [12202,]  237 #> [12203,]  237 #> [12204,]  237 #> [12205,]  237 #> [12206,]  237 #> [12207,]  236 #> [12208,]  237 #> [12209,]  237 #> [12210,]  237 #> [12211,]  237 #> [12212,]  237 #> [12213,]  237 #> [12214,]  237 #> [12215,]  237 #> [12216,]  237 #> [12217,]  237 #> [12218,]  237 #> [12219,]  237 #> [12220,]  237 #> [12221,]  236 #> [12222,]  237 #> [12223,]  236 #> [12224,]  237 #> [12225,]  237 #> [12226,]  237 #> [12227,]  237 #> [12228,]  237 #> [12229,]  237 #> [12230,]  236 #> [12231,]  237 #> [12232,]  237 #> [12233,]  237 #> [12234,]  237 #> [12235,]  237 #> [12236,]  237 #> [12237,]  237 #> [12238,]  237 #> [12239,]  236 #> [12240,]  237 #> [12241,]  237 #> [12242,]  237 #> [12243,]  237 #> [12244,]  237 #> [12245,]  237 #> [12246,]  237 #> [12247,]  236 #> [12248,]  237 #> [12249,]  236 #> [12250,]  237 #> [12251,]  237 #> [12252,]  237 #> [12253,]  237 #> [12254,]  236 #> [12255,]  237 #> [12256,]  237 #> [12257,]  237 #> [12258,]  237 #> [12259,]  237 #> [12260,]  237 #> [12261,]  237 #> [12262,]  236 #> [12263,]  237 #> [12264,]  237 #> [12265,]  237 #> [12266,]  237 #> [12267,]  237 #> [12268,]  237 #> [12269,]  237 #> [12270,]  236 #> [12271,]  237 #> [12272,]  237 #> [12273,]  237 #> [12274,]  237 #> [12275,]  237 #> [12276,]  237 #> [12277,]  237 #> [12278,]  237 #> [12279,]  236 #> [12280,]  236 #> [12281,]  237 #> [12282,]  237 #> [12283,]  236 #> [12284,]  237 #> [12285,]  237 #> [12286,]  237 #> [12287,]  237 #> [12288,]  237 #> [12289,]  237 #> [12290,]  237 #> [12291,]  237 #> [12292,]  237 #> [12293,]  237 #> [12294,]  237 #> [12295,]  236 #> [12296,]  237 #> [12297,]  237 #> [12298,]  236 #> [12299,]  237 #> [12300,]  237 #> [12301,]  238 #> [12302,]  239 #> [12303,]  239 #> [12304,]  238 #> [12305,]  239 #> [12306,]  239 #> [12307,]  239 #> [12308,]  238 #> [12309,]  238 #> [12310,]  239 #> [12311,]  238 #> [12312,]  239 #> [12313,]  238 #> [12314,]  238 #> [12315,]  239 #> [12316,]  239 #> [12317,]  238 #> [12318,]  239 #> [12319,]  239 #> [12320,]  239 #> [12321,]  238 #> [12322,]  238 #> [12323,]  239 #> [12324,]  239 #> [12325,]  239 #> [12326,]  239 #> [12327,]  238 #> [12328,]  239 #> [12329,]  239 #> [12330,]  238 #> [12331,]  239 #> [12332,]  239 #> [12333,]  239 #> [12334,]  239 #> [12335,]  238 #> [12336,]  239 #> [12337,]  239 #> [12338,]  239 #> [12339,]  239 #> [12340,]  239 #> [12341,]  239 #> [12342,]  239 #> [12343,]  238 #> [12344,]  238 #> [12345,]  238 #> [12346,]  238 #> [12347,]  239 #> [12348,]  239 #> [12349,]  238 #> [12350,]  239 #> [12351,]  239 #> [12352,]  238 #> [12353,]  239 #> [12354,]  238 #> [12355,]  238 #> [12356,]  239 #> [12357,]  239 #> [12358,]  238 #> [12359,]  239 #> [12360,]  239 #> [12361,]  239 #> [12362,]  239 #> [12363,]  239 #> [12364,]  239 #> [12365,]  239 #> [12366,]  238 #> [12367,]  239 #> [12368,]  238 #> [12369,]  238 #> [12370,]  239 #> [12371,]  239 #> [12372,]  239 #> [12373,]  239 #> [12374,]  239 #> [12375,]  239 #> [12376,]  239 #> [12377,]  239 #> [12378,]  239 #> [12379,]  238 #> [12380,]  238 #> [12381,]  238 #> [12382,]  238 #> [12383,]  238 #> [12384,]  239 #> [12385,]  239 #> [12386,]  239 #> [12387,]  238 #> [12388,]  238 #> [12389,]  238 #> [12390,]  238 #> [12391,]  238 #> [12392,]  238 #> [12393,]  239 #> [12394,]  239 #> [12395,]  238 #> [12396,]  238 #> [12397,]  239 #> [12398,]  239 #> [12399,]  238 #> [12400,]  239 #> [12401,]  240 #> [12402,]  240 #> [12403,]  240 #> [12404,]  241 #> [12405,]  240 #> [12406,]  240 #> [12407,]  241 #> [12408,]  240 #> [12409,]  241 #> [12410,]  241 #> [12411,]  240 #> [12412,]  240 #> [12413,]  240 #> [12414,]  241 #> [12415,]  240 #> [12416,]  241 #> [12417,]  240 #> [12418,]  240 #> [12419,]  240 #> [12420,]  241 #> [12421,]  240 #> [12422,]  240 #> [12423,]  240 #> [12424,]  241 #> [12425,]  241 #> [12426,]  240 #> [12427,]  240 #> [12428,]  241 #> [12429,]  240 #> [12430,]  240 #> [12431,]  240 #> [12432,]  240 #> [12433,]  240 #> [12434,]  240 #> [12435,]  240 #> [12436,]  241 #> [12437,]  240 #> [12438,]  240 #> [12439,]  241 #> [12440,]  240 #> [12441,]  240 #> [12442,]  240 #> [12443,]  240 #> [12444,]  240 #> [12445,]  240 #> [12446,]  240 #> [12447,]  240 #> [12448,]  240 #> [12449,]  240 #> [12450,]  241 #> [12451,]  240 #> [12452,]  241 #> [12453,]  240 #> [12454,]  241 #> [12455,]  241 #> [12456,]  240 #> [12457,]  241 #> [12458,]  240 #> [12459,]  241 #> [12460,]  240 #> [12461,]  240 #> [12462,]  240 #> [12463,]  240 #> [12464,]  240 #> [12465,]  240 #> [12466,]  240 #> [12467,]  241 #> [12468,]  240 #> [12469,]  240 #> [12470,]  240 #> [12471,]  240 #> [12472,]  240 #> [12473,]  241 #> [12474,]  240 #> [12475,]  240 #> [12476,]  241 #> [12477,]  240 #> [12478,]  240 #> [12479,]  240 #> [12480,]  240 #> [12481,]  240 #> [12482,]  240 #> [12483,]  240 #> [12484,]  240 #> [12485,]  240 #> [12486,]  241 #> [12487,]  240 #> [12488,]  240 #> [12489,]  240 #> [12490,]  241 #> [12491,]  241 #> [12492,]  240 #> [12493,]  240 #> [12494,]  240 #> [12495,]  240 #> [12496,]  240 #> [12497,]  240 #> [12498,]  240 #> [12499,]  240 #> [12500,]  240 #> [12501,]  243 #> [12502,]  242 #> [12503,]  242 #> [12504,]  242 #> [12505,]  242 #> [12506,]  242 #> [12507,]  242 #> [12508,]  242 #> [12509,]  243 #> [12510,]  242 #> [12511,]  242 #> [12512,]  242 #> [12513,]  243 #> [12514,]  242 #> [12515,]  242 #> [12516,]  242 #> [12517,]  243 #> [12518,]  243 #> [12519,]  242 #> [12520,]  243 #> [12521,]  242 #> [12522,]  242 #> [12523,]  242 #> [12524,]  242 #> [12525,]  242 #> [12526,]  242 #> [12527,]  243 #> [12528,]  242 #> [12529,]  242 #> [12530,]  242 #> [12531,]  242 #> [12532,]  242 #> [12533,]  242 #> [12534,]  242 #> [12535,]  242 #> [12536,]  243 #> [12537,]  242 #> [12538,]  243 #> [12539,]  242 #> [12540,]  242 #> [12541,]  242 #> [12542,]  243 #> [12543,]  242 #> [12544,]  242 #> [12545,]  242 #> [12546,]  242 #> [12547,]  242 #> [12548,]  242 #> [12549,]  242 #> [12550,]  242 #> [12551,]  243 #> [12552,]  242 #> [12553,]  243 #> [12554,]  243 #> [12555,]  242 #> [12556,]  243 #> [12557,]  242 #> [12558,]  242 #> [12559,]  242 #> [12560,]  242 #> [12561,]  242 #> [12562,]  242 #> [12563,]  242 #> [12564,]  242 #> [12565,]  243 #> [12566,]  243 #> [12567,]  242 #> [12568,]  242 #> [12569,]  242 #> [12570,]  242 #> [12571,]  242 #> [12572,]  242 #> [12573,]  242 #> [12574,]  242 #> [12575,]  242 #> [12576,]  242 #> [12577,]  243 #> [12578,]  242 #> [12579,]  243 #> [12580,]  242 #> [12581,]  242 #> [12582,]  243 #> [12583,]  243 #> [12584,]  243 #> [12585,]  242 #> [12586,]  242 #> [12587,]  243 #> [12588,]  242 #> [12589,]  242 #> [12590,]  242 #> [12591,]  243 #> [12592,]  242 #> [12593,]  243 #> [12594,]  243 #> [12595,]  242 #> [12596,]  242 #> [12597,]  242 #> [12598,]  242 #> [12599,]  242 #> [12600,]  242 #> [12601,]  244 #> [12602,]  244 #> [12603,]  244 #> [12604,]  245 #> [12605,]  244 #> [12606,]  245 #> [12607,]  244 #> [12608,]  244 #> [12609,]  245 #> [12610,]  245 #> [12611,]  245 #> [12612,]  245 #> [12613,]  244 #> [12614,]  245 #> [12615,]  245 #> [12616,]  244 #> [12617,]  244 #> [12618,]  245 #> [12619,]  245 #> [12620,]  244 #> [12621,]  245 #> [12622,]  244 #> [12623,]  245 #> [12624,]  244 #> [12625,]  244 #> [12626,]  245 #> [12627,]  245 #> [12628,]  244 #> [12629,]  244 #> [12630,]  245 #> [12631,]  245 #> [12632,]  245 #> [12633,]  245 #> [12634,]  245 #> [12635,]  245 #> [12636,]  245 #> [12637,]  244 #> [12638,]  245 #> [12639,]  244 #> [12640,]  244 #> [12641,]  245 #> [12642,]  245 #> [12643,]  244 #> [12644,]  244 #> [12645,]  244 #> [12646,]  244 #> [12647,]  244 #> [12648,]  245 #> [12649,]  244 #> [12650,]  244 #> [12651,]  244 #> [12652,]  245 #> [12653,]  244 #> [12654,]  244 #> [12655,]  244 #> [12656,]  244 #> [12657,]  245 #> [12658,]  245 #> [12659,]  244 #> [12660,]  245 #> [12661,]  245 #> [12662,]  245 #> [12663,]  244 #> [12664,]  245 #> [12665,]  244 #> [12666,]  244 #> [12667,]  245 #> [12668,]  245 #> [12669,]  245 #> [12670,]  244 #> [12671,]  244 #> [12672,]  244 #> [12673,]  245 #> [12674,]  245 #> [12675,]  245 #> [12676,]  244 #> [12677,]  244 #> [12678,]  244 #> [12679,]  244 #> [12680,]  245 #> [12681,]  244 #> [12682,]  245 #> [12683,]  244 #> [12684,]  244 #> [12685,]  245 #> [12686,]  244 #> [12687,]  245 #> [12688,]  245 #> [12689,]  244 #> [12690,]  244 #> [12691,]  245 #> [12692,]  245 #> [12693,]  245 #> [12694,]  244 #> [12695,]  245 #> [12696,]  245 #> [12697,]  245 #> [12698,]  244 #> [12699,]  245 #> [12700,]  244 #> [12701,]  247 #> [12702,]  246 #> [12703,]  246 #> [12704,]  247 #> [12705,]  246 #> [12706,]  246 #> [12707,]  247 #> [12708,]  246 #> [12709,]  247 #> [12710,]  247 #> [12711,]  246 #> [12712,]  246 #> [12713,]  247 #> [12714,]  247 #> [12715,]  246 #> [12716,]  247 #> [12717,]  246 #> [12718,]  246 #> [12719,]  246 #> [12720,]  247 #> [12721,]  246 #> [12722,]  247 #> [12723,]  246 #> [12724,]  247 #> [12725,]  247 #> [12726,]  246 #> [12727,]  246 #> [12728,]  247 #> [12729,]  246 #> [12730,]  246 #> [12731,]  246 #> [12732,]  246 #> [12733,]  246 #> [12734,]  246 #> [12735,]  246 #> [12736,]  247 #> [12737,]  246 #> [12738,]  246 #> [12739,]  247 #> [12740,]  246 #> [12741,]  246 #> [12742,]  246 #> [12743,]  246 #> [12744,]  246 #> [12745,]  247 #> [12746,]  246 #> [12747,]  246 #> [12748,]  246 #> [12749,]  246 #> [12750,]  247 #> [12751,]  246 #> [12752,]  247 #> [12753,]  247 #> [12754,]  247 #> [12755,]  247 #> [12756,]  246 #> [12757,]  247 #> [12758,]  247 #> [12759,]  247 #> [12760,]  246 #> [12761,]  246 #> [12762,]  246 #> [12763,]  246 #> [12764,]  246 #> [12765,]  246 #> [12766,]  246 #> [12767,]  247 #> [12768,]  246 #> [12769,]  246 #> [12770,]  246 #> [12771,]  246 #> [12772,]  247 #> [12773,]  247 #> [12774,]  246 #> [12775,]  246 #> [12776,]  247 #> [12777,]  246 #> [12778,]  246 #> [12779,]  246 #> [12780,]  246 #> [12781,]  246 #> [12782,]  246 #> [12783,]  246 #> [12784,]  246 #> [12785,]  247 #> [12786,]  247 #> [12787,]  247 #> [12788,]  246 #> [12789,]  246 #> [12790,]  247 #> [12791,]  247 #> [12792,]  246 #> [12793,]  246 #> [12794,]  246 #> [12795,]  246 #> [12796,]  246 #> [12797,]  246 #> [12798,]  246 #> [12799,]  246 #> [12800,]  246 #> [12801,]  248 #> [12802,]  248 #> [12803,]  248 #> [12804,]  248 #> [12805,]  248 #> [12806,]  248 #> [12807,]  248 #> [12808,]  248 #> [12809,]  248 #> [12810,]  248 #> [12811,]  248 #> [12812,]  248 #> [12813,]  248 #> [12814,]  248 #> [12815,]  248 #> [12816,]  248 #> [12817,]  248 #> [12818,]  248 #> [12819,]  248 #> [12820,]  248 #> [12821,]  248 #> [12822,]  248 #> [12823,]  248 #> [12824,]  248 #> [12825,]  248 #> [12826,]  248 #> [12827,]  248 #> [12828,]  248 #> [12829,]  248 #> [12830,]  248 #> [12831,]  248 #> [12832,]  248 #> [12833,]  248 #> [12834,]  248 #> [12835,]  248 #> [12836,]  248 #> [12837,]  248 #> [12838,]  248 #> [12839,]  248 #> [12840,]  248 #> [12841,]  248 #> [12842,]  248 #> [12843,]  248 #> [12844,]  248 #> [12845,]  248 #> [12846,]  248 #> [12847,]  248 #> [12848,]  248 #> [12849,]  248 #> [12850,]  248 #> [12851,]  248 #> [12852,]  248 #> [12853,]  248 #> [12854,]  248 #> [12855,]  248 #> [12856,]  248 #> [12857,]  248 #> [12858,]  248 #> [12859,]  248 #> [12860,]  248 #> [12861,]  248 #> [12862,]  248 #> [12863,]  248 #> [12864,]  248 #> [12865,]  248 #> [12866,]  248 #> [12867,]  248 #> [12868,]  248 #> [12869,]  248 #> [12870,]  248 #> [12871,]  248 #> [12872,]  248 #> [12873,]  248 #> [12874,]  248 #> [12875,]  248 #> [12876,]  248 #> [12877,]  248 #> [12878,]  248 #> [12879,]  248 #> [12880,]  248 #> [12881,]  248 #> [12882,]  248 #> [12883,]  248 #> [12884,]  248 #> [12885,]  248 #> [12886,]  248 #> [12887,]  248 #> [12888,]  248 #> [12889,]  248 #> [12890,]  248 #> [12891,]  248 #> [12892,]  248 #> [12893,]  248 #> [12894,]  248 #> [12895,]  248 #> [12896,]  248 #> [12897,]  248 #> [12898,]  248 #> [12899,]  248 #> [12900,]  248 #> [12901,]  250 #> [12902,]  250 #> [12903,]  250 #> [12904,]  249 #> [12905,]  250 #> [12906,]  250 #> [12907,]  250 #> [12908,]  249 #> [12909,]  249 #> [12910,]  249 #> [12911,]  250 #> [12912,]  250 #> [12913,]  250 #> [12914,]  250 #> [12915,]  250 #> [12916,]  250 #> [12917,]  250 #> [12918,]  249 #> [12919,]  250 #> [12920,]  249 #> [12921,]  250 #> [12922,]  250 #> [12923,]  250 #> [12924,]  250 #> [12925,]  250 #> [12926,]  250 #> [12927,]  250 #> [12928,]  250 #> [12929,]  250 #> [12930,]  249 #> [12931,]  250 #> [12932,]  250 #> [12933,]  250 #> [12934,]  250 #> [12935,]  250 #> [12936,]  250 #> [12937,]  250 #> [12938,]  250 #> [12939,]  249 #> [12940,]  250 #> [12941,]  250 #> [12942,]  250 #> [12943,]  249 #> [12944,]  250 #> [12945,]  249 #> [12946,]  250 #> [12947,]  250 #> [12948,]  250 #> [12949,]  249 #> [12950,]  250 #> [12951,]  249 #> [12952,]  250 #> [12953,]  249 #> [12954,]  250 #> [12955,]  250 #> [12956,]  249 #> [12957,]  250 #> [12958,]  250 #> [12959,]  250 #> [12960,]  249 #> [12961,]  250 #> [12962,]  250 #> [12963,]  250 #> [12964,]  249 #> [12965,]  249 #> [12966,]  249 #> [12967,]  249 #> [12968,]  250 #> [12969,]  250 #> [12970,]  250 #> [12971,]  250 #> [12972,]  250 #> [12973,]  250 #> [12974,]  250 #> [12975,]  250 #> [12976,]  250 #> [12977,]  250 #> [12978,]  249 #> [12979,]  250 #> [12980,]  250 #> [12981,]  250 #> [12982,]  250 #> [12983,]  250 #> [12984,]  250 #> [12985,]  249 #> [12986,]  250 #> [12987,]  250 #> [12988,]  250 #> [12989,]  249 #> [12990,]  250 #> [12991,]  249 #> [12992,]  250 #> [12993,]  250 #> [12994,]  250 #> [12995,]  249 #> [12996,]  250 #> [12997,]  250 #> [12998,]  250 #> [12999,]  250 #> [13000,]  250 #> [13001,]  251 #> [13002,]  252 #> [13003,]  252 #> [13004,]  251 #> [13005,]  251 #> [13006,]  252 #> [13007,]  251 #> [13008,]  251 #> [13009,]  251 #> [13010,]  251 #> [13011,]  251 #> [13012,]  252 #> [13013,]  251 #> [13014,]  251 #> [13015,]  251 #> [13016,]  251 #> [13017,]  251 #> [13018,]  252 #> [13019,]  252 #> [13020,]  252 #> [13021,]  251 #> [13022,]  251 #> [13023,]  251 #> [13024,]  251 #> [13025,]  252 #> [13026,]  251 #> [13027,]  251 #> [13028,]  252 #> [13029,]  251 #> [13030,]  251 #> [13031,]  251 #> [13032,]  251 #> [13033,]  252 #> [13034,]  252 #> [13035,]  251 #> [13036,]  251 #> [13037,]  251 #> [13038,]  251 #> [13039,]  251 #> [13040,]  251 #> [13041,]  251 #> [13042,]  251 #> [13043,]  251 #> [13044,]  251 #> [13045,]  251 #> [13046,]  251 #> [13047,]  251 #> [13048,]  251 #> [13049,]  251 #> [13050,]  251 #> [13051,]  251 #> [13052,]  251 #> [13053,]  251 #> [13054,]  251 #> [13055,]  251 #> [13056,]  251 #> [13057,]  251 #> [13058,]  251 #> [13059,]  251 #> [13060,]  252 #> [13061,]  251 #> [13062,]  251 #> [13063,]  251 #> [13064,]  251 #> [13065,]  252 #> [13066,]  251 #> [13067,]  251 #> [13068,]  251 #> [13069,]  251 #> [13070,]  252 #> [13071,]  252 #> [13072,]  251 #> [13073,]  252 #> [13074,]  251 #> [13075,]  251 #> [13076,]  251 #> [13077,]  251 #> [13078,]  251 #> [13079,]  251 #> [13080,]  251 #> [13081,]  251 #> [13082,]  251 #> [13083,]  251 #> [13084,]  252 #> [13085,]  251 #> [13086,]  251 #> [13087,]  251 #> [13088,]  251 #> [13089,]  251 #> [13090,]  251 #> [13091,]  251 #> [13092,]  251 #> [13093,]  252 #> [13094,]  251 #> [13095,]  251 #> [13096,]  251 #> [13097,]  252 #> [13098,]  252 #> [13099,]  251 #> [13100,]  251 #> [13101,]  254 #> [13102,]  254 #> [13103,]  253 #> [13104,]  253 #> [13105,]  254 #> [13106,]  254 #> [13107,]  253 #> [13108,]  253 #> [13109,]  254 #> [13110,]  254 #> [13111,]  254 #> [13112,]  253 #> [13113,]  254 #> [13114,]  253 #> [13115,]  254 #> [13116,]  254 #> [13117,]  254 #> [13118,]  254 #> [13119,]  254 #> [13120,]  254 #> [13121,]  254 #> [13122,]  254 #> [13123,]  253 #> [13124,]  254 #> [13125,]  253 #> [13126,]  254 #> [13127,]  254 #> [13128,]  254 #> [13129,]  254 #> [13130,]  254 #> [13131,]  253 #> [13132,]  253 #> [13133,]  254 #> [13134,]  254 #> [13135,]  254 #> [13136,]  254 #> [13137,]  253 #> [13138,]  254 #> [13139,]  254 #> [13140,]  253 #> [13141,]  254 #> [13142,]  254 #> [13143,]  254 #> [13144,]  253 #> [13145,]  254 #> [13146,]  253 #> [13147,]  253 #> [13148,]  254 #> [13149,]  254 #> [13150,]  254 #> [13151,]  254 #> [13152,]  253 #> [13153,]  254 #> [13154,]  254 #> [13155,]  253 #> [13156,]  254 #> [13157,]  253 #> [13158,]  254 #> [13159,]  253 #> [13160,]  253 #> [13161,]  254 #> [13162,]  254 #> [13163,]  254 #> [13164,]  254 #> [13165,]  254 #> [13166,]  254 #> [13167,]  253 #> [13168,]  253 #> [13169,]  254 #> [13170,]  254 #> [13171,]  254 #> [13172,]  253 #> [13173,]  254 #> [13174,]  253 #> [13175,]  253 #> [13176,]  253 #> [13177,]  254 #> [13178,]  253 #> [13179,]  254 #> [13180,]  253 #> [13181,]  254 #> [13182,]  254 #> [13183,]  254 #> [13184,]  254 #> [13185,]  254 #> [13186,]  253 #> [13187,]  254 #> [13188,]  254 #> [13189,]  254 #> [13190,]  254 #> [13191,]  254 #> [13192,]  253 #> [13193,]  254 #> [13194,]  254 #> [13195,]  254 #> [13196,]  253 #> [13197,]  253 #> [13198,]  253 #> [13199,]  254 #> [13200,]  254 #> [13201,]  255 #> [13202,]  256 #> [13203,]  256 #> [13204,]  255 #> [13205,]  256 #> [13206,]  256 #> [13207,]  256 #> [13208,]  255 #> [13209,]  255 #> [13210,]  256 #> [13211,]  255 #> [13212,]  256 #> [13213,]  255 #> [13214,]  255 #> [13215,]  256 #> [13216,]  256 #> [13217,]  255 #> [13218,]  256 #> [13219,]  256 #> [13220,]  256 #> [13221,]  255 #> [13222,]  255 #> [13223,]  256 #> [13224,]  256 #> [13225,]  256 #> [13226,]  256 #> [13227,]  255 #> [13228,]  256 #> [13229,]  256 #> [13230,]  255 #> [13231,]  256 #> [13232,]  256 #> [13233,]  256 #> [13234,]  256 #> [13235,]  255 #> [13236,]  256 #> [13237,]  256 #> [13238,]  256 #> [13239,]  256 #> [13240,]  256 #> [13241,]  256 #> [13242,]  256 #> [13243,]  255 #> [13244,]  255 #> [13245,]  255 #> [13246,]  255 #> [13247,]  256 #> [13248,]  256 #> [13249,]  255 #> [13250,]  256 #> [13251,]  256 #> [13252,]  255 #> [13253,]  256 #> [13254,]  255 #> [13255,]  255 #> [13256,]  256 #> [13257,]  256 #> [13258,]  255 #> [13259,]  256 #> [13260,]  256 #> [13261,]  256 #> [13262,]  256 #> [13263,]  256 #> [13264,]  256 #> [13265,]  256 #> [13266,]  255 #> [13267,]  256 #> [13268,]  255 #> [13269,]  255 #> [13270,]  256 #> [13271,]  256 #> [13272,]  256 #> [13273,]  256 #> [13274,]  256 #> [13275,]  256 #> [13276,]  256 #> [13277,]  256 #> [13278,]  256 #> [13279,]  255 #> [13280,]  255 #> [13281,]  255 #> [13282,]  255 #> [13283,]  255 #> [13284,]  256 #> [13285,]  256 #> [13286,]  256 #> [13287,]  255 #> [13288,]  255 #> [13289,]  255 #> [13290,]  255 #> [13291,]  255 #> [13292,]  255 #> [13293,]  256 #> [13294,]  256 #> [13295,]  255 #> [13296,]  255 #> [13297,]  256 #> [13298,]  256 #> [13299,]  255 #> [13300,]  256 #> [13301,]  258 #> [13302,]  258 #> [13303,]  257 #> [13304,]  257 #> [13305,]  258 #> [13306,]  258 #> [13307,]  257 #> [13308,]  257 #> [13309,]  258 #> [13310,]  258 #> [13311,]  258 #> [13312,]  257 #> [13313,]  258 #> [13314,]  258 #> [13315,]  258 #> [13316,]  258 #> [13317,]  258 #> [13318,]  258 #> [13319,]  258 #> [13320,]  258 #> [13321,]  258 #> [13322,]  258 #> [13323,]  257 #> [13324,]  258 #> [13325,]  257 #> [13326,]  258 #> [13327,]  258 #> [13328,]  258 #> [13329,]  258 #> [13330,]  258 #> [13331,]  257 #> [13332,]  258 #> [13333,]  258 #> [13334,]  258 #> [13335,]  258 #> [13336,]  258 #> [13337,]  257 #> [13338,]  258 #> [13339,]  258 #> [13340,]  257 #> [13341,]  258 #> [13342,]  258 #> [13343,]  258 #> [13344,]  258 #> [13345,]  258 #> [13346,]  257 #> [13347,]  257 #> [13348,]  258 #> [13349,]  258 #> [13350,]  258 #> [13351,]  258 #> [13352,]  257 #> [13353,]  258 #> [13354,]  258 #> [13355,]  257 #> [13356,]  258 #> [13357,]  257 #> [13358,]  258 #> [13359,]  257 #> [13360,]  257 #> [13361,]  258 #> [13362,]  258 #> [13363,]  258 #> [13364,]  258 #> [13365,]  258 #> [13366,]  258 #> [13367,]  258 #> [13368,]  257 #> [13369,]  258 #> [13370,]  258 #> [13371,]  258 #> [13372,]  258 #> [13373,]  258 #> [13374,]  257 #> [13375,]  258 #> [13376,]  258 #> [13377,]  258 #> [13378,]  258 #> [13379,]  258 #> [13380,]  257 #> [13381,]  258 #> [13382,]  258 #> [13383,]  258 #> [13384,]  258 #> [13385,]  258 #> [13386,]  257 #> [13387,]  258 #> [13388,]  258 #> [13389,]  258 #> [13390,]  258 #> [13391,]  258 #> [13392,]  258 #> [13393,]  258 #> [13394,]  258 #> [13395,]  258 #> [13396,]  257 #> [13397,]  257 #> [13398,]  257 #> [13399,]  258 #> [13400,]  258 #> [13401,]  260 #> [13402,]  260 #> [13403,]  259 #> [13404,]  259 #> [13405,]  259 #> [13406,]  260 #> [13407,]  259 #> [13408,]  259 #> [13409,]  259 #> [13410,]  259 #> [13411,]  259 #> [13412,]  259 #> [13413,]  260 #> [13414,]  260 #> [13415,]  260 #> [13416,]  260 #> [13417,]  260 #> [13418,]  259 #> [13419,]  259 #> [13420,]  259 #> [13421,]  260 #> [13422,]  259 #> [13423,]  259 #> [13424,]  259 #> [13425,]  259 #> [13426,]  259 #> [13427,]  259 #> [13428,]  259 #> [13429,]  260 #> [13430,]  259 #> [13431,]  259 #> [13432,]  259 #> [13433,]  260 #> [13434,]  259 #> [13435,]  260 #> [13436,]  259 #> [13437,]  259 #> [13438,]  259 #> [13439,]  259 #> [13440,]  259 #> [13441,]  260 #> [13442,]  259 #> [13443,]  259 #> [13444,]  260 #> [13445,]  259 #> [13446,]  259 #> [13447,]  259 #> [13448,]  259 #> [13449,]  259 #> [13450,]  260 #> [13451,]  259 #> [13452,]  259 #> [13453,]  259 #> [13454,]  259 #> [13455,]  259 #> [13456,]  259 #> [13457,]  259 #> [13458,]  259 #> [13459,]  260 #> [13460,]  259 #> [13461,]  260 #> [13462,]  259 #> [13463,]  259 #> [13464,]  259 #> [13465,]  259 #> [13466,]  259 #> [13467,]  259 #> [13468,]  260 #> [13469,]  259 #> [13470,]  260 #> [13471,]  259 #> [13472,]  259 #> [13473,]  260 #> [13474,]  259 #> [13475,]  259 #> [13476,]  260 #> [13477,]  260 #> [13478,]  259 #> [13479,]  260 #> [13480,]  259 #> [13481,]  260 #> [13482,]  259 #> [13483,]  260 #> [13484,]  259 #> [13485,]  259 #> [13486,]  260 #> [13487,]  259 #> [13488,]  259 #> [13489,]  259 #> [13490,]  259 #> [13491,]  259 #> [13492,]  259 #> [13493,]  260 #> [13494,]  259 #> [13495,]  259 #> [13496,]  260 #> [13497,]  259 #> [13498,]  259 #> [13499,]  260 #> [13500,]  259 #> [13501,]  261 #> [13502,]  261 #> [13503,]  261 #> [13504,]  261 #> [13505,]  261 #> [13506,]  262 #> [13507,]  261 #> [13508,]  262 #> [13509,]  262 #> [13510,]  261 #> [13511,]  261 #> [13512,]  262 #> [13513,]  261 #> [13514,]  261 #> [13515,]  262 #> [13516,]  261 #> [13517,]  261 #> [13518,]  261 #> [13519,]  261 #> [13520,]  261 #> [13521,]  261 #> [13522,]  261 #> [13523,]  261 #> [13524,]  261 #> [13525,]  261 #> [13526,]  262 #> [13527,]  261 #> [13528,]  261 #> [13529,]  261 #> [13530,]  261 #> [13531,]  261 #> [13532,]  261 #> [13533,]  261 #> [13534,]  261 #> [13535,]  261 #> [13536,]  261 #> [13537,]  261 #> [13538,]  261 #> [13539,]  261 #> [13540,]  261 #> [13541,]  261 #> [13542,]  261 #> [13543,]  262 #> [13544,]  261 #> [13545,]  261 #> [13546,]  262 #> [13547,]  261 #> [13548,]  261 #> [13549,]  261 #> [13550,]  261 #> [13551,]  262 #> [13552,]  261 #> [13553,]  261 #> [13554,]  261 #> [13555,]  261 #> [13556,]  262 #> [13557,]  261 #> [13558,]  261 #> [13559,]  261 #> [13560,]  261 #> [13561,]  262 #> [13562,]  261 #> [13563,]  261 #> [13564,]  262 #> [13565,]  261 #> [13566,]  262 #> [13567,]  261 #> [13568,]  261 #> [13569,]  261 #> [13570,]  261 #> [13571,]  261 #> [13572,]  261 #> [13573,]  261 #> [13574,]  261 #> [13575,]  261 #> [13576,]  262 #> [13577,]  261 #> [13578,]  261 #> [13579,]  261 #> [13580,]  261 #> [13581,]  261 #> [13582,]  261 #> [13583,]  261 #> [13584,]  261 #> [13585,]  261 #> [13586,]  261 #> [13587,]  261 #> [13588,]  261 #> [13589,]  261 #> [13590,]  261 #> [13591,]  261 #> [13592,]  261 #> [13593,]  261 #> [13594,]  262 #> [13595,]  261 #> [13596,]  261 #> [13597,]  261 #> [13598,]  261 #> [13599,]  261 #> [13600,]  261 #> [13601,]  264 #> [13602,]  264 #> [13603,]  263 #> [13604,]  264 #> [13605,]  264 #> [13606,]  264 #> [13607,]  263 #> [13608,]  263 #> [13609,]  264 #> [13610,]  264 #> [13611,]  264 #> [13612,]  264 #> [13613,]  264 #> [13614,]  264 #> [13615,]  264 #> [13616,]  264 #> [13617,]  264 #> [13618,]  264 #> [13619,]  264 #> [13620,]  263 #> [13621,]  264 #> [13622,]  264 #> [13623,]  264 #> [13624,]  264 #> [13625,]  263 #> [13626,]  264 #> [13627,]  264 #> [13628,]  264 #> [13629,]  264 #> [13630,]  264 #> [13631,]  264 #> [13632,]  264 #> [13633,]  264 #> [13634,]  264 #> [13635,]  264 #> [13636,]  264 #> [13637,]  264 #> [13638,]  264 #> [13639,]  263 #> [13640,]  264 #> [13641,]  264 #> [13642,]  264 #> [13643,]  264 #> [13644,]  263 #> [13645,]  264 #> [13646,]  264 #> [13647,]  264 #> [13648,]  264 #> [13649,]  263 #> [13650,]  263 #> [13651,]  264 #> [13652,]  264 #> [13653,]  263 #> [13654,]  264 #> [13655,]  263 #> [13656,]  263 #> [13657,]  264 #> [13658,]  264 #> [13659,]  263 #> [13660,]  264 #> [13661,]  264 #> [13662,]  264 #> [13663,]  264 #> [13664,]  264 #> [13665,]  263 #> [13666,]  263 #> [13667,]  264 #> [13668,]  264 #> [13669,]  264 #> [13670,]  264 #> [13671,]  264 #> [13672,]  264 #> [13673,]  264 #> [13674,]  264 #> [13675,]  264 #> [13676,]  264 #> [13677,]  264 #> [13678,]  264 #> [13679,]  264 #> [13680,]  264 #> [13681,]  264 #> [13682,]  264 #> [13683,]  264 #> [13684,]  263 #> [13685,]  264 #> [13686,]  263 #> [13687,]  264 #> [13688,]  264 #> [13689,]  264 #> [13690,]  263 #> [13691,]  264 #> [13692,]  264 #> [13693,]  264 #> [13694,]  264 #> [13695,]  264 #> [13696,]  264 #> [13697,]  264 #> [13698,]  263 #> [13699,]  264 #> [13700,]  263 #> [13701,]  265 #> [13702,]  265 #> [13703,]  265 #> [13704,]  265 #> [13705,]  265 #> [13706,]  265 #> [13707,]  265 #> [13708,]  266 #> [13709,]  266 #> [13710,]  265 #> [13711,]  265 #> [13712,]  265 #> [13713,]  265 #> [13714,]  265 #> [13715,]  265 #> [13716,]  265 #> [13717,]  265 #> [13718,]  265 #> [13719,]  265 #> [13720,]  265 #> [13721,]  265 #> [13722,]  265 #> [13723,]  265 #> [13724,]  265 #> [13725,]  265 #> [13726,]  266 #> [13727,]  265 #> [13728,]  265 #> [13729,]  265 #> [13730,]  265 #> [13731,]  265 #> [13732,]  265 #> [13733,]  265 #> [13734,]  265 #> [13735,]  265 #> [13736,]  265 #> [13737,]  265 #> [13738,]  265 #> [13739,]  265 #> [13740,]  265 #> [13741,]  265 #> [13742,]  265 #> [13743,]  266 #> [13744,]  265 #> [13745,]  265 #> [13746,]  265 #> [13747,]  265 #> [13748,]  265 #> [13749,]  265 #> [13750,]  265 #> [13751,]  265 #> [13752,]  265 #> [13753,]  265 #> [13754,]  265 #> [13755,]  265 #> [13756,]  266 #> [13757,]  265 #> [13758,]  265 #> [13759,]  265 #> [13760,]  265 #> [13761,]  266 #> [13762,]  265 #> [13763,]  265 #> [13764,]  266 #> [13765,]  265 #> [13766,]  265 #> [13767,]  265 #> [13768,]  265 #> [13769,]  265 #> [13770,]  265 #> [13771,]  265 #> [13772,]  265 #> [13773,]  265 #> [13774,]  265 #> [13775,]  265 #> [13776,]  266 #> [13777,]  265 #> [13778,]  265 #> [13779,]  265 #> [13780,]  265 #> [13781,]  265 #> [13782,]  265 #> [13783,]  265 #> [13784,]  265 #> [13785,]  265 #> [13786,]  265 #> [13787,]  265 #> [13788,]  265 #> [13789,]  265 #> [13790,]  265 #> [13791,]  265 #> [13792,]  265 #> [13793,]  265 #> [13794,]  266 #> [13795,]  265 #> [13796,]  265 #> [13797,]  265 #> [13798,]  265 #> [13799,]  265 #> [13800,]  265 #> [13801,]  267 #> [13802,]  267 #> [13803,]  267 #> [13804,]  268 #> [13805,]  267 #> [13806,]  267 #> [13807,]  267 #> [13808,]  267 #> [13809,]  267 #> [13810,]  267 #> [13811,]  267 #> [13812,]  267 #> [13813,]  267 #> [13814,]  268 #> [13815,]  267 #> [13816,]  267 #> [13817,]  267 #> [13818,]  267 #> [13819,]  268 #> [13820,]  267 #> [13821,]  267 #> [13822,]  267 #> [13823,]  267 #> [13824,]  267 #> [13825,]  267 #> [13826,]  267 #> [13827,]  268 #> [13828,]  267 #> [13829,]  267 #> [13830,]  267 #> [13831,]  267 #> [13832,]  267 #> [13833,]  267 #> [13834,]  267 #> [13835,]  267 #> [13836,]  267 #> [13837,]  267 #> [13838,]  267 #> [13839,]  267 #> [13840,]  267 #> [13841,]  268 #> [13842,]  267 #> [13843,]  267 #> [13844,]  267 #> [13845,]  267 #> [13846,]  267 #> [13847,]  267 #> [13848,]  268 #> [13849,]  267 #> [13850,]  267 #> [13851,]  267 #> [13852,]  267 #> [13853,]  267 #> [13854,]  267 #> [13855,]  267 #> [13856,]  267 #> [13857,]  267 #> [13858,]  267 #> [13859,]  267 #> [13860,]  267 #> [13861,]  268 #> [13862,]  267 #> [13863,]  267 #> [13864,]  267 #> [13865,]  267 #> [13866,]  267 #> [13867,]  267 #> [13868,]  267 #> [13869,]  268 #> [13870,]  267 #> [13871,]  267 #> [13872,]  267 #> [13873,]  267 #> [13874,]  267 #> [13875,]  267 #> [13876,]  267 #> [13877,]  267 #> [13878,]  267 #> [13879,]  267 #> [13880,]  267 #> [13881,]  267 #> [13882,]  268 #> [13883,]  267 #> [13884,]  267 #> [13885,]  267 #> [13886,]  267 #> [13887,]  267 #> [13888,]  267 #> [13889,]  267 #> [13890,]  267 #> [13891,]  267 #> [13892,]  268 #> [13893,]  268 #> [13894,]  267 #> [13895,]  267 #> [13896,]  268 #> [13897,]  268 #> [13898,]  267 #> [13899,]  267 #> [13900,]  267 #> [13901,]  269 #> [13902,]  269 #> [13903,]  269 #> [13904,]  269 #> [13905,]  269 #> [13906,]  269 #> [13907,]  269 #> [13908,]  269 #> [13909,]  269 #> [13910,]  269 #> [13911,]  269 #> [13912,]  269 #> [13913,]  269 #> [13914,]  269 #> [13915,]  269 #> [13916,]  269 #> [13917,]  269 #> [13918,]  269 #> [13919,]  269 #> [13920,]  269 #> [13921,]  269 #> [13922,]  269 #> [13923,]  269 #> [13924,]  269 #> [13925,]  269 #> [13926,]  269 #> [13927,]  269 #> [13928,]  269 #> [13929,]  269 #> [13930,]  269 #> [13931,]  269 #> [13932,]  269 #> [13933,]  269 #> [13934,]  269 #> [13935,]  269 #> [13936,]  269 #> [13937,]  269 #> [13938,]  269 #> [13939,]  269 #> [13940,]  269 #> [13941,]  269 #> [13942,]  269 #> [13943,]  269 #> [13944,]  269 #> [13945,]  269 #> [13946,]  269 #> [13947,]  269 #> [13948,]  269 #> [13949,]  269 #> [13950,]  269 #> [13951,]  269 #> [13952,]  269 #> [13953,]  269 #> [13954,]  269 #> [13955,]  269 #> [13956,]  269 #> [13957,]  269 #> [13958,]  269 #> [13959,]  269 #> [13960,]  269 #> [13961,]  269 #> [13962,]  269 #> [13963,]  269 #> [13964,]  269 #> [13965,]  269 #> [13966,]  269 #> [13967,]  269 #> [13968,]  269 #> [13969,]  269 #> [13970,]  269 #> [13971,]  269 #> [13972,]  269 #> [13973,]  269 #> [13974,]  269 #> [13975,]  269 #> [13976,]  269 #> [13977,]  269 #> [13978,]  269 #> [13979,]  269 #> [13980,]  269 #> [13981,]  269 #> [13982,]  269 #> [13983,]  269 #> [13984,]  269 #> [13985,]  269 #> [13986,]  269 #> [13987,]  269 #> [13988,]  269 #> [13989,]  269 #> [13990,]  269 #> [13991,]  269 #> [13992,]  269 #> [13993,]  269 #> [13994,]  269 #> [13995,]  269 #> [13996,]  269 #> [13997,]  269 #> [13998,]  269 #> [13999,]  269 #> [14000,]  269 #> [14001,]  270 #> [14002,]  271 #> [14003,]  270 #> [14004,]  270 #> [14005,]  270 #> [14006,]  270 #> [14007,]  270 #> [14008,]  270 #> [14009,]  271 #> [14010,]  271 #> [14011,]  270 #> [14012,]  271 #> [14013,]  271 #> [14014,]  270 #> [14015,]  270 #> [14016,]  270 #> [14017,]  271 #> [14018,]  270 #> [14019,]  270 #> [14020,]  270 #> [14021,]  271 #> [14022,]  270 #> [14023,]  270 #> [14024,]  270 #> [14025,]  270 #> [14026,]  270 #> [14027,]  270 #> [14028,]  270 #> [14029,]  271 #> [14030,]  270 #> [14031,]  270 #> [14032,]  271 #> [14033,]  271 #> [14034,]  270 #> [14035,]  270 #> [14036,]  270 #> [14037,]  270 #> [14038,]  270 #> [14039,]  270 #> [14040,]  271 #> [14041,]  270 #> [14042,]  270 #> [14043,]  270 #> [14044,]  270 #> [14045,]  270 #> [14046,]  270 #> [14047,]  270 #> [14048,]  270 #> [14049,]  270 #> [14050,]  270 #> [14051,]  270 #> [14052,]  270 #> [14053,]  271 #> [14054,]  270 #> [14055,]  270 #> [14056,]  270 #> [14057,]  270 #> [14058,]  270 #> [14059,]  270 #> [14060,]  271 #> [14061,]  270 #> [14062,]  270 #> [14063,]  271 #> [14064,]  270 #> [14065,]  270 #> [14066,]  270 #> [14067,]  270 #> [14068,]  270 #> [14069,]  270 #> [14070,]  271 #> [14071,]  270 #> [14072,]  270 #> [14073,]  270 #> [14074,]  270 #> [14075,]  271 #> [14076,]  270 #> [14077,]  270 #> [14078,]  270 #> [14079,]  270 #> [14080,]  271 #> [14081,]  271 #> [14082,]  270 #> [14083,]  270 #> [14084,]  270 #> [14085,]  270 #> [14086,]  271 #> [14087,]  270 #> [14088,]  270 #> [14089,]  270 #> [14090,]  270 #> [14091,]  270 #> [14092,]  270 #> [14093,]  270 #> [14094,]  270 #> [14095,]  270 #> [14096,]  270 #> [14097,]  270 #> [14098,]  270 #> [14099,]  270 #> [14100,]  270 #> [14101,]  273 #> [14102,]  272 #> [14103,]  272 #> [14104,]  273 #> [14105,]  273 #> [14106,]  273 #> [14107,]  272 #> [14108,]  273 #> [14109,]  273 #> [14110,]  272 #> [14111,]  273 #> [14112,]  273 #> [14113,]  272 #> [14114,]  273 #> [14115,]  273 #> [14116,]  272 #> [14117,]  272 #> [14118,]  272 #> [14119,]  272 #> [14120,]  273 #> [14121,]  272 #> [14122,]  272 #> [14123,]  272 #> [14124,]  272 #> [14125,]  272 #> [14126,]  273 #> [14127,]  272 #> [14128,]  273 #> [14129,]  272 #> [14130,]  272 #> [14131,]  272 #> [14132,]  272 #> [14133,]  273 #> [14134,]  272 #> [14135,]  272 #> [14136,]  272 #> [14137,]  272 #> [14138,]  273 #> [14139,]  272 #> [14140,]  272 #> [14141,]  273 #> [14142,]  273 #> [14143,]  273 #> [14144,]  272 #> [14145,]  273 #> [14146,]  273 #> [14147,]  272 #> [14148,]  272 #> [14149,]  272 #> [14150,]  273 #> [14151,]  273 #> [14152,]  273 #> [14153,]  273 #> [14154,]  272 #> [14155,]  273 #> [14156,]  273 #> [14157,]  273 #> [14158,]  273 #> [14159,]  272 #> [14160,]  273 #> [14161,]  273 #> [14162,]  272 #> [14163,]  273 #> [14164,]  273 #> [14165,]  273 #> [14166,]  273 #> [14167,]  273 #> [14168,]  273 #> [14169,]  273 #> [14170,]  272 #> [14171,]  273 #> [14172,]  273 #> [14173,]  273 #> [14174,]  273 #> [14175,]  273 #> [14176,]  273 #> [14177,]  272 #> [14178,]  273 #> [14179,]  272 #> [14180,]  272 #> [14181,]  273 #> [14182,]  272 #> [14183,]  272 #> [14184,]  273 #> [14185,]  272 #> [14186,]  272 #> [14187,]  273 #> [14188,]  273 #> [14189,]  273 #> [14190,]  273 #> [14191,]  273 #> [14192,]  273 #> [14193,]  272 #> [14194,]  273 #> [14195,]  272 #> [14196,]  273 #> [14197,]  273 #> [14198,]  272 #> [14199,]  273 #> [14200,]  272 #> [14201,]  275 #> [14202,]  275 #> [14203,]  275 #> [14204,]  274 #> [14205,]  275 #> [14206,]  275 #> [14207,]  275 #> [14208,]  274 #> [14209,]  274 #> [14210,]  275 #> [14211,]  274 #> [14212,]  275 #> [14213,]  275 #> [14214,]  275 #> [14215,]  275 #> [14216,]  275 #> [14217,]  274 #> [14218,]  275 #> [14219,]  275 #> [14220,]  275 #> [14221,]  275 #> [14222,]  274 #> [14223,]  275 #> [14224,]  275 #> [14225,]  275 #> [14226,]  275 #> [14227,]  274 #> [14228,]  275 #> [14229,]  275 #> [14230,]  275 #> [14231,]  275 #> [14232,]  275 #> [14233,]  275 #> [14234,]  275 #> [14235,]  274 #> [14236,]  275 #> [14237,]  275 #> [14238,]  275 #> [14239,]  275 #> [14240,]  275 #> [14241,]  275 #> [14242,]  275 #> [14243,]  275 #> [14244,]  274 #> [14245,]  275 #> [14246,]  275 #> [14247,]  275 #> [14248,]  275 #> [14249,]  275 #> [14250,]  275 #> [14251,]  275 #> [14252,]  274 #> [14253,]  275 #> [14254,]  275 #> [14255,]  275 #> [14256,]  275 #> [14257,]  275 #> [14258,]  274 #> [14259,]  275 #> [14260,]  275 #> [14261,]  275 #> [14262,]  275 #> [14263,]  275 #> [14264,]  275 #> [14265,]  275 #> [14266,]  274 #> [14267,]  275 #> [14268,]  275 #> [14269,]  275 #> [14270,]  275 #> [14271,]  275 #> [14272,]  275 #> [14273,]  275 #> [14274,]  275 #> [14275,]  275 #> [14276,]  275 #> [14277,]  275 #> [14278,]  275 #> [14279,]  275 #> [14280,]  275 #> [14281,]  274 #> [14282,]  274 #> [14283,]  275 #> [14284,]  275 #> [14285,]  275 #> [14286,]  275 #> [14287,]  274 #> [14288,]  275 #> [14289,]  275 #> [14290,]  274 #> [14291,]  275 #> [14292,]  274 #> [14293,]  275 #> [14294,]  275 #> [14295,]  274 #> [14296,]  275 #> [14297,]  275 #> [14298,]  275 #> [14299,]  274 #> [14300,]  275 #> [14301,]  276 #> [14302,]  277 #> [14303,]  276 #> [14304,]  276 #> [14305,]  277 #> [14306,]  276 #> [14307,]  277 #> [14308,]  276 #> [14309,]  277 #> [14310,]  277 #> [14311,]  276 #> [14312,]  277 #> [14313,]  277 #> [14314,]  276 #> [14315,]  276 #> [14316,]  276 #> [14317,]  277 #> [14318,]  277 #> [14319,]  276 #> [14320,]  277 #> [14321,]  277 #> [14322,]  277 #> [14323,]  277 #> [14324,]  277 #> [14325,]  277 #> [14326,]  276 #> [14327,]  277 #> [14328,]  276 #> [14329,]  277 #> [14330,]  277 #> [14331,]  277 #> [14332,]  277 #> [14333,]  277 #> [14334,]  276 #> [14335,]  276 #> [14336,]  277 #> [14337,]  276 #> [14338,]  276 #> [14339,]  277 #> [14340,]  277 #> [14341,]  277 #> [14342,]  276 #> [14343,]  277 #> [14344,]  277 #> [14345,]  276 #> [14346,]  276 #> [14347,]  277 #> [14348,]  277 #> [14349,]  276 #> [14350,]  277 #> [14351,]  277 #> [14352,]  276 #> [14353,]  277 #> [14354,]  277 #> [14355,]  276 #> [14356,]  276 #> [14357,]  276 #> [14358,]  277 #> [14359,]  276 #> [14360,]  277 #> [14361,]  277 #> [14362,]  276 #> [14363,]  277 #> [14364,]  276 #> [14365,]  276 #> [14366,]  277 #> [14367,]  276 #> [14368,]  276 #> [14369,]  276 #> [14370,]  277 #> [14371,]  277 #> [14372,]  276 #> [14373,]  276 #> [14374,]  277 #> [14375,]  277 #> [14376,]  277 #> [14377,]  276 #> [14378,]  277 #> [14379,]  276 #> [14380,]  277 #> [14381,]  277 #> [14382,]  276 #> [14383,]  277 #> [14384,]  277 #> [14385,]  276 #> [14386,]  277 #> [14387,]  277 #> [14388,]  277 #> [14389,]  276 #> [14390,]  277 #> [14391,]  276 #> [14392,]  277 #> [14393,]  277 #> [14394,]  276 #> [14395,]  277 #> [14396,]  276 #> [14397,]  276 #> [14398,]  276 #> [14399,]  277 #> [14400,]  276 #> [14401,]  278 #> [14402,]  278 #> [14403,]  278 #> [14404,]  278 #> [14405,]  278 #> [14406,]  278 #> [14407,]  278 #> [14408,]  278 #> [14409,]  278 #> [14410,]  278 #> [14411,]  278 #> [14412,]  278 #> [14413,]  278 #> [14414,]  278 #> [14415,]  278 #> [14416,]  278 #> [14417,]  278 #> [14418,]  278 #> [14419,]  278 #> [14420,]  278 #> [14421,]  278 #> [14422,]  278 #> [14423,]  278 #> [14424,]  278 #> [14425,]  278 #> [14426,]  278 #> [14427,]  278 #> [14428,]  278 #> [14429,]  278 #> [14430,]  278 #> [14431,]  278 #> [14432,]  278 #> [14433,]  278 #> [14434,]  278 #> [14435,]  278 #> [14436,]  278 #> [14437,]  278 #> [14438,]  278 #> [14439,]  278 #> [14440,]  278 #> [14441,]  278 #> [14442,]  278 #> [14443,]  278 #> [14444,]  278 #> [14445,]  278 #> [14446,]  278 #> [14447,]  278 #> [14448,]  278 #> [14449,]  278 #> [14450,]  278 #> [14451,]  278 #> [14452,]  278 #> [14453,]  278 #> [14454,]  278 #> [14455,]  278 #> [14456,]  278 #> [14457,]  278 #> [14458,]  278 #> [14459,]  278 #> [14460,]  278 #> [14461,]  278 #> [14462,]  278 #> [14463,]  278 #> [14464,]  278 #> [14465,]  278 #> [14466,]  278 #> [14467,]  278 #> [14468,]  278 #> [14469,]  278 #> [14470,]  278 #> [14471,]  278 #> [14472,]  278 #> [14473,]  278 #> [14474,]  278 #> [14475,]  278 #> [14476,]  278 #> [14477,]  278 #> [14478,]  278 #> [14479,]  278 #> [14480,]  278 #> [14481,]  278 #> [14482,]  278 #> [14483,]  278 #> [14484,]  278 #> [14485,]  278 #> [14486,]  278 #> [14487,]  278 #> [14488,]  278 #> [14489,]  278 #> [14490,]  278 #> [14491,]  278 #> [14492,]  278 #> [14493,]  278 #> [14494,]  278 #> [14495,]  278 #> [14496,]  278 #> [14497,]  278 #> [14498,]  278 #> [14499,]  278 #> [14500,]  278 #> [14501,]  280 #> [14502,]  280 #> [14503,]  279 #> [14504,]  279 #> [14505,]  280 #> [14506,]  280 #> [14507,]  279 #> [14508,]  279 #> [14509,]  280 #> [14510,]  279 #> [14511,]  280 #> [14512,]  279 #> [14513,]  280 #> [14514,]  279 #> [14515,]  280 #> [14516,]  279 #> [14517,]  280 #> [14518,]  280 #> [14519,]  280 #> [14520,]  280 #> [14521,]  280 #> [14522,]  280 #> [14523,]  279 #> [14524,]  280 #> [14525,]  279 #> [14526,]  279 #> [14527,]  280 #> [14528,]  280 #> [14529,]  280 #> [14530,]  279 #> [14531,]  279 #> [14532,]  279 #> [14533,]  280 #> [14534,]  279 #> [14535,]  279 #> [14536,]  280 #> [14537,]  279 #> [14538,]  280 #> [14539,]  280 #> [14540,]  279 #> [14541,]  280 #> [14542,]  280 #> [14543,]  280 #> [14544,]  279 #> [14545,]  279 #> [14546,]  279 #> [14547,]  279 #> [14548,]  280 #> [14549,]  279 #> [14550,]  280 #> [14551,]  280 #> [14552,]  279 #> [14553,]  280 #> [14554,]  280 #> [14555,]  279 #> [14556,]  280 #> [14557,]  279 #> [14558,]  280 #> [14559,]  279 #> [14560,]  279 #> [14561,]  280 #> [14562,]  280 #> [14563,]  280 #> [14564,]  280 #> [14565,]  280 #> [14566,]  280 #> [14567,]  279 #> [14568,]  279 #> [14569,]  279 #> [14570,]  280 #> [14571,]  279 #> [14572,]  279 #> [14573,]  280 #> [14574,]  279 #> [14575,]  279 #> [14576,]  279 #> [14577,]  280 #> [14578,]  279 #> [14579,]  280 #> [14580,]  279 #> [14581,]  280 #> [14582,]  280 #> [14583,]  280 #> [14584,]  280 #> [14585,]  280 #> [14586,]  279 #> [14587,]  280 #> [14588,]  279 #> [14589,]  280 #> [14590,]  280 #> [14591,]  280 #> [14592,]  279 #> [14593,]  280 #> [14594,]  280 #> [14595,]  279 #> [14596,]  279 #> [14597,]  279 #> [14598,]  279 #> [14599,]  280 #> [14600,]  280 #> [14601,]  281 #> [14602,]  281 #> [14603,]  281 #> [14604,]  281 #> [14605,]  281 #> [14606,]  281 #> [14607,]  281 #> [14608,]  281 #> [14609,]  281 #> [14610,]  281 #> [14611,]  281 #> [14612,]  281 #> [14613,]  281 #> [14614,]  281 #> [14615,]  281 #> [14616,]  281 #> [14617,]  281 #> [14618,]  281 #> [14619,]  281 #> [14620,]  281 #> [14621,]  281 #> [14622,]  281 #> [14623,]  281 #> [14624,]  281 #> [14625,]  281 #> [14626,]  281 #> [14627,]  281 #> [14628,]  281 #> [14629,]  281 #> [14630,]  281 #> [14631,]  281 #> [14632,]  281 #> [14633,]  281 #> [14634,]  281 #> [14635,]  281 #> [14636,]  281 #> [14637,]  281 #> [14638,]  281 #> [14639,]  281 #> [14640,]  281 #> [14641,]  281 #> [14642,]  281 #> [14643,]  281 #> [14644,]  281 #> [14645,]  281 #> [14646,]  281 #> [14647,]  281 #> [14648,]  281 #> [14649,]  281 #> [14650,]  281 #> [14651,]  281 #> [14652,]  281 #> [14653,]  281 #> [14654,]  281 #> [14655,]  281 #> [14656,]  281 #> [14657,]  281 #> [14658,]  281 #> [14659,]  281 #> [14660,]  281 #> [14661,]  281 #> [14662,]  281 #> [14663,]  281 #> [14664,]  281 #> [14665,]  281 #> [14666,]  281 #> [14667,]  281 #> [14668,]  281 #> [14669,]  281 #> [14670,]  281 #> [14671,]  281 #> [14672,]  281 #> [14673,]  281 #> [14674,]  281 #> [14675,]  281 #> [14676,]  281 #> [14677,]  281 #> [14678,]  281 #> [14679,]  281 #> [14680,]  281 #> [14681,]  281 #> [14682,]  281 #> [14683,]  281 #> [14684,]  281 #> [14685,]  281 #> [14686,]  281 #> [14687,]  281 #> [14688,]  281 #> [14689,]  281 #> [14690,]  281 #> [14691,]  281 #> [14692,]  281 #> [14693,]  281 #> [14694,]  281 #> [14695,]  281 #> [14696,]  281 #> [14697,]  281 #> [14698,]  281 #> [14699,]  281 #> [14700,]  281 #> [14701,]  283 #> [14702,]  283 #> [14703,]  282 #> [14704,]  282 #> [14705,]  282 #> [14706,]  282 #> [14707,]  283 #> [14708,]  283 #> [14709,]  282 #> [14710,]  282 #> [14711,]  282 #> [14712,]  283 #> [14713,]  283 #> [14714,]  282 #> [14715,]  283 #> [14716,]  283 #> [14717,]  283 #> [14718,]  283 #> [14719,]  283 #> [14720,]  283 #> [14721,]  282 #> [14722,]  283 #> [14723,]  283 #> [14724,]  282 #> [14725,]  282 #> [14726,]  283 #> [14727,]  283 #> [14728,]  282 #> [14729,]  283 #> [14730,]  283 #> [14731,]  282 #> [14732,]  282 #> [14733,]  283 #> [14734,]  282 #> [14735,]  282 #> [14736,]  283 #> [14737,]  283 #> [14738,]  283 #> [14739,]  282 #> [14740,]  282 #> [14741,]  283 #> [14742,]  282 #> [14743,]  283 #> [14744,]  283 #> [14745,]  283 #> [14746,]  283 #> [14747,]  282 #> [14748,]  282 #> [14749,]  283 #> [14750,]  283 #> [14751,]  283 #> [14752,]  282 #> [14753,]  283 #> [14754,]  282 #> [14755,]  283 #> [14756,]  283 #> [14757,]  282 #> [14758,]  283 #> [14759,]  283 #> [14760,]  283 #> [14761,]  283 #> [14762,]  282 #> [14763,]  283 #> [14764,]  283 #> [14765,]  282 #> [14766,]  283 #> [14767,]  283 #> [14768,]  283 #> [14769,]  283 #> [14770,]  282 #> [14771,]  283 #> [14772,]  282 #> [14773,]  283 #> [14774,]  282 #> [14775,]  283 #> [14776,]  282 #> [14777,]  283 #> [14778,]  283 #> [14779,]  282 #> [14780,]  283 #> [14781,]  283 #> [14782,]  282 #> [14783,]  283 #> [14784,]  283 #> [14785,]  283 #> [14786,]  283 #> [14787,]  283 #> [14788,]  283 #> [14789,]  283 #> [14790,]  283 #> [14791,]  282 #> [14792,]  283 #> [14793,]  283 #> [14794,]  283 #> [14795,]  283 #> [14796,]  283 #> [14797,]  283 #> [14798,]  282 #> [14799,]  283 #> [14800,]  283 #> [14801,]  285 #> [14802,]  285 #> [14803,]  285 #> [14804,]  285 #> [14805,]  285 #> [14806,]  285 #> [14807,]  285 #> [14808,]  285 #> [14809,]  285 #> [14810,]  285 #> [14811,]  285 #> [14812,]  285 #> [14813,]  285 #> [14814,]  285 #> [14815,]  285 #> [14816,]  285 #> [14817,]  285 #> [14818,]  285 #> [14819,]  285 #> [14820,]  285 #> [14821,]  285 #> [14822,]  285 #> [14823,]  285 #> [14824,]  285 #> [14825,]  284 #> [14826,]  285 #> [14827,]  285 #> [14828,]  285 #> [14829,]  285 #> [14830,]  285 #> [14831,]  285 #> [14832,]  285 #> [14833,]  285 #> [14834,]  285 #> [14835,]  285 #> [14836,]  285 #> [14837,]  285 #> [14838,]  285 #> [14839,]  285 #> [14840,]  285 #> [14841,]  285 #> [14842,]  285 #> [14843,]  285 #> [14844,]  285 #> [14845,]  285 #> [14846,]  285 #> [14847,]  285 #> [14848,]  285 #> [14849,]  285 #> [14850,]  285 #> [14851,]  285 #> [14852,]  285 #> [14853,]  285 #> [14854,]  285 #> [14855,]  285 #> [14856,]  284 #> [14857,]  285 #> [14858,]  285 #> [14859,]  285 #> [14860,]  285 #> [14861,]  285 #> [14862,]  285 #> [14863,]  285 #> [14864,]  285 #> [14865,]  284 #> [14866,]  285 #> [14867,]  285 #> [14868,]  285 #> [14869,]  285 #> [14870,]  285 #> [14871,]  285 #> [14872,]  285 #> [14873,]  285 #> [14874,]  285 #> [14875,]  285 #> [14876,]  285 #> [14877,]  285 #> [14878,]  285 #> [14879,]  285 #> [14880,]  284 #> [14881,]  285 #> [14882,]  285 #> [14883,]  285 #> [14884,]  285 #> [14885,]  284 #> [14886,]  285 #> [14887,]  285 #> [14888,]  285 #> [14889,]  284 #> [14890,]  285 #> [14891,]  285 #> [14892,]  285 #> [14893,]  285 #> [14894,]  285 #> [14895,]  285 #> [14896,]  285 #> [14897,]  285 #> [14898,]  285 #> [14899,]  285 #> [14900,]  285 #> [14901,]  286 #> [14902,]  287 #> [14903,]  286 #> [14904,]  286 #> [14905,]  286 #> [14906,]  286 #> [14907,]  286 #> [14908,]  286 #> [14909,]  286 #> [14910,]  287 #> [14911,]  286 #> [14912,]  287 #> [14913,]  286 #> [14914,]  286 #> [14915,]  286 #> [14916,]  286 #> [14917,]  286 #> [14918,]  286 #> [14919,]  286 #> [14920,]  286 #> [14921,]  287 #> [14922,]  286 #> [14923,]  286 #> [14924,]  286 #> [14925,]  286 #> [14926,]  286 #> [14927,]  286 #> [14928,]  286 #> [14929,]  286 #> [14930,]  286 #> [14931,]  286 #> [14932,]  286 #> [14933,]  286 #> [14934,]  286 #> [14935,]  286 #> [14936,]  286 #> [14937,]  286 #> [14938,]  286 #> [14939,]  286 #> [14940,]  286 #> [14941,]  286 #> [14942,]  286 #> [14943,]  286 #> [14944,]  286 #> [14945,]  286 #> [14946,]  286 #> [14947,]  286 #> [14948,]  286 #> [14949,]  286 #> [14950,]  286 #> [14951,]  286 #> [14952,]  286 #> [14953,]  286 #> [14954,]  286 #> [14955,]  286 #> [14956,]  286 #> [14957,]  286 #> [14958,]  286 #> [14959,]  286 #> [14960,]  286 #> [14961,]  286 #> [14962,]  286 #> [14963,]  286 #> [14964,]  286 #> [14965,]  286 #> [14966,]  286 #> [14967,]  286 #> [14968,]  286 #> [14969,]  286 #> [14970,]  286 #> [14971,]  286 #> [14972,]  286 #> [14973,]  286 #> [14974,]  286 #> [14975,]  286 #> [14976,]  286 #> [14977,]  286 #> [14978,]  286 #> [14979,]  286 #> [14980,]  286 #> [14981,]  286 #> [14982,]  286 #> [14983,]  286 #> [14984,]  286 #> [14985,]  286 #> [14986,]  287 #> [14987,]  286 #> [14988,]  286 #> [14989,]  286 #> [14990,]  286 #> [14991,]  286 #> [14992,]  286 #> [14993,]  286 #> [14994,]  286 #> [14995,]  286 #> [14996,]  286 #> [14997,]  286 #> [14998,]  286 #> [14999,]  286 #> [15000,]  286 #> [15001,]  289 #> [15002,]  289 #> [15003,]  288 #> [15004,]  289 #> [15005,]  288 #> [15006,]  289 #> [15007,]  289 #> [15008,]  289 #> [15009,]  288 #> [15010,]  288 #> [15011,]  288 #> [15012,]  289 #> [15013,]  289 #> [15014,]  288 #> [15015,]  289 #> [15016,]  289 #> [15017,]  289 #> [15018,]  289 #> [15019,]  289 #> [15020,]  289 #> [15021,]  288 #> [15022,]  289 #> [15023,]  289 #> [15024,]  288 #> [15025,]  289 #> [15026,]  289 #> [15027,]  289 #> [15028,]  288 #> [15029,]  289 #> [15030,]  289 #> [15031,]  288 #> [15032,]  288 #> [15033,]  289 #> [15034,]  288 #> [15035,]  288 #> [15036,]  289 #> [15037,]  289 #> [15038,]  289 #> [15039,]  288 #> [15040,]  288 #> [15041,]  289 #> [15042,]  289 #> [15043,]  289 #> [15044,]  289 #> [15045,]  289 #> [15046,]  289 #> [15047,]  288 #> [15048,]  288 #> [15049,]  289 #> [15050,]  289 #> [15051,]  289 #> [15052,]  288 #> [15053,]  289 #> [15054,]  289 #> [15055,]  289 #> [15056,]  289 #> [15057,]  289 #> [15058,]  289 #> [15059,]  289 #> [15060,]  289 #> [15061,]  289 #> [15062,]  288 #> [15063,]  289 #> [15064,]  289 #> [15065,]  288 #> [15066,]  289 #> [15067,]  289 #> [15068,]  289 #> [15069,]  289 #> [15070,]  288 #> [15071,]  289 #> [15072,]  288 #> [15073,]  289 #> [15074,]  288 #> [15075,]  289 #> [15076,]  288 #> [15077,]  289 #> [15078,]  289 #> [15079,]  289 #> [15080,]  289 #> [15081,]  289 #> [15082,]  288 #> [15083,]  289 #> [15084,]  289 #> [15085,]  289 #> [15086,]  289 #> [15087,]  289 #> [15088,]  289 #> [15089,]  289 #> [15090,]  289 #> [15091,]  288 #> [15092,]  289 #> [15093,]  289 #> [15094,]  289 #> [15095,]  289 #> [15096,]  289 #> [15097,]  289 #> [15098,]  288 #> [15099,]  289 #> [15100,]  289 #> [15101,]  290 #> [15102,]  290 #> [15103,]  291 #> [15104,]  290 #> [15105,]  290 #> [15106,]  291 #> [15107,]  290 #> [15108,]  290 #> [15109,]  290 #> [15110,]  290 #> [15111,]  290 #> [15112,]  290 #> [15113,]  290 #> [15114,]  290 #> [15115,]  290 #> [15116,]  290 #> [15117,]  290 #> [15118,]  290 #> [15119,]  291 #> [15120,]  290 #> [15121,]  290 #> [15122,]  290 #> [15123,]  290 #> [15124,]  290 #> [15125,]  291 #> [15126,]  290 #> [15127,]  290 #> [15128,]  290 #> [15129,]  290 #> [15130,]  290 #> [15131,]  290 #> [15132,]  290 #> [15133,]  291 #> [15134,]  291 #> [15135,]  290 #> [15136,]  290 #> [15137,]  290 #> [15138,]  290 #> [15139,]  290 #> [15140,]  290 #> [15141,]  290 #> [15142,]  290 #> [15143,]  290 #> [15144,]  290 #> [15145,]  290 #> [15146,]  290 #> [15147,]  290 #> [15148,]  290 #> [15149,]  290 #> [15150,]  290 #> [15151,]  290 #> [15152,]  290 #> [15153,]  290 #> [15154,]  290 #> [15155,]  290 #> [15156,]  290 #> [15157,]  290 #> [15158,]  290 #> [15159,]  290 #> [15160,]  291 #> [15161,]  290 #> [15162,]  290 #> [15163,]  290 #> [15164,]  290 #> [15165,]  291 #> [15166,]  290 #> [15167,]  290 #> [15168,]  290 #> [15169,]  290 #> [15170,]  291 #> [15171,]  290 #> [15172,]  290 #> [15173,]  291 #> [15174,]  290 #> [15175,]  290 #> [15176,]  290 #> [15177,]  290 #> [15178,]  290 #> [15179,]  290 #> [15180,]  290 #> [15181,]  290 #> [15182,]  290 #> [15183,]  290 #> [15184,]  290 #> [15185,]  290 #> [15186,]  290 #> [15187,]  290 #> [15188,]  290 #> [15189,]  290 #> [15190,]  290 #> [15191,]  290 #> [15192,]  290 #> [15193,]  291 #> [15194,]  290 #> [15195,]  290 #> [15196,]  290 #> [15197,]  291 #> [15198,]  291 #> [15199,]  290 #> [15200,]  290 #> [15201,]  293 #> [15202,]  293 #> [15203,]  293 #> [15204,]  293 #> [15205,]  293 #> [15206,]  293 #> [15207,]  293 #> [15208,]  293 #> [15209,]  293 #> [15210,]  293 #> [15211,]  293 #> [15212,]  293 #> [15213,]  293 #> [15214,]  293 #> [15215,]  293 #> [15216,]  293 #> [15217,]  293 #> [15218,]  293 #> [15219,]  293 #> [15220,]  293 #> [15221,]  293 #> [15222,]  293 #> [15223,]  293 #> [15224,]  293 #> [15225,]  292 #> [15226,]  293 #> [15227,]  293 #> [15228,]  293 #> [15229,]  293 #> [15230,]  293 #> [15231,]  293 #> [15232,]  293 #> [15233,]  293 #> [15234,]  293 #> [15235,]  293 #> [15236,]  293 #> [15237,]  293 #> [15238,]  293 #> [15239,]  293 #> [15240,]  293 #> [15241,]  293 #> [15242,]  293 #> [15243,]  293 #> [15244,]  293 #> [15245,]  293 #> [15246,]  293 #> [15247,]  293 #> [15248,]  293 #> [15249,]  293 #> [15250,]  293 #> [15251,]  293 #> [15252,]  293 #> [15253,]  293 #> [15254,]  293 #> [15255,]  293 #> [15256,]  292 #> [15257,]  293 #> [15258,]  293 #> [15259,]  293 #> [15260,]  293 #> [15261,]  293 #> [15262,]  293 #> [15263,]  293 #> [15264,]  293 #> [15265,]  292 #> [15266,]  293 #> [15267,]  293 #> [15268,]  293 #> [15269,]  293 #> [15270,]  293 #> [15271,]  293 #> [15272,]  293 #> [15273,]  293 #> [15274,]  293 #> [15275,]  293 #> [15276,]  293 #> [15277,]  293 #> [15278,]  293 #> [15279,]  293 #> [15280,]  292 #> [15281,]  293 #> [15282,]  293 #> [15283,]  293 #> [15284,]  293 #> [15285,]  292 #> [15286,]  293 #> [15287,]  293 #> [15288,]  293 #> [15289,]  293 #> [15290,]  293 #> [15291,]  293 #> [15292,]  293 #> [15293,]  293 #> [15294,]  293 #> [15295,]  293 #> [15296,]  293 #> [15297,]  293 #> [15298,]  293 #> [15299,]  293 #> [15300,]  293 #> [15301,]  294 #> [15302,]  295 #> [15303,]  294 #> [15304,]  294 #> [15305,]  295 #> [15306,]  294 #> [15307,]  295 #> [15308,]  294 #> [15309,]  295 #> [15310,]  295 #> [15311,]  294 #> [15312,]  295 #> [15313,]  295 #> [15314,]  294 #> [15315,]  294 #> [15316,]  294 #> [15317,]  295 #> [15318,]  295 #> [15319,]  294 #> [15320,]  295 #> [15321,]  295 #> [15322,]  295 #> [15323,]  295 #> [15324,]  295 #> [15325,]  294 #> [15326,]  294 #> [15327,]  295 #> [15328,]  294 #> [15329,]  295 #> [15330,]  295 #> [15331,]  295 #> [15332,]  295 #> [15333,]  295 #> [15334,]  294 #> [15335,]  294 #> [15336,]  295 #> [15337,]  294 #> [15338,]  294 #> [15339,]  294 #> [15340,]  295 #> [15341,]  295 #> [15342,]  294 #> [15343,]  294 #> [15344,]  295 #> [15345,]  294 #> [15346,]  294 #> [15347,]  295 #> [15348,]  295 #> [15349,]  294 #> [15350,]  295 #> [15351,]  294 #> [15352,]  294 #> [15353,]  295 #> [15354,]  295 #> [15355,]  294 #> [15356,]  294 #> [15357,]  294 #> [15358,]  295 #> [15359,]  294 #> [15360,]  295 #> [15361,]  295 #> [15362,]  294 #> [15363,]  295 #> [15364,]  294 #> [15365,]  294 #> [15366,]  294 #> [15367,]  294 #> [15368,]  294 #> [15369,]  294 #> [15370,]  295 #> [15371,]  294 #> [15372,]  294 #> [15373,]  294 #> [15374,]  295 #> [15375,]  295 #> [15376,]  295 #> [15377,]  294 #> [15378,]  295 #> [15379,]  294 #> [15380,]  295 #> [15381,]  295 #> [15382,]  294 #> [15383,]  295 #> [15384,]  295 #> [15385,]  294 #> [15386,]  295 #> [15387,]  295 #> [15388,]  295 #> [15389,]  294 #> [15390,]  295 #> [15391,]  294 #> [15392,]  295 #> [15393,]  295 #> [15394,]  294 #> [15395,]  295 #> [15396,]  294 #> [15397,]  294 #> [15398,]  294 #> [15399,]  294 #> [15400,]  294 #> [15401,]  296 #> [15402,]  297 #> [15403,]  296 #> [15404,]  297 #> [15405,]  297 #> [15406,]  296 #> [15407,]  297 #> [15408,]  297 #> [15409,]  297 #> [15410,]  297 #> [15411,]  296 #> [15412,]  297 #> [15413,]  297 #> [15414,]  296 #> [15415,]  297 #> [15416,]  296 #> [15417,]  297 #> [15418,]  297 #> [15419,]  296 #> [15420,]  297 #> [15421,]  297 #> [15422,]  297 #> [15423,]  297 #> [15424,]  297 #> [15425,]  297 #> [15426,]  296 #> [15427,]  297 #> [15428,]  296 #> [15429,]  297 #> [15430,]  297 #> [15431,]  297 #> [15432,]  297 #> [15433,]  297 #> [15434,]  296 #> [15435,]  296 #> [15436,]  297 #> [15437,]  296 #> [15438,]  296 #> [15439,]  297 #> [15440,]  297 #> [15441,]  297 #> [15442,]  296 #> [15443,]  297 #> [15444,]  297 #> [15445,]  296 #> [15446,]  297 #> [15447,]  297 #> [15448,]  297 #> [15449,]  296 #> [15450,]  297 #> [15451,]  297 #> [15452,]  296 #> [15453,]  297 #> [15454,]  297 #> [15455,]  297 #> [15456,]  296 #> [15457,]  297 #> [15458,]  297 #> [15459,]  296 #> [15460,]  297 #> [15461,]  297 #> [15462,]  297 #> [15463,]  297 #> [15464,]  296 #> [15465,]  296 #> [15466,]  297 #> [15467,]  297 #> [15468,]  296 #> [15469,]  296 #> [15470,]  297 #> [15471,]  297 #> [15472,]  296 #> [15473,]  296 #> [15474,]  297 #> [15475,]  297 #> [15476,]  297 #> [15477,]  296 #> [15478,]  297 #> [15479,]  296 #> [15480,]  297 #> [15481,]  297 #> [15482,]  297 #> [15483,]  297 #> [15484,]  297 #> [15485,]  297 #> [15486,]  297 #> [15487,]  297 #> [15488,]  297 #> [15489,]  296 #> [15490,]  297 #> [15491,]  297 #> [15492,]  297 #> [15493,]  297 #> [15494,]  296 #> [15495,]  297 #> [15496,]  296 #> [15497,]  296 #> [15498,]  297 #> [15499,]  297 #> [15500,]  296 #> [15501,]  298 #> [15502,]  298 #> [15503,]  298 #> [15504,]  298 #> [15505,]  298 #> [15506,]  298 #> [15507,]  298 #> [15508,]  298 #> [15509,]  299 #> [15510,]  298 #> [15511,]  298 #> [15512,]  298 #> [15513,]  299 #> [15514,]  298 #> [15515,]  298 #> [15516,]  298 #> [15517,]  299 #> [15518,]  299 #> [15519,]  298 #> [15520,]  298 #> [15521,]  298 #> [15522,]  298 #> [15523,]  298 #> [15524,]  298 #> [15525,]  298 #> [15526,]  298 #> [15527,]  299 #> [15528,]  298 #> [15529,]  298 #> [15530,]  298 #> [15531,]  298 #> [15532,]  298 #> [15533,]  298 #> [15534,]  298 #> [15535,]  298 #> [15536,]  298 #> [15537,]  298 #> [15538,]  298 #> [15539,]  298 #> [15540,]  298 #> [15541,]  298 #> [15542,]  299 #> [15543,]  298 #> [15544,]  298 #> [15545,]  298 #> [15546,]  298 #> [15547,]  298 #> [15548,]  298 #> [15549,]  298 #> [15550,]  298 #> [15551,]  299 #> [15552,]  298 #> [15553,]  299 #> [15554,]  298 #> [15555,]  298 #> [15556,]  298 #> [15557,]  298 #> [15558,]  298 #> [15559,]  298 #> [15560,]  298 #> [15561,]  298 #> [15562,]  298 #> [15563,]  298 #> [15564,]  298 #> [15565,]  299 #> [15566,]  299 #> [15567,]  298 #> [15568,]  298 #> [15569,]  298 #> [15570,]  298 #> [15571,]  298 #> [15572,]  298 #> [15573,]  298 #> [15574,]  298 #> [15575,]  298 #> [15576,]  298 #> [15577,]  298 #> [15578,]  298 #> [15579,]  299 #> [15580,]  298 #> [15581,]  298 #> [15582,]  299 #> [15583,]  298 #> [15584,]  299 #> [15585,]  298 #> [15586,]  298 #> [15587,]  299 #> [15588,]  298 #> [15589,]  298 #> [15590,]  298 #> [15591,]  299 #> [15592,]  298 #> [15593,]  299 #> [15594,]  299 #> [15595,]  298 #> [15596,]  298 #> [15597,]  298 #> [15598,]  298 #> [15599,]  298 #> [15600,]  298 #> [15601,]  301 #> [15602,]  300 #> [15603,]  300 #> [15604,]  300 #> [15605,]  301 #> [15606,]  300 #> [15607,]  300 #> [15608,]  300 #> [15609,]  300 #> [15610,]  301 #> [15611,]  301 #> [15612,]  301 #> [15613,]  300 #> [15614,]  301 #> [15615,]  301 #> [15616,]  300 #> [15617,]  301 #> [15618,]  301 #> [15619,]  300 #> [15620,]  300 #> [15621,]  300 #> [15622,]  301 #> [15623,]  300 #> [15624,]  300 #> [15625,]  300 #> [15626,]  301 #> [15627,]  301 #> [15628,]  300 #> [15629,]  300 #> [15630,]  300 #> [15631,]  301 #> [15632,]  301 #> [15633,]  300 #> [15634,]  300 #> [15635,]  300 #> [15636,]  300 #> [15637,]  300 #> [15638,]  301 #> [15639,]  300 #> [15640,]  300 #> [15641,]  300 #> [15642,]  300 #> [15643,]  301 #> [15644,]  300 #> [15645,]  300 #> [15646,]  300 #> [15647,]  301 #> [15648,]  300 #> [15649,]  300 #> [15650,]  300 #> [15651,]  300 #> [15652,]  301 #> [15653,]  300 #> [15654,]  300 #> [15655,]  300 #> [15656,]  300 #> [15657,]  300 #> [15658,]  301 #> [15659,]  301 #> [15660,]  300 #> [15661,]  301 #> [15662,]  300 #> [15663,]  300 #> [15664,]  300 #> [15665,]  300 #> [15666,]  301 #> [15667,]  300 #> [15668,]  300 #> [15669,]  300 #> [15670,]  301 #> [15671,]  301 #> [15672,]  300 #> [15673,]  300 #> [15674,]  300 #> [15675,]  301 #> [15676,]  300 #> [15677,]  301 #> [15678,]  300 #> [15679,]  301 #> [15680,]  300 #> [15681,]  300 #> [15682,]  300 #> [15683,]  300 #> [15684,]  300 #> [15685,]  300 #> [15686,]  300 #> [15687,]  301 #> [15688,]  300 #> [15689,]  300 #> [15690,]  301 #> [15691,]  301 #> [15692,]  301 #> [15693,]  300 #> [15694,]  300 #> [15695,]  301 #> [15696,]  300 #> [15697,]  300 #> [15698,]  300 #> [15699,]  300 #> [15700,]  301 #> [15701,]  303 #> [15702,]  303 #> [15703,]  303 #> [15704,]  303 #> [15705,]  303 #> [15706,]  302 #> [15707,]  303 #> [15708,]  303 #> [15709,]  303 #> [15710,]  303 #> [15711,]  303 #> [15712,]  303 #> [15713,]  303 #> [15714,]  303 #> [15715,]  303 #> [15716,]  303 #> [15717,]  303 #> [15718,]  303 #> [15719,]  303 #> [15720,]  302 #> [15721,]  302 #> [15722,]  303 #> [15723,]  303 #> [15724,]  303 #> [15725,]  302 #> [15726,]  303 #> [15727,]  303 #> [15728,]  303 #> [15729,]  303 #> [15730,]  303 #> [15731,]  303 #> [15732,]  303 #> [15733,]  303 #> [15734,]  303 #> [15735,]  302 #> [15736,]  303 #> [15737,]  303 #> [15738,]  303 #> [15739,]  303 #> [15740,]  303 #> [15741,]  303 #> [15742,]  303 #> [15743,]  303 #> [15744,]  302 #> [15745,]  303 #> [15746,]  303 #> [15747,]  303 #> [15748,]  303 #> [15749,]  303 #> [15750,]  303 #> [15751,]  303 #> [15752,]  303 #> [15753,]  302 #> [15754,]  303 #> [15755,]  303 #> [15756,]  302 #> [15757,]  303 #> [15758,]  303 #> [15759,]  303 #> [15760,]  303 #> [15761,]  303 #> [15762,]  303 #> [15763,]  303 #> [15764,]  303 #> [15765,]  302 #> [15766,]  303 #> [15767,]  303 #> [15768,]  303 #> [15769,]  303 #> [15770,]  303 #> [15771,]  303 #> [15772,]  303 #> [15773,]  303 #> [15774,]  302 #> [15775,]  303 #> [15776,]  303 #> [15777,]  303 #> [15778,]  303 #> [15779,]  303 #> [15780,]  302 #> [15781,]  303 #> [15782,]  303 #> [15783,]  303 #> [15784,]  303 #> [15785,]  302 #> [15786,]  302 #> [15787,]  303 #> [15788,]  303 #> [15789,]  302 #> [15790,]  303 #> [15791,]  303 #> [15792,]  303 #> [15793,]  303 #> [15794,]  303 #> [15795,]  303 #> [15796,]  303 #> [15797,]  303 #> [15798,]  303 #> [15799,]  302 #> [15800,]  303 #> [15801,]  304 #> [15802,]  304 #> [15803,]  304 #> [15804,]  304 #> [15805,]  304 #> [15806,]  304 #> [15807,]  305 #> [15808,]  304 #> [15809,]  304 #> [15810,]  304 #> [15811,]  304 #> [15812,]  304 #> [15813,]  304 #> [15814,]  304 #> [15815,]  304 #> [15816,]  304 #> [15817,]  304 #> [15818,]  304 #> [15819,]  304 #> [15820,]  305 #> [15821,]  304 #> [15822,]  304 #> [15823,]  304 #> [15824,]  305 #> [15825,]  304 #> [15826,]  304 #> [15827,]  304 #> [15828,]  305 #> [15829,]  304 #> [15830,]  304 #> [15831,]  304 #> [15832,]  304 #> [15833,]  304 #> [15834,]  304 #> [15835,]  304 #> [15836,]  304 #> [15837,]  304 #> [15838,]  304 #> [15839,]  304 #> [15840,]  304 #> [15841,]  304 #> [15842,]  304 #> [15843,]  304 #> [15844,]  304 #> [15845,]  304 #> [15846,]  304 #> [15847,]  304 #> [15848,]  304 #> [15849,]  304 #> [15850,]  305 #> [15851,]  304 #> [15852,]  305 #> [15853,]  304 #> [15854,]  304 #> [15855,]  304 #> [15856,]  304 #> [15857,]  304 #> [15858,]  304 #> [15859,]  304 #> [15860,]  304 #> [15861,]  304 #> [15862,]  304 #> [15863,]  304 #> [15864,]  304 #> [15865,]  304 #> [15866,]  304 #> [15867,]  304 #> [15868,]  304 #> [15869,]  304 #> [15870,]  304 #> [15871,]  304 #> [15872,]  304 #> [15873,]  304 #> [15874,]  304 #> [15875,]  304 #> [15876,]  305 #> [15877,]  304 #> [15878,]  304 #> [15879,]  304 #> [15880,]  304 #> [15881,]  304 #> [15882,]  304 #> [15883,]  304 #> [15884,]  304 #> [15885,]  304 #> [15886,]  305 #> [15887,]  304 #> [15888,]  304 #> [15889,]  304 #> [15890,]  304 #> [15891,]  304 #> [15892,]  304 #> [15893,]  304 #> [15894,]  304 #> [15895,]  304 #> [15896,]  304 #> [15897,]  304 #> [15898,]  304 #> [15899,]  304 #> [15900,]  304 #> [15901,]  307 #> [15902,]  307 #> [15903,]  307 #> [15904,]  307 #> [15905,]  307 #> [15906,]  307 #> [15907,]  307 #> [15908,]  307 #> [15909,]  307 #> [15910,]  307 #> [15911,]  307 #> [15912,]  306 #> [15913,]  307 #> [15914,]  307 #> [15915,]  307 #> [15916,]  307 #> [15917,]  307 #> [15918,]  307 #> [15919,]  307 #> [15920,]  307 #> [15921,]  307 #> [15922,]  307 #> [15923,]  307 #> [15924,]  307 #> [15925,]  307 #> [15926,]  307 #> [15927,]  307 #> [15928,]  307 #> [15929,]  307 #> [15930,]  307 #> [15931,]  306 #> [15932,]  307 #> [15933,]  307 #> [15934,]  307 #> [15935,]  307 #> [15936,]  307 #> [15937,]  307 #> [15938,]  307 #> [15939,]  307 #> [15940,]  307 #> [15941,]  307 #> [15942,]  307 #> [15943,]  307 #> [15944,]  307 #> [15945,]  307 #> [15946,]  307 #> [15947,]  307 #> [15948,]  307 #> [15949,]  307 #> [15950,]  307 #> [15951,]  307 #> [15952,]  306 #> [15953,]  307 #> [15954,]  307 #> [15955,]  307 #> [15956,]  307 #> [15957,]  307 #> [15958,]  307 #> [15959,]  306 #> [15960,]  306 #> [15961,]  307 #> [15962,]  307 #> [15963,]  307 #> [15964,]  307 #> [15965,]  307 #> [15966,]  307 #> [15967,]  307 #> [15968,]  307 #> [15969,]  307 #> [15970,]  307 #> [15971,]  307 #> [15972,]  307 #> [15973,]  307 #> [15974,]  307 #> [15975,]  307 #> [15976,]  307 #> [15977,]  307 #> [15978,]  307 #> [15979,]  307 #> [15980,]  307 #> [15981,]  307 #> [15982,]  307 #> [15983,]  307 #> [15984,]  307 #> [15985,]  307 #> [15986,]  307 #> [15987,]  307 #> [15988,]  307 #> [15989,]  307 #> [15990,]  307 #> [15991,]  307 #> [15992,]  307 #> [15993,]  307 #> [15994,]  307 #> [15995,]  307 #> [15996,]  307 #> [15997,]  307 #> [15998,]  307 #> [15999,]  307 #> [16000,]  307 #> [16001,]  309 #> [16002,]  309 #> [16003,]  309 #> [16004,]  308 #> [16005,]  309 #> [16006,]  309 #> [16007,]  309 #> [16008,]  308 #> [16009,]  308 #> [16010,]  309 #> [16011,]  309 #> [16012,]  309 #> [16013,]  309 #> [16014,]  309 #> [16015,]  309 #> [16016,]  309 #> [16017,]  308 #> [16018,]  309 #> [16019,]  309 #> [16020,]  309 #> [16021,]  309 #> [16022,]  309 #> [16023,]  309 #> [16024,]  309 #> [16025,]  309 #> [16026,]  309 #> [16027,]  308 #> [16028,]  309 #> [16029,]  309 #> [16030,]  309 #> [16031,]  309 #> [16032,]  309 #> [16033,]  309 #> [16034,]  309 #> [16035,]  309 #> [16036,]  309 #> [16037,]  309 #> [16038,]  309 #> [16039,]  309 #> [16040,]  309 #> [16041,]  309 #> [16042,]  309 #> [16043,]  309 #> [16044,]  308 #> [16045,]  309 #> [16046,]  309 #> [16047,]  309 #> [16048,]  309 #> [16049,]  309 #> [16050,]  309 #> [16051,]  309 #> [16052,]  308 #> [16053,]  309 #> [16054,]  309 #> [16055,]  309 #> [16056,]  309 #> [16057,]  309 #> [16058,]  309 #> [16059,]  309 #> [16060,]  309 #> [16061,]  309 #> [16062,]  309 #> [16063,]  309 #> [16064,]  309 #> [16065,]  309 #> [16066,]  308 #> [16067,]  309 #> [16068,]  309 #> [16069,]  309 #> [16070,]  309 #> [16071,]  309 #> [16072,]  309 #> [16073,]  309 #> [16074,]  309 #> [16075,]  309 #> [16076,]  309 #> [16077,]  309 #> [16078,]  309 #> [16079,]  309 #> [16080,]  309 #> [16081,]  308 #> [16082,]  308 #> [16083,]  309 #> [16084,]  309 #> [16085,]  309 #> [16086,]  309 #> [16087,]  309 #> [16088,]  309 #> [16089,]  309 #> [16090,]  308 #> [16091,]  309 #> [16092,]  308 #> [16093,]  309 #> [16094,]  309 #> [16095,]  308 #> [16096,]  309 #> [16097,]  309 #> [16098,]  309 #> [16099,]  308 #> [16100,]  309 #> [16101,]  311 #> [16102,]  310 #> [16103,]  310 #> [16104,]  311 #> [16105,]  310 #> [16106,]  310 #> [16107,]  311 #> [16108,]  311 #> [16109,]  311 #> [16110,]  311 #> [16111,]  310 #> [16112,]  310 #> [16113,]  311 #> [16114,]  310 #> [16115,]  311 #> [16116,]  311 #> [16117,]  311 #> [16118,]  311 #> [16119,]  310 #> [16120,]  310 #> [16121,]  311 #> [16122,]  310 #> [16123,]  311 #> [16124,]  310 #> [16125,]  311 #> [16126,]  310 #> [16127,]  311 #> [16128,]  311 #> [16129,]  310 #> [16130,]  310 #> [16131,]  310 #> [16132,]  310 #> [16133,]  310 #> [16134,]  310 #> [16135,]  310 #> [16136,]  310 #> [16137,]  310 #> [16138,]  310 #> [16139,]  311 #> [16140,]  310 #> [16141,]  310 #> [16142,]  310 #> [16143,]  311 #> [16144,]  310 #> [16145,]  311 #> [16146,]  311 #> [16147,]  311 #> [16148,]  310 #> [16149,]  310 #> [16150,]  310 #> [16151,]  310 #> [16152,]  310 #> [16153,]  311 #> [16154,]  310 #> [16155,]  310 #> [16156,]  311 #> [16157,]  310 #> [16158,]  310 #> [16159,]  310 #> [16160,]  310 #> [16161,]  311 #> [16162,]  310 #> [16163,]  310 #> [16164,]  311 #> [16165,]  310 #> [16166,]  310 #> [16167,]  310 #> [16168,]  310 #> [16169,]  310 #> [16170,]  311 #> [16171,]  311 #> [16172,]  311 #> [16173,]  311 #> [16174,]  311 #> [16175,]  311 #> [16176,]  311 #> [16177,]  311 #> [16178,]  310 #> [16179,]  310 #> [16180,]  310 #> [16181,]  310 #> [16182,]  311 #> [16183,]  310 #> [16184,]  311 #> [16185,]  310 #> [16186,]  310 #> [16187,]  311 #> [16188,]  311 #> [16189,]  310 #> [16190,]  311 #> [16191,]  310 #> [16192,]  310 #> [16193,]  310 #> [16194,]  311 #> [16195,]  311 #> [16196,]  310 #> [16197,]  310 #> [16198,]  310 #> [16199,]  310 #> [16200,]  311 #> [16201,]  312 #> [16202,]  312 #> [16203,]  312 #> [16204,]  312 #> [16205,]  312 #> [16206,]  312 #> [16207,]  312 #> [16208,]  313 #> [16209,]  313 #> [16210,]  312 #> [16211,]  312 #> [16212,]  312 #> [16213,]  312 #> [16214,]  312 #> [16215,]  312 #> [16216,]  312 #> [16217,]  312 #> [16218,]  312 #> [16219,]  312 #> [16220,]  312 #> [16221,]  312 #> [16222,]  312 #> [16223,]  312 #> [16224,]  312 #> [16225,]  312 #> [16226,]  313 #> [16227,]  312 #> [16228,]  312 #> [16229,]  312 #> [16230,]  312 #> [16231,]  312 #> [16232,]  312 #> [16233,]  312 #> [16234,]  312 #> [16235,]  312 #> [16236,]  312 #> [16237,]  312 #> [16238,]  312 #> [16239,]  312 #> [16240,]  312 #> [16241,]  312 #> [16242,]  312 #> [16243,]  312 #> [16244,]  312 #> [16245,]  312 #> [16246,]  312 #> [16247,]  312 #> [16248,]  312 #> [16249,]  312 #> [16250,]  312 #> [16251,]  312 #> [16252,]  312 #> [16253,]  312 #> [16254,]  312 #> [16255,]  312 #> [16256,]  312 #> [16257,]  312 #> [16258,]  312 #> [16259,]  312 #> [16260,]  312 #> [16261,]  313 #> [16262,]  312 #> [16263,]  312 #> [16264,]  312 #> [16265,]  312 #> [16266,]  312 #> [16267,]  312 #> [16268,]  312 #> [16269,]  312 #> [16270,]  312 #> [16271,]  312 #> [16272,]  312 #> [16273,]  312 #> [16274,]  312 #> [16275,]  312 #> [16276,]  313 #> [16277,]  312 #> [16278,]  312 #> [16279,]  312 #> [16280,]  312 #> [16281,]  312 #> [16282,]  312 #> [16283,]  312 #> [16284,]  312 #> [16285,]  312 #> [16286,]  312 #> [16287,]  312 #> [16288,]  312 #> [16289,]  312 #> [16290,]  312 #> [16291,]  312 #> [16292,]  312 #> [16293,]  312 #> [16294,]  312 #> [16295,]  312 #> [16296,]  312 #> [16297,]  312 #> [16298,]  312 #> [16299,]  312 #> [16300,]  312 #> [16301,]  315 #> [16302,]  314 #> [16303,]  314 #> [16304,]  314 #> [16305,]  314 #> [16306,]  315 #> [16307,]  314 #> [16308,]  315 #> [16309,]  315 #> [16310,]  314 #> [16311,]  314 #> [16312,]  315 #> [16313,]  314 #> [16314,]  314 #> [16315,]  315 #> [16316,]  314 #> [16317,]  314 #> [16318,]  314 #> [16319,]  314 #> [16320,]  315 #> [16321,]  314 #> [16322,]  314 #> [16323,]  314 #> [16324,]  314 #> [16325,]  314 #> [16326,]  315 #> [16327,]  314 #> [16328,]  314 #> [16329,]  314 #> [16330,]  314 #> [16331,]  314 #> [16332,]  314 #> [16333,]  315 #> [16334,]  314 #> [16335,]  314 #> [16336,]  314 #> [16337,]  314 #> [16338,]  314 #> [16339,]  314 #> [16340,]  314 #> [16341,]  314 #> [16342,]  314 #> [16343,]  315 #> [16344,]  314 #> [16345,]  315 #> [16346,]  315 #> [16347,]  314 #> [16348,]  314 #> [16349,]  314 #> [16350,]  315 #> [16351,]  315 #> [16352,]  314 #> [16353,]  315 #> [16354,]  314 #> [16355,]  314 #> [16356,]  315 #> [16357,]  315 #> [16358,]  315 #> [16359,]  314 #> [16360,]  314 #> [16361,]  315 #> [16362,]  314 #> [16363,]  314 #> [16364,]  315 #> [16365,]  315 #> [16366,]  315 #> [16367,]  314 #> [16368,]  315 #> [16369,]  314 #> [16370,]  314 #> [16371,]  314 #> [16372,]  315 #> [16373,]  314 #> [16374,]  314 #> [16375,]  314 #> [16376,]  315 #> [16377,]  314 #> [16378,]  315 #> [16379,]  314 #> [16380,]  314 #> [16381,]  315 #> [16382,]  314 #> [16383,]  314 #> [16384,]  314 #> [16385,]  314 #> [16386,]  314 #> [16387,]  314 #> [16388,]  314 #> [16389,]  314 #> [16390,]  314 #> [16391,]  314 #> [16392,]  315 #> [16393,]  314 #> [16394,]  315 #> [16395,]  314 #> [16396,]  315 #> [16397,]  315 #> [16398,]  314 #> [16399,]  314 #> [16400,]  314 #> [16401,]  316 #> [16402,]  316 #> [16403,]  316 #> [16404,]  316 #> [16405,]  316 #> [16406,]  316 #> [16407,]  316 #> [16408,]  316 #> [16409,]  316 #> [16410,]  316 #> [16411,]  316 #> [16412,]  316 #> [16413,]  316 #> [16414,]  316 #> [16415,]  316 #> [16416,]  316 #> [16417,]  316 #> [16418,]  316 #> [16419,]  316 #> [16420,]  316 #> [16421,]  316 #> [16422,]  316 #> [16423,]  316 #> [16424,]  316 #> [16425,]  316 #> [16426,]  316 #> [16427,]  316 #> [16428,]  316 #> [16429,]  316 #> [16430,]  316 #> [16431,]  316 #> [16432,]  316 #> [16433,]  316 #> [16434,]  316 #> [16435,]  316 #> [16436,]  316 #> [16437,]  316 #> [16438,]  316 #> [16439,]  316 #> [16440,]  316 #> [16441,]  316 #> [16442,]  316 #> [16443,]  316 #> [16444,]  316 #> [16445,]  316 #> [16446,]  316 #> [16447,]  316 #> [16448,]  316 #> [16449,]  316 #> [16450,]  316 #> [16451,]  316 #> [16452,]  316 #> [16453,]  316 #> [16454,]  316 #> [16455,]  316 #> [16456,]  316 #> [16457,]  316 #> [16458,]  316 #> [16459,]  316 #> [16460,]  316 #> [16461,]  316 #> [16462,]  316 #> [16463,]  316 #> [16464,]  316 #> [16465,]  316 #> [16466,]  316 #> [16467,]  316 #> [16468,]  316 #> [16469,]  316 #> [16470,]  316 #> [16471,]  316 #> [16472,]  316 #> [16473,]  316 #> [16474,]  316 #> [16475,]  316 #> [16476,]  316 #> [16477,]  316 #> [16478,]  316 #> [16479,]  316 #> [16480,]  316 #> [16481,]  316 #> [16482,]  316 #> [16483,]  316 #> [16484,]  316 #> [16485,]  316 #> [16486,]  316 #> [16487,]  316 #> [16488,]  316 #> [16489,]  316 #> [16490,]  316 #> [16491,]  316 #> [16492,]  316 #> [16493,]  316 #> [16494,]  316 #> [16495,]  316 #> [16496,]  316 #> [16497,]  316 #> [16498,]  316 #> [16499,]  316 #> [16500,]  316 #> [16501,]  318 #> [16502,]  317 #> [16503,]  317 #> [16504,]  317 #> [16505,]  317 #> [16506,]  318 #> [16507,]  317 #> [16508,]  318 #> [16509,]  318 #> [16510,]  317 #> [16511,]  317 #> [16512,]  318 #> [16513,]  317 #> [16514,]  318 #> [16515,]  318 #> [16516,]  317 #> [16517,]  317 #> [16518,]  317 #> [16519,]  317 #> [16520,]  318 #> [16521,]  317 #> [16522,]  317 #> [16523,]  317 #> [16524,]  317 #> [16525,]  317 #> [16526,]  318 #> [16527,]  317 #> [16528,]  317 #> [16529,]  317 #> [16530,]  317 #> [16531,]  317 #> [16532,]  317 #> [16533,]  318 #> [16534,]  317 #> [16535,]  317 #> [16536,]  317 #> [16537,]  317 #> [16538,]  317 #> [16539,]  317 #> [16540,]  317 #> [16541,]  317 #> [16542,]  317 #> [16543,]  318 #> [16544,]  317 #> [16545,]  318 #> [16546,]  318 #> [16547,]  317 #> [16548,]  317 #> [16549,]  317 #> [16550,]  318 #> [16551,]  318 #> [16552,]  317 #> [16553,]  318 #> [16554,]  317 #> [16555,]  318 #> [16556,]  318 #> [16557,]  318 #> [16558,]  318 #> [16559,]  317 #> [16560,]  318 #> [16561,]  318 #> [16562,]  317 #> [16563,]  317 #> [16564,]  318 #> [16565,]  318 #> [16566,]  318 #> [16567,]  317 #> [16568,]  318 #> [16569,]  317 #> [16570,]  317 #> [16571,]  318 #> [16572,]  318 #> [16573,]  318 #> [16574,]  318 #> [16575,]  318 #> [16576,]  318 #> [16577,]  317 #> [16578,]  318 #> [16579,]  317 #> [16580,]  317 #> [16581,]  318 #> [16582,]  317 #> [16583,]  317 #> [16584,]  317 #> [16585,]  317 #> [16586,]  317 #> [16587,]  317 #> [16588,]  317 #> [16589,]  317 #> [16590,]  317 #> [16591,]  317 #> [16592,]  318 #> [16593,]  317 #> [16594,]  318 #> [16595,]  317 #> [16596,]  318 #> [16597,]  318 #> [16598,]  317 #> [16599,]  317 #> [16600,]  317 #> [16601,]  320 #> [16602,]  320 #> [16603,]  319 #> [16604,]  320 #> [16605,]  319 #> [16606,]  319 #> [16607,]  320 #> [16608,]  320 #> [16609,]  320 #> [16610,]  320 #> [16611,]  319 #> [16612,]  319 #> [16613,]  320 #> [16614,]  319 #> [16615,]  320 #> [16616,]  320 #> [16617,]  320 #> [16618,]  320 #> [16619,]  319 #> [16620,]  319 #> [16621,]  320 #> [16622,]  319 #> [16623,]  320 #> [16624,]  319 #> [16625,]  320 #> [16626,]  319 #> [16627,]  320 #> [16628,]  320 #> [16629,]  319 #> [16630,]  319 #> [16631,]  320 #> [16632,]  319 #> [16633,]  320 #> [16634,]  319 #> [16635,]  320 #> [16636,]  319 #> [16637,]  320 #> [16638,]  320 #> [16639,]  320 #> [16640,]  319 #> [16641,]  319 #> [16642,]  319 #> [16643,]  320 #> [16644,]  320 #> [16645,]  320 #> [16646,]  320 #> [16647,]  320 #> [16648,]  319 #> [16649,]  320 #> [16650,]  320 #> [16651,]  319 #> [16652,]  320 #> [16653,]  320 #> [16654,]  319 #> [16655,]  319 #> [16656,]  320 #> [16657,]  320 #> [16658,]  320 #> [16659,]  320 #> [16660,]  319 #> [16661,]  320 #> [16662,]  319 #> [16663,]  319 #> [16664,]  320 #> [16665,]  320 #> [16666,]  319 #> [16667,]  319 #> [16668,]  319 #> [16669,]  319 #> [16670,]  320 #> [16671,]  320 #> [16672,]  320 #> [16673,]  320 #> [16674,]  320 #> [16675,]  320 #> [16676,]  320 #> [16677,]  320 #> [16678,]  319 #> [16679,]  320 #> [16680,]  319 #> [16681,]  319 #> [16682,]  320 #> [16683,]  319 #> [16684,]  320 #> [16685,]  320 #> [16686,]  320 #> [16687,]  320 #> [16688,]  320 #> [16689,]  319 #> [16690,]  320 #> [16691,]  319 #> [16692,]  320 #> [16693,]  319 #> [16694,]  320 #> [16695,]  320 #> [16696,]  320 #> [16697,]  320 #> [16698,]  319 #> [16699,]  319 #> [16700,]  320 #> [16701,]  321 #> [16702,]  321 #> [16703,]  321 #> [16704,]  321 #> [16705,]  321 #> [16706,]  321 #> [16707,]  321 #> [16708,]  321 #> [16709,]  321 #> [16710,]  321 #> [16711,]  321 #> [16712,]  321 #> [16713,]  321 #> [16714,]  321 #> [16715,]  321 #> [16716,]  321 #> [16717,]  321 #> [16718,]  321 #> [16719,]  321 #> [16720,]  321 #> [16721,]  321 #> [16722,]  321 #> [16723,]  321 #> [16724,]  321 #> [16725,]  321 #> [16726,]  321 #> [16727,]  321 #> [16728,]  321 #> [16729,]  321 #> [16730,]  321 #> [16731,]  321 #> [16732,]  321 #> [16733,]  321 #> [16734,]  321 #> [16735,]  321 #> [16736,]  321 #> [16737,]  321 #> [16738,]  321 #> [16739,]  321 #> [16740,]  321 #> [16741,]  321 #> [16742,]  321 #> [16743,]  321 #> [16744,]  321 #> [16745,]  321 #> [16746,]  321 #> [16747,]  321 #> [16748,]  321 #> [16749,]  321 #> [16750,]  321 #> [16751,]  321 #> [16752,]  321 #> [16753,]  321 #> [16754,]  321 #> [16755,]  321 #> [16756,]  321 #> [16757,]  321 #> [16758,]  321 #> [16759,]  321 #> [16760,]  321 #> [16761,]  321 #> [16762,]  321 #> [16763,]  321 #> [16764,]  321 #> [16765,]  321 #> [16766,]  321 #> [16767,]  321 #> [16768,]  321 #> [16769,]  321 #> [16770,]  321 #> [16771,]  321 #> [16772,]  321 #> [16773,]  321 #> [16774,]  321 #> [16775,]  321 #> [16776,]  321 #> [16777,]  321 #> [16778,]  321 #> [16779,]  321 #> [16780,]  321 #> [16781,]  321 #> [16782,]  321 #> [16783,]  321 #> [16784,]  321 #> [16785,]  321 #> [16786,]  321 #> [16787,]  321 #> [16788,]  321 #> [16789,]  321 #> [16790,]  321 #> [16791,]  321 #> [16792,]  321 #> [16793,]  321 #> [16794,]  321 #> [16795,]  321 #> [16796,]  321 #> [16797,]  321 #> [16798,]  321 #> [16799,]  321 #> [16800,]  321 #> [16801,]  323 #> [16802,]  322 #> [16803,]  323 #> [16804,]  323 #> [16805,]  323 #> [16806,]  322 #> [16807,]  323 #> [16808,]  323 #> [16809,]  323 #> [16810,]  323 #> [16811,]  322 #> [16812,]  322 #> [16813,]  323 #> [16814,]  323 #> [16815,]  322 #> [16816,]  323 #> [16817,]  322 #> [16818,]  323 #> [16819,]  322 #> [16820,]  323 #> [16821,]  323 #> [16822,]  323 #> [16823,]  322 #> [16824,]  323 #> [16825,]  323 #> [16826,]  322 #> [16827,]  323 #> [16828,]  323 #> [16829,]  322 #> [16830,]  322 #> [16831,]  322 #> [16832,]  323 #> [16833,]  323 #> [16834,]  322 #> [16835,]  322 #> [16836,]  323 #> [16837,]  322 #> [16838,]  323 #> [16839,]  323 #> [16840,]  323 #> [16841,]  323 #> [16842,]  322 #> [16843,]  322 #> [16844,]  322 #> [16845,]  323 #> [16846,]  322 #> [16847,]  322 #> [16848,]  322 #> [16849,]  323 #> [16850,]  323 #> [16851,]  323 #> [16852,]  323 #> [16853,]  323 #> [16854,]  323 #> [16855,]  323 #> [16856,]  322 #> [16857,]  323 #> [16858,]  323 #> [16859,]  323 #> [16860,]  322 #> [16861,]  322 #> [16862,]  323 #> [16863,]  322 #> [16864,]  322 #> [16865,]  322 #> [16866,]  322 #> [16867,]  323 #> [16868,]  322 #> [16869,]  323 #> [16870,]  322 #> [16871,]  323 #> [16872,]  323 #> [16873,]  323 #> [16874,]  323 #> [16875,]  322 #> [16876,]  323 #> [16877,]  323 #> [16878,]  322 #> [16879,]  322 #> [16880,]  323 #> [16881,]  322 #> [16882,]  323 #> [16883,]  323 #> [16884,]  323 #> [16885,]  323 #> [16886,]  323 #> [16887,]  323 #> [16888,]  323 #> [16889,]  323 #> [16890,]  323 #> [16891,]  323 #> [16892,]  322 #> [16893,]  323 #> [16894,]  322 #> [16895,]  322 #> [16896,]  322 #> [16897,]  323 #> [16898,]  323 #> [16899,]  323 #> [16900,]  322 #> [16901,]  325 #> [16902,]  325 #> [16903,]  324 #> [16904,]  325 #> [16905,]  325 #> [16906,]  325 #> [16907,]  325 #> [16908,]  325 #> [16909,]  325 #> [16910,]  325 #> [16911,]  324 #> [16912,]  324 #> [16913,]  325 #> [16914,]  324 #> [16915,]  325 #> [16916,]  325 #> [16917,]  325 #> [16918,]  325 #> [16919,]  324 #> [16920,]  324 #> [16921,]  325 #> [16922,]  324 #> [16923,]  325 #> [16924,]  324 #> [16925,]  325 #> [16926,]  324 #> [16927,]  325 #> [16928,]  325 #> [16929,]  324 #> [16930,]  324 #> [16931,]  325 #> [16932,]  324 #> [16933,]  325 #> [16934,]  324 #> [16935,]  325 #> [16936,]  324 #> [16937,]  325 #> [16938,]  325 #> [16939,]  325 #> [16940,]  324 #> [16941,]  324 #> [16942,]  324 #> [16943,]  325 #> [16944,]  325 #> [16945,]  325 #> [16946,]  325 #> [16947,]  325 #> [16948,]  324 #> [16949,]  325 #> [16950,]  325 #> [16951,]  324 #> [16952,]  325 #> [16953,]  325 #> [16954,]  324 #> [16955,]  325 #> [16956,]  325 #> [16957,]  325 #> [16958,]  325 #> [16959,]  325 #> [16960,]  324 #> [16961,]  325 #> [16962,]  324 #> [16963,]  324 #> [16964,]  325 #> [16965,]  325 #> [16966,]  324 #> [16967,]  324 #> [16968,]  324 #> [16969,]  324 #> [16970,]  325 #> [16971,]  325 #> [16972,]  325 #> [16973,]  325 #> [16974,]  325 #> [16975,]  325 #> [16976,]  325 #> [16977,]  325 #> [16978,]  324 #> [16979,]  325 #> [16980,]  324 #> [16981,]  324 #> [16982,]  325 #> [16983,]  324 #> [16984,]  325 #> [16985,]  325 #> [16986,]  325 #> [16987,]  325 #> [16988,]  325 #> [16989,]  324 #> [16990,]  325 #> [16991,]  324 #> [16992,]  325 #> [16993,]  325 #> [16994,]  325 #> [16995,]  325 #> [16996,]  325 #> [16997,]  325 #> [16998,]  325 #> [16999,]  325 #> [17000,]  325 #> [17001,]  327 #> [17002,]  327 #> [17003,]  326 #> [17004,]  327 #> [17005,]  327 #> [17006,]  327 #> [17007,]  326 #> [17008,]  326 #> [17009,]  327 #> [17010,]  327 #> [17011,]  327 #> [17012,]  327 #> [17013,]  326 #> [17014,]  327 #> [17015,]  327 #> [17016,]  326 #> [17017,]  327 #> [17018,]  327 #> [17019,]  327 #> [17020,]  326 #> [17021,]  327 #> [17022,]  326 #> [17023,]  327 #> [17024,]  326 #> [17025,]  326 #> [17026,]  327 #> [17027,]  327 #> [17028,]  327 #> [17029,]  327 #> [17030,]  327 #> [17031,]  327 #> [17032,]  327 #> [17033,]  327 #> [17034,]  327 #> [17035,]  327 #> [17036,]  327 #> [17037,]  327 #> [17038,]  327 #> [17039,]  326 #> [17040,]  326 #> [17041,]  327 #> [17042,]  327 #> [17043,]  327 #> [17044,]  326 #> [17045,]  327 #> [17046,]  326 #> [17047,]  327 #> [17048,]  327 #> [17049,]  326 #> [17050,]  326 #> [17051,]  327 #> [17052,]  327 #> [17053,]  326 #> [17054,]  327 #> [17055,]  326 #> [17056,]  326 #> [17057,]  327 #> [17058,]  327 #> [17059,]  326 #> [17060,]  327 #> [17061,]  327 #> [17062,]  327 #> [17063,]  326 #> [17064,]  327 #> [17065,]  326 #> [17066,]  326 #> [17067,]  327 #> [17068,]  327 #> [17069,]  327 #> [17070,]  326 #> [17071,]  327 #> [17072,]  326 #> [17073,]  327 #> [17074,]  327 #> [17075,]  327 #> [17076,]  327 #> [17077,]  327 #> [17078,]  327 #> [17079,]  327 #> [17080,]  327 #> [17081,]  327 #> [17082,]  327 #> [17083,]  327 #> [17084,]  326 #> [17085,]  327 #> [17086,]  326 #> [17087,]  327 #> [17088,]  327 #> [17089,]  326 #> [17090,]  326 #> [17091,]  327 #> [17092,]  327 #> [17093,]  327 #> [17094,]  327 #> [17095,]  327 #> [17096,]  327 #> [17097,]  327 #> [17098,]  326 #> [17099,]  327 #> [17100,]  326 #> [17101,]  328 #> [17102,]  328 #> [17103,]  328 #> [17104,]  328 #> [17105,]  328 #> [17106,]  328 #> [17107,]  328 #> [17108,]  328 #> [17109,]  328 #> [17110,]  328 #> [17111,]  328 #> [17112,]  328 #> [17113,]  329 #> [17114,]  328 #> [17115,]  328 #> [17116,]  328 #> [17117,]  328 #> [17118,]  329 #> [17119,]  328 #> [17120,]  328 #> [17121,]  328 #> [17122,]  328 #> [17123,]  328 #> [17124,]  328 #> [17125,]  328 #> [17126,]  328 #> [17127,]  328 #> [17128,]  328 #> [17129,]  328 #> [17130,]  328 #> [17131,]  328 #> [17132,]  328 #> [17133,]  328 #> [17134,]  328 #> [17135,]  328 #> [17136,]  328 #> [17137,]  328 #> [17138,]  328 #> [17139,]  328 #> [17140,]  328 #> [17141,]  328 #> [17142,]  329 #> [17143,]  328 #> [17144,]  328 #> [17145,]  328 #> [17146,]  328 #> [17147,]  328 #> [17148,]  328 #> [17149,]  328 #> [17150,]  328 #> [17151,]  329 #> [17152,]  328 #> [17153,]  329 #> [17154,]  328 #> [17155,]  328 #> [17156,]  328 #> [17157,]  328 #> [17158,]  328 #> [17159,]  328 #> [17160,]  328 #> [17161,]  328 #> [17162,]  328 #> [17163,]  328 #> [17164,]  328 #> [17165,]  329 #> [17166,]  328 #> [17167,]  328 #> [17168,]  328 #> [17169,]  328 #> [17170,]  328 #> [17171,]  328 #> [17172,]  328 #> [17173,]  328 #> [17174,]  328 #> [17175,]  328 #> [17176,]  328 #> [17177,]  328 #> [17178,]  328 #> [17179,]  329 #> [17180,]  328 #> [17181,]  328 #> [17182,]  328 #> [17183,]  328 #> [17184,]  329 #> [17185,]  328 #> [17186,]  328 #> [17187,]  328 #> [17188,]  328 #> [17189,]  328 #> [17190,]  328 #> [17191,]  329 #> [17192,]  328 #> [17193,]  329 #> [17194,]  329 #> [17195,]  328 #> [17196,]  328 #> [17197,]  328 #> [17198,]  328 #> [17199,]  328 #> [17200,]  328 #> [17201,]  331 #> [17202,]  330 #> [17203,]  331 #> [17204,]  331 #> [17205,]  331 #> [17206,]  330 #> [17207,]  331 #> [17208,]  331 #> [17209,]  331 #> [17210,]  331 #> [17211,]  330 #> [17212,]  330 #> [17213,]  331 #> [17214,]  331 #> [17215,]  330 #> [17216,]  331 #> [17217,]  330 #> [17218,]  330 #> [17219,]  330 #> [17220,]  331 #> [17221,]  330 #> [17222,]  331 #> [17223,]  330 #> [17224,]  331 #> [17225,]  331 #> [17226,]  330 #> [17227,]  331 #> [17228,]  331 #> [17229,]  330 #> [17230,]  330 #> [17231,]  330 #> [17232,]  330 #> [17233,]  331 #> [17234,]  330 #> [17235,]  330 #> [17236,]  331 #> [17237,]  330 #> [17238,]  331 #> [17239,]  331 #> [17240,]  331 #> [17241,]  331 #> [17242,]  330 #> [17243,]  330 #> [17244,]  330 #> [17245,]  331 #> [17246,]  330 #> [17247,]  330 #> [17248,]  330 #> [17249,]  331 #> [17250,]  331 #> [17251,]  330 #> [17252,]  331 #> [17253,]  331 #> [17254,]  331 #> [17255,]  331 #> [17256,]  330 #> [17257,]  331 #> [17258,]  331 #> [17259,]  331 #> [17260,]  330 #> [17261,]  330 #> [17262,]  330 #> [17263,]  330 #> [17264,]  330 #> [17265,]  330 #> [17266,]  330 #> [17267,]  331 #> [17268,]  330 #> [17269,]  330 #> [17270,]  330 #> [17271,]  331 #> [17272,]  331 #> [17273,]  331 #> [17274,]  331 #> [17275,]  330 #> [17276,]  331 #> [17277,]  331 #> [17278,]  330 #> [17279,]  330 #> [17280,]  331 #> [17281,]  330 #> [17282,]  330 #> [17283,]  331 #> [17284,]  331 #> [17285,]  331 #> [17286,]  331 #> [17287,]  331 #> [17288,]  331 #> [17289,]  330 #> [17290,]  331 #> [17291,]  331 #> [17292,]  330 #> [17293,]  330 #> [17294,]  330 #> [17295,]  330 #> [17296,]  330 #> [17297,]  330 #> [17298,]  331 #> [17299,]  331 #> [17300,]  330 #> [17301,]  333 #> [17302,]  333 #> [17303,]  333 #> [17304,]  332 #> [17305,]  333 #> [17306,]  333 #> [17307,]  333 #> [17308,]  333 #> [17309,]  332 #> [17310,]  333 #> [17311,]  333 #> [17312,]  333 #> [17313,]  333 #> [17314,]  333 #> [17315,]  333 #> [17316,]  333 #> [17317,]  332 #> [17318,]  333 #> [17319,]  333 #> [17320,]  333 #> [17321,]  333 #> [17322,]  333 #> [17323,]  333 #> [17324,]  333 #> [17325,]  333 #> [17326,]  333 #> [17327,]  333 #> [17328,]  333 #> [17329,]  333 #> [17330,]  333 #> [17331,]  333 #> [17332,]  333 #> [17333,]  333 #> [17334,]  333 #> [17335,]  333 #> [17336,]  333 #> [17337,]  333 #> [17338,]  333 #> [17339,]  333 #> [17340,]  333 #> [17341,]  333 #> [17342,]  333 #> [17343,]  333 #> [17344,]  333 #> [17345,]  333 #> [17346,]  333 #> [17347,]  333 #> [17348,]  333 #> [17349,]  333 #> [17350,]  333 #> [17351,]  333 #> [17352,]  332 #> [17353,]  333 #> [17354,]  333 #> [17355,]  333 #> [17356,]  333 #> [17357,]  333 #> [17358,]  333 #> [17359,]  333 #> [17360,]  333 #> [17361,]  333 #> [17362,]  333 #> [17363,]  333 #> [17364,]  333 #> [17365,]  333 #> [17366,]  333 #> [17367,]  333 #> [17368,]  333 #> [17369,]  333 #> [17370,]  333 #> [17371,]  333 #> [17372,]  333 #> [17373,]  333 #> [17374,]  333 #> [17375,]  333 #> [17376,]  333 #> [17377,]  333 #> [17378,]  333 #> [17379,]  333 #> [17380,]  333 #> [17381,]  332 #> [17382,]  332 #> [17383,]  333 #> [17384,]  333 #> [17385,]  333 #> [17386,]  333 #> [17387,]  333 #> [17388,]  333 #> [17389,]  333 #> [17390,]  333 #> [17391,]  333 #> [17392,]  333 #> [17393,]  333 #> [17394,]  333 #> [17395,]  332 #> [17396,]  333 #> [17397,]  333 #> [17398,]  333 #> [17399,]  333 #> [17400,]  333 #> [17401,]  335 #> [17402,]  335 #> [17403,]  334 #> [17404,]  335 #> [17405,]  335 #> [17406,]  335 #> [17407,]  334 #> [17408,]  335 #> [17409,]  335 #> [17410,]  335 #> [17411,]  335 #> [17412,]  334 #> [17413,]  335 #> [17414,]  335 #> [17415,]  335 #> [17416,]  335 #> [17417,]  335 #> [17418,]  335 #> [17419,]  335 #> [17420,]  335 #> [17421,]  335 #> [17422,]  335 #> [17423,]  335 #> [17424,]  335 #> [17425,]  335 #> [17426,]  335 #> [17427,]  335 #> [17428,]  335 #> [17429,]  335 #> [17430,]  335 #> [17431,]  334 #> [17432,]  335 #> [17433,]  335 #> [17434,]  335 #> [17435,]  335 #> [17436,]  335 #> [17437,]  335 #> [17438,]  335 #> [17439,]  335 #> [17440,]  335 #> [17441,]  335 #> [17442,]  335 #> [17443,]  335 #> [17444,]  335 #> [17445,]  335 #> [17446,]  335 #> [17447,]  335 #> [17448,]  335 #> [17449,]  335 #> [17450,]  335 #> [17451,]  335 #> [17452,]  334 #> [17453,]  335 #> [17454,]  335 #> [17455,]  335 #> [17456,]  335 #> [17457,]  335 #> [17458,]  335 #> [17459,]  334 #> [17460,]  334 #> [17461,]  335 #> [17462,]  335 #> [17463,]  335 #> [17464,]  335 #> [17465,]  335 #> [17466,]  335 #> [17467,]  335 #> [17468,]  335 #> [17469,]  335 #> [17470,]  335 #> [17471,]  335 #> [17472,]  335 #> [17473,]  335 #> [17474,]  335 #> [17475,]  335 #> [17476,]  335 #> [17477,]  335 #> [17478,]  335 #> [17479,]  335 #> [17480,]  335 #> [17481,]  335 #> [17482,]  335 #> [17483,]  335 #> [17484,]  335 #> [17485,]  335 #> [17486,]  335 #> [17487,]  335 #> [17488,]  335 #> [17489,]  335 #> [17490,]  335 #> [17491,]  335 #> [17492,]  335 #> [17493,]  335 #> [17494,]  335 #> [17495,]  335 #> [17496,]  335 #> [17497,]  334 #> [17498,]  335 #> [17499,]  335 #> [17500,]  335 #> [17501,]  337 #> [17502,]  337 #> [17503,]  336 #> [17504,]  336 #> [17505,]  336 #> [17506,]  336 #> [17507,]  337 #> [17508,]  337 #> [17509,]  336 #> [17510,]  336 #> [17511,]  336 #> [17512,]  337 #> [17513,]  337 #> [17514,]  336 #> [17515,]  337 #> [17516,]  337 #> [17517,]  337 #> [17518,]  337 #> [17519,]  337 #> [17520,]  337 #> [17521,]  336 #> [17522,]  337 #> [17523,]  337 #> [17524,]  336 #> [17525,]  336 #> [17526,]  337 #> [17527,]  337 #> [17528,]  336 #> [17529,]  337 #> [17530,]  337 #> [17531,]  336 #> [17532,]  336 #> [17533,]  337 #> [17534,]  336 #> [17535,]  336 #> [17536,]  337 #> [17537,]  337 #> [17538,]  337 #> [17539,]  336 #> [17540,]  336 #> [17541,]  337 #> [17542,]  336 #> [17543,]  337 #> [17544,]  337 #> [17545,]  337 #> [17546,]  337 #> [17547,]  336 #> [17548,]  336 #> [17549,]  337 #> [17550,]  337 #> [17551,]  337 #> [17552,]  336 #> [17553,]  337 #> [17554,]  336 #> [17555,]  337 #> [17556,]  337 #> [17557,]  336 #> [17558,]  337 #> [17559,]  337 #> [17560,]  337 #> [17561,]  337 #> [17562,]  336 #> [17563,]  337 #> [17564,]  337 #> [17565,]  336 #> [17566,]  337 #> [17567,]  336 #> [17568,]  337 #> [17569,]  337 #> [17570,]  336 #> [17571,]  337 #> [17572,]  336 #> [17573,]  336 #> [17574,]  336 #> [17575,]  337 #> [17576,]  336 #> [17577,]  337 #> [17578,]  337 #> [17579,]  336 #> [17580,]  337 #> [17581,]  337 #> [17582,]  336 #> [17583,]  337 #> [17584,]  337 #> [17585,]  337 #> [17586,]  336 #> [17587,]  337 #> [17588,]  336 #> [17589,]  336 #> [17590,]  337 #> [17591,]  336 #> [17592,]  336 #> [17593,]  337 #> [17594,]  336 #> [17595,]  337 #> [17596,]  337 #> [17597,]  337 #> [17598,]  336 #> [17599,]  336 #> [17600,]  337 #> [17601,]  338 #> [17602,]  338 #> [17603,]  338 #> [17604,]  339 #> [17605,]  338 #> [17606,]  338 #> [17607,]  339 #> [17608,]  338 #> [17609,]  338 #> [17610,]  339 #> [17611,]  338 #> [17612,]  338 #> [17613,]  338 #> [17614,]  338 #> [17615,]  339 #> [17616,]  339 #> [17617,]  339 #> [17618,]  339 #> [17619,]  338 #> [17620,]  338 #> [17621,]  339 #> [17622,]  338 #> [17623,]  339 #> [17624,]  338 #> [17625,]  339 #> [17626,]  338 #> [17627,]  339 #> [17628,]  339 #> [17629,]  338 #> [17630,]  338 #> [17631,]  338 #> [17632,]  338 #> [17633,]  338 #> [17634,]  338 #> [17635,]  338 #> [17636,]  338 #> [17637,]  338 #> [17638,]  338 #> [17639,]  339 #> [17640,]  338 #> [17641,]  338 #> [17642,]  338 #> [17643,]  339 #> [17644,]  338 #> [17645,]  339 #> [17646,]  339 #> [17647,]  339 #> [17648,]  338 #> [17649,]  338 #> [17650,]  338 #> [17651,]  338 #> [17652,]  338 #> [17653,]  339 #> [17654,]  338 #> [17655,]  338 #> [17656,]  339 #> [17657,]  338 #> [17658,]  338 #> [17659,]  338 #> [17660,]  338 #> [17661,]  339 #> [17662,]  338 #> [17663,]  338 #> [17664,]  339 #> [17665,]  338 #> [17666,]  338 #> [17667,]  338 #> [17668,]  338 #> [17669,]  338 #> [17670,]  338 #> [17671,]  339 #> [17672,]  339 #> [17673,]  339 #> [17674,]  339 #> [17675,]  339 #> [17676,]  339 #> [17677,]  339 #> [17678,]  338 #> [17679,]  338 #> [17680,]  338 #> [17681,]  338 #> [17682,]  338 #> [17683,]  338 #> [17684,]  339 #> [17685,]  338 #> [17686,]  338 #> [17687,]  338 #> [17688,]  339 #> [17689,]  338 #> [17690,]  338 #> [17691,]  338 #> [17692,]  338 #> [17693,]  338 #> [17694,]  339 #> [17695,]  339 #> [17696,]  338 #> [17697,]  338 #> [17698,]  338 #> [17699,]  338 #> [17700,]  339 #> [17701,]  341 #> [17702,]  341 #> [17703,]  341 #> [17704,]  340 #> [17705,]  341 #> [17706,]  341 #> [17707,]  341 #> [17708,]  340 #> [17709,]  340 #> [17710,]  340 #> [17711,]  341 #> [17712,]  341 #> [17713,]  341 #> [17714,]  341 #> [17715,]  341 #> [17716,]  341 #> [17717,]  341 #> [17718,]  341 #> [17719,]  341 #> [17720,]  341 #> [17721,]  341 #> [17722,]  341 #> [17723,]  341 #> [17724,]  341 #> [17725,]  341 #> [17726,]  341 #> [17727,]  341 #> [17728,]  341 #> [17729,]  341 #> [17730,]  341 #> [17731,]  341 #> [17732,]  341 #> [17733,]  341 #> [17734,]  341 #> [17735,]  341 #> [17736,]  341 #> [17737,]  341 #> [17738,]  341 #> [17739,]  341 #> [17740,]  341 #> [17741,]  341 #> [17742,]  341 #> [17743,]  340 #> [17744,]  341 #> [17745,]  341 #> [17746,]  341 #> [17747,]  341 #> [17748,]  341 #> [17749,]  341 #> [17750,]  341 #> [17751,]  340 #> [17752,]  341 #> [17753,]  341 #> [17754,]  341 #> [17755,]  341 #> [17756,]  341 #> [17757,]  341 #> [17758,]  341 #> [17759,]  341 #> [17760,]  340 #> [17761,]  341 #> [17762,]  341 #> [17763,]  341 #> [17764,]  341 #> [17765,]  341 #> [17766,]  341 #> [17767,]  341 #> [17768,]  341 #> [17769,]  341 #> [17770,]  341 #> [17771,]  341 #> [17772,]  341 #> [17773,]  341 #> [17774,]  341 #> [17775,]  341 #> [17776,]  341 #> [17777,]  341 #> [17778,]  341 #> [17779,]  341 #> [17780,]  341 #> [17781,]  341 #> [17782,]  341 #> [17783,]  341 #> [17784,]  341 #> [17785,]  340 #> [17786,]  341 #> [17787,]  341 #> [17788,]  341 #> [17789,]  341 #> [17790,]  341 #> [17791,]  340 #> [17792,]  341 #> [17793,]  341 #> [17794,]  341 #> [17795,]  340 #> [17796,]  341 #> [17797,]  341 #> [17798,]  341 #> [17799,]  341 #> [17800,]  341 #> [17801,]  343 #> [17802,]  342 #> [17803,]  342 #> [17804,]  343 #> [17805,]  342 #> [17806,]  342 #> [17807,]  343 #> [17808,]  343 #> [17809,]  343 #> [17810,]  343 #> [17811,]  342 #> [17812,]  342 #> [17813,]  343 #> [17814,]  342 #> [17815,]  343 #> [17816,]  343 #> [17817,]  343 #> [17818,]  343 #> [17819,]  342 #> [17820,]  342 #> [17821,]  343 #> [17822,]  342 #> [17823,]  343 #> [17824,]  342 #> [17825,]  343 #> [17826,]  342 #> [17827,]  343 #> [17828,]  343 #> [17829,]  342 #> [17830,]  342 #> [17831,]  342 #> [17832,]  342 #> [17833,]  342 #> [17834,]  342 #> [17835,]  342 #> [17836,]  342 #> [17837,]  342 #> [17838,]  342 #> [17839,]  343 #> [17840,]  342 #> [17841,]  342 #> [17842,]  342 #> [17843,]  343 #> [17844,]  342 #> [17845,]  343 #> [17846,]  343 #> [17847,]  343 #> [17848,]  342 #> [17849,]  342 #> [17850,]  342 #> [17851,]  342 #> [17852,]  342 #> [17853,]  343 #> [17854,]  342 #> [17855,]  342 #> [17856,]  343 #> [17857,]  342 #> [17858,]  342 #> [17859,]  342 #> [17860,]  342 #> [17861,]  343 #> [17862,]  342 #> [17863,]  342 #> [17864,]  343 #> [17865,]  342 #> [17866,]  342 #> [17867,]  342 #> [17868,]  342 #> [17869,]  342 #> [17870,]  343 #> [17871,]  343 #> [17872,]  343 #> [17873,]  343 #> [17874,]  343 #> [17875,]  343 #> [17876,]  343 #> [17877,]  343 #> [17878,]  342 #> [17879,]  342 #> [17880,]  342 #> [17881,]  342 #> [17882,]  343 #> [17883,]  342 #> [17884,]  343 #> [17885,]  342 #> [17886,]  342 #> [17887,]  343 #> [17888,]  343 #> [17889,]  342 #> [17890,]  343 #> [17891,]  342 #> [17892,]  342 #> [17893,]  342 #> [17894,]  343 #> [17895,]  343 #> [17896,]  343 #> [17897,]  342 #> [17898,]  342 #> [17899,]  342 #> [17900,]  343 #> [17901,]  344 #> [17902,]  344 #> [17903,]  344 #> [17904,]  345 #> [17905,]  344 #> [17906,]  344 #> [17907,]  344 #> [17908,]  344 #> [17909,]  344 #> [17910,]  344 #> [17911,]  345 #> [17912,]  345 #> [17913,]  344 #> [17914,]  345 #> [17915,]  345 #> [17916,]  344 #> [17917,]  344 #> [17918,]  344 #> [17919,]  345 #> [17920,]  344 #> [17921,]  345 #> [17922,]  344 #> [17923,]  344 #> [17924,]  344 #> [17925,]  344 #> [17926,]  344 #> [17927,]  345 #> [17928,]  344 #> [17929,]  344 #> [17930,]  344 #> [17931,]  344 #> [17932,]  344 #> [17933,]  344 #> [17934,]  344 #> [17935,]  344 #> [17936,]  344 #> [17937,]  344 #> [17938,]  345 #> [17939,]  344 #> [17940,]  344 #> [17941,]  345 #> [17942,]  345 #> [17943,]  344 #> [17944,]  344 #> [17945,]  344 #> [17946,]  344 #> [17947,]  344 #> [17948,]  345 #> [17949,]  344 #> [17950,]  344 #> [17951,]  344 #> [17952,]  344 #> [17953,]  344 #> [17954,]  344 #> [17955,]  344 #> [17956,]  344 #> [17957,]  344 #> [17958,]  345 #> [17959,]  344 #> [17960,]  344 #> [17961,]  345 #> [17962,]  344 #> [17963,]  344 #> [17964,]  344 #> [17965,]  344 #> [17966,]  344 #> [17967,]  344 #> [17968,]  345 #> [17969,]  345 #> [17970,]  344 #> [17971,]  344 #> [17972,]  344 #> [17973,]  344 #> [17974,]  345 #> [17975,]  345 #> [17976,]  344 #> [17977,]  344 #> [17978,]  344 #> [17979,]  344 #> [17980,]  344 #> [17981,]  344 #> [17982,]  345 #> [17983,]  344 #> [17984,]  344 #> [17985,]  344 #> [17986,]  344 #> [17987,]  344 #> [17988,]  344 #> [17989,]  344 #> [17990,]  344 #> [17991,]  344 #> [17992,]  345 #> [17993,]  345 #> [17994,]  344 #> [17995,]  344 #> [17996,]  345 #> [17997,]  345 #> [17998,]  344 #> [17999,]  344 #> [18000,]  344 #> [18001,]  347 #> [18002,]  347 #> [18003,]  346 #> [18004,]  346 #> [18005,]  346 #> [18006,]  347 #> [18007,]  346 #> [18008,]  346 #> [18009,]  346 #> [18010,]  346 #> [18011,]  346 #> [18012,]  346 #> [18013,]  347 #> [18014,]  347 #> [18015,]  347 #> [18016,]  347 #> [18017,]  347 #> [18018,]  346 #> [18019,]  346 #> [18020,]  346 #> [18021,]  347 #> [18022,]  346 #> [18023,]  346 #> [18024,]  346 #> [18025,]  346 #> [18026,]  347 #> [18027,]  346 #> [18028,]  346 #> [18029,]  347 #> [18030,]  346 #> [18031,]  346 #> [18032,]  346 #> [18033,]  347 #> [18034,]  346 #> [18035,]  347 #> [18036,]  346 #> [18037,]  346 #> [18038,]  346 #> [18039,]  346 #> [18040,]  346 #> [18041,]  347 #> [18042,]  346 #> [18043,]  346 #> [18044,]  347 #> [18045,]  346 #> [18046,]  346 #> [18047,]  346 #> [18048,]  346 #> [18049,]  346 #> [18050,]  347 #> [18051,]  346 #> [18052,]  346 #> [18053,]  346 #> [18054,]  346 #> [18055,]  346 #> [18056,]  346 #> [18057,]  346 #> [18058,]  346 #> [18059,]  347 #> [18060,]  346 #> [18061,]  347 #> [18062,]  346 #> [18063,]  346 #> [18064,]  346 #> [18065,]  346 #> [18066,]  346 #> [18067,]  346 #> [18068,]  347 #> [18069,]  346 #> [18070,]  347 #> [18071,]  347 #> [18072,]  346 #> [18073,]  347 #> [18074,]  346 #> [18075,]  346 #> [18076,]  347 #> [18077,]  347 #> [18078,]  346 #> [18079,]  347 #> [18080,]  346 #> [18081,]  347 #> [18082,]  346 #> [18083,]  347 #> [18084,]  346 #> [18085,]  346 #> [18086,]  347 #> [18087,]  346 #> [18088,]  346 #> [18089,]  346 #> [18090,]  346 #> [18091,]  346 #> [18092,]  346 #> [18093,]  347 #> [18094,]  347 #> [18095,]  346 #> [18096,]  347 #> [18097,]  346 #> [18098,]  346 #> [18099,]  347 #> [18100,]  346 #> [18101,]  349 #> [18102,]  349 #> [18103,]  349 #> [18104,]  348 #> [18105,]  349 #> [18106,]  349 #> [18107,]  349 #> [18108,]  348 #> [18109,]  348 #> [18110,]  348 #> [18111,]  349 #> [18112,]  349 #> [18113,]  349 #> [18114,]  349 #> [18115,]  349 #> [18116,]  349 #> [18117,]  349 #> [18118,]  349 #> [18119,]  349 #> [18120,]  349 #> [18121,]  349 #> [18122,]  349 #> [18123,]  349 #> [18124,]  349 #> [18125,]  349 #> [18126,]  349 #> [18127,]  349 #> [18128,]  349 #> [18129,]  349 #> [18130,]  349 #> [18131,]  349 #> [18132,]  349 #> [18133,]  349 #> [18134,]  349 #> [18135,]  349 #> [18136,]  349 #> [18137,]  349 #> [18138,]  349 #> [18139,]  349 #> [18140,]  349 #> [18141,]  349 #> [18142,]  349 #> [18143,]  348 #> [18144,]  349 #> [18145,]  349 #> [18146,]  349 #> [18147,]  349 #> [18148,]  349 #> [18149,]  349 #> [18150,]  349 #> [18151,]  348 #> [18152,]  349 #> [18153,]  349 #> [18154,]  349 #> [18155,]  349 #> [18156,]  349 #> [18157,]  349 #> [18158,]  349 #> [18159,]  349 #> [18160,]  348 #> [18161,]  349 #> [18162,]  349 #> [18163,]  349 #> [18164,]  348 #> [18165,]  349 #> [18166,]  349 #> [18167,]  348 #> [18168,]  349 #> [18169,]  349 #> [18170,]  349 #> [18171,]  349 #> [18172,]  349 #> [18173,]  349 #> [18174,]  349 #> [18175,]  349 #> [18176,]  349 #> [18177,]  349 #> [18178,]  349 #> [18179,]  349 #> [18180,]  349 #> [18181,]  349 #> [18182,]  349 #> [18183,]  349 #> [18184,]  349 #> [18185,]  348 #> [18186,]  349 #> [18187,]  349 #> [18188,]  349 #> [18189,]  349 #> [18190,]  349 #> [18191,]  348 #> [18192,]  349 #> [18193,]  349 #> [18194,]  349 #> [18195,]  348 #> [18196,]  349 #> [18197,]  349 #> [18198,]  349 #> [18199,]  349 #> [18200,]  349 #> [18201,]  351 #> [18202,]  351 #> [18203,]  350 #> [18204,]  350 #> [18205,]  350 #> [18206,]  351 #> [18207,]  350 #> [18208,]  350 #> [18209,]  350 #> [18210,]  350 #> [18211,]  350 #> [18212,]  350 #> [18213,]  351 #> [18214,]  351 #> [18215,]  351 #> [18216,]  351 #> [18217,]  351 #> [18218,]  350 #> [18219,]  350 #> [18220,]  350 #> [18221,]  351 #> [18222,]  351 #> [18223,]  350 #> [18224,]  350 #> [18225,]  350 #> [18226,]  351 #> [18227,]  351 #> [18228,]  350 #> [18229,]  351 #> [18230,]  350 #> [18231,]  350 #> [18232,]  350 #> [18233,]  351 #> [18234,]  350 #> [18235,]  351 #> [18236,]  350 #> [18237,]  351 #> [18238,]  350 #> [18239,]  350 #> [18240,]  350 #> [18241,]  351 #> [18242,]  350 #> [18243,]  350 #> [18244,]  351 #> [18245,]  350 #> [18246,]  350 #> [18247,]  350 #> [18248,]  350 #> [18249,]  350 #> [18250,]  351 #> [18251,]  350 #> [18252,]  351 #> [18253,]  350 #> [18254,]  350 #> [18255,]  350 #> [18256,]  350 #> [18257,]  350 #> [18258,]  351 #> [18259,]  351 #> [18260,]  350 #> [18261,]  351 #> [18262,]  350 #> [18263,]  350 #> [18264,]  350 #> [18265,]  350 #> [18266,]  350 #> [18267,]  350 #> [18268,]  351 #> [18269,]  350 #> [18270,]  351 #> [18271,]  351 #> [18272,]  350 #> [18273,]  351 #> [18274,]  350 #> [18275,]  350 #> [18276,]  351 #> [18277,]  351 #> [18278,]  350 #> [18279,]  351 #> [18280,]  350 #> [18281,]  351 #> [18282,]  350 #> [18283,]  351 #> [18284,]  350 #> [18285,]  350 #> [18286,]  351 #> [18287,]  350 #> [18288,]  350 #> [18289,]  350 #> [18290,]  351 #> [18291,]  350 #> [18292,]  350 #> [18293,]  351 #> [18294,]  351 #> [18295,]  350 #> [18296,]  351 #> [18297,]  350 #> [18298,]  350 #> [18299,]  351 #> [18300,]  351 #> [18301,]  353 #> [18302,]  353 #> [18303,]  352 #> [18304,]  352 #> [18305,]  352 #> [18306,]  353 #> [18307,]  352 #> [18308,]  352 #> [18309,]  352 #> [18310,]  352 #> [18311,]  353 #> [18312,]  352 #> [18313,]  353 #> [18314,]  353 #> [18315,]  353 #> [18316,]  353 #> [18317,]  353 #> [18318,]  352 #> [18319,]  352 #> [18320,]  352 #> [18321,]  353 #> [18322,]  353 #> [18323,]  352 #> [18324,]  352 #> [18325,]  352 #> [18326,]  353 #> [18327,]  353 #> [18328,]  352 #> [18329,]  353 #> [18330,]  352 #> [18331,]  352 #> [18332,]  352 #> [18333,]  353 #> [18334,]  352 #> [18335,]  353 #> [18336,]  352 #> [18337,]  353 #> [18338,]  352 #> [18339,]  352 #> [18340,]  352 #> [18341,]  353 #> [18342,]  352 #> [18343,]  352 #> [18344,]  353 #> [18345,]  352 #> [18346,]  352 #> [18347,]  353 #> [18348,]  352 #> [18349,]  352 #> [18350,]  353 #> [18351,]  352 #> [18352,]  353 #> [18353,]  352 #> [18354,]  352 #> [18355,]  352 #> [18356,]  352 #> [18357,]  352 #> [18358,]  353 #> [18359,]  353 #> [18360,]  352 #> [18361,]  353 #> [18362,]  352 #> [18363,]  352 #> [18364,]  352 #> [18365,]  352 #> [18366,]  352 #> [18367,]  352 #> [18368,]  353 #> [18369,]  352 #> [18370,]  353 #> [18371,]  353 #> [18372,]  352 #> [18373,]  353 #> [18374,]  352 #> [18375,]  352 #> [18376,]  353 #> [18377,]  353 #> [18378,]  352 #> [18379,]  353 #> [18380,]  352 #> [18381,]  353 #> [18382,]  352 #> [18383,]  353 #> [18384,]  353 #> [18385,]  352 #> [18386,]  353 #> [18387,]  352 #> [18388,]  352 #> [18389,]  352 #> [18390,]  353 #> [18391,]  352 #> [18392,]  352 #> [18393,]  353 #> [18394,]  353 #> [18395,]  352 #> [18396,]  353 #> [18397,]  352 #> [18398,]  352 #> [18399,]  353 #> [18400,]  353 #> [18401,]  355 #> [18402,]  355 #> [18403,]  354 #> [18404,]  355 #> [18405,]  355 #> [18406,]  355 #> [18407,]  354 #> [18408,]  354 #> [18409,]  355 #> [18410,]  355 #> [18411,]  355 #> [18412,]  355 #> [18413,]  354 #> [18414,]  355 #> [18415,]  355 #> [18416,]  354 #> [18417,]  354 #> [18418,]  355 #> [18419,]  355 #> [18420,]  354 #> [18421,]  355 #> [18422,]  354 #> [18423,]  355 #> [18424,]  354 #> [18425,]  354 #> [18426,]  355 #> [18427,]  355 #> [18428,]  355 #> [18429,]  355 #> [18430,]  355 #> [18431,]  355 #> [18432,]  355 #> [18433,]  355 #> [18434,]  355 #> [18435,]  355 #> [18436,]  355 #> [18437,]  355 #> [18438,]  355 #> [18439,]  354 #> [18440,]  354 #> [18441,]  355 #> [18442,]  355 #> [18443,]  355 #> [18444,]  354 #> [18445,]  354 #> [18446,]  354 #> [18447,]  354 #> [18448,]  355 #> [18449,]  354 #> [18450,]  354 #> [18451,]  355 #> [18452,]  355 #> [18453,]  354 #> [18454,]  354 #> [18455,]  354 #> [18456,]  354 #> [18457,]  355 #> [18458,]  355 #> [18459,]  354 #> [18460,]  355 #> [18461,]  355 #> [18462,]  355 #> [18463,]  354 #> [18464,]  355 #> [18465,]  354 #> [18466,]  354 #> [18467,]  355 #> [18468,]  355 #> [18469,]  355 #> [18470,]  354 #> [18471,]  355 #> [18472,]  354 #> [18473,]  355 #> [18474,]  355 #> [18475,]  355 #> [18476,]  355 #> [18477,]  355 #> [18478,]  354 #> [18479,]  354 #> [18480,]  355 #> [18481,]  355 #> [18482,]  355 #> [18483,]  355 #> [18484,]  354 #> [18485,]  355 #> [18486,]  354 #> [18487,]  355 #> [18488,]  355 #> [18489,]  354 #> [18490,]  354 #> [18491,]  355 #> [18492,]  355 #> [18493,]  355 #> [18494,]  354 #> [18495,]  355 #> [18496,]  355 #> [18497,]  355 #> [18498,]  354 #> [18499,]  355 #> [18500,]  354 #> [18501,]  356 #> [18502,]  356 #> [18503,]  356 #> [18504,]  356 #> [18505,]  357 #> [18506,]  356 #> [18507,]  356 #> [18508,]  356 #> [18509,]  356 #> [18510,]  356 #> [18511,]  356 #> [18512,]  356 #> [18513,]  356 #> [18514,]  356 #> [18515,]  356 #> [18516,]  356 #> [18517,]  356 #> [18518,]  357 #> [18519,]  356 #> [18520,]  356 #> [18521,]  356 #> [18522,]  356 #> [18523,]  356 #> [18524,]  356 #> [18525,]  356 #> [18526,]  356 #> [18527,]  356 #> [18528,]  356 #> [18529,]  356 #> [18530,]  356 #> [18531,]  356 #> [18532,]  357 #> [18533,]  356 #> [18534,]  356 #> [18535,]  356 #> [18536,]  356 #> [18537,]  356 #> [18538,]  356 #> [18539,]  356 #> [18540,]  356 #> [18541,]  356 #> [18542,]  356 #> [18543,]  356 #> [18544,]  356 #> [18545,]  356 #> [18546,]  356 #> [18547,]  356 #> [18548,]  356 #> [18549,]  356 #> [18550,]  356 #> [18551,]  356 #> [18552,]  356 #> [18553,]  356 #> [18554,]  356 #> [18555,]  356 #> [18556,]  356 #> [18557,]  356 #> [18558,]  356 #> [18559,]  356 #> [18560,]  356 #> [18561,]  356 #> [18562,]  356 #> [18563,]  356 #> [18564,]  356 #> [18565,]  356 #> [18566,]  356 #> [18567,]  356 #> [18568,]  356 #> [18569,]  356 #> [18570,]  356 #> [18571,]  357 #> [18572,]  356 #> [18573,]  356 #> [18574,]  356 #> [18575,]  357 #> [18576,]  356 #> [18577,]  356 #> [18578,]  356 #> [18579,]  356 #> [18580,]  356 #> [18581,]  356 #> [18582,]  356 #> [18583,]  356 #> [18584,]  356 #> [18585,]  356 #> [18586,]  356 #> [18587,]  356 #> [18588,]  356 #> [18589,]  356 #> [18590,]  356 #> [18591,]  357 #> [18592,]  356 #> [18593,]  356 #> [18594,]  356 #> [18595,]  357 #> [18596,]  356 #> [18597,]  356 #> [18598,]  356 #> [18599,]  356 #> [18600,]  357 #> [18601,]  359 #> [18602,]  358 #> [18603,]  358 #> [18604,]  359 #> [18605,]  358 #> [18606,]  358 #> [18607,]  359 #> [18608,]  359 #> [18609,]  358 #> [18610,]  359 #> [18611,]  358 #> [18612,]  358 #> [18613,]  359 #> [18614,]  358 #> [18615,]  359 #> [18616,]  359 #> [18617,]  359 #> [18618,]  359 #> [18619,]  358 #> [18620,]  358 #> [18621,]  359 #> [18622,]  358 #> [18623,]  359 #> [18624,]  358 #> [18625,]  359 #> [18626,]  358 #> [18627,]  359 #> [18628,]  359 #> [18629,]  358 #> [18630,]  358 #> [18631,]  358 #> [18632,]  358 #> [18633,]  358 #> [18634,]  358 #> [18635,]  358 #> [18636,]  358 #> [18637,]  358 #> [18638,]  358 #> [18639,]  359 #> [18640,]  358 #> [18641,]  358 #> [18642,]  358 #> [18643,]  359 #> [18644,]  358 #> [18645,]  359 #> [18646,]  359 #> [18647,]  359 #> [18648,]  358 #> [18649,]  358 #> [18650,]  358 #> [18651,]  358 #> [18652,]  358 #> [18653,]  359 #> [18654,]  358 #> [18655,]  358 #> [18656,]  359 #> [18657,]  358 #> [18658,]  358 #> [18659,]  358 #> [18660,]  358 #> [18661,]  359 #> [18662,]  358 #> [18663,]  358 #> [18664,]  359 #> [18665,]  358 #> [18666,]  358 #> [18667,]  358 #> [18668,]  358 #> [18669,]  358 #> [18670,]  358 #> [18671,]  359 #> [18672,]  359 #> [18673,]  359 #> [18674,]  359 #> [18675,]  359 #> [18676,]  359 #> [18677,]  359 #> [18678,]  358 #> [18679,]  358 #> [18680,]  358 #> [18681,]  358 #> [18682,]  359 #> [18683,]  358 #> [18684,]  359 #> [18685,]  358 #> [18686,]  358 #> [18687,]  358 #> [18688,]  359 #> [18689,]  358 #> [18690,]  358 #> [18691,]  358 #> [18692,]  358 #> [18693,]  358 #> [18694,]  359 #> [18695,]  359 #> [18696,]  358 #> [18697,]  358 #> [18698,]  358 #> [18699,]  358 #> [18700,]  359 #> [18701,]  361 #> [18702,]  361 #> [18703,]  360 #> [18704,]  361 #> [18705,]  361 #> [18706,]  361 #> [18707,]  361 #> [18708,]  361 #> [18709,]  361 #> [18710,]  361 #> [18711,]  360 #> [18712,]  360 #> [18713,]  361 #> [18714,]  360 #> [18715,]  361 #> [18716,]  361 #> [18717,]  361 #> [18718,]  361 #> [18719,]  360 #> [18720,]  360 #> [18721,]  361 #> [18722,]  360 #> [18723,]  361 #> [18724,]  361 #> [18725,]  361 #> [18726,]  360 #> [18727,]  361 #> [18728,]  361 #> [18729,]  360 #> [18730,]  361 #> [18731,]  361 #> [18732,]  360 #> [18733,]  361 #> [18734,]  361 #> [18735,]  361 #> [18736,]  360 #> [18737,]  361 #> [18738,]  361 #> [18739,]  361 #> [18740,]  360 #> [18741,]  360 #> [18742,]  360 #> [18743,]  361 #> [18744,]  361 #> [18745,]  361 #> [18746,]  361 #> [18747,]  361 #> [18748,]  360 #> [18749,]  361 #> [18750,]  361 #> [18751,]  360 #> [18752,]  361 #> [18753,]  361 #> [18754,]  360 #> [18755,]  361 #> [18756,]  361 #> [18757,]  361 #> [18758,]  361 #> [18759,]  361 #> [18760,]  360 #> [18761,]  361 #> [18762,]  360 #> [18763,]  360 #> [18764,]  361 #> [18765,]  361 #> [18766,]  360 #> [18767,]  361 #> [18768,]  360 #> [18769,]  360 #> [18770,]  361 #> [18771,]  361 #> [18772,]  361 #> [18773,]  361 #> [18774,]  361 #> [18775,]  361 #> [18776,]  361 #> [18777,]  361 #> [18778,]  361 #> [18779,]  361 #> [18780,]  360 #> [18781,]  360 #> [18782,]  361 #> [18783,]  360 #> [18784,]  361 #> [18785,]  361 #> [18786,]  361 #> [18787,]  361 #> [18788,]  361 #> [18789,]  360 #> [18790,]  361 #> [18791,]  360 #> [18792,]  361 #> [18793,]  361 #> [18794,]  361 #> [18795,]  361 #> [18796,]  361 #> [18797,]  361 #> [18798,]  361 #> [18799,]  361 #> [18800,]  361 #> [18801,]  363 #> [18802,]  362 #> [18803,]  362 #> [18804,]  363 #> [18805,]  363 #> [18806,]  362 #> [18807,]  362 #> [18808,]  362 #> [18809,]  362 #> [18810,]  363 #> [18811,]  363 #> [18812,]  363 #> [18813,]  363 #> [18814,]  363 #> [18815,]  363 #> [18816,]  363 #> [18817,]  363 #> [18818,]  363 #> [18819,]  363 #> [18820,]  362 #> [18821,]  362 #> [18822,]  363 #> [18823,]  362 #> [18824,]  363 #> [18825,]  362 #> [18826,]  363 #> [18827,]  363 #> [18828,]  363 #> [18829,]  362 #> [18830,]  363 #> [18831,]  363 #> [18832,]  363 #> [18833,]  363 #> [18834,]  362 #> [18835,]  362 #> [18836,]  362 #> [18837,]  362 #> [18838,]  363 #> [18839,]  363 #> [18840,]  362 #> [18841,]  362 #> [18842,]  362 #> [18843,]  363 #> [18844,]  362 #> [18845,]  362 #> [18846,]  363 #> [18847,]  363 #> [18848,]  363 #> [18849,]  362 #> [18850,]  362 #> [18851,]  363 #> [18852,]  363 #> [18853,]  362 #> [18854,]  362 #> [18855,]  362 #> [18856,]  362 #> [18857,]  362 #> [18858,]  363 #> [18859,]  363 #> [18860,]  362 #> [18861,]  363 #> [18862,]  362 #> [18863,]  363 #> [18864,]  362 #> [18865,]  362 #> [18866,]  363 #> [18867,]  362 #> [18868,]  363 #> [18869,]  363 #> [18870,]  363 #> [18871,]  363 #> [18872,]  362 #> [18873,]  362 #> [18874,]  362 #> [18875,]  363 #> [18876,]  362 #> [18877,]  363 #> [18878,]  363 #> [18879,]  363 #> [18880,]  362 #> [18881,]  362 #> [18882,]  362 #> [18883,]  363 #> [18884,]  362 #> [18885,]  362 #> [18886,]  362 #> [18887,]  363 #> [18888,]  362 #> [18889,]  362 #> [18890,]  363 #> [18891,]  363 #> [18892,]  363 #> [18893,]  363 #> [18894,]  362 #> [18895,]  363 #> [18896,]  363 #> [18897,]  362 #> [18898,]  362 #> [18899,]  362 #> [18900,]  363 #> [18901,]  365 #> [18902,]  364 #> [18903,]  365 #> [18904,]  365 #> [18905,]  365 #> [18906,]  364 #> [18907,]  365 #> [18908,]  365 #> [18909,]  365 #> [18910,]  365 #> [18911,]  364 #> [18912,]  364 #> [18913,]  365 #> [18914,]  365 #> [18915,]  364 #> [18916,]  365 #> [18917,]  364 #> [18918,]  365 #> [18919,]  364 #> [18920,]  365 #> [18921,]  365 #> [18922,]  365 #> [18923,]  364 #> [18924,]  365 #> [18925,]  365 #> [18926,]  364 #> [18927,]  365 #> [18928,]  365 #> [18929,]  364 #> [18930,]  364 #> [18931,]  364 #> [18932,]  365 #> [18933,]  365 #> [18934,]  364 #> [18935,]  364 #> [18936,]  365 #> [18937,]  364 #> [18938,]  365 #> [18939,]  365 #> [18940,]  365 #> [18941,]  365 #> [18942,]  364 #> [18943,]  364 #> [18944,]  364 #> [18945,]  365 #> [18946,]  365 #> [18947,]  364 #> [18948,]  364 #> [18949,]  365 #> [18950,]  365 #> [18951,]  365 #> [18952,]  365 #> [18953,]  365 #> [18954,]  365 #> [18955,]  365 #> [18956,]  364 #> [18957,]  365 #> [18958,]  365 #> [18959,]  365 #> [18960,]  364 #> [18961,]  364 #> [18962,]  365 #> [18963,]  364 #> [18964,]  364 #> [18965,]  364 #> [18966,]  364 #> [18967,]  365 #> [18968,]  364 #> [18969,]  365 #> [18970,]  364 #> [18971,]  365 #> [18972,]  365 #> [18973,]  365 #> [18974,]  365 #> [18975,]  364 #> [18976,]  365 #> [18977,]  365 #> [18978,]  364 #> [18979,]  364 #> [18980,]  365 #> [18981,]  364 #> [18982,]  365 #> [18983,]  365 #> [18984,]  365 #> [18985,]  365 #> [18986,]  365 #> [18987,]  365 #> [18988,]  365 #> [18989,]  365 #> [18990,]  365 #> [18991,]  365 #> [18992,]  364 #> [18993,]  365 #> [18994,]  364 #> [18995,]  364 #> [18996,]  364 #> [18997,]  365 #> [18998,]  365 #> [18999,]  365 #> [19000,]  364 #> [19001,]  366 #> [19002,]  367 #> [19003,]  367 #> [19004,]  366 #> [19005,]  366 #> [19006,]  367 #> [19007,]  366 #> [19008,]  366 #> [19009,]  366 #> [19010,]  366 #> [19011,]  366 #> [19012,]  367 #> [19013,]  366 #> [19014,]  366 #> [19015,]  366 #> [19016,]  366 #> [19017,]  366 #> [19018,]  367 #> [19019,]  367 #> [19020,]  367 #> [19021,]  366 #> [19022,]  366 #> [19023,]  366 #> [19024,]  366 #> [19025,]  367 #> [19026,]  366 #> [19027,]  366 #> [19028,]  367 #> [19029,]  366 #> [19030,]  366 #> [19031,]  367 #> [19032,]  366 #> [19033,]  367 #> [19034,]  367 #> [19035,]  366 #> [19036,]  366 #> [19037,]  366 #> [19038,]  366 #> [19039,]  366 #> [19040,]  366 #> [19041,]  366 #> [19042,]  366 #> [19043,]  366 #> [19044,]  366 #> [19045,]  366 #> [19046,]  366 #> [19047,]  366 #> [19048,]  366 #> [19049,]  366 #> [19050,]  366 #> [19051,]  366 #> [19052,]  366 #> [19053,]  366 #> [19054,]  366 #> [19055,]  366 #> [19056,]  366 #> [19057,]  366 #> [19058,]  366 #> [19059,]  366 #> [19060,]  367 #> [19061,]  366 #> [19062,]  366 #> [19063,]  366 #> [19064,]  366 #> [19065,]  367 #> [19066,]  366 #> [19067,]  366 #> [19068,]  366 #> [19069,]  366 #> [19070,]  367 #> [19071,]  367 #> [19072,]  366 #> [19073,]  367 #> [19074,]  366 #> [19075,]  366 #> [19076,]  366 #> [19077,]  366 #> [19078,]  366 #> [19079,]  366 #> [19080,]  366 #> [19081,]  366 #> [19082,]  366 #> [19083,]  366 #> [19084,]  367 #> [19085,]  366 #> [19086,]  366 #> [19087,]  366 #> [19088,]  366 #> [19089,]  366 #> [19090,]  366 #> [19091,]  366 #> [19092,]  366 #> [19093,]  367 #> [19094,]  366 #> [19095,]  366 #> [19096,]  366 #> [19097,]  367 #> [19098,]  367 #> [19099,]  366 #> [19100,]  367 #> [19101,]  368 #> [19102,]  369 #> [19103,]  368 #> [19104,]  368 #> [19105,]  368 #> [19106,]  368 #> [19107,]  368 #> [19108,]  369 #> [19109,]  368 #> [19110,]  368 #> [19111,]  368 #> [19112,]  368 #> [19113,]  369 #> [19114,]  368 #> [19115,]  369 #> [19116,]  369 #> [19117,]  368 #> [19118,]  368 #> [19119,]  369 #> [19120,]  369 #> [19121,]  368 #> [19122,]  369 #> [19123,]  368 #> [19124,]  368 #> [19125,]  368 #> [19126,]  369 #> [19127,]  369 #> [19128,]  368 #> [19129,]  369 #> [19130,]  369 #> [19131,]  368 #> [19132,]  368 #> [19133,]  369 #> [19134,]  368 #> [19135,]  368 #> [19136,]  369 #> [19137,]  369 #> [19138,]  369 #> [19139,]  368 #> [19140,]  368 #> [19141,]  369 #> [19142,]  368 #> [19143,]  369 #> [19144,]  369 #> [19145,]  368 #> [19146,]  369 #> [19147,]  368 #> [19148,]  368 #> [19149,]  368 #> [19150,]  369 #> [19151,]  369 #> [19152,]  368 #> [19153,]  369 #> [19154,]  368 #> [19155,]  369 #> [19156,]  369 #> [19157,]  368 #> [19158,]  369 #> [19159,]  369 #> [19160,]  369 #> [19161,]  369 #> [19162,]  368 #> [19163,]  369 #> [19164,]  369 #> [19165,]  368 #> [19166,]  369 #> [19167,]  368 #> [19168,]  369 #> [19169,]  369 #> [19170,]  368 #> [19171,]  369 #> [19172,]  368 #> [19173,]  368 #> [19174,]  368 #> [19175,]  369 #> [19176,]  368 #> [19177,]  369 #> [19178,]  369 #> [19179,]  368 #> [19180,]  369 #> [19181,]  369 #> [19182,]  368 #> [19183,]  369 #> [19184,]  369 #> [19185,]  369 #> [19186,]  368 #> [19187,]  369 #> [19188,]  368 #> [19189,]  368 #> [19190,]  369 #> [19191,]  368 #> [19192,]  368 #> [19193,]  369 #> [19194,]  368 #> [19195,]  369 #> [19196,]  369 #> [19197,]  369 #> [19198,]  368 #> [19199,]  368 #> [19200,]  369 #> [19201,]  371 #> [19202,]  371 #> [19203,]  371 #> [19204,]  370 #> [19205,]  371 #> [19206,]  371 #> [19207,]  371 #> [19208,]  370 #> [19209,]  370 #> [19210,]  371 #> [19211,]  371 #> [19212,]  371 #> [19213,]  371 #> [19214,]  371 #> [19215,]  371 #> [19216,]  371 #> [19217,]  370 #> [19218,]  371 #> [19219,]  371 #> [19220,]  371 #> [19221,]  371 #> [19222,]  371 #> [19223,]  371 #> [19224,]  371 #> [19225,]  371 #> [19226,]  371 #> [19227,]  370 #> [19228,]  371 #> [19229,]  371 #> [19230,]  371 #> [19231,]  371 #> [19232,]  371 #> [19233,]  371 #> [19234,]  371 #> [19235,]  371 #> [19236,]  371 #> [19237,]  371 #> [19238,]  371 #> [19239,]  371 #> [19240,]  371 #> [19241,]  371 #> [19242,]  371 #> [19243,]  371 #> [19244,]  370 #> [19245,]  371 #> [19246,]  371 #> [19247,]  371 #> [19248,]  371 #> [19249,]  371 #> [19250,]  371 #> [19251,]  371 #> [19252,]  370 #> [19253,]  371 #> [19254,]  371 #> [19255,]  371 #> [19256,]  371 #> [19257,]  371 #> [19258,]  371 #> [19259,]  371 #> [19260,]  371 #> [19261,]  371 #> [19262,]  371 #> [19263,]  371 #> [19264,]  371 #> [19265,]  371 #> [19266,]  370 #> [19267,]  371 #> [19268,]  371 #> [19269,]  371 #> [19270,]  371 #> [19271,]  371 #> [19272,]  371 #> [19273,]  371 #> [19274,]  371 #> [19275,]  371 #> [19276,]  371 #> [19277,]  371 #> [19278,]  371 #> [19279,]  371 #> [19280,]  371 #> [19281,]  370 #> [19282,]  370 #> [19283,]  371 #> [19284,]  371 #> [19285,]  371 #> [19286,]  371 #> [19287,]  371 #> [19288,]  371 #> [19289,]  371 #> [19290,]  370 #> [19291,]  371 #> [19292,]  370 #> [19293,]  371 #> [19294,]  371 #> [19295,]  370 #> [19296,]  371 #> [19297,]  371 #> [19298,]  371 #> [19299,]  370 #> [19300,]  371 #> [19301,]  373 #> [19302,]  372 #> [19303,]  373 #> [19304,]  373 #> [19305,]  373 #> [19306,]  372 #> [19307,]  373 #> [19308,]  373 #> [19309,]  373 #> [19310,]  373 #> [19311,]  372 #> [19312,]  372 #> [19313,]  373 #> [19314,]  373 #> [19315,]  372 #> [19316,]  373 #> [19317,]  372 #> [19318,]  372 #> [19319,]  372 #> [19320,]  373 #> [19321,]  372 #> [19322,]  373 #> [19323,]  372 #> [19324,]  373 #> [19325,]  373 #> [19326,]  372 #> [19327,]  373 #> [19328,]  373 #> [19329,]  372 #> [19330,]  372 #> [19331,]  372 #> [19332,]  372 #> [19333,]  373 #> [19334,]  372 #> [19335,]  372 #> [19336,]  373 #> [19337,]  372 #> [19338,]  372 #> [19339,]  373 #> [19340,]  373 #> [19341,]  373 #> [19342,]  372 #> [19343,]  372 #> [19344,]  372 #> [19345,]  373 #> [19346,]  372 #> [19347,]  372 #> [19348,]  372 #> [19349,]  373 #> [19350,]  373 #> [19351,]  372 #> [19352,]  373 #> [19353,]  373 #> [19354,]  373 #> [19355,]  373 #> [19356,]  372 #> [19357,]  373 #> [19358,]  373 #> [19359,]  373 #> [19360,]  372 #> [19361,]  372 #> [19362,]  372 #> [19363,]  372 #> [19364,]  372 #> [19365,]  372 #> [19366,]  372 #> [19367,]  373 #> [19368,]  372 #> [19369,]  372 #> [19370,]  372 #> [19371,]  373 #> [19372,]  373 #> [19373,]  373 #> [19374,]  373 #> [19375,]  372 #> [19376,]  373 #> [19377,]  373 #> [19378,]  372 #> [19379,]  372 #> [19380,]  373 #> [19381,]  372 #> [19382,]  372 #> [19383,]  372 #> [19384,]  373 #> [19385,]  373 #> [19386,]  373 #> [19387,]  373 #> [19388,]  373 #> [19389,]  372 #> [19390,]  373 #> [19391,]  373 #> [19392,]  372 #> [19393,]  372 #> [19394,]  372 #> [19395,]  372 #> [19396,]  372 #> [19397,]  372 #> [19398,]  372 #> [19399,]  373 #> [19400,]  372 #> [19401,]  375 #> [19402,]  374 #> [19403,]  375 #> [19404,]  375 #> [19405,]  375 #> [19406,]  374 #> [19407,]  375 #> [19408,]  375 #> [19409,]  375 #> [19410,]  375 #> [19411,]  374 #> [19412,]  374 #> [19413,]  375 #> [19414,]  375 #> [19415,]  374 #> [19416,]  375 #> [19417,]  374 #> [19418,]  375 #> [19419,]  374 #> [19420,]  375 #> [19421,]  375 #> [19422,]  375 #> [19423,]  374 #> [19424,]  375 #> [19425,]  375 #> [19426,]  374 #> [19427,]  375 #> [19428,]  375 #> [19429,]  374 #> [19430,]  374 #> [19431,]  374 #> [19432,]  374 #> [19433,]  375 #> [19434,]  374 #> [19435,]  374 #> [19436,]  375 #> [19437,]  374 #> [19438,]  375 #> [19439,]  375 #> [19440,]  375 #> [19441,]  375 #> [19442,]  374 #> [19443,]  374 #> [19444,]  374 #> [19445,]  375 #> [19446,]  374 #> [19447,]  374 #> [19448,]  374 #> [19449,]  375 #> [19450,]  375 #> [19451,]  374 #> [19452,]  375 #> [19453,]  375 #> [19454,]  375 #> [19455,]  375 #> [19456,]  374 #> [19457,]  375 #> [19458,]  375 #> [19459,]  375 #> [19460,]  374 #> [19461,]  374 #> [19462,]  374 #> [19463,]  374 #> [19464,]  374 #> [19465,]  374 #> [19466,]  374 #> [19467,]  375 #> [19468,]  374 #> [19469,]  374 #> [19470,]  374 #> [19471,]  375 #> [19472,]  375 #> [19473,]  375 #> [19474,]  375 #> [19475,]  374 #> [19476,]  375 #> [19477,]  375 #> [19478,]  374 #> [19479,]  374 #> [19480,]  375 #> [19481,]  374 #> [19482,]  374 #> [19483,]  375 #> [19484,]  375 #> [19485,]  375 #> [19486,]  375 #> [19487,]  375 #> [19488,]  375 #> [19489,]  374 #> [19490,]  375 #> [19491,]  375 #> [19492,]  374 #> [19493,]  374 #> [19494,]  374 #> [19495,]  374 #> [19496,]  374 #> [19497,]  374 #> [19498,]  375 #> [19499,]  375 #> [19500,]  374 #> [19501,]  377 #> [19502,]  377 #> [19503,]  376 #> [19504,]  377 #> [19505,]  376 #> [19506,]  376 #> [19507,]  377 #> [19508,]  377 #> [19509,]  377 #> [19510,]  377 #> [19511,]  376 #> [19512,]  376 #> [19513,]  377 #> [19514,]  376 #> [19515,]  377 #> [19516,]  377 #> [19517,]  377 #> [19518,]  377 #> [19519,]  376 #> [19520,]  376 #> [19521,]  377 #> [19522,]  376 #> [19523,]  377 #> [19524,]  376 #> [19525,]  377 #> [19526,]  376 #> [19527,]  377 #> [19528,]  377 #> [19529,]  376 #> [19530,]  376 #> [19531,]  377 #> [19532,]  376 #> [19533,]  376 #> [19534,]  376 #> [19535,]  376 #> [19536,]  376 #> [19537,]  377 #> [19538,]  377 #> [19539,]  377 #> [19540,]  376 #> [19541,]  376 #> [19542,]  376 #> [19543,]  377 #> [19544,]  377 #> [19545,]  377 #> [19546,]  377 #> [19547,]  377 #> [19548,]  376 #> [19549,]  377 #> [19550,]  377 #> [19551,]  376 #> [19552,]  376 #> [19553,]  377 #> [19554,]  376 #> [19555,]  376 #> [19556,]  377 #> [19557,]  376 #> [19558,]  376 #> [19559,]  377 #> [19560,]  376 #> [19561,]  377 #> [19562,]  376 #> [19563,]  376 #> [19564,]  377 #> [19565,]  377 #> [19566,]  376 #> [19567,]  376 #> [19568,]  376 #> [19569,]  376 #> [19570,]  377 #> [19571,]  377 #> [19572,]  377 #> [19573,]  377 #> [19574,]  377 #> [19575,]  377 #> [19576,]  377 #> [19577,]  377 #> [19578,]  376 #> [19579,]  377 #> [19580,]  376 #> [19581,]  376 #> [19582,]  377 #> [19583,]  376 #> [19584,]  377 #> [19585,]  377 #> [19586,]  377 #> [19587,]  377 #> [19588,]  377 #> [19589,]  376 #> [19590,]  377 #> [19591,]  376 #> [19592,]  377 #> [19593,]  376 #> [19594,]  377 #> [19595,]  377 #> [19596,]  377 #> [19597,]  376 #> [19598,]  376 #> [19599,]  376 #> [19600,]  377 #> [19601,]  378 #> [19602,]  379 #> [19603,]  378 #> [19604,]  379 #> [19605,]  379 #> [19606,]  378 #> [19607,]  379 #> [19608,]  379 #> [19609,]  379 #> [19610,]  379 #> [19611,]  378 #> [19612,]  379 #> [19613,]  379 #> [19614,]  378 #> [19615,]  379 #> [19616,]  378 #> [19617,]  379 #> [19618,]  379 #> [19619,]  378 #> [19620,]  379 #> [19621,]  379 #> [19622,]  379 #> [19623,]  379 #> [19624,]  379 #> [19625,]  379 #> [19626,]  378 #> [19627,]  379 #> [19628,]  378 #> [19629,]  379 #> [19630,]  379 #> [19631,]  379 #> [19632,]  379 #> [19633,]  379 #> [19634,]  378 #> [19635,]  378 #> [19636,]  379 #> [19637,]  378 #> [19638,]  378 #> [19639,]  379 #> [19640,]  379 #> [19641,]  379 #> [19642,]  378 #> [19643,]  379 #> [19644,]  379 #> [19645,]  378 #> [19646,]  379 #> [19647,]  379 #> [19648,]  379 #> [19649,]  378 #> [19650,]  379 #> [19651,]  379 #> [19652,]  378 #> [19653,]  379 #> [19654,]  379 #> [19655,]  379 #> [19656,]  378 #> [19657,]  379 #> [19658,]  379 #> [19659,]  378 #> [19660,]  379 #> [19661,]  379 #> [19662,]  379 #> [19663,]  379 #> [19664,]  378 #> [19665,]  378 #> [19666,]  379 #> [19667,]  379 #> [19668,]  378 #> [19669,]  378 #> [19670,]  379 #> [19671,]  379 #> [19672,]  378 #> [19673,]  378 #> [19674,]  379 #> [19675,]  379 #> [19676,]  379 #> [19677,]  378 #> [19678,]  379 #> [19679,]  378 #> [19680,]  379 #> [19681,]  379 #> [19682,]  379 #> [19683,]  379 #> [19684,]  379 #> [19685,]  379 #> [19686,]  379 #> [19687,]  379 #> [19688,]  379 #> [19689,]  378 #> [19690,]  379 #> [19691,]  379 #> [19692,]  379 #> [19693,]  379 #> [19694,]  378 #> [19695,]  379 #> [19696,]  378 #> [19697,]  378 #> [19698,]  379 #> [19699,]  379 #> [19700,]  378 #> [19701,]  381 #> [19702,]  381 #> [19703,]  380 #> [19704,]  380 #> [19705,]  381 #> [19706,]  381 #> [19707,]  380 #> [19708,]  380 #> [19709,]  381 #> [19710,]  381 #> [19711,]  381 #> [19712,]  380 #> [19713,]  381 #> [19714,]  380 #> [19715,]  381 #> [19716,]  381 #> [19717,]  381 #> [19718,]  381 #> [19719,]  381 #> [19720,]  381 #> [19721,]  381 #> [19722,]  381 #> [19723,]  380 #> [19724,]  381 #> [19725,]  380 #> [19726,]  381 #> [19727,]  381 #> [19728,]  381 #> [19729,]  381 #> [19730,]  381 #> [19731,]  380 #> [19732,]  380 #> [19733,]  381 #> [19734,]  381 #> [19735,]  381 #> [19736,]  381 #> [19737,]  380 #> [19738,]  381 #> [19739,]  381 #> [19740,]  380 #> [19741,]  381 #> [19742,]  381 #> [19743,]  381 #> [19744,]  381 #> [19745,]  381 #> [19746,]  380 #> [19747,]  380 #> [19748,]  381 #> [19749,]  381 #> [19750,]  381 #> [19751,]  381 #> [19752,]  380 #> [19753,]  381 #> [19754,]  381 #> [19755,]  380 #> [19756,]  381 #> [19757,]  380 #> [19758,]  381 #> [19759,]  380 #> [19760,]  380 #> [19761,]  381 #> [19762,]  381 #> [19763,]  381 #> [19764,]  381 #> [19765,]  381 #> [19766,]  381 #> [19767,]  380 #> [19768,]  380 #> [19769,]  381 #> [19770,]  381 #> [19771,]  381 #> [19772,]  380 #> [19773,]  381 #> [19774,]  380 #> [19775,]  381 #> [19776,]  380 #> [19777,]  381 #> [19778,]  380 #> [19779,]  381 #> [19780,]  380 #> [19781,]  381 #> [19782,]  381 #> [19783,]  381 #> [19784,]  381 #> [19785,]  381 #> [19786,]  380 #> [19787,]  381 #> [19788,]  381 #> [19789,]  381 #> [19790,]  381 #> [19791,]  381 #> [19792,]  380 #> [19793,]  381 #> [19794,]  381 #> [19795,]  381 #> [19796,]  380 #> [19797,]  380 #> [19798,]  380 #> [19799,]  381 #> [19800,]  381 #> [19801,]  382 #> [19802,]  382 #> [19803,]  382 #> [19804,]  382 #> [19805,]  382 #> [19806,]  382 #> [19807,]  382 #> [19808,]  382 #> [19809,]  382 #> [19810,]  382 #> [19811,]  382 #> [19812,]  382 #> [19813,]  382 #> [19814,]  382 #> [19815,]  382 #> [19816,]  382 #> [19817,]  382 #> [19818,]  382 #> [19819,]  382 #> [19820,]  382 #> [19821,]  382 #> [19822,]  382 #> [19823,]  382 #> [19824,]  382 #> [19825,]  382 #> [19826,]  382 #> [19827,]  382 #> [19828,]  382 #> [19829,]  382 #> [19830,]  382 #> [19831,]  382 #> [19832,]  382 #> [19833,]  382 #> [19834,]  382 #> [19835,]  382 #> [19836,]  382 #> [19837,]  382 #> [19838,]  382 #> [19839,]  382 #> [19840,]  382 #> [19841,]  382 #> [19842,]  382 #> [19843,]  382 #> [19844,]  382 #> [19845,]  382 #> [19846,]  382 #> [19847,]  382 #> [19848,]  382 #> [19849,]  382 #> [19850,]  382 #> [19851,]  382 #> [19852,]  382 #> [19853,]  382 #> [19854,]  382 #> [19855,]  382 #> [19856,]  382 #> [19857,]  382 #> [19858,]  382 #> [19859,]  382 #> [19860,]  382 #> [19861,]  382 #> [19862,]  382 #> [19863,]  382 #> [19864,]  382 #> [19865,]  382 #> [19866,]  382 #> [19867,]  382 #> [19868,]  382 #> [19869,]  382 #> [19870,]  382 #> [19871,]  382 #> [19872,]  382 #> [19873,]  382 #> [19874,]  382 #> [19875,]  382 #> [19876,]  382 #> [19877,]  382 #> [19878,]  382 #> [19879,]  382 #> [19880,]  382 #> [19881,]  382 #> [19882,]  382 #> [19883,]  382 #> [19884,]  382 #> [19885,]  382 #> [19886,]  382 #> [19887,]  382 #> [19888,]  382 #> [19889,]  382 #> [19890,]  382 #> [19891,]  382 #> [19892,]  382 #> [19893,]  382 #> [19894,]  382 #> [19895,]  382 #> [19896,]  382 #> [19897,]  382 #> [19898,]  382 #> [19899,]  382 #> [19900,]  382 #> [19901,]  384 #> [19902,]  383 #> [19903,]  383 #> [19904,]  383 #> [19905,]  384 #> [19906,]  383 #> [19907,]  383 #> [19908,]  383 #> [19909,]  383 #> [19910,]  384 #> [19911,]  384 #> [19912,]  384 #> [19913,]  383 #> [19914,]  384 #> [19915,]  384 #> [19916,]  383 #> [19917,]  384 #> [19918,]  384 #> [19919,]  383 #> [19920,]  383 #> [19921,]  383 #> [19922,]  384 #> [19923,]  383 #> [19924,]  383 #> [19925,]  383 #> [19926,]  384 #> [19927,]  384 #> [19928,]  383 #> [19929,]  383 #> [19930,]  383 #> [19931,]  384 #> [19932,]  384 #> [19933,]  383 #> [19934,]  383 #> [19935,]  383 #> [19936,]  383 #> [19937,]  383 #> [19938,]  384 #> [19939,]  383 #> [19940,]  383 #> [19941,]  383 #> [19942,]  383 #> [19943,]  384 #> [19944,]  383 #> [19945,]  383 #> [19946,]  383 #> [19947,]  384 #> [19948,]  383 #> [19949,]  383 #> [19950,]  383 #> [19951,]  383 #> [19952,]  384 #> [19953,]  383 #> [19954,]  383 #> [19955,]  383 #> [19956,]  383 #> [19957,]  383 #> [19958,]  384 #> [19959,]  384 #> [19960,]  383 #> [19961,]  384 #> [19962,]  383 #> [19963,]  383 #> [19964,]  383 #> [19965,]  383 #> [19966,]  384 #> [19967,]  383 #> [19968,]  384 #> [19969,]  383 #> [19970,]  384 #> [19971,]  384 #> [19972,]  383 #> [19973,]  383 #> [19974,]  383 #> [19975,]  384 #> [19976,]  383 #> [19977,]  384 #> [19978,]  383 #> [19979,]  384 #> [19980,]  383 #> [19981,]  383 #> [19982,]  383 #> [19983,]  383 #> [19984,]  383 #> [19985,]  383 #> [19986,]  383 #> [19987,]  384 #> [19988,]  383 #> [19989,]  383 #> [19990,]  384 #> [19991,]  384 #> [19992,]  384 #> [19993,]  383 #> [19994,]  383 #> [19995,]  384 #> [19996,]  384 #> [19997,]  383 #> [19998,]  383 #> [19999,]  383 #> [20000,]  384 computeForestLeafIndices(bart_model, X, \"mean\", c(1,3,9)) #>          [,1] [,2] [,3] #>     [1,]    0    2    1 #>     [2,]    0    2    1 #>     [3,]    0    1    1 #>     [4,]    0    2    1 #>     [5,]    0    1    1 #>     [6,]    0    1    1 #>     [7,]    0    2    1 #>     [8,]    0    2    1 #>     [9,]    0    2    1 #>    [10,]    0    2    1 #>    [11,]    0    1    1 #>    [12,]    0    1    1 #>    [13,]    0    2    1 #>    [14,]    0    1    1 #>    [15,]    0    2    1 #>    [16,]    0    2    1 #>    [17,]    0    2    1 #>    [18,]    0    2    1 #>    [19,]    0    1    1 #>    [20,]    1    0    0 #>    [21,]    0    2    1 #>    [22,]    1    0    0 #>    [23,]    0    2    1 #>    [24,]    0    1    1 #>    [25,]    0    2    1 #>    [26,]    0    1    1 #>    [27,]    0    2    1 #>    [28,]    0    2    1 #>    [29,]    1    0    0 #>    [30,]    0    1    1 #>    [31,]    0    2    1 #>    [32,]    0    1    1 #>    [33,]    0    1    1 #>    [34,]    0    1    1 #>    [35,]    0    1    1 #>    [36,]    0    1    1 #>    [37,]    0    2    1 #>    [38,]    0    2    1 #>    [39,]    0    2    1 #>    [40,]    0    1    1 #>    [41,]    0    1    1 #>    [42,]    0    1    1 #>    [43,]    0    2    1 #>    [44,]    0    2    1 #>    [45,]    0    2    1 #>    [46,]    0    2    1 #>    [47,]    0    2    1 #>    [48,]    0    1    1 #>    [49,]    0    2    1 #>    [50,]    0    2    1 #>    [51,]    0    1    1 #>    [52,]    0    1    1 #>    [53,]    0    2    1 #>    [54,]    0    1    1 #>    [55,]    0    1    1 #>    [56,]    0    2    1 #>    [57,]    0    1    1 #>    [58,]    1    0    0 #>    [59,]    0    2    1 #>    [60,]    0    1    1 #>    [61,]    0    2    1 #>    [62,]    0    1    1 #>    [63,]    0    1    1 #>    [64,]    1    0    0 #>    [65,]    0    2    1 #>    [66,]    0    1    1 #>    [67,]    0    1    1 #>    [68,]    0    1    1 #>    [69,]    0    1    1 #>    [70,]    0    2    1 #>    [71,]    0    2    1 #>    [72,]    0    2    1 #>    [73,]    0    2    1 #>    [74,]    0    2    1 #>    [75,]    0    2    1 #>    [76,]    0    2    1 #>    [77,]    1    0    0 #>    [78,]    0    1    1 #>    [79,]    0    2    1 #>    [80,]    0    1    1 #>    [81,]    0    1    1 #>    [82,]    0    2    1 #>    [83,]    0    1    1 #>    [84,]    0    2    1 #>    [85,]    0    2    1 #>    [86,]    0    2    1 #>    [87,]    1    0    0 #>    [88,]    0    2    1 #>    [89,]    0    1    1 #>    [90,]    0    2    1 #>    [91,]    0    1    1 #>    [92,]    0    2    1 #>    [93,]    0    1    1 #>    [94,]    0    2    1 #>    [95,]    0    2    1 #>    [96,]    0    2    1 #>    [97,]    0    2    1 #>    [98,]    0    1    1 #>    [99,]    0    1    1 #>   [100,]    0    2    1 #>   [101,]    3    3    2 #>   [102,]    3    3    2 #>   [103,]    2    5    2 #>   [104,]    3    3    2 #>   [105,]    3    3    2 #>   [106,]    2    4    3 #>   [107,]    3    3    2 #>   [108,]    3    3    3 #>   [109,]    3    3    3 #>   [110,]    3    3    2 #>   [111,]    3    3    2 #>   [112,]    3    3    3 #>   [113,]    3    3    2 #>   [114,]    3    3    2 #>   [115,]    3    3    3 #>   [116,]    3    3    2 #>   [117,]    3    3    2 #>   [118,]    3    3    2 #>   [119,]    2    4    2 #>   [120,]    3    3    2 #>   [121,]    3    3    2 #>   [122,]    3    3    2 #>   [123,]    3    3    2 #>   [124,]    3    3    2 #>   [125,]    3    3    2 #>   [126,]    3    3    3 #>   [127,]    3    3    2 #>   [128,]    3    3    2 #>   [129,]    3    3    2 #>   [130,]    3    3    2 #>   [131,]    3    3    2 #>   [132,]    3    3    2 #>   [133,]    3    3    2 #>   [134,]    2    4    2 #>   [135,]    3    3    2 #>   [136,]    3    3    2 #>   [137,]    2    5    2 #>   [138,]    2    4    2 #>   [139,]    3    3    2 #>   [140,]    3    3    2 #>   [141,]    3    3    2 #>   [142,]    3    3    2 #>   [143,]    3    3    3 #>   [144,]    3    3    2 #>   [145,]    2    5    2 #>   [146,]    3    3    3 #>   [147,]    3    3    2 #>   [148,]    3    3    2 #>   [149,]    2    4    2 #>   [150,]    3    3    2 #>   [151,]    3    3    3 #>   [152,]    2    5    2 #>   [153,]    3    3    2 #>   [154,]    3    3    2 #>   [155,]    3    3    2 #>   [156,]    3    3    3 #>   [157,]    3    3    2 #>   [158,]    3    3    2 #>   [159,]    3    3    2 #>   [160,]    3    3    2 #>   [161,]    3    3    3 #>   [162,]    3    3    2 #>   [163,]    3    3    2 #>   [164,]    2    5    3 #>   [165,]    3    3    2 #>   [166,]    3    3    3 #>   [167,]    3    3    2 #>   [168,]    2    5    3 #>   [169,]    3    3    2 #>   [170,]    3    3    2 #>   [171,]    3    3    2 #>   [172,]    2    4    2 #>   [173,]    3    3    2 #>   [174,]    3    3    2 #>   [175,]    3    3    2 #>   [176,]    3    3    3 #>   [177,]    3    3    2 #>   [178,]    3    3    2 #>   [179,]    3    3    2 #>   [180,]    3    3    2 #>   [181,]    3    3    2 #>   [182,]    3    3    2 #>   [183,]    3    3    2 #>   [184,]    3    3    2 #>   [185,]    3    3    2 #>   [186,]    3    3    2 #>   [187,]    3    3    2 #>   [188,]    3    3    2 #>   [189,]    3    3    2 #>   [190,]    3    3    2 #>   [191,]    3    3    2 #>   [192,]    3    3    2 #>   [193,]    3    3    2 #>   [194,]    3    3    3 #>   [195,]    3    3    2 #>   [196,]    2    5    2 #>   [197,]    2    5    2 #>   [198,]    3    3    2 #>   [199,]    3    3    2 #>   [200,]    3    3    2 #>   [201,]    5    7    5 #>   [202,]    5    7    5 #>   [203,]    5    7    5 #>   [204,]    4    6    4 #>   [205,]    5    7    5 #>   [206,]    5    7    5 #>   [207,]    5    7    5 #>   [208,]    4    6    4 #>   [209,]    4    6    4 #>   [210,]    4    6    4 #>   [211,]    5    7    5 #>   [212,]    5    7    5 #>   [213,]    5    7    5 #>   [214,]    5    7    5 #>   [215,]    5    7    5 #>   [216,]    5    7    5 #>   [217,]    5    7    5 #>   [218,]    5    7    5 #>   [219,]    5    7    5 #>   [220,]    5    7    5 #>   [221,]    5    7    5 #>   [222,]    5    7    5 #>   [223,]    5    7    5 #>   [224,]    5    7    5 #>   [225,]    5    7    5 #>   [226,]    5    7    5 #>   [227,]    5    7    5 #>   [228,]    5    7    5 #>   [229,]    5    7    5 #>   [230,]    5    7    5 #>   [231,]    5    7    5 #>   [232,]    5    7    5 #>   [233,]    5    7    5 #>   [234,]    5    7    5 #>   [235,]    5    7    5 #>   [236,]    5    7    5 #>   [237,]    5    7    5 #>   [238,]    5    7    5 #>   [239,]    5    7    5 #>   [240,]    5    7    5 #>   [241,]    5    7    5 #>   [242,]    5    7    5 #>   [243,]    4    6    4 #>   [244,]    5    7    5 #>   [245,]    5    7    5 #>   [246,]    5    7    5 #>   [247,]    5    7    5 #>   [248,]    5    7    5 #>   [249,]    5    7    5 #>   [250,]    5    7    5 #>   [251,]    4    6    4 #>   [252,]    5    7    5 #>   [253,]    5    7    5 #>   [254,]    5    7    5 #>   [255,]    5    7    5 #>   [256,]    5    7    5 #>   [257,]    5    7    5 #>   [258,]    5    7    5 #>   [259,]    5    7    5 #>   [260,]    4    6    4 #>   [261,]    5    7    5 #>   [262,]    5    7    5 #>   [263,]    5    7    5 #>   [264,]    5    7    5 #>   [265,]    5    7    5 #>   [266,]    5    7    5 #>   [267,]    4    6    4 #>   [268,]    5    7    5 #>   [269,]    5    7    5 #>   [270,]    5    7    5 #>   [271,]    5    7    5 #>   [272,]    5    7    5 #>   [273,]    5    7    5 #>   [274,]    5    7    5 #>   [275,]    5    7    5 #>   [276,]    5    7    5 #>   [277,]    5    7    5 #>   [278,]    5    7    5 #>   [279,]    5    7    5 #>   [280,]    5    7    5 #>   [281,]    5    7    5 #>   [282,]    5    7    5 #>   [283,]    5    7    5 #>   [284,]    5    7    5 #>   [285,]    4    6    4 #>   [286,]    5    7    5 #>   [287,]    5    7    5 #>   [288,]    5    7    5 #>   [289,]    5    7    5 #>   [290,]    5    7    5 #>   [291,]    4    6    4 #>   [292,]    5    7    5 #>   [293,]    5    7    5 #>   [294,]    5    7    5 #>   [295,]    4    6    4 #>   [296,]    5    7    5 #>   [297,]    5    7    5 #>   [298,]    5    7    5 #>   [299,]    5    7    5 #>   [300,]    5    7    5 #>   [301,]    6    8    7 #>   [302,]    6    8    7 #>   [303,]    6    8    7 #>   [304,]    7    9    6 #>   [305,]    6    8    7 #>   [306,]    6    8    7 #>   [307,]    7    9    6 #>   [308,]    6    8    7 #>   [309,]    6    8    7 #>   [310,]    7    9    6 #>   [311,]    6    8    7 #>   [312,]    6    8    7 #>   [313,]    6    8    7 #>   [314,]    6    8    7 #>   [315,]    6    8    7 #>   [316,]    7    9    6 #>   [317,]    6    8    7 #>   [318,]    6    8    7 #>   [319,]    6    8    7 #>   [320,]    7    9    6 #>   [321,]    6    8    7 #>   [322,]    6    8    7 #>   [323,]    6    8    7 #>   [324,]    7    9    6 #>   [325,]    7    9    6 #>   [326,]    6    8    7 #>   [327,]    6    8    7 #>   [328,]    7    9    6 #>   [329,]    6    8    7 #>   [330,]    6    8    7 #>   [331,]    6    8    7 #>   [332,]    6    8    7 #>   [333,]    6    8    7 #>   [334,]    6    8    7 #>   [335,]    6    8    7 #>   [336,]    6    8    7 #>   [337,]    6    8    7 #>   [338,]    6    8    7 #>   [339,]    7    9    6 #>   [340,]    6    8    7 #>   [341,]    6    8    7 #>   [342,]    6    8    7 #>   [343,]    6    8    7 #>   [344,]    6    8    7 #>   [345,]    6    8    7 #>   [346,]    6    8    7 #>   [347,]    6    8    7 #>   [348,]    6    8    7 #>   [349,]    6    8    7 #>   [350,]    7    9    6 #>   [351,]    6    8    7 #>   [352,]    7    9    6 #>   [353,]    6    8    7 #>   [354,]    7    9    6 #>   [355,]    6    8    7 #>   [356,]    6    8    7 #>   [357,]    6    8    7 #>   [358,]    6    8    7 #>   [359,]    6    8    7 #>   [360,]    6    8    7 #>   [361,]    6    8    7 #>   [362,]    6    8    7 #>   [363,]    6    8    7 #>   [364,]    6    8    7 #>   [365,]    6    8    7 #>   [366,]    6    8    7 #>   [367,]    6    8    7 #>   [368,]    6    8    7 #>   [369,]    6    8    7 #>   [370,]    6    8    7 #>   [371,]    6    8    7 #>   [372,]    6    8    7 #>   [373,]    7    9    6 #>   [374,]    6    8    7 #>   [375,]    6    8    7 #>   [376,]    7    9    6 #>   [377,]    6    8    7 #>   [378,]    6    8    7 #>   [379,]    6    8    7 #>   [380,]    6    8    7 #>   [381,]    6    8    7 #>   [382,]    6    8    7 #>   [383,]    6    8    7 #>   [384,]    6    8    7 #>   [385,]    6    8    7 #>   [386,]    7    9    6 #>   [387,]    6    8    7 #>   [388,]    6    8    7 #>   [389,]    6    8    7 #>   [390,]    6    8    7 #>   [391,]    7    9    6 #>   [392,]    6    8    7 #>   [393,]    6    8    7 #>   [394,]    6    8    7 #>   [395,]    6    8    7 #>   [396,]    6    8    7 #>   [397,]    6    8    7 #>   [398,]    6    8    7 #>   [399,]    6    8    7 #>   [400,]    6    8    7 #>   [401,]    9   11    9 #>   [402,]    9   11    9 #>   [403,]    8   10    8 #>   [404,]    9   11    9 #>   [405,]    8   10    9 #>   [406,]    8   10    8 #>   [407,]    9   11    8 #>   [408,]    9   11    9 #>   [409,]    9   11    9 #>   [410,]    9   11    9 #>   [411,]    8   10    9 #>   [412,]    8   10    9 #>   [413,]    9   11    9 #>   [414,]    8   10    9 #>   [415,]    9   11    9 #>   [416,]    9   11    9 #>   [417,]    9   11    9 #>   [418,]    9   11    9 #>   [419,]    8   10    9 #>   [420,]    8   10    8 #>   [421,]    9   11    8 #>   [422,]    8   10    9 #>   [423,]    9   11    8 #>   [424,]    8   10    9 #>   [425,]    9   11    8 #>   [426,]    8   10    9 #>   [427,]    9   11    9 #>   [428,]    9   11    9 #>   [429,]    8   10    9 #>   [430,]    8   10    9 #>   [431,]    9   11    9 #>   [432,]    8   10    9 #>   [433,]    8   10    9 #>   [434,]    8   10    8 #>   [435,]    8   10    8 #>   [436,]    8   10    9 #>   [437,]    9   11    8 #>   [438,]    9   11    9 #>   [439,]    9   11    9 #>   [440,]    8   10    9 #>   [441,]    8   10    9 #>   [442,]    8   10    8 #>   [443,]    9   11    9 #>   [444,]    9   11    8 #>   [445,]    9   11    9 #>   [446,]    9   11    9 #>   [447,]    9   11    9 #>   [448,]    8   10    9 #>   [449,]    9   11    9 #>   [450,]    9   11    9 #>   [451,]    8   10    9 #>   [452,]    8   10    9 #>   [453,]    9   11    8 #>   [454,]    8   10    8 #>   [455,]    8   10    8 #>   [456,]    9   11    8 #>   [457,]    8   10    8 #>   [458,]    8   10    9 #>   [459,]    9   11    9 #>   [460,]    8   10    9 #>   [461,]    9   11    9 #>   [462,]    8   10    9 #>   [463,]    8   10    9 #>   [464,]    9   11    8 #>   [465,]    9   11    8 #>   [466,]    8   10    9 #>   [467,]    8   10    9 #>   [468,]    8   10    9 #>   [469,]    8   10    9 #>   [470,]    9   11    9 #>   [471,]    9   11    9 #>   [472,]    9   11    9 #>   [473,]    9   11    8 #>   [474,]    9   11    8 #>   [475,]    9   11    9 #>   [476,]    9   11    9 #>   [477,]    9   11    9 #>   [478,]    8   10    9 #>   [479,]    9   11    9 #>   [480,]    8   10    8 #>   [481,]    8   10    9 #>   [482,]    9   11    8 #>   [483,]    8   10    9 #>   [484,]    9   11    8 #>   [485,]    9   11    8 #>   [486,]    9   11    8 #>   [487,]    9   11    9 #>   [488,]    9   11    8 #>   [489,]    8   10    8 #>   [490,]    9   11    9 #>   [491,]    8   10    9 #>   [492,]    9   11    9 #>   [493,]    8   10    9 #>   [494,]    9   11    8 #>   [495,]    9   11    9 #>   [496,]    9   11    9 #>   [497,]    8   10    9 #>   [498,]    8   10    8 #>   [499,]    8   10    8 #>   [500,]    9   11    9 #>   [501,]   11   13   12 #>   [502,]   11   13   12 #>   [503,]   10   12   10 #>   [504,]   11   13   12 #>   [505,]   11   13   12 #>   [506,]   10   12   11 #>   [507,]   11   14   12 #>   [508,]   11   13   12 #>   [509,]   11   13   12 #>   [510,]   11   14   12 #>   [511,]   10   12   11 #>   [512,]   10   12   11 #>   [513,]   11   13   12 #>   [514,]   10   12   11 #>   [515,]   11   13   12 #>   [516,]   11   14   12 #>   [517,]   11   13   12 #>   [518,]   11   13   12 #>   [519,]   10   12   10 #>   [520,]   10   12   11 #>   [521,]   11   13   12 #>   [522,]   10   12   10 #>   [523,]   11   13   12 #>   [524,]   10   12   10 #>   [525,]   11   13   12 #>   [526,]   10   12   11 #>   [527,]   11   13   12 #>   [528,]   11   14   12 #>   [529,]   10   12   11 #>   [530,]   10   12   10 #>   [531,]   11   13   12 #>   [532,]   10   12   10 #>   [533,]   11   13   12 #>   [534,]   10   12   10 #>   [535,]   11   13   12 #>   [536,]   10   12   10 #>   [537,]   11   13   12 #>   [538,]   11   13   12 #>   [539,]   11   13   12 #>   [540,]   10   12   10 #>   [541,]   10   12   11 #>   [542,]   10   12   11 #>   [543,]   11   13   12 #>   [544,]   11   13   12 #>   [545,]   11   13   12 #>   [546,]   11   13   12 #>   [547,]   11   13   12 #>   [548,]   10   12   11 #>   [549,]   11   13   12 #>   [550,]   11   14   12 #>   [551,]   10   12   11 #>   [552,]   11   14   12 #>   [553,]   11   13   12 #>   [554,]   10   12   10 #>   [555,]   10   12   11 #>   [556,]   11   13   12 #>   [557,]   11   13   12 #>   [558,]   11   13   12 #>   [559,]   11   13   12 #>   [560,]   10   12   11 #>   [561,]   11   13   12 #>   [562,]   10   12   10 #>   [563,]   10   12   11 #>   [564,]   11   13   12 #>   [565,]   11   13   12 #>   [566,]   10   12   11 #>   [567,]   10   12   11 #>   [568,]   10   12   11 #>   [569,]   10   12   11 #>   [570,]   11   13   12 #>   [571,]   11   13   12 #>   [572,]   11   13   12 #>   [573,]   11   13   12 #>   [574,]   11   13   12 #>   [575,]   11   13   12 #>   [576,]   11   14   12 #>   [577,]   11   13   12 #>   [578,]   10   12   11 #>   [579,]   11   13   12 #>   [580,]   10   12   10 #>   [581,]   10   12   11 #>   [582,]   11   13   12 #>   [583,]   10   12   10 #>   [584,]   11   13   12 #>   [585,]   11   13   12 #>   [586,]   11   14   12 #>   [587,]   11   13   12 #>   [588,]   11   13   12 #>   [589,]   10   12   11 #>   [590,]   11   13   12 #>   [591,]   10   12   11 #>   [592,]   11   13   12 #>   [593,]   10   12   10 #>   [594,]   11   13   12 #>   [595,]   11   13   12 #>   [596,]   11   13   12 #>   [597,]   11   13   12 #>   [598,]   10   12   10 #>   [599,]   10   12   11 #>   [600,]   11   13   12 #>   [601,]   13   16   14 #>   [602,]   12   15   13 #>   [603,]   12   15   13 #>   [604,]   12   15   13 #>   [605,]   12   15   13 #>   [606,]   12   15   13 #>   [607,]   12   15   13 #>   [608,]   12   15   13 #>   [609,]   12   15   13 #>   [610,]   12   15   13 #>   [611,]   12   15   13 #>   [612,]   12   15   13 #>   [613,]   12   15   13 #>   [614,]   13   16   14 #>   [615,]   13   16   14 #>   [616,]   13   16   14 #>   [617,]   12   15   13 #>   [618,]   12   15   13 #>   [619,]   12   15   13 #>   [620,]   12   15   13 #>   [621,]   12   15   13 #>   [622,]   12   15   13 #>   [623,]   12   15   13 #>   [624,]   12   15   13 #>   [625,]   12   15   13 #>   [626,]   12   15   13 #>   [627,]   12   15   13 #>   [628,]   12   15   13 #>   [629,]   12   15   13 #>   [630,]   12   15   13 #>   [631,]   12   15   13 #>   [632,]   12   15   13 #>   [633,]   12   15   13 #>   [634,]   12   15   13 #>   [635,]   12   15   13 #>   [636,]   12   15   13 #>   [637,]   12   15   13 #>   [638,]   12   15   13 #>   [639,]   12   15   13 #>   [640,]   12   15   13 #>   [641,]   13   16   14 #>   [642,]   12   15   13 #>   [643,]   12   15   13 #>   [644,]   13   16   14 #>   [645,]   12   15   13 #>   [646,]   12   15   13 #>   [647,]   12   15   13 #>   [648,]   12   15   13 #>   [649,]   12   15   13 #>   [650,]   13   16   14 #>   [651,]   12   15   13 #>   [652,]   12   15   13 #>   [653,]   12   15   13 #>   [654,]   12   15   13 #>   [655,]   12   15   13 #>   [656,]   12   15   13 #>   [657,]   12   15   13 #>   [658,]   12   15   13 #>   [659,]   13   16   14 #>   [660,]   12   15   13 #>   [661,]   12   15   13 #>   [662,]   12   15   13 #>   [663,]   12   15   13 #>   [664,]   12   15   13 #>   [665,]   12   15   13 #>   [666,]   12   15   13 #>   [667,]   12   15   13 #>   [668,]   12   15   13 #>   [669,]   12   15   13 #>   [670,]   13   16   14 #>   [671,]   12   15   13 #>   [672,]   12   15   13 #>   [673,]   13   16   14 #>   [674,]   12   15   13 #>   [675,]   12   15   13 #>   [676,]   12   15   13 #>   [677,]   12   15   13 #>   [678,]   12   15   13 #>   [679,]   12   15   13 #>   [680,]   12   15   13 #>   [681,]   12   15   13 #>   [682,]   12   15   13 #>   [683,]   12   15   13 #>   [684,]   12   15   13 #>   [685,]   12   15   13 #>   [686,]   12   15   13 #>   [687,]   12   15   13 #>   [688,]   12   15   13 #>   [689,]   12   15   13 #>   [690,]   12   15   13 #>   [691,]   12   15   13 #>   [692,]   12   15   13 #>   [693,]   12   15   13 #>   [694,]   12   15   13 #>   [695,]   12   15   13 #>   [696,]   13   16   14 #>   [697,]   12   15   13 #>   [698,]   12   15   13 #>   [699,]   13   16   14 #>   [700,]   12   15   13 #>   [701,]   15   18   17 #>   [702,]   15   18   17 #>   [703,]   14   17   15 #>   [704,]   14   17   15 #>   [705,]   14   17   15 #>   [706,]   15   18   17 #>   [707,]   15   18   16 #>   [708,]   14   17   15 #>   [709,]   14   17   15 #>   [710,]   14   17   15 #>   [711,]   15   18   17 #>   [712,]   15   18   17 #>   [713,]   15   18   16 #>   [714,]   15   18   17 #>   [715,]   15   18   17 #>   [716,]   15   18   16 #>   [717,]   15   18   16 #>   [718,]   14   17   15 #>   [719,]   15   18   17 #>   [720,]   14   17   15 #>   [721,]   15   18   17 #>   [722,]   15   18   16 #>   [723,]   15   18   17 #>   [724,]   14   17   15 #>   [725,]   15   18   16 #>   [726,]   15   18   17 #>   [727,]   15   18   17 #>   [728,]   15   18   17 #>   [729,]   15   18   17 #>   [730,]   14   17   15 #>   [731,]   14   17   15 #>   [732,]   14   17   15 #>   [733,]   15   18   17 #>   [734,]   15   18   17 #>   [735,]   15   18   17 #>   [736,]   15   18   17 #>   [737,]   15   18   17 #>   [738,]   15   18   17 #>   [739,]   14   17   15 #>   [740,]   15   18   16 #>   [741,]   15   18   17 #>   [742,]   15   18   17 #>   [743,]   14   17   15 #>   [744,]   15   18   16 #>   [745,]   14   17   15 #>   [746,]   15   18   16 #>   [747,]   15   18   16 #>   [748,]   14   17   15 #>   [749,]   14   17   15 #>   [750,]   15   18   16 #>   [751,]   14   17   15 #>   [752,]   15   18   17 #>   [753,]   14   17   15 #>   [754,]   15   18   16 #>   [755,]   15   18   16 #>   [756,]   14   17   15 #>   [757,]   15   18   17 #>   [758,]   15   18   17 #>   [759,]   15   18   16 #>   [760,]   14   17   15 #>   [761,]   15   18   17 #>   [762,]   14   17   15 #>   [763,]   15   18   16 #>   [764,]   14   17   15 #>   [765,]   14   17   15 #>   [766,]   14   17   15 #>   [767,]   14   17   15 #>   [768,]   15   18   17 #>   [769,]   15   18   17 #>   [770,]   15   18   16 #>   [771,]   15   18   17 #>   [772,]   14   17   15 #>   [773,]   15   18   17 #>   [774,]   15   18   17 #>   [775,]   15   18   17 #>   [776,]   15   18   16 #>   [777,]   15   18   16 #>   [778,]   14   17   15 #>   [779,]   15   18   16 #>   [780,]   15   18   17 #>   [781,]   15   18   17 #>   [782,]   15   18   17 #>   [783,]   15   18   16 #>   [784,]   15   18   16 #>   [785,]   14   17   15 #>   [786,]   15   18   16 #>   [787,]   15   18   17 #>   [788,]   14   17   15 #>   [789,]   14   17   15 #>   [790,]   15   18   16 #>   [791,]   14   17   15 #>   [792,]   15   18   17 #>   [793,]   15   18   17 #>   [794,]   15   18   16 #>   [795,]   14   17   15 #>   [796,]   15   18   17 #>   [797,]   15   18   17 #>   [798,]   15   18   16 #>   [799,]   15   18   17 #>   [800,]   15   18   16 #>   [801,]   18   20   18 #>   [802,]   18   20   18 #>   [803,]   17   20   18 #>   [804,]   16   19   19 #>   [805,]   18   20   18 #>   [806,]   16   19   19 #>   [807,]   17   20   18 #>   [808,]   17   20   18 #>   [809,]   16   19   19 #>   [810,]   16   19   19 #>   [811,]   16   19   19 #>   [812,]   16   19   19 #>   [813,]   17   20   18 #>   [814,]   16   19   19 #>   [815,]   16   19   19 #>   [816,]   17   20   18 #>   [817,]   17   20   18 #>   [818,]   16   19   19 #>   [819,]   16   19   19 #>   [820,]   17   20   18 #>   [821,]   16   19   19 #>   [822,]   17   20   18 #>   [823,]   18   20   18 #>   [824,]   17   20   18 #>   [825,]   17   20   18 #>   [826,]   16   19   19 #>   [827,]   16   19   19 #>   [828,]   18   20   18 #>   [829,]   18   20   18 #>   [830,]   16   19   19 #>   [831,]   16   19   19 #>   [832,]   16   19   19 #>   [833,]   16   19   19 #>   [834,]   16   19   19 #>   [835,]   18   20   18 #>   [836,]   16   19   19 #>   [837,]   18   20   18 #>   [838,]   16   19   19 #>   [839,]   17   20   18 #>   [840,]   17   20   18 #>   [841,]   16   19   19 #>   [842,]   16   19   19 #>   [843,]   17   20   18 #>   [844,]   17   20   18 #>   [845,]   17   20   18 #>   [846,]   17   20   18 #>   [847,]   17   20   18 #>   [848,]   16   19   19 #>   [849,]   17   20   18 #>   [850,]   17   20   18 #>   [851,]   17   20   18 #>   [852,]   16   19   19 #>   [853,]   17   20   18 #>   [854,]   17   20   18 #>   [855,]   17   20   18 #>   [856,]   17   20   18 #>   [857,]   18   20   18 #>   [858,]   16   19   19 #>   [859,]   17   20   18 #>   [860,]   16   19   19 #>   [861,]   16   19   19 #>   [862,]   16   19   19 #>   [863,]   17   20   18 #>   [864,]   16   19   19 #>   [865,]   17   20   18 #>   [866,]   17   20   18 #>   [867,]   16   19   19 #>   [868,]   16   19   19 #>   [869,]   16   19   19 #>   [870,]   17   20   18 #>   [871,]   18   20   18 #>   [872,]   17   20   18 #>   [873,]   16   19   19 #>   [874,]   16   19   19 #>   [875,]   16   19   19 #>   [876,]   17   20   18 #>   [877,]   17   20   18 #>   [878,]   17   20   18 #>   [879,]   17   20   18 #>   [880,]   16   19   19 #>   [881,]   18   20   18 #>   [882,]   16   19   19 #>   [883,]   17   20   18 #>   [884,]   17   20   18 #>   [885,]   16   19   19 #>   [886,]   17   20   18 #>   [887,]   18   20   18 #>   [888,]   18   20   18 #>   [889,]   17   20   18 #>   [890,]   17   20   18 #>   [891,]   18   20   18 #>   [892,]   16   19   19 #>   [893,]   16   19   19 #>   [894,]   17   20   18 #>   [895,]   18   20   18 #>   [896,]   16   19   19 #>   [897,]   16   19   19 #>   [898,]   17   20   18 #>   [899,]   16   19   19 #>   [900,]   17   20   18 #>   [901,]   19   22   21 #>   [902,]   20   21   20 #>   [903,]   19   22   21 #>   [904,]   19   23   21 #>   [905,]   20   21   20 #>   [906,]   19   22   21 #>   [907,]   20   21   20 #>   [908,]   19   22   21 #>   [909,]   20   21   20 #>   [910,]   20   21   20 #>   [911,]   19   22   21 #>   [912,]   20   21   20 #>   [913,]   20   21   20 #>   [914,]   19   22   21 #>   [915,]   20   21   20 #>   [916,]   19   22   21 #>   [917,]   20   21   20 #>   [918,]   20   21   20 #>   [919,]   19   22   21 #>   [920,]   20   21   20 #>   [921,]   20   21   20 #>   [922,]   20   21   20 #>   [923,]   20   21   20 #>   [924,]   20   21   20 #>   [925,]   20   21   20 #>   [926,]   19   22   21 #>   [927,]   20   21   20 #>   [928,]   19   22   21 #>   [929,]   20   21   20 #>   [930,]   20   21   20 #>   [931,]   20   21   20 #>   [932,]   20   21   20 #>   [933,]   20   21   20 #>   [934,]   19   22   21 #>   [935,]   19   22   21 #>   [936,]   20   21   20 #>   [937,]   19   22   21 #>   [938,]   19   22   21 #>   [939,]   20   21   20 #>   [940,]   20   21   20 #>   [941,]   20   21   20 #>   [942,]   19   22   21 #>   [943,]   20   21   20 #>   [944,]   20   21   20 #>   [945,]   19   23   21 #>   [946,]   20   21   20 #>   [947,]   20   21   20 #>   [948,]   20   21   20 #>   [949,]   19   22   21 #>   [950,]   20   21   20 #>   [951,]   20   21   20 #>   [952,]   19   22   21 #>   [953,]   20   21   20 #>   [954,]   20   21   20 #>   [955,]   20   21   20 #>   [956,]   19   22   21 #>   [957,]   20   21   20 #>   [958,]   20   21   20 #>   [959,]   19   22   21 #>   [960,]   20   21   20 #>   [961,]   20   21   20 #>   [962,]   19   22   21 #>   [963,]   20   21   20 #>   [964,]   19   22   21 #>   [965,]   19   22   21 #>   [966,]   20   21   20 #>   [967,]   20   21   20 #>   [968,]   19   22   21 #>   [969,]   19   22   21 #>   [970,]   20   21   20 #>   [971,]   20   21   20 #>   [972,]   19   23   21 #>   [973,]   19   23   21 #>   [974,]   20   21   20 #>   [975,]   20   21   20 #>   [976,]   20   21   20 #>   [977,]   19   23   21 #>   [978,]   20   21   20 #>   [979,]   19   22   21 #>   [980,]   20   21   20 #>   [981,]   20   21   20 #>   [982,]   20   21   20 #>   [983,]   20   21   20 #>   [984,]   20   21   20 #>   [985,]   20   21   20 #>   [986,]   20   21   20 #>   [987,]   20   21   20 #>   [988,]   20   21   20 #>   [989,]   19   22   21 #>   [990,]   20   21   20 #>   [991,]   19   22   21 #>   [992,]   20   21   20 #>   [993,]   20   21   20 #>   [994,]   19   23   21 #>   [995,]   20   21   20 #>   [996,]   19   22   21 #>   [997,]   19   22   21 #>   [998,]   20   21   20 #>   [999,]   20   21   20 #>  [1000,]   19   23   21 #>  [1001,]   22   25   23 #>  [1002,]   22   25   23 #>  [1003,]   22   25   23 #>  [1004,]   21   24   22 #>  [1005,]   22   25   23 #>  [1006,]   22   25   23 #>  [1007,]   22   25   23 #>  [1008,]   21   24   22 #>  [1009,]   21   24   22 #>  [1010,]   21   24   22 #>  [1011,]   22   25   23 #>  [1012,]   22   25   23 #>  [1013,]   22   25   23 #>  [1014,]   22   25   23 #>  [1015,]   22   25   23 #>  [1016,]   22   25   23 #>  [1017,]   22   25   23 #>  [1018,]   22   25   23 #>  [1019,]   22   25   23 #>  [1020,]   22   25   23 #>  [1021,]   22   25   23 #>  [1022,]   22   25   23 #>  [1023,]   22   25   23 #>  [1024,]   22   25   23 #>  [1025,]   22   25   23 #>  [1026,]   22   25   23 #>  [1027,]   22   25   23 #>  [1028,]   22   25   23 #>  [1029,]   22   25   23 #>  [1030,]   22   25   23 #>  [1031,]   22   25   23 #>  [1032,]   22   25   23 #>  [1033,]   22   25   23 #>  [1034,]   22   25   23 #>  [1035,]   22   25   23 #>  [1036,]   22   25   23 #>  [1037,]   22   25   23 #>  [1038,]   22   25   23 #>  [1039,]   22   25   23 #>  [1040,]   22   25   23 #>  [1041,]   22   25   23 #>  [1042,]   22   25   23 #>  [1043,]   21   24   22 #>  [1044,]   22   25   23 #>  [1045,]   22   25   23 #>  [1046,]   22   25   23 #>  [1047,]   22   25   23 #>  [1048,]   22   25   23 #>  [1049,]   22   25   23 #>  [1050,]   22   25   23 #>  [1051,]   21   24   22 #>  [1052,]   22   25   23 #>  [1053,]   22   25   23 #>  [1054,]   22   25   23 #>  [1055,]   22   25   23 #>  [1056,]   22   25   23 #>  [1057,]   22   25   23 #>  [1058,]   22   25   23 #>  [1059,]   22   25   23 #>  [1060,]   21   24   22 #>  [1061,]   22   25   23 #>  [1062,]   22   25   23 #>  [1063,]   22   25   23 #>  [1064,]   21   24   22 #>  [1065,]   22   25   23 #>  [1066,]   22   25   23 #>  [1067,]   21   24   22 #>  [1068,]   22   25   23 #>  [1069,]   22   25   23 #>  [1070,]   22   25   23 #>  [1071,]   22   25   23 #>  [1072,]   22   25   23 #>  [1073,]   22   25   23 #>  [1074,]   22   25   23 #>  [1075,]   22   25   23 #>  [1076,]   22   25   23 #>  [1077,]   22   25   23 #>  [1078,]   22   25   23 #>  [1079,]   22   25   23 #>  [1080,]   22   25   23 #>  [1081,]   22   25   23 #>  [1082,]   22   25   23 #>  [1083,]   22   25   23 #>  [1084,]   22   25   23 #>  [1085,]   21   24   22 #>  [1086,]   22   25   23 #>  [1087,]   22   25   23 #>  [1088,]   22   25   23 #>  [1089,]   22   25   23 #>  [1090,]   22   25   23 #>  [1091,]   21   24   22 #>  [1092,]   22   25   23 #>  [1093,]   22   25   23 #>  [1094,]   22   25   23 #>  [1095,]   21   24   22 #>  [1096,]   22   25   23 #>  [1097,]   22   25   23 #>  [1098,]   22   25   23 #>  [1099,]   22   25   23 #>  [1100,]   22   25   23 #>  [1101,]   23   26   25 #>  [1102,]   23   27   25 #>  [1103,]   23   27   24 #>  [1104,]   23   26   24 #>  [1105,]   23   26   24 #>  [1106,]   23   27   25 #>  [1107,]   23   27   24 #>  [1108,]   23   26   24 #>  [1109,]   23   26   24 #>  [1110,]   23   26   24 #>  [1111,]   23   26   24 #>  [1112,]   23   27   24 #>  [1113,]   23   26   25 #>  [1114,]   23   26   25 #>  [1115,]   23   26   25 #>  [1116,]   23   26   25 #>  [1117,]   23   26   25 #>  [1118,]   23   27   24 #>  [1119,]   23   27   24 #>  [1120,]   24   27   24 #>  [1121,]   23   26   25 #>  [1122,]   24   26   25 #>  [1123,]   23   27   24 #>  [1124,]   23   26   24 #>  [1125,]   23   27   24 #>  [1126,]   23   26   25 #>  [1127,]   23   26   25 #>  [1128,]   23   27   24 #>  [1129,]   24   27   25 #>  [1130,]   23   26   24 #>  [1131,]   23   27   24 #>  [1132,]   23   27   24 #>  [1133,]   23   27   25 #>  [1134,]   23   27   24 #>  [1135,]   23   26   25 #>  [1136,]   23   26   24 #>  [1137,]   23   26   25 #>  [1138,]   23   26   24 #>  [1139,]   23   26   24 #>  [1140,]   23   27   24 #>  [1141,]   23   26   25 #>  [1142,]   23   27   24 #>  [1143,]   23   26   24 #>  [1144,]   23   26   25 #>  [1145,]   23   26   24 #>  [1146,]   23   26   24 #>  [1147,]   23   26   25 #>  [1148,]   23   27   24 #>  [1149,]   23   26   24 #>  [1150,]   23   26   25 #>  [1151,]   23   26   24 #>  [1152,]   23   26   25 #>  [1153,]   23   26   24 #>  [1154,]   23   26   24 #>  [1155,]   23   26   24 #>  [1156,]   23   27   24 #>  [1157,]   23   27   24 #>  [1158,]   24   26   25 #>  [1159,]   23   26   25 #>  [1160,]   23   27   24 #>  [1161,]   23   27   25 #>  [1162,]   23   26   24 #>  [1163,]   23   26   24 #>  [1164,]   24   27   24 #>  [1165,]   23   27   24 #>  [1166,]   23   26   24 #>  [1167,]   23   26   24 #>  [1168,]   23   26   25 #>  [1169,]   23   26   24 #>  [1170,]   23   27   25 #>  [1171,]   23   27   25 #>  [1172,]   23   26   24 #>  [1173,]   23   27   25 #>  [1174,]   23   26   24 #>  [1175,]   23   27   24 #>  [1176,]   23   26   25 #>  [1177,]   24   27   25 #>  [1178,]   23   27   24 #>  [1179,]   23   26   25 #>  [1180,]   23   26   24 #>  [1181,]   23   26   25 #>  [1182,]   23   26   24 #>  [1183,]   23   26   25 #>  [1184,]   23   27   24 #>  [1185,]   23   26   24 #>  [1186,]   23   27   25 #>  [1187,]   24   26   24 #>  [1188,]   23   26   24 #>  [1189,]   23   26   24 #>  [1190,]   23   26   25 #>  [1191,]   23   26   24 #>  [1192,]   23   26   24 #>  [1193,]   23   27   25 #>  [1194,]   23   26   25 #>  [1195,]   23   26   24 #>  [1196,]   23   26   25 #>  [1197,]   23   27   24 #>  [1198,]   23   27   24 #>  [1199,]   23   26   25 #>  [1200,]   23   27   25 #>  [1201,]   25   29   27 #>  [1202,]   25   29   27 #>  [1203,]   25   29   27 #>  [1204,]   25   29   27 #>  [1205,]   25   29   27 #>  [1206,]   25   28   26 #>  [1207,]   25   29   27 #>  [1208,]   25   29   27 #>  [1209,]   25   29   27 #>  [1210,]   25   29   27 #>  [1211,]   25   29   27 #>  [1212,]   25   29   27 #>  [1213,]   25   29   27 #>  [1214,]   25   29   27 #>  [1215,]   25   29   27 #>  [1216,]   25   29   27 #>  [1217,]   25   29   27 #>  [1218,]   25   29   27 #>  [1219,]   25   29   27 #>  [1220,]   25   28   26 #>  [1221,]   25   28   26 #>  [1222,]   25   29   27 #>  [1223,]   25   29   27 #>  [1224,]   25   29   27 #>  [1225,]   25   28   26 #>  [1226,]   25   29   27 #>  [1227,]   25   29   27 #>  [1228,]   25   29   27 #>  [1229,]   25   29   27 #>  [1230,]   25   29   27 #>  [1231,]   25   29   27 #>  [1232,]   25   29   27 #>  [1233,]   25   29   27 #>  [1234,]   25   29   27 #>  [1235,]   25   28   26 #>  [1236,]   25   29   27 #>  [1237,]   25   29   27 #>  [1238,]   25   29   27 #>  [1239,]   25   29   27 #>  [1240,]   25   29   27 #>  [1241,]   25   29   27 #>  [1242,]   25   28   26 #>  [1243,]   25   29   27 #>  [1244,]   25   28   26 #>  [1245,]   25   29   27 #>  [1246,]   25   29   27 #>  [1247,]   25   29   27 #>  [1248,]   25   29   27 #>  [1249,]   25   29   27 #>  [1250,]   25   29   27 #>  [1251,]   25   29   27 #>  [1252,]   25   29   27 #>  [1253,]   25   28   26 #>  [1254,]   25   29   27 #>  [1255,]   25   29   27 #>  [1256,]   25   28   26 #>  [1257,]   25   29   27 #>  [1258,]   25   29   27 #>  [1259,]   25   29   27 #>  [1260,]   25   29   27 #>  [1261,]   25   29   27 #>  [1262,]   25   29   27 #>  [1263,]   25   29   27 #>  [1264,]   25   29   27 #>  [1265,]   25   28   26 #>  [1266,]   25   29   27 #>  [1267,]   25   29   27 #>  [1268,]   25   29   27 #>  [1269,]   25   29   27 #>  [1270,]   25   29   27 #>  [1271,]   25   29   27 #>  [1272,]   25   29   27 #>  [1273,]   25   28   26 #>  [1274,]   25   28   26 #>  [1275,]   25   29   27 #>  [1276,]   25   29   27 #>  [1277,]   25   29   27 #>  [1278,]   25   29   27 #>  [1279,]   25   29   27 #>  [1280,]   25   28   26 #>  [1281,]   25   29   27 #>  [1282,]   25   28   26 #>  [1283,]   25   29   27 #>  [1284,]   25   28   26 #>  [1285,]   25   28   26 #>  [1286,]   25   28   26 #>  [1287,]   25   29   27 #>  [1288,]   25   29   27 #>  [1289,]   25   28   26 #>  [1290,]   25   29   27 #>  [1291,]   25   29   27 #>  [1292,]   25   29   27 #>  [1293,]   25   29   27 #>  [1294,]   25   28   26 #>  [1295,]   25   29   27 #>  [1296,]   25   29   27 #>  [1297,]   25   29   27 #>  [1298,]   25   29   27 #>  [1299,]   25   28   26 #>  [1300,]   25   29   27 #>  [1301,]   26   31   29 #>  [1302,]   26   30   28 #>  [1303,]   26   31   29 #>  [1304,]   26   31   29 #>  [1305,]   26   31   29 #>  [1306,]   26   30   28 #>  [1307,]   26   31   29 #>  [1308,]   26   30   28 #>  [1309,]   26   31   29 #>  [1310,]   26   31   29 #>  [1311,]   26   30   28 #>  [1312,]   26   30   28 #>  [1313,]   26   31   29 #>  [1314,]   26   31   29 #>  [1315,]   26   30   28 #>  [1316,]   26   31   29 #>  [1317,]   26   30   28 #>  [1318,]   26   30   28 #>  [1319,]   26   30   28 #>  [1320,]   26   31   29 #>  [1321,]   26   30   28 #>  [1322,]   26   31   29 #>  [1323,]   26   30   28 #>  [1324,]   26   31   29 #>  [1325,]   26   31   29 #>  [1326,]   26   30   28 #>  [1327,]   26   31   29 #>  [1328,]   26   31   29 #>  [1329,]   26   30   28 #>  [1330,]   26   30   28 #>  [1331,]   26   30   28 #>  [1332,]   26   30   28 #>  [1333,]   26   31   29 #>  [1334,]   26   30   28 #>  [1335,]   26   30   28 #>  [1336,]   26   31   29 #>  [1337,]   26   30   28 #>  [1338,]   26   30   28 #>  [1339,]   26   31   29 #>  [1340,]   26   30   28 #>  [1341,]   26   31   29 #>  [1342,]   26   30   28 #>  [1343,]   26   30   28 #>  [1344,]   26   30   28 #>  [1345,]   26   31   29 #>  [1346,]   26   30   28 #>  [1347,]   26   30   28 #>  [1348,]   26   30   28 #>  [1349,]   26   31   29 #>  [1350,]   26   31   29 #>  [1351,]   26   30   28 #>  [1352,]   26   31   29 #>  [1353,]   26   31   29 #>  [1354,]   26   31   29 #>  [1355,]   26   31   29 #>  [1356,]   26   30   28 #>  [1357,]   26   31   29 #>  [1358,]   26   31   29 #>  [1359,]   26   31   29 #>  [1360,]   26   30   28 #>  [1361,]   26   30   28 #>  [1362,]   26   30   28 #>  [1363,]   26   30   28 #>  [1364,]   26   30   28 #>  [1365,]   26   30   28 #>  [1366,]   26   30   28 #>  [1367,]   26   31   29 #>  [1368,]   26   30   28 #>  [1369,]   26   30   28 #>  [1370,]   26   30   28 #>  [1371,]   26   31   29 #>  [1372,]   26   31   29 #>  [1373,]   26   31   29 #>  [1374,]   26   31   29 #>  [1375,]   26   30   28 #>  [1376,]   26   31   29 #>  [1377,]   26   31   29 #>  [1378,]   26   30   28 #>  [1379,]   26   30   28 #>  [1380,]   26   31   29 #>  [1381,]   26   30   28 #>  [1382,]   26   30   28 #>  [1383,]   26   30   28 #>  [1384,]   26   31   29 #>  [1385,]   26   31   29 #>  [1386,]   26   31   29 #>  [1387,]   26   31   29 #>  [1388,]   26   31   29 #>  [1389,]   26   30   28 #>  [1390,]   26   31   29 #>  [1391,]   26   31   29 #>  [1392,]   26   30   28 #>  [1393,]   26   30   28 #>  [1394,]   26   30   28 #>  [1395,]   26   30   28 #>  [1396,]   26   30   28 #>  [1397,]   26   30   28 #>  [1398,]   26   30   28 #>  [1399,]   26   30   28 #>  [1400,]   26   30   28 #>  [1401,]   28   32   30 #>  [1402,]   27   33   31 #>  [1403,]   27   33   31 #>  [1404,]   28   32   30 #>  [1405,]   27   33   31 #>  [1406,]   27   33   31 #>  [1407,]   28   32   30 #>  [1408,]   28   32   30 #>  [1409,]   28   32   30 #>  [1410,]   28   32   30 #>  [1411,]   27   33   31 #>  [1412,]   27   33   31 #>  [1413,]   28   32   30 #>  [1414,]   27   33   31 #>  [1415,]   28   32   30 #>  [1416,]   28   32   30 #>  [1417,]   28   32   30 #>  [1418,]   28   32   30 #>  [1419,]   27   34   31 #>  [1420,]   27   34   31 #>  [1421,]   28   32   30 #>  [1422,]   27   34   31 #>  [1423,]   28   32   30 #>  [1424,]   27   33   31 #>  [1425,]   28   32   30 #>  [1426,]   27   33   31 #>  [1427,]   28   32   30 #>  [1428,]   28   32   30 #>  [1429,]   27   34   31 #>  [1430,]   27   33   31 #>  [1431,]   27   33   31 #>  [1432,]   27   33   31 #>  [1433,]   27   33   31 #>  [1434,]   27   33   31 #>  [1435,]   27   33   31 #>  [1436,]   27   34   31 #>  [1437,]   28   32   30 #>  [1438,]   28   32   30 #>  [1439,]   28   32   30 #>  [1440,]   27   33   31 #>  [1441,]   27   33   31 #>  [1442,]   27   33   31 #>  [1443,]   28   32   30 #>  [1444,]   27   33   31 #>  [1445,]   28   32   30 #>  [1446,]   28   32   30 #>  [1447,]   28   32   30 #>  [1448,]   27   33   31 #>  [1449,]   27   33   31 #>  [1450,]   27   33   31 #>  [1451,]   27   33   31 #>  [1452,]   27   33   31 #>  [1453,]   28   32   30 #>  [1454,]   27   33   31 #>  [1455,]   27   34   31 #>  [1456,]   28   32   30 #>  [1457,]   27   33   31 #>  [1458,]   27   34   31 #>  [1459,]   27   33   31 #>  [1460,]   27   33   31 #>  [1461,]   28   32   30 #>  [1462,]   27   33   31 #>  [1463,]   27   33   31 #>  [1464,]   28   32   30 #>  [1465,]   27   33   31 #>  [1466,]   27   34   31 #>  [1467,]   27   33   31 #>  [1468,]   27   33   31 #>  [1469,]   27   33   31 #>  [1470,]   28   32   30 #>  [1471,]   28   32   30 #>  [1472,]   28   32   30 #>  [1473,]   28   32   30 #>  [1474,]   28   32   30 #>  [1475,]   28   32   30 #>  [1476,]   28   32   30 #>  [1477,]   28   32   30 #>  [1478,]   27   33   31 #>  [1479,]   28   32   30 #>  [1480,]   27   33   31 #>  [1481,]   27   34   31 #>  [1482,]   28   32   30 #>  [1483,]   27   34   31 #>  [1484,]   28   32   30 #>  [1485,]   27   33   31 #>  [1486,]   27   33   31 #>  [1487,]   28   32   30 #>  [1488,]   28   32   30 #>  [1489,]   27   33   31 #>  [1490,]   28   32   30 #>  [1491,]   27   33   31 #>  [1492,]   27   33   31 #>  [1493,]   27   33   31 #>  [1494,]   28   32   30 #>  [1495,]   28   32   30 #>  [1496,]   28   32   30 #>  [1497,]   27   34   31 #>  [1498,]   27   33   31 #>  [1499,]   27   33   31 #>  [1500,]   28   32   30 #>  [1501,]   30   35   33 #>  [1502,]   30   35   32 #>  [1503,]   29   35   33 #>  [1504,]   29   35   33 #>  [1505,]   29   35   32 #>  [1506,]   29   35   33 #>  [1507,]   30   35   34 #>  [1508,]   30   35   33 #>  [1509,]   29   35   32 #>  [1510,]   29   35   32 #>  [1511,]   29   35   33 #>  [1512,]   30   35   32 #>  [1513,]   30   35   32 #>  [1514,]   29   35   33 #>  [1515,]   30   35   33 #>  [1516,]   30   35   33 #>  [1517,]   29   35   32 #>  [1518,]   30   35   32 #>  [1519,]   30   35   33 #>  [1520,]   30   35   32 #>  [1521,]   29   35   32 #>  [1522,]   30   35   32 #>  [1523,]   30   35   32 #>  [1524,]   29   35   32 #>  [1525,]   29   35   34 #>  [1526,]   30   35   33 #>  [1527,]   30   35   32 #>  [1528,]   29   35   33 #>  [1529,]   30   35   32 #>  [1530,]   30   35   32 #>  [1531,]   29   35   32 #>  [1532,]   29   35   32 #>  [1533,]   30   35   32 #>  [1534,]   29   35   33 #>  [1535,]   29   35   33 #>  [1536,]   30   35   32 #>  [1537,]   30   35   33 #>  [1538,]   30   35   33 #>  [1539,]   29   35   34 #>  [1540,]   29   35   32 #>  [1541,]   30   35   34 #>  [1542,]   29   35   33 #>  [1543,]   30   35   34 #>  [1544,]   30   35   32 #>  [1545,]   30   35   33 #>  [1546,]   30   35   33 #>  [1547,]   29   35   34 #>  [1548,]   29   35   34 #>  [1549,]   30   35   33 #>  [1550,]   30   35   32 #>  [1551,]   30   35   34 #>  [1552,]   29   35   33 #>  [1553,]   30   35   32 #>  [1554,]   29   35   34 #>  [1555,]   30   35   33 #>  [1556,]   30   35   33 #>  [1557,]   29   35   33 #>  [1558,]   30   35   34 #>  [1559,]   30   35   33 #>  [1560,]   30   35   32 #>  [1561,]   30   35   32 #>  [1562,]   29   35   33 #>  [1563,]   30   35   32 #>  [1564,]   30   35   33 #>  [1565,]   29   35   33 #>  [1566,]   30   35   34 #>  [1567,]   29   35   34 #>  [1568,]   30   35   33 #>  [1569,]   30   35   33 #>  [1570,]   29   35   32 #>  [1571,]   30   35   34 #>  [1572,]   29   35   33 #>  [1573,]   29   35   33 #>  [1574,]   29   35   34 #>  [1575,]   30   35   32 #>  [1576,]   29   35   34 #>  [1577,]   30   35   33 #>  [1578,]   30   35   34 #>  [1579,]   29   35   33 #>  [1580,]   30   35   32 #>  [1581,]   30   35   32 #>  [1582,]   29   35   33 #>  [1583,]   30   35   32 #>  [1584,]   30   35   32 #>  [1585,]   30   35   34 #>  [1586,]   29   35   32 #>  [1587,]   30   35   32 #>  [1588,]   29   35   32 #>  [1589,]   29   35   33 #>  [1590,]   30   35   34 #>  [1591,]   29   35   33 #>  [1592,]   29   35   32 #>  [1593,]   30   35   32 #>  [1594,]   29   35   33 #>  [1595,]   30   35   32 #>  [1596,]   30   35   33 #>  [1597,]   30   35   33 #>  [1598,]   29   35   34 #>  [1599,]   29   35   34 #>  [1600,]   30   35   33 #>  [1601,]   31   36   35 #>  [1602,]   31   36   35 #>  [1603,]   31   36   35 #>  [1604,]   31   36   35 #>  [1605,]   31   36   35 #>  [1606,]   32   37   36 #>  [1607,]   31   36   35 #>  [1608,]   32   37   36 #>  [1609,]   32   37   36 #>  [1610,]   31   36   35 #>  [1611,]   31   36   35 #>  [1612,]   32   37   36 #>  [1613,]   31   36   35 #>  [1614,]   31   36   35 #>  [1615,]   32   37   36 #>  [1616,]   31   36   35 #>  [1617,]   31   36   35 #>  [1618,]   31   36   35 #>  [1619,]   31   36   35 #>  [1620,]   31   36   35 #>  [1621,]   31   36   35 #>  [1622,]   31   36   35 #>  [1623,]   31   36   35 #>  [1624,]   31   36   35 #>  [1625,]   31   36   35 #>  [1626,]   32   37   36 #>  [1627,]   31   36   35 #>  [1628,]   31   36   35 #>  [1629,]   31   36   35 #>  [1630,]   31   36   35 #>  [1631,]   31   36   35 #>  [1632,]   31   36   35 #>  [1633,]   32   37   36 #>  [1634,]   31   36   35 #>  [1635,]   31   36   35 #>  [1636,]   31   36   35 #>  [1637,]   31   36   35 #>  [1638,]   31   36   35 #>  [1639,]   31   36   35 #>  [1640,]   31   36   35 #>  [1641,]   31   36   35 #>  [1642,]   31   36   35 #>  [1643,]   32   37   36 #>  [1644,]   31   36   35 #>  [1645,]   31   36   35 #>  [1646,]   32   37   36 #>  [1647,]   31   36   35 #>  [1648,]   31   36   35 #>  [1649,]   31   36   35 #>  [1650,]   31   36   35 #>  [1651,]   32   37   36 #>  [1652,]   31   36   35 #>  [1653,]   31   36   35 #>  [1654,]   31   36   35 #>  [1655,]   31   36   35 #>  [1656,]   32   37   36 #>  [1657,]   32   37   36 #>  [1658,]   31   36   35 #>  [1659,]   31   36   35 #>  [1660,]   31   36   35 #>  [1661,]   32   37   36 #>  [1662,]   31   36   35 #>  [1663,]   31   36   35 #>  [1664,]   32   37   36 #>  [1665,]   31   36   35 #>  [1666,]   32   37   36 #>  [1667,]   31   36   35 #>  [1668,]   32   37   36 #>  [1669,]   31   36   35 #>  [1670,]   31   36   35 #>  [1671,]   31   36   35 #>  [1672,]   31   36   35 #>  [1673,]   31   36   35 #>  [1674,]   31   36   35 #>  [1675,]   31   36   35 #>  [1676,]   32   37   36 #>  [1677,]   31   36   35 #>  [1678,]   31   36   35 #>  [1679,]   31   36   35 #>  [1680,]   31   36   35 #>  [1681,]   31   36   35 #>  [1682,]   31   36   35 #>  [1683,]   31   36   35 #>  [1684,]   31   36   35 #>  [1685,]   31   36   35 #>  [1686,]   31   36   35 #>  [1687,]   31   36   35 #>  [1688,]   31   36   35 #>  [1689,]   31   36   35 #>  [1690,]   31   36   35 #>  [1691,]   31   36   35 #>  [1692,]   31   36   35 #>  [1693,]   31   36   35 #>  [1694,]   32   37   36 #>  [1695,]   31   36   35 #>  [1696,]   31   36   35 #>  [1697,]   31   36   35 #>  [1698,]   31   36   35 #>  [1699,]   31   36   35 #>  [1700,]   31   36   35 #>  [1701,]   34   39   37 #>  [1702,]   34   39   39 #>  [1703,]   33   38   38 #>  [1704,]   34   39   37 #>  [1705,]   33   38   37 #>  [1706,]   34   39   37 #>  [1707,]   34   39   39 #>  [1708,]   34   39   37 #>  [1709,]   33   38   37 #>  [1710,]   33   38   37 #>  [1711,]   33   38   37 #>  [1712,]   34   39   37 #>  [1713,]   34   39   39 #>  [1714,]   33   38   37 #>  [1715,]   34   39   37 #>  [1716,]   34   39   38 #>  [1717,]   34   39   37 #>  [1718,]   34   39   39 #>  [1719,]   34   39   38 #>  [1720,]   34   39   37 #>  [1721,]   33   38   39 #>  [1722,]   34   39   39 #>  [1723,]   34   39   39 #>  [1724,]   34   39   39 #>  [1725,]   34   39   37 #>  [1726,]   34   39   37 #>  [1727,]   34   39   37 #>  [1728,]   33   38   37 #>  [1729,]   34   39   37 #>  [1730,]   34   39   39 #>  [1731,]   33   38   39 #>  [1732,]   33   38   37 #>  [1733,]   34   39   37 #>  [1734,]   33   38   38 #>  [1735,]   33   38   38 #>  [1736,]   34   39   39 #>  [1737,]   34   39   38 #>  [1738,]   34   39   37 #>  [1739,]   33   38   39 #>  [1740,]   33   38   39 #>  [1741,]   34   39   37 #>  [1742,]   34   39   37 #>  [1743,]   34   39   37 #>  [1744,]   34   39   39 #>  [1745,]   34   39   37 #>  [1746,]   34   39   37 #>  [1747,]   34   39   39 #>  [1748,]   33   38   37 #>  [1749,]   34   39   38 #>  [1750,]   34   39   37 #>  [1751,]   34   39   37 #>  [1752,]   33   38   37 #>  [1753,]   34   39   37 #>  [1754,]   34   39   39 #>  [1755,]   34   39   37 #>  [1756,]   34   39   37 #>  [1757,]   34   39   37 #>  [1758,]   34   39   37 #>  [1759,]   34   39   39 #>  [1760,]   34   39   37 #>  [1761,]   34   39   37 #>  [1762,]   33   38   39 #>  [1763,]   34   39   37 #>  [1764,]   34   39   37 #>  [1765,]   33   38   37 #>  [1766,]   34   39   37 #>  [1767,]   34   39   37 #>  [1768,]   34   39   37 #>  [1769,]   34   39   37 #>  [1770,]   33   38   39 #>  [1771,]   34   39   37 #>  [1772,]   33   38   37 #>  [1773,]   34   39   37 #>  [1774,]   33   38   37 #>  [1775,]   34   39   37 #>  [1776,]   34   39   37 #>  [1777,]   34   39   38 #>  [1778,]   34   39   37 #>  [1779,]   34   39   39 #>  [1780,]   34   39   39 #>  [1781,]   34   39   37 #>  [1782,]   33   38   37 #>  [1783,]   34   39   39 #>  [1784,]   34   39   37 #>  [1785,]   34   39   37 #>  [1786,]   34   39   37 #>  [1787,]   34   39   37 #>  [1788,]   34   39   37 #>  [1789,]   34   39   37 #>  [1790,]   34   39   37 #>  [1791,]   34   39   37 #>  [1792,]   34   39   37 #>  [1793,]   34   39   39 #>  [1794,]   34   39   37 #>  [1795,]   34   39   39 #>  [1796,]   34   39   37 #>  [1797,]   34   39   37 #>  [1798,]   33   38   39 #>  [1799,]   34   39   37 #>  [1800,]   34   39   38 #>  [1801,]   35   40   40 #>  [1802,]   36   41   41 #>  [1803,]   36   41   41 #>  [1804,]   35   40   40 #>  [1805,]   35   40   40 #>  [1806,]   36   41   41 #>  [1807,]   36   41   41 #>  [1808,]   35   40   40 #>  [1809,]   35   40   40 #>  [1810,]   35   40   40 #>  [1811,]   35   40   40 #>  [1812,]   36   41   41 #>  [1813,]   35   40   40 #>  [1814,]   35   40   40 #>  [1815,]   35   40   40 #>  [1816,]   35   40   40 #>  [1817,]   35   40   40 #>  [1818,]   36   41   41 #>  [1819,]   36   41   41 #>  [1820,]   36   41   41 #>  [1821,]   35   40   40 #>  [1822,]   35   40   40 #>  [1823,]   36   41   41 #>  [1824,]   35   40   40 #>  [1825,]   36   41   41 #>  [1826,]   35   40   40 #>  [1827,]   35   40   40 #>  [1828,]   36   41   41 #>  [1829,]   35   40   40 #>  [1830,]   35   40   40 #>  [1831,]   36   41   41 #>  [1832,]   36   41   41 #>  [1833,]   36   41   41 #>  [1834,]   36   41   41 #>  [1835,]   35   40   40 #>  [1836,]   35   40   40 #>  [1837,]   35   40   40 #>  [1838,]   35   40   40 #>  [1839,]   35   40   40 #>  [1840,]   36   41   41 #>  [1841,]   35   40   40 #>  [1842,]   36   41   41 #>  [1843,]   35   40   40 #>  [1844,]   35   40   40 #>  [1845,]   35   40   40 #>  [1846,]   35   40   40 #>  [1847,]   35   40   40 #>  [1848,]   36   41   41 #>  [1849,]   35   40   40 #>  [1850,]   35   40   40 #>  [1851,]   35   40   40 #>  [1852,]   35   40   40 #>  [1853,]   35   40   40 #>  [1854,]   35   40   40 #>  [1855,]   35   40   40 #>  [1856,]   36   41   41 #>  [1857,]   35   40   40 #>  [1858,]   35   40   40 #>  [1859,]   35   40   40 #>  [1860,]   36   41   41 #>  [1861,]   35   40   40 #>  [1862,]   35   40   40 #>  [1863,]   35   40   40 #>  [1864,]   36   41   41 #>  [1865,]   36   41   41 #>  [1866,]   35   40   40 #>  [1867,]   35   40   40 #>  [1868,]   35   40   40 #>  [1869,]   35   40   40 #>  [1870,]   36   41   41 #>  [1871,]   36   41   41 #>  [1872,]   35   40   40 #>  [1873,]   36   41   41 #>  [1874,]   35   40   40 #>  [1875,]   35   40   40 #>  [1876,]   35   40   40 #>  [1877,]   35   40   40 #>  [1878,]   36   41   41 #>  [1879,]   35   40   40 #>  [1880,]   35   40   40 #>  [1881,]   35   40   40 #>  [1882,]   35   40   40 #>  [1883,]   35   40   40 #>  [1884,]   36   41   41 #>  [1885,]   35   40   40 #>  [1886,]   35   40   40 #>  [1887,]   35   40   40 #>  [1888,]   35   40   40 #>  [1889,]   35   40   40 #>  [1890,]   35   40   40 #>  [1891,]   35   40   40 #>  [1892,]   35   40   40 #>  [1893,]   36   41   41 #>  [1894,]   35   40   40 #>  [1895,]   35   40   40 #>  [1896,]   35   40   40 #>  [1897,]   36   41   41 #>  [1898,]   36   41   41 #>  [1899,]   35   40   40 #>  [1900,]   36   41   41 #>  [1901,]   38   43   42 #>  [1902,]   37   43   42 #>  [1903,]   38   43   42 #>  [1904,]   38   42   42 #>  [1905,]   38   43   42 #>  [1906,]   37   43   42 #>  [1907,]   38   43   42 #>  [1908,]   38   42   42 #>  [1909,]   38   42   42 #>  [1910,]   38   43   42 #>  [1911,]   37   43   42 #>  [1912,]   37   43   42 #>  [1913,]   38   43   42 #>  [1914,]   38   43   42 #>  [1915,]   37   43   42 #>  [1916,]   38   43   42 #>  [1917,]   37   42   42 #>  [1918,]   38   43   42 #>  [1919,]   37   43   42 #>  [1920,]   38   43   42 #>  [1921,]   38   43   42 #>  [1922,]   38   43   42 #>  [1923,]   37   43   42 #>  [1924,]   38   43   42 #>  [1925,]   38   43   42 #>  [1926,]   37   43   42 #>  [1927,]   38   42   42 #>  [1928,]   38   43   42 #>  [1929,]   37   43   42 #>  [1930,]   37   43   42 #>  [1931,]   37   43   42 #>  [1932,]   38   43   42 #>  [1933,]   38   43   42 #>  [1934,]   37   43   42 #>  [1935,]   37   43   42 #>  [1936,]   38   43   42 #>  [1937,]   37   43   42 #>  [1938,]   38   43   42 #>  [1939,]   38   43   42 #>  [1940,]   38   43   42 #>  [1941,]   38   43   42 #>  [1942,]   37   43   42 #>  [1943,]   37   43   42 #>  [1944,]   37   42   42 #>  [1945,]   38   43   42 #>  [1946,]   38   43   42 #>  [1947,]   37   43   42 #>  [1948,]   37   43   42 #>  [1949,]   38   43   42 #>  [1950,]   38   43   42 #>  [1951,]   38   43   42 #>  [1952,]   38   42   42 #>  [1953,]   38   43   42 #>  [1954,]   38   43   42 #>  [1955,]   38   43   42 #>  [1956,]   37   43   42 #>  [1957,]   38   43   42 #>  [1958,]   38   43   42 #>  [1959,]   38   43   42 #>  [1960,]   37   43   42 #>  [1961,]   37   43   42 #>  [1962,]   38   43   42 #>  [1963,]   37   43   42 #>  [1964,]   37   43   42 #>  [1965,]   37   43   42 #>  [1966,]   37   42   42 #>  [1967,]   38   43   42 #>  [1968,]   37   43   42 #>  [1969,]   38   43   42 #>  [1970,]   37   43   42 #>  [1971,]   38   43   42 #>  [1972,]   38   43   42 #>  [1973,]   38   43   42 #>  [1974,]   38   43   42 #>  [1975,]   37   43   42 #>  [1976,]   38   43   42 #>  [1977,]   38   43   42 #>  [1978,]   37   43   42 #>  [1979,]   37   43   42 #>  [1980,]   38   43   42 #>  [1981,]   37   42   42 #>  [1982,]   38   42   42 #>  [1983,]   38   43   42 #>  [1984,]   38   43   42 #>  [1985,]   38   43   42 #>  [1986,]   38   43   42 #>  [1987,]   38   43   42 #>  [1988,]   38   43   42 #>  [1989,]   38   43   42 #>  [1990,]   38   42   42 #>  [1991,]   38   43   42 #>  [1992,]   37   42   42 #>  [1993,]   38   43   42 #>  [1994,]   37   43   42 #>  [1995,]   37   42   42 #>  [1996,]   37   43   42 #>  [1997,]   38   43   42 #>  [1998,]   38   43   42 #>  [1999,]   38   42   42 #>  [2000,]   37   43   42 #>  [2001,]   39   44   44 #>  [2002,]   39   44   44 #>  [2003,]   39   44   44 #>  [2004,]   39   44   43 #>  [2005,]   39   44   44 #>  [2006,]   39   44   44 #>  [2007,]   39   44   44 #>  [2008,]   39   44   43 #>  [2009,]   40   44   43 #>  [2010,]   39   44   43 #>  [2011,]   39   44   44 #>  [2012,]   39   44   44 #>  [2013,]   40   44   44 #>  [2014,]   39   44   44 #>  [2015,]   39   44   44 #>  [2016,]   39   44   44 #>  [2017,]   40   44   44 #>  [2018,]   40   44   44 #>  [2019,]   39   44   44 #>  [2020,]   39   44   43 #>  [2021,]   39   44   44 #>  [2022,]   39   44   44 #>  [2023,]   39   44   44 #>  [2024,]   39   44   44 #>  [2025,]   39   44   44 #>  [2026,]   39   44   44 #>  [2027,]   40   44   44 #>  [2028,]   39   44   44 #>  [2029,]   39   44   44 #>  [2030,]   39   44   43 #>  [2031,]   39   44   44 #>  [2032,]   39   44   44 #>  [2033,]   39   44   44 #>  [2034,]   39   44   44 #>  [2035,]   39   44   44 #>  [2036,]   39   44   44 #>  [2037,]   39   44   44 #>  [2038,]   39   44   44 #>  [2039,]   39   44   44 #>  [2040,]   39   44   44 #>  [2041,]   39   44   44 #>  [2042,]   40   44   44 #>  [2043,]   39   44   43 #>  [2044,]   39   44   44 #>  [2045,]   39   44   44 #>  [2046,]   39   44   44 #>  [2047,]   39   44   44 #>  [2048,]   39   44   44 #>  [2049,]   39   44   44 #>  [2050,]   39   44   44 #>  [2051,]   40   44   43 #>  [2052,]   39   44   44 #>  [2053,]   40   44   43 #>  [2054,]   39   44   44 #>  [2055,]   39   44   44 #>  [2056,]   39   44   43 #>  [2057,]   39   44   44 #>  [2058,]   39   44   44 #>  [2059,]   39   44   44 #>  [2060,]   39   44   43 #>  [2061,]   39   44   44 #>  [2062,]   39   44   44 #>  [2063,]   39   44   44 #>  [2064,]   39   44   43 #>  [2065,]   40   44   44 #>  [2066,]   40   44   44 #>  [2067,]   39   44   43 #>  [2068,]   39   44   44 #>  [2069,]   39   44   44 #>  [2070,]   39   44   44 #>  [2071,]   39   44   44 #>  [2072,]   39   44   44 #>  [2073,]   39   44   44 #>  [2074,]   39   44   44 #>  [2075,]   39   44   44 #>  [2076,]   39   44   44 #>  [2077,]   39   44   44 #>  [2078,]   39   44   43 #>  [2079,]   40   44   44 #>  [2080,]   39   44   44 #>  [2081,]   39   44   44 #>  [2082,]   40   44   44 #>  [2083,]   39   44   44 #>  [2084,]   40   44   44 #>  [2085,]   39   44   43 #>  [2086,]   39   44   44 #>  [2087,]   39   44   44 #>  [2088,]   39   44   44 #>  [2089,]   39   44   43 #>  [2090,]   39   44   44 #>  [2091,]   40   44   43 #>  [2092,]   39   44   44 #>  [2093,]   40   44   44 #>  [2094,]   40   44   44 #>  [2095,]   39   44   43 #>  [2096,]   39   44   44 #>  [2097,]   39   44   44 #>  [2098,]   39   44   44 #>  [2099,]   39   44   44 #>  [2100,]   39   44   44 #>  [2101,]   41   45   46 #>  [2102,]   41   45   46 #>  [2103,]   41   45   46 #>  [2104,]   41   45   46 #>  [2105,]   41   45   46 #>  [2106,]   41   45   46 #>  [2107,]   42   46   45 #>  [2108,]   41   45   46 #>  [2109,]   41   45   46 #>  [2110,]   41   45   46 #>  [2111,]   41   45   46 #>  [2112,]   41   45   46 #>  [2113,]   41   45   46 #>  [2114,]   41   45   46 #>  [2115,]   41   45   46 #>  [2116,]   42   46   45 #>  [2117,]   41   45   46 #>  [2118,]   41   45   46 #>  [2119,]   41   45   46 #>  [2120,]   42   46   45 #>  [2121,]   41   45   46 #>  [2122,]   41   45   46 #>  [2123,]   41   45   46 #>  [2124,]   42   46   45 #>  [2125,]   41   45   46 #>  [2126,]   41   45   46 #>  [2127,]   41   45   46 #>  [2128,]   42   46   45 #>  [2129,]   41   45   46 #>  [2130,]   41   45   46 #>  [2131,]   41   45   46 #>  [2132,]   41   45   46 #>  [2133,]   41   45   46 #>  [2134,]   41   45   46 #>  [2135,]   41   45   46 #>  [2136,]   41   45   46 #>  [2137,]   41   45   46 #>  [2138,]   41   45   46 #>  [2139,]   41   45   46 #>  [2140,]   41   45   46 #>  [2141,]   41   45   46 #>  [2142,]   41   45   46 #>  [2143,]   41   45   46 #>  [2144,]   41   45   46 #>  [2145,]   41   45   46 #>  [2146,]   41   45   46 #>  [2147,]   41   45   46 #>  [2148,]   41   45   46 #>  [2149,]   41   45   46 #>  [2150,]   42   46   45 #>  [2151,]   41   45   46 #>  [2152,]   42   46   45 #>  [2153,]   41   45   46 #>  [2154,]   41   45   46 #>  [2155,]   41   45   46 #>  [2156,]   41   45   46 #>  [2157,]   41   45   46 #>  [2158,]   41   45   46 #>  [2159,]   41   45   46 #>  [2160,]   41   45   46 #>  [2161,]   41   45   46 #>  [2162,]   41   45   46 #>  [2163,]   41   45   46 #>  [2164,]   41   45   46 #>  [2165,]   41   45   46 #>  [2166,]   41   45   46 #>  [2167,]   41   45   46 #>  [2168,]   41   45   46 #>  [2169,]   41   45   46 #>  [2170,]   41   45   46 #>  [2171,]   41   45   46 #>  [2172,]   41   45   46 #>  [2173,]   41   45   46 #>  [2174,]   41   45   46 #>  [2175,]   41   45   46 #>  [2176,]   42   46   45 #>  [2177,]   41   45   46 #>  [2178,]   41   45   46 #>  [2179,]   41   45   46 #>  [2180,]   41   45   46 #>  [2181,]   41   45   46 #>  [2182,]   41   45   46 #>  [2183,]   41   45   46 #>  [2184,]   41   45   46 #>  [2185,]   41   45   46 #>  [2186,]   42   46   45 #>  [2187,]   41   45   46 #>  [2188,]   41   45   46 #>  [2189,]   41   45   46 #>  [2190,]   41   45   46 #>  [2191,]   42   46   45 #>  [2192,]   41   45   46 #>  [2193,]   41   45   46 #>  [2194,]   41   45   46 #>  [2195,]   41   45   46 #>  [2196,]   41   45   46 #>  [2197,]   41   45   46 #>  [2198,]   41   45   46 #>  [2199,]   41   45   46 #>  [2200,]   41   45   46 #>  [2201,]   43   47   47 #>  [2202,]   43   47   47 #>  [2203,]   43   47   47 #>  [2204,]   43   48   48 #>  [2205,]   44   47   47 #>  [2206,]   43   47   47 #>  [2207,]   43   47   47 #>  [2208,]   43   47   47 #>  [2209,]   43   47   47 #>  [2210,]   43   47   47 #>  [2211,]   43   47   47 #>  [2212,]   43   47   47 #>  [2213,]   43   47   47 #>  [2214,]   43   48   48 #>  [2215,]   43   47   47 #>  [2216,]   43   47   47 #>  [2217,]   43   47   47 #>  [2218,]   44   47   47 #>  [2219,]   43   47   47 #>  [2220,]   43   47   47 #>  [2221,]   43   47   47 #>  [2222,]   43   47   47 #>  [2223,]   43   47   47 #>  [2224,]   43   47   47 #>  [2225,]   43   47   47 #>  [2226,]   43   47   47 #>  [2227,]   43   48   48 #>  [2228,]   43   47   47 #>  [2229,]   43   47   47 #>  [2230,]   43   47   47 #>  [2231,]   43   47   47 #>  [2232,]   44   47   47 #>  [2233,]   43   47   47 #>  [2234,]   43   47   47 #>  [2235,]   43   47   47 #>  [2236,]   43   47   47 #>  [2237,]   43   47   47 #>  [2238,]   43   47   47 #>  [2239,]   43   47   47 #>  [2240,]   43   47   47 #>  [2241,]   43   47   47 #>  [2242,]   43   47   47 #>  [2243,]   43   47   47 #>  [2244,]   43   47   47 #>  [2245,]   43   47   47 #>  [2246,]   43   47   47 #>  [2247,]   43   47   47 #>  [2248,]   43   47   47 #>  [2249,]   43   47   47 #>  [2250,]   43   47   47 #>  [2251,]   43   47   47 #>  [2252,]   43   47   47 #>  [2253,]   43   47   47 #>  [2254,]   43   47   47 #>  [2255,]   43   47   47 #>  [2256,]   43   47   47 #>  [2257,]   43   47   47 #>  [2258,]   43   47   47 #>  [2259,]   43   47   47 #>  [2260,]   43   47   47 #>  [2261,]   43   48   48 #>  [2262,]   43   47   47 #>  [2263,]   43   47   47 #>  [2264,]   43   47   47 #>  [2265,]   43   47   47 #>  [2266,]   43   47   47 #>  [2267,]   43   47   47 #>  [2268,]   43   47   47 #>  [2269,]   43   48   48 #>  [2270,]   43   47   47 #>  [2271,]   44   47   47 #>  [2272,]   43   47   47 #>  [2273,]   43   47   47 #>  [2274,]   43   47   47 #>  [2275,]   44   47   47 #>  [2276,]   43   47   47 #>  [2277,]   43   47   47 #>  [2278,]   43   47   47 #>  [2279,]   43   47   47 #>  [2280,]   43   47   47 #>  [2281,]   43   47   47 #>  [2282,]   43   48   48 #>  [2283,]   43   47   47 #>  [2284,]   43   47   47 #>  [2285,]   43   47   47 #>  [2286,]   43   47   47 #>  [2287,]   43   47   47 #>  [2288,]   43   47   47 #>  [2289,]   43   47   47 #>  [2290,]   43   47   47 #>  [2291,]   44   47   47 #>  [2292,]   43   48   48 #>  [2293,]   43   48   48 #>  [2294,]   43   47   47 #>  [2295,]   44   47   47 #>  [2296,]   43   48   48 #>  [2297,]   43   48   48 #>  [2298,]   43   47   47 #>  [2299,]   43   47   47 #>  [2300,]   44   47   47 #>  [2301,]   46   50   50 #>  [2302,]   46   50   50 #>  [2303,]   45   49   49 #>  [2304,]   46   50   50 #>  [2305,]   45   49   49 #>  [2306,]   45   49   49 #>  [2307,]   46   50   50 #>  [2308,]   46   50   50 #>  [2309,]   46   50   50 #>  [2310,]   46   50   50 #>  [2311,]   45   49   49 #>  [2312,]   45   49   49 #>  [2313,]   46   50   50 #>  [2314,]   45   49   49 #>  [2315,]   46   50   50 #>  [2316,]   46   50   50 #>  [2317,]   46   50   50 #>  [2318,]   46   50   50 #>  [2319,]   45   49   49 #>  [2320,]   45   49   49 #>  [2321,]   46   50   50 #>  [2322,]   45   49   49 #>  [2323,]   46   50   50 #>  [2324,]   45   49   49 #>  [2325,]   46   50   50 #>  [2326,]   45   49   49 #>  [2327,]   46   50   50 #>  [2328,]   46   50   50 #>  [2329,]   45   49   49 #>  [2330,]   45   49   49 #>  [2331,]   46   50   50 #>  [2332,]   45   49   49 #>  [2333,]   46   50   50 #>  [2334,]   45   49   49 #>  [2335,]   46   50   50 #>  [2336,]   45   49   49 #>  [2337,]   46   50   50 #>  [2338,]   46   50   50 #>  [2339,]   46   50   50 #>  [2340,]   45   49   49 #>  [2341,]   45   49   49 #>  [2342,]   45   49   49 #>  [2343,]   46   50   50 #>  [2344,]   46   50   50 #>  [2345,]   46   50   50 #>  [2346,]   46   50   50 #>  [2347,]   46   50   50 #>  [2348,]   45   49   49 #>  [2349,]   46   50   50 #>  [2350,]   46   50   50 #>  [2351,]   45   49   49 #>  [2352,]   46   50   50 #>  [2353,]   46   50   50 #>  [2354,]   45   49   49 #>  [2355,]   45   49   49 #>  [2356,]   46   50   50 #>  [2357,]   46   50   50 #>  [2358,]   46   50   50 #>  [2359,]   46   50   50 #>  [2360,]   45   49   49 #>  [2361,]   46   50   50 #>  [2362,]   45   49   49 #>  [2363,]   45   49   49 #>  [2364,]   46   50   50 #>  [2365,]   46   50   50 #>  [2366,]   45   49   49 #>  [2367,]   45   49   49 #>  [2368,]   45   49   49 #>  [2369,]   45   49   49 #>  [2370,]   46   50   50 #>  [2371,]   46   50   50 #>  [2372,]   46   50   50 #>  [2373,]   46   50   50 #>  [2374,]   46   50   50 #>  [2375,]   46   50   50 #>  [2376,]   46   50   50 #>  [2377,]   46   50   50 #>  [2378,]   45   49   49 #>  [2379,]   46   50   50 #>  [2380,]   45   49   49 #>  [2381,]   45   49   49 #>  [2382,]   46   50   50 #>  [2383,]   45   49   49 #>  [2384,]   46   50   50 #>  [2385,]   46   50   50 #>  [2386,]   46   50   50 #>  [2387,]   46   50   50 #>  [2388,]   46   50   50 #>  [2389,]   45   49   49 #>  [2390,]   46   50   50 #>  [2391,]   45   49   49 #>  [2392,]   46   50   50 #>  [2393,]   45   49   49 #>  [2394,]   46   50   50 #>  [2395,]   46   50   50 #>  [2396,]   46   50   50 #>  [2397,]   46   50   50 #>  [2398,]   45   49   49 #>  [2399,]   45   49   49 #>  [2400,]   46   50   50 #>  [2401,]   48   52   52 #>  [2402,]   47   51   51 #>  [2403,]   48   52   52 #>  [2404,]   48   52   52 #>  [2405,]   48   52   52 #>  [2406,]   47   51   51 #>  [2407,]   48   52   52 #>  [2408,]   48   52   52 #>  [2409,]   48   52   52 #>  [2410,]   48   52   52 #>  [2411,]   47   51   51 #>  [2412,]   47   51   51 #>  [2413,]   48   52   52 #>  [2414,]   48   52   52 #>  [2415,]   47   51   51 #>  [2416,]   48   52   52 #>  [2417,]   47   51   51 #>  [2418,]   48   52   52 #>  [2419,]   48   52   52 #>  [2420,]   48   52   52 #>  [2421,]   48   52   52 #>  [2422,]   48   52   52 #>  [2423,]   47   51   51 #>  [2424,]   48   52   52 #>  [2425,]   48   52   52 #>  [2426,]   48   52   52 #>  [2427,]   48   52   52 #>  [2428,]   48   52   52 #>  [2429,]   47   51   51 #>  [2430,]   47   51   51 #>  [2431,]   47   51   51 #>  [2432,]   48   52   52 #>  [2433,]   48   52   52 #>  [2434,]   47   51   51 #>  [2435,]   47   51   51 #>  [2436,]   48   52   52 #>  [2437,]   47   51   51 #>  [2438,]   48   52   52 #>  [2439,]   48   52   52 #>  [2440,]   48   52   52 #>  [2441,]   48   52   52 #>  [2442,]   47   51   51 #>  [2443,]   47   51   51 #>  [2444,]   47   51   51 #>  [2445,]   48   52   52 #>  [2446,]   48   52   52 #>  [2447,]   47   51   51 #>  [2448,]   47   51   51 #>  [2449,]   48   52   52 #>  [2450,]   48   52   52 #>  [2451,]   48   52   52 #>  [2452,]   48   52   52 #>  [2453,]   48   52   52 #>  [2454,]   48   52   52 #>  [2455,]   48   52   52 #>  [2456,]   47   51   51 #>  [2457,]   48   52   52 #>  [2458,]   48   52   52 #>  [2459,]   48   52   52 #>  [2460,]   47   51   51 #>  [2461,]   47   51   51 #>  [2462,]   48   52   52 #>  [2463,]   47   51   51 #>  [2464,]   47   51   51 #>  [2465,]   47   51   51 #>  [2466,]   47   51   51 #>  [2467,]   48   52   52 #>  [2468,]   48   52   52 #>  [2469,]   48   52   52 #>  [2470,]   47   51   51 #>  [2471,]   48   52   52 #>  [2472,]   48   52   52 #>  [2473,]   48   52   52 #>  [2474,]   48   52   52 #>  [2475,]   47   51   51 #>  [2476,]   48   52   52 #>  [2477,]   48   52   52 #>  [2478,]   47   51   51 #>  [2479,]   47   51   51 #>  [2480,]   48   52   52 #>  [2481,]   47   51   51 #>  [2482,]   48   52   52 #>  [2483,]   48   52   52 #>  [2484,]   48   52   52 #>  [2485,]   48   52   52 #>  [2486,]   48   52   52 #>  [2487,]   48   52   52 #>  [2488,]   48   52   52 #>  [2489,]   48   52   52 #>  [2490,]   48   52   52 #>  [2491,]   48   52   52 #>  [2492,]   47   51   51 #>  [2493,]   48   52   52 #>  [2494,]   47   51   51 #>  [2495,]   47   51   51 #>  [2496,]   48   52   52 #>  [2497,]   48   52   52 #>  [2498,]   48   52   52 #>  [2499,]   48   52   52 #>  [2500,]   47   51   51 #>  [2501,]   50   54   54 #>  [2502,]   49   53   53 #>  [2503,]   49   53   53 #>  [2504,]   49   53   53 #>  [2505,]   49   53   53 #>  [2506,]   49   53   53 #>  [2507,]   49   53   53 #>  [2508,]   49   53   53 #>  [2509,]   49   53   53 #>  [2510,]   49   53   53 #>  [2511,]   49   53   53 #>  [2512,]   49   53   53 #>  [2513,]   49   53   53 #>  [2514,]   50   54   54 #>  [2515,]   50   54   54 #>  [2516,]   50   54   54 #>  [2517,]   49   53   53 #>  [2518,]   49   53   53 #>  [2519,]   49   53   53 #>  [2520,]   49   53   53 #>  [2521,]   49   53   53 #>  [2522,]   49   53   53 #>  [2523,]   49   53   53 #>  [2524,]   49   53   53 #>  [2525,]   49   53   53 #>  [2526,]   49   53   53 #>  [2527,]   49   53   53 #>  [2528,]   49   53   53 #>  [2529,]   49   53   53 #>  [2530,]   49   53   53 #>  [2531,]   49   53   53 #>  [2532,]   49   53   53 #>  [2533,]   49   53   53 #>  [2534,]   49   53   53 #>  [2535,]   49   53   53 #>  [2536,]   49   53   53 #>  [2537,]   49   53   53 #>  [2538,]   49   53   53 #>  [2539,]   49   53   53 #>  [2540,]   49   53   53 #>  [2541,]   50   54   54 #>  [2542,]   49   53   53 #>  [2543,]   49   53   53 #>  [2544,]   50   54   54 #>  [2545,]   49   53   53 #>  [2546,]   49   53   53 #>  [2547,]   49   53   53 #>  [2548,]   49   53   53 #>  [2549,]   49   53   53 #>  [2550,]   50   54   54 #>  [2551,]   49   53   53 #>  [2552,]   49   53   53 #>  [2553,]   49   53   53 #>  [2554,]   49   53   53 #>  [2555,]   49   53   53 #>  [2556,]   49   53   53 #>  [2557,]   49   53   53 #>  [2558,]   49   53   53 #>  [2559,]   50   54   54 #>  [2560,]   49   53   53 #>  [2561,]   49   53   53 #>  [2562,]   49   53   53 #>  [2563,]   49   53   53 #>  [2564,]   49   53   53 #>  [2565,]   49   53   53 #>  [2566,]   49   53   53 #>  [2567,]   49   53   53 #>  [2568,]   49   53   53 #>  [2569,]   49   53   53 #>  [2570,]   50   54   54 #>  [2571,]   49   53   53 #>  [2572,]   49   53   53 #>  [2573,]   50   54   54 #>  [2574,]   49   53   53 #>  [2575,]   49   53   53 #>  [2576,]   49   53   53 #>  [2577,]   49   53   53 #>  [2578,]   49   53   53 #>  [2579,]   49   53   53 #>  [2580,]   49   53   53 #>  [2581,]   49   53   53 #>  [2582,]   49   53   53 #>  [2583,]   49   53   53 #>  [2584,]   49   53   53 #>  [2585,]   49   53   53 #>  [2586,]   49   53   53 #>  [2587,]   49   53   53 #>  [2588,]   49   53   53 #>  [2589,]   49   53   53 #>  [2590,]   49   53   53 #>  [2591,]   49   53   53 #>  [2592,]   49   53   53 #>  [2593,]   49   53   53 #>  [2594,]   49   53   53 #>  [2595,]   49   53   53 #>  [2596,]   50   54   54 #>  [2597,]   49   53   53 #>  [2598,]   49   53   53 #>  [2599,]   50   54   54 #>  [2600,]   49   53   53 #>  [2601,]   53   56   55 #>  [2602,]   53   56   55 #>  [2603,]   51   55   56 #>  [2604,]   51   55   55 #>  [2605,]   51   55   55 #>  [2606,]   51   55   56 #>  [2607,]   53   56   55 #>  [2608,]   53   56   55 #>  [2609,]   51   55   55 #>  [2610,]   51   55   55 #>  [2611,]   51   55   55 #>  [2612,]   52   56   56 #>  [2613,]   53   56   55 #>  [2614,]   51   55   55 #>  [2615,]   53   56   55 #>  [2616,]   53   56   55 #>  [2617,]   53   56   55 #>  [2618,]   53   56   55 #>  [2619,]   53   56   56 #>  [2620,]   52   56   56 #>  [2621,]   51   55   55 #>  [2622,]   53   56   55 #>  [2623,]   53   56   55 #>  [2624,]   51   55   55 #>  [2625,]   51   55   56 #>  [2626,]   52   56   55 #>  [2627,]   53   56   55 #>  [2628,]   51   55   56 #>  [2629,]   52   56   55 #>  [2630,]   53   56   55 #>  [2631,]   51   55   55 #>  [2632,]   51   55   55 #>  [2633,]   53   56   56 #>  [2634,]   51   55   56 #>  [2635,]   51   55   55 #>  [2636,]   52   56   55 #>  [2637,]   53   56   55 #>  [2638,]   53   56   55 #>  [2639,]   51   55   55 #>  [2640,]   51   55   55 #>  [2641,]   52   56   55 #>  [2642,]   51   55   55 #>  [2643,]   53   56   55 #>  [2644,]   53   56   55 #>  [2645,]   53   56   55 #>  [2646,]   53   56   55 #>  [2647,]   51   55   55 #>  [2648,]   51   55   55 #>  [2649,]   53   56   55 #>  [2650,]   53   56   55 #>  [2651,]   52   56   55 #>  [2652,]   51   55   55 #>  [2653,]   53   56   55 #>  [2654,]   51   55   55 #>  [2655,]   53   56   55 #>  [2656,]   53   56   55 #>  [2657,]   51   55   55 #>  [2658,]   53   56   55 #>  [2659,]   53   56   55 #>  [2660,]   52   56   56 #>  [2661,]   53   56   55 #>  [2662,]   51   55   55 #>  [2663,]   53   56   55 #>  [2664,]   53   56   55 #>  [2665,]   51   55   56 #>  [2666,]   52   56   55 #>  [2667,]   51   55   55 #>  [2668,]   53   56   55 #>  [2669,]   52   56   55 #>  [2670,]   51   55   56 #>  [2671,]   53   56   55 #>  [2672,]   51   55   55 #>  [2673,]   51   55   56 #>  [2674,]   51   55   55 #>  [2675,]   53   56   55 #>  [2676,]   51   55   55 #>  [2677,]   53   56   55 #>  [2678,]   53   56   55 #>  [2679,]   51   55   55 #>  [2680,]   52   56   55 #>  [2681,]   52   56   55 #>  [2682,]   51   55   55 #>  [2683,]   52   56   55 #>  [2684,]   53   56   55 #>  [2685,]   53   56   55 #>  [2686,]   51   55   55 #>  [2687,]   53   56   55 #>  [2688,]   51   55   55 #>  [2689,]   51   55   55 #>  [2690,]   53   56   55 #>  [2691,]   51   55   55 #>  [2692,]   51   55   55 #>  [2693,]   53   56   56 #>  [2694,]   51   55   55 #>  [2695,]   53   56   55 #>  [2696,]   53   56   55 #>  [2697,]   53   56   56 #>  [2698,]   51   55   56 #>  [2699,]   51   55   55 #>  [2700,]   53   56   55 #>  [2701,]   54   58   58 #>  [2702,]   55   57   57 #>  [2703,]   54   57   57 #>  [2704,]   54   57   57 #>  [2705,]   54   58   58 #>  [2706,]   54   57   57 #>  [2707,]   54   57   57 #>  [2708,]   54   57   57 #>  [2709,]   55   57   57 #>  [2710,]   55   58   58 #>  [2711,]   54   58   58 #>  [2712,]   55   58   58 #>  [2713,]   55   57   57 #>  [2714,]   54   58   58 #>  [2715,]   54   58   58 #>  [2716,]   54   57   57 #>  [2717,]   55   58   58 #>  [2718,]   55   58   58 #>  [2719,]   54   57   57 #>  [2720,]   55   57   57 #>  [2721,]   55   57   57 #>  [2722,]   54   58   58 #>  [2723,]   55   57   57 #>  [2724,]   55   57   57 #>  [2725,]   54   57   57 #>  [2726,]   54   58   58 #>  [2727,]   54   58   58 #>  [2728,]   54   57   57 #>  [2729,]   55   57   57 #>  [2730,]   54   57   57 #>  [2731,]   55   58   58 #>  [2732,]   55   58   58 #>  [2733,]   55   57   57 #>  [2734,]   54   57   57 #>  [2735,]   54   57   57 #>  [2736,]   55   57   57 #>  [2737,]   54   57   57 #>  [2738,]   54   57   57 #>  [2739,]   54   57   57 #>  [2740,]   55   57   57 #>  [2741,]   54   57   57 #>  [2742,]   54   57   57 #>  [2743,]   54   58   58 #>  [2744,]   54   57   57 #>  [2745,]   54   57   57 #>  [2746,]   54   57   57 #>  [2747,]   54   58   58 #>  [2748,]   54   57   57 #>  [2749,]   54   57   57 #>  [2750,]   54   57   57 #>  [2751,]   54   57   57 #>  [2752,]   54   58   58 #>  [2753,]   55   57   57 #>  [2754,]   54   57   57 #>  [2755,]   54   57   57 #>  [2756,]   54   57   57 #>  [2757,]   54   57   57 #>  [2758,]   54   58   58 #>  [2759,]   54   58   58 #>  [2760,]   55   57   57 #>  [2761,]   55   58   58 #>  [2762,]   54   57   57 #>  [2763,]   55   57   57 #>  [2764,]   54   57   57 #>  [2765,]   54   57   57 #>  [2766,]   54   58   58 #>  [2767,]   54   57   57 #>  [2768,]   54   57   57 #>  [2769,]   54   57   57 #>  [2770,]   55   58   58 #>  [2771,]   54   58   58 #>  [2772,]   54   57   57 #>  [2773,]   54   57   57 #>  [2774,]   54   57   57 #>  [2775,]   55   58   58 #>  [2776,]   54   57   57 #>  [2777,]   54   58   58 #>  [2778,]   54   57   57 #>  [2779,]   54   58   58 #>  [2780,]   55   57   57 #>  [2781,]   55   57   57 #>  [2782,]   54   57   57 #>  [2783,]   55   57   57 #>  [2784,]   55   57   57 #>  [2785,]   54   57   57 #>  [2786,]   55   57   57 #>  [2787,]   54   58   58 #>  [2788,]   55   57   57 #>  [2789,]   54   57   57 #>  [2790,]   54   58   58 #>  [2791,]   54   58   58 #>  [2792,]   54   57   57 #>  [2793,]   54   57   57 #>  [2794,]   54   57   57 #>  [2795,]   54   58   58 #>  [2796,]   54   57   57 #>  [2797,]   54   57   57 #>  [2798,]   54   57   57 #>  [2799,]   54   57   57 #>  [2800,]   54   58   58 #>  [2801,]   57   60   60 #>  [2802,]   57   60   60 #>  [2803,]   56   59   59 #>  [2804,]   56   59   59 #>  [2805,]   57   60   60 #>  [2806,]   57   60   60 #>  [2807,]   56   59   59 #>  [2808,]   56   59   59 #>  [2809,]   57   60   60 #>  [2810,]   57   60   60 #>  [2811,]   57   60   60 #>  [2812,]   56   59   59 #>  [2813,]   57   60   60 #>  [2814,]   56   59   59 #>  [2815,]   57   60   60 #>  [2816,]   57   60   60 #>  [2817,]   57   60   60 #>  [2818,]   57   60   60 #>  [2819,]   57   60   60 #>  [2820,]   57   60   60 #>  [2821,]   57   60   60 #>  [2822,]   57   60   60 #>  [2823,]   56   59   59 #>  [2824,]   57   60   60 #>  [2825,]   56   59   59 #>  [2826,]   57   60   60 #>  [2827,]   57   60   60 #>  [2828,]   57   60   60 #>  [2829,]   57   60   60 #>  [2830,]   57   60   60 #>  [2831,]   56   59   59 #>  [2832,]   56   59   59 #>  [2833,]   57   60   60 #>  [2834,]   57   60   60 #>  [2835,]   57   60   60 #>  [2836,]   57   60   60 #>  [2837,]   56   59   59 #>  [2838,]   57   60   60 #>  [2839,]   57   60   60 #>  [2840,]   56   59   59 #>  [2841,]   57   60   60 #>  [2842,]   57   60   60 #>  [2843,]   57   60   60 #>  [2844,]   57   60   60 #>  [2845,]   57   60   60 #>  [2846,]   56   59   59 #>  [2847,]   56   59   59 #>  [2848,]   57   60   60 #>  [2849,]   57   60   60 #>  [2850,]   57   60   60 #>  [2851,]   57   60   60 #>  [2852,]   56   59   59 #>  [2853,]   57   60   60 #>  [2854,]   57   60   60 #>  [2855,]   56   59   59 #>  [2856,]   57   60   60 #>  [2857,]   56   59   59 #>  [2858,]   57   60   60 #>  [2859,]   56   59   59 #>  [2860,]   56   59   59 #>  [2861,]   57   60   60 #>  [2862,]   57   60   60 #>  [2863,]   57   60   60 #>  [2864,]   57   60   60 #>  [2865,]   57   60   60 #>  [2866,]   57   60   60 #>  [2867,]   56   59   59 #>  [2868,]   56   59   59 #>  [2869,]   57   60   60 #>  [2870,]   57   60   60 #>  [2871,]   57   60   60 #>  [2872,]   56   59   59 #>  [2873,]   57   60   60 #>  [2874,]   56   59   59 #>  [2875,]   57   60   60 #>  [2876,]   56   59   59 #>  [2877,]   57   60   60 #>  [2878,]   56   59   59 #>  [2879,]   57   60   60 #>  [2880,]   56   59   59 #>  [2881,]   57   60   60 #>  [2882,]   57   60   60 #>  [2883,]   57   60   60 #>  [2884,]   57   60   60 #>  [2885,]   57   60   60 #>  [2886,]   56   59   59 #>  [2887,]   57   60   60 #>  [2888,]   57   60   60 #>  [2889,]   57   60   60 #>  [2890,]   57   60   60 #>  [2891,]   57   60   60 #>  [2892,]   56   59   59 #>  [2893,]   57   60   60 #>  [2894,]   57   60   60 #>  [2895,]   57   60   60 #>  [2896,]   56   59   59 #>  [2897,]   56   59   59 #>  [2898,]   56   59   59 #>  [2899,]   57   60   60 #>  [2900,]   57   60   60 #>  [2901,]   58   61   61 #>  [2902,]   59   62   62 #>  [2903,]   58   61   61 #>  [2904,]   58   61   61 #>  [2905,]   59   62   62 #>  [2906,]   58   61   61 #>  [2907,]   59   62   62 #>  [2908,]   58   61   61 #>  [2909,]   59   62   62 #>  [2910,]   59   62   62 #>  [2911,]   58   61   61 #>  [2912,]   59   62   62 #>  [2913,]   59   62   62 #>  [2914,]   58   61   61 #>  [2915,]   59   62   62 #>  [2916,]   58   61   61 #>  [2917,]   59   62   62 #>  [2918,]   59   62   62 #>  [2919,]   58   61   61 #>  [2920,]   59   62   62 #>  [2921,]   59   62   62 #>  [2922,]   59   62   62 #>  [2923,]   59   62   62 #>  [2924,]   59   62   62 #>  [2925,]   59   62   62 #>  [2926,]   58   61   61 #>  [2927,]   59   62   62 #>  [2928,]   58   61   61 #>  [2929,]   59   62   62 #>  [2930,]   59   62   62 #>  [2931,]   59   62   62 #>  [2932,]   59   62   62 #>  [2933,]   59   62   62 #>  [2934,]   58   61   61 #>  [2935,]   58   61   61 #>  [2936,]   59   62   62 #>  [2937,]   58   61   61 #>  [2938,]   58   61   61 #>  [2939,]   59   62   62 #>  [2940,]   59   62   62 #>  [2941,]   59   62   62 #>  [2942,]   58   61   61 #>  [2943,]   59   62   62 #>  [2944,]   59   62   62 #>  [2945,]   58   61   61 #>  [2946,]   59   62   62 #>  [2947,]   59   62   62 #>  [2948,]   59   62   62 #>  [2949,]   58   61   61 #>  [2950,]   59   62   62 #>  [2951,]   59   62   62 #>  [2952,]   58   61   61 #>  [2953,]   59   62   62 #>  [2954,]   59   62   62 #>  [2955,]   58   61   61 #>  [2956,]   58   61   61 #>  [2957,]   59   62   62 #>  [2958,]   59   62   62 #>  [2959,]   58   61   61 #>  [2960,]   59   62   62 #>  [2961,]   59   62   62 #>  [2962,]   58   61   61 #>  [2963,]   59   62   62 #>  [2964,]   58   61   61 #>  [2965,]   58   61   61 #>  [2966,]   59   62   62 #>  [2967,]   59   62   62 #>  [2968,]   58   61   61 #>  [2969,]   58   61   61 #>  [2970,]   59   62   62 #>  [2971,]   59   62   62 #>  [2972,]   58   61   61 #>  [2973,]   58   61   61 #>  [2974,]   59   62   62 #>  [2975,]   59   62   62 #>  [2976,]   59   62   62 #>  [2977,]   58   61   61 #>  [2978,]   59   62   62 #>  [2979,]   58   61   61 #>  [2980,]   59   62   62 #>  [2981,]   59   62   62 #>  [2982,]   59   62   62 #>  [2983,]   59   62   62 #>  [2984,]   59   62   62 #>  [2985,]   59   62   62 #>  [2986,]   59   62   62 #>  [2987,]   59   62   62 #>  [2988,]   59   62   62 #>  [2989,]   58   61   61 #>  [2990,]   59   62   62 #>  [2991,]   58   61   61 #>  [2992,]   59   62   62 #>  [2993,]   59   62   62 #>  [2994,]   58   61   61 #>  [2995,]   59   62   62 #>  [2996,]   58   61   61 #>  [2997,]   58   61   61 #>  [2998,]   59   62   62 #>  [2999,]   59   62   62 #>  [3000,]   58   61   61 #>  [3001,]   60   63   64 #>  [3002,]   60   63   64 #>  [3003,]   60   63   64 #>  [3004,]   60   63   64 #>  [3005,]   60   63   64 #>  [3006,]   60   63   64 #>  [3007,]   60   63   64 #>  [3008,]   60   63   64 #>  [3009,]   60   63   64 #>  [3010,]   60   63   64 #>  [3011,]   60   63   64 #>  [3012,]   60   63   64 #>  [3013,]   60   63   64 #>  [3014,]   60   63   64 #>  [3015,]   60   63   64 #>  [3016,]   60   63   64 #>  [3017,]   60   63   64 #>  [3018,]   61   64   63 #>  [3019,]   60   63   64 #>  [3020,]   60   63   64 #>  [3021,]   60   63   64 #>  [3022,]   60   63   64 #>  [3023,]   60   63   64 #>  [3024,]   60   63   64 #>  [3025,]   60   63   64 #>  [3026,]   60   63   64 #>  [3027,]   60   63   64 #>  [3028,]   60   63   64 #>  [3029,]   60   63   64 #>  [3030,]   60   63   64 #>  [3031,]   60   63   64 #>  [3032,]   60   63   64 #>  [3033,]   60   63   64 #>  [3034,]   60   63   64 #>  [3035,]   60   63   64 #>  [3036,]   60   63   64 #>  [3037,]   60   63   64 #>  [3038,]   60   63   64 #>  [3039,]   60   63   64 #>  [3040,]   60   63   64 #>  [3041,]   60   63   64 #>  [3042,]   60   63   64 #>  [3043,]   60   63   64 #>  [3044,]   60   63   64 #>  [3045,]   60   63   64 #>  [3046,]   60   63   64 #>  [3047,]   60   63   64 #>  [3048,]   60   63   64 #>  [3049,]   60   63   64 #>  [3050,]   60   63   64 #>  [3051,]   61   64   63 #>  [3052,]   60   63   64 #>  [3053,]   61   64   63 #>  [3054,]   60   63   64 #>  [3055,]   60   63   64 #>  [3056,]   60   63   64 #>  [3057,]   60   63   64 #>  [3058,]   60   63   64 #>  [3059,]   60   63   64 #>  [3060,]   60   63   64 #>  [3061,]   60   63   64 #>  [3062,]   60   63   64 #>  [3063,]   60   63   64 #>  [3064,]   60   63   64 #>  [3065,]   60   63   64 #>  [3066,]   60   63   64 #>  [3067,]   60   63   64 #>  [3068,]   60   63   64 #>  [3069,]   60   63   64 #>  [3070,]   60   63   64 #>  [3071,]   60   63   64 #>  [3072,]   60   63   64 #>  [3073,]   60   63   64 #>  [3074,]   60   63   64 #>  [3075,]   60   63   64 #>  [3076,]   60   63   64 #>  [3077,]   60   63   64 #>  [3078,]   60   63   64 #>  [3079,]   60   63   64 #>  [3080,]   60   63   64 #>  [3081,]   60   63   64 #>  [3082,]   60   63   64 #>  [3083,]   60   63   64 #>  [3084,]   61   64   63 #>  [3085,]   60   63   64 #>  [3086,]   60   63   64 #>  [3087,]   60   63   64 #>  [3088,]   60   63   64 #>  [3089,]   60   63   64 #>  [3090,]   60   63   64 #>  [3091,]   60   63   64 #>  [3092,]   60   63   64 #>  [3093,]   60   63   64 #>  [3094,]   61   64   63 #>  [3095,]   60   63   64 #>  [3096,]   60   63   64 #>  [3097,]   60   63   64 #>  [3098,]   60   63   64 #>  [3099,]   60   63   64 #>  [3100,]   60   63   64 #>  [3101,]   62   65   66 #>  [3102,]   63   66   65 #>  [3103,]   62   65   67 #>  [3104,]   62   65   66 #>  [3105,]   62   65   66 #>  [3106,]   62   65   67 #>  [3107,]   62   65   66 #>  [3108,]   62   65   66 #>  [3109,]   63   66   65 #>  [3110,]   63   66   65 #>  [3111,]   62   65   66 #>  [3112,]   63   66   65 #>  [3113,]   63   66   65 #>  [3114,]   62   65   66 #>  [3115,]   62   65   66 #>  [3116,]   62   65   66 #>  [3117,]   63   66   65 #>  [3118,]   62   65   67 #>  [3119,]   62   65   67 #>  [3120,]   62   65   67 #>  [3121,]   63   66   65 #>  [3122,]   62   65   66 #>  [3123,]   62   65   66 #>  [3124,]   63   66   65 #>  [3125,]   62   65   67 #>  [3126,]   62   65   66 #>  [3127,]   62   65   66 #>  [3128,]   62   65   67 #>  [3129,]   63   66   65 #>  [3130,]   62   65   66 #>  [3131,]   62   65   66 #>  [3132,]   63   66   65 #>  [3133,]   63   66   65 #>  [3134,]   62   65   67 #>  [3135,]   62   65   66 #>  [3136,]   62   65   66 #>  [3137,]   62   65   66 #>  [3138,]   62   65   66 #>  [3139,]   62   65   66 #>  [3140,]   63   66   65 #>  [3141,]   62   65   66 #>  [3142,]   62   65   66 #>  [3143,]   62   65   66 #>  [3144,]   62   65   66 #>  [3145,]   62   65   66 #>  [3146,]   62   65   66 #>  [3147,]   62   65   66 #>  [3148,]   62   65   66 #>  [3149,]   62   65   66 #>  [3150,]   62   65   66 #>  [3151,]   62   65   66 #>  [3152,]   62   65   66 #>  [3153,]   63   66   65 #>  [3154,]   62   65   66 #>  [3155,]   62   65   66 #>  [3156,]   62   65   66 #>  [3157,]   62   65   66 #>  [3158,]   62   65   66 #>  [3159,]   62   65   66 #>  [3160,]   63   66   65 #>  [3161,]   63   66   65 #>  [3162,]   62   65   66 #>  [3163,]   63   66   65 #>  [3164,]   62   65   66 #>  [3165,]   62   65   67 #>  [3166,]   62   65   66 #>  [3167,]   62   65   66 #>  [3168,]   62   65   66 #>  [3169,]   62   65   66 #>  [3170,]   63   66   65 #>  [3171,]   62   65   66 #>  [3172,]   62   65   66 #>  [3173,]   62   65   67 #>  [3174,]   62   65   66 #>  [3175,]   63   66   65 #>  [3176,]   62   65   66 #>  [3177,]   62   65   66 #>  [3178,]   62   65   66 #>  [3179,]   62   65   66 #>  [3180,]   63   66   65 #>  [3181,]   63   66   65 #>  [3182,]   62   65   66 #>  [3183,]   63   66   65 #>  [3184,]   62   65   67 #>  [3185,]   62   65   66 #>  [3186,]   63   66   65 #>  [3187,]   62   65   66 #>  [3188,]   62   65   66 #>  [3189,]   62   65   66 #>  [3190,]   62   65   66 #>  [3191,]   62   65   66 #>  [3192,]   62   65   66 #>  [3193,]   62   65   67 #>  [3194,]   62   65   66 #>  [3195,]   62   65   66 #>  [3196,]   62   65   66 #>  [3197,]   62   65   67 #>  [3198,]   62   65   67 #>  [3199,]   62   65   66 #>  [3200,]   62   65   66 #>  [3201,]   64   67   68 #>  [3202,]   64   67   68 #>  [3203,]   64   67   68 #>  [3204,]   64   67   68 #>  [3205,]   64   67   68 #>  [3206,]   64   67   68 #>  [3207,]   64   67   68 #>  [3208,]   64   67   68 #>  [3209,]   65   68   69 #>  [3210,]   64   67   68 #>  [3211,]   64   67   68 #>  [3212,]   64   67   68 #>  [3213,]   65   68   69 #>  [3214,]   64   67   68 #>  [3215,]   64   67   68 #>  [3216,]   64   67   68 #>  [3217,]   65   68   69 #>  [3218,]   65   68   69 #>  [3219,]   64   67   68 #>  [3220,]   64   67   68 #>  [3221,]   64   67   68 #>  [3222,]   64   67   68 #>  [3223,]   64   67   68 #>  [3224,]   64   67   68 #>  [3225,]   64   67   68 #>  [3226,]   64   67   68 #>  [3227,]   65   68   69 #>  [3228,]   64   67   68 #>  [3229,]   64   67   68 #>  [3230,]   64   67   68 #>  [3231,]   64   67   68 #>  [3232,]   64   67   68 #>  [3233,]   64   67   68 #>  [3234,]   64   67   68 #>  [3235,]   64   67   68 #>  [3236,]   64   67   68 #>  [3237,]   64   67   68 #>  [3238,]   64   67   68 #>  [3239,]   64   67   68 #>  [3240,]   64   67   68 #>  [3241,]   64   67   68 #>  [3242,]   65   68   69 #>  [3243,]   64   67   68 #>  [3244,]   64   67   68 #>  [3245,]   64   67   68 #>  [3246,]   64   67   68 #>  [3247,]   64   67   68 #>  [3248,]   64   67   68 #>  [3249,]   64   67   68 #>  [3250,]   64   67   68 #>  [3251,]   65   68   69 #>  [3252,]   64   67   68 #>  [3253,]   65   68   69 #>  [3254,]   64   67   68 #>  [3255,]   64   67   68 #>  [3256,]   64   67   68 #>  [3257,]   64   67   68 #>  [3258,]   64   67   68 #>  [3259,]   64   67   68 #>  [3260,]   64   67   68 #>  [3261,]   64   67   68 #>  [3262,]   64   67   68 #>  [3263,]   64   67   68 #>  [3264,]   64   67   68 #>  [3265,]   65   68   69 #>  [3266,]   65   68   69 #>  [3267,]   64   67   68 #>  [3268,]   64   67   68 #>  [3269,]   64   67   68 #>  [3270,]   64   67   68 #>  [3271,]   64   67   68 #>  [3272,]   64   67   68 #>  [3273,]   64   67   68 #>  [3274,]   64   67   68 #>  [3275,]   64   67   68 #>  [3276,]   64   67   68 #>  [3277,]   64   67   68 #>  [3278,]   64   67   68 #>  [3279,]   65   68   69 #>  [3280,]   64   67   68 #>  [3281,]   64   67   68 #>  [3282,]   65   68   69 #>  [3283,]   64   67   68 #>  [3284,]   65   68   69 #>  [3285,]   64   67   68 #>  [3286,]   64   67   68 #>  [3287,]   64   67   68 #>  [3288,]   64   67   68 #>  [3289,]   64   67   68 #>  [3290,]   64   67   68 #>  [3291,]   65   68   69 #>  [3292,]   64   67   68 #>  [3293,]   65   68   69 #>  [3294,]   65   68   69 #>  [3295,]   64   67   68 #>  [3296,]   64   67   68 #>  [3297,]   64   67   68 #>  [3298,]   64   67   68 #>  [3299,]   64   67   68 #>  [3300,]   64   67   68 #>  [3301,]   67   70   71 #>  [3302,]   67   70   71 #>  [3303,]   67   70   71 #>  [3304,]   66   69   70 #>  [3305,]   67   70   71 #>  [3306,]   67   70   71 #>  [3307,]   67   70   71 #>  [3308,]   66   69   70 #>  [3309,]   66   69   70 #>  [3310,]   66   69   70 #>  [3311,]   67   70   71 #>  [3312,]   67   70   71 #>  [3313,]   67   70   71 #>  [3314,]   67   70   71 #>  [3315,]   67   70   71 #>  [3316,]   67   70   71 #>  [3317,]   67   70   71 #>  [3318,]   67   70   71 #>  [3319,]   67   70   71 #>  [3320,]   67   70   71 #>  [3321,]   67   70   71 #>  [3322,]   67   70   71 #>  [3323,]   67   70   71 #>  [3324,]   67   70   71 #>  [3325,]   67   70   71 #>  [3326,]   67   70   71 #>  [3327,]   67   70   71 #>  [3328,]   67   70   71 #>  [3329,]   67   70   71 #>  [3330,]   67   70   71 #>  [3331,]   67   70   71 #>  [3332,]   67   70   71 #>  [3333,]   67   70   71 #>  [3334,]   67   70   71 #>  [3335,]   67   70   71 #>  [3336,]   67   70   71 #>  [3337,]   67   70   71 #>  [3338,]   67   70   71 #>  [3339,]   67   70   71 #>  [3340,]   67   70   71 #>  [3341,]   67   70   71 #>  [3342,]   67   70   71 #>  [3343,]   66   69   70 #>  [3344,]   67   70   71 #>  [3345,]   67   70   71 #>  [3346,]   67   70   71 #>  [3347,]   67   70   71 #>  [3348,]   67   70   71 #>  [3349,]   67   70   71 #>  [3350,]   67   70   71 #>  [3351,]   66   69   70 #>  [3352,]   67   70   71 #>  [3353,]   67   70   71 #>  [3354,]   67   70   71 #>  [3355,]   67   70   71 #>  [3356,]   67   70   71 #>  [3357,]   67   70   71 #>  [3358,]   67   70   71 #>  [3359,]   67   70   71 #>  [3360,]   66   69   70 #>  [3361,]   67   70   71 #>  [3362,]   67   70   71 #>  [3363,]   67   70   71 #>  [3364,]   66   69   70 #>  [3365,]   67   70   71 #>  [3366,]   67   70   71 #>  [3367,]   66   69   70 #>  [3368,]   67   70   71 #>  [3369,]   67   70   71 #>  [3370,]   67   70   71 #>  [3371,]   67   70   71 #>  [3372,]   67   70   71 #>  [3373,]   67   70   71 #>  [3374,]   67   70   71 #>  [3375,]   67   70   71 #>  [3376,]   67   70   71 #>  [3377,]   67   70   71 #>  [3378,]   67   70   71 #>  [3379,]   67   70   71 #>  [3380,]   67   70   71 #>  [3381,]   67   70   71 #>  [3382,]   67   70   71 #>  [3383,]   67   70   71 #>  [3384,]   67   70   71 #>  [3385,]   66   69   70 #>  [3386,]   67   70   71 #>  [3387,]   67   70   71 #>  [3388,]   67   70   71 #>  [3389,]   67   70   71 #>  [3390,]   67   70   71 #>  [3391,]   66   69   70 #>  [3392,]   67   70   71 #>  [3393,]   67   70   71 #>  [3394,]   67   70   71 #>  [3395,]   66   69   70 #>  [3396,]   67   70   71 #>  [3397,]   67   70   71 #>  [3398,]   67   70   71 #>  [3399,]   67   70   71 #>  [3400,]   67   70   71 #>  [3401,]   68   73   73 #>  [3402,]   68   73   73 #>  [3403,]   68   72   73 #>  [3404,]   69   71   72 #>  [3405,]   68   73   73 #>  [3406,]   69   71   72 #>  [3407,]   68   72   73 #>  [3408,]   68   72   73 #>  [3409,]   69   71   72 #>  [3410,]   69   71   72 #>  [3411,]   69   71   72 #>  [3412,]   69   71   72 #>  [3413,]   68   72   73 #>  [3414,]   69   71   72 #>  [3415,]   69   71   72 #>  [3416,]   68   72   73 #>  [3417,]   68   72   73 #>  [3418,]   69   71   72 #>  [3419,]   69   71   72 #>  [3420,]   68   72   73 #>  [3421,]   69   71   72 #>  [3422,]   68   72   73 #>  [3423,]   68   73   73 #>  [3424,]   68   72   73 #>  [3425,]   68   72   73 #>  [3426,]   69   71   72 #>  [3427,]   69   71   72 #>  [3428,]   68   73   73 #>  [3429,]   68   72   73 #>  [3430,]   69   71   72 #>  [3431,]   69   71   72 #>  [3432,]   69   71   72 #>  [3433,]   69   71   72 #>  [3434,]   68   73   73 #>  [3435,]   68   73   73 #>  [3436,]   69   71   72 #>  [3437,]   68   73   73 #>  [3438,]   69   71   72 #>  [3439,]   68   72   73 #>  [3440,]   68   72   73 #>  [3441,]   69   71   72 #>  [3442,]   69   71   72 #>  [3443,]   68   72   73 #>  [3444,]   68   72   73 #>  [3445,]   68   72   73 #>  [3446,]   68   72   73 #>  [3447,]   68   72   73 #>  [3448,]   69   71   72 #>  [3449,]   68   72   73 #>  [3450,]   68   72   73 #>  [3451,]   68   72   73 #>  [3452,]   68   73   73 #>  [3453,]   68   72   73 #>  [3454,]   68   72   73 #>  [3455,]   68   72   73 #>  [3456,]   68   72   73 #>  [3457,]   68   73   73 #>  [3458,]   69   71   72 #>  [3459,]   68   72   73 #>  [3460,]   69   71   72 #>  [3461,]   69   71   72 #>  [3462,]   69   71   72 #>  [3463,]   68   72   73 #>  [3464,]   68   73   73 #>  [3465,]   68   72   73 #>  [3466,]   68   72   73 #>  [3467,]   68   73   73 #>  [3468,]   69   71   72 #>  [3469,]   69   71   72 #>  [3470,]   68   72   73 #>  [3471,]   68   73   73 #>  [3472,]   68   72   73 #>  [3473,]   68   73   73 #>  [3474,]   69   71   72 #>  [3475,]   69   71   72 #>  [3476,]   68   72   73 #>  [3477,]   68   72   73 #>  [3478,]   68   72   73 #>  [3479,]   68   72   73 #>  [3480,]   68   73   73 #>  [3481,]   68   73   73 #>  [3482,]   69   71   72 #>  [3483,]   68   72   73 #>  [3484,]   68   72   73 #>  [3485,]   69   71   72 #>  [3486,]   68   72   73 #>  [3487,]   68   73   73 #>  [3488,]   68   73   73 #>  [3489,]   68   72   73 #>  [3490,]   68   72   73 #>  [3491,]   68   73   73 #>  [3492,]   69   71   72 #>  [3493,]   69   71   72 #>  [3494,]   68   72   73 #>  [3495,]   68   73   73 #>  [3496,]   69   71   72 #>  [3497,]   69   71   72 #>  [3498,]   68   72   73 #>  [3499,]   69   71   72 #>  [3500,]   68   72   73 #>  [3501,]   70   76   75 #>  [3502,]   71   74   74 #>  [3503,]   70   75   74 #>  [3504,]   70   76   75 #>  [3505,]   70   76   75 #>  [3506,]   70   76   75 #>  [3507,]   70   76   74 #>  [3508,]   70   76   75 #>  [3509,]   71   74   75 #>  [3510,]   71   74   74 #>  [3511,]   70   75   75 #>  [3512,]   71   74   75 #>  [3513,]   71   74   74 #>  [3514,]   70   75   75 #>  [3515,]   70   76   75 #>  [3516,]   70   76   74 #>  [3517,]   71   74   74 #>  [3518,]   70   76   74 #>  [3519,]   70   75   74 #>  [3520,]   70   75   75 #>  [3521,]   71   74   74 #>  [3522,]   70   75   74 #>  [3523,]   70   76   74 #>  [3524,]   71   74   74 #>  [3525,]   70   76   74 #>  [3526,]   70   75   75 #>  [3527,]   70   76   74 #>  [3528,]   70   76   75 #>  [3529,]   71   74   74 #>  [3530,]   70   75   74 #>  [3531,]   70   76   74 #>  [3532,]   71   74   74 #>  [3533,]   71   74   75 #>  [3534,]   70   75   74 #>  [3535,]   70   76   74 #>  [3536,]   70   75   74 #>  [3537,]   70   76   74 #>  [3538,]   70   76   75 #>  [3539,]   70   76   74 #>  [3540,]   71   74   74 #>  [3541,]   70   75   75 #>  [3542,]   70   75   75 #>  [3543,]   70   76   75 #>  [3544,]   70   76   74 #>  [3545,]   70   76   75 #>  [3546,]   70   76   75 #>  [3547,]   70   76   74 #>  [3548,]   70   75   74 #>  [3549,]   70   76   74 #>  [3550,]   70   76   75 #>  [3551,]   70   75   75 #>  [3552,]   70   76   75 #>  [3553,]   71   74   75 #>  [3554,]   70   75   74 #>  [3555,]   70   76   75 #>  [3556,]   70   76   75 #>  [3557,]   70   76   75 #>  [3558,]   70   76   75 #>  [3559,]   70   76   74 #>  [3560,]   71   74   75 #>  [3561,]   71   74   75 #>  [3562,]   70   75   74 #>  [3563,]   71   74   75 #>  [3564,]   70   76   75 #>  [3565,]   70   76   75 #>  [3566,]   70   75   75 #>  [3567,]   70   75   75 #>  [3568,]   70   75   75 #>  [3569,]   70   75   74 #>  [3570,]   71   74   74 #>  [3571,]   70   76   75 #>  [3572,]   70   76   75 #>  [3573,]   70   76   75 #>  [3574,]   70   76   75 #>  [3575,]   71   74   75 #>  [3576,]   70   76   75 #>  [3577,]   70   76   74 #>  [3578,]   70   75   75 #>  [3579,]   70   76   74 #>  [3580,]   71   74   74 #>  [3581,]   71   74   75 #>  [3582,]   70   76   74 #>  [3583,]   71   74   74 #>  [3584,]   70   76   75 #>  [3585,]   70   76   74 #>  [3586,]   71   74   74 #>  [3587,]   70   76   75 #>  [3588,]   70   76   75 #>  [3589,]   70   75   75 #>  [3590,]   70   76   75 #>  [3591,]   70   75   75 #>  [3592,]   70   76   75 #>  [3593,]   70   75   74 #>  [3594,]   70   76   75 #>  [3595,]   70   76   74 #>  [3596,]   70   76   75 #>  [3597,]   70   76   75 #>  [3598,]   70   75   74 #>  [3599,]   70   75   74 #>  [3600,]   70   76   74 #>  [3601,]   73   78   77 #>  [3602,]   72   77   77 #>  [3603,]   72   77   76 #>  [3604,]   73   78   76 #>  [3605,]   73   78   76 #>  [3606,]   73   78   77 #>  [3607,]   72   77   76 #>  [3608,]   73   78   76 #>  [3609,]   73   78   76 #>  [3610,]   72   77   76 #>  [3611,]   73   78   77 #>  [3612,]   73   78   76 #>  [3613,]   72   77   77 #>  [3614,]   73   78   77 #>  [3615,]   73   78   77 #>  [3616,]   72   77   77 #>  [3617,]   72   77   77 #>  [3618,]   72   77   76 #>  [3619,]   72   77   77 #>  [3620,]   73   78   76 #>  [3621,]   72   77   77 #>  [3622,]   72   77   77 #>  [3623,]   72   77   76 #>  [3624,]   72   77   76 #>  [3625,]   72   77   76 #>  [3626,]   73   78   77 #>  [3627,]   72   77   77 #>  [3628,]   73   78   76 #>  [3629,]   72   77   77 #>  [3630,]   72   77   76 #>  [3631,]   72   77   76 #>  [3632,]   72   77   76 #>  [3633,]   73   78   77 #>  [3634,]   72   77   76 #>  [3635,]   72   77   77 #>  [3636,]   72   77   76 #>  [3637,]   72   77   77 #>  [3638,]   73   78   76 #>  [3639,]   72   77   76 #>  [3640,]   72   77   76 #>  [3641,]   73   78   77 #>  [3642,]   73   78   76 #>  [3643,]   73   78   76 #>  [3644,]   72   77   77 #>  [3645,]   73   78   76 #>  [3646,]   73   78   76 #>  [3647,]   72   77   77 #>  [3648,]   72   77   76 #>  [3649,]   72   77   76 #>  [3650,]   73   78   77 #>  [3651,]   73   78   76 #>  [3652,]   73   78   77 #>  [3653,]   73   78   76 #>  [3654,]   72   77   76 #>  [3655,]   73   78   77 #>  [3656,]   73   78   76 #>  [3657,]   73   78   76 #>  [3658,]   73   78   77 #>  [3659,]   72   77   77 #>  [3660,]   73   78   76 #>  [3661,]   73   78   77 #>  [3662,]   72   77   76 #>  [3663,]   73   78   76 #>  [3664,]   73   78   76 #>  [3665,]   73   78   76 #>  [3666,]   73   78   76 #>  [3667,]   73   78   76 #>  [3668,]   73   78   77 #>  [3669,]   72   77   77 #>  [3670,]   72   77   77 #>  [3671,]   73   78   77 #>  [3672,]   73   78   76 #>  [3673,]   73   78   77 #>  [3674,]   73   78   77 #>  [3675,]   73   78   77 #>  [3676,]   73   78   77 #>  [3677,]   72   77   77 #>  [3678,]   73   78   76 #>  [3679,]   72   77   77 #>  [3680,]   72   77   76 #>  [3681,]   73   78   77 #>  [3682,]   72   77   76 #>  [3683,]   72   77   77 #>  [3684,]   73   78   77 #>  [3685,]   72   77   76 #>  [3686,]   72   77   77 #>  [3687,]   73   78   77 #>  [3688,]   73   78   76 #>  [3689,]   73   78   76 #>  [3690,]   73   78   77 #>  [3691,]   73   78   76 #>  [3692,]   73   78   77 #>  [3693,]   72   77   77 #>  [3694,]   73   78   77 #>  [3695,]   72   77   76 #>  [3696,]   73   78   77 #>  [3697,]   73   78   77 #>  [3698,]   72   77   77 #>  [3699,]   73   78   77 #>  [3700,]   72   77   77 #>  [3701,]   75   80   78 #>  [3702,]   74   79   78 #>  [3703,]   74   79   78 #>  [3704,]   74   79   79 #>  [3705,]   75   80   78 #>  [3706,]   74   79   78 #>  [3707,]   74   79   78 #>  [3708,]   74   79   78 #>  [3709,]   74   79   78 #>  [3710,]   74   79   78 #>  [3711,]   74   79   79 #>  [3712,]   74   79   79 #>  [3713,]   74   79   78 #>  [3714,]   75   80   79 #>  [3715,]   75   80   79 #>  [3716,]   74   79   78 #>  [3717,]   74   79   78 #>  [3718,]   75   80   78 #>  [3719,]   74   79   79 #>  [3720,]   74   79   78 #>  [3721,]   74   79   79 #>  [3722,]   74   79   78 #>  [3723,]   74   79   78 #>  [3724,]   74   79   78 #>  [3725,]   74   79   78 #>  [3726,]   75   80   78 #>  [3727,]   75   80   79 #>  [3728,]   74   79   78 #>  [3729,]   74   79   78 #>  [3730,]   74   79   78 #>  [3731,]   75   80   78 #>  [3732,]   75   80   78 #>  [3733,]   74   79   78 #>  [3734,]   74   79   78 #>  [3735,]   74   79   78 #>  [3736,]   74   79   78 #>  [3737,]   74   79   78 #>  [3738,]   74   79   79 #>  [3739,]   74   79   78 #>  [3740,]   74   79   78 #>  [3741,]   74   79   79 #>  [3742,]   74   79   79 #>  [3743,]   75   80   78 #>  [3744,]   74   79   78 #>  [3745,]   74   79   78 #>  [3746,]   74   79   78 #>  [3747,]   74   79   78 #>  [3748,]   74   79   79 #>  [3749,]   74   79   78 #>  [3750,]   74   79   78 #>  [3751,]   74   79   78 #>  [3752,]   74   79   78 #>  [3753,]   74   79   78 #>  [3754,]   74   79   78 #>  [3755,]   74   79   78 #>  [3756,]   74   79   78 #>  [3757,]   74   79   78 #>  [3758,]   75   80   78 #>  [3759,]   75   80   78 #>  [3760,]   74   79   78 #>  [3761,]   75   80   79 #>  [3762,]   74   79   78 #>  [3763,]   74   79   78 #>  [3764,]   74   79   78 #>  [3765,]   74   79   78 #>  [3766,]   75   80   78 #>  [3767,]   74   79   78 #>  [3768,]   74   79   79 #>  [3769,]   74   79   79 #>  [3770,]   75   80   78 #>  [3771,]   75   80   78 #>  [3772,]   74   79   78 #>  [3773,]   74   79   78 #>  [3774,]   74   79   79 #>  [3775,]   75   80   79 #>  [3776,]   74   79   78 #>  [3777,]   74   79   78 #>  [3778,]   74   79   78 #>  [3779,]   75   80   78 #>  [3780,]   74   79   78 #>  [3781,]   74   79   78 #>  [3782,]   74   79   79 #>  [3783,]   74   79   78 #>  [3784,]   74   79   78 #>  [3785,]   74   79   78 #>  [3786,]   74   79   78 #>  [3787,]   75   80   78 #>  [3788,]   74   79   78 #>  [3789,]   74   79   78 #>  [3790,]   74   79   78 #>  [3791,]   75   80   78 #>  [3792,]   74   79   79 #>  [3793,]   74   79   79 #>  [3794,]   74   79   78 #>  [3795,]   75   80   78 #>  [3796,]   74   79   79 #>  [3797,]   74   79   79 #>  [3798,]   74   79   78 #>  [3799,]   74   79   78 #>  [3800,]   75   80   78 #>  [3801,]   76   82   81 #>  [3802,]   76   82   81 #>  [3803,]   77   81   80 #>  [3804,]   76   82   81 #>  [3805,]   76   82   81 #>  [3806,]   77   81   80 #>  [3807,]   76   82   81 #>  [3808,]   76   82   81 #>  [3809,]   76   82   81 #>  [3810,]   76   82   81 #>  [3811,]   76   82   81 #>  [3812,]   77   82   81 #>  [3813,]   76   82   81 #>  [3814,]   76   82   81 #>  [3815,]   76   82   81 #>  [3816,]   76   82   81 #>  [3817,]   76   82   81 #>  [3818,]   76   82   81 #>  [3819,]   77   81   80 #>  [3820,]   77   82   81 #>  [3821,]   76   82   81 #>  [3822,]   76   82   81 #>  [3823,]   76   82   81 #>  [3824,]   76   82   81 #>  [3825,]   77   82   81 #>  [3826,]   76   82   81 #>  [3827,]   76   82   81 #>  [3828,]   77   82   81 #>  [3829,]   76   82   81 #>  [3830,]   76   82   81 #>  [3831,]   76   82   81 #>  [3832,]   76   82   81 #>  [3833,]   77   82   81 #>  [3834,]   77   81   80 #>  [3835,]   76   82   81 #>  [3836,]   76   82   81 #>  [3837,]   76   81   80 #>  [3838,]   76   81   80 #>  [3839,]   76   82   81 #>  [3840,]   76   82   81 #>  [3841,]   76   82   81 #>  [3842,]   76   82   81 #>  [3843,]   76   82   81 #>  [3844,]   76   82   81 #>  [3845,]   76   81   80 #>  [3846,]   76   82   81 #>  [3847,]   76   82   81 #>  [3848,]   76   82   81 #>  [3849,]   76   81   80 #>  [3850,]   76   82   81 #>  [3851,]   76   82   81 #>  [3852,]   76   81   80 #>  [3853,]   76   82   81 #>  [3854,]   76   82   81 #>  [3855,]   76   82   81 #>  [3856,]   76   82   81 #>  [3857,]   76   82   81 #>  [3858,]   76   82   81 #>  [3859,]   76   82   81 #>  [3860,]   77   82   81 #>  [3861,]   76   82   81 #>  [3862,]   76   82   81 #>  [3863,]   76   82   81 #>  [3864,]   76   82   81 #>  [3865,]   77   82   81 #>  [3866,]   76   82   81 #>  [3867,]   76   82   81 #>  [3868,]   76   81   80 #>  [3869,]   76   82   81 #>  [3870,]   77   82   81 #>  [3871,]   76   82   81 #>  [3872,]   76   81   80 #>  [3873,]   77   82   81 #>  [3874,]   76   82   81 #>  [3875,]   76   82   81 #>  [3876,]   76   82   81 #>  [3877,]   76   82   81 #>  [3878,]   76   82   81 #>  [3879,]   76   82   81 #>  [3880,]   76   82   81 #>  [3881,]   76   82   81 #>  [3882,]   76   82   81 #>  [3883,]   76   82   81 #>  [3884,]   76   82   81 #>  [3885,]   76   82   81 #>  [3886,]   76   82   81 #>  [3887,]   76   82   81 #>  [3888,]   76   82   81 #>  [3889,]   76   82   81 #>  [3890,]   76   82   81 #>  [3891,]   76   82   81 #>  [3892,]   76   82   81 #>  [3893,]   77   82   81 #>  [3894,]   76   82   81 #>  [3895,]   76   82   81 #>  [3896,]   76   81   80 #>  [3897,]   77   82   81 #>  [3898,]   77   82   81 #>  [3899,]   76   82   81 #>  [3900,]   76   82   81 #>  [3901,]   78   83   84 #>  [3902,]   79   84   82 #>  [3903,]   79   84   82 #>  [3904,]   78   83   84 #>  [3905,]   78   83   84 #>  [3906,]   79   84   82 #>  [3907,]   79   84   82 #>  [3908,]   78   83   83 #>  [3909,]   78   83   84 #>  [3910,]   79   84   82 #>  [3911,]   78   83   84 #>  [3912,]   79   84   82 #>  [3913,]   78   83   83 #>  [3914,]   78   83   84 #>  [3915,]   78   83   84 #>  [3916,]   78   83   83 #>  [3917,]   78   83   83 #>  [3918,]   79   84   82 #>  [3919,]   79   85   82 #>  [3920,]   79   85   82 #>  [3921,]   78   83   84 #>  [3922,]   78   83   83 #>  [3923,]   79   84   82 #>  [3924,]   78   83   83 #>  [3925,]   79   84   82 #>  [3926,]   78   83   84 #>  [3927,]   78   83   84 #>  [3928,]   79   84   82 #>  [3929,]   79   85   82 #>  [3930,]   78   83   84 #>  [3931,]   79   84   82 #>  [3932,]   79   84   82 #>  [3933,]   79   84   82 #>  [3934,]   79   84   82 #>  [3935,]   78   83   84 #>  [3936,]   78   83   84 #>  [3937,]   78   83   84 #>  [3938,]   78   83   84 #>  [3939,]   79   84   82 #>  [3940,]   79   84   82 #>  [3941,]   78   83   84 #>  [3942,]   79   84   82 #>  [3943,]   78   83   83 #>  [3944,]   78   83   83 #>  [3945,]   78   83   83 #>  [3946,]   78   83   83 #>  [3947,]   79   84   82 #>  [3948,]   79   84   82 #>  [3949,]   78   83   83 #>  [3950,]   79   84   82 #>  [3951,]   78   83   83 #>  [3952,]   78   83   84 #>  [3953,]   79   84   82 #>  [3954,]   78   83   83 #>  [3955,]   78   83   83 #>  [3956,]   79   84   82 #>  [3957,]   79   84   82 #>  [3958,]   78   83   84 #>  [3959,]   78   83   83 #>  [3960,]   79   84   82 #>  [3961,]   79   84   82 #>  [3962,]   78   83   84 #>  [3963,]   79   84   82 #>  [3964,]   79   85   82 #>  [3965,]   79   84   82 #>  [3966,]   78   83   83 #>  [3967,]   78   83   84 #>  [3968,]   78   83   84 #>  [3969,]   78   83   84 #>  [3970,]   79   84   82 #>  [3971,]   79   84   82 #>  [3972,]   78   83   83 #>  [3973,]   79   84   82 #>  [3974,]   78   83   84 #>  [3975,]   79   84   82 #>  [3976,]   78   83   83 #>  [3977,]   79   85   82 #>  [3978,]   79   84   82 #>  [3979,]   78   83   83 #>  [3980,]   78   83   84 #>  [3981,]   78   83   84 #>  [3982,]   78   83   84 #>  [3983,]   78   83   83 #>  [3984,]   79   84   82 #>  [3985,]   78   83   84 #>  [3986,]   79   84   82 #>  [3987,]   78   83   84 #>  [3988,]   78   83   84 #>  [3989,]   78   83   83 #>  [3990,]   78   83   83 #>  [3991,]   78   83   84 #>  [3992,]   78   83   84 #>  [3993,]   79   84   82 #>  [3994,]   79   84   82 #>  [3995,]   78   83   84 #>  [3996,]   78   83   84 #>  [3997,]   79   85   82 #>  [3998,]   79   84   82 #>  [3999,]   78   83   84 #>  [4000,]   79   85   82 #>  [4001,]   81   87   86 #>  [4002,]   81   87   86 #>  [4003,]   80   86   85 #>  [4004,]   81   87   86 #>  [4005,]   81   87   86 #>  [4006,]   80   86   85 #>  [4007,]   80   86   85 #>  [4008,]   80   86   85 #>  [4009,]   81   87   86 #>  [4010,]   81   87   86 #>  [4011,]   81   87   86 #>  [4012,]   81   87   86 #>  [4013,]   81   87   86 #>  [4014,]   81   87   86 #>  [4015,]   81   87   86 #>  [4016,]   81   87   86 #>  [4017,]   81   87   86 #>  [4018,]   81   87   86 #>  [4019,]   81   87   86 #>  [4020,]   80   86   85 #>  [4021,]   80   86   85 #>  [4022,]   81   87   86 #>  [4023,]   80   86   85 #>  [4024,]   81   87   86 #>  [4025,]   80   86   85 #>  [4026,]   81   87   86 #>  [4027,]   81   87   86 #>  [4028,]   81   87   86 #>  [4029,]   80   86   85 #>  [4030,]   81   87   86 #>  [4031,]   81   87   86 #>  [4032,]   81   87   86 #>  [4033,]   81   87   86 #>  [4034,]   80   86   85 #>  [4035,]   80   86   85 #>  [4036,]   80   86   85 #>  [4037,]   80   86   85 #>  [4038,]   81   87   86 #>  [4039,]   81   87   86 #>  [4040,]   81   87   86 #>  [4041,]   80   86   85 #>  [4042,]   80   86   85 #>  [4043,]   81   87   86 #>  [4044,]   80   86   85 #>  [4045,]   80   86   85 #>  [4046,]   81   87   86 #>  [4047,]   81   87   86 #>  [4048,]   81   87   86 #>  [4049,]   81   87   86 #>  [4050,]   80   86   85 #>  [4051,]   81   87   86 #>  [4052,]   81   87   86 #>  [4053,]   80   86   85 #>  [4054,]   80   86   85 #>  [4055,]   80   86   85 #>  [4056,]   80   86   85 #>  [4057,]   80   86   85 #>  [4058,]   81   87   86 #>  [4059,]   81   87   86 #>  [4060,]   80   86   85 #>  [4061,]   81   87   86 #>  [4062,]   81   87   86 #>  [4063,]   81   87   86 #>  [4064,]   80   86   85 #>  [4065,]   80   86   85 #>  [4066,]   81   87   86 #>  [4067,]   80   86   85 #>  [4068,]   81   87   86 #>  [4069,]   81   87   86 #>  [4070,]   81   87   86 #>  [4071,]   81   87   86 #>  [4072,]   81   87   86 #>  [4073,]   80   86   85 #>  [4074,]   80   86   85 #>  [4075,]   81   87   86 #>  [4076,]   80   86   85 #>  [4077,]   81   87   86 #>  [4078,]   81   87   86 #>  [4079,]   81   87   86 #>  [4080,]   80   86   85 #>  [4081,]   80   86   85 #>  [4082,]   80   86   85 #>  [4083,]   81   87   86 #>  [4084,]   80   86   85 #>  [4085,]   80   86   85 #>  [4086,]   80   86   85 #>  [4087,]   81   87   86 #>  [4088,]   80   86   85 #>  [4089,]   80   86   85 #>  [4090,]   81   87   86 #>  [4091,]   81   87   86 #>  [4092,]   81   87   86 #>  [4093,]   81   87   86 #>  [4094,]   80   86   85 #>  [4095,]   81   87   86 #>  [4096,]   81   87   86 #>  [4097,]   80   86   85 #>  [4098,]   80   86   85 #>  [4099,]   80   86   85 #>  [4100,]   81   87   86 #>  [4101,]   83   89   88 #>  [4102,]   83   89   88 #>  [4103,]   83   89   88 #>  [4104,]   83   89   88 #>  [4105,]   83   89   88 #>  [4106,]   83   89   88 #>  [4107,]   83   89   88 #>  [4108,]   83   89   88 #>  [4109,]   83   89   88 #>  [4110,]   83   89   88 #>  [4111,]   83   89   88 #>  [4112,]   83   89   88 #>  [4113,]   83   89   88 #>  [4114,]   83   89   88 #>  [4115,]   83   89   88 #>  [4116,]   83   89   88 #>  [4117,]   83   89   88 #>  [4118,]   83   89   88 #>  [4119,]   83   89   88 #>  [4120,]   83   89   88 #>  [4121,]   83   89   88 #>  [4122,]   83   89   88 #>  [4123,]   83   89   88 #>  [4124,]   83   89   88 #>  [4125,]   82   88   87 #>  [4126,]   83   89   88 #>  [4127,]   83   89   88 #>  [4128,]   83   89   88 #>  [4129,]   83   89   88 #>  [4130,]   83   89   88 #>  [4131,]   83   89   88 #>  [4132,]   83   89   88 #>  [4133,]   83   89   88 #>  [4134,]   83   89   88 #>  [4135,]   83   89   88 #>  [4136,]   83   89   88 #>  [4137,]   83   89   88 #>  [4138,]   83   89   88 #>  [4139,]   83   89   88 #>  [4140,]   83   89   88 #>  [4141,]   83   89   88 #>  [4142,]   83   89   88 #>  [4143,]   83   89   88 #>  [4144,]   83   89   88 #>  [4145,]   83   89   88 #>  [4146,]   83   89   88 #>  [4147,]   83   89   88 #>  [4148,]   83   89   88 #>  [4149,]   83   89   88 #>  [4150,]   83   89   88 #>  [4151,]   83   89   88 #>  [4152,]   83   89   88 #>  [4153,]   83   89   88 #>  [4154,]   83   89   88 #>  [4155,]   83   89   88 #>  [4156,]   82   88   87 #>  [4157,]   83   89   88 #>  [4158,]   83   89   88 #>  [4159,]   83   89   88 #>  [4160,]   83   89   88 #>  [4161,]   83   89   88 #>  [4162,]   83   89   88 #>  [4163,]   83   89   88 #>  [4164,]   83   89   88 #>  [4165,]   82   88   87 #>  [4166,]   83   89   88 #>  [4167,]   83   89   88 #>  [4168,]   83   89   88 #>  [4169,]   83   89   88 #>  [4170,]   83   89   88 #>  [4171,]   83   89   88 #>  [4172,]   83   89   88 #>  [4173,]   83   89   88 #>  [4174,]   83   89   88 #>  [4175,]   83   89   88 #>  [4176,]   83   89   88 #>  [4177,]   83   89   88 #>  [4178,]   83   89   88 #>  [4179,]   83   89   88 #>  [4180,]   82   88   87 #>  [4181,]   83   89   88 #>  [4182,]   83   89   88 #>  [4183,]   83   89   88 #>  [4184,]   83   89   88 #>  [4185,]   82   88   87 #>  [4186,]   83   89   88 #>  [4187,]   83   89   88 #>  [4188,]   83   89   88 #>  [4189,]   82   88   87 #>  [4190,]   83   89   88 #>  [4191,]   83   89   88 #>  [4192,]   83   89   88 #>  [4193,]   83   89   88 #>  [4194,]   83   89   88 #>  [4195,]   83   89   88 #>  [4196,]   83   89   88 #>  [4197,]   83   89   88 #>  [4198,]   83   89   88 #>  [4199,]   83   89   88 #>  [4200,]   83   89   88 #>  [4201,]   85   91   90 #>  [4202,]   84   90   89 #>  [4203,]   84   90   89 #>  [4204,]   85   91   90 #>  [4205,]   84   90   89 #>  [4206,]   84   90   89 #>  [4207,]   85   91   90 #>  [4208,]   84   90   89 #>  [4209,]   85   91   90 #>  [4210,]   85   91   90 #>  [4211,]   84   90   89 #>  [4212,]   84   90   89 #>  [4213,]   85   91   90 #>  [4214,]   85   91   90 #>  [4215,]   84   90   89 #>  [4216,]   85   91   90 #>  [4217,]   84   90   89 #>  [4218,]   84   90   89 #>  [4219,]   84   90   89 #>  [4220,]   85   91   90 #>  [4221,]   84   90   89 #>  [4222,]   85   91   90 #>  [4223,]   84   90   89 #>  [4224,]   85   91   90 #>  [4225,]   85   91   90 #>  [4226,]   84   90   89 #>  [4227,]   84   90   89 #>  [4228,]   85   91   90 #>  [4229,]   84   90   89 #>  [4230,]   84   90   89 #>  [4231,]   84   90   89 #>  [4232,]   84   90   89 #>  [4233,]   84   90   89 #>  [4234,]   84   90   89 #>  [4235,]   84   90   89 #>  [4236,]   85   91   90 #>  [4237,]   84   90   89 #>  [4238,]   84   90   89 #>  [4239,]   85   91   90 #>  [4240,]   84   90   89 #>  [4241,]   84   90   89 #>  [4242,]   84   90   89 #>  [4243,]   84   90   89 #>  [4244,]   84   90   89 #>  [4245,]   85   91   90 #>  [4246,]   84   90   89 #>  [4247,]   84   90   89 #>  [4248,]   84   90   89 #>  [4249,]   85   91   90 #>  [4250,]   85   91   90 #>  [4251,]   84   90   89 #>  [4252,]   85   91   90 #>  [4253,]   85   91   90 #>  [4254,]   85   91   90 #>  [4255,]   85   91   90 #>  [4256,]   84   90   89 #>  [4257,]   85   91   90 #>  [4258,]   85   91   90 #>  [4259,]   85   91   90 #>  [4260,]   84   90   89 #>  [4261,]   84   90   89 #>  [4262,]   84   90   89 #>  [4263,]   84   90   89 #>  [4264,]   84   90   89 #>  [4265,]   84   90   89 #>  [4266,]   84   90   89 #>  [4267,]   85   91   90 #>  [4268,]   84   90   89 #>  [4269,]   84   90   89 #>  [4270,]   84   90   89 #>  [4271,]   84   90   89 #>  [4272,]   85   91   90 #>  [4273,]   85   91   90 #>  [4274,]   84   90   89 #>  [4275,]   84   90   89 #>  [4276,]   85   91   90 #>  [4277,]   84   90   89 #>  [4278,]   84   90   89 #>  [4279,]   84   90   89 #>  [4280,]   84   90   89 #>  [4281,]   84   90   89 #>  [4282,]   84   90   89 #>  [4283,]   84   90   89 #>  [4284,]   84   90   89 #>  [4285,]   85   91   90 #>  [4286,]   85   91   90 #>  [4287,]   85   91   90 #>  [4288,]   85   91   90 #>  [4289,]   84   90   89 #>  [4290,]   85   91   90 #>  [4291,]   85   91   90 #>  [4292,]   84   90   89 #>  [4293,]   84   90   89 #>  [4294,]   84   90   89 #>  [4295,]   84   90   89 #>  [4296,]   84   90   89 #>  [4297,]   84   90   89 #>  [4298,]   84   90   89 #>  [4299,]   84   90   89 #>  [4300,]   84   90   89 #>  [4301,]   87   93   92 #>  [4302,]   87   93   92 #>  [4303,]   86   92   91 #>  [4304,]   86   92   91 #>  [4305,]   86   92   91 #>  [4306,]   87   93   92 #>  [4307,]   87   93   92 #>  [4308,]   86   92   91 #>  [4309,]   86   92   91 #>  [4310,]   86   92   91 #>  [4311,]   87   93   92 #>  [4312,]   87   93   92 #>  [4313,]   87   93   92 #>  [4314,]   87   93   92 #>  [4315,]   87   93   92 #>  [4316,]   87   93   92 #>  [4317,]   87   93   92 #>  [4318,]   86   92   91 #>  [4319,]   87   93   92 #>  [4320,]   86   92   91 #>  [4321,]   87   93   92 #>  [4322,]   87   93   92 #>  [4323,]   86   92   91 #>  [4324,]   86   92   91 #>  [4325,]   87   93   92 #>  [4326,]   87   93   92 #>  [4327,]   87   93   92 #>  [4328,]   87   93   92 #>  [4329,]   87   93   92 #>  [4330,]   86   92   91 #>  [4331,]   86   92   91 #>  [4332,]   86   92   91 #>  [4333,]   87   93   92 #>  [4334,]   86   92   91 #>  [4335,]   87   93   92 #>  [4336,]   86   92   91 #>  [4337,]   87   93   92 #>  [4338,]   87   93   92 #>  [4339,]   86   92   91 #>  [4340,]   87   93   92 #>  [4341,]   87   93   92 #>  [4342,]   86   92   91 #>  [4343,]   86   92   91 #>  [4344,]   87   93   92 #>  [4345,]   86   92   91 #>  [4346,]   87   93   92 #>  [4347,]   87   93   92 #>  [4348,]   86   92   91 #>  [4349,]   86   92   91 #>  [4350,]   87   93   92 #>  [4351,]   86   92   91 #>  [4352,]   87   93   92 #>  [4353,]   86   92   91 #>  [4354,]   87   93   92 #>  [4355,]   87   93   92 #>  [4356,]   86   92   91 #>  [4357,]   87   93   92 #>  [4358,]   87   93   92 #>  [4359,]   87   93   92 #>  [4360,]   86   92   91 #>  [4361,]   87   93   92 #>  [4362,]   86   92   91 #>  [4363,]   87   93   92 #>  [4364,]   86   92   91 #>  [4365,]   86   92   91 #>  [4366,]   86   92   91 #>  [4367,]   86   92   91 #>  [4368,]   87   93   92 #>  [4369,]   87   93   92 #>  [4370,]   87   93   92 #>  [4371,]   87   93   92 #>  [4372,]   86   92   91 #>  [4373,]   87   93   92 #>  [4374,]   87   93   92 #>  [4375,]   87   93   92 #>  [4376,]   87   93   92 #>  [4377,]   87   93   92 #>  [4378,]   86   92   91 #>  [4379,]   87   93   92 #>  [4380,]   87   93   92 #>  [4381,]   87   93   92 #>  [4382,]   87   93   92 #>  [4383,]   87   93   92 #>  [4384,]   87   93   92 #>  [4385,]   86   92   91 #>  [4386,]   87   93   92 #>  [4387,]   87   93   92 #>  [4388,]   86   92   91 #>  [4389,]   86   92   91 #>  [4390,]   87   93   92 #>  [4391,]   86   92   91 #>  [4392,]   87   93   92 #>  [4393,]   87   93   92 #>  [4394,]   87   93   92 #>  [4395,]   86   92   91 #>  [4396,]   87   93   92 #>  [4397,]   87   93   92 #>  [4398,]   87   93   92 #>  [4399,]   87   93   92 #>  [4400,]   87   93   92 #>  [4401,]   89   95   93 #>  [4402,]   88   94   95 #>  [4403,]   88   94   94 #>  [4404,]   89   95   93 #>  [4405,]   88   94   95 #>  [4406,]   88   94   95 #>  [4407,]   89   95   93 #>  [4408,]   89   95   93 #>  [4409,]   89   95   93 #>  [4410,]   89   95   93 #>  [4411,]   88   94   94 #>  [4412,]   88   94   94 #>  [4413,]   89   95   93 #>  [4414,]   88   94   94 #>  [4415,]   89   95   93 #>  [4416,]   89   95   93 #>  [4417,]   89   95   93 #>  [4418,]   89   95   93 #>  [4419,]   88   94   95 #>  [4420,]   88   94   94 #>  [4421,]   89   95   93 #>  [4422,]   88   94   94 #>  [4423,]   89   95   93 #>  [4424,]   88   94   95 #>  [4425,]   89   95   93 #>  [4426,]   88   94   94 #>  [4427,]   89   95   93 #>  [4428,]   89   95   93 #>  [4429,]   88   94   94 #>  [4430,]   88   94   95 #>  [4431,]   88   94   95 #>  [4432,]   88   94   94 #>  [4433,]   88   94   95 #>  [4434,]   88   94   95 #>  [4435,]   88   94   95 #>  [4436,]   88   94   94 #>  [4437,]   88   94   95 #>  [4438,]   88   94   95 #>  [4439,]   89   95   93 #>  [4440,]   88   94   94 #>  [4441,]   88   94   94 #>  [4442,]   88   94   94 #>  [4443,]   89   95   93 #>  [4444,]   88   94   95 #>  [4445,]   89   95   93 #>  [4446,]   89   95   93 #>  [4447,]   89   95   93 #>  [4448,]   88   94   94 #>  [4449,]   88   94   95 #>  [4450,]   88   94   95 #>  [4451,]   88   94   94 #>  [4452,]   88   94   95 #>  [4453,]   89   95   93 #>  [4454,]   88   94   94 #>  [4455,]   88   94   95 #>  [4456,]   89   95   93 #>  [4457,]   88   94   95 #>  [4458,]   88   94   95 #>  [4459,]   88   94   95 #>  [4460,]   88   94   94 #>  [4461,]   89   95   93 #>  [4462,]   88   94   94 #>  [4463,]   88   94   95 #>  [4464,]   89   95   93 #>  [4465,]   88   94   95 #>  [4466,]   88   94   94 #>  [4467,]   88   94   95 #>  [4468,]   88   94   94 #>  [4469,]   88   94   94 #>  [4470,]   89   95   93 #>  [4471,]   89   95   93 #>  [4472,]   89   95   93 #>  [4473,]   89   95   93 #>  [4474,]   89   95   93 #>  [4475,]   89   95   93 #>  [4476,]   89   95   93 #>  [4477,]   89   95   93 #>  [4478,]   88   94   95 #>  [4479,]   88   94   95 #>  [4480,]   88   94   94 #>  [4481,]   88   94   94 #>  [4482,]   89   95   93 #>  [4483,]   88   94   94 #>  [4484,]   89   95   93 #>  [4485,]   88   94   95 #>  [4486,]   88   94   95 #>  [4487,]   88   94   95 #>  [4488,]   89   95   93 #>  [4489,]   88   94   94 #>  [4490,]   88   94   95 #>  [4491,]   88   94   94 #>  [4492,]   88   94   95 #>  [4493,]   88   94   95 #>  [4494,]   89   95   93 #>  [4495,]   89   95   93 #>  [4496,]   88   94   95 #>  [4497,]   88   94   95 #>  [4498,]   88   94   95 #>  [4499,]   88   94   95 #>  [4500,]   89   95   93 #>  [4501,]   90   96   98 #>  [4502,]   90   96   98 #>  [4503,]   90   96   98 #>  [4504,]   91   97   96 #>  [4505,]   90   96   98 #>  [4506,]   90   96   98 #>  [4507,]   90   96   98 #>  [4508,]   90   96   97 #>  [4509,]   91   97   96 #>  [4510,]   90   96   97 #>  [4511,]   91   97   96 #>  [4512,]   91   97   96 #>  [4513,]   90   96   98 #>  [4514,]   91   97   96 #>  [4515,]   91   97   96 #>  [4516,]   90   96   98 #>  [4517,]   90   96   98 #>  [4518,]   91   97   96 #>  [4519,]   91   97   96 #>  [4520,]   90   96   98 #>  [4521,]   91   97   96 #>  [4522,]   90   96   98 #>  [4523,]   90   96   98 #>  [4524,]   90   96   98 #>  [4525,]   90   96   98 #>  [4526,]   91   97   96 #>  [4527,]   91   97   96 #>  [4528,]   90   96   98 #>  [4529,]   90   96   98 #>  [4530,]   91   97   96 #>  [4531,]   91   97   96 #>  [4532,]   90   96   98 #>  [4533,]   91   97   96 #>  [4534,]   90   96   98 #>  [4535,]   90   96   98 #>  [4536,]   91   97   96 #>  [4537,]   90   96   98 #>  [4538,]   91   97   96 #>  [4539,]   90   96   98 #>  [4540,]   90   96   98 #>  [4541,]   91   97   96 #>  [4542,]   91   97   96 #>  [4543,]   90   96   97 #>  [4544,]   90   96   98 #>  [4545,]   90   96   98 #>  [4546,]   90   96   98 #>  [4547,]   90   96   98 #>  [4548,]   91   97   96 #>  [4549,]   90   96   98 #>  [4550,]   90   96   98 #>  [4551,]   90   96   97 #>  [4552,]   90   96   98 #>  [4553,]   90   96   98 #>  [4554,]   90   96   98 #>  [4555,]   90   96   98 #>  [4556,]   90   96   98 #>  [4557,]   90   96   98 #>  [4558,]   91   97   96 #>  [4559,]   90   96   98 #>  [4560,]   91   97   96 #>  [4561,]   91   97   96 #>  [4562,]   91   97   96 #>  [4563,]   90   96   98 #>  [4564,]   90   96   97 #>  [4565,]   90   96   98 #>  [4566,]   90   96   98 #>  [4567,]   90   96   97 #>  [4568,]   91   97   96 #>  [4569,]   91   97   96 #>  [4570,]   90   96   98 #>  [4571,]   90   96   98 #>  [4572,]   90   96   98 #>  [4573,]   90   96   98 #>  [4574,]   91   97   96 #>  [4575,]   91   97   96 #>  [4576,]   90   96   98 #>  [4577,]   90   96   98 #>  [4578,]   90   96   97 #>  [4579,]   90   96   98 #>  [4580,]   90   96   98 #>  [4581,]   90   96   98 #>  [4582,]   91   97   96 #>  [4583,]   90   96   98 #>  [4584,]   90   96   98 #>  [4585,]   91   97   96 #>  [4586,]   90   96   98 #>  [4587,]   90   96   98 #>  [4588,]   90   96   98 #>  [4589,]   90   96   97 #>  [4590,]   90   96   98 #>  [4591,]   90   96   97 #>  [4592,]   91   97   96 #>  [4593,]   91   97   96 #>  [4594,]   90   96   98 #>  [4595,]   90   96   97 #>  [4596,]   91   97   96 #>  [4597,]   91   97   96 #>  [4598,]   90   96   98 #>  [4599,]   91   97   96 #>  [4600,]   90   96   98 #>  [4601,]   93   99  100 #>  [4602,]   93   99  100 #>  [4603,]   93   99  100 #>  [4604,]   93   99  100 #>  [4605,]   93   99  100 #>  [4606,]   93   99  100 #>  [4607,]   93   99  100 #>  [4608,]   93   99  100 #>  [4609,]   93   99  100 #>  [4610,]   93   99  100 #>  [4611,]   93   99  100 #>  [4612,]   93   99  100 #>  [4613,]   93   99  100 #>  [4614,]   93   99  100 #>  [4615,]   93   99  100 #>  [4616,]   93   99  100 #>  [4617,]   93   99  100 #>  [4618,]   93   99  100 #>  [4619,]   93   99  100 #>  [4620,]   92   98   99 #>  [4621,]   92   98   99 #>  [4622,]   93   99  100 #>  [4623,]   93   99  100 #>  [4624,]   93   99  100 #>  [4625,]   92   98   99 #>  [4626,]   93   99  100 #>  [4627,]   93   99  100 #>  [4628,]   93   99  100 #>  [4629,]   93   99  100 #>  [4630,]   93   99  100 #>  [4631,]   93   99  100 #>  [4632,]   93   99  100 #>  [4633,]   93   99  100 #>  [4634,]   93   99  100 #>  [4635,]   93   99  100 #>  [4636,]   93   99  100 #>  [4637,]   93   99  100 #>  [4638,]   93   99  100 #>  [4639,]   93   99  100 #>  [4640,]   93   99  100 #>  [4641,]   93   99  100 #>  [4642,]   93   99  100 #>  [4643,]   93   99  100 #>  [4644,]   93   99  100 #>  [4645,]   93   99  100 #>  [4646,]   93   99  100 #>  [4647,]   93   99  100 #>  [4648,]   93   99  100 #>  [4649,]   93   99  100 #>  [4650,]   93   99  100 #>  [4651,]   93   99  100 #>  [4652,]   93   99  100 #>  [4653,]   93   99  100 #>  [4654,]   93   99  100 #>  [4655,]   93   99  100 #>  [4656,]   92   98   99 #>  [4657,]   93   99  100 #>  [4658,]   93   99  100 #>  [4659,]   93   99  100 #>  [4660,]   93   99  100 #>  [4661,]   93   99  100 #>  [4662,]   93   99  100 #>  [4663,]   93   99  100 #>  [4664,]   93   99  100 #>  [4665,]   92   98   99 #>  [4666,]   93   99  100 #>  [4667,]   93   99  100 #>  [4668,]   93   99  100 #>  [4669,]   93   99  100 #>  [4670,]   93   99  100 #>  [4671,]   93   99  100 #>  [4672,]   93   99  100 #>  [4673,]   93   99  100 #>  [4674,]   92   98   99 #>  [4675,]   93   99  100 #>  [4676,]   93   99  100 #>  [4677,]   93   99  100 #>  [4678,]   93   99  100 #>  [4679,]   93   99  100 #>  [4680,]   92   98   99 #>  [4681,]   93   99  100 #>  [4682,]   93   99  100 #>  [4683,]   93   99  100 #>  [4684,]   93   99  100 #>  [4685,]   92   98   99 #>  [4686,]   93   99  100 #>  [4687,]   93   99  100 #>  [4688,]   93   99  100 #>  [4689,]   92   98   99 #>  [4690,]   93   99  100 #>  [4691,]   93   99  100 #>  [4692,]   93   99  100 #>  [4693,]   93   99  100 #>  [4694,]   93   99  100 #>  [4695,]   93   99  100 #>  [4696,]   93   99  100 #>  [4697,]   93   99  100 #>  [4698,]   93   99  100 #>  [4699,]   93   99  100 #>  [4700,]   93   99  100 #>  [4701,]   95  101  102 #>  [4702,]   95  101  102 #>  [4703,]   94  100  101 #>  [4704,]   95  101  102 #>  [4705,]   95  101  102 #>  [4706,]   95  101  102 #>  [4707,]   94  100  101 #>  [4708,]   95  101  102 #>  [4709,]   95  101  102 #>  [4710,]   95  101  102 #>  [4711,]   95  101  102 #>  [4712,]   95  101  102 #>  [4713,]   95  101  102 #>  [4714,]   95  101  102 #>  [4715,]   95  101  102 #>  [4716,]   95  101  102 #>  [4717,]   95  101  102 #>  [4718,]   95  101  102 #>  [4719,]   95  101  102 #>  [4720,]   95  101  102 #>  [4721,]   95  101  102 #>  [4722,]   95  101  102 #>  [4723,]   95  101  102 #>  [4724,]   95  101  102 #>  [4725,]   95  101  102 #>  [4726,]   95  101  102 #>  [4727,]   95  101  102 #>  [4728,]   95  101  102 #>  [4729,]   95  101  102 #>  [4730,]   95  101  102 #>  [4731,]   95  101  102 #>  [4732,]   95  101  102 #>  [4733,]   95  101  102 #>  [4734,]   95  101  102 #>  [4735,]   95  101  102 #>  [4736,]   95  101  102 #>  [4737,]   95  101  102 #>  [4738,]   95  101  102 #>  [4739,]   95  101  102 #>  [4740,]   95  101  102 #>  [4741,]   95  101  102 #>  [4742,]   95  101  102 #>  [4743,]   95  101  102 #>  [4744,]   95  101  102 #>  [4745,]   95  101  102 #>  [4746,]   95  101  102 #>  [4747,]   95  101  102 #>  [4748,]   95  101  102 #>  [4749,]   94  100  101 #>  [4750,]   95  101  102 #>  [4751,]   95  101  102 #>  [4752,]   95  101  102 #>  [4753,]   94  100  101 #>  [4754,]   95  101  102 #>  [4755,]   94  100  101 #>  [4756,]   94  100  101 #>  [4757,]   95  101  102 #>  [4758,]   95  101  102 #>  [4759,]   95  101  102 #>  [4760,]   95  101  102 #>  [4761,]   95  101  102 #>  [4762,]   95  101  102 #>  [4763,]   95  101  102 #>  [4764,]   95  101  102 #>  [4765,]   95  101  102 #>  [4766,]   94  100  101 #>  [4767,]   95  101  102 #>  [4768,]   95  101  102 #>  [4769,]   95  101  102 #>  [4770,]   95  101  102 #>  [4771,]   95  101  102 #>  [4772,]   95  101  102 #>  [4773,]   95  101  102 #>  [4774,]   95  101  102 #>  [4775,]   95  101  102 #>  [4776,]   95  101  102 #>  [4777,]   95  101  102 #>  [4778,]   95  101  102 #>  [4779,]   95  101  102 #>  [4780,]   95  101  102 #>  [4781,]   95  101  102 #>  [4782,]   95  101  102 #>  [4783,]   95  101  102 #>  [4784,]   95  101  102 #>  [4785,]   95  101  102 #>  [4786,]   95  101  102 #>  [4787,]   95  101  102 #>  [4788,]   95  101  102 #>  [4789,]   95  101  102 #>  [4790,]   95  101  102 #>  [4791,]   95  101  102 #>  [4792,]   95  101  102 #>  [4793,]   95  101  102 #>  [4794,]   95  101  102 #>  [4795,]   95  101  102 #>  [4796,]   95  101  102 #>  [4797,]   95  101  102 #>  [4798,]   95  101  102 #>  [4799,]   95  101  102 #>  [4800,]   95  101  102 #>  [4801,]   97  103  104 #>  [4802,]   97  103  104 #>  [4803,]   97  103  104 #>  [4804,]   97  103  104 #>  [4805,]   97  103  104 #>  [4806,]   97  103  104 #>  [4807,]   97  103  104 #>  [4808,]   97  103  104 #>  [4809,]   97  103  104 #>  [4810,]   97  103  104 #>  [4811,]   97  103  104 #>  [4812,]   97  103  104 #>  [4813,]   97  103  104 #>  [4814,]   97  103  104 #>  [4815,]   96  102  103 #>  [4816,]   97  103  104 #>  [4817,]   96  102  103 #>  [4818,]   97  103  104 #>  [4819,]   97  103  104 #>  [4820,]   97  103  104 #>  [4821,]   97  103  104 #>  [4822,]   97  103  104 #>  [4823,]   97  103  104 #>  [4824,]   97  103  104 #>  [4825,]   97  103  104 #>  [4826,]   97  103  104 #>  [4827,]   97  103  104 #>  [4828,]   97  103  104 #>  [4829,]   97  103  104 #>  [4830,]   97  103  104 #>  [4831,]   96  102  103 #>  [4832,]   97  103  104 #>  [4833,]   97  103  104 #>  [4834,]   96  102  103 #>  [4835,]   97  103  104 #>  [4836,]   97  103  104 #>  [4837,]   96  102  103 #>  [4838,]   97  103  104 #>  [4839,]   97  103  104 #>  [4840,]   97  103  104 #>  [4841,]   97  103  104 #>  [4842,]   96  102  103 #>  [4843,]   96  102  103 #>  [4844,]   96  102  103 #>  [4845,]   97  103  104 #>  [4846,]   97  103  104 #>  [4847,]   97  103  104 #>  [4848,]   96  102  103 #>  [4849,]   97  103  104 #>  [4850,]   97  103  104 #>  [4851,]   97  103  104 #>  [4852,]   97  103  104 #>  [4853,]   97  103  104 #>  [4854,]   97  103  104 #>  [4855,]   97  103  104 #>  [4856,]   97  103  104 #>  [4857,]   97  103  104 #>  [4858,]   97  103  104 #>  [4859,]   97  103  104 #>  [4860,]   97  103  104 #>  [4861,]   97  103  104 #>  [4862,]   97  103  104 #>  [4863,]   96  102  103 #>  [4864,]   97  103  104 #>  [4865,]   97  103  104 #>  [4866,]   97  103  104 #>  [4867,]   97  103  104 #>  [4868,]   97  103  104 #>  [4869,]   97  103  104 #>  [4870,]   96  102  103 #>  [4871,]   97  103  104 #>  [4872,]   97  103  104 #>  [4873,]   97  103  104 #>  [4874,]   97  103  104 #>  [4875,]   96  102  103 #>  [4876,]   97  103  104 #>  [4877,]   97  103  104 #>  [4878,]   96  102  103 #>  [4879,]   96  102  103 #>  [4880,]   97  103  104 #>  [4881,]   97  103  104 #>  [4882,]   97  103  104 #>  [4883,]   97  103  104 #>  [4884,]   97  103  104 #>  [4885,]   97  103  104 #>  [4886,]   97  103  104 #>  [4887,]   97  103  104 #>  [4888,]   97  103  104 #>  [4889,]   97  103  104 #>  [4890,]   97  103  104 #>  [4891,]   97  103  104 #>  [4892,]   97  103  104 #>  [4893,]   97  103  104 #>  [4894,]   97  103  104 #>  [4895,]   96  102  103 #>  [4896,]   97  103  104 #>  [4897,]   97  103  104 #>  [4898,]   97  103  104 #>  [4899,]   97  103  104 #>  [4900,]   96  102  103 #>  [4901,]   99  105  105 #>  [4902,]   99  104  105 #>  [4903,]   99  104  105 #>  [4904,]   99  104  105 #>  [4905,]   99  104  105 #>  [4906,]   99  104  105 #>  [4907,]   99  104  105 #>  [4908,]   99  104  105 #>  [4909,]   99  104  105 #>  [4910,]   99  104  105 #>  [4911,]   99  104  105 #>  [4912,]   99  104  105 #>  [4913,]   99  104  106 #>  [4914,]   99  105  105 #>  [4915,]   98  105  105 #>  [4916,]   99  105  105 #>  [4917,]   99  104  105 #>  [4918,]   99  104  106 #>  [4919,]   99  104  105 #>  [4920,]   99  104  105 #>  [4921,]   99  104  105 #>  [4922,]   99  104  105 #>  [4923,]   99  104  105 #>  [4924,]   99  104  105 #>  [4925,]   99  104  105 #>  [4926,]   99  104  105 #>  [4927,]   99  104  105 #>  [4928,]   99  104  105 #>  [4929,]   99  104  105 #>  [4930,]   99  104  105 #>  [4931,]   98  104  105 #>  [4932,]   99  104  105 #>  [4933,]   99  104  105 #>  [4934,]   98  104  105 #>  [4935,]   99  104  105 #>  [4936,]   99  104  105 #>  [4937,]   99  104  105 #>  [4938,]   99  104  105 #>  [4939,]   99  104  105 #>  [4940,]   99  104  105 #>  [4941,]   99  105  105 #>  [4942,]   98  104  106 #>  [4943,]   98  104  105 #>  [4944,]   99  105  105 #>  [4945,]   99  104  105 #>  [4946,]   99  104  105 #>  [4947,]   99  104  105 #>  [4948,]   99  104  105 #>  [4949,]   99  104  105 #>  [4950,]   99  105  105 #>  [4951,]   99  104  106 #>  [4952,]   99  104  105 #>  [4953,]   99  104  106 #>  [4954,]   99  104  105 #>  [4955,]   99  104  105 #>  [4956,]   99  104  105 #>  [4957,]   99  104  105 #>  [4958,]   99  104  105 #>  [4959,]   99  104  105 #>  [4960,]   99  104  105 #>  [4961,]   99  104  105 #>  [4962,]   99  104  105 #>  [4963,]   98  104  105 #>  [4964,]   99  104  105 #>  [4965,]   99  104  105 #>  [4966,]   99  104  105 #>  [4967,]   99  104  105 #>  [4968,]   99  104  105 #>  [4969,]   99  104  105 #>  [4970,]   99  104  105 #>  [4971,]   99  104  105 #>  [4972,]   99  104  105 #>  [4973,]   99  104  105 #>  [4974,]   99  104  105 #>  [4975,]   98  104  105 #>  [4976,]   99  104  105 #>  [4977,]   99  104  105 #>  [4978,]   99  104  105 #>  [4979,]   99  104  106 #>  [4980,]   99  104  105 #>  [4981,]   99  104  105 #>  [4982,]   99  104  105 #>  [4983,]   99  104  105 #>  [4984,]   99  104  106 #>  [4985,]   99  104  105 #>  [4986,]   99  104  105 #>  [4987,]   99  104  105 #>  [4988,]   99  104  105 #>  [4989,]   99  104  105 #>  [4990,]   99  104  105 #>  [4991,]   99  104  106 #>  [4992,]   99  104  105 #>  [4993,]   99  104  106 #>  [4994,]   99  104  106 #>  [4995,]   99  104  105 #>  [4996,]   99  104  105 #>  [4997,]   99  104  105 #>  [4998,]   99  104  105 #>  [4999,]   99  105  105 #>  [5000,]   99  104  105 #>  [5001,]  101  107  108 #>  [5002,]  101  107  108 #>  [5003,]  100  106  107 #>  [5004,]  101  107  108 #>  [5005,]  101  107  108 #>  [5006,]  101  107  108 #>  [5007,]  100  106  107 #>  [5008,]  101  107  108 #>  [5009,]  101  107  108 #>  [5010,]  101  107  108 #>  [5011,]  101  107  108 #>  [5012,]  100  106  107 #>  [5013,]  101  107  108 #>  [5014,]  101  107  108 #>  [5015,]  101  107  108 #>  [5016,]  101  107  108 #>  [5017,]  101  107  108 #>  [5018,]  101  107  108 #>  [5019,]  101  107  108 #>  [5020,]  101  107  108 #>  [5021,]  101  107  108 #>  [5022,]  101  107  108 #>  [5023,]  101  107  108 #>  [5024,]  101  107  108 #>  [5025,]  101  107  108 #>  [5026,]  101  107  108 #>  [5027,]  101  107  108 #>  [5028,]  101  107  108 #>  [5029,]  101  107  108 #>  [5030,]  101  107  108 #>  [5031,]  100  106  107 #>  [5032,]  101  107  108 #>  [5033,]  101  107  108 #>  [5034,]  101  107  108 #>  [5035,]  101  107  108 #>  [5036,]  101  107  108 #>  [5037,]  101  107  108 #>  [5038,]  101  107  108 #>  [5039,]  101  107  108 #>  [5040,]  101  107  108 #>  [5041,]  101  107  108 #>  [5042,]  101  107  108 #>  [5043,]  101  107  108 #>  [5044,]  101  107  108 #>  [5045,]  101  107  108 #>  [5046,]  101  107  108 #>  [5047,]  101  107  108 #>  [5048,]  101  107  108 #>  [5049,]  101  107  108 #>  [5050,]  101  107  108 #>  [5051,]  101  107  108 #>  [5052,]  100  106  107 #>  [5053,]  101  107  108 #>  [5054,]  101  107  108 #>  [5055,]  101  107  108 #>  [5056,]  101  107  108 #>  [5057,]  101  107  108 #>  [5058,]  101  107  108 #>  [5059,]  100  106  107 #>  [5060,]  100  106  107 #>  [5061,]  101  107  108 #>  [5062,]  101  107  108 #>  [5063,]  101  107  108 #>  [5064,]  101  107  108 #>  [5065,]  101  107  108 #>  [5066,]  101  107  108 #>  [5067,]  101  107  108 #>  [5068,]  101  107  108 #>  [5069,]  101  107  108 #>  [5070,]  101  107  108 #>  [5071,]  101  107  108 #>  [5072,]  101  107  108 #>  [5073,]  101  107  108 #>  [5074,]  101  107  108 #>  [5075,]  101  107  108 #>  [5076,]  101  107  108 #>  [5077,]  101  107  108 #>  [5078,]  101  107  108 #>  [5079,]  101  107  108 #>  [5080,]  101  107  108 #>  [5081,]  101  107  108 #>  [5082,]  101  107  108 #>  [5083,]  101  107  108 #>  [5084,]  101  107  108 #>  [5085,]  101  107  108 #>  [5086,]  101  107  108 #>  [5087,]  101  107  108 #>  [5088,]  101  107  108 #>  [5089,]  101  107  108 #>  [5090,]  101  107  108 #>  [5091,]  101  107  108 #>  [5092,]  101  107  108 #>  [5093,]  101  107  108 #>  [5094,]  101  107  108 #>  [5095,]  101  107  108 #>  [5096,]  101  107  108 #>  [5097,]  100  106  107 #>  [5098,]  101  107  108 #>  [5099,]  101  107  108 #>  [5100,]  101  107  108 #>  [5101,]  103  110  110 #>  [5102,]  103  110  110 #>  [5103,]  103  109  110 #>  [5104,]  102  108  109 #>  [5105,]  103  109  110 #>  [5106,]  103  110  110 #>  [5107,]  103  110  110 #>  [5108,]  102  108  109 #>  [5109,]  102  108  109 #>  [5110,]  102  108  109 #>  [5111,]  103  110  110 #>  [5112,]  103  110  110 #>  [5113,]  103  110  110 #>  [5114,]  103  110  110 #>  [5115,]  103  110  110 #>  [5116,]  103  110  110 #>  [5117,]  103  110  110 #>  [5118,]  103  109  110 #>  [5119,]  103  110  110 #>  [5120,]  103  109  110 #>  [5121,]  103  110  110 #>  [5122,]  103  110  110 #>  [5123,]  103  109  110 #>  [5124,]  103  109  110 #>  [5125,]  103  110  110 #>  [5126,]  103  110  110 #>  [5127,]  103  110  110 #>  [5128,]  103  110  110 #>  [5129,]  103  110  110 #>  [5130,]  103  109  110 #>  [5131,]  103  109  110 #>  [5132,]  103  109  110 #>  [5133,]  103  110  110 #>  [5134,]  103  109  110 #>  [5135,]  103  110  110 #>  [5136,]  103  110  110 #>  [5137,]  103  110  110 #>  [5138,]  103  110  110 #>  [5139,]  103  109  110 #>  [5140,]  103  110  110 #>  [5141,]  103  110  110 #>  [5142,]  103  109  110 #>  [5143,]  103  109  110 #>  [5144,]  103  110  110 #>  [5145,]  103  109  110 #>  [5146,]  103  110  110 #>  [5147,]  103  110  110 #>  [5148,]  103  109  110 #>  [5149,]  103  109  110 #>  [5150,]  103  110  110 #>  [5151,]  103  109  110 #>  [5152,]  103  110  110 #>  [5153,]  103  109  110 #>  [5154,]  103  110  110 #>  [5155,]  103  110  110 #>  [5156,]  103  109  110 #>  [5157,]  103  110  110 #>  [5158,]  103  110  110 #>  [5159,]  103  110  110 #>  [5160,]  103  109  110 #>  [5161,]  103  110  110 #>  [5162,]  103  109  110 #>  [5163,]  103  110  110 #>  [5164,]  103  109  110 #>  [5165,]  103  109  110 #>  [5166,]  103  109  110 #>  [5167,]  103  109  110 #>  [5168,]  103  110  110 #>  [5169,]  103  110  110 #>  [5170,]  103  110  110 #>  [5171,]  103  110  110 #>  [5172,]  103  109  110 #>  [5173,]  103  110  110 #>  [5174,]  103  110  110 #>  [5175,]  103  110  110 #>  [5176,]  103  110  110 #>  [5177,]  103  110  110 #>  [5178,]  103  109  110 #>  [5179,]  103  110  110 #>  [5180,]  103  110  110 #>  [5181,]  103  110  110 #>  [5182,]  103  110  110 #>  [5183,]  103  110  110 #>  [5184,]  103  110  110 #>  [5185,]  103  109  110 #>  [5186,]  103  110  110 #>  [5187,]  103  110  110 #>  [5188,]  103  109  110 #>  [5189,]  103  109  110 #>  [5190,]  103  110  110 #>  [5191,]  103  109  110 #>  [5192,]  103  110  110 #>  [5193,]  103  110  110 #>  [5194,]  103  110  110 #>  [5195,]  102  108  109 #>  [5196,]  103  110  110 #>  [5197,]  103  110  110 #>  [5198,]  103  110  110 #>  [5199,]  103  110  110 #>  [5200,]  103  110  110 #>  [5201,]  104  111  112 #>  [5202,]  105  112  111 #>  [5203,]  104  111  112 #>  [5204,]  104  111  113 #>  [5205,]  104  111  112 #>  [5206,]  104  111  112 #>  [5207,]  104  111  112 #>  [5208,]  104  111  112 #>  [5209,]  105  112  111 #>  [5210,]  105  112  111 #>  [5211,]  104  111  112 #>  [5212,]  105  112  111 #>  [5213,]  104  111  112 #>  [5214,]  104  111  113 #>  [5215,]  104  111  112 #>  [5216,]  104  111  112 #>  [5217,]  104  111  112 #>  [5218,]  104  111  112 #>  [5219,]  104  111  113 #>  [5220,]  104  111  112 #>  [5221,]  105  112  111 #>  [5222,]  104  111  112 #>  [5223,]  104  111  112 #>  [5224,]  104  111  112 #>  [5225,]  104  111  112 #>  [5226,]  104  111  112 #>  [5227,]  104  111  113 #>  [5228,]  104  111  112 #>  [5229,]  105  112  111 #>  [5230,]  104  111  112 #>  [5231,]  104  111  112 #>  [5232,]  104  111  112 #>  [5233,]  105  112  111 #>  [5234,]  104  111  112 #>  [5235,]  104  111  112 #>  [5236,]  104  111  112 #>  [5237,]  104  111  112 #>  [5238,]  104  111  113 #>  [5239,]  104  111  112 #>  [5240,]  104  111  112 #>  [5241,]  104  111  113 #>  [5242,]  104  111  113 #>  [5243,]  104  111  112 #>  [5244,]  104  111  112 #>  [5245,]  104  111  112 #>  [5246,]  104  111  112 #>  [5247,]  104  111  112 #>  [5248,]  104  111  113 #>  [5249,]  104  111  112 #>  [5250,]  104  111  112 #>  [5251,]  104  111  112 #>  [5252,]  104  111  112 #>  [5253,]  104  111  112 #>  [5254,]  104  111  112 #>  [5255,]  104  111  112 #>  [5256,]  104  111  112 #>  [5257,]  104  111  112 #>  [5258,]  104  111  112 #>  [5259,]  104  111  112 #>  [5260,]  105  112  111 #>  [5261,]  104  111  113 #>  [5262,]  104  111  112 #>  [5263,]  105  112  111 #>  [5264,]  104  111  112 #>  [5265,]  104  111  112 #>  [5266,]  104  111  112 #>  [5267,]  104  111  112 #>  [5268,]  104  111  112 #>  [5269,]  104  111  113 #>  [5270,]  105  112  111 #>  [5271,]  104  111  112 #>  [5272,]  104  111  112 #>  [5273,]  104  111  112 #>  [5274,]  104  111  112 #>  [5275,]  104  111  112 #>  [5276,]  104  111  112 #>  [5277,]  104  111  112 #>  [5278,]  104  111  112 #>  [5279,]  104  111  112 #>  [5280,]  105  112  111 #>  [5281,]  105  112  111 #>  [5282,]  104  111  113 #>  [5283,]  104  111  112 #>  [5284,]  104  111  112 #>  [5285,]  104  111  112 #>  [5286,]  105  112  111 #>  [5287,]  104  111  112 #>  [5288,]  104  111  112 #>  [5289,]  104  111  112 #>  [5290,]  104  111  112 #>  [5291,]  104  111  112 #>  [5292,]  104  111  113 #>  [5293,]  104  111  113 #>  [5294,]  104  111  112 #>  [5295,]  104  111  112 #>  [5296,]  104  111  113 #>  [5297,]  104  111  113 #>  [5298,]  104  111  112 #>  [5299,]  104  111  112 #>  [5300,]  104  111  112 #>  [5301,]  106  113  115 #>  [5302,]  106  113  115 #>  [5303,]  106  113  115 #>  [5304,]  106  113  115 #>  [5305,]  106  113  115 #>  [5306,]  107  114  114 #>  [5307,]  106  113  115 #>  [5308,]  107  114  114 #>  [5309,]  107  114  114 #>  [5310,]  106  113  115 #>  [5311,]  106  113  115 #>  [5312,]  107  114  114 #>  [5313,]  106  113  115 #>  [5314,]  106  113  115 #>  [5315,]  107  114  114 #>  [5316,]  106  113  115 #>  [5317,]  106  113  115 #>  [5318,]  106  113  115 #>  [5319,]  106  113  115 #>  [5320,]  107  114  114 #>  [5321,]  106  113  115 #>  [5322,]  106  113  115 #>  [5323,]  106  113  115 #>  [5324,]  106  113  115 #>  [5325,]  106  113  115 #>  [5326,]  107  114  114 #>  [5327,]  106  113  115 #>  [5328,]  106  113  115 #>  [5329,]  106  113  115 #>  [5330,]  106  113  115 #>  [5331,]  106  113  115 #>  [5332,]  106  113  115 #>  [5333,]  107  114  114 #>  [5334,]  106  113  115 #>  [5335,]  106  113  115 #>  [5336,]  106  113  115 #>  [5337,]  106  113  115 #>  [5338,]  106  113  115 #>  [5339,]  106  113  115 #>  [5340,]  106  113  115 #>  [5341,]  106  113  115 #>  [5342,]  106  113  115 #>  [5343,]  107  114  114 #>  [5344,]  106  113  115 #>  [5345,]  107  114  114 #>  [5346,]  107  114  114 #>  [5347,]  106  113  115 #>  [5348,]  106  113  115 #>  [5349,]  106  113  115 #>  [5350,]  107  114  114 #>  [5351,]  107  114  114 #>  [5352,]  106  113  115 #>  [5353,]  107  114  114 #>  [5354,]  106  113  115 #>  [5355,]  106  113  115 #>  [5356,]  107  114  114 #>  [5357,]  107  114  114 #>  [5358,]  107  114  114 #>  [5359,]  106  113  115 #>  [5360,]  106  113  115 #>  [5361,]  107  114  114 #>  [5362,]  106  113  115 #>  [5363,]  106  113  115 #>  [5364,]  107  114  114 #>  [5365,]  107  114  114 #>  [5366,]  107  114  114 #>  [5367,]  106  113  115 #>  [5368,]  107  114  114 #>  [5369,]  106  113  115 #>  [5370,]  106  113  115 #>  [5371,]  106  113  115 #>  [5372,]  107  114  114 #>  [5373,]  106  113  115 #>  [5374,]  106  113  115 #>  [5375,]  106  113  115 #>  [5376,]  107  114  114 #>  [5377,]  106  113  115 #>  [5378,]  107  114  114 #>  [5379,]  106  113  115 #>  [5380,]  106  113  115 #>  [5381,]  107  114  114 #>  [5382,]  106  113  115 #>  [5383,]  106  113  115 #>  [5384,]  106  113  115 #>  [5385,]  106  113  115 #>  [5386,]  106  113  115 #>  [5387,]  106  113  115 #>  [5388,]  106  113  115 #>  [5389,]  106  113  115 #>  [5390,]  106  113  115 #>  [5391,]  106  113  115 #>  [5392,]  107  114  114 #>  [5393,]  106  113  115 #>  [5394,]  107  114  114 #>  [5395,]  106  113  115 #>  [5396,]  107  114  114 #>  [5397,]  107  114  114 #>  [5398,]  106  113  115 #>  [5399,]  106  113  115 #>  [5400,]  106  113  115 #>  [5401,]  108  115  116 #>  [5402,]  109  116  117 #>  [5403,]  108  115  116 #>  [5404,]  109  116  117 #>  [5405,]  109  116  117 #>  [5406,]  108  115  116 #>  [5407,]  109  116  117 #>  [5408,]  109  116  117 #>  [5409,]  109  116  117 #>  [5410,]  109  116  117 #>  [5411,]  108  115  116 #>  [5412,]  109  116  117 #>  [5413,]  109  116  117 #>  [5414,]  108  115  116 #>  [5415,]  109  116  117 #>  [5416,]  108  115  116 #>  [5417,]  109  116  117 #>  [5418,]  109  116  117 #>  [5419,]  108  115  116 #>  [5420,]  109  116  117 #>  [5421,]  109  116  117 #>  [5422,]  109  116  117 #>  [5423,]  109  116  117 #>  [5424,]  109  116  117 #>  [5425,]  109  116  117 #>  [5426,]  108  115  116 #>  [5427,]  109  116  117 #>  [5428,]  108  115  116 #>  [5429,]  109  116  117 #>  [5430,]  109  116  117 #>  [5431,]  109  116  117 #>  [5432,]  109  116  117 #>  [5433,]  109  116  117 #>  [5434,]  108  115  116 #>  [5435,]  108  115  116 #>  [5436,]  109  116  117 #>  [5437,]  108  115  116 #>  [5438,]  108  115  116 #>  [5439,]  109  116  117 #>  [5440,]  109  116  117 #>  [5441,]  109  116  117 #>  [5442,]  108  115  116 #>  [5443,]  109  116  117 #>  [5444,]  109  116  117 #>  [5445,]  108  115  116 #>  [5446,]  109  116  117 #>  [5447,]  109  116  117 #>  [5448,]  109  116  117 #>  [5449,]  108  115  116 #>  [5450,]  109  116  117 #>  [5451,]  109  116  117 #>  [5452,]  108  115  116 #>  [5453,]  109  116  117 #>  [5454,]  109  116  117 #>  [5455,]  109  116  117 #>  [5456,]  109  116  117 #>  [5457,]  109  116  117 #>  [5458,]  109  116  117 #>  [5459,]  108  115  116 #>  [5460,]  109  116  117 #>  [5461,]  109  116  117 #>  [5462,]  109  116  117 #>  [5463,]  109  116  117 #>  [5464,]  108  115  116 #>  [5465,]  108  115  116 #>  [5466,]  109  116  117 #>  [5467,]  109  116  117 #>  [5468,]  108  115  116 #>  [5469,]  109  116  117 #>  [5470,]  109  116  117 #>  [5471,]  109  116  117 #>  [5472,]  108  115  116 #>  [5473,]  108  115  116 #>  [5474,]  109  116  117 #>  [5475,]  109  116  117 #>  [5476,]  109  116  117 #>  [5477,]  108  115  116 #>  [5478,]  109  116  117 #>  [5479,]  108  115  116 #>  [5480,]  109  116  117 #>  [5481,]  109  116  117 #>  [5482,]  109  116  117 #>  [5483,]  109  116  117 #>  [5484,]  109  116  117 #>  [5485,]  109  116  117 #>  [5486,]  109  116  117 #>  [5487,]  109  116  117 #>  [5488,]  109  116  117 #>  [5489,]  108  115  116 #>  [5490,]  109  116  117 #>  [5491,]  109  116  117 #>  [5492,]  109  116  117 #>  [5493,]  109  116  117 #>  [5494,]  108  115  116 #>  [5495,]  109  116  117 #>  [5496,]  108  115  116 #>  [5497,]  108  115  116 #>  [5498,]  109  116  117 #>  [5499,]  109  116  117 #>  [5500,]  108  115  116 #>  [5501,]  111  118  119 #>  [5502,]  111  118  119 #>  [5503,]  110  117  118 #>  [5504,]  111  118  119 #>  [5505,]  111  118  119 #>  [5506,]  111  118  119 #>  [5507,]  110  117  118 #>  [5508,]  110  117  118 #>  [5509,]  111  118  119 #>  [5510,]  111  118  119 #>  [5511,]  111  118  119 #>  [5512,]  111  118  119 #>  [5513,]  111  118  119 #>  [5514,]  111  118  119 #>  [5515,]  111  118  119 #>  [5516,]  111  118  119 #>  [5517,]  111  118  119 #>  [5518,]  111  118  119 #>  [5519,]  111  118  119 #>  [5520,]  110  117  118 #>  [5521,]  111  118  119 #>  [5522,]  111  118  119 #>  [5523,]  111  118  119 #>  [5524,]  111  118  119 #>  [5525,]  110  117  118 #>  [5526,]  111  118  119 #>  [5527,]  111  118  119 #>  [5528,]  111  118  119 #>  [5529,]  111  118  119 #>  [5530,]  111  118  119 #>  [5531,]  111  118  119 #>  [5532,]  111  118  119 #>  [5533,]  111  118  119 #>  [5534,]  111  118  119 #>  [5535,]  111  118  119 #>  [5536,]  111  118  119 #>  [5537,]  111  118  119 #>  [5538,]  111  118  119 #>  [5539,]  110  117  118 #>  [5540,]  111  118  119 #>  [5541,]  111  118  119 #>  [5542,]  111  118  119 #>  [5543,]  111  118  119 #>  [5544,]  110  117  118 #>  [5545,]  111  118  119 #>  [5546,]  110  117  118 #>  [5547,]  111  118  119 #>  [5548,]  111  118  119 #>  [5549,]  110  117  118 #>  [5550,]  110  117  118 #>  [5551,]  111  118  119 #>  [5552,]  111  118  119 #>  [5553,]  110  117  118 #>  [5554,]  111  118  119 #>  [5555,]  110  117  118 #>  [5556,]  110  117  118 #>  [5557,]  111  118  119 #>  [5558,]  111  118  119 #>  [5559,]  110  117  118 #>  [5560,]  111  118  119 #>  [5561,]  111  118  119 #>  [5562,]  111  118  119 #>  [5563,]  111  118  119 #>  [5564,]  111  118  119 #>  [5565,]  110  117  118 #>  [5566,]  110  117  118 #>  [5567,]  111  118  119 #>  [5568,]  111  118  119 #>  [5569,]  111  118  119 #>  [5570,]  110  117  118 #>  [5571,]  111  118  119 #>  [5572,]  110  117  118 #>  [5573,]  111  118  119 #>  [5574,]  111  118  119 #>  [5575,]  111  118  119 #>  [5576,]  111  118  119 #>  [5577,]  111  118  119 #>  [5578,]  111  118  119 #>  [5579,]  111  118  119 #>  [5580,]  111  118  119 #>  [5581,]  111  118  119 #>  [5582,]  111  118  119 #>  [5583,]  111  118  119 #>  [5584,]  110  117  118 #>  [5585,]  111  118  119 #>  [5586,]  110  117  118 #>  [5587,]  111  118  119 #>  [5588,]  111  118  119 #>  [5589,]  111  118  119 #>  [5590,]  110  117  118 #>  [5591,]  111  118  119 #>  [5592,]  111  118  119 #>  [5593,]  111  118  119 #>  [5594,]  111  118  119 #>  [5595,]  111  118  119 #>  [5596,]  111  118  119 #>  [5597,]  111  118  119 #>  [5598,]  110  117  118 #>  [5599,]  111  118  119 #>  [5600,]  110  117  118 #>  [5601,]  113  119  120 #>  [5602,]  113  119  120 #>  [5603,]  112  120  121 #>  [5604,]  112  120  121 #>  [5605,]  113  119  120 #>  [5606,]  113  119  120 #>  [5607,]  112  120  121 #>  [5608,]  112  121  121 #>  [5609,]  113  119  120 #>  [5610,]  112  120  121 #>  [5611,]  113  119  120 #>  [5612,]  112  120  121 #>  [5613,]  113  119  120 #>  [5614,]  112  120  121 #>  [5615,]  113  119  120 #>  [5616,]  112  120  121 #>  [5617,]  113  119  120 #>  [5618,]  113  119  120 #>  [5619,]  113  119  120 #>  [5620,]  113  119  120 #>  [5621,]  113  119  120 #>  [5622,]  113  119  120 #>  [5623,]  112  120  121 #>  [5624,]  113  119  120 #>  [5625,]  112  120  121 #>  [5626,]  112  121  121 #>  [5627,]  113  119  120 #>  [5628,]  113  119  120 #>  [5629,]  113  119  120 #>  [5630,]  113  119  120 #>  [5631,]  112  120  121 #>  [5632,]  112  120  121 #>  [5633,]  113  119  120 #>  [5634,]  113  119  120 #>  [5635,]  112  120  121 #>  [5636,]  113  119  120 #>  [5637,]  112  121  121 #>  [5638,]  113  119  120 #>  [5639,]  113  119  120 #>  [5640,]  112  120  121 #>  [5641,]  113  119  120 #>  [5642,]  113  119  120 #>  [5643,]  113  119  120 #>  [5644,]  112  120  121 #>  [5645,]  112  120  121 #>  [5646,]  112  121  121 #>  [5647,]  112  120  121 #>  [5648,]  113  119  120 #>  [5649,]  113  119  120 #>  [5650,]  113  119  120 #>  [5651,]  113  119  120 #>  [5652,]  112  120  121 #>  [5653,]  113  119  120 #>  [5654,]  113  119  120 #>  [5655,]  112  121  121 #>  [5656,]  113  119  120 #>  [5657,]  112  120  121 #>  [5658,]  113  119  120 #>  [5659,]  112  121  121 #>  [5660,]  112  121  121 #>  [5661,]  113  119  120 #>  [5662,]  113  119  120 #>  [5663,]  113  119  120 #>  [5664,]  113  119  120 #>  [5665,]  113  119  120 #>  [5666,]  113  119  120 #>  [5667,]  112  120  121 #>  [5668,]  112  120  121 #>  [5669,]  113  119  120 #>  [5670,]  113  119  120 #>  [5671,]  113  119  120 #>  [5672,]  112  120  121 #>  [5673,]  113  119  120 #>  [5674,]  112  120  121 #>  [5675,]  112  120  121 #>  [5676,]  112  120  121 #>  [5677,]  113  119  120 #>  [5678,]  112  120  121 #>  [5679,]  113  119  120 #>  [5680,]  112  121  121 #>  [5681,]  113  119  120 #>  [5682,]  113  119  120 #>  [5683,]  113  119  120 #>  [5684,]  113  119  120 #>  [5685,]  113  119  120 #>  [5686,]  112  120  121 #>  [5687,]  113  119  120 #>  [5688,]  112  120  121 #>  [5689,]  113  119  120 #>  [5690,]  113  119  120 #>  [5691,]  113  119  120 #>  [5692,]  112  120  121 #>  [5693,]  113  119  120 #>  [5694,]  113  119  120 #>  [5695,]  112  121  121 #>  [5696,]  112  121  121 #>  [5697,]  112  121  121 #>  [5698,]  112  120  121 #>  [5699,]  113  119  120 #>  [5700,]  113  119  120 #>  [5701,]  115  123  123 #>  [5702,]  115  123  123 #>  [5703,]  114  122  122 #>  [5704,]  115  123  123 #>  [5705,]  115  123  123 #>  [5706,]  114  122  122 #>  [5707,]  115  123  123 #>  [5708,]  115  123  123 #>  [5709,]  115  123  123 #>  [5710,]  115  123  123 #>  [5711,]  115  123  123 #>  [5712,]  115  123  123 #>  [5713,]  115  123  123 #>  [5714,]  115  123  123 #>  [5715,]  115  123  123 #>  [5716,]  115  123  123 #>  [5717,]  115  123  123 #>  [5718,]  115  123  123 #>  [5719,]  114  122  122 #>  [5720,]  115  123  123 #>  [5721,]  115  123  123 #>  [5722,]  115  123  123 #>  [5723,]  115  123  123 #>  [5724,]  115  123  123 #>  [5725,]  115  123  123 #>  [5726,]  115  123  123 #>  [5727,]  115  123  123 #>  [5728,]  115  123  123 #>  [5729,]  115  123  123 #>  [5730,]  115  123  123 #>  [5731,]  115  123  123 #>  [5732,]  115  123  123 #>  [5733,]  115  123  123 #>  [5734,]  114  122  122 #>  [5735,]  115  123  123 #>  [5736,]  115  123  123 #>  [5737,]  114  122  122 #>  [5738,]  114  122  122 #>  [5739,]  115  123  123 #>  [5740,]  115  123  123 #>  [5741,]  115  123  123 #>  [5742,]  115  123  123 #>  [5743,]  115  123  123 #>  [5744,]  115  123  123 #>  [5745,]  114  122  122 #>  [5746,]  115  123  123 #>  [5747,]  115  123  123 #>  [5748,]  115  123  123 #>  [5749,]  114  122  122 #>  [5750,]  115  123  123 #>  [5751,]  115  123  123 #>  [5752,]  114  122  122 #>  [5753,]  115  123  123 #>  [5754,]  115  123  123 #>  [5755,]  115  123  123 #>  [5756,]  115  123  123 #>  [5757,]  115  123  123 #>  [5758,]  115  123  123 #>  [5759,]  115  123  123 #>  [5760,]  115  123  123 #>  [5761,]  115  123  123 #>  [5762,]  115  123  123 #>  [5763,]  115  123  123 #>  [5764,]  115  123  123 #>  [5765,]  115  123  123 #>  [5766,]  115  123  123 #>  [5767,]  115  123  123 #>  [5768,]  114  122  122 #>  [5769,]  115  123  123 #>  [5770,]  115  123  123 #>  [5771,]  115  123  123 #>  [5772,]  114  122  122 #>  [5773,]  115  123  123 #>  [5774,]  115  123  123 #>  [5775,]  115  123  123 #>  [5776,]  115  123  123 #>  [5777,]  115  123  123 #>  [5778,]  115  123  123 #>  [5779,]  115  123  123 #>  [5780,]  115  123  123 #>  [5781,]  115  123  123 #>  [5782,]  115  123  123 #>  [5783,]  115  123  123 #>  [5784,]  115  123  123 #>  [5785,]  115  123  123 #>  [5786,]  115  123  123 #>  [5787,]  115  123  123 #>  [5788,]  115  123  123 #>  [5789,]  115  123  123 #>  [5790,]  115  123  123 #>  [5791,]  115  123  123 #>  [5792,]  115  123  123 #>  [5793,]  115  123  123 #>  [5794,]  115  123  123 #>  [5795,]  115  123  123 #>  [5796,]  114  122  122 #>  [5797,]  115  123  123 #>  [5798,]  115  123  123 #>  [5799,]  115  123  123 #>  [5800,]  115  123  123 #>  [5801,]  117  125  125 #>  [5802,]  117  125  125 #>  [5803,]  116  124  124 #>  [5804,]  117  125  125 #>  [5805,]  116  124  124 #>  [5806,]  116  124  124 #>  [5807,]  117  125  125 #>  [5808,]  117  125  125 #>  [5809,]  117  125  125 #>  [5810,]  117  125  125 #>  [5811,]  116  124  124 #>  [5812,]  116  124  124 #>  [5813,]  117  125  125 #>  [5814,]  116  124  124 #>  [5815,]  117  125  125 #>  [5816,]  117  125  125 #>  [5817,]  117  125  125 #>  [5818,]  117  125  125 #>  [5819,]  116  124  124 #>  [5820,]  116  124  124 #>  [5821,]  117  125  125 #>  [5822,]  116  124  124 #>  [5823,]  117  125  125 #>  [5824,]  116  124  124 #>  [5825,]  117  125  125 #>  [5826,]  116  124  124 #>  [5827,]  117  125  125 #>  [5828,]  117  125  125 #>  [5829,]  116  124  124 #>  [5830,]  116  124  124 #>  [5831,]  117  125  125 #>  [5832,]  116  124  124 #>  [5833,]  116  124  124 #>  [5834,]  116  124  124 #>  [5835,]  116  124  124 #>  [5836,]  116  124  124 #>  [5837,]  117  125  125 #>  [5838,]  117  125  125 #>  [5839,]  117  125  125 #>  [5840,]  116  124  124 #>  [5841,]  116  124  124 #>  [5842,]  116  124  124 #>  [5843,]  117  125  125 #>  [5844,]  117  125  125 #>  [5845,]  117  125  125 #>  [5846,]  117  125  125 #>  [5847,]  117  125  125 #>  [5848,]  116  124  124 #>  [5849,]  117  125  125 #>  [5850,]  117  125  125 #>  [5851,]  116  124  124 #>  [5852,]  116  124  124 #>  [5853,]  117  125  125 #>  [5854,]  116  124  124 #>  [5855,]  116  124  124 #>  [5856,]  117  125  125 #>  [5857,]  116  124  124 #>  [5858,]  116  124  124 #>  [5859,]  117  125  125 #>  [5860,]  116  124  124 #>  [5861,]  117  125  125 #>  [5862,]  116  124  124 #>  [5863,]  116  124  124 #>  [5864,]  117  125  125 #>  [5865,]  117  125  125 #>  [5866,]  116  124  124 #>  [5867,]  116  124  124 #>  [5868,]  116  124  124 #>  [5869,]  116  124  124 #>  [5870,]  117  125  125 #>  [5871,]  117  125  125 #>  [5872,]  117  125  125 #>  [5873,]  117  125  125 #>  [5874,]  117  125  125 #>  [5875,]  117  125  125 #>  [5876,]  117  125  125 #>  [5877,]  117  125  125 #>  [5878,]  116  124  124 #>  [5879,]  117  125  125 #>  [5880,]  116  124  124 #>  [5881,]  116  124  124 #>  [5882,]  117  125  125 #>  [5883,]  116  124  124 #>  [5884,]  117  125  125 #>  [5885,]  117  125  125 #>  [5886,]  117  125  125 #>  [5887,]  117  125  125 #>  [5888,]  117  125  125 #>  [5889,]  116  124  124 #>  [5890,]  117  125  125 #>  [5891,]  116  124  124 #>  [5892,]  117  125  125 #>  [5893,]  116  124  124 #>  [5894,]  117  125  125 #>  [5895,]  117  125  125 #>  [5896,]  117  125  125 #>  [5897,]  116  124  124 #>  [5898,]  116  124  124 #>  [5899,]  116  124  124 #>  [5900,]  117  125  125 #>  [5901,]  118  126  126 #>  [5902,]  118  126  126 #>  [5903,]  118  126  126 #>  [5904,]  119  127  127 #>  [5905,]  118  126  126 #>  [5906,]  118  126  126 #>  [5907,]  118  126  126 #>  [5908,]  118  126  126 #>  [5909,]  118  126  126 #>  [5910,]  118  126  126 #>  [5911,]  118  126  126 #>  [5912,]  118  126  126 #>  [5913,]  118  126  126 #>  [5914,]  119  127  127 #>  [5915,]  118  126  126 #>  [5916,]  118  126  126 #>  [5917,]  118  126  126 #>  [5918,]  118  126  126 #>  [5919,]  118  126  126 #>  [5920,]  118  126  126 #>  [5921,]  118  126  126 #>  [5922,]  118  126  126 #>  [5923,]  118  126  126 #>  [5924,]  118  126  126 #>  [5925,]  118  126  126 #>  [5926,]  118  126  126 #>  [5927,]  118  126  126 #>  [5928,]  118  126  126 #>  [5929,]  118  126  126 #>  [5930,]  118  126  126 #>  [5931,]  118  126  126 #>  [5932,]  118  126  126 #>  [5933,]  118  126  126 #>  [5934,]  118  126  126 #>  [5935,]  118  126  126 #>  [5936,]  118  126  126 #>  [5937,]  118  126  126 #>  [5938,]  118  126  126 #>  [5939,]  118  126  126 #>  [5940,]  118  126  126 #>  [5941,]  118  126  126 #>  [5942,]  118  126  126 #>  [5943,]  118  126  126 #>  [5944,]  118  126  126 #>  [5945,]  118  126  126 #>  [5946,]  118  126  126 #>  [5947,]  118  126  126 #>  [5948,]  118  126  126 #>  [5949,]  118  126  126 #>  [5950,]  118  126  126 #>  [5951,]  118  126  126 #>  [5952,]  118  126  126 #>  [5953,]  118  126  126 #>  [5954,]  118  126  126 #>  [5955,]  118  126  126 #>  [5956,]  118  126  126 #>  [5957,]  118  126  126 #>  [5958,]  118  126  126 #>  [5959,]  118  126  126 #>  [5960,]  118  126  126 #>  [5961,]  119  127  127 #>  [5962,]  118  126  126 #>  [5963,]  118  126  126 #>  [5964,]  118  126  126 #>  [5965,]  118  126  126 #>  [5966,]  118  126  126 #>  [5967,]  118  126  126 #>  [5968,]  118  126  126 #>  [5969,]  118  126  126 #>  [5970,]  118  126  126 #>  [5971,]  118  126  126 #>  [5972,]  118  126  126 #>  [5973,]  118  126  126 #>  [5974,]  118  126  126 #>  [5975,]  118  126  126 #>  [5976,]  118  126  126 #>  [5977,]  118  126  126 #>  [5978,]  118  126  126 #>  [5979,]  118  126  126 #>  [5980,]  118  126  126 #>  [5981,]  118  126  126 #>  [5982,]  118  126  126 #>  [5983,]  118  126  126 #>  [5984,]  118  126  126 #>  [5985,]  118  126  126 #>  [5986,]  118  126  126 #>  [5987,]  118  126  126 #>  [5988,]  118  126  126 #>  [5989,]  118  126  126 #>  [5990,]  118  126  126 #>  [5991,]  118  126  126 #>  [5992,]  119  127  127 #>  [5993,]  119  127  127 #>  [5994,]  118  126  126 #>  [5995,]  118  126  126 #>  [5996,]  119  127  127 #>  [5997,]  118  126  126 #>  [5998,]  118  126  126 #>  [5999,]  118  126  126 #>  [6000,]  118  126  126 #>  [6001,]  121  129  128 #>  [6002,]  121  129  128 #>  [6003,]  120  128  128 #>  [6004,]  120  128  129 #>  [6005,]  120  128  128 #>  [6006,]  120  128  128 #>  [6007,]  121  129  129 #>  [6008,]  121  129  128 #>  [6009,]  120  128  128 #>  [6010,]  120  128  129 #>  [6011,]  120  128  128 #>  [6012,]  121  129  128 #>  [6013,]  121  129  128 #>  [6014,]  120  128  128 #>  [6015,]  121  129  128 #>  [6016,]  121  129  129 #>  [6017,]  121  129  128 #>  [6018,]  121  129  128 #>  [6019,]  121  129  128 #>  [6020,]  121  129  129 #>  [6021,]  120  128  128 #>  [6022,]  121  129  128 #>  [6023,]  121  129  128 #>  [6024,]  120  128  129 #>  [6025,]  120  128  129 #>  [6026,]  121  129  128 #>  [6027,]  121  129  128 #>  [6028,]  120  128  129 #>  [6029,]  121  129  128 #>  [6030,]  121  129  128 #>  [6031,]  120  128  128 #>  [6032,]  120  128  128 #>  [6033,]  121  129  128 #>  [6034,]  120  128  128 #>  [6035,]  120  128  128 #>  [6036,]  121  129  129 #>  [6037,]  121  129  128 #>  [6038,]  121  129  128 #>  [6039,]  120  128  129 #>  [6040,]  120  128  128 #>  [6041,]  121  129  128 #>  [6042,]  120  128  128 #>  [6043,]  121  129  128 #>  [6044,]  121  129  128 #>  [6045,]  121  129  128 #>  [6046,]  121  129  128 #>  [6047,]  120  128  128 #>  [6048,]  120  128  128 #>  [6049,]  121  129  128 #>  [6050,]  121  129  129 #>  [6051,]  121  129  128 #>  [6052,]  120  128  129 #>  [6053,]  121  129  128 #>  [6054,]  120  128  129 #>  [6055,]  121  129  128 #>  [6056,]  121  129  128 #>  [6057,]  120  128  129 #>  [6058,]  121  129  128 #>  [6059,]  121  129  128 #>  [6060,]  121  129  128 #>  [6061,]  121  129  128 #>  [6062,]  120  128  128 #>  [6063,]  121  129  128 #>  [6064,]  121  129  128 #>  [6065,]  120  128  128 #>  [6066,]  121  129  128 #>  [6067,]  121  129  128 #>  [6068,]  121  129  128 #>  [6069,]  121  129  128 #>  [6070,]  120  128  128 #>  [6071,]  121  129  128 #>  [6072,]  120  128  128 #>  [6073,]  120  128  129 #>  [6074,]  120  128  128 #>  [6075,]  121  129  128 #>  [6076,]  120  128  129 #>  [6077,]  121  129  128 #>  [6078,]  121  129  128 #>  [6079,]  120  128  128 #>  [6080,]  121  129  128 #>  [6081,]  121  129  128 #>  [6082,]  120  128  128 #>  [6083,]  121  129  128 #>  [6084,]  121  129  128 #>  [6085,]  121  129  128 #>  [6086,]  121  129  129 #>  [6087,]  121  129  128 #>  [6088,]  121  129  128 #>  [6089,]  120  128  128 #>  [6090,]  121  129  128 #>  [6091,]  120  128  129 #>  [6092,]  121  129  128 #>  [6093,]  121  129  128 #>  [6094,]  121  129  128 #>  [6095,]  121  129  128 #>  [6096,]  121  129  128 #>  [6097,]  121  129  128 #>  [6098,]  120  128  128 #>  [6099,]  121  129  128 #>  [6100,]  121  129  128 #>  [6101,]  123  131  131 #>  [6102,]  123  131  131 #>  [6103,]  122  130  130 #>  [6104,]  123  130  130 #>  [6105,]  123  130  130 #>  [6106,]  123  130  130 #>  [6107,]  122  131  131 #>  [6108,]  123  131  131 #>  [6109,]  123  130  130 #>  [6110,]  123  130  130 #>  [6111,]  123  130  130 #>  [6112,]  123  131  131 #>  [6113,]  122  131  131 #>  [6114,]  123  130  130 #>  [6115,]  123  131  131 #>  [6116,]  122  131  131 #>  [6117,]  123  131  131 #>  [6118,]  123  131  131 #>  [6119,]  123  131  131 #>  [6120,]  123  131  131 #>  [6121,]  122  130  130 #>  [6122,]  123  131  131 #>  [6123,]  122  131  131 #>  [6124,]  123  130  130 #>  [6125,]  123  130  130 #>  [6126,]  123  131  131 #>  [6127,]  123  131  131 #>  [6128,]  123  130  130 #>  [6129,]  123  131  131 #>  [6130,]  122  131  131 #>  [6131,]  122  130  130 #>  [6132,]  123  130  130 #>  [6133,]  123  131  131 #>  [6134,]  123  130  130 #>  [6135,]  123  130  130 #>  [6136,]  123  131  131 #>  [6137,]  123  131  131 #>  [6138,]  123  131  131 #>  [6139,]  122  130  130 #>  [6140,]  122  130  130 #>  [6141,]  123  131  131 #>  [6142,]  123  130  130 #>  [6143,]  123  131  131 #>  [6144,]  123  131  131 #>  [6145,]  123  131  131 #>  [6146,]  123  131  131 #>  [6147,]  122  130  130 #>  [6148,]  123  130  130 #>  [6149,]  122  131  131 #>  [6150,]  123  131  131 #>  [6151,]  123  131  131 #>  [6152,]  123  130  130 #>  [6153,]  123  131  131 #>  [6154,]  122  130  130 #>  [6155,]  123  131  131 #>  [6156,]  123  131  131 #>  [6157,]  123  130  130 #>  [6158,]  123  131  131 #>  [6159,]  123  131  131 #>  [6160,]  123  131  131 #>  [6161,]  123  131  131 #>  [6162,]  122  130  130 #>  [6163,]  123  131  131 #>  [6164,]  123  131  131 #>  [6165,]  123  130  130 #>  [6166,]  123  131  131 #>  [6167,]  123  130  130 #>  [6168,]  123  131  131 #>  [6169,]  123  131  131 #>  [6170,]  122  130  130 #>  [6171,]  123  131  131 #>  [6172,]  123  130  130 #>  [6173,]  123  130  130 #>  [6174,]  123  130  130 #>  [6175,]  123  131  131 #>  [6176,]  123  130  130 #>  [6177,]  122  131  131 #>  [6178,]  123  131  131 #>  [6179,]  122  130  130 #>  [6180,]  122  131  131 #>  [6181,]  123  131  131 #>  [6182,]  123  130  130 #>  [6183,]  122  131  131 #>  [6184,]  123  131  131 #>  [6185,]  123  131  131 #>  [6186,]  123  130  130 #>  [6187,]  123  131  131 #>  [6188,]  123  130  130 #>  [6189,]  123  130  130 #>  [6190,]  123  131  131 #>  [6191,]  123  130  130 #>  [6192,]  123  131  131 #>  [6193,]  123  131  131 #>  [6194,]  123  130  130 #>  [6195,]  122  131  131 #>  [6196,]  123  131  131 #>  [6197,]  123  131  131 #>  [6198,]  122  130  130 #>  [6199,]  123  131  131 #>  [6200,]  123  131  131 #>  [6201,]  125  133  133 #>  [6202,]  124  132  132 #>  [6203,]  125  133  133 #>  [6204,]  125  133  133 #>  [6205,]  125  133  133 #>  [6206,]  124  132  132 #>  [6207,]  125  133  133 #>  [6208,]  125  133  133 #>  [6209,]  125  133  133 #>  [6210,]  125  133  133 #>  [6211,]  124  132  132 #>  [6212,]  124  132  132 #>  [6213,]  125  133  133 #>  [6214,]  125  133  133 #>  [6215,]  124  132  132 #>  [6216,]  125  133  133 #>  [6217,]  124  132  132 #>  [6218,]  124  132  132 #>  [6219,]  124  132  132 #>  [6220,]  125  133  133 #>  [6221,]  124  132  132 #>  [6222,]  125  133  133 #>  [6223,]  124  132  132 #>  [6224,]  125  133  133 #>  [6225,]  125  133  133 #>  [6226,]  124  132  132 #>  [6227,]  125  133  133 #>  [6228,]  125  133  133 #>  [6229,]  124  132  132 #>  [6230,]  124  132  132 #>  [6231,]  124  132  132 #>  [6232,]  124  132  132 #>  [6233,]  125  133  133 #>  [6234,]  124  132  132 #>  [6235,]  124  132  132 #>  [6236,]  125  133  133 #>  [6237,]  124  132  132 #>  [6238,]  124  132  132 #>  [6239,]  125  133  133 #>  [6240,]  125  133  133 #>  [6241,]  125  133  133 #>  [6242,]  124  132  132 #>  [6243,]  124  132  132 #>  [6244,]  124  132  132 #>  [6245,]  125  133  133 #>  [6246,]  124  132  132 #>  [6247,]  124  132  132 #>  [6248,]  124  132  132 #>  [6249,]  125  133  133 #>  [6250,]  125  133  133 #>  [6251,]  124  132  132 #>  [6252,]  125  133  133 #>  [6253,]  125  133  133 #>  [6254,]  125  133  133 #>  [6255,]  125  133  133 #>  [6256,]  124  132  132 #>  [6257,]  125  133  133 #>  [6258,]  125  133  133 #>  [6259,]  125  133  133 #>  [6260,]  124  132  132 #>  [6261,]  124  132  132 #>  [6262,]  124  132  132 #>  [6263,]  124  132  132 #>  [6264,]  124  132  132 #>  [6265,]  124  132  132 #>  [6266,]  124  132  132 #>  [6267,]  125  133  133 #>  [6268,]  124  132  132 #>  [6269,]  124  132  132 #>  [6270,]  124  132  132 #>  [6271,]  125  133  133 #>  [6272,]  125  133  133 #>  [6273,]  125  133  133 #>  [6274,]  125  133  133 #>  [6275,]  124  132  132 #>  [6276,]  125  133  133 #>  [6277,]  125  133  133 #>  [6278,]  124  132  132 #>  [6279,]  124  132  132 #>  [6280,]  125  133  133 #>  [6281,]  124  132  132 #>  [6282,]  124  132  132 #>  [6283,]  124  132  132 #>  [6284,]  125  133  133 #>  [6285,]  125  133  133 #>  [6286,]  125  133  133 #>  [6287,]  125  133  133 #>  [6288,]  125  133  133 #>  [6289,]  124  132  132 #>  [6290,]  125  133  133 #>  [6291,]  125  133  133 #>  [6292,]  124  132  132 #>  [6293,]  124  132  132 #>  [6294,]  124  132  132 #>  [6295,]  124  132  132 #>  [6296,]  124  132  132 #>  [6297,]  124  132  132 #>  [6298,]  124  132  132 #>  [6299,]  125  133  133 #>  [6300,]  124  132  132 #>  [6301,]  126  134  134 #>  [6302,]  127  135  135 #>  [6303,]  126  134  134 #>  [6304,]  126  134  134 #>  [6305,]  126  134  134 #>  [6306,]  126  134  134 #>  [6307,]  126  134  134 #>  [6308,]  126  134  134 #>  [6309,]  127  135  135 #>  [6310,]  127  135  135 #>  [6311,]  126  134  134 #>  [6312,]  127  135  135 #>  [6313,]  126  134  134 #>  [6314,]  126  134  134 #>  [6315,]  126  134  134 #>  [6316,]  126  134  134 #>  [6317,]  127  135  135 #>  [6318,]  126  134  134 #>  [6319,]  126  134  134 #>  [6320,]  126  134  134 #>  [6321,]  127  135  135 #>  [6322,]  126  134  134 #>  [6323,]  126  134  134 #>  [6324,]  126  134  134 #>  [6325,]  126  134  134 #>  [6326,]  126  134  134 #>  [6327,]  126  134  134 #>  [6328,]  126  134  134 #>  [6329,]  127  135  135 #>  [6330,]  126  134  134 #>  [6331,]  126  134  134 #>  [6332,]  126  134  134 #>  [6333,]  127  135  135 #>  [6334,]  126  134  134 #>  [6335,]  126  134  134 #>  [6336,]  126  134  134 #>  [6337,]  126  134  134 #>  [6338,]  126  134  134 #>  [6339,]  126  134  134 #>  [6340,]  126  134  134 #>  [6341,]  126  134  134 #>  [6342,]  126  134  134 #>  [6343,]  126  134  134 #>  [6344,]  126  134  134 #>  [6345,]  126  134  134 #>  [6346,]  126  134  134 #>  [6347,]  126  134  134 #>  [6348,]  126  134  134 #>  [6349,]  126  134  134 #>  [6350,]  126  134  134 #>  [6351,]  126  134  134 #>  [6352,]  126  134  134 #>  [6353,]  126  134  134 #>  [6354,]  126  134  134 #>  [6355,]  126  134  134 #>  [6356,]  126  134  134 #>  [6357,]  126  134  134 #>  [6358,]  126  134  134 #>  [6359,]  126  134  134 #>  [6360,]  127  135  135 #>  [6361,]  126  134  134 #>  [6362,]  126  134  134 #>  [6363,]  127  135  135 #>  [6364,]  126  134  134 #>  [6365,]  126  134  134 #>  [6366,]  126  134  134 #>  [6367,]  126  134  134 #>  [6368,]  126  134  134 #>  [6369,]  126  134  134 #>  [6370,]  127  135  135 #>  [6371,]  126  134  134 #>  [6372,]  126  134  134 #>  [6373,]  126  134  134 #>  [6374,]  126  134  134 #>  [6375,]  126  134  134 #>  [6376,]  126  134  134 #>  [6377,]  126  134  134 #>  [6378,]  126  134  134 #>  [6379,]  126  134  134 #>  [6380,]  127  135  135 #>  [6381,]  127  135  135 #>  [6382,]  126  134  134 #>  [6383,]  126  134  134 #>  [6384,]  126  134  134 #>  [6385,]  126  134  134 #>  [6386,]  127  135  135 #>  [6387,]  126  134  134 #>  [6388,]  126  134  134 #>  [6389,]  126  134  134 #>  [6390,]  126  134  134 #>  [6391,]  126  134  134 #>  [6392,]  126  134  134 #>  [6393,]  126  134  134 #>  [6394,]  126  134  134 #>  [6395,]  126  134  134 #>  [6396,]  126  134  134 #>  [6397,]  126  134  134 #>  [6398,]  126  134  134 #>  [6399,]  126  134  134 #>  [6400,]  126  134  134 #>  [6401,]  129  137  136 #>  [6402,]  128  136  138 #>  [6403,]  128  136  138 #>  [6404,]  128  136  137 #>  [6405,]  129  137  136 #>  [6406,]  128  136  138 #>  [6407,]  128  136  138 #>  [6408,]  128  136  137 #>  [6409,]  128  136  137 #>  [6410,]  128  136  137 #>  [6411,]  128  136  138 #>  [6412,]  128  136  138 #>  [6413,]  128  136  138 #>  [6414,]  129  137  136 #>  [6415,]  129  137  136 #>  [6416,]  128  136  138 #>  [6417,]  128  136  138 #>  [6418,]  129  137  136 #>  [6419,]  128  136  138 #>  [6420,]  128  136  138 #>  [6421,]  128  136  138 #>  [6422,]  128  136  138 #>  [6423,]  128  136  138 #>  [6424,]  128  136  138 #>  [6425,]  128  136  138 #>  [6426,]  128  136  138 #>  [6427,]  129  137  136 #>  [6428,]  128  136  138 #>  [6429,]  128  136  138 #>  [6430,]  128  136  138 #>  [6431,]  128  136  138 #>  [6432,]  129  137  136 #>  [6433,]  128  136  138 #>  [6434,]  128  136  138 #>  [6435,]  128  136  138 #>  [6436,]  128  136  138 #>  [6437,]  128  136  138 #>  [6438,]  128  136  138 #>  [6439,]  128  136  138 #>  [6440,]  128  136  138 #>  [6441,]  128  136  138 #>  [6442,]  128  136  138 #>  [6443,]  129  137  136 #>  [6444,]  128  136  138 #>  [6445,]  128  136  138 #>  [6446,]  128  136  138 #>  [6447,]  128  136  138 #>  [6448,]  128  136  138 #>  [6449,]  128  136  138 #>  [6450,]  128  136  138 #>  [6451,]  128  136  137 #>  [6452,]  128  136  138 #>  [6453,]  128  136  138 #>  [6454,]  128  136  138 #>  [6455,]  128  136  138 #>  [6456,]  128  136  138 #>  [6457,]  128  136  138 #>  [6458,]  129  137  136 #>  [6459,]  128  136  138 #>  [6460,]  128  136  138 #>  [6461,]  128  136  138 #>  [6462,]  128  136  138 #>  [6463,]  128  136  138 #>  [6464,]  128  136  138 #>  [6465,]  128  136  138 #>  [6466,]  128  136  138 #>  [6467,]  128  136  138 #>  [6468,]  128  136  138 #>  [6469,]  128  136  138 #>  [6470,]  129  137  136 #>  [6471,]  129  137  136 #>  [6472,]  128  136  138 #>  [6473,]  128  136  138 #>  [6474,]  128  136  138 #>  [6475,]  129  137  136 #>  [6476,]  128  136  138 #>  [6477,]  128  136  138 #>  [6478,]  128  136  138 #>  [6479,]  128  136  138 #>  [6480,]  128  136  138 #>  [6481,]  128  136  138 #>  [6482,]  128  136  138 #>  [6483,]  128  136  138 #>  [6484,]  128  136  138 #>  [6485,]  128  136  138 #>  [6486,]  128  136  138 #>  [6487,]  128  136  138 #>  [6488,]  128  136  138 #>  [6489,]  128  136  138 #>  [6490,]  128  136  138 #>  [6491,]  129  137  136 #>  [6492,]  128  136  138 #>  [6493,]  128  136  138 #>  [6494,]  128  136  138 #>  [6495,]  129  137  136 #>  [6496,]  128  136  138 #>  [6497,]  128  136  138 #>  [6498,]  128  136  138 #>  [6499,]  128  136  138 #>  [6500,]  129  137  136 #>  [6501,]  130  138  139 #>  [6502,]  131  139  140 #>  [6503,]  131  139  140 #>  [6504,]  132  140  140 #>  [6505,]  131  139  140 #>  [6506,]  131  139  140 #>  [6507,]  131  139  140 #>  [6508,]  131  139  140 #>  [6509,]  131  139  140 #>  [6510,]  131  139  140 #>  [6511,]  131  139  140 #>  [6512,]  131  139  140 #>  [6513,]  131  139  140 #>  [6514,]  130  138  139 #>  [6515,]  130  138  139 #>  [6516,]  130  138  139 #>  [6517,]  131  139  140 #>  [6518,]  131  139  140 #>  [6519,]  132  140  140 #>  [6520,]  131  139  140 #>  [6521,]  131  139  140 #>  [6522,]  131  139  140 #>  [6523,]  131  139  140 #>  [6524,]  131  139  140 #>  [6525,]  131  139  140 #>  [6526,]  131  139  140 #>  [6527,]  132  140  140 #>  [6528,]  131  139  140 #>  [6529,]  131  139  140 #>  [6530,]  131  139  140 #>  [6531,]  131  139  140 #>  [6532,]  131  139  140 #>  [6533,]  131  139  140 #>  [6534,]  131  139  140 #>  [6535,]  131  139  140 #>  [6536,]  131  139  140 #>  [6537,]  131  139  140 #>  [6538,]  131  139  140 #>  [6539,]  131  139  140 #>  [6540,]  131  139  140 #>  [6541,]  130  138  139 #>  [6542,]  131  139  140 #>  [6543,]  131  139  140 #>  [6544,]  130  138  139 #>  [6545,]  131  139  140 #>  [6546,]  131  139  140 #>  [6547,]  131  139  140 #>  [6548,]  132  140  140 #>  [6549,]  131  139  140 #>  [6550,]  130  138  139 #>  [6551,]  131  139  140 #>  [6552,]  131  139  140 #>  [6553,]  131  139  140 #>  [6554,]  131  139  140 #>  [6555,]  131  139  140 #>  [6556,]  131  139  140 #>  [6557,]  131  139  140 #>  [6558,]  131  139  140 #>  [6559,]  130  138  139 #>  [6560,]  131  139  140 #>  [6561,]  132  140  140 #>  [6562,]  131  139  140 #>  [6563,]  131  139  140 #>  [6564,]  131  139  140 #>  [6565,]  131  139  140 #>  [6566,]  131  139  140 #>  [6567,]  131  139  140 #>  [6568,]  131  139  140 #>  [6569,]  132  140  140 #>  [6570,]  130  138  139 #>  [6571,]  131  139  140 #>  [6572,]  131  139  140 #>  [6573,]  130  138  139 #>  [6574,]  131  139  140 #>  [6575,]  131  139  140 #>  [6576,]  131  139  140 #>  [6577,]  131  139  140 #>  [6578,]  131  139  140 #>  [6579,]  131  139  140 #>  [6580,]  131  139  140 #>  [6581,]  131  139  140 #>  [6582,]  132  140  140 #>  [6583,]  131  139  140 #>  [6584,]  131  139  140 #>  [6585,]  131  139  140 #>  [6586,]  131  139  140 #>  [6587,]  131  139  140 #>  [6588,]  131  139  140 #>  [6589,]  131  139  140 #>  [6590,]  131  139  140 #>  [6591,]  131  139  140 #>  [6592,]  132  140  140 #>  [6593,]  132  140  140 #>  [6594,]  131  139  140 #>  [6595,]  131  139  140 #>  [6596,]  130  138  139 #>  [6597,]  132  140  140 #>  [6598,]  131  139  140 #>  [6599,]  130  138  139 #>  [6600,]  131  139  140 #>  [6601,]  134  142  141 #>  [6602,]  134  142  141 #>  [6603,]  133  141  142 #>  [6604,]  133  141  142 #>  [6605,]  133  141  142 #>  [6606,]  133  141  142 #>  [6607,]  133  141  142 #>  [6608,]  134  142  141 #>  [6609,]  133  141  142 #>  [6610,]  133  141  142 #>  [6611,]  133  141  142 #>  [6612,]  133  141  142 #>  [6613,]  134  142  141 #>  [6614,]  133  141  142 #>  [6615,]  134  142  141 #>  [6616,]  134  142  141 #>  [6617,]  133  141  142 #>  [6618,]  133  141  142 #>  [6619,]  134  142  141 #>  [6620,]  134  142  141 #>  [6621,]  133  141  142 #>  [6622,]  134  142  141 #>  [6623,]  134  142  141 #>  [6624,]  133  141  142 #>  [6625,]  133  141  142 #>  [6626,]  134  142  141 #>  [6627,]  134  142  141 #>  [6628,]  133  141  142 #>  [6629,]  134  142  141 #>  [6630,]  134  142  141 #>  [6631,]  133  141  142 #>  [6632,]  133  141  142 #>  [6633,]  134  142  141 #>  [6634,]  133  141  142 #>  [6635,]  133  141  142 #>  [6636,]  134  142  141 #>  [6637,]  134  142  141 #>  [6638,]  134  142  141 #>  [6639,]  133  141  142 #>  [6640,]  133  141  142 #>  [6641,]  134  142  141 #>  [6642,]  133  141  142 #>  [6643,]  134  142  141 #>  [6644,]  134  142  141 #>  [6645,]  133  141  142 #>  [6646,]  134  142  141 #>  [6647,]  133  141  142 #>  [6648,]  133  141  142 #>  [6649,]  133  141  142 #>  [6650,]  134  142  141 #>  [6651,]  134  142  141 #>  [6652,]  133  141  142 #>  [6653,]  134  142  141 #>  [6654,]  133  141  142 #>  [6655,]  134  142  141 #>  [6656,]  134  142  141 #>  [6657,]  133  141  142 #>  [6658,]  134  142  141 #>  [6659,]  134  142  141 #>  [6660,]  134  142  141 #>  [6661,]  134  142  141 #>  [6662,]  133  141  142 #>  [6663,]  134  142  141 #>  [6664,]  134  142  141 #>  [6665,]  133  141  142 #>  [6666,]  134  142  141 #>  [6667,]  133  141  142 #>  [6668,]  134  142  141 #>  [6669,]  134  142  141 #>  [6670,]  133  141  142 #>  [6671,]  134  142  141 #>  [6672,]  133  141  142 #>  [6673,]  133  141  142 #>  [6674,]  133  141  142 #>  [6675,]  134  142  141 #>  [6676,]  133  141  142 #>  [6677,]  134  142  141 #>  [6678,]  134  142  141 #>  [6679,]  133  141  142 #>  [6680,]  134  142  141 #>  [6681,]  134  142  141 #>  [6682,]  133  141  142 #>  [6683,]  134  142  141 #>  [6684,]  134  142  141 #>  [6685,]  134  142  141 #>  [6686,]  133  141  142 #>  [6687,]  134  142  141 #>  [6688,]  133  141  142 #>  [6689,]  133  141  142 #>  [6690,]  134  142  141 #>  [6691,]  133  141  142 #>  [6692,]  133  141  142 #>  [6693,]  134  142  141 #>  [6694,]  133  141  142 #>  [6695,]  134  142  141 #>  [6696,]  134  142  141 #>  [6697,]  134  142  141 #>  [6698,]  133  141  142 #>  [6699,]  133  141  142 #>  [6700,]  134  142  141 #>  [6701,]  136  143  144 #>  [6702,]  136  143  143 #>  [6703,]  135  144  145 #>  [6704,]  135  144  146 #>  [6705,]  135  144  145 #>  [6706,]  136  143  144 #>  [6707,]  135  144  146 #>  [6708,]  135  144  146 #>  [6709,]  135  144  146 #>  [6710,]  135  144  146 #>  [6711,]  136  143  143 #>  [6712,]  135  144  145 #>  [6713,]  136  143  143 #>  [6714,]  136  143  144 #>  [6715,]  136  143  144 #>  [6716,]  136  143  143 #>  [6717,]  136  143  143 #>  [6718,]  135  144  146 #>  [6719,]  135  144  145 #>  [6720,]  135  144  145 #>  [6721,]  136  143  143 #>  [6722,]  136  143  143 #>  [6723,]  135  144  146 #>  [6724,]  135  144  145 #>  [6725,]  135  144  146 #>  [6726,]  136  143  144 #>  [6727,]  136  143  143 #>  [6728,]  135  144  146 #>  [6729,]  136  143  143 #>  [6730,]  135  144  145 #>  [6731,]  135  144  146 #>  [6732,]  135  144  145 #>  [6733,]  136  143  144 #>  [6734,]  135  144  145 #>  [6735,]  136  143  143 #>  [6736,]  135  144  145 #>  [6737,]  136  143  143 #>  [6738,]  135  144  146 #>  [6739,]  135  144  146 #>  [6740,]  135  144  145 #>  [6741,]  136  143  143 #>  [6742,]  135  144  145 #>  [6743,]  135  144  146 #>  [6744,]  136  143  143 #>  [6745,]  135  144  146 #>  [6746,]  135  144  146 #>  [6747,]  136  143  143 #>  [6748,]  135  144  145 #>  [6749,]  135  144  146 #>  [6750,]  136  143  144 #>  [6751,]  135  144  145 #>  [6752,]  136  143  143 #>  [6753,]  135  144  146 #>  [6754,]  135  144  145 #>  [6755,]  135  144  145 #>  [6756,]  135  144  146 #>  [6757,]  135  144  145 #>  [6758,]  136  143  144 #>  [6759,]  136  143  143 #>  [6760,]  135  144  145 #>  [6761,]  136  143  144 #>  [6762,]  135  144  145 #>  [6763,]  135  144  145 #>  [6764,]  135  144  146 #>  [6765,]  135  144  146 #>  [6766,]  135  144  145 #>  [6767,]  135  144  145 #>  [6768,]  136  143  144 #>  [6769,]  135  144  145 #>  [6770,]  136  143  143 #>  [6771,]  136  143  144 #>  [6772,]  135  144  146 #>  [6773,]  136  143  144 #>  [6774,]  135  144  146 #>  [6775,]  136  143  144 #>  [6776,]  136  143  144 #>  [6777,]  136  143  143 #>  [6778,]  135  144  145 #>  [6779,]  136  143  143 #>  [6780,]  135  144  145 #>  [6781,]  136  143  144 #>  [6782,]  135  144  146 #>  [6783,]  136  143  143 #>  [6784,]  136  143  143 #>  [6785,]  135  144  146 #>  [6786,]  136  143  143 #>  [6787,]  136  143  143 #>  [6788,]  135  144  146 #>  [6789,]  135  144  145 #>  [6790,]  136  143  143 #>  [6791,]  135  144  145 #>  [6792,]  135  144  146 #>  [6793,]  136  143  143 #>  [6794,]  136  143  144 #>  [6795,]  135  144  146 #>  [6796,]  136  143  144 #>  [6797,]  136  143  144 #>  [6798,]  135  144  145 #>  [6799,]  136  143  143 #>  [6800,]  136  143  143 #>  [6801,]  138  146  148 #>  [6802,]  137  145  147 #>  [6803,]  137  145  147 #>  [6804,]  137  145  147 #>  [6805,]  137  145  147 #>  [6806,]  138  146  148 #>  [6807,]  137  145  147 #>  [6808,]  138  146  148 #>  [6809,]  138  146  148 #>  [6810,]  137  145  147 #>  [6811,]  137  145  147 #>  [6812,]  138  146  148 #>  [6813,]  137  145  147 #>  [6814,]  137  145  147 #>  [6815,]  138  146  148 #>  [6816,]  137  145  147 #>  [6817,]  137  145  147 #>  [6818,]  137  145  147 #>  [6819,]  137  145  147 #>  [6820,]  138  146  148 #>  [6821,]  137  145  147 #>  [6822,]  137  145  147 #>  [6823,]  137  145  147 #>  [6824,]  137  145  147 #>  [6825,]  137  145  147 #>  [6826,]  138  146  148 #>  [6827,]  137  145  147 #>  [6828,]  137  145  147 #>  [6829,]  137  145  147 #>  [6830,]  137  145  147 #>  [6831,]  137  145  147 #>  [6832,]  137  145  147 #>  [6833,]  138  146  148 #>  [6834,]  137  145  147 #>  [6835,]  137  145  147 #>  [6836,]  137  145  147 #>  [6837,]  137  145  147 #>  [6838,]  137  145  147 #>  [6839,]  137  145  147 #>  [6840,]  137  145  147 #>  [6841,]  137  145  147 #>  [6842,]  137  145  147 #>  [6843,]  138  146  148 #>  [6844,]  137  145  147 #>  [6845,]  138  146  148 #>  [6846,]  138  146  148 #>  [6847,]  137  145  147 #>  [6848,]  137  145  147 #>  [6849,]  137  145  147 #>  [6850,]  138  146  148 #>  [6851,]  138  146  148 #>  [6852,]  137  145  147 #>  [6853,]  138  146  148 #>  [6854,]  137  145  147 #>  [6855,]  138  146  148 #>  [6856,]  138  146  148 #>  [6857,]  138  146  148 #>  [6858,]  138  146  148 #>  [6859,]  137  145  147 #>  [6860,]  138  146  148 #>  [6861,]  138  146  148 #>  [6862,]  137  145  147 #>  [6863,]  137  145  147 #>  [6864,]  138  146  148 #>  [6865,]  138  146  148 #>  [6866,]  138  146  148 #>  [6867,]  137  145  147 #>  [6868,]  138  146  148 #>  [6869,]  137  145  147 #>  [6870,]  137  145  147 #>  [6871,]  138  146  148 #>  [6872,]  138  146  148 #>  [6873,]  138  146  148 #>  [6874,]  138  146  148 #>  [6875,]  138  146  148 #>  [6876,]  138  146  148 #>  [6877,]  137  145  147 #>  [6878,]  138  146  148 #>  [6879,]  137  145  147 #>  [6880,]  137  145  147 #>  [6881,]  138  146  148 #>  [6882,]  137  145  147 #>  [6883,]  137  145  147 #>  [6884,]  137  145  147 #>  [6885,]  137  145  147 #>  [6886,]  137  145  147 #>  [6887,]  137  145  147 #>  [6888,]  137  145  147 #>  [6889,]  137  145  147 #>  [6890,]  137  145  147 #>  [6891,]  137  145  147 #>  [6892,]  138  146  148 #>  [6893,]  137  145  147 #>  [6894,]  138  146  148 #>  [6895,]  137  145  147 #>  [6896,]  138  146  148 #>  [6897,]  138  146  148 #>  [6898,]  137  145  147 #>  [6899,]  137  145  147 #>  [6900,]  137  145  147 #>  [6901,]  140  148  151 #>  [6902,]  140  147  149 #>  [6903,]  139  148  150 #>  [6904,]  139  148  151 #>  [6905,]  139  148  150 #>  [6906,]  140  147  149 #>  [6907,]  139  148  150 #>  [6908,]  139  148  150 #>  [6909,]  139  148  151 #>  [6910,]  139  148  151 #>  [6911,]  139  147  149 #>  [6912,]  139  147  149 #>  [6913,]  140  148  150 #>  [6914,]  140  148  151 #>  [6915,]  140  147  149 #>  [6916,]  140  148  150 #>  [6917,]  140  147  149 #>  [6918,]  139  147  149 #>  [6919,]  139  147  149 #>  [6920,]  139  148  150 #>  [6921,]  140  147  149 #>  [6922,]  140  148  150 #>  [6923,]  139  147  149 #>  [6924,]  139  148  150 #>  [6925,]  139  148  150 #>  [6926,]  140  147  149 #>  [6927,]  140  148  151 #>  [6928,]  139  148  150 #>  [6929,]  140  147  149 #>  [6930,]  139  147  149 #>  [6931,]  139  147  149 #>  [6932,]  139  147  149 #>  [6933,]  140  148  151 #>  [6934,]  139  147  149 #>  [6935,]  140  147  149 #>  [6936,]  139  148  151 #>  [6937,]  140  147  149 #>  [6938,]  139  148  151 #>  [6939,]  139  148  150 #>  [6940,]  139  148  150 #>  [6941,]  140  148  151 #>  [6942,]  139  147  149 #>  [6943,]  139  147  149 #>  [6944,]  140  147  149 #>  [6945,]  139  148  150 #>  [6946,]  139  147  149 #>  [6947,]  139  147  149 #>  [6948,]  139  147  149 #>  [6949,]  139  148  150 #>  [6950,]  140  148  150 #>  [6951,]  139  147  149 #>  [6952,]  140  148  151 #>  [6953,]  139  148  150 #>  [6954,]  139  148  150 #>  [6955,]  139  148  150 #>  [6956,]  139  147  149 #>  [6957,]  139  148  151 #>  [6958,]  140  148  151 #>  [6959,]  140  148  150 #>  [6960,]  139  147  149 #>  [6961,]  140  147  149 #>  [6962,]  139  147  149 #>  [6963,]  139  147  149 #>  [6964,]  139  147  149 #>  [6965,]  139  147  149 #>  [6966,]  139  147  149 #>  [6967,]  139  148  151 #>  [6968,]  140  147  149 #>  [6969,]  139  147  149 #>  [6970,]  140  147  149 #>  [6971,]  140  148  150 #>  [6972,]  139  148  150 #>  [6973,]  140  148  151 #>  [6974,]  139  148  151 #>  [6975,]  139  147  149 #>  [6976,]  140  148  150 #>  [6977,]  140  148  150 #>  [6978,]  139  147  149 #>  [6979,]  140  147  149 #>  [6980,]  139  148  151 #>  [6981,]  140  147  149 #>  [6982,]  139  147  149 #>  [6983,]  140  148  150 #>  [6984,]  139  148  150 #>  [6985,]  139  148  151 #>  [6986,]  140  148  150 #>  [6987,]  139  148  151 #>  [6988,]  139  148  151 #>  [6989,]  139  147  149 #>  [6990,]  140  148  150 #>  [6991,]  139  148  151 #>  [6992,]  139  147  149 #>  [6993,]  140  147  149 #>  [6994,]  140  147  149 #>  [6995,]  139  147  149 #>  [6996,]  140  147  149 #>  [6997,]  139  147  149 #>  [6998,]  139  148  150 #>  [6999,]  140  148  151 #>  [7000,]  140  147  149 #>  [7001,]  142  150  153 #>  [7002,]  142  150  153 #>  [7003,]  141  149  152 #>  [7004,]  142  150  152 #>  [7005,]  142  150  152 #>  [7006,]  142  150  152 #>  [7007,]  142  150  153 #>  [7008,]  142  150  153 #>  [7009,]  141  149  152 #>  [7010,]  141  149  152 #>  [7011,]  141  149  152 #>  [7012,]  142  150  153 #>  [7013,]  142  150  153 #>  [7014,]  141  149  152 #>  [7015,]  142  150  153 #>  [7016,]  142  150  153 #>  [7017,]  142  150  152 #>  [7018,]  142  150  153 #>  [7019,]  142  150  153 #>  [7020,]  142  150  153 #>  [7021,]  141  149  152 #>  [7022,]  142  150  153 #>  [7023,]  142  150  153 #>  [7024,]  142  150  152 #>  [7025,]  142  150  152 #>  [7026,]  142  150  153 #>  [7027,]  142  150  153 #>  [7028,]  141  149  152 #>  [7029,]  142  150  153 #>  [7030,]  142  150  153 #>  [7031,]  141  149  152 #>  [7032,]  141  149  152 #>  [7033,]  142  150  153 #>  [7034,]  141  149  152 #>  [7035,]  141  149  152 #>  [7036,]  142  150  153 #>  [7037,]  142  150  153 #>  [7038,]  142  150  153 #>  [7039,]  141  149  152 #>  [7040,]  141  149  152 #>  [7041,]  142  150  153 #>  [7042,]  142  150  152 #>  [7043,]  142  150  153 #>  [7044,]  142  150  153 #>  [7045,]  142  150  153 #>  [7046,]  142  150  153 #>  [7047,]  142  150  152 #>  [7048,]  141  149  152 #>  [7049,]  142  150  153 #>  [7050,]  142  150  153 #>  [7051,]  142  150  153 #>  [7052,]  141  149  152 #>  [7053,]  142  150  153 #>  [7054,]  142  150  152 #>  [7055,]  142  150  153 #>  [7056,]  142  150  153 #>  [7057,]  142  150  152 #>  [7058,]  142  150  153 #>  [7059,]  142  150  153 #>  [7060,]  142  150  153 #>  [7061,]  142  150  153 #>  [7062,]  142  150  152 #>  [7063,]  142  150  153 #>  [7064,]  142  150  153 #>  [7065,]  141  149  152 #>  [7066,]  142  150  153 #>  [7067,]  142  150  152 #>  [7068,]  142  150  153 #>  [7069,]  142  150  153 #>  [7070,]  141  149  152 #>  [7071,]  142  150  153 #>  [7072,]  142  150  152 #>  [7073,]  142  150  152 #>  [7074,]  141  149  152 #>  [7075,]  142  150  153 #>  [7076,]  142  150  152 #>  [7077,]  142  150  153 #>  [7078,]  142  150  153 #>  [7079,]  142  150  152 #>  [7080,]  142  150  153 #>  [7081,]  142  150  153 #>  [7082,]  141  149  152 #>  [7083,]  142  150  153 #>  [7084,]  142  150  153 #>  [7085,]  142  150  153 #>  [7086,]  142  150  152 #>  [7087,]  142  150  153 #>  [7088,]  142  150  152 #>  [7089,]  142  150  152 #>  [7090,]  142  150  153 #>  [7091,]  142  150  152 #>  [7092,]  142  150  152 #>  [7093,]  142  150  153 #>  [7094,]  142  150  152 #>  [7095,]  142  150  153 #>  [7096,]  142  150  153 #>  [7097,]  142  150  153 #>  [7098,]  141  149  152 #>  [7099,]  142  150  152 #>  [7100,]  142  150  153 #>  [7101,]  143  151  154 #>  [7102,]  143  151  154 #>  [7103,]  143  151  154 #>  [7104,]  144  151  154 #>  [7105,]  143  151  154 #>  [7106,]  143  151  154 #>  [7107,]  144  151  154 #>  [7108,]  143  151  154 #>  [7109,]  143  151  154 #>  [7110,]  144  151  154 #>  [7111,]  143  151  154 #>  [7112,]  143  151  154 #>  [7113,]  143  151  154 #>  [7114,]  143  151  154 #>  [7115,]  144  151  154 #>  [7116,]  144  151  154 #>  [7117,]  144  151  154 #>  [7118,]  144  151  154 #>  [7119,]  143  151  154 #>  [7120,]  143  151  155 #>  [7121,]  144  151  154 #>  [7122,]  143  151  155 #>  [7123,]  144  151  154 #>  [7124,]  143  151  154 #>  [7125,]  144  151  154 #>  [7126,]  143  151  154 #>  [7127,]  144  151  154 #>  [7128,]  144  151  154 #>  [7129,]  143  151  155 #>  [7130,]  143  151  154 #>  [7131,]  143  151  154 #>  [7132,]  143  151  154 #>  [7133,]  143  151  154 #>  [7134,]  143  151  154 #>  [7135,]  143  151  154 #>  [7136,]  143  151  154 #>  [7137,]  143  151  154 #>  [7138,]  143  151  154 #>  [7139,]  144  151  154 #>  [7140,]  143  151  154 #>  [7141,]  143  151  154 #>  [7142,]  143  151  154 #>  [7143,]  144  151  154 #>  [7144,]  143  151  154 #>  [7145,]  144  151  154 #>  [7146,]  143  151  154 #>  [7147,]  144  151  154 #>  [7148,]  143  151  154 #>  [7149,]  143  151  154 #>  [7150,]  143  151  154 #>  [7151,]  143  151  154 #>  [7152,]  143  151  154 #>  [7153,]  144  151  154 #>  [7154,]  143  151  154 #>  [7155,]  143  151  154 #>  [7156,]  143  151  154 #>  [7157,]  143  151  154 #>  [7158,]  143  151  155 #>  [7159,]  143  151  154 #>  [7160,]  143  151  154 #>  [7161,]  144  151  154 #>  [7162,]  143  151  154 #>  [7163,]  143  151  154 #>  [7164,]  144  151  155 #>  [7165,]  143  151  154 #>  [7166,]  143  151  154 #>  [7167,]  143  151  154 #>  [7168,]  143  151  154 #>  [7169,]  143  151  154 #>  [7170,]  143  151  154 #>  [7171,]  144  151  154 #>  [7172,]  144  151  154 #>  [7173,]  144  151  154 #>  [7174,]  144  151  154 #>  [7175,]  144  151  154 #>  [7176,]  144  151  154 #>  [7177,]  144  151  155 #>  [7178,]  143  151  154 #>  [7179,]  143  151  154 #>  [7180,]  143  151  154 #>  [7181,]  143  151  154 #>  [7182,]  143  151  154 #>  [7183,]  143  151  154 #>  [7184,]  144  151  154 #>  [7185,]  143  151  154 #>  [7186,]  143  151  154 #>  [7187,]  143  151  155 #>  [7188,]  144  151  154 #>  [7189,]  143  151  154 #>  [7190,]  143  151  154 #>  [7191,]  143  151  154 #>  [7192,]  143  151  154 #>  [7193,]  143  151  154 #>  [7194,]  144  151  154 #>  [7195,]  144  151  154 #>  [7196,]  143  151  154 #>  [7197,]  143  151  154 #>  [7198,]  143  151  154 #>  [7199,]  143  151  154 #>  [7200,]  144  151  154 #>  [7201,]  146  153  157 #>  [7202,]  146  153  157 #>  [7203,]  146  153  157 #>  [7204,]  146  153  157 #>  [7205,]  146  153  157 #>  [7206,]  146  153  157 #>  [7207,]  146  153  157 #>  [7208,]  146  153  157 #>  [7209,]  146  153  157 #>  [7210,]  146  153  157 #>  [7211,]  146  153  157 #>  [7212,]  145  152  156 #>  [7213,]  146  153  157 #>  [7214,]  146  153  157 #>  [7215,]  145  152  156 #>  [7216,]  146  153  157 #>  [7217,]  145  152  156 #>  [7218,]  146  153  157 #>  [7219,]  146  153  157 #>  [7220,]  146  153  157 #>  [7221,]  146  153  157 #>  [7222,]  146  153  157 #>  [7223,]  145  152  156 #>  [7224,]  146  153  157 #>  [7225,]  146  153  157 #>  [7226,]  146  153  157 #>  [7227,]  146  153  157 #>  [7228,]  146  153  157 #>  [7229,]  146  153  157 #>  [7230,]  146  153  157 #>  [7231,]  145  152  156 #>  [7232,]  146  153  157 #>  [7233,]  146  153  157 #>  [7234,]  145  152  156 #>  [7235,]  146  153  157 #>  [7236,]  146  153  157 #>  [7237,]  145  152  156 #>  [7238,]  146  153  157 #>  [7239,]  146  153  157 #>  [7240,]  146  153  157 #>  [7241,]  146  153  157 #>  [7242,]  145  152  156 #>  [7243,]  145  152  156 #>  [7244,]  145  152  156 #>  [7245,]  146  153  157 #>  [7246,]  146  153  157 #>  [7247,]  146  153  157 #>  [7248,]  145  152  156 #>  [7249,]  146  153  157 #>  [7250,]  146  153  157 #>  [7251,]  146  153  157 #>  [7252,]  146  153  157 #>  [7253,]  146  153  157 #>  [7254,]  146  153  157 #>  [7255,]  146  153  157 #>  [7256,]  146  153  157 #>  [7257,]  146  153  157 #>  [7258,]  146  153  157 #>  [7259,]  146  153  157 #>  [7260,]  146  153  157 #>  [7261,]  146  153  157 #>  [7262,]  146  153  157 #>  [7263,]  145  152  156 #>  [7264,]  146  153  157 #>  [7265,]  146  153  157 #>  [7266,]  146  153  157 #>  [7267,]  146  153  157 #>  [7268,]  146  153  157 #>  [7269,]  146  153  157 #>  [7270,]  145  152  156 #>  [7271,]  146  153  157 #>  [7272,]  146  153  157 #>  [7273,]  146  153  157 #>  [7274,]  146  153  157 #>  [7275,]  145  152  156 #>  [7276,]  146  153  157 #>  [7277,]  146  153  157 #>  [7278,]  145  152  156 #>  [7279,]  145  152  156 #>  [7280,]  146  153  157 #>  [7281,]  145  152  156 #>  [7282,]  146  153  157 #>  [7283,]  146  153  157 #>  [7284,]  146  153  157 #>  [7285,]  146  153  157 #>  [7286,]  146  153  157 #>  [7287,]  146  153  157 #>  [7288,]  146  153  157 #>  [7289,]  146  153  157 #>  [7290,]  146  153  157 #>  [7291,]  146  153  157 #>  [7292,]  146  153  157 #>  [7293,]  146  153  157 #>  [7294,]  145  152  156 #>  [7295,]  145  152  156 #>  [7296,]  146  153  157 #>  [7297,]  146  153  157 #>  [7298,]  146  153  157 #>  [7299,]  146  153  157 #>  [7300,]  145  152  156 #>  [7301,]  147  154  158 #>  [7302,]  147  154  158 #>  [7303,]  148  156  159 #>  [7304,]  149  155  159 #>  [7305,]  148  156  159 #>  [7306,]  147  154  158 #>  [7307,]  149  155  159 #>  [7308,]  149  155  159 #>  [7309,]  149  155  159 #>  [7310,]  149  155  159 #>  [7311,]  148  156  159 #>  [7312,]  148  156  159 #>  [7313,]  147  154  158 #>  [7314,]  147  154  158 #>  [7315,]  147  154  158 #>  [7316,]  147  154  158 #>  [7317,]  147  154  158 #>  [7318,]  149  155  159 #>  [7319,]  148  156  159 #>  [7320,]  148  156  159 #>  [7321,]  147  154  158 #>  [7322,]  147  154  158 #>  [7323,]  149  155  159 #>  [7324,]  148  156  159 #>  [7325,]  149  155  159 #>  [7326,]  147  154  158 #>  [7327,]  147  154  158 #>  [7328,]  149  155  159 #>  [7329,]  147  154  158 #>  [7330,]  148  156  159 #>  [7331,]  148  156  159 #>  [7332,]  148  156  159 #>  [7333,]  147  154  158 #>  [7334,]  148  156  159 #>  [7335,]  147  154  158 #>  [7336,]  148  156  159 #>  [7337,]  147  154  158 #>  [7338,]  149  155  159 #>  [7339,]  149  155  159 #>  [7340,]  148  156  159 #>  [7341,]  147  154  158 #>  [7342,]  148  156  159 #>  [7343,]  149  155  159 #>  [7344,]  147  154  158 #>  [7345,]  149  155  159 #>  [7346,]  149  155  159 #>  [7347,]  149  155  159 #>  [7348,]  148  156  159 #>  [7349,]  148  156  159 #>  [7350,]  147  154  158 #>  [7351,]  148  156  159 #>  [7352,]  147  154  158 #>  [7353,]  149  155  159 #>  [7354,]  148  156  159 #>  [7355,]  148  156  159 #>  [7356,]  149  155  159 #>  [7357,]  148  156  159 #>  [7358,]  147  154  158 #>  [7359,]  147  154  158 #>  [7360,]  148  156  159 #>  [7361,]  147  154  158 #>  [7362,]  148  156  159 #>  [7363,]  148  156  159 #>  [7364,]  149  155  159 #>  [7365,]  148  156  159 #>  [7366,]  148  156  159 #>  [7367,]  148  156  159 #>  [7368,]  147  154  158 #>  [7369,]  148  156  159 #>  [7370,]  147  154  158 #>  [7371,]  147  154  158 #>  [7372,]  149  155  159 #>  [7373,]  147  154  158 #>  [7374,]  149  155  159 #>  [7375,]  149  155  159 #>  [7376,]  147  154  158 #>  [7377,]  147  154  158 #>  [7378,]  148  156  159 #>  [7379,]  147  154  158 #>  [7380,]  148  156  159 #>  [7381,]  147  154  158 #>  [7382,]  149  155  159 #>  [7383,]  147  154  158 #>  [7384,]  149  155  159 #>  [7385,]  148  156  159 #>  [7386,]  147  154  158 #>  [7387,]  149  155  159 #>  [7388,]  149  155  159 #>  [7389,]  148  156  159 #>  [7390,]  147  154  158 #>  [7391,]  148  156  159 #>  [7392,]  148  156  159 #>  [7393,]  147  154  158 #>  [7394,]  147  154  158 #>  [7395,]  149  155  159 #>  [7396,]  147  154  158 #>  [7397,]  148  156  159 #>  [7398,]  148  156  159 #>  [7399,]  147  154  158 #>  [7400,]  147  154  158 #>  [7401,]  150  157  161 #>  [7402,]  150  157  161 #>  [7403,]  150  157  161 #>  [7404,]  151  158  160 #>  [7405,]  150  157  161 #>  [7406,]  151  158  160 #>  [7407,]  150  157  161 #>  [7408,]  150  157  161 #>  [7409,]  151  158  160 #>  [7410,]  151  158  160 #>  [7411,]  151  158  160 #>  [7412,]  151  158  160 #>  [7413,]  150  157  161 #>  [7414,]  151  158  160 #>  [7415,]  151  158  160 #>  [7416,]  150  157  161 #>  [7417,]  150  157  161 #>  [7418,]  151  158  160 #>  [7419,]  151  158  160 #>  [7420,]  150  157  161 #>  [7421,]  151  158  160 #>  [7422,]  150  157  161 #>  [7423,]  151  158  160 #>  [7424,]  150  157  161 #>  [7425,]  150  157  161 #>  [7426,]  151  158  160 #>  [7427,]  151  158  160 #>  [7428,]  150  157  161 #>  [7429,]  150  157  161 #>  [7430,]  151  158  160 #>  [7431,]  151  158  160 #>  [7432,]  151  158  160 #>  [7433,]  151  158  160 #>  [7434,]  151  158  160 #>  [7435,]  150  157  161 #>  [7436,]  151  158  160 #>  [7437,]  150  157  161 #>  [7438,]  151  158  160 #>  [7439,]  150  157  161 #>  [7440,]  150  157  161 #>  [7441,]  151  158  160 #>  [7442,]  151  158  160 #>  [7443,]  150  157  161 #>  [7444,]  150  157  161 #>  [7445,]  150  157  161 #>  [7446,]  150  157  161 #>  [7447,]  150  157  161 #>  [7448,]  151  158  160 #>  [7449,]  150  157  161 #>  [7450,]  150  157  161 #>  [7451,]  150  157  161 #>  [7452,]  151  158  160 #>  [7453,]  150  157  161 #>  [7454,]  150  157  161 #>  [7455,]  150  157  161 #>  [7456,]  150  157  161 #>  [7457,]  150  157  161 #>  [7458,]  151  158  160 #>  [7459,]  150  157  161 #>  [7460,]  151  158  160 #>  [7461,]  151  158  160 #>  [7462,]  151  158  160 #>  [7463,]  150  157  161 #>  [7464,]  151  158  160 #>  [7465,]  150  157  161 #>  [7466,]  150  157  161 #>  [7467,]  151  158  160 #>  [7468,]  151  158  160 #>  [7469,]  151  158  160 #>  [7470,]  150  157  161 #>  [7471,]  150  157  161 #>  [7472,]  150  157  161 #>  [7473,]  151  158  160 #>  [7474,]  151  158  160 #>  [7475,]  151  158  160 #>  [7476,]  150  157  161 #>  [7477,]  150  157  161 #>  [7478,]  150  157  161 #>  [7479,]  150  157  161 #>  [7480,]  151  158  160 #>  [7481,]  150  157  161 #>  [7482,]  151  158  160 #>  [7483,]  150  157  161 #>  [7484,]  150  157  161 #>  [7485,]  151  158  160 #>  [7486,]  150  157  161 #>  [7487,]  150  157  161 #>  [7488,]  150  157  161 #>  [7489,]  150  157  161 #>  [7490,]  150  157  161 #>  [7491,]  151  158  160 #>  [7492,]  151  158  160 #>  [7493,]  151  158  160 #>  [7494,]  150  157  161 #>  [7495,]  150  157  161 #>  [7496,]  151  158  160 #>  [7497,]  151  158  160 #>  [7498,]  150  157  161 #>  [7499,]  151  158  160 #>  [7500,]  150  157  161 #>  [7501,]  153  160  163 #>  [7502,]  153  160  163 #>  [7503,]  152  159  162 #>  [7504,]  153  160  163 #>  [7505,]  153  160  163 #>  [7506,]  153  160  163 #>  [7507,]  153  160  163 #>  [7508,]  153  160  163 #>  [7509,]  153  160  163 #>  [7510,]  153  160  163 #>  [7511,]  153  160  163 #>  [7512,]  152  159  162 #>  [7513,]  153  160  163 #>  [7514,]  152  159  162 #>  [7515,]  153  160  163 #>  [7516,]  153  160  163 #>  [7517,]  153  160  163 #>  [7518,]  153  160  163 #>  [7519,]  153  160  163 #>  [7520,]  153  160  163 #>  [7521,]  153  160  163 #>  [7522,]  153  160  163 #>  [7523,]  153  160  163 #>  [7524,]  153  160  163 #>  [7525,]  153  160  163 #>  [7526,]  152  159  162 #>  [7527,]  153  160  163 #>  [7528,]  153  160  163 #>  [7529,]  153  160  163 #>  [7530,]  153  160  163 #>  [7531,]  153  160  163 #>  [7532,]  152  159  162 #>  [7533,]  153  160  163 #>  [7534,]  153  160  163 #>  [7535,]  153  160  163 #>  [7536,]  153  160  163 #>  [7537,]  153  160  163 #>  [7538,]  153  160  163 #>  [7539,]  153  160  163 #>  [7540,]  153  160  163 #>  [7541,]  153  160  163 #>  [7542,]  153  160  163 #>  [7543,]  153  160  163 #>  [7544,]  153  160  163 #>  [7545,]  153  160  163 #>  [7546,]  153  160  163 #>  [7547,]  153  160  163 #>  [7548,]  153  160  163 #>  [7549,]  153  160  163 #>  [7550,]  153  160  163 #>  [7551,]  153  160  163 #>  [7552,]  153  160  163 #>  [7553,]  153  160  163 #>  [7554,]  153  160  163 #>  [7555,]  153  160  163 #>  [7556,]  153  160  163 #>  [7557,]  153  160  163 #>  [7558,]  153  160  163 #>  [7559,]  153  160  163 #>  [7560,]  153  160  163 #>  [7561,]  153  160  163 #>  [7562,]  153  160  163 #>  [7563,]  153  160  163 #>  [7564,]  153  160  163 #>  [7565,]  153  160  163 #>  [7566,]  153  160  163 #>  [7567,]  153  160  163 #>  [7568,]  153  160  163 #>  [7569,]  152  159  162 #>  [7570,]  153  160  163 #>  [7571,]  153  160  163 #>  [7572,]  153  160  163 #>  [7573,]  153  160  163 #>  [7574,]  153  160  163 #>  [7575,]  153  160  163 #>  [7576,]  153  160  163 #>  [7577,]  153  160  163 #>  [7578,]  153  160  163 #>  [7579,]  153  160  163 #>  [7580,]  152  159  162 #>  [7581,]  153  160  163 #>  [7582,]  153  160  163 #>  [7583,]  153  160  163 #>  [7584,]  153  160  163 #>  [7585,]  153  160  163 #>  [7586,]  153  160  163 #>  [7587,]  153  160  163 #>  [7588,]  153  160  163 #>  [7589,]  153  160  163 #>  [7590,]  153  160  163 #>  [7591,]  153  160  163 #>  [7592,]  153  160  163 #>  [7593,]  153  160  163 #>  [7594,]  153  160  163 #>  [7595,]  153  160  163 #>  [7596,]  153  160  163 #>  [7597,]  153  160  163 #>  [7598,]  153  160  163 #>  [7599,]  153  160  163 #>  [7600,]  153  160  163 #>  [7601,]  154  161  164 #>  [7602,]  154  161  164 #>  [7603,]  154  161  164 #>  [7604,]  154  161  164 #>  [7605,]  154  161  164 #>  [7606,]  154  161  164 #>  [7607,]  155  162  165 #>  [7608,]  154  161  164 #>  [7609,]  154  161  164 #>  [7610,]  154  161  164 #>  [7611,]  154  161  164 #>  [7612,]  154  161  164 #>  [7613,]  154  161  164 #>  [7614,]  154  161  164 #>  [7615,]  154  161  164 #>  [7616,]  154  161  164 #>  [7617,]  154  161  164 #>  [7618,]  154  161  164 #>  [7619,]  154  161  164 #>  [7620,]  155  162  165 #>  [7621,]  154  161  164 #>  [7622,]  154  161  164 #>  [7623,]  154  161  164 #>  [7624,]  155  162  165 #>  [7625,]  154  161  164 #>  [7626,]  154  161  164 #>  [7627,]  154  161  164 #>  [7628,]  155  162  165 #>  [7629,]  154  161  164 #>  [7630,]  154  161  164 #>  [7631,]  154  161  164 #>  [7632,]  154  161  164 #>  [7633,]  154  161  164 #>  [7634,]  154  161  164 #>  [7635,]  154  161  164 #>  [7636,]  154  161  164 #>  [7637,]  154  161  164 #>  [7638,]  154  161  164 #>  [7639,]  154  161  164 #>  [7640,]  154  161  164 #>  [7641,]  154  161  164 #>  [7642,]  154  161  164 #>  [7643,]  154  161  164 #>  [7644,]  154  161  164 #>  [7645,]  154  161  164 #>  [7646,]  154  161  164 #>  [7647,]  154  161  164 #>  [7648,]  154  161  164 #>  [7649,]  154  161  164 #>  [7650,]  155  162  165 #>  [7651,]  154  161  164 #>  [7652,]  155  162  165 #>  [7653,]  154  161  164 #>  [7654,]  154  161  164 #>  [7655,]  154  161  164 #>  [7656,]  154  161  164 #>  [7657,]  154  161  164 #>  [7658,]  154  161  164 #>  [7659,]  154  161  164 #>  [7660,]  154  161  164 #>  [7661,]  154  161  164 #>  [7662,]  154  161  164 #>  [7663,]  154  161  164 #>  [7664,]  154  161  164 #>  [7665,]  154  161  164 #>  [7666,]  154  161  164 #>  [7667,]  154  161  164 #>  [7668,]  154  161  164 #>  [7669,]  154  161  164 #>  [7670,]  154  161  164 #>  [7671,]  154  161  164 #>  [7672,]  154  161  164 #>  [7673,]  154  161  164 #>  [7674,]  154  161  164 #>  [7675,]  154  161  164 #>  [7676,]  155  162  165 #>  [7677,]  154  161  164 #>  [7678,]  154  161  164 #>  [7679,]  154  161  164 #>  [7680,]  154  161  164 #>  [7681,]  154  161  164 #>  [7682,]  154  161  164 #>  [7683,]  154  161  164 #>  [7684,]  154  161  164 #>  [7685,]  154  161  164 #>  [7686,]  155  162  165 #>  [7687,]  154  161  164 #>  [7688,]  154  161  164 #>  [7689,]  154  161  164 #>  [7690,]  154  161  164 #>  [7691,]  155  162  165 #>  [7692,]  154  161  164 #>  [7693,]  154  161  164 #>  [7694,]  154  161  164 #>  [7695,]  154  161  164 #>  [7696,]  154  161  164 #>  [7697,]  154  161  164 #>  [7698,]  154  161  164 #>  [7699,]  154  161  164 #>  [7700,]  154  161  164 #>  [7701,]  156  164  167 #>  [7702,]  157  164  167 #>  [7703,]  156  164  167 #>  [7704,]  156  163  166 #>  [7705,]  156  164  167 #>  [7706,]  156  164  167 #>  [7707,]  156  164  167 #>  [7708,]  156  163  166 #>  [7709,]  157  163  166 #>  [7710,]  157  163  166 #>  [7711,]  156  164  167 #>  [7712,]  157  164  167 #>  [7713,]  156  164  167 #>  [7714,]  156  164  167 #>  [7715,]  156  164  167 #>  [7716,]  156  164  167 #>  [7717,]  156  164  167 #>  [7718,]  156  163  166 #>  [7719,]  156  164  167 #>  [7720,]  156  163  166 #>  [7721,]  157  164  167 #>  [7722,]  156  164  167 #>  [7723,]  156  164  167 #>  [7724,]  156  164  167 #>  [7725,]  156  164  167 #>  [7726,]  156  164  167 #>  [7727,]  156  164  167 #>  [7728,]  156  164  167 #>  [7729,]  157  164  167 #>  [7730,]  156  163  166 #>  [7731,]  156  164  167 #>  [7732,]  156  164  167 #>  [7733,]  157  164  167 #>  [7734,]  156  164  167 #>  [7735,]  156  164  167 #>  [7736,]  156  164  167 #>  [7737,]  156  164  167 #>  [7738,]  156  164  167 #>  [7739,]  156  163  166 #>  [7740,]  156  164  167 #>  [7741,]  156  164  167 #>  [7742,]  156  164  167 #>  [7743,]  156  163  166 #>  [7744,]  156  164  167 #>  [7745,]  156  163  166 #>  [7746,]  156  164  167 #>  [7747,]  156  164  167 #>  [7748,]  156  164  167 #>  [7749,]  156  163  166 #>  [7750,]  156  164  167 #>  [7751,]  156  163  166 #>  [7752,]  156  164  167 #>  [7753,]  156  163  166 #>  [7754,]  156  164  167 #>  [7755,]  156  164  167 #>  [7756,]  156  163  166 #>  [7757,]  156  164  167 #>  [7758,]  156  164  167 #>  [7759,]  156  164  167 #>  [7760,]  157  163  166 #>  [7761,]  156  164  167 #>  [7762,]  156  164  167 #>  [7763,]  156  164  167 #>  [7764,]  156  163  166 #>  [7765,]  156  163  166 #>  [7766,]  156  163  166 #>  [7767,]  156  163  166 #>  [7768,]  156  164  167 #>  [7769,]  156  164  167 #>  [7770,]  157  164  167 #>  [7771,]  156  164  167 #>  [7772,]  156  164  167 #>  [7773,]  156  164  167 #>  [7774,]  156  164  167 #>  [7775,]  156  164  167 #>  [7776,]  156  164  167 #>  [7777,]  156  164  167 #>  [7778,]  156  163  166 #>  [7779,]  156  164  167 #>  [7780,]  156  164  167 #>  [7781,]  157  164  167 #>  [7782,]  156  164  167 #>  [7783,]  156  164  167 #>  [7784,]  156  164  167 #>  [7785,]  156  163  166 #>  [7786,]  157  164  167 #>  [7787,]  156  164  167 #>  [7788,]  156  164  167 #>  [7789,]  156  163  166 #>  [7790,]  156  164  167 #>  [7791,]  156  163  166 #>  [7792,]  156  164  167 #>  [7793,]  156  164  167 #>  [7794,]  156  164  167 #>  [7795,]  156  163  166 #>  [7796,]  156  164  167 #>  [7797,]  156  164  167 #>  [7798,]  156  164  167 #>  [7799,]  156  164  167 #>  [7800,]  156  164  167 #>  [7801,]  159  166  169 #>  [7802,]  159  166  169 #>  [7803,]  158  165  168 #>  [7804,]  159  166  169 #>  [7805,]  158  165  168 #>  [7806,]  159  166  169 #>  [7807,]  158  165  168 #>  [7808,]  158  165  168 #>  [7809,]  159  166  169 #>  [7810,]  159  166  169 #>  [7811,]  159  166  169 #>  [7812,]  159  166  169 #>  [7813,]  158  165  168 #>  [7814,]  159  166  169 #>  [7815,]  159  166  169 #>  [7816,]  158  165  168 #>  [7817,]  158  165  168 #>  [7818,]  159  166  169 #>  [7819,]  159  166  169 #>  [7820,]  158  165  168 #>  [7821,]  159  166  169 #>  [7822,]  158  165  168 #>  [7823,]  159  166  169 #>  [7824,]  158  165  168 #>  [7825,]  158  165  168 #>  [7826,]  159  166  169 #>  [7827,]  159  166  169 #>  [7828,]  159  166  169 #>  [7829,]  158  165  168 #>  [7830,]  159  166  169 #>  [7831,]  159  166  169 #>  [7832,]  159  166  169 #>  [7833,]  159  166  169 #>  [7834,]  159  166  169 #>  [7835,]  159  166  169 #>  [7836,]  159  166  169 #>  [7837,]  159  166  169 #>  [7838,]  159  166  169 #>  [7839,]  158  165  168 #>  [7840,]  158  165  168 #>  [7841,]  159  166  169 #>  [7842,]  159  166  169 #>  [7843,]  158  165  168 #>  [7844,]  158  165  168 #>  [7845,]  158  165  168 #>  [7846,]  158  165  168 #>  [7847,]  158  165  168 #>  [7848,]  159  166  169 #>  [7849,]  158  165  168 #>  [7850,]  158  165  168 #>  [7851,]  158  165  168 #>  [7852,]  159  166  169 #>  [7853,]  158  165  168 #>  [7854,]  158  165  168 #>  [7855,]  158  165  168 #>  [7856,]  158  165  168 #>  [7857,]  159  166  169 #>  [7858,]  159  166  169 #>  [7859,]  158  165  168 #>  [7860,]  159  166  169 #>  [7861,]  159  166  169 #>  [7862,]  159  166  169 #>  [7863,]  158  165  168 #>  [7864,]  159  166  169 #>  [7865,]  158  165  168 #>  [7866,]  158  165  168 #>  [7867,]  159  166  169 #>  [7868,]  159  166  169 #>  [7869,]  159  166  169 #>  [7870,]  158  165  168 #>  [7871,]  158  165  168 #>  [7872,]  158  165  168 #>  [7873,]  159  166  169 #>  [7874,]  159  166  169 #>  [7875,]  159  166  169 #>  [7876,]  158  165  168 #>  [7877,]  158  165  168 #>  [7878,]  158  165  168 #>  [7879,]  158  165  168 #>  [7880,]  159  166  169 #>  [7881,]  158  165  168 #>  [7882,]  159  166  169 #>  [7883,]  158  165  168 #>  [7884,]  158  165  168 #>  [7885,]  159  166  169 #>  [7886,]  158  165  168 #>  [7887,]  159  166  169 #>  [7888,]  159  166  169 #>  [7889,]  158  165  168 #>  [7890,]  158  165  168 #>  [7891,]  159  166  169 #>  [7892,]  159  166  169 #>  [7893,]  159  166  169 #>  [7894,]  158  165  168 #>  [7895,]  159  166  169 #>  [7896,]  159  166  169 #>  [7897,]  159  166  169 #>  [7898,]  158  165  168 #>  [7899,]  159  166  169 #>  [7900,]  158  165  168 #>  [7901,]  160  167  171 #>  [7902,]  160  167  172 #>  [7903,]  160  167  172 #>  [7904,]  160  167  171 #>  [7905,]  160  167  172 #>  [7906,]  160  167  172 #>  [7907,]  160  167  172 #>  [7908,]  160  167  171 #>  [7909,]  160  167  171 #>  [7910,]  160  167  172 #>  [7911,]  160  167  171 #>  [7912,]  160  167  172 #>  [7913,]  160  167  171 #>  [7914,]  160  167  171 #>  [7915,]  160  167  171 #>  [7916,]  160  167  171 #>  [7917,]  160  167  171 #>  [7918,]  160  168  170 #>  [7919,]  160  167  172 #>  [7920,]  160  167  172 #>  [7921,]  160  167  171 #>  [7922,]  160  167  171 #>  [7923,]  160  167  172 #>  [7924,]  160  167  172 #>  [7925,]  160  167  172 #>  [7926,]  160  167  172 #>  [7927,]  160  167  171 #>  [7928,]  160  167  172 #>  [7929,]  160  167  172 #>  [7930,]  160  167  171 #>  [7931,]  160  167  172 #>  [7932,]  160  167  172 #>  [7933,]  160  167  172 #>  [7934,]  160  167  172 #>  [7935,]  160  167  171 #>  [7936,]  160  167  172 #>  [7937,]  160  167  171 #>  [7938,]  160  167  172 #>  [7939,]  160  167  172 #>  [7940,]  160  167  172 #>  [7941,]  160  167  171 #>  [7942,]  160  168  170 #>  [7943,]  160  167  171 #>  [7944,]  160  167  171 #>  [7945,]  160  167  171 #>  [7946,]  160  167  171 #>  [7947,]  160  167  172 #>  [7948,]  160  167  172 #>  [7949,]  160  167  171 #>  [7950,]  160  167  172 #>  [7951,]  160  168  170 #>  [7952,]  160  167  171 #>  [7953,]  160  168  170 #>  [7954,]  160  167  171 #>  [7955,]  160  167  171 #>  [7956,]  160  167  172 #>  [7957,]  160  167  172 #>  [7958,]  160  167  171 #>  [7959,]  160  167  172 #>  [7960,]  160  167  172 #>  [7961,]  160  167  172 #>  [7962,]  160  167  171 #>  [7963,]  160  167  172 #>  [7964,]  160  167  172 #>  [7965,]  160  167  172 #>  [7966,]  160  167  171 #>  [7967,]  160  167  171 #>  [7968,]  160  167  171 #>  [7969,]  160  167  171 #>  [7970,]  160  167  172 #>  [7971,]  160  167  172 #>  [7972,]  160  167  172 #>  [7973,]  160  167  172 #>  [7974,]  160  167  171 #>  [7975,]  160  167  172 #>  [7976,]  160  167  172 #>  [7977,]  160  167  172 #>  [7978,]  160  167  172 #>  [7979,]  160  168  170 #>  [7980,]  160  167  171 #>  [7981,]  160  167  171 #>  [7982,]  160  167  171 #>  [7983,]  160  167  171 #>  [7984,]  160  168  170 #>  [7985,]  160  167  171 #>  [7986,]  160  167  172 #>  [7987,]  160  167  171 #>  [7988,]  160  167  171 #>  [7989,]  160  167  171 #>  [7990,]  160  167  171 #>  [7991,]  160  167  171 #>  [7992,]  160  167  171 #>  [7993,]  160  168  170 #>  [7994,]  160  168  170 #>  [7995,]  160  167  171 #>  [7996,]  160  167  171 #>  [7997,]  160  167  172 #>  [7998,]  160  167  172 #>  [7999,]  160  167  171 #>  [8000,]  160  167  172 #>  [8001,]  161  169  173 #>  [8002,]  161  169  173 #>  [8003,]  161  169  173 #>  [8004,]  162  170  174 #>  [8005,]  161  169  173 #>  [8006,]  161  169  173 #>  [8007,]  162  170  174 #>  [8008,]  161  169  173 #>  [8009,]  161  169  173 #>  [8010,]  162  170  174 #>  [8011,]  161  169  173 #>  [8012,]  161  169  173 #>  [8013,]  161  169  173 #>  [8014,]  161  169  173 #>  [8015,]  161  169  173 #>  [8016,]  162  170  174 #>  [8017,]  161  169  173 #>  [8018,]  161  169  173 #>  [8019,]  161  169  173 #>  [8020,]  162  170  174 #>  [8021,]  161  169  173 #>  [8022,]  161  169  173 #>  [8023,]  161  169  173 #>  [8024,]  162  170  174 #>  [8025,]  162  170  174 #>  [8026,]  161  169  173 #>  [8027,]  161  169  173 #>  [8028,]  162  170  174 #>  [8029,]  161  169  173 #>  [8030,]  161  169  173 #>  [8031,]  161  169  173 #>  [8032,]  161  169  173 #>  [8033,]  161  169  173 #>  [8034,]  161  169  173 #>  [8035,]  161  169  173 #>  [8036,]  161  169  173 #>  [8037,]  161  169  173 #>  [8038,]  161  169  173 #>  [8039,]  162  170  174 #>  [8040,]  161  169  173 #>  [8041,]  161  169  173 #>  [8042,]  161  169  173 #>  [8043,]  161  169  173 #>  [8044,]  161  169  173 #>  [8045,]  161  169  173 #>  [8046,]  161  169  173 #>  [8047,]  161  169  173 #>  [8048,]  161  169  173 #>  [8049,]  161  169  173 #>  [8050,]  162  170  174 #>  [8051,]  161  169  173 #>  [8052,]  162  170  174 #>  [8053,]  161  169  173 #>  [8054,]  162  170  174 #>  [8055,]  161  169  173 #>  [8056,]  161  169  173 #>  [8057,]  161  169  173 #>  [8058,]  161  169  173 #>  [8059,]  161  169  173 #>  [8060,]  161  169  173 #>  [8061,]  161  169  173 #>  [8062,]  161  169  173 #>  [8063,]  161  169  173 #>  [8064,]  161  169  173 #>  [8065,]  161  169  173 #>  [8066,]  161  169  173 #>  [8067,]  161  169  173 #>  [8068,]  161  169  173 #>  [8069,]  161  169  173 #>  [8070,]  161  169  173 #>  [8071,]  161  169  173 #>  [8072,]  161  169  173 #>  [8073,]  162  170  174 #>  [8074,]  161  169  173 #>  [8075,]  161  169  173 #>  [8076,]  162  170  174 #>  [8077,]  161  169  173 #>  [8078,]  161  169  173 #>  [8079,]  161  169  173 #>  [8080,]  161  169  173 #>  [8081,]  161  169  173 #>  [8082,]  161  169  173 #>  [8083,]  161  169  173 #>  [8084,]  161  169  173 #>  [8085,]  161  169  173 #>  [8086,]  162  170  174 #>  [8087,]  161  169  173 #>  [8088,]  161  169  173 #>  [8089,]  161  169  173 #>  [8090,]  161  169  173 #>  [8091,]  162  170  174 #>  [8092,]  161  169  173 #>  [8093,]  161  169  173 #>  [8094,]  161  169  173 #>  [8095,]  161  169  173 #>  [8096,]  161  169  173 #>  [8097,]  161  169  173 #>  [8098,]  161  169  173 #>  [8099,]  161  169  173 #>  [8100,]  161  169  173 #>  [8101,]  164  173  176 #>  [8102,]  164  173  176 #>  [8103,]  163  171  175 #>  [8104,]  163  171  175 #>  [8105,]  163  171  175 #>  [8106,]  164  172  176 #>  [8107,]  164  173  176 #>  [8108,]  163  171  175 #>  [8109,]  163  171  175 #>  [8110,]  163  171  175 #>  [8111,]  164  172  176 #>  [8112,]  163  171  175 #>  [8113,]  164  173  176 #>  [8114,]  164  172  176 #>  [8115,]  164  173  176 #>  [8116,]  164  173  176 #>  [8117,]  164  172  176 #>  [8118,]  163  171  175 #>  [8119,]  164  173  176 #>  [8120,]  163  171  175 #>  [8121,]  164  172  176 #>  [8122,]  164  173  176 #>  [8123,]  163  171  175 #>  [8124,]  163  171  175 #>  [8125,]  164  172  176 #>  [8126,]  164  173  176 #>  [8127,]  164  173  176 #>  [8128,]  164  172  176 #>  [8129,]  164  173  176 #>  [8130,]  163  171  175 #>  [8131,]  163  171  175 #>  [8132,]  163  171  175 #>  [8133,]  164  173  176 #>  [8134,]  163  171  175 #>  [8135,]  164  172  176 #>  [8136,]  163  171  175 #>  [8137,]  164  173  176 #>  [8138,]  163  171  175 #>  [8139,]  163  171  175 #>  [8140,]  164  172  176 #>  [8141,]  164  173  176 #>  [8142,]  163  171  175 #>  [8143,]  163  171  175 #>  [8144,]  164  173  176 #>  [8145,]  163  171  175 #>  [8146,]  164  173  176 #>  [8147,]  164  172  176 #>  [8148,]  163  171  175 #>  [8149,]  163  171  175 #>  [8150,]  164  173  176 #>  [8151,]  163  171  175 #>  [8152,]  164  172  176 #>  [8153,]  163  171  175 #>  [8154,]  164  172  176 #>  [8155,]  164  173  176 #>  [8156,]  163  171  175 #>  [8157,]  164  172  176 #>  [8158,]  164  173  176 #>  [8159,]  164  173  176 #>  [8160,]  163  171  175 #>  [8161,]  164  173  176 #>  [8162,]  163  171  175 #>  [8163,]  164  173  176 #>  [8164,]  163  171  175 #>  [8165,]  163  171  175 #>  [8166,]  163  171  175 #>  [8167,]  163  171  175 #>  [8168,]  164  173  176 #>  [8169,]  164  173  176 #>  [8170,]  164  172  176 #>  [8171,]  164  173  176 #>  [8172,]  163  171  175 #>  [8173,]  164  172  176 #>  [8174,]  164  172  176 #>  [8175,]  164  173  176 #>  [8176,]  164  172  176 #>  [8177,]  164  173  176 #>  [8178,]  163  171  175 #>  [8179,]  164  172  176 #>  [8180,]  164  173  176 #>  [8181,]  164  173  176 #>  [8182,]  164  172  176 #>  [8183,]  164  173  176 #>  [8184,]  164  173  176 #>  [8185,]  163  171  175 #>  [8186,]  164  172  176 #>  [8187,]  164  173  176 #>  [8188,]  163  171  175 #>  [8189,]  163  171  175 #>  [8190,]  164  173  176 #>  [8191,]  163  171  175 #>  [8192,]  164  172  176 #>  [8193,]  164  173  176 #>  [8194,]  164  172  176 #>  [8195,]  163  171  175 #>  [8196,]  164  173  176 #>  [8197,]  164  173  176 #>  [8198,]  164  172  176 #>  [8199,]  164  172  176 #>  [8200,]  164  173  176 #>  [8201,]  165  174  177 #>  [8202,]  165  174  177 #>  [8203,]  165  174  177 #>  [8204,]  166  175  178 #>  [8205,]  165  174  177 #>  [8206,]  166  175  178 #>  [8207,]  165  174  177 #>  [8208,]  165  174  177 #>  [8209,]  166  175  178 #>  [8210,]  166  175  178 #>  [8211,]  166  175  178 #>  [8212,]  166  175  178 #>  [8213,]  165  174  177 #>  [8214,]  166  175  178 #>  [8215,]  166  175  178 #>  [8216,]  165  174  177 #>  [8217,]  165  174  177 #>  [8218,]  166  175  178 #>  [8219,]  166  175  178 #>  [8220,]  165  174  177 #>  [8221,]  166  175  178 #>  [8222,]  165  174  177 #>  [8223,]  165  174  177 #>  [8224,]  165  174  177 #>  [8225,]  165  174  177 #>  [8226,]  166  175  178 #>  [8227,]  166  175  178 #>  [8228,]  165  174  177 #>  [8229,]  165  174  177 #>  [8230,]  166  175  178 #>  [8231,]  166  175  178 #>  [8232,]  166  175  178 #>  [8233,]  166  175  178 #>  [8234,]  165  174  177 #>  [8235,]  165  174  177 #>  [8236,]  166  175  178 #>  [8237,]  165  174  177 #>  [8238,]  166  175  178 #>  [8239,]  165  174  177 #>  [8240,]  165  174  177 #>  [8241,]  166  175  178 #>  [8242,]  166  175  178 #>  [8243,]  165  174  177 #>  [8244,]  165  174  177 #>  [8245,]  165  174  177 #>  [8246,]  165  174  177 #>  [8247,]  165  174  177 #>  [8248,]  166  175  178 #>  [8249,]  165  174  177 #>  [8250,]  165  174  177 #>  [8251,]  165  174  177 #>  [8252,]  165  174  177 #>  [8253,]  165  174  177 #>  [8254,]  165  174  177 #>  [8255,]  165  174  177 #>  [8256,]  165  174  177 #>  [8257,]  165  174  177 #>  [8258,]  166  175  178 #>  [8259,]  165  174  177 #>  [8260,]  166  175  178 #>  [8261,]  166  175  178 #>  [8262,]  166  175  178 #>  [8263,]  165  174  177 #>  [8264,]  166  175  178 #>  [8265,]  165  174  177 #>  [8266,]  165  174  177 #>  [8267,]  165  174  177 #>  [8268,]  166  175  178 #>  [8269,]  166  175  178 #>  [8270,]  165  174  177 #>  [8271,]  165  174  177 #>  [8272,]  165  174  177 #>  [8273,]  165  174  177 #>  [8274,]  166  175  178 #>  [8275,]  166  175  178 #>  [8276,]  165  174  177 #>  [8277,]  165  174  177 #>  [8278,]  165  174  177 #>  [8279,]  165  174  177 #>  [8280,]  165  174  177 #>  [8281,]  165  174  177 #>  [8282,]  166  175  178 #>  [8283,]  165  174  177 #>  [8284,]  165  174  177 #>  [8285,]  166  175  178 #>  [8286,]  165  174  177 #>  [8287,]  165  174  177 #>  [8288,]  165  174  177 #>  [8289,]  165  174  177 #>  [8290,]  165  174  177 #>  [8291,]  165  174  177 #>  [8292,]  166  175  178 #>  [8293,]  166  175  178 #>  [8294,]  165  174  177 #>  [8295,]  165  174  177 #>  [8296,]  166  175  178 #>  [8297,]  166  175  178 #>  [8298,]  165  174  177 #>  [8299,]  166  175  178 #>  [8300,]  165  174  177 #>  [8301,]  167  177  180 #>  [8302,]  167  176  179 #>  [8303,]  167  176  179 #>  [8304,]  167  177  180 #>  [8305,]  167  176  179 #>  [8306,]  167  176  179 #>  [8307,]  167  177  180 #>  [8308,]  167  177  180 #>  [8309,]  167  177  180 #>  [8310,]  167  177  180 #>  [8311,]  167  176  179 #>  [8312,]  167  176  179 #>  [8313,]  167  177  180 #>  [8314,]  167  176  179 #>  [8315,]  167  177  180 #>  [8316,]  167  177  180 #>  [8317,]  167  177  180 #>  [8318,]  167  177  180 #>  [8319,]  167  176  179 #>  [8320,]  167  176  179 #>  [8321,]  167  177  180 #>  [8322,]  167  176  179 #>  [8323,]  167  177  180 #>  [8324,]  167  176  179 #>  [8325,]  167  177  180 #>  [8326,]  167  176  179 #>  [8327,]  167  177  180 #>  [8328,]  167  177  180 #>  [8329,]  167  176  179 #>  [8330,]  167  176  179 #>  [8331,]  167  176  179 #>  [8332,]  167  176  179 #>  [8333,]  167  176  179 #>  [8334,]  167  176  179 #>  [8335,]  167  176  179 #>  [8336,]  167  176  179 #>  [8337,]  167  177  180 #>  [8338,]  167  177  180 #>  [8339,]  167  177  180 #>  [8340,]  167  176  179 #>  [8341,]  167  176  179 #>  [8342,]  167  176  179 #>  [8343,]  167  177  180 #>  [8344,]  167  177  180 #>  [8345,]  167  177  180 #>  [8346,]  167  177  180 #>  [8347,]  167  177  180 #>  [8348,]  167  176  179 #>  [8349,]  167  176  179 #>  [8350,]  167  176  179 #>  [8351,]  167  176  179 #>  [8352,]  167  176  179 #>  [8353,]  167  177  180 #>  [8354,]  167  176  179 #>  [8355,]  167  176  179 #>  [8356,]  167  177  180 #>  [8357,]  167  176  179 #>  [8358,]  167  176  179 #>  [8359,]  167  176  179 #>  [8360,]  167  176  179 #>  [8361,]  167  177  180 #>  [8362,]  167  176  179 #>  [8363,]  167  176  179 #>  [8364,]  167  177  180 #>  [8365,]  167  176  179 #>  [8366,]  167  176  179 #>  [8367,]  167  176  179 #>  [8368,]  167  176  179 #>  [8369,]  167  176  179 #>  [8370,]  167  177  180 #>  [8371,]  167  177  180 #>  [8372,]  167  177  180 #>  [8373,]  167  177  180 #>  [8374,]  167  177  180 #>  [8375,]  167  177  180 #>  [8376,]  167  177  180 #>  [8377,]  167  177  180 #>  [8378,]  167  176  179 #>  [8379,]  167  177  180 #>  [8380,]  167  176  179 #>  [8381,]  167  176  179 #>  [8382,]  167  177  180 #>  [8383,]  167  176  179 #>  [8384,]  167  177  180 #>  [8385,]  167  176  179 #>  [8386,]  167  176  179 #>  [8387,]  167  177  180 #>  [8388,]  167  177  180 #>  [8389,]  167  176  179 #>  [8390,]  167  177  180 #>  [8391,]  167  176  179 #>  [8392,]  167  176  179 #>  [8393,]  167  176  179 #>  [8394,]  167  177  180 #>  [8395,]  167  177  180 #>  [8396,]  167  177  180 #>  [8397,]  167  176  179 #>  [8398,]  167  176  179 #>  [8399,]  167  176  179 #>  [8400,]  167  177  180 #>  [8401,]  169  178  181 #>  [8402,]  169  178  181 #>  [8403,]  168  178  181 #>  [8404,]  168  178  182 #>  [8405,]  169  178  181 #>  [8406,]  169  178  182 #>  [8407,]  168  178  181 #>  [8408,]  168  178  181 #>  [8409,]  169  178  182 #>  [8410,]  169  178  182 #>  [8411,]  169  178  182 #>  [8412,]  168  178  182 #>  [8413,]  169  178  181 #>  [8414,]  169  178  182 #>  [8415,]  169  178  182 #>  [8416,]  169  178  181 #>  [8417,]  169  178  181 #>  [8418,]  169  178  182 #>  [8419,]  169  178  182 #>  [8420,]  169  178  181 #>  [8421,]  169  178  182 #>  [8422,]  169  178  181 #>  [8423,]  169  178  181 #>  [8424,]  169  178  181 #>  [8425,]  168  178  181 #>  [8426,]  169  178  182 #>  [8427,]  169  178  182 #>  [8428,]  169  178  181 #>  [8429,]  169  178  181 #>  [8430,]  169  178  182 #>  [8431,]  168  178  182 #>  [8432,]  169  178  182 #>  [8433,]  169  178  182 #>  [8434,]  169  178  181 #>  [8435,]  169  178  181 #>  [8436,]  169  178  182 #>  [8437,]  169  178  181 #>  [8438,]  169  178  182 #>  [8439,]  169  178  181 #>  [8440,]  169  178  181 #>  [8441,]  169  178  182 #>  [8442,]  169  178  182 #>  [8443,]  169  178  181 #>  [8444,]  169  178  181 #>  [8445,]  169  178  181 #>  [8446,]  169  178  181 #>  [8447,]  169  178  181 #>  [8448,]  169  178  182 #>  [8449,]  169  178  181 #>  [8450,]  169  178  181 #>  [8451,]  169  178  181 #>  [8452,]  168  178  182 #>  [8453,]  169  178  181 #>  [8454,]  169  178  181 #>  [8455,]  169  178  181 #>  [8456,]  169  178  181 #>  [8457,]  168  178  181 #>  [8458,]  169  178  182 #>  [8459,]  168  178  181 #>  [8460,]  168  178  182 #>  [8461,]  169  178  182 #>  [8462,]  169  178  182 #>  [8463,]  169  178  181 #>  [8464,]  169  178  182 #>  [8465,]  169  178  181 #>  [8466,]  169  178  181 #>  [8467,]  169  178  182 #>  [8468,]  169  178  182 #>  [8469,]  169  178  182 #>  [8470,]  169  178  181 #>  [8471,]  169  178  181 #>  [8472,]  169  178  181 #>  [8473,]  169  178  182 #>  [8474,]  169  178  182 #>  [8475,]  169  178  182 #>  [8476,]  169  178  181 #>  [8477,]  169  178  181 #>  [8478,]  169  178  181 #>  [8479,]  169  178  181 #>  [8480,]  169  178  181 #>  [8481,]  169  178  181 #>  [8482,]  169  178  182 #>  [8483,]  169  178  181 #>  [8484,]  169  178  181 #>  [8485,]  169  178  182 #>  [8486,]  169  178  181 #>  [8487,]  169  178  181 #>  [8488,]  169  178  181 #>  [8489,]  169  178  181 #>  [8490,]  169  178  181 #>  [8491,]  169  178  181 #>  [8492,]  169  178  182 #>  [8493,]  169  178  182 #>  [8494,]  169  178  181 #>  [8495,]  169  178  181 #>  [8496,]  168  178  182 #>  [8497,]  168  178  182 #>  [8498,]  169  178  181 #>  [8499,]  169  178  182 #>  [8500,]  169  178  181 #>  [8501,]  171  180  183 #>  [8502,]  171  180  183 #>  [8503,]  170  179  184 #>  [8504,]  171  180  183 #>  [8505,]  171  180  183 #>  [8506,]  170  179  184 #>  [8507,]  171  180  183 #>  [8508,]  171  180  183 #>  [8509,]  171  180  183 #>  [8510,]  171  180  183 #>  [8511,]  170  179  184 #>  [8512,]  171  180  183 #>  [8513,]  171  180  183 #>  [8514,]  171  180  183 #>  [8515,]  171  180  183 #>  [8516,]  170  179  184 #>  [8517,]  171  180  183 #>  [8518,]  171  180  183 #>  [8519,]  170  179  184 #>  [8520,]  171  180  183 #>  [8521,]  171  180  183 #>  [8522,]  171  180  183 #>  [8523,]  171  180  183 #>  [8524,]  171  180  183 #>  [8525,]  171  180  183 #>  [8526,]  171  180  183 #>  [8527,]  171  180  183 #>  [8528,]  170  179  184 #>  [8529,]  171  180  183 #>  [8530,]  171  180  183 #>  [8531,]  171  180  183 #>  [8532,]  171  180  183 #>  [8533,]  171  180  183 #>  [8534,]  170  179  184 #>  [8535,]  170  179  184 #>  [8536,]  171  180  183 #>  [8537,]  170  179  184 #>  [8538,]  170  179  184 #>  [8539,]  171  180  183 #>  [8540,]  171  180  183 #>  [8541,]  171  180  183 #>  [8542,]  171  180  183 #>  [8543,]  171  180  183 #>  [8544,]  171  180  183 #>  [8545,]  170  179  184 #>  [8546,]  171  180  183 #>  [8547,]  171  180  183 #>  [8548,]  171  180  183 #>  [8549,]  170  179  184 #>  [8550,]  171  180  183 #>  [8551,]  171  180  183 #>  [8552,]  170  179  184 #>  [8553,]  171  180  183 #>  [8554,]  171  180  183 #>  [8555,]  171  180  183 #>  [8556,]  171  180  183 #>  [8557,]  171  180  183 #>  [8558,]  171  180  183 #>  [8559,]  171  180  183 #>  [8560,]  171  180  183 #>  [8561,]  171  180  183 #>  [8562,]  171  180  183 #>  [8563,]  171  180  183 #>  [8564,]  170  179  184 #>  [8565,]  171  180  183 #>  [8566,]  171  180  183 #>  [8567,]  171  180  183 #>  [8568,]  170  179  184 #>  [8569,]  171  180  183 #>  [8570,]  171  180  183 #>  [8571,]  171  180  183 #>  [8572,]  170  179  184 #>  [8573,]  171  180  183 #>  [8574,]  171  180  183 #>  [8575,]  171  180  183 #>  [8576,]  171  180  183 #>  [8577,]  170  179  184 #>  [8578,]  171  180  183 #>  [8579,]  171  180  183 #>  [8580,]  171  180  183 #>  [8581,]  171  180  183 #>  [8582,]  171  180  183 #>  [8583,]  171  180  183 #>  [8584,]  171  180  183 #>  [8585,]  171  180  183 #>  [8586,]  171  180  183 #>  [8587,]  171  180  183 #>  [8588,]  171  180  183 #>  [8589,]  171  180  183 #>  [8590,]  171  180  183 #>  [8591,]  171  180  183 #>  [8592,]  171  180  183 #>  [8593,]  171  180  183 #>  [8594,]  171  180  183 #>  [8595,]  171  180  183 #>  [8596,]  170  179  184 #>  [8597,]  170  179  184 #>  [8598,]  171  180  183 #>  [8599,]  171  180  183 #>  [8600,]  170  179  184 #>  [8601,]  172  181  185 #>  [8602,]  173  182  186 #>  [8603,]  172  181  185 #>  [8604,]  172  181  185 #>  [8605,]  172  181  185 #>  [8606,]  172  181  185 #>  [8607,]  172  181  185 #>  [8608,]  172  181  185 #>  [8609,]  173  182  186 #>  [8610,]  173  182  186 #>  [8611,]  172  181  185 #>  [8612,]  173  182  186 #>  [8613,]  173  182  186 #>  [8614,]  172  181  185 #>  [8615,]  172  181  185 #>  [8616,]  172  181  185 #>  [8617,]  173  182  186 #>  [8618,]  173  182  186 #>  [8619,]  172  181  185 #>  [8620,]  173  182  186 #>  [8621,]  173  182  186 #>  [8622,]  172  181  185 #>  [8623,]  173  182  186 #>  [8624,]  173  182  186 #>  [8625,]  172  181  185 #>  [8626,]  172  181  185 #>  [8627,]  173  182  186 #>  [8628,]  172  181  185 #>  [8629,]  173  182  186 #>  [8630,]  172  181  185 #>  [8631,]  173  182  186 #>  [8632,]  173  182  186 #>  [8633,]  173  182  186 #>  [8634,]  172  181  185 #>  [8635,]  172  181  185 #>  [8636,]  173  182  186 #>  [8637,]  172  181  185 #>  [8638,]  172  181  185 #>  [8639,]  172  181  185 #>  [8640,]  173  182  186 #>  [8641,]  172  181  185 #>  [8642,]  172  181  185 #>  [8643,]  172  181  185 #>  [8644,]  172  181  185 #>  [8645,]  172  181  185 #>  [8646,]  172  181  185 #>  [8647,]  172  181  185 #>  [8648,]  172  181  185 #>  [8649,]  172  181  185 #>  [8650,]  172  181  185 #>  [8651,]  172  181  185 #>  [8652,]  172  181  185 #>  [8653,]  173  182  186 #>  [8654,]  172  181  185 #>  [8655,]  172  181  185 #>  [8656,]  172  181  185 #>  [8657,]  172  181  185 #>  [8658,]  172  181  185 #>  [8659,]  172  181  185 #>  [8660,]  173  182  186 #>  [8661,]  173  182  186 #>  [8662,]  172  181  185 #>  [8663,]  173  182  186 #>  [8664,]  172  181  185 #>  [8665,]  172  181  185 #>  [8666,]  172  181  185 #>  [8667,]  172  181  185 #>  [8668,]  172  181  185 #>  [8669,]  172  181  185 #>  [8670,]  173  182  186 #>  [8671,]  172  181  185 #>  [8672,]  172  181  185 #>  [8673,]  172  181  185 #>  [8674,]  172  181  185 #>  [8675,]  173  182  186 #>  [8676,]  172  181  185 #>  [8677,]  172  181  185 #>  [8678,]  172  181  185 #>  [8679,]  172  181  185 #>  [8680,]  173  182  186 #>  [8681,]  173  182  186 #>  [8682,]  172  181  185 #>  [8683,]  173  182  186 #>  [8684,]  173  182  186 #>  [8685,]  172  181  185 #>  [8686,]  173  182  186 #>  [8687,]  172  181  185 #>  [8688,]  173  182  186 #>  [8689,]  172  181  185 #>  [8690,]  172  181  185 #>  [8691,]  172  181  185 #>  [8692,]  172  181  185 #>  [8693,]  172  181  185 #>  [8694,]  172  181  185 #>  [8695,]  172  181  185 #>  [8696,]  172  181  185 #>  [8697,]  172  181  185 #>  [8698,]  172  181  185 #>  [8699,]  172  181  185 #>  [8700,]  172  181  185 #>  [8701,]  174  183  188 #>  [8702,]  174  183  188 #>  [8703,]  174  183  188 #>  [8704,]  175  184  187 #>  [8705,]  174  183  188 #>  [8706,]  175  184  187 #>  [8707,]  174  183  188 #>  [8708,]  174  183  188 #>  [8709,]  175  184  187 #>  [8710,]  175  184  187 #>  [8711,]  175  184  187 #>  [8712,]  175  184  187 #>  [8713,]  174  183  188 #>  [8714,]  175  184  187 #>  [8715,]  175  184  187 #>  [8716,]  174  183  188 #>  [8717,]  174  183  188 #>  [8718,]  175  184  187 #>  [8719,]  175  184  187 #>  [8720,]  174  183  188 #>  [8721,]  175  184  187 #>  [8722,]  174  183  188 #>  [8723,]  175  184  187 #>  [8724,]  174  183  188 #>  [8725,]  174  183  188 #>  [8726,]  175  184  187 #>  [8727,]  175  184  187 #>  [8728,]  174  183  188 #>  [8729,]  174  183  188 #>  [8730,]  175  184  187 #>  [8731,]  175  184  187 #>  [8732,]  175  184  187 #>  [8733,]  175  184  187 #>  [8734,]  175  184  187 #>  [8735,]  174  183  188 #>  [8736,]  175  184  187 #>  [8737,]  174  183  188 #>  [8738,]  175  184  187 #>  [8739,]  174  183  188 #>  [8740,]  174  183  188 #>  [8741,]  175  184  187 #>  [8742,]  175  184  187 #>  [8743,]  174  183  188 #>  [8744,]  174  183  188 #>  [8745,]  174  183  188 #>  [8746,]  174  183  188 #>  [8747,]  174  183  188 #>  [8748,]  175  184  187 #>  [8749,]  174  183  188 #>  [8750,]  174  183  188 #>  [8751,]  174  183  188 #>  [8752,]  175  184  187 #>  [8753,]  174  183  188 #>  [8754,]  174  183  188 #>  [8755,]  174  183  188 #>  [8756,]  174  183  188 #>  [8757,]  174  183  188 #>  [8758,]  175  184  187 #>  [8759,]  174  183  188 #>  [8760,]  175  184  187 #>  [8761,]  175  184  187 #>  [8762,]  175  184  187 #>  [8763,]  174  183  188 #>  [8764,]  175  184  187 #>  [8765,]  174  183  188 #>  [8766,]  174  183  188 #>  [8767,]  175  184  187 #>  [8768,]  175  184  187 #>  [8769,]  175  184  187 #>  [8770,]  174  183  188 #>  [8771,]  174  183  188 #>  [8772,]  174  183  188 #>  [8773,]  175  184  187 #>  [8774,]  175  184  187 #>  [8775,]  175  184  187 #>  [8776,]  174  183  188 #>  [8777,]  174  183  188 #>  [8778,]  174  183  188 #>  [8779,]  174  183  188 #>  [8780,]  175  184  187 #>  [8781,]  174  183  188 #>  [8782,]  175  184  187 #>  [8783,]  174  183  188 #>  [8784,]  174  183  188 #>  [8785,]  175  184  187 #>  [8786,]  174  183  188 #>  [8787,]  174  183  188 #>  [8788,]  174  183  188 #>  [8789,]  174  183  188 #>  [8790,]  174  183  188 #>  [8791,]  175  184  187 #>  [8792,]  175  184  187 #>  [8793,]  175  184  187 #>  [8794,]  174  183  188 #>  [8795,]  174  183  188 #>  [8796,]  175  184  187 #>  [8797,]  175  184  187 #>  [8798,]  174  183  188 #>  [8799,]  175  184  187 #>  [8800,]  174  183  188 #>  [8801,]  176  185  189 #>  [8802,]  177  186  190 #>  [8803,]  177  186  190 #>  [8804,]  176  185  189 #>  [8805,]  176  185  189 #>  [8806,]  177  186  190 #>  [8807,]  177  186  190 #>  [8808,]  176  185  189 #>  [8809,]  176  185  189 #>  [8810,]  176  185  189 #>  [8811,]  176  185  189 #>  [8812,]  177  186  190 #>  [8813,]  176  185  189 #>  [8814,]  176  185  189 #>  [8815,]  176  185  189 #>  [8816,]  176  185  189 #>  [8817,]  176  185  189 #>  [8818,]  177  186  190 #>  [8819,]  177  186  190 #>  [8820,]  177  186  190 #>  [8821,]  176  185  189 #>  [8822,]  176  185  189 #>  [8823,]  177  186  190 #>  [8824,]  176  185  189 #>  [8825,]  177  186  190 #>  [8826,]  176  185  189 #>  [8827,]  176  185  189 #>  [8828,]  177  186  190 #>  [8829,]  176  185  189 #>  [8830,]  176  185  189 #>  [8831,]  177  186  190 #>  [8832,]  177  186  190 #>  [8833,]  177  186  190 #>  [8834,]  177  186  190 #>  [8835,]  176  185  189 #>  [8836,]  176  185  189 #>  [8837,]  176  185  189 #>  [8838,]  176  185  189 #>  [8839,]  176  185  189 #>  [8840,]  177  186  190 #>  [8841,]  176  185  189 #>  [8842,]  177  186  190 #>  [8843,]  176  185  189 #>  [8844,]  176  185  189 #>  [8845,]  176  185  189 #>  [8846,]  176  185  189 #>  [8847,]  176  185  189 #>  [8848,]  177  186  190 #>  [8849,]  176  185  189 #>  [8850,]  176  185  189 #>  [8851,]  176  185  189 #>  [8852,]  176  185  189 #>  [8853,]  176  185  189 #>  [8854,]  176  185  189 #>  [8855,]  176  185  189 #>  [8856,]  177  186  190 #>  [8857,]  176  185  189 #>  [8858,]  176  185  189 #>  [8859,]  176  185  189 #>  [8860,]  177  186  190 #>  [8861,]  176  185  189 #>  [8862,]  176  185  189 #>  [8863,]  176  185  189 #>  [8864,]  177  186  190 #>  [8865,]  177  186  190 #>  [8866,]  176  185  189 #>  [8867,]  176  185  189 #>  [8868,]  176  185  189 #>  [8869,]  176  185  189 #>  [8870,]  177  186  190 #>  [8871,]  177  186  190 #>  [8872,]  176  185  189 #>  [8873,]  177  186  190 #>  [8874,]  176  185  189 #>  [8875,]  176  185  189 #>  [8876,]  176  185  189 #>  [8877,]  176  185  189 #>  [8878,]  177  186  190 #>  [8879,]  176  185  189 #>  [8880,]  176  185  189 #>  [8881,]  176  185  189 #>  [8882,]  176  185  189 #>  [8883,]  176  185  189 #>  [8884,]  177  186  190 #>  [8885,]  176  185  189 #>  [8886,]  176  185  189 #>  [8887,]  176  185  189 #>  [8888,]  176  185  189 #>  [8889,]  176  185  189 #>  [8890,]  176  185  189 #>  [8891,]  176  185  189 #>  [8892,]  176  185  189 #>  [8893,]  177  186  190 #>  [8894,]  176  185  189 #>  [8895,]  176  185  189 #>  [8896,]  176  185  189 #>  [8897,]  177  186  190 #>  [8898,]  177  186  190 #>  [8899,]  176  185  189 #>  [8900,]  177  186  190 #>  [8901,]  179  188  192 #>  [8902,]  178  187  191 #>  [8903,]  179  187  191 #>  [8904,]  179  187  191 #>  [8905,]  179  188  192 #>  [8906,]  178  187  191 #>  [8907,]  179  187  191 #>  [8908,]  179  187  191 #>  [8909,]  179  188  192 #>  [8910,]  179  187  191 #>  [8911,]  178  188  192 #>  [8912,]  178  187  191 #>  [8913,]  179  188  192 #>  [8914,]  179  187  191 #>  [8915,]  178  187  191 #>  [8916,]  179  187  191 #>  [8917,]  178  188  192 #>  [8918,]  179  188  192 #>  [8919,]  178  188  192 #>  [8920,]  179  188  192 #>  [8921,]  179  188  192 #>  [8922,]  179  188  192 #>  [8923,]  178  187  191 #>  [8924,]  179  188  192 #>  [8925,]  179  187  191 #>  [8926,]  178  187  191 #>  [8927,]  179  188  192 #>  [8928,]  179  188  192 #>  [8929,]  178  188  192 #>  [8930,]  178  187  191 #>  [8931,]  178  187  191 #>  [8932,]  179  187  191 #>  [8933,]  179  188  192 #>  [8934,]  178  187  191 #>  [8935,]  178  187  191 #>  [8936,]  179  188  192 #>  [8937,]  178  187  191 #>  [8938,]  179  188  192 #>  [8939,]  179  188  192 #>  [8940,]  179  187  191 #>  [8941,]  179  188  192 #>  [8942,]  178  188  192 #>  [8943,]  178  188  192 #>  [8944,]  178  187  191 #>  [8945,]  179  187  191 #>  [8946,]  179  187  191 #>  [8947,]  178  187  191 #>  [8948,]  178  188  192 #>  [8949,]  179  187  191 #>  [8950,]  179  188  192 #>  [8951,]  179  188  192 #>  [8952,]  179  187  191 #>  [8953,]  179  188  192 #>  [8954,]  179  188  192 #>  [8955,]  179  187  191 #>  [8956,]  178  188  192 #>  [8957,]  179  187  191 #>  [8958,]  179  188  192 #>  [8959,]  179  187  191 #>  [8960,]  178  187  191 #>  [8961,]  178  188  192 #>  [8962,]  179  188  192 #>  [8963,]  178  188  192 #>  [8964,]  178  188  192 #>  [8965,]  178  188  192 #>  [8966,]  178  188  192 #>  [8967,]  179  187  191 #>  [8968,]  178  187  191 #>  [8969,]  179  187  191 #>  [8970,]  178  188  192 #>  [8971,]  179  187  191 #>  [8972,]  179  187  191 #>  [8973,]  179  188  192 #>  [8974,]  179  187  191 #>  [8975,]  178  187  191 #>  [8976,]  179  187  191 #>  [8977,]  179  188  192 #>  [8978,]  178  187  191 #>  [8979,]  178  188  192 #>  [8980,]  179  187  191 #>  [8981,]  178  188  192 #>  [8982,]  179  188  192 #>  [8983,]  179  188  192 #>  [8984,]  179  188  192 #>  [8985,]  179  188  192 #>  [8986,]  179  187  191 #>  [8987,]  179  188  192 #>  [8988,]  179  187  191 #>  [8989,]  179  188  192 #>  [8990,]  179  188  192 #>  [8991,]  179  188  192 #>  [8992,]  178  187  191 #>  [8993,]  179  188  192 #>  [8994,]  178  188  192 #>  [8995,]  178  187  191 #>  [8996,]  178  187  191 #>  [8997,]  179  187  191 #>  [8998,]  179  187  191 #>  [8999,]  179  188  192 #>  [9000,]  178  188  192 #>  [9001,]  180  189  195 #>  [9002,]  180  189  194 #>  [9003,]  180  189  193 #>  [9004,]  181  190  194 #>  [9005,]  180  189  195 #>  [9006,]  180  189  193 #>  [9007,]  180  189  193 #>  [9008,]  180  189  194 #>  [9009,]  180  189  195 #>  [9010,]  181  190  194 #>  [9011,]  180  189  195 #>  [9012,]  180  189  194 #>  [9013,]  180  189  195 #>  [9014,]  180  189  194 #>  [9015,]  180  189  194 #>  [9016,]  180  189  194 #>  [9017,]  180  189  195 #>  [9018,]  181  190  195 #>  [9019,]  180  189  195 #>  [9020,]  180  189  193 #>  [9021,]  181  190  193 #>  [9022,]  180  189  195 #>  [9023,]  180  189  193 #>  [9024,]  180  189  195 #>  [9025,]  181  190  193 #>  [9026,]  180  189  194 #>  [9027,]  180  189  195 #>  [9028,]  180  189  195 #>  [9029,]  180  189  195 #>  [9030,]  180  189  194 #>  [9031,]  180  189  194 #>  [9032,]  180  189  194 #>  [9033,]  180  189  195 #>  [9034,]  180  189  193 #>  [9035,]  180  189  193 #>  [9036,]  180  189  195 #>  [9037,]  180  189  193 #>  [9038,]  180  189  195 #>  [9039,]  181  190  195 #>  [9040,]  180  189  194 #>  [9041,]  180  189  195 #>  [9042,]  180  189  193 #>  [9043,]  181  190  194 #>  [9044,]  180  189  193 #>  [9045,]  181  190  194 #>  [9046,]  180  189  194 #>  [9047,]  180  189  194 #>  [9048,]  180  189  194 #>  [9049,]  180  189  194 #>  [9050,]  180  189  193 #>  [9051,]  180  189  195 #>  [9052,]  180  189  194 #>  [9053,]  181  190  193 #>  [9054,]  180  189  193 #>  [9055,]  180  189  193 #>  [9056,]  180  189  193 #>  [9057,]  180  189  193 #>  [9058,]  180  189  195 #>  [9059,]  180  189  194 #>  [9060,]  180  189  193 #>  [9061,]  180  189  195 #>  [9062,]  180  189  195 #>  [9063,]  180  189  194 #>  [9064,]  180  189  193 #>  [9065,]  180  189  193 #>  [9066,]  180  189  195 #>  [9067,]  180  189  194 #>  [9068,]  180  189  194 #>  [9069,]  180  189  194 #>  [9070,]  180  189  195 #>  [9071,]  180  189  194 #>  [9072,]  181  190  194 #>  [9073,]  181  190  193 #>  [9074,]  181  190  193 #>  [9075,]  181  190  194 #>  [9076,]  181  190  194 #>  [9077,]  181  190  195 #>  [9078,]  180  189  194 #>  [9079,]  180  189  195 #>  [9080,]  180  189  193 #>  [9081,]  180  189  193 #>  [9082,]  180  189  193 #>  [9083,]  180  189  195 #>  [9084,]  180  189  193 #>  [9085,]  180  189  193 #>  [9086,]  180  189  193 #>  [9087,]  180  189  195 #>  [9088,]  180  189  193 #>  [9089,]  180  189  193 #>  [9090,]  180  189  195 #>  [9091,]  180  189  195 #>  [9092,]  180  189  194 #>  [9093,]  180  189  195 #>  [9094,]  181  190  193 #>  [9095,]  181  190  194 #>  [9096,]  180  189  194 #>  [9097,]  180  189  193 #>  [9098,]  180  189  193 #>  [9099,]  180  189  193 #>  [9100,]  180  189  195 #>  [9101,]  182  191  197 #>  [9102,]  182  191  197 #>  [9103,]  182  191  197 #>  [9104,]  182  191  197 #>  [9105,]  182  191  197 #>  [9106,]  182  192  196 #>  [9107,]  182  191  197 #>  [9108,]  182  192  196 #>  [9109,]  182  192  196 #>  [9110,]  182  191  197 #>  [9111,]  182  191  197 #>  [9112,]  182  192  196 #>  [9113,]  182  191  197 #>  [9114,]  182  191  197 #>  [9115,]  182  192  196 #>  [9116,]  182  191  197 #>  [9117,]  182  191  197 #>  [9118,]  182  191  197 #>  [9119,]  182  191  197 #>  [9120,]  182  191  197 #>  [9121,]  182  191  197 #>  [9122,]  182  191  197 #>  [9123,]  182  191  197 #>  [9124,]  182  191  197 #>  [9125,]  182  191  197 #>  [9126,]  182  192  196 #>  [9127,]  182  191  197 #>  [9128,]  182  191  197 #>  [9129,]  182  191  197 #>  [9130,]  182  191  197 #>  [9131,]  182  191  197 #>  [9132,]  182  191  197 #>  [9133,]  182  192  196 #>  [9134,]  182  191  197 #>  [9135,]  182  191  197 #>  [9136,]  182  191  197 #>  [9137,]  182  191  197 #>  [9138,]  182  191  197 #>  [9139,]  182  191  197 #>  [9140,]  182  191  197 #>  [9141,]  182  191  197 #>  [9142,]  182  191  197 #>  [9143,]  182  192  196 #>  [9144,]  182  191  197 #>  [9145,]  182  191  197 #>  [9146,]  182  192  196 #>  [9147,]  182  191  197 #>  [9148,]  182  191  197 #>  [9149,]  182  191  197 #>  [9150,]  182  191  197 #>  [9151,]  182  192  196 #>  [9152,]  182  191  197 #>  [9153,]  182  191  197 #>  [9154,]  182  191  197 #>  [9155,]  182  191  197 #>  [9156,]  182  192  196 #>  [9157,]  182  191  197 #>  [9158,]  182  191  197 #>  [9159,]  182  191  197 #>  [9160,]  182  191  197 #>  [9161,]  182  192  196 #>  [9162,]  182  191  197 #>  [9163,]  182  191  197 #>  [9164,]  182  192  196 #>  [9165,]  182  191  197 #>  [9166,]  182  192  196 #>  [9167,]  182  191  197 #>  [9168,]  182  192  196 #>  [9169,]  182  191  197 #>  [9170,]  182  191  197 #>  [9171,]  182  191  197 #>  [9172,]  182  191  197 #>  [9173,]  182  191  197 #>  [9174,]  182  191  197 #>  [9175,]  182  191  197 #>  [9176,]  182  192  196 #>  [9177,]  182  191  197 #>  [9178,]  182  191  197 #>  [9179,]  182  191  197 #>  [9180,]  182  191  197 #>  [9181,]  182  191  197 #>  [9182,]  182  191  197 #>  [9183,]  182  191  197 #>  [9184,]  182  191  197 #>  [9185,]  182  191  197 #>  [9186,]  182  191  197 #>  [9187,]  182  191  197 #>  [9188,]  182  191  197 #>  [9189,]  182  191  197 #>  [9190,]  182  191  197 #>  [9191,]  182  191  197 #>  [9192,]  182  191  197 #>  [9193,]  182  191  197 #>  [9194,]  182  192  196 #>  [9195,]  182  191  197 #>  [9196,]  182  191  197 #>  [9197,]  182  191  197 #>  [9198,]  182  191  197 #>  [9199,]  182  191  197 #>  [9200,]  182  191  197 #>  [9201,]  183  193  198 #>  [9202,]  183  193  198 #>  [9203,]  183  193  198 #>  [9204,]  183  193  198 #>  [9205,]  183  193  198 #>  [9206,]  184  194  199 #>  [9207,]  183  193  198 #>  [9208,]  184  194  199 #>  [9209,]  184  194  199 #>  [9210,]  183  193  198 #>  [9211,]  183  193  198 #>  [9212,]  184  194  199 #>  [9213,]  183  193  198 #>  [9214,]  183  193  198 #>  [9215,]  184  194  199 #>  [9216,]  183  193  198 #>  [9217,]  183  193  198 #>  [9218,]  183  193  198 #>  [9219,]  183  193  198 #>  [9220,]  184  194  199 #>  [9221,]  183  193  198 #>  [9222,]  183  193  198 #>  [9223,]  183  193  198 #>  [9224,]  183  193  198 #>  [9225,]  183  193  198 #>  [9226,]  184  194  199 #>  [9227,]  183  193  198 #>  [9228,]  183  193  198 #>  [9229,]  183  193  198 #>  [9230,]  183  193  198 #>  [9231,]  183  193  198 #>  [9232,]  183  193  198 #>  [9233,]  184  194  199 #>  [9234,]  183  193  198 #>  [9235,]  183  193  198 #>  [9236,]  183  193  198 #>  [9237,]  183  193  198 #>  [9238,]  183  193  198 #>  [9239,]  183  193  198 #>  [9240,]  183  193  198 #>  [9241,]  183  193  198 #>  [9242,]  183  193  198 #>  [9243,]  184  194  199 #>  [9244,]  183  193  198 #>  [9245,]  184  194  199 #>  [9246,]  184  194  199 #>  [9247,]  183  193  198 #>  [9248,]  183  193  198 #>  [9249,]  183  193  198 #>  [9250,]  184  194  199 #>  [9251,]  184  194  199 #>  [9252,]  183  193  198 #>  [9253,]  184  194  199 #>  [9254,]  183  193  198 #>  [9255,]  183  193  198 #>  [9256,]  184  194  199 #>  [9257,]  184  194  199 #>  [9258,]  184  194  199 #>  [9259,]  183  193  198 #>  [9260,]  183  193  198 #>  [9261,]  184  194  199 #>  [9262,]  183  193  198 #>  [9263,]  183  193  198 #>  [9264,]  184  194  199 #>  [9265,]  184  194  199 #>  [9266,]  184  194  199 #>  [9267,]  183  193  198 #>  [9268,]  184  194  199 #>  [9269,]  183  193  198 #>  [9270,]  183  193  198 #>  [9271,]  183  193  198 #>  [9272,]  184  194  199 #>  [9273,]  183  193  198 #>  [9274,]  183  193  198 #>  [9275,]  183  193  198 #>  [9276,]  184  194  199 #>  [9277,]  183  193  198 #>  [9278,]  184  194  199 #>  [9279,]  183  193  198 #>  [9280,]  183  193  198 #>  [9281,]  184  194  199 #>  [9282,]  183  193  198 #>  [9283,]  183  193  198 #>  [9284,]  183  193  198 #>  [9285,]  183  193  198 #>  [9286,]  183  193  198 #>  [9287,]  183  193  198 #>  [9288,]  183  193  198 #>  [9289,]  183  193  198 #>  [9290,]  183  193  198 #>  [9291,]  183  193  198 #>  [9292,]  184  194  199 #>  [9293,]  183  193  198 #>  [9294,]  184  194  199 #>  [9295,]  183  193  198 #>  [9296,]  184  194  199 #>  [9297,]  184  194  199 #>  [9298,]  183  193  198 #>  [9299,]  183  193  198 #>  [9300,]  183  193  198 #>  [9301,]  185  195  201 #>  [9302,]  185  195  200 #>  [9303,]  185  195  200 #>  [9304,]  185  195  201 #>  [9305,]  185  195  200 #>  [9306,]  185  195  200 #>  [9307,]  185  195  201 #>  [9308,]  186  196  200 #>  [9309,]  185  195  201 #>  [9310,]  185  195  201 #>  [9311,]  185  195  200 #>  [9312,]  185  195  200 #>  [9313,]  186  196  201 #>  [9314,]  185  195  201 #>  [9315,]  186  196  200 #>  [9316,]  185  195  201 #>  [9317,]  185  195  200 #>  [9318,]  185  195  200 #>  [9319,]  186  196  200 #>  [9320,]  186  196  201 #>  [9321,]  185  195  200 #>  [9322,]  186  196  201 #>  [9323,]  185  195  200 #>  [9324,]  185  195  201 #>  [9325,]  185  195  201 #>  [9326,]  185  195  200 #>  [9327,]  186  196  200 #>  [9328,]  185  195  201 #>  [9329,]  186  196  200 #>  [9330,]  185  195  200 #>  [9331,]  185  195  200 #>  [9332,]  185  195  200 #>  [9333,]  185  195  200 #>  [9334,]  185  195  200 #>  [9335,]  185  195  200 #>  [9336,]  186  196  201 #>  [9337,]  186  196  200 #>  [9338,]  186  196  200 #>  [9339,]  185  195  201 #>  [9340,]  185  195  200 #>  [9341,]  186  196  200 #>  [9342,]  185  195  200 #>  [9343,]  186  196  200 #>  [9344,]  185  195  200 #>  [9345,]  185  195  201 #>  [9346,]  186  196  200 #>  [9347,]  185  195  200 #>  [9348,]  185  195  200 #>  [9349,]  185  195  200 #>  [9350,]  186  196  201 #>  [9351,]  186  196  200 #>  [9352,]  185  195  201 #>  [9353,]  186  196  201 #>  [9354,]  185  195  201 #>  [9355,]  186  196  201 #>  [9356,]  185  195  200 #>  [9357,]  185  195  201 #>  [9358,]  186  196  201 #>  [9359,]  186  196  201 #>  [9360,]  186  196  200 #>  [9361,]  185  195  200 #>  [9362,]  185  195  200 #>  [9363,]  185  195  200 #>  [9364,]  186  196  200 #>  [9365,]  185  195  200 #>  [9366,]  186  196  200 #>  [9367,]  185  195  201 #>  [9368,]  185  195  200 #>  [9369,]  186  196  200 #>  [9370,]  185  195  200 #>  [9371,]  186  196  200 #>  [9372,]  185  195  201 #>  [9373,]  185  195  201 #>  [9374,]  185  195  200 #>  [9375,]  185  195  200 #>  [9376,]  185  195  201 #>  [9377,]  186  196  200 #>  [9378,]  185  195  200 #>  [9379,]  185  195  200 #>  [9380,]  186  196  200 #>  [9381,]  186  196  200 #>  [9382,]  185  195  200 #>  [9383,]  186  196  200 #>  [9384,]  186  196  200 #>  [9385,]  186  196  201 #>  [9386,]  185  195  201 #>  [9387,]  186  196  201 #>  [9388,]  185  195  200 #>  [9389,]  185  195  200 #>  [9390,]  186  196  201 #>  [9391,]  185  195  201 #>  [9392,]  185  195  200 #>  [9393,]  185  195  200 #>  [9394,]  185  195  200 #>  [9395,]  186  196  200 #>  [9396,]  186  196  200 #>  [9397,]  186  196  200 #>  [9398,]  185  195  200 #>  [9399,]  185  195  200 #>  [9400,]  186  196  200 #>  [9401,]  187  197  202 #>  [9402,]  188  198  202 #>  [9403,]  187  197  202 #>  [9404,]  187  197  202 #>  [9405,]  187  197  202 #>  [9406,]  187  197  202 #>  [9407,]  187  197  202 #>  [9408,]  187  197  202 #>  [9409,]  187  197  202 #>  [9410,]  188  198  202 #>  [9411,]  187  197  202 #>  [9412,]  188  198  202 #>  [9413,]  187  197  202 #>  [9414,]  187  197  202 #>  [9415,]  187  197  202 #>  [9416,]  187  197  202 #>  [9417,]  187  197  202 #>  [9418,]  187  197  202 #>  [9419,]  187  197  202 #>  [9420,]  187  197  202 #>  [9421,]  188  198  202 #>  [9422,]  187  197  202 #>  [9423,]  187  197  202 #>  [9424,]  187  197  202 #>  [9425,]  187  197  202 #>  [9426,]  187  197  202 #>  [9427,]  187  197  202 #>  [9428,]  187  197  202 #>  [9429,]  187  197  202 #>  [9430,]  187  197  202 #>  [9431,]  187  197  202 #>  [9432,]  187  197  202 #>  [9433,]  187  197  202 #>  [9434,]  187  197  202 #>  [9435,]  187  197  202 #>  [9436,]  187  197  202 #>  [9437,]  187  197  202 #>  [9438,]  187  197  202 #>  [9439,]  187  197  202 #>  [9440,]  187  197  202 #>  [9441,]  187  197  202 #>  [9442,]  187  197  202 #>  [9443,]  187  197  202 #>  [9444,]  187  197  202 #>  [9445,]  187  197  202 #>  [9446,]  187  197  202 #>  [9447,]  187  197  202 #>  [9448,]  187  197  202 #>  [9449,]  187  197  202 #>  [9450,]  187  197  202 #>  [9451,]  187  197  202 #>  [9452,]  187  197  202 #>  [9453,]  187  197  202 #>  [9454,]  187  197  202 #>  [9455,]  187  197  202 #>  [9456,]  187  197  202 #>  [9457,]  187  197  202 #>  [9458,]  187  197  202 #>  [9459,]  187  197  202 #>  [9460,]  187  197  202 #>  [9461,]  187  197  202 #>  [9462,]  187  197  202 #>  [9463,]  187  197  202 #>  [9464,]  187  197  202 #>  [9465,]  187  197  202 #>  [9466,]  187  197  202 #>  [9467,]  187  197  202 #>  [9468,]  187  197  202 #>  [9469,]  187  197  202 #>  [9470,]  187  197  202 #>  [9471,]  187  197  202 #>  [9472,]  187  197  202 #>  [9473,]  187  197  202 #>  [9474,]  187  197  202 #>  [9475,]  187  197  202 #>  [9476,]  187  197  202 #>  [9477,]  187  197  202 #>  [9478,]  187  197  202 #>  [9479,]  187  197  202 #>  [9480,]  187  197  202 #>  [9481,]  187  197  202 #>  [9482,]  187  197  202 #>  [9483,]  187  197  202 #>  [9484,]  187  197  202 #>  [9485,]  187  197  202 #>  [9486,]  188  198  202 #>  [9487,]  187  197  202 #>  [9488,]  187  197  202 #>  [9489,]  187  197  202 #>  [9490,]  187  197  202 #>  [9491,]  187  197  202 #>  [9492,]  187  197  202 #>  [9493,]  187  197  202 #>  [9494,]  187  197  202 #>  [9495,]  187  197  202 #>  [9496,]  187  197  202 #>  [9497,]  187  197  202 #>  [9498,]  187  197  202 #>  [9499,]  187  197  202 #>  [9500,]  187  197  202 #>  [9501,]  189  199  203 #>  [9502,]  189  199  203 #>  [9503,]  189  199  203 #>  [9504,]  189  200  203 #>  [9505,]  189  199  204 #>  [9506,]  189  199  203 #>  [9507,]  189  199  203 #>  [9508,]  189  199  203 #>  [9509,]  189  199  203 #>  [9510,]  189  199  203 #>  [9511,]  189  199  203 #>  [9512,]  189  200  203 #>  [9513,]  189  199  203 #>  [9514,]  189  200  203 #>  [9515,]  189  199  204 #>  [9516,]  189  199  203 #>  [9517,]  189  199  203 #>  [9518,]  189  199  204 #>  [9519,]  189  200  203 #>  [9520,]  189  199  203 #>  [9521,]  189  199  203 #>  [9522,]  189  199  203 #>  [9523,]  189  199  203 #>  [9524,]  189  199  203 #>  [9525,]  189  199  203 #>  [9526,]  189  199  203 #>  [9527,]  189  200  204 #>  [9528,]  189  199  203 #>  [9529,]  189  199  203 #>  [9530,]  189  199  203 #>  [9531,]  189  199  203 #>  [9532,]  189  199  204 #>  [9533,]  189  199  203 #>  [9534,]  189  199  203 #>  [9535,]  189  199  203 #>  [9536,]  189  199  203 #>  [9537,]  189  199  203 #>  [9538,]  189  200  203 #>  [9539,]  189  199  203 #>  [9540,]  189  199  203 #>  [9541,]  189  200  203 #>  [9542,]  189  200  203 #>  [9543,]  189  199  203 #>  [9544,]  189  199  203 #>  [9545,]  189  199  203 #>  [9546,]  189  199  203 #>  [9547,]  189  199  203 #>  [9548,]  189  200  203 #>  [9549,]  189  199  203 #>  [9550,]  189  199  203 #>  [9551,]  189  199  203 #>  [9552,]  189  199  203 #>  [9553,]  189  199  203 #>  [9554,]  189  199  203 #>  [9555,]  189  199  203 #>  [9556,]  189  199  203 #>  [9557,]  189  199  203 #>  [9558,]  189  199  203 #>  [9559,]  189  199  203 #>  [9560,]  189  199  203 #>  [9561,]  189  200  203 #>  [9562,]  189  199  203 #>  [9563,]  189  199  203 #>  [9564,]  189  199  203 #>  [9565,]  189  199  203 #>  [9566,]  189  199  203 #>  [9567,]  189  199  203 #>  [9568,]  189  199  203 #>  [9569,]  189  200  203 #>  [9570,]  189  199  203 #>  [9571,]  189  199  204 #>  [9572,]  189  199  203 #>  [9573,]  189  199  203 #>  [9574,]  189  200  203 #>  [9575,]  189  199  204 #>  [9576,]  189  199  203 #>  [9577,]  189  199  203 #>  [9578,]  189  199  203 #>  [9579,]  189  199  203 #>  [9580,]  189  199  203 #>  [9581,]  189  199  203 #>  [9582,]  189  200  203 #>  [9583,]  189  199  203 #>  [9584,]  189  199  203 #>  [9585,]  189  199  203 #>  [9586,]  189  199  203 #>  [9587,]  189  199  203 #>  [9588,]  189  199  203 #>  [9589,]  189  199  203 #>  [9590,]  189  199  203 #>  [9591,]  189  199  204 #>  [9592,]  189  200  203 #>  [9593,]  189  200  203 #>  [9594,]  189  199  203 #>  [9595,]  189  199  204 #>  [9596,]  189  200  203 #>  [9597,]  189  200  203 #>  [9598,]  189  199  203 #>  [9599,]  189  199  203 #>  [9600,]  189  199  204 #>  [9601,]  190  201  207 #>  [9602,]  190  201  207 #>  [9603,]  190  201  206 #>  [9604,]  190  201  207 #>  [9605,]  190  201  207 #>  [9606,]  190  201  207 #>  [9607,]  190  201  206 #>  [9608,]  190  201  206 #>  [9609,]  190  201  207 #>  [9610,]  190  201  207 #>  [9611,]  190  201  207 #>  [9612,]  190  201  207 #>  [9613,]  190  201  206 #>  [9614,]  190  201  207 #>  [9615,]  190  201  207 #>  [9616,]  190  201  206 #>  [9617,]  190  201  206 #>  [9618,]  190  201  207 #>  [9619,]  190  201  207 #>  [9620,]  190  202  205 #>  [9621,]  190  201  207 #>  [9622,]  190  202  205 #>  [9623,]  190  201  207 #>  [9624,]  190  201  206 #>  [9625,]  190  201  206 #>  [9626,]  190  201  207 #>  [9627,]  190  201  207 #>  [9628,]  190  201  207 #>  [9629,]  190  202  205 #>  [9630,]  190  201  207 #>  [9631,]  190  201  207 #>  [9632,]  190  201  207 #>  [9633,]  190  201  207 #>  [9634,]  190  201  207 #>  [9635,]  190  201  207 #>  [9636,]  190  201  207 #>  [9637,]  190  201  207 #>  [9638,]  190  201  207 #>  [9639,]  190  201  206 #>  [9640,]  190  201  206 #>  [9641,]  190  201  207 #>  [9642,]  190  201  207 #>  [9643,]  190  201  206 #>  [9644,]  190  201  206 #>  [9645,]  190  201  206 #>  [9646,]  190  201  206 #>  [9647,]  190  201  206 #>  [9648,]  190  201  207 #>  [9649,]  190  201  206 #>  [9650,]  190  201  206 #>  [9651,]  190  201  206 #>  [9652,]  190  201  207 #>  [9653,]  190  201  206 #>  [9654,]  190  201  206 #>  [9655,]  190  201  206 #>  [9656,]  190  201  206 #>  [9657,]  190  201  207 #>  [9658,]  190  202  205 #>  [9659,]  190  201  206 #>  [9660,]  190  201  207 #>  [9661,]  190  201  207 #>  [9662,]  190  201  207 #>  [9663,]  190  201  206 #>  [9664,]  190  202  205 #>  [9665,]  190  201  206 #>  [9666,]  190  201  206 #>  [9667,]  190  201  207 #>  [9668,]  190  201  207 #>  [9669,]  190  201  207 #>  [9670,]  190  201  206 #>  [9671,]  190  201  207 #>  [9672,]  190  201  206 #>  [9673,]  190  201  207 #>  [9674,]  190  201  207 #>  [9675,]  190  201  207 #>  [9676,]  190  201  206 #>  [9677,]  190  202  205 #>  [9678,]  190  201  206 #>  [9679,]  190  201  206 #>  [9680,]  190  201  207 #>  [9681,]  190  202  205 #>  [9682,]  190  201  207 #>  [9683,]  190  201  206 #>  [9684,]  190  201  206 #>  [9685,]  190  201  207 #>  [9686,]  190  201  206 #>  [9687,]  190  202  205 #>  [9688,]  190  201  207 #>  [9689,]  190  201  206 #>  [9690,]  190  201  206 #>  [9691,]  190  201  207 #>  [9692,]  190  201  207 #>  [9693,]  190  201  207 #>  [9694,]  190  201  206 #>  [9695,]  190  201  207 #>  [9696,]  190  201  207 #>  [9697,]  190  201  207 #>  [9698,]  190  201  206 #>  [9699,]  190  201  207 #>  [9700,]  190  202  205 #>  [9701,]  192  204  208 #>  [9702,]  192  204  208 #>  [9703,]  192  204  208 #>  [9704,]  192  204  208 #>  [9705,]  192  204  208 #>  [9706,]  192  204  208 #>  [9707,]  192  204  208 #>  [9708,]  192  204  208 #>  [9709,]  192  204  208 #>  [9710,]  192  204  208 #>  [9711,]  192  204  208 #>  [9712,]  192  204  208 #>  [9713,]  192  204  208 #>  [9714,]  192  204  208 #>  [9715,]  191  203  209 #>  [9716,]  192  204  208 #>  [9717,]  191  203  209 #>  [9718,]  192  204  208 #>  [9719,]  192  204  208 #>  [9720,]  192  204  208 #>  [9721,]  192  204  208 #>  [9722,]  192  204  208 #>  [9723,]  192  204  208 #>  [9724,]  192  204  208 #>  [9725,]  192  204  208 #>  [9726,]  192  204  208 #>  [9727,]  192  204  208 #>  [9728,]  192  204  208 #>  [9729,]  192  204  208 #>  [9730,]  192  204  208 #>  [9731,]  191  203  209 #>  [9732,]  192  204  208 #>  [9733,]  192  204  208 #>  [9734,]  191  203  209 #>  [9735,]  192  204  208 #>  [9736,]  192  204  208 #>  [9737,]  191  203  209 #>  [9738,]  192  204  208 #>  [9739,]  192  204  208 #>  [9740,]  192  204  208 #>  [9741,]  192  204  208 #>  [9742,]  191  203  209 #>  [9743,]  191  203  209 #>  [9744,]  191  203  209 #>  [9745,]  192  204  208 #>  [9746,]  192  204  208 #>  [9747,]  192  204  208 #>  [9748,]  191  203  209 #>  [9749,]  192  204  208 #>  [9750,]  192  204  208 #>  [9751,]  192  204  208 #>  [9752,]  192  204  208 #>  [9753,]  192  204  208 #>  [9754,]  192  204  208 #>  [9755,]  192  204  208 #>  [9756,]  192  204  208 #>  [9757,]  192  204  208 #>  [9758,]  192  204  208 #>  [9759,]  192  204  208 #>  [9760,]  192  204  208 #>  [9761,]  192  204  208 #>  [9762,]  192  204  208 #>  [9763,]  191  203  209 #>  [9764,]  192  204  208 #>  [9765,]  192  204  208 #>  [9766,]  192  204  208 #>  [9767,]  192  204  208 #>  [9768,]  192  204  208 #>  [9769,]  192  204  208 #>  [9770,]  191  203  209 #>  [9771,]  192  204  208 #>  [9772,]  192  204  208 #>  [9773,]  192  204  208 #>  [9774,]  192  204  208 #>  [9775,]  191  203  209 #>  [9776,]  192  204  208 #>  [9777,]  192  204  208 #>  [9778,]  191  203  209 #>  [9779,]  191  203  209 #>  [9780,]  192  204  208 #>  [9781,]  192  204  208 #>  [9782,]  192  204  208 #>  [9783,]  192  204  208 #>  [9784,]  192  204  208 #>  [9785,]  192  204  208 #>  [9786,]  192  204  208 #>  [9787,]  192  204  208 #>  [9788,]  192  204  208 #>  [9789,]  192  204  208 #>  [9790,]  192  204  208 #>  [9791,]  192  204  208 #>  [9792,]  192  204  208 #>  [9793,]  192  204  208 #>  [9794,]  192  204  208 #>  [9795,]  191  203  209 #>  [9796,]  192  204  208 #>  [9797,]  192  204  208 #>  [9798,]  192  204  208 #>  [9799,]  192  204  208 #>  [9800,]  191  203  209 #>  [9801,]  194  205  210 #>  [9802,]  193  207  211 #>  [9803,]  193  206  211 #>  [9804,]  194  205  210 #>  [9805,]  193  207  211 #>  [9806,]  193  206  211 #>  [9807,]  194  205  210 #>  [9808,]  194  205  210 #>  [9809,]  194  205  210 #>  [9810,]  194  205  210 #>  [9811,]  193  206  211 #>  [9812,]  193  207  211 #>  [9813,]  194  205  210 #>  [9814,]  193  206  211 #>  [9815,]  194  205  210 #>  [9816,]  194  205  210 #>  [9817,]  194  205  210 #>  [9818,]  194  205  210 #>  [9819,]  193  206  211 #>  [9820,]  193  207  211 #>  [9821,]  194  205  210 #>  [9822,]  193  207  211 #>  [9823,]  194  205  210 #>  [9824,]  193  207  211 #>  [9825,]  194  205  210 #>  [9826,]  193  206  211 #>  [9827,]  194  205  210 #>  [9828,]  194  205  210 #>  [9829,]  193  207  211 #>  [9830,]  193  207  211 #>  [9831,]  193  207  211 #>  [9832,]  193  207  211 #>  [9833,]  193  207  211 #>  [9834,]  193  206  211 #>  [9835,]  193  206  211 #>  [9836,]  193  207  211 #>  [9837,]  194  205  210 #>  [9838,]  194  205  210 #>  [9839,]  194  205  210 #>  [9840,]  193  207  211 #>  [9841,]  193  207  211 #>  [9842,]  193  206  211 #>  [9843,]  194  205  210 #>  [9844,]  194  205  210 #>  [9845,]  194  205  210 #>  [9846,]  194  205  210 #>  [9847,]  194  205  210 #>  [9848,]  193  207  211 #>  [9849,]  193  206  211 #>  [9850,]  193  207  211 #>  [9851,]  193  207  211 #>  [9852,]  193  206  211 #>  [9853,]  194  205  210 #>  [9854,]  193  207  211 #>  [9855,]  193  206  211 #>  [9856,]  194  205  210 #>  [9857,]  193  206  211 #>  [9858,]  193  207  211 #>  [9859,]  193  206  211 #>  [9860,]  193  207  211 #>  [9861,]  194  205  210 #>  [9862,]  193  206  211 #>  [9863,]  193  207  211 #>  [9864,]  194  205  210 #>  [9865,]  193  206  211 #>  [9866,]  193  207  211 #>  [9867,]  193  206  211 #>  [9868,]  193  206  211 #>  [9869,]  193  206  211 #>  [9870,]  194  205  210 #>  [9871,]  194  205  210 #>  [9872,]  194  205  210 #>  [9873,]  194  205  210 #>  [9874,]  194  205  210 #>  [9875,]  194  205  210 #>  [9876,]  194  205  210 #>  [9877,]  194  205  210 #>  [9878,]  193  207  211 #>  [9879,]  194  205  210 #>  [9880,]  193  207  211 #>  [9881,]  193  207  211 #>  [9882,]  194  205  210 #>  [9883,]  193  207  211 #>  [9884,]  194  205  210 #>  [9885,]  193  206  211 #>  [9886,]  194  205  210 #>  [9887,]  194  205  210 #>  [9888,]  194  205  210 #>  [9889,]  193  206  211 #>  [9890,]  194  205  210 #>  [9891,]  193  206  211 #>  [9892,]  193  207  211 #>  [9893,]  193  207  211 #>  [9894,]  194  205  210 #>  [9895,]  194  205  210 #>  [9896,]  194  205  210 #>  [9897,]  193  206  211 #>  [9898,]  193  206  211 #>  [9899,]  193  207  211 #>  [9900,]  194  205  210 #>  [9901,]  196  209  213 #>  [9902,]  195  208  212 #>  [9903,]  195  208  212 #>  [9904,]  196  209  213 #>  [9905,]  195  208  212 #>  [9906,]  195  208  212 #>  [9907,]  196  209  213 #>  [9908,]  195  208  212 #>  [9909,]  196  209  213 #>  [9910,]  196  209  213 #>  [9911,]  195  208  212 #>  [9912,]  195  208  212 #>  [9913,]  196  209  213 #>  [9914,]  196  209  213 #>  [9915,]  195  208  212 #>  [9916,]  196  209  213 #>  [9917,]  195  208  212 #>  [9918,]  195  208  212 #>  [9919,]  195  208  212 #>  [9920,]  196  209  213 #>  [9921,]  195  208  212 #>  [9922,]  196  209  213 #>  [9923,]  195  208  212 #>  [9924,]  196  209  213 #>  [9925,]  196  209  213 #>  [9926,]  195  208  212 #>  [9927,]  195  208  212 #>  [9928,]  196  209  213 #>  [9929,]  195  208  212 #>  [9930,]  195  208  212 #>  [9931,]  195  208  212 #>  [9932,]  195  208  212 #>  [9933,]  195  208  212 #>  [9934,]  195  208  212 #>  [9935,]  195  208  212 #>  [9936,]  196  209  213 #>  [9937,]  195  208  212 #>  [9938,]  195  208  212 #>  [9939,]  196  209  213 #>  [9940,]  195  208  212 #>  [9941,]  195  208  212 #>  [9942,]  195  208  212 #>  [9943,]  195  208  212 #>  [9944,]  195  208  212 #>  [9945,]  196  209  213 #>  [9946,]  195  208  212 #>  [9947,]  195  208  212 #>  [9948,]  195  208  212 #>  [9949,]  196  209  213 #>  [9950,]  196  209  213 #>  [9951,]  195  208  212 #>  [9952,]  196  209  213 #>  [9953,]  196  209  213 #>  [9954,]  196  209  213 #>  [9955,]  196  209  213 #>  [9956,]  195  208  212 #>  [9957,]  196  209  213 #>  [9958,]  196  209  213 #>  [9959,]  196  209  213 #>  [9960,]  195  208  212 #>  [9961,]  195  208  212 #>  [9962,]  195  208  212 #>  [9963,]  195  208  212 #>  [9964,]  195  208  212 #>  [9965,]  195  208  212 #>  [9966,]  195  208  212 #>  [9967,]  196  209  213 #>  [9968,]  195  208  212 #>  [9969,]  195  208  212 #>  [9970,]  195  208  212 #>  [9971,]  195  208  212 #>  [9972,]  196  209  213 #>  [9973,]  196  209  213 #>  [9974,]  195  208  212 #>  [9975,]  195  208  212 #>  [9976,]  196  209  213 #>  [9977,]  195  208  212 #>  [9978,]  195  208  212 #>  [9979,]  195  208  212 #>  [9980,]  195  208  212 #>  [9981,]  195  208  212 #>  [9982,]  195  208  212 #>  [9983,]  195  208  212 #>  [9984,]  195  208  212 #>  [9985,]  196  209  213 #>  [9986,]  196  209  213 #>  [9987,]  196  209  213 #>  [9988,]  196  209  213 #>  [9989,]  195  208  212 #>  [9990,]  196  209  213 #>  [9991,]  196  209  213 #>  [9992,]  195  208  212 #>  [9993,]  195  208  212 #>  [9994,]  195  208  212 #>  [9995,]  195  208  212 #>  [9996,]  195  208  212 #>  [9997,]  195  208  212 #>  [9998,]  195  208  212 #>  [9999,]  195  208  212 #> [10000,]  195  208  212 #> [10001,]  198  211  214 #> [10002,]  198  211  214 #> [10003,]  198  211  214 #> [10004,]  197  210  214 #> [10005,]  198  211  214 #> [10006,]  198  211  214 #> [10007,]  198  211  214 #> [10008,]  197  210  214 #> [10009,]  197  210  214 #> [10010,]  198  211  214 #> [10011,]  197  210  214 #> [10012,]  198  211  214 #> [10013,]  197  210  214 #> [10014,]  198  211  214 #> [10015,]  198  211  214 #> [10016,]  198  211  214 #> [10017,]  197  210  214 #> [10018,]  198  211  214 #> [10019,]  198  211  214 #> [10020,]  198  211  214 #> [10021,]  198  211  214 #> [10022,]  197  210  214 #> [10023,]  198  211  214 #> [10024,]  198  211  214 #> [10025,]  198  211  214 #> [10026,]  198  211  214 #> [10027,]  197  210  214 #> [10028,]  198  211  214 #> [10029,]  198  211  214 #> [10030,]  197  210  214 #> [10031,]  198  211  214 #> [10032,]  198  211  214 #> [10033,]  198  211  214 #> [10034,]  198  211  214 #> [10035,]  197  210  214 #> [10036,]  198  211  214 #> [10037,]  198  211  214 #> [10038,]  198  211  214 #> [10039,]  198  211  214 #> [10040,]  198  211  214 #> [10041,]  198  211  214 #> [10042,]  198  211  214 #> [10043,]  197  210  214 #> [10044,]  197  210  214 #> [10045,]  198  211  214 #> [10046,]  198  211  214 #> [10047,]  198  211  214 #> [10048,]  198  211  214 #> [10049,]  197  210  214 #> [10050,]  198  211  214 #> [10051,]  198  211  214 #> [10052,]  197  210  214 #> [10053,]  198  211  214 #> [10054,]  197  210  214 #> [10055,]  197  210  214 #> [10056,]  198  211  214 #> [10057,]  198  211  214 #> [10058,]  197  210  214 #> [10059,]  198  211  214 #> [10060,]  198  211  214 #> [10061,]  198  211  214 #> [10062,]  198  211  214 #> [10063,]  198  211  214 #> [10064,]  198  211  214 #> [10065,]  198  211  214 #> [10066,]  197  210  214 #> [10067,]  198  211  214 #> [10068,]  198  211  214 #> [10069,]  197  210  214 #> [10070,]  198  211  214 #> [10071,]  198  211  214 #> [10072,]  198  211  214 #> [10073,]  198  211  214 #> [10074,]  198  211  214 #> [10075,]  198  211  214 #> [10076,]  198  211  214 #> [10077,]  198  211  214 #> [10078,]  198  211  214 #> [10079,]  197  210  214 #> [10080,]  197  210  214 #> [10081,]  197  210  214 #> [10082,]  197  210  214 #> [10083,]  197  210  214 #> [10084,]  198  211  214 #> [10085,]  198  211  214 #> [10086,]  198  211  214 #> [10087,]  197  210  214 #> [10088,]  197  210  214 #> [10089,]  197  210  214 #> [10090,]  197  210  214 #> [10091,]  198  211  214 #> [10092,]  197  210  214 #> [10093,]  198  211  214 #> [10094,]  198  211  214 #> [10095,]  197  210  214 #> [10096,]  197  210  214 #> [10097,]  198  211  214 #> [10098,]  198  211  214 #> [10099,]  197  210  214 #> [10100,]  198  211  214 #> [10101,]  200  212  215 #> [10102,]  200  212  215 #> [10103,]  199  213  216 #> [10104,]  200  212  215 #> [10105,]  200  212  215 #> [10106,]  200  212  215 #> [10107,]  199  213  216 #> [10108,]  199  213  216 #> [10109,]  200  212  215 #> [10110,]  200  212  215 #> [10111,]  200  212  215 #> [10112,]  200  212  215 #> [10113,]  199  214  216 #> [10114,]  200  212  215 #> [10115,]  200  212  215 #> [10116,]  199  213  216 #> [10117,]  199  214  216 #> [10118,]  200  212  215 #> [10119,]  200  212  215 #> [10120,]  199  214  216 #> [10121,]  200  212  215 #> [10122,]  199  213  216 #> [10123,]  200  212  215 #> [10124,]  199  214  216 #> [10125,]  199  213  216 #> [10126,]  200  212  215 #> [10127,]  200  212  215 #> [10128,]  200  212  215 #> [10129,]  200  212  215 #> [10130,]  200  212  215 #> [10131,]  200  212  215 #> [10132,]  200  212  215 #> [10133,]  200  212  215 #> [10134,]  200  212  215 #> [10135,]  200  212  215 #> [10136,]  200  212  215 #> [10137,]  200  212  215 #> [10138,]  200  212  215 #> [10139,]  199  214  216 #> [10140,]  199  213  216 #> [10141,]  200  212  215 #> [10142,]  200  212  215 #> [10143,]  199  213  216 #> [10144,]  199  213  216 #> [10145,]  199  213  216 #> [10146,]  199  213  216 #> [10147,]  199  213  216 #> [10148,]  200  212  215 #> [10149,]  199  213  216 #> [10150,]  199  213  216 #> [10151,]  200  212  215 #> [10152,]  200  212  215 #> [10153,]  199  214  216 #> [10154,]  199  214  216 #> [10155,]  199  213  216 #> [10156,]  199  214  216 #> [10157,]  200  212  215 #> [10158,]  200  212  215 #> [10159,]  199  213  216 #> [10160,]  200  212  215 #> [10161,]  200  212  215 #> [10162,]  200  212  215 #> [10163,]  199  213  216 #> [10164,]  200  212  215 #> [10165,]  199  214  216 #> [10166,]  199  214  216 #> [10167,]  200  212  215 #> [10168,]  200  212  215 #> [10169,]  200  212  215 #> [10170,]  199  214  216 #> [10171,]  200  212  215 #> [10172,]  199  213  216 #> [10173,]  200  212  215 #> [10174,]  200  212  215 #> [10175,]  200  212  215 #> [10176,]  200  212  215 #> [10177,]  199  214  216 #> [10178,]  199  213  216 #> [10179,]  199  214  216 #> [10180,]  200  212  215 #> [10181,]  200  212  215 #> [10182,]  200  212  215 #> [10183,]  200  212  215 #> [10184,]  199  214  216 #> [10185,]  200  212  215 #> [10186,]  199  213  216 #> [10187,]  200  212  215 #> [10188,]  200  212  215 #> [10189,]  199  214  216 #> [10190,]  199  214  216 #> [10191,]  200  212  215 #> [10192,]  200  212  215 #> [10193,]  200  212  215 #> [10194,]  199  214  216 #> [10195,]  200  212  215 #> [10196,]  200  212  215 #> [10197,]  200  212  215 #> [10198,]  199  213  216 #> [10199,]  200  212  215 #> [10200,]  199  213  216 #> [10201,]  202  216  218 #> [10202,]  202  216  218 #> [10203,]  201  215  217 #> [10204,]  202  216  218 #> [10205,]  202  216  218 #> [10206,]  202  216  218 #> [10207,]  201  215  217 #> [10208,]  202  216  218 #> [10209,]  202  216  218 #> [10210,]  202  216  218 #> [10211,]  202  216  218 #> [10212,]  202  216  218 #> [10213,]  202  216  218 #> [10214,]  202  216  218 #> [10215,]  202  216  218 #> [10216,]  202  216  218 #> [10217,]  202  216  218 #> [10218,]  202  216  218 #> [10219,]  202  216  218 #> [10220,]  202  216  218 #> [10221,]  201  215  217 #> [10222,]  202  216  218 #> [10223,]  201  215  217 #> [10224,]  202  216  218 #> [10225,]  202  216  218 #> [10226,]  202  216  218 #> [10227,]  202  216  218 #> [10228,]  202  216  218 #> [10229,]  202  216  218 #> [10230,]  201  215  217 #> [10231,]  201  215  217 #> [10232,]  202  216  218 #> [10233,]  202  216  218 #> [10234,]  202  216  218 #> [10235,]  202  216  218 #> [10236,]  202  216  218 #> [10237,]  202  216  218 #> [10238,]  202  216  218 #> [10239,]  201  215  217 #> [10240,]  202  216  218 #> [10241,]  202  216  218 #> [10242,]  202  216  218 #> [10243,]  202  216  218 #> [10244,]  202  216  218 #> [10245,]  202  216  218 #> [10246,]  202  216  218 #> [10247,]  201  215  217 #> [10248,]  202  216  218 #> [10249,]  201  215  217 #> [10250,]  202  216  218 #> [10251,]  202  216  218 #> [10252,]  202  216  218 #> [10253,]  202  216  218 #> [10254,]  201  215  217 #> [10255,]  202  216  218 #> [10256,]  202  216  218 #> [10257,]  202  216  218 #> [10258,]  202  216  218 #> [10259,]  202  216  218 #> [10260,]  202  216  218 #> [10261,]  202  216  218 #> [10262,]  201  215  217 #> [10263,]  202  216  218 #> [10264,]  202  216  218 #> [10265,]  202  216  218 #> [10266,]  202  216  218 #> [10267,]  202  216  218 #> [10268,]  202  216  218 #> [10269,]  202  216  218 #> [10270,]  201  215  217 #> [10271,]  202  216  218 #> [10272,]  202  216  218 #> [10273,]  202  216  218 #> [10274,]  202  216  218 #> [10275,]  202  216  218 #> [10276,]  202  216  218 #> [10277,]  202  216  218 #> [10278,]  202  216  218 #> [10279,]  201  215  217 #> [10280,]  201  215  217 #> [10281,]  202  216  218 #> [10282,]  202  216  218 #> [10283,]  201  215  217 #> [10284,]  202  216  218 #> [10285,]  202  216  218 #> [10286,]  202  216  218 #> [10287,]  202  216  218 #> [10288,]  202  216  218 #> [10289,]  202  216  218 #> [10290,]  202  216  218 #> [10291,]  202  216  218 #> [10292,]  202  216  218 #> [10293,]  202  216  218 #> [10294,]  202  216  218 #> [10295,]  201  215  217 #> [10296,]  202  216  218 #> [10297,]  202  216  218 #> [10298,]  201  215  217 #> [10299,]  202  216  218 #> [10300,]  202  216  218 #> [10301,]  204  218  220 #> [10302,]  204  218  220 #> [10303,]  203  217  219 #> [10304,]  204  218  220 #> [10305,]  204  218  220 #> [10306,]  204  218  220 #> [10307,]  203  217  219 #> [10308,]  204  218  220 #> [10309,]  204  218  220 #> [10310,]  204  218  220 #> [10311,]  204  218  220 #> [10312,]  204  218  220 #> [10313,]  203  217  219 #> [10314,]  204  218  220 #> [10315,]  204  218  220 #> [10316,]  203  217  219 #> [10317,]  204  218  220 #> [10318,]  204  218  220 #> [10319,]  203  217  219 #> [10320,]  204  218  220 #> [10321,]  203  217  219 #> [10322,]  204  218  220 #> [10323,]  203  217  219 #> [10324,]  204  218  220 #> [10325,]  204  218  220 #> [10326,]  204  218  220 #> [10327,]  204  218  220 #> [10328,]  204  218  220 #> [10329,]  204  218  220 #> [10330,]  203  217  219 #> [10331,]  203  217  219 #> [10332,]  204  218  220 #> [10333,]  204  218  220 #> [10334,]  203  217  219 #> [10335,]  203  217  219 #> [10336,]  203  217  219 #> [10337,]  203  217  219 #> [10338,]  204  218  220 #> [10339,]  203  217  219 #> [10340,]  203  217  219 #> [10341,]  204  218  220 #> [10342,]  204  218  220 #> [10343,]  204  218  220 #> [10344,]  204  218  220 #> [10345,]  204  218  220 #> [10346,]  204  218  220 #> [10347,]  203  217  219 #> [10348,]  204  218  220 #> [10349,]  203  217  219 #> [10350,]  204  218  220 #> [10351,]  204  218  220 #> [10352,]  204  218  220 #> [10353,]  204  218  220 #> [10354,]  203  217  219 #> [10355,]  204  218  220 #> [10356,]  204  218  220 #> [10357,]  204  218  220 #> [10358,]  204  218  220 #> [10359,]  204  218  220 #> [10360,]  204  218  220 #> [10361,]  204  218  220 #> [10362,]  203  217  219 #> [10363,]  204  218  220 #> [10364,]  204  218  220 #> [10365,]  204  218  220 #> [10366,]  204  218  220 #> [10367,]  204  218  220 #> [10368,]  204  218  220 #> [10369,]  204  218  220 #> [10370,]  203  217  219 #> [10371,]  204  218  220 #> [10372,]  204  218  220 #> [10373,]  204  218  220 #> [10374,]  204  218  220 #> [10375,]  204  218  220 #> [10376,]  204  218  220 #> [10377,]  203  217  219 #> [10378,]  204  218  220 #> [10379,]  203  217  219 #> [10380,]  203  217  219 #> [10381,]  204  218  220 #> [10382,]  204  218  220 #> [10383,]  203  217  219 #> [10384,]  204  218  220 #> [10385,]  204  218  220 #> [10386,]  204  218  220 #> [10387,]  204  218  220 #> [10388,]  204  218  220 #> [10389,]  204  218  220 #> [10390,]  204  218  220 #> [10391,]  204  218  220 #> [10392,]  204  218  220 #> [10393,]  203  217  219 #> [10394,]  204  218  220 #> [10395,]  203  217  219 #> [10396,]  204  218  220 #> [10397,]  204  218  220 #> [10398,]  203  217  219 #> [10399,]  204  218  220 #> [10400,]  203  217  219 #> [10401,]  205  219  221 #> [10402,]  206  220  221 #> [10403,]  206  220  221 #> [10404,]  205  219  221 #> [10405,]  205  219  221 #> [10406,]  206  220  221 #> [10407,]  206  220  221 #> [10408,]  205  219  221 #> [10409,]  205  219  221 #> [10410,]  205  219  221 #> [10411,]  205  219  221 #> [10412,]  206  220  221 #> [10413,]  205  219  221 #> [10414,]  205  219  221 #> [10415,]  205  219  221 #> [10416,]  205  219  221 #> [10417,]  205  219  221 #> [10418,]  206  220  221 #> [10419,]  206  220  221 #> [10420,]  206  220  221 #> [10421,]  205  219  221 #> [10422,]  205  219  221 #> [10423,]  206  220  221 #> [10424,]  205  219  221 #> [10425,]  206  220  221 #> [10426,]  205  219  221 #> [10427,]  205  219  221 #> [10428,]  206  220  221 #> [10429,]  206  220  221 #> [10430,]  205  219  221 #> [10431,]  206  220  221 #> [10432,]  206  220  221 #> [10433,]  206  220  221 #> [10434,]  206  220  221 #> [10435,]  205  219  221 #> [10436,]  205  219  221 #> [10437,]  205  219  221 #> [10438,]  205  219  221 #> [10439,]  205  219  221 #> [10440,]  206  220  221 #> [10441,]  205  219  221 #> [10442,]  206  220  221 #> [10443,]  205  219  221 #> [10444,]  205  219  221 #> [10445,]  205  219  221 #> [10446,]  205  219  221 #> [10447,]  205  219  221 #> [10448,]  206  220  221 #> [10449,]  205  219  221 #> [10450,]  205  219  221 #> [10451,]  205  219  221 #> [10452,]  205  219  221 #> [10453,]  205  219  221 #> [10454,]  205  219  221 #> [10455,]  205  219  221 #> [10456,]  206  220  221 #> [10457,]  205  219  221 #> [10458,]  205  219  221 #> [10459,]  205  219  221 #> [10460,]  206  220  221 #> [10461,]  206  220  221 #> [10462,]  205  219  221 #> [10463,]  205  219  221 #> [10464,]  206  220  221 #> [10465,]  206  220  221 #> [10466,]  205  219  221 #> [10467,]  205  219  221 #> [10468,]  205  219  221 #> [10469,]  205  219  221 #> [10470,]  206  220  221 #> [10471,]  206  220  221 #> [10472,]  205  219  221 #> [10473,]  206  220  221 #> [10474,]  205  219  221 #> [10475,]  205  219  221 #> [10476,]  205  219  221 #> [10477,]  205  219  221 #> [10478,]  206  220  221 #> [10479,]  205  219  221 #> [10480,]  205  219  221 #> [10481,]  205  219  221 #> [10482,]  205  219  221 #> [10483,]  205  219  221 #> [10484,]  206  220  221 #> [10485,]  205  219  221 #> [10486,]  205  219  221 #> [10487,]  205  219  221 #> [10488,]  205  219  221 #> [10489,]  205  219  221 #> [10490,]  205  219  221 #> [10491,]  205  219  221 #> [10492,]  205  219  221 #> [10493,]  206  220  221 #> [10494,]  205  219  221 #> [10495,]  205  219  221 #> [10496,]  205  219  221 #> [10497,]  206  220  221 #> [10498,]  206  220  221 #> [10499,]  205  219  221 #> [10500,]  206  220  221 #> [10501,]  207  223  223 #> [10502,]  207  222  223 #> [10503,]  207  222  223 #> [10504,]  207  222  223 #> [10505,]  207  223  223 #> [10506,]  207  222  223 #> [10507,]  207  222  223 #> [10508,]  207  222  223 #> [10509,]  207  223  223 #> [10510,]  207  222  223 #> [10511,]  207  223  223 #> [10512,]  207  222  223 #> [10513,]  208  221  222 #> [10514,]  207  222  223 #> [10515,]  208  221  222 #> [10516,]  207  222  223 #> [10517,]  207  223  223 #> [10518,]  207  223  223 #> [10519,]  208  221  222 #> [10520,]  208  221  222 #> [10521,]  207  223  223 #> [10522,]  208  221  222 #> [10523,]  207  222  223 #> [10524,]  207  223  223 #> [10525,]  207  222  223 #> [10526,]  207  222  223 #> [10527,]  208  221  222 #> [10528,]  207  223  223 #> [10529,]  208  221  222 #> [10530,]  207  222  223 #> [10531,]  207  222  223 #> [10532,]  207  222  223 #> [10533,]  207  223  223 #> [10534,]  207  222  223 #> [10535,]  207  222  223 #> [10536,]  208  221  222 #> [10537,]  208  221  222 #> [10538,]  208  221  222 #> [10539,]  207  223  223 #> [10540,]  207  222  223 #> [10541,]  207  223  223 #> [10542,]  207  223  223 #> [10543,]  207  223  223 #> [10544,]  207  222  223 #> [10545,]  207  222  223 #> [10546,]  208  221  222 #> [10547,]  207  222  223 #> [10548,]  207  222  223 #> [10549,]  207  222  223 #> [10550,]  207  223  223 #> [10551,]  208  221  222 #> [10552,]  207  222  223 #> [10553,]  208  221  222 #> [10554,]  207  223  223 #> [10555,]  208  221  222 #> [10556,]  207  223  223 #> [10557,]  207  222  223 #> [10558,]  208  221  222 #> [10559,]  207  222  223 #> [10560,]  207  222  223 #> [10561,]  207  223  223 #> [10562,]  207  223  223 #> [10563,]  207  222  223 #> [10564,]  208  221  222 #> [10565,]  207  223  223 #> [10566,]  208  221  222 #> [10567,]  207  222  223 #> [10568,]  207  222  223 #> [10569,]  208  221  222 #> [10570,]  207  223  223 #> [10571,]  208  221  222 #> [10572,]  207  222  223 #> [10573,]  207  223  223 #> [10574,]  207  222  223 #> [10575,]  207  222  223 #> [10576,]  207  222  223 #> [10577,]  208  221  222 #> [10578,]  207  222  223 #> [10579,]  207  223  223 #> [10580,]  208  221  222 #> [10581,]  208  221  222 #> [10582,]  207  223  223 #> [10583,]  208  221  222 #> [10584,]  207  223  223 #> [10585,]  207  223  223 #> [10586,]  207  222  223 #> [10587,]  208  221  222 #> [10588,]  207  222  223 #> [10589,]  207  223  223 #> [10590,]  208  221  222 #> [10591,]  207  223  223 #> [10592,]  207  222  223 #> [10593,]  207  223  223 #> [10594,]  207  223  223 #> [10595,]  207  222  223 #> [10596,]  208  221  222 #> [10597,]  208  221  222 #> [10598,]  207  222  223 #> [10599,]  207  223  223 #> [10600,]  208  221  222 #> [10601,]  210  225  224 #> [10602,]  210  225  224 #> [10603,]  210  225  224 #> [10604,]  209  224  225 #> [10605,]  210  225  224 #> [10606,]  210  225  224 #> [10607,]  210  225  224 #> [10608,]  209  224  225 #> [10609,]  209  224  225 #> [10610,]  210  225  224 #> [10611,]  209  224  225 #> [10612,]  210  225  224 #> [10613,]  209  224  225 #> [10614,]  210  225  224 #> [10615,]  210  225  224 #> [10616,]  210  225  224 #> [10617,]  209  224  225 #> [10618,]  210  225  224 #> [10619,]  210  225  224 #> [10620,]  210  225  224 #> [10621,]  210  225  224 #> [10622,]  209  224  225 #> [10623,]  210  225  224 #> [10624,]  210  225  224 #> [10625,]  210  225  224 #> [10626,]  210  225  224 #> [10627,]  209  224  225 #> [10628,]  210  225  224 #> [10629,]  210  225  224 #> [10630,]  209  224  225 #> [10631,]  210  225  224 #> [10632,]  210  225  224 #> [10633,]  210  225  224 #> [10634,]  210  225  224 #> [10635,]  209  224  225 #> [10636,]  210  225  224 #> [10637,]  210  225  224 #> [10638,]  210  225  224 #> [10639,]  210  225  224 #> [10640,]  210  225  224 #> [10641,]  210  225  224 #> [10642,]  210  225  224 #> [10643,]  209  224  225 #> [10644,]  209  224  225 #> [10645,]  210  225  224 #> [10646,]  210  225  224 #> [10647,]  210  225  224 #> [10648,]  210  225  224 #> [10649,]  209  224  225 #> [10650,]  210  225  224 #> [10651,]  210  225  224 #> [10652,]  209  224  225 #> [10653,]  210  225  224 #> [10654,]  209  224  225 #> [10655,]  209  224  225 #> [10656,]  210  225  224 #> [10657,]  210  225  224 #> [10658,]  209  224  225 #> [10659,]  210  225  224 #> [10660,]  210  225  224 #> [10661,]  210  225  224 #> [10662,]  210  225  224 #> [10663,]  210  225  224 #> [10664,]  210  225  224 #> [10665,]  210  225  224 #> [10666,]  209  224  225 #> [10667,]  210  225  224 #> [10668,]  210  225  224 #> [10669,]  209  224  225 #> [10670,]  210  225  224 #> [10671,]  210  225  224 #> [10672,]  210  225  224 #> [10673,]  210  225  224 #> [10674,]  210  225  224 #> [10675,]  210  225  224 #> [10676,]  210  225  224 #> [10677,]  210  225  224 #> [10678,]  210  225  224 #> [10679,]  209  224  225 #> [10680,]  209  224  225 #> [10681,]  209  224  225 #> [10682,]  209  224  225 #> [10683,]  209  224  225 #> [10684,]  210  225  224 #> [10685,]  210  225  224 #> [10686,]  210  225  224 #> [10687,]  209  224  225 #> [10688,]  209  224  225 #> [10689,]  209  224  225 #> [10690,]  209  224  225 #> [10691,]  210  225  224 #> [10692,]  209  224  225 #> [10693,]  210  225  224 #> [10694,]  210  225  224 #> [10695,]  209  224  225 #> [10696,]  210  225  224 #> [10697,]  210  225  224 #> [10698,]  210  225  224 #> [10699,]  209  224  225 #> [10700,]  210  225  224 #> [10701,]  212  227  228 #> [10702,]  212  227  228 #> [10703,]  211  226  226 #> [10704,]  212  227  227 #> [10705,]  212  227  228 #> [10706,]  212  227  228 #> [10707,]  212  227  228 #> [10708,]  212  227  227 #> [10709,]  212  227  227 #> [10710,]  211  226  226 #> [10711,]  211  226  226 #> [10712,]  212  227  228 #> [10713,]  212  227  228 #> [10714,]  211  226  226 #> [10715,]  212  227  228 #> [10716,]  212  227  228 #> [10717,]  212  227  228 #> [10718,]  212  227  228 #> [10719,]  212  227  228 #> [10720,]  212  227  228 #> [10721,]  211  226  226 #> [10722,]  212  227  228 #> [10723,]  212  227  228 #> [10724,]  212  227  228 #> [10725,]  212  227  228 #> [10726,]  212  227  228 #> [10727,]  212  227  228 #> [10728,]  211  226  226 #> [10729,]  212  227  228 #> [10730,]  212  227  228 #> [10731,]  211  226  226 #> [10732,]  211  226  226 #> [10733,]  212  227  228 #> [10734,]  211  226  226 #> [10735,]  212  227  228 #> [10736,]  212  227  228 #> [10737,]  212  227  228 #> [10738,]  212  227  228 #> [10739,]  212  227  228 #> [10740,]  211  226  226 #> [10741,]  212  227  228 #> [10742,]  212  227  228 #> [10743,]  212  227  227 #> [10744,]  212  227  228 #> [10745,]  212  227  228 #> [10746,]  212  227  228 #> [10747,]  212  227  228 #> [10748,]  211  226  226 #> [10749,]  212  227  228 #> [10750,]  212  227  228 #> [10751,]  212  227  227 #> [10752,]  212  227  228 #> [10753,]  212  227  228 #> [10754,]  212  227  228 #> [10755,]  212  227  228 #> [10756,]  212  227  228 #> [10757,]  212  227  228 #> [10758,]  212  227  228 #> [10759,]  212  227  228 #> [10760,]  212  227  227 #> [10761,]  212  227  228 #> [10762,]  212  227  228 #> [10763,]  212  227  228 #> [10764,]  212  227  228 #> [10765,]  212  227  228 #> [10766,]  212  227  228 #> [10767,]  212  227  227 #> [10768,]  212  227  228 #> [10769,]  212  227  228 #> [10770,]  211  226  226 #> [10771,]  212  227  228 #> [10772,]  212  227  228 #> [10773,]  212  227  228 #> [10774,]  211  226  226 #> [10775,]  212  227  228 #> [10776,]  212  227  228 #> [10777,]  212  227  228 #> [10778,]  212  227  228 #> [10779,]  212  227  228 #> [10780,]  212  227  228 #> [10781,]  212  227  228 #> [10782,]  211  226  226 #> [10783,]  212  227  228 #> [10784,]  212  227  228 #> [10785,]  212  227  227 #> [10786,]  212  227  228 #> [10787,]  212  227  228 #> [10788,]  212  227  228 #> [10789,]  212  227  228 #> [10790,]  212  227  228 #> [10791,]  212  227  227 #> [10792,]  212  227  228 #> [10793,]  212  227  228 #> [10794,]  212  227  228 #> [10795,]  212  227  227 #> [10796,]  212  227  228 #> [10797,]  212  227  228 #> [10798,]  211  226  226 #> [10799,]  212  227  228 #> [10800,]  212  227  228 #> [10801,]  214  228  230 #> [10802,]  214  228  230 #> [10803,]  213  228  230 #> [10804,]  213  228  229 #> [10805,]  213  228  230 #> [10806,]  213  228  230 #> [10807,]  214  228  230 #> [10808,]  214  228  230 #> [10809,]  213  228  230 #> [10810,]  213  228  230 #> [10811,]  213  228  230 #> [10812,]  214  228  229 #> [10813,]  214  228  230 #> [10814,]  213  228  229 #> [10815,]  214  228  230 #> [10816,]  214  228  230 #> [10817,]  214  228  230 #> [10818,]  214  228  230 #> [10819,]  214  228  229 #> [10820,]  214  228  230 #> [10821,]  213  228  230 #> [10822,]  214  228  230 #> [10823,]  214  228  230 #> [10824,]  213  228  230 #> [10825,]  213  228  230 #> [10826,]  214  228  230 #> [10827,]  214  228  229 #> [10828,]  213  228  230 #> [10829,]  214  228  230 #> [10830,]  214  228  230 #> [10831,]  213  228  230 #> [10832,]  213  228  230 #> [10833,]  214  228  230 #> [10834,]  213  228  230 #> [10835,]  213  228  230 #> [10836,]  214  228  230 #> [10837,]  214  228  230 #> [10838,]  214  228  229 #> [10839,]  213  228  230 #> [10840,]  213  228  230 #> [10841,]  214  228  229 #> [10842,]  213  228  229 #> [10843,]  214  228  230 #> [10844,]  214  228  230 #> [10845,]  214  228  230 #> [10846,]  214  228  230 #> [10847,]  213  228  230 #> [10848,]  213  228  229 #> [10849,]  214  228  230 #> [10850,]  214  228  230 #> [10851,]  214  228  230 #> [10852,]  213  228  230 #> [10853,]  214  228  230 #> [10854,]  213  228  230 #> [10855,]  214  228  230 #> [10856,]  214  228  230 #> [10857,]  213  228  230 #> [10858,]  214  228  230 #> [10859,]  214  228  230 #> [10860,]  214  228  230 #> [10861,]  214  228  229 #> [10862,]  213  228  230 #> [10863,]  214  228  230 #> [10864,]  214  228  230 #> [10865,]  213  228  230 #> [10866,]  214  228  230 #> [10867,]  213  228  230 #> [10868,]  214  228  230 #> [10869,]  214  228  229 #> [10870,]  213  228  230 #> [10871,]  214  228  230 #> [10872,]  213  228  230 #> [10873,]  213  228  230 #> [10874,]  213  228  229 #> [10875,]  214  228  229 #> [10876,]  213  228  230 #> [10877,]  214  228  230 #> [10878,]  214  228  230 #> [10879,]  213  228  230 #> [10880,]  214  228  230 #> [10881,]  214  228  230 #> [10882,]  213  228  229 #> [10883,]  214  228  230 #> [10884,]  214  228  230 #> [10885,]  214  228  230 #> [10886,]  213  228  230 #> [10887,]  214  228  230 #> [10888,]  213  228  230 #> [10889,]  213  228  230 #> [10890,]  214  228  230 #> [10891,]  213  228  230 #> [10892,]  213  228  229 #> [10893,]  214  228  229 #> [10894,]  213  228  230 #> [10895,]  214  228  230 #> [10896,]  214  228  229 #> [10897,]  214  228  229 #> [10898,]  213  228  230 #> [10899,]  213  228  230 #> [10900,]  214  228  230 #> [10901,]  215  229  231 #> [10902,]  216  230  232 #> [10903,]  215  229  231 #> [10904,]  215  229  231 #> [10905,]  216  230  232 #> [10906,]  215  229  231 #> [10907,]  215  229  231 #> [10908,]  215  229  231 #> [10909,]  216  230  232 #> [10910,]  216  230  232 #> [10911,]  215  229  231 #> [10912,]  216  230  232 #> [10913,]  216  230  232 #> [10914,]  215  229  231 #> [10915,]  215  229  231 #> [10916,]  215  229  231 #> [10917,]  216  230  232 #> [10918,]  216  230  232 #> [10919,]  215  229  231 #> [10920,]  216  230  232 #> [10921,]  216  230  232 #> [10922,]  216  230  232 #> [10923,]  216  230  232 #> [10924,]  216  230  232 #> [10925,]  215  229  231 #> [10926,]  215  229  231 #> [10927,]  216  230  232 #> [10928,]  215  229  231 #> [10929,]  216  230  232 #> [10930,]  216  230  232 #> [10931,]  216  230  232 #> [10932,]  216  230  232 #> [10933,]  216  230  232 #> [10934,]  215  229  231 #> [10935,]  215  229  231 #> [10936,]  216  230  232 #> [10937,]  215  229  231 #> [10938,]  215  229  231 #> [10939,]  215  229  231 #> [10940,]  216  230  232 #> [10941,]  215  229  231 #> [10942,]  215  229  231 #> [10943,]  215  229  231 #> [10944,]  216  230  232 #> [10945,]  215  229  231 #> [10946,]  215  229  231 #> [10947,]  215  229  231 #> [10948,]  215  229  231 #> [10949,]  215  229  231 #> [10950,]  216  230  232 #> [10951,]  215  229  231 #> [10952,]  215  229  231 #> [10953,]  216  230  232 #> [10954,]  216  230  232 #> [10955,]  215  229  231 #> [10956,]  215  229  231 #> [10957,]  215  229  231 #> [10958,]  215  229  231 #> [10959,]  215  229  231 #> [10960,]  216  230  232 #> [10961,]  216  230  232 #> [10962,]  215  229  231 #> [10963,]  216  230  232 #> [10964,]  215  229  231 #> [10965,]  215  229  231 #> [10966,]  215  229  231 #> [10967,]  215  229  231 #> [10968,]  215  229  231 #> [10969,]  215  229  231 #> [10970,]  216  230  232 #> [10971,]  215  229  231 #> [10972,]  215  229  231 #> [10973,]  215  229  231 #> [10974,]  215  229  231 #> [10975,]  216  230  232 #> [10976,]  215  229  231 #> [10977,]  215  229  231 #> [10978,]  215  229  231 #> [10979,]  215  229  231 #> [10980,]  216  230  232 #> [10981,]  216  230  232 #> [10982,]  215  229  231 #> [10983,]  216  230  232 #> [10984,]  216  230  232 #> [10985,]  215  229  231 #> [10986,]  216  230  232 #> [10987,]  216  230  232 #> [10988,]  216  230  232 #> [10989,]  215  229  231 #> [10990,]  215  229  231 #> [10991,]  215  229  231 #> [10992,]  216  230  232 #> [10993,]  216  230  232 #> [10994,]  215  229  231 #> [10995,]  216  230  232 #> [10996,]  215  229  231 #> [10997,]  215  229  231 #> [10998,]  215  229  231 #> [10999,]  215  229  231 #> [11000,]  215  229  231 #> [11001,]  218  232  234 #> [11002,]  218  232  234 #> [11003,]  218  232  234 #> [11004,]  217  231  233 #> [11005,]  218  232  234 #> [11006,]  218  232  234 #> [11007,]  218  232  234 #> [11008,]  217  231  233 #> [11009,]  217  231  233 #> [11010,]  217  231  233 #> [11011,]  218  232  234 #> [11012,]  218  232  234 #> [11013,]  218  232  234 #> [11014,]  218  232  234 #> [11015,]  218  232  234 #> [11016,]  218  232  234 #> [11017,]  218  232  234 #> [11018,]  218  232  234 #> [11019,]  218  232  234 #> [11020,]  218  232  234 #> [11021,]  218  232  234 #> [11022,]  218  232  234 #> [11023,]  218  232  234 #> [11024,]  218  232  234 #> [11025,]  218  232  234 #> [11026,]  218  232  234 #> [11027,]  218  232  234 #> [11028,]  218  232  234 #> [11029,]  218  232  234 #> [11030,]  218  232  234 #> [11031,]  218  232  234 #> [11032,]  218  232  234 #> [11033,]  218  232  234 #> [11034,]  218  232  234 #> [11035,]  218  232  234 #> [11036,]  218  232  234 #> [11037,]  218  232  234 #> [11038,]  218  232  234 #> [11039,]  218  232  234 #> [11040,]  218  232  234 #> [11041,]  218  232  234 #> [11042,]  218  232  234 #> [11043,]  218  232  234 #> [11044,]  218  232  234 #> [11045,]  218  232  234 #> [11046,]  218  232  234 #> [11047,]  218  232  234 #> [11048,]  218  232  234 #> [11049,]  218  232  234 #> [11050,]  218  232  234 #> [11051,]  218  232  234 #> [11052,]  218  232  234 #> [11053,]  218  232  234 #> [11054,]  218  232  234 #> [11055,]  218  232  234 #> [11056,]  218  232  234 #> [11057,]  218  232  234 #> [11058,]  218  232  234 #> [11059,]  218  232  234 #> [11060,]  218  232  234 #> [11061,]  218  232  234 #> [11062,]  218  232  234 #> [11063,]  218  232  234 #> [11064,]  218  232  234 #> [11065,]  218  232  234 #> [11066,]  218  232  234 #> [11067,]  218  232  234 #> [11068,]  218  232  234 #> [11069,]  218  232  234 #> [11070,]  218  232  234 #> [11071,]  218  232  234 #> [11072,]  218  232  234 #> [11073,]  218  232  234 #> [11074,]  218  232  234 #> [11075,]  218  232  234 #> [11076,]  218  232  234 #> [11077,]  218  232  234 #> [11078,]  218  232  234 #> [11079,]  218  232  234 #> [11080,]  218  232  234 #> [11081,]  218  232  234 #> [11082,]  218  232  234 #> [11083,]  218  232  234 #> [11084,]  218  232  234 #> [11085,]  218  232  234 #> [11086,]  218  232  234 #> [11087,]  218  232  234 #> [11088,]  218  232  234 #> [11089,]  218  232  234 #> [11090,]  218  232  234 #> [11091,]  218  232  234 #> [11092,]  218  232  234 #> [11093,]  218  232  234 #> [11094,]  218  232  234 #> [11095,]  217  231  233 #> [11096,]  218  232  234 #> [11097,]  218  232  234 #> [11098,]  218  232  234 #> [11099,]  218  232  234 #> [11100,]  218  232  234 #> [11101,]  219  233  235 #> [11102,]  219  233  235 #> [11103,]  220  234  236 #> [11104,]  221  234  236 #> [11105,]  221  234  236 #> [11106,]  219  233  235 #> [11107,]  219  233  235 #> [11108,]  220  234  236 #> [11109,]  221  234  236 #> [11110,]  221  234  236 #> [11111,]  219  233  235 #> [11112,]  221  234  236 #> [11113,]  219  233  235 #> [11114,]  219  233  235 #> [11115,]  219  233  235 #> [11116,]  219  233  235 #> [11117,]  219  233  235 #> [11118,]  221  234  236 #> [11119,]  219  233  235 #> [11120,]  220  234  236 #> [11121,]  219  233  235 #> [11122,]  219  233  235 #> [11123,]  221  234  236 #> [11124,]  220  234  236 #> [11125,]  220  234  236 #> [11126,]  219  233  235 #> [11127,]  219  233  235 #> [11128,]  221  234  236 #> [11129,]  219  233  235 #> [11130,]  221  234  236 #> [11131,]  221  234  236 #> [11132,]  221  234  236 #> [11133,]  219  233  235 #> [11134,]  221  234  236 #> [11135,]  219  233  235 #> [11136,]  221  234  236 #> [11137,]  219  233  235 #> [11138,]  221  234  236 #> [11139,]  220  234  236 #> [11140,]  219  233  235 #> [11141,]  219  233  235 #> [11142,]  221  234  236 #> [11143,]  220  234  236 #> [11144,]  219  233  235 #> [11145,]  220  234  236 #> [11146,]  220  234  236 #> [11147,]  219  233  235 #> [11148,]  221  234  236 #> [11149,]  220  234  236 #> [11150,]  219  233  235 #> [11151,]  220  234  236 #> [11152,]  219  233  235 #> [11153,]  220  234  236 #> [11154,]  220  234  236 #> [11155,]  219  233  235 #> [11156,]  220  234  236 #> [11157,]  221  234  236 #> [11158,]  219  233  235 #> [11159,]  219  233  235 #> [11160,]  221  234  236 #> [11161,]  219  233  235 #> [11162,]  221  234  236 #> [11163,]  220  234  236 #> [11164,]  221  234  236 #> [11165,]  220  234  236 #> [11166,]  220  234  236 #> [11167,]  221  234  236 #> [11168,]  219  233  235 #> [11169,]  219  233  235 #> [11170,]  219  233  235 #> [11171,]  219  233  235 #> [11172,]  220  234  236 #> [11173,]  219  233  235 #> [11174,]  219  233  235 #> [11175,]  219  233  235 #> [11176,]  219  233  235 #> [11177,]  219  233  235 #> [11178,]  220  234  236 #> [11179,]  219  233  235 #> [11180,]  221  234  236 #> [11181,]  219  233  235 #> [11182,]  221  234  236 #> [11183,]  219  233  235 #> [11184,]  219  233  235 #> [11185,]  221  234  236 #> [11186,]  219  233  235 #> [11187,]  219  233  235 #> [11188,]  221  234  236 #> [11189,]  220  234  236 #> [11190,]  219  233  235 #> [11191,]  221  234  236 #> [11192,]  219  233  235 #> [11193,]  219  233  235 #> [11194,]  219  233  235 #> [11195,]  221  234  236 #> [11196,]  219  233  235 #> [11197,]  219  233  235 #> [11198,]  219  233  235 #> [11199,]  219  233  235 #> [11200,]  219  233  235 #> [11201,]  222  236  237 #> [11202,]  223  236  237 #> [11203,]  223  235  238 #> [11204,]  222  236  237 #> [11205,]  223  236  237 #> [11206,]  223  236  237 #> [11207,]  223  235  238 #> [11208,]  222  235  238 #> [11209,]  222  236  237 #> [11210,]  223  236  237 #> [11211,]  222  236  237 #> [11212,]  223  236  237 #> [11213,]  222  236  237 #> [11214,]  222  236  237 #> [11215,]  222  236  237 #> [11216,]  222  235  238 #> [11217,]  222  236  237 #> [11218,]  223  236  237 #> [11219,]  223  236  237 #> [11220,]  223  235  238 #> [11221,]  222  236  237 #> [11222,]  222  235  238 #> [11223,]  223  236  237 #> [11224,]  222  235  238 #> [11225,]  223  235  238 #> [11226,]  223  236  237 #> [11227,]  222  236  237 #> [11228,]  223  236  237 #> [11229,]  223  236  237 #> [11230,]  222  236  237 #> [11231,]  223  236  237 #> [11232,]  223  236  237 #> [11233,]  223  236  237 #> [11234,]  223  236  237 #> [11235,]  222  236  237 #> [11236,]  223  236  237 #> [11237,]  222  236  237 #> [11238,]  222  236  237 #> [11239,]  223  235  238 #> [11240,]  223  235  238 #> [11241,]  222  236  237 #> [11242,]  223  236  237 #> [11243,]  222  236  237 #> [11244,]  222  235  238 #> [11245,]  222  236  237 #> [11246,]  222  235  238 #> [11247,]  223  236  237 #> [11248,]  223  236  237 #> [11249,]  222  235  238 #> [11250,]  223  235  238 #> [11251,]  222  236  237 #> [11252,]  222  236  237 #> [11253,]  223  235  238 #> [11254,]  222  236  237 #> [11255,]  222  235  238 #> [11256,]  223  235  238 #> [11257,]  223  236  237 #> [11258,]  222  236  237 #> [11259,]  223  235  238 #> [11260,]  223  236  237 #> [11261,]  223  236  237 #> [11262,]  222  236  237 #> [11263,]  223  236  237 #> [11264,]  223  236  237 #> [11265,]  223  235  238 #> [11266,]  222  235  238 #> [11267,]  222  236  237 #> [11268,]  222  236  237 #> [11269,]  222  236  237 #> [11270,]  223  235  238 #> [11271,]  223  236  237 #> [11272,]  223  235  238 #> [11273,]  223  236  237 #> [11274,]  222  236  237 #> [11275,]  223  236  237 #> [11276,]  223  236  237 #> [11277,]  223  236  237 #> [11278,]  223  236  237 #> [11279,]  222  236  237 #> [11280,]  222  236  237 #> [11281,]  222  236  237 #> [11282,]  222  236  237 #> [11283,]  222  236  237 #> [11284,]  223  235  238 #> [11285,]  222  236  237 #> [11286,]  223  235  238 #> [11287,]  222  236  237 #> [11288,]  222  236  237 #> [11289,]  222  236  237 #> [11290,]  222  235  238 #> [11291,]  222  236  237 #> [11292,]  222  236  237 #> [11293,]  223  236  237 #> [11294,]  223  236  237 #> [11295,]  222  236  237 #> [11296,]  222  236  237 #> [11297,]  223  236  237 #> [11298,]  223  235  238 #> [11299,]  222  236  237 #> [11300,]  223  235  238 #> [11301,]  225  238  240 #> [11302,]  225  238  239 #> [11303,]  224  237  239 #> [11304,]  224  237  241 #> [11305,]  224  237  240 #> [11306,]  225  238  239 #> [11307,]  224  237  239 #> [11308,]  224  237  240 #> [11309,]  224  237  241 #> [11310,]  224  237  240 #> [11311,]  225  238  241 #> [11312,]  224  237  239 #> [11313,]  225  238  240 #> [11314,]  225  238  241 #> [11315,]  225  238  241 #> [11316,]  225  238  240 #> [11317,]  225  238  240 #> [11318,]  224  237  239 #> [11319,]  225  238  239 #> [11320,]  224  237  239 #> [11321,]  225  238  241 #> [11322,]  225  238  240 #> [11323,]  224  237  239 #> [11324,]  224  237  240 #> [11325,]  224  237  239 #> [11326,]  225  238  241 #> [11327,]  225  238  241 #> [11328,]  224  237  239 #> [11329,]  225  238  240 #> [11330,]  224  237  241 #> [11331,]  224  237  239 #> [11332,]  224  237  239 #> [11333,]  225  238  239 #> [11334,]  224  237  239 #> [11335,]  225  238  240 #> [11336,]  224  237  241 #> [11337,]  225  238  240 #> [11338,]  224  237  241 #> [11339,]  224  237  240 #> [11340,]  224  237  239 #> [11341,]  225  238  241 #> [11342,]  224  237  239 #> [11343,]  224  237  240 #> [11344,]  225  238  240 #> [11345,]  224  237  240 #> [11346,]  224  237  240 #> [11347,]  225  238  240 #> [11348,]  224  237  239 #> [11349,]  224  237  240 #> [11350,]  225  238  240 #> [11351,]  224  237  240 #> [11352,]  225  238  240 #> [11353,]  224  237  240 #> [11354,]  224  237  240 #> [11355,]  225  238  240 #> [11356,]  224  237  239 #> [11357,]  224  237  240 #> [11358,]  225  238  241 #> [11359,]  225  238  240 #> [11360,]  224  237  239 #> [11361,]  225  238  241 #> [11362,]  224  237  240 #> [11363,]  224  237  240 #> [11364,]  224  237  239 #> [11365,]  224  237  239 #> [11366,]  224  237  240 #> [11367,]  224  237  240 #> [11368,]  225  238  241 #> [11369,]  225  238  241 #> [11370,]  225  238  239 #> [11371,]  225  238  239 #> [11372,]  224  237  240 #> [11373,]  225  238  239 #> [11374,]  225  238  241 #> [11375,]  225  238  241 #> [11376,]  225  238  240 #> [11377,]  225  238  240 #> [11378,]  224  237  239 #> [11379,]  225  238  240 #> [11380,]  224  237  240 #> [11381,]  225  238  240 #> [11382,]  224  237  241 #> [11383,]  225  238  240 #> [11384,]  225  238  239 #> [11385,]  224  237  241 #> [11386,]  225  238  240 #> [11387,]  225  238  240 #> [11388,]  224  237  240 #> [11389,]  224  237  240 #> [11390,]  225  238  240 #> [11391,]  224  237  240 #> [11392,]  225  238  241 #> [11393,]  225  238  239 #> [11394,]  225  238  240 #> [11395,]  224  237  240 #> [11396,]  225  238  241 #> [11397,]  225  238  239 #> [11398,]  225  238  239 #> [11399,]  225  238  240 #> [11400,]  225  238  239 #> [11401,]  226  239  243 #> [11402,]  226  239  243 #> [11403,]  226  239  243 #> [11404,]  226  239  243 #> [11405,]  226  239  243 #> [11406,]  226  239  243 #> [11407,]  226  239  243 #> [11408,]  227  240  243 #> [11409,]  227  240  243 #> [11410,]  226  239  243 #> [11411,]  226  239  243 #> [11412,]  226  239  243 #> [11413,]  226  239  243 #> [11414,]  226  239  243 #> [11415,]  226  239  242 #> [11416,]  226  239  243 #> [11417,]  226  239  242 #> [11418,]  226  239  243 #> [11419,]  226  239  243 #> [11420,]  226  239  243 #> [11421,]  226  239  243 #> [11422,]  226  239  243 #> [11423,]  226  239  243 #> [11424,]  226  239  243 #> [11425,]  226  239  243 #> [11426,]  227  240  243 #> [11427,]  226  239  243 #> [11428,]  226  239  243 #> [11429,]  226  239  243 #> [11430,]  226  239  243 #> [11431,]  226  239  242 #> [11432,]  226  239  243 #> [11433,]  226  239  243 #> [11434,]  226  239  242 #> [11435,]  226  239  243 #> [11436,]  226  239  243 #> [11437,]  226  239  242 #> [11438,]  226  239  243 #> [11439,]  226  239  243 #> [11440,]  226  239  243 #> [11441,]  226  239  243 #> [11442,]  226  239  242 #> [11443,]  227  240  242 #> [11444,]  226  239  242 #> [11445,]  226  239  243 #> [11446,]  226  239  243 #> [11447,]  226  239  243 #> [11448,]  226  239  243 #> [11449,]  226  239  243 #> [11450,]  226  239  243 #> [11451,]  226  239  243 #> [11452,]  226  239  243 #> [11453,]  226  239  243 #> [11454,]  226  239  243 #> [11455,]  226  239  243 #> [11456,]  227  240  243 #> [11457,]  226  239  243 #> [11458,]  226  239  243 #> [11459,]  226  239  243 #> [11460,]  226  239  243 #> [11461,]  227  240  243 #> [11462,]  226  239  243 #> [11463,]  226  239  242 #> [11464,]  227  240  243 #> [11465,]  226  239  243 #> [11466,]  226  239  243 #> [11467,]  226  239  243 #> [11468,]  226  239  243 #> [11469,]  226  239  243 #> [11470,]  226  239  243 #> [11471,]  226  239  243 #> [11472,]  226  239  243 #> [11473,]  226  239  243 #> [11474,]  226  239  243 #> [11475,]  226  239  242 #> [11476,]  227  240  243 #> [11477,]  226  239  243 #> [11478,]  226  239  242 #> [11479,]  226  239  242 #> [11480,]  226  239  243 #> [11481,]  226  239  243 #> [11482,]  226  239  243 #> [11483,]  226  239  243 #> [11484,]  226  239  243 #> [11485,]  226  239  243 #> [11486,]  226  239  243 #> [11487,]  226  239  243 #> [11488,]  226  239  243 #> [11489,]  226  239  243 #> [11490,]  226  239  243 #> [11491,]  226  239  243 #> [11492,]  226  239  243 #> [11493,]  226  239  243 #> [11494,]  227  240  243 #> [11495,]  226  239  242 #> [11496,]  226  239  243 #> [11497,]  226  239  243 #> [11498,]  226  239  243 #> [11499,]  226  239  243 #> [11500,]  226  239  242 #> [11501,]  228  241  244 #> [11502,]  228  241  244 #> [11503,]  229  242  244 #> [11504,]  228  241  244 #> [11505,]  228  241  244 #> [11506,]  229  242  244 #> [11507,]  228  241  244 #> [11508,]  228  241  244 #> [11509,]  228  241  244 #> [11510,]  228  241  244 #> [11511,]  228  241  244 #> [11512,]  229  242  244 #> [11513,]  228  241  244 #> [11514,]  228  241  244 #> [11515,]  228  241  244 #> [11516,]  228  241  244 #> [11517,]  228  241  244 #> [11518,]  228  241  244 #> [11519,]  229  242  244 #> [11520,]  229  242  244 #> [11521,]  228  241  244 #> [11522,]  228  241  244 #> [11523,]  228  241  244 #> [11524,]  228  241  244 #> [11525,]  229  242  244 #> [11526,]  228  241  244 #> [11527,]  228  241  244 #> [11528,]  229  242  244 #> [11529,]  228  241  244 #> [11530,]  228  241  244 #> [11531,]  228  241  244 #> [11532,]  228  241  244 #> [11533,]  229  242  244 #> [11534,]  229  242  244 #> [11535,]  228  241  244 #> [11536,]  228  241  244 #> [11537,]  228  241  244 #> [11538,]  228  241  244 #> [11539,]  228  241  244 #> [11540,]  228  241  244 #> [11541,]  228  241  244 #> [11542,]  228  241  244 #> [11543,]  228  241  244 #> [11544,]  228  241  244 #> [11545,]  228  241  244 #> [11546,]  228  241  244 #> [11547,]  228  241  244 #> [11548,]  228  241  244 #> [11549,]  228  241  244 #> [11550,]  228  241  244 #> [11551,]  228  241  244 #> [11552,]  228  241  244 #> [11553,]  228  241  244 #> [11554,]  228  241  244 #> [11555,]  228  241  244 #> [11556,]  228  241  244 #> [11557,]  228  241  244 #> [11558,]  228  241  244 #> [11559,]  228  241  244 #> [11560,]  229  242  244 #> [11561,]  228  241  244 #> [11562,]  228  241  244 #> [11563,]  228  241  244 #> [11564,]  228  241  244 #> [11565,]  229  242  244 #> [11566,]  228  241  244 #> [11567,]  228  241  244 #> [11568,]  228  241  244 #> [11569,]  228  241  244 #> [11570,]  229  242  244 #> [11571,]  228  241  244 #> [11572,]  228  241  244 #> [11573,]  229  242  244 #> [11574,]  228  241  244 #> [11575,]  228  241  244 #> [11576,]  228  241  244 #> [11577,]  228  241  244 #> [11578,]  228  241  244 #> [11579,]  228  241  244 #> [11580,]  228  241  244 #> [11581,]  228  241  244 #> [11582,]  228  241  244 #> [11583,]  228  241  244 #> [11584,]  228  241  244 #> [11585,]  228  241  244 #> [11586,]  228  241  244 #> [11587,]  228  241  244 #> [11588,]  228  241  244 #> [11589,]  228  241  244 #> [11590,]  228  241  244 #> [11591,]  228  241  244 #> [11592,]  228  241  244 #> [11593,]  229  242  244 #> [11594,]  228  241  244 #> [11595,]  228  241  244 #> [11596,]  228  241  244 #> [11597,]  229  242  244 #> [11598,]  229  242  244 #> [11599,]  228  241  244 #> [11600,]  228  241  244 #> [11601,]  231  243  246 #> [11602,]  231  243  245 #> [11603,]  230  244  245 #> [11604,]  230  244  245 #> [11605,]  231  243  246 #> [11606,]  231  243  245 #> [11607,]  230  244  245 #> [11608,]  230  244  245 #> [11609,]  231  243  245 #> [11610,]  230  244  246 #> [11611,]  231  243  246 #> [11612,]  230  244  246 #> [11613,]  231  243  245 #> [11614,]  230  244  246 #> [11615,]  231  243  246 #> [11616,]  230  244  245 #> [11617,]  231  243  246 #> [11618,]  231  243  246 #> [11619,]  231  243  245 #> [11620,]  231  243  245 #> [11621,]  231  243  245 #> [11622,]  231  243  246 #> [11623,]  230  244  245 #> [11624,]  231  243  245 #> [11625,]  230  244  245 #> [11626,]  230  244  246 #> [11627,]  231  243  246 #> [11628,]  231  243  245 #> [11629,]  231  243  245 #> [11630,]  230  244  245 #> [11631,]  230  244  246 #> [11632,]  230  244  246 #> [11633,]  231  243  245 #> [11634,]  230  244  245 #> [11635,]  230  244  245 #> [11636,]  231  243  245 #> [11637,]  230  244  245 #> [11638,]  231  243  246 #> [11639,]  231  243  245 #> [11640,]  230  244  245 #> [11641,]  231  243  245 #> [11642,]  231  243  245 #> [11643,]  231  243  246 #> [11644,]  230  244  245 #> [11645,]  230  244  245 #> [11646,]  230  244  245 #> [11647,]  230  244  246 #> [11648,]  231  243  245 #> [11649,]  230  244  245 #> [11650,]  231  243  245 #> [11651,]  231  243  245 #> [11652,]  230  244  246 #> [11653,]  231  243  245 #> [11654,]  231  243  245 #> [11655,]  230  244  245 #> [11656,]  231  243  245 #> [11657,]  230  244  245 #> [11658,]  231  243  246 #> [11659,]  230  244  246 #> [11660,]  230  244  245 #> [11661,]  231  243  246 #> [11662,]  231  243  245 #> [11663,]  231  243  245 #> [11664,]  231  243  245 #> [11665,]  231  243  245 #> [11666,]  231  243  246 #> [11667,]  230  244  245 #> [11668,]  230  244  245 #> [11669,]  230  244  245 #> [11670,]  231  243  246 #> [11671,]  230  244  246 #> [11672,]  230  244  245 #> [11673,]  231  243  245 #> [11674,]  230  244  245 #> [11675,]  230  244  246 #> [11676,]  230  244  245 #> [11677,]  231  243  246 #> [11678,]  230  244  245 #> [11679,]  231  243  246 #> [11680,]  230  244  245 #> [11681,]  231  243  245 #> [11682,]  231  243  245 #> [11683,]  231  243  245 #> [11684,]  231  243  245 #> [11685,]  231  243  245 #> [11686,]  230  244  245 #> [11687,]  231  243  246 #> [11688,]  230  244  245 #> [11689,]  231  243  245 #> [11690,]  231  243  246 #> [11691,]  231  243  246 #> [11692,]  230  244  246 #> [11693,]  231  243  245 #> [11694,]  231  243  245 #> [11695,]  230  244  246 #> [11696,]  230  244  245 #> [11697,]  230  244  245 #> [11698,]  230  244  245 #> [11699,]  231  243  245 #> [11700,]  231  243  246 #> [11701,]  232  245  247 #> [11702,]  233  246  247 #> [11703,]  232  245  247 #> [11704,]  232  245  247 #> [11705,]  233  246  247 #> [11706,]  232  245  247 #> [11707,]  233  246  247 #> [11708,]  232  245  247 #> [11709,]  233  246  247 #> [11710,]  233  246  247 #> [11711,]  232  245  247 #> [11712,]  233  246  247 #> [11713,]  233  246  247 #> [11714,]  232  245  247 #> [11715,]  233  246  247 #> [11716,]  232  245  247 #> [11717,]  233  246  247 #> [11718,]  233  246  247 #> [11719,]  232  245  247 #> [11720,]  233  246  247 #> [11721,]  233  246  247 #> [11722,]  233  246  247 #> [11723,]  233  246  247 #> [11724,]  233  246  247 #> [11725,]  233  246  247 #> [11726,]  232  245  247 #> [11727,]  233  246  247 #> [11728,]  232  245  247 #> [11729,]  233  246  247 #> [11730,]  233  246  247 #> [11731,]  233  246  247 #> [11732,]  233  246  247 #> [11733,]  233  246  247 #> [11734,]  232  245  247 #> [11735,]  232  245  247 #> [11736,]  233  246  247 #> [11737,]  232  245  247 #> [11738,]  232  245  247 #> [11739,]  233  246  247 #> [11740,]  233  246  247 #> [11741,]  233  246  247 #> [11742,]  232  245  247 #> [11743,]  233  246  247 #> [11744,]  233  246  247 #> [11745,]  232  245  247 #> [11746,]  233  246  247 #> [11747,]  233  246  247 #> [11748,]  233  246  247 #> [11749,]  232  245  247 #> [11750,]  233  246  247 #> [11751,]  233  246  247 #> [11752,]  232  245  247 #> [11753,]  233  246  247 #> [11754,]  233  246  247 #> [11755,]  233  246  247 #> [11756,]  232  245  247 #> [11757,]  233  246  247 #> [11758,]  233  246  247 #> [11759,]  232  245  247 #> [11760,]  233  246  247 #> [11761,]  233  246  247 #> [11762,]  232  245  247 #> [11763,]  233  246  247 #> [11764,]  232  245  247 #> [11765,]  232  245  247 #> [11766,]  233  246  247 #> [11767,]  233  246  247 #> [11768,]  232  245  247 #> [11769,]  232  245  247 #> [11770,]  233  246  247 #> [11771,]  233  246  247 #> [11772,]  232  245  247 #> [11773,]  232  245  247 #> [11774,]  233  246  247 #> [11775,]  233  246  247 #> [11776,]  233  246  247 #> [11777,]  232  245  247 #> [11778,]  233  246  247 #> [11779,]  232  245  247 #> [11780,]  233  246  247 #> [11781,]  233  246  247 #> [11782,]  233  246  247 #> [11783,]  233  246  247 #> [11784,]  233  246  247 #> [11785,]  233  246  247 #> [11786,]  233  246  247 #> [11787,]  233  246  247 #> [11788,]  233  246  247 #> [11789,]  232  245  247 #> [11790,]  233  246  247 #> [11791,]  232  245  247 #> [11792,]  233  246  247 #> [11793,]  233  246  247 #> [11794,]  232  245  247 #> [11795,]  233  246  247 #> [11796,]  232  245  247 #> [11797,]  232  245  247 #> [11798,]  233  246  247 #> [11799,]  233  246  247 #> [11800,]  232  245  247 #> [11801,]  235  248  249 #> [11802,]  234  247  248 #> [11803,]  235  248  249 #> [11804,]  235  248  249 #> [11805,]  234  247  248 #> [11806,]  234  247  248 #> [11807,]  235  248  249 #> [11808,]  234  247  248 #> [11809,]  235  248  249 #> [11810,]  235  248  249 #> [11811,]  234  247  248 #> [11812,]  234  247  248 #> [11813,]  235  248  249 #> [11814,]  235  248  249 #> [11815,]  234  247  248 #> [11816,]  235  248  249 #> [11817,]  234  247  248 #> [11818,]  234  247  248 #> [11819,]  234  247  248 #> [11820,]  235  248  249 #> [11821,]  234  247  248 #> [11822,]  235  248  249 #> [11823,]  234  247  248 #> [11824,]  235  248  249 #> [11825,]  235  248  249 #> [11826,]  234  247  248 #> [11827,]  235  248  249 #> [11828,]  235  248  249 #> [11829,]  234  247  248 #> [11830,]  234  247  248 #> [11831,]  234  247  248 #> [11832,]  234  247  248 #> [11833,]  234  247  248 #> [11834,]  234  247  248 #> [11835,]  234  247  248 #> [11836,]  235  248  249 #> [11837,]  234  247  248 #> [11838,]  234  247  248 #> [11839,]  235  248  249 #> [11840,]  234  247  248 #> [11841,]  235  248  249 #> [11842,]  234  247  248 #> [11843,]  234  247  248 #> [11844,]  234  247  248 #> [11845,]  235  248  249 #> [11846,]  234  247  248 #> [11847,]  234  247  248 #> [11848,]  234  247  248 #> [11849,]  235  248  249 #> [11850,]  235  248  249 #> [11851,]  234  247  248 #> [11852,]  235  248  249 #> [11853,]  235  248  249 #> [11854,]  235  248  249 #> [11855,]  235  248  249 #> [11856,]  234  247  248 #> [11857,]  235  248  249 #> [11858,]  235  248  249 #> [11859,]  235  248  249 #> [11860,]  234  247  248 #> [11861,]  234  247  248 #> [11862,]  234  247  248 #> [11863,]  234  247  248 #> [11864,]  234  247  248 #> [11865,]  234  247  248 #> [11866,]  234  247  248 #> [11867,]  235  248  249 #> [11868,]  234  247  248 #> [11869,]  234  247  248 #> [11870,]  234  247  248 #> [11871,]  235  248  249 #> [11872,]  235  248  249 #> [11873,]  235  248  249 #> [11874,]  235  248  249 #> [11875,]  234  247  248 #> [11876,]  235  248  249 #> [11877,]  234  247  248 #> [11878,]  234  247  248 #> [11879,]  234  247  248 #> [11880,]  235  248  249 #> [11881,]  234  247  248 #> [11882,]  234  247  248 #> [11883,]  234  247  248 #> [11884,]  234  247  248 #> [11885,]  235  248  249 #> [11886,]  235  248  249 #> [11887,]  235  248  249 #> [11888,]  235  248  249 #> [11889,]  234  247  248 #> [11890,]  235  248  249 #> [11891,]  235  248  249 #> [11892,]  234  247  248 #> [11893,]  234  247  248 #> [11894,]  234  247  248 #> [11895,]  234  247  248 #> [11896,]  234  247  248 #> [11897,]  234  247  248 #> [11898,]  234  247  248 #> [11899,]  234  247  248 #> [11900,]  234  247  248 #> [11901,]  237  250  251 #> [11902,]  237  250  251 #> [11903,]  237  250  251 #> [11904,]  237  250  251 #> [11905,]  237  250  251 #> [11906,]  237  250  250 #> [11907,]  237  250  250 #> [11908,]  237  250  251 #> [11909,]  237  250  251 #> [11910,]  237  250  251 #> [11911,]  237  250  251 #> [11912,]  237  250  251 #> [11913,]  237  250  251 #> [11914,]  237  250  251 #> [11915,]  236  249  251 #> [11916,]  237  250  251 #> [11917,]  236  249  251 #> [11918,]  237  250  251 #> [11919,]  237  250  251 #> [11920,]  237  250  250 #> [11921,]  237  250  250 #> [11922,]  237  250  251 #> [11923,]  237  250  251 #> [11924,]  237  250  251 #> [11925,]  237  250  250 #> [11926,]  237  250  251 #> [11927,]  237  250  251 #> [11928,]  237  250  251 #> [11929,]  237  250  251 #> [11930,]  237  250  251 #> [11931,]  236  249  251 #> [11932,]  237  250  251 #> [11933,]  237  250  251 #> [11934,]  236  249  251 #> [11935,]  237  250  250 #> [11936,]  237  250  251 #> [11937,]  236  249  250 #> [11938,]  237  250  251 #> [11939,]  237  250  251 #> [11940,]  237  250  251 #> [11941,]  237  250  251 #> [11942,]  236  249  250 #> [11943,]  236  249  251 #> [11944,]  236  249  250 #> [11945,]  237  250  251 #> [11946,]  237  250  251 #> [11947,]  237  250  251 #> [11948,]  236  249  251 #> [11949,]  237  250  251 #> [11950,]  237  250  251 #> [11951,]  237  250  251 #> [11952,]  237  250  251 #> [11953,]  237  250  250 #> [11954,]  237  250  251 #> [11955,]  237  250  251 #> [11956,]  237  250  250 #> [11957,]  237  250  250 #> [11958,]  237  250  251 #> [11959,]  237  250  251 #> [11960,]  237  250  251 #> [11961,]  237  250  251 #> [11962,]  237  250  251 #> [11963,]  236  249  251 #> [11964,]  237  250  251 #> [11965,]  237  250  250 #> [11966,]  237  250  251 #> [11967,]  237  250  251 #> [11968,]  237  250  251 #> [11969,]  237  250  251 #> [11970,]  236  249  251 #> [11971,]  237  250  251 #> [11972,]  237  250  251 #> [11973,]  237  250  250 #> [11974,]  237  250  250 #> [11975,]  236  249  251 #> [11976,]  237  250  251 #> [11977,]  237  250  251 #> [11978,]  236  249  251 #> [11979,]  236  249  251 #> [11980,]  237  250  250 #> [11981,]  237  250  251 #> [11982,]  237  250  250 #> [11983,]  237  250  251 #> [11984,]  237  250  250 #> [11985,]  237  250  250 #> [11986,]  237  250  250 #> [11987,]  237  250  251 #> [11988,]  237  250  251 #> [11989,]  237  250  250 #> [11990,]  237  250  251 #> [11991,]  237  250  251 #> [11992,]  237  250  251 #> [11993,]  237  250  251 #> [11994,]  236  249  250 #> [11995,]  236  249  251 #> [11996,]  237  250  251 #> [11997,]  237  250  251 #> [11998,]  237  250  251 #> [11999,]  237  250  250 #> [12000,]  236  249  251 #> [12001,]  239  252  253 #> [12002,]  238  251  252 #> [12003,]  238  251  252 #> [12004,]  238  251  252 #> [12005,]  239  252  253 #> [12006,]  238  251  252 #> [12007,]  238  251  252 #> [12008,]  238  251  252 #> [12009,]  238  251  252 #> [12010,]  238  251  252 #> [12011,]  238  251  252 #> [12012,]  238  251  252 #> [12013,]  238  251  252 #> [12014,]  239  252  253 #> [12015,]  239  252  253 #> [12016,]  238  251  252 #> [12017,]  238  251  252 #> [12018,]  239  252  253 #> [12019,]  238  251  252 #> [12020,]  238  251  252 #> [12021,]  238  251  252 #> [12022,]  238  251  252 #> [12023,]  238  251  252 #> [12024,]  238  251  252 #> [12025,]  238  251  252 #> [12026,]  238  251  252 #> [12027,]  239  252  253 #> [12028,]  238  251  252 #> [12029,]  238  251  252 #> [12030,]  238  251  252 #> [12031,]  238  251  252 #> [12032,]  239  252  253 #> [12033,]  238  251  252 #> [12034,]  238  251  252 #> [12035,]  238  251  252 #> [12036,]  238  251  252 #> [12037,]  238  251  252 #> [12038,]  238  251  252 #> [12039,]  238  251  252 #> [12040,]  238  251  252 #> [12041,]  238  251  252 #> [12042,]  238  251  252 #> [12043,]  239  252  253 #> [12044,]  238  251  252 #> [12045,]  238  251  252 #> [12046,]  238  251  252 #> [12047,]  238  251  252 #> [12048,]  238  251  252 #> [12049,]  238  251  252 #> [12050,]  238  251  252 #> [12051,]  238  251  252 #> [12052,]  238  251  252 #> [12053,]  238  251  252 #> [12054,]  238  251  252 #> [12055,]  238  251  252 #> [12056,]  238  251  252 #> [12057,]  238  251  252 #> [12058,]  239  252  253 #> [12059,]  238  251  252 #> [12060,]  238  251  252 #> [12061,]  238  251  252 #> [12062,]  238  251  252 #> [12063,]  238  251  252 #> [12064,]  238  251  252 #> [12065,]  238  251  252 #> [12066,]  238  251  252 #> [12067,]  238  251  252 #> [12068,]  238  251  252 #> [12069,]  238  251  252 #> [12070,]  239  252  253 #> [12071,]  239  252  253 #> [12072,]  238  251  252 #> [12073,]  238  251  252 #> [12074,]  238  251  252 #> [12075,]  239  252  253 #> [12076,]  238  251  252 #> [12077,]  238  251  252 #> [12078,]  238  251  252 #> [12079,]  239  252  253 #> [12080,]  238  251  252 #> [12081,]  238  251  252 #> [12082,]  238  251  252 #> [12083,]  238  251  252 #> [12084,]  238  251  252 #> [12085,]  238  251  252 #> [12086,]  238  251  252 #> [12087,]  239  252  253 #> [12088,]  238  251  252 #> [12089,]  238  251  252 #> [12090,]  238  251  252 #> [12091,]  239  252  253 #> [12092,]  238  251  252 #> [12093,]  238  251  252 #> [12094,]  238  251  252 #> [12095,]  239  252  253 #> [12096,]  238  251  252 #> [12097,]  238  251  252 #> [12098,]  238  251  252 #> [12099,]  238  251  252 #> [12100,]  239  252  253 #> [12101,]  241  254  256 #> [12102,]  240  255  255 #> [12103,]  240  256  254 #> [12104,]  240  256  254 #> [12105,]  240  256  255 #> [12106,]  240  255  255 #> [12107,]  240  256  254 #> [12108,]  240  256  254 #> [12109,]  241  253  256 #> [12110,]  240  256  255 #> [12111,]  241  253  256 #> [12112,]  240  255  254 #> [12113,]  241  253  256 #> [12114,]  240  256  255 #> [12115,]  240  255  255 #> [12116,]  240  256  255 #> [12117,]  241  253  256 #> [12118,]  241  254  256 #> [12119,]  240  255  255 #> [12120,]  241  254  256 #> [12121,]  240  255  255 #> [12122,]  240  256  255 #> [12123,]  240  255  254 #> [12124,]  240  256  255 #> [12125,]  240  256  254 #> [12126,]  240  255  255 #> [12127,]  241  253  256 #> [12128,]  241  254  256 #> [12129,]  240  255  255 #> [12130,]  240  255  255 #> [12131,]  240  255  254 #> [12132,]  240  255  255 #> [12133,]  241  254  256 #> [12134,]  240  255  255 #> [12135,]  240  255  255 #> [12136,]  241  254  256 #> [12137,]  240  255  254 #> [12138,]  241  254  256 #> [12139,]  241  254  256 #> [12140,]  240  255  254 #> [12141,]  240  256  255 #> [12142,]  241  254  256 #> [12143,]  240  255  255 #> [12144,]  240  255  255 #> [12145,]  240  256  255 #> [12146,]  240  255  254 #> [12147,]  240  255  254 #> [12148,]  240  255  255 #> [12149,]  240  256  255 #> [12150,]  240  256  255 #> [12151,]  241  254  256 #> [12152,]  240  256  254 #> [12153,]  241  254  256 #> [12154,]  241  254  256 #> [12155,]  240  256  254 #> [12156,]  241  254  256 #> [12157,]  240  256  254 #> [12158,]  241  253  256 #> [12159,]  240  256  254 #> [12160,]  240  255  254 #> [12161,]  240  255  255 #> [12162,]  241  254  256 #> [12163,]  240  255  255 #> [12164,]  240  255  255 #> [12165,]  241  254  256 #> [12166,]  241  253  256 #> [12167,]  240  256  255 #> [12168,]  240  255  254 #> [12169,]  240  255  255 #> [12170,]  240  255  255 #> [12171,]  240  256  255 #> [12172,]  240  256  255 #> [12173,]  240  256  255 #> [12174,]  240  256  254 #> [12175,]  240  255  255 #> [12176,]  240  256  255 #> [12177,]  241  254  256 #> [12178,]  240  255  255 #> [12179,]  241  253  256 #> [12180,]  240  256  254 #> [12181,]  240  255  255 #> [12182,]  241  253  256 #> [12183,]  241  253  256 #> [12184,]  241  254  256 #> [12185,]  241  254  256 #> [12186,]  240  256  254 #> [12187,]  241  253  256 #> [12188,]  240  256  255 #> [12189,]  241  253  256 #> [12190,]  240  256  255 #> [12191,]  241  254  256 #> [12192,]  240  255  255 #> [12193,]  241  254  256 #> [12194,]  241  254  256 #> [12195,]  240  255  255 #> [12196,]  240  255  254 #> [12197,]  240  255  254 #> [12198,]  240  255  254 #> [12199,]  240  255  255 #> [12200,]  240  255  255 #> [12201,]  243  258  258 #> [12202,]  243  258  258 #> [12203,]  243  258  258 #> [12204,]  243  258  257 #> [12205,]  243  258  258 #> [12206,]  243  258  258 #> [12207,]  242  257  258 #> [12208,]  243  258  257 #> [12209,]  243  258  257 #> [12210,]  243  258  258 #> [12211,]  243  258  257 #> [12212,]  243  258  258 #> [12213,]  243  258  257 #> [12214,]  243  258  258 #> [12215,]  243  258  258 #> [12216,]  243  258  258 #> [12217,]  243  258  257 #> [12218,]  243  258  258 #> [12219,]  243  258  258 #> [12220,]  243  258  258 #> [12221,]  242  257  258 #> [12222,]  243  258  257 #> [12223,]  242  257  258 #> [12224,]  243  258  258 #> [12225,]  243  258  258 #> [12226,]  243  258  258 #> [12227,]  243  258  257 #> [12228,]  243  258  258 #> [12229,]  243  258  258 #> [12230,]  242  257  258 #> [12231,]  243  258  258 #> [12232,]  243  258  258 #> [12233,]  243  258  258 #> [12234,]  243  258  258 #> [12235,]  243  258  257 #> [12236,]  243  258  258 #> [12237,]  243  258  258 #> [12238,]  243  258  258 #> [12239,]  242  257  258 #> [12240,]  243  258  258 #> [12241,]  243  258  258 #> [12242,]  243  258  258 #> [12243,]  243  258  258 #> [12244,]  243  258  257 #> [12245,]  243  258  258 #> [12246,]  243  258  258 #> [12247,]  242  257  258 #> [12248,]  243  258  258 #> [12249,]  242  257  257 #> [12250,]  243  258  258 #> [12251,]  243  258  258 #> [12252,]  243  258  257 #> [12253,]  243  258  258 #> [12254,]  242  257  258 #> [12255,]  243  258  257 #> [12256,]  243  258  258 #> [12257,]  243  258  258 #> [12258,]  243  258  257 #> [12259,]  243  258  258 #> [12260,]  243  258  258 #> [12261,]  243  258  258 #> [12262,]  242  257  258 #> [12263,]  243  258  258 #> [12264,]  243  258  258 #> [12265,]  243  258  258 #> [12266,]  243  258  257 #> [12267,]  243  258  258 #> [12268,]  243  258  258 #> [12269,]  243  258  258 #> [12270,]  242  257  258 #> [12271,]  243  258  258 #> [12272,]  243  258  258 #> [12273,]  243  258  258 #> [12274,]  243  258  258 #> [12275,]  243  258  258 #> [12276,]  243  258  258 #> [12277,]  243  258  258 #> [12278,]  243  258  258 #> [12279,]  242  257  257 #> [12280,]  242  257  257 #> [12281,]  243  258  257 #> [12282,]  243  258  257 #> [12283,]  242  257  257 #> [12284,]  243  258  258 #> [12285,]  243  258  258 #> [12286,]  243  258  258 #> [12287,]  243  258  257 #> [12288,]  243  258  257 #> [12289,]  243  258  257 #> [12290,]  243  258  257 #> [12291,]  243  258  258 #> [12292,]  243  258  257 #> [12293,]  243  258  258 #> [12294,]  243  258  258 #> [12295,]  242  257  257 #> [12296,]  243  258  258 #> [12297,]  243  258  258 #> [12298,]  242  257  258 #> [12299,]  243  258  257 #> [12300,]  243  258  258 #> [12301,]  244  260  261 #> [12302,]  244  259  259 #> [12303,]  244  259  259 #> [12304,]  244  259  259 #> [12305,]  244  260  261 #> [12306,]  244  259  259 #> [12307,]  244  259  259 #> [12308,]  244  259  259 #> [12309,]  244  259  259 #> [12310,]  244  259  259 #> [12311,]  244  259  259 #> [12312,]  244  259  259 #> [12313,]  244  259  259 #> [12314,]  244  260  261 #> [12315,]  244  260  260 #> [12316,]  244  259  259 #> [12317,]  244  259  259 #> [12318,]  244  260  260 #> [12319,]  244  259  259 #> [12320,]  244  259  259 #> [12321,]  244  259  259 #> [12322,]  244  259  259 #> [12323,]  244  259  259 #> [12324,]  244  259  259 #> [12325,]  244  259  259 #> [12326,]  244  259  259 #> [12327,]  244  260  261 #> [12328,]  244  259  259 #> [12329,]  244  259  259 #> [12330,]  244  259  259 #> [12331,]  244  259  259 #> [12332,]  244  260  260 #> [12333,]  244  259  259 #> [12334,]  244  259  259 #> [12335,]  244  259  259 #> [12336,]  244  259  259 #> [12337,]  244  259  259 #> [12338,]  244  259  259 #> [12339,]  244  259  259 #> [12340,]  244  259  259 #> [12341,]  244  259  259 #> [12342,]  244  259  259 #> [12343,]  244  260  260 #> [12344,]  244  259  259 #> [12345,]  244  259  259 #> [12346,]  244  259  259 #> [12347,]  244  259  259 #> [12348,]  244  259  259 #> [12349,]  244  259  259 #> [12350,]  244  259  259 #> [12351,]  244  259  259 #> [12352,]  244  259  259 #> [12353,]  244  259  259 #> [12354,]  244  259  259 #> [12355,]  244  259  259 #> [12356,]  244  259  259 #> [12357,]  244  259  259 #> [12358,]  244  260  261 #> [12359,]  244  259  259 #> [12360,]  244  259  259 #> [12361,]  244  259  259 #> [12362,]  244  259  259 #> [12363,]  244  259  259 #> [12364,]  244  259  259 #> [12365,]  244  259  259 #> [12366,]  244  259  259 #> [12367,]  244  259  259 #> [12368,]  244  259  259 #> [12369,]  244  259  259 #> [12370,]  244  260  260 #> [12371,]  244  260  261 #> [12372,]  244  259  259 #> [12373,]  244  259  259 #> [12374,]  244  259  259 #> [12375,]  244  260  260 #> [12376,]  244  259  259 #> [12377,]  244  259  259 #> [12378,]  244  259  259 #> [12379,]  244  260  260 #> [12380,]  244  259  259 #> [12381,]  244  259  259 #> [12382,]  244  259  259 #> [12383,]  244  259  259 #> [12384,]  244  259  259 #> [12385,]  244  259  259 #> [12386,]  244  259  259 #> [12387,]  244  260  261 #> [12388,]  244  259  259 #> [12389,]  244  259  259 #> [12390,]  244  259  259 #> [12391,]  244  260  261 #> [12392,]  244  259  259 #> [12393,]  244  259  259 #> [12394,]  244  259  259 #> [12395,]  244  260  260 #> [12396,]  244  259  259 #> [12397,]  244  259  259 #> [12398,]  244  259  259 #> [12399,]  244  259  259 #> [12400,]  244  260  260 #> [12401,]  245  263  263 #> [12402,]  245  262  263 #> [12403,]  245  262  263 #> [12404,]  246  261  262 #> [12405,]  245  262  263 #> [12406,]  245  262  263 #> [12407,]  246  261  262 #> [12408,]  245  262  263 #> [12409,]  246  261  262 #> [12410,]  246  261  262 #> [12411,]  245  262  263 #> [12412,]  245  262  263 #> [12413,]  245  262  263 #> [12414,]  246  261  262 #> [12415,]  245  263  263 #> [12416,]  246  261  262 #> [12417,]  245  262  263 #> [12418,]  245  262  263 #> [12419,]  245  262  263 #> [12420,]  246  261  262 #> [12421,]  245  263  263 #> [12422,]  245  262  263 #> [12423,]  245  262  263 #> [12424,]  246  261  262 #> [12425,]  246  261  262 #> [12426,]  245  262  263 #> [12427,]  245  262  263 #> [12428,]  246  261  262 #> [12429,]  245  263  263 #> [12430,]  245  262  263 #> [12431,]  245  262  263 #> [12432,]  245  262  263 #> [12433,]  245  263  263 #> [12434,]  245  262  263 #> [12435,]  245  262  263 #> [12436,]  246  261  262 #> [12437,]  245  262  263 #> [12438,]  245  262  263 #> [12439,]  246  261  262 #> [12440,]  245  262  263 #> [12441,]  245  263  263 #> [12442,]  245  262  263 #> [12443,]  245  262  263 #> [12444,]  245  263  263 #> [12445,]  245  262  263 #> [12446,]  245  262  263 #> [12447,]  245  262  263 #> [12448,]  245  262  263 #> [12449,]  245  262  263 #> [12450,]  246  261  262 #> [12451,]  245  262  263 #> [12452,]  246  261  262 #> [12453,]  245  262  263 #> [12454,]  246  261  262 #> [12455,]  246  261  262 #> [12456,]  245  262  263 #> [12457,]  246  261  262 #> [12458,]  245  262  263 #> [12459,]  246  261  262 #> [12460,]  245  262  263 #> [12461,]  245  262  263 #> [12462,]  245  262  263 #> [12463,]  245  262  263 #> [12464,]  245  262  263 #> [12465,]  245  262  263 #> [12466,]  245  262  263 #> [12467,]  246  261  262 #> [12468,]  245  263  263 #> [12469,]  245  262  263 #> [12470,]  245  263  263 #> [12471,]  245  262  263 #> [12472,]  245  262  263 #> [12473,]  246  261  262 #> [12474,]  245  262  263 #> [12475,]  245  262  263 #> [12476,]  246  261  262 #> [12477,]  245  262  263 #> [12478,]  245  262  263 #> [12479,]  245  262  263 #> [12480,]  245  262  263 #> [12481,]  245  262  263 #> [12482,]  245  262  263 #> [12483,]  245  262  263 #> [12484,]  245  262  263 #> [12485,]  245  262  263 #> [12486,]  246  261  262 #> [12487,]  245  262  263 #> [12488,]  245  262  263 #> [12489,]  245  262  263 #> [12490,]  246  261  262 #> [12491,]  246  261  262 #> [12492,]  245  262  263 #> [12493,]  245  262  263 #> [12494,]  245  262  263 #> [12495,]  245  262  263 #> [12496,]  245  263  263 #> [12497,]  245  262  263 #> [12498,]  245  262  263 #> [12499,]  245  263  263 #> [12500,]  245  262  263 #> [12501,]  248  265  264 #> [12502,]  247  264  266 #> [12503,]  247  264  265 #> [12504,]  247  264  265 #> [12505,]  247  264  266 #> [12506,]  247  264  265 #> [12507,]  247  264  266 #> [12508,]  247  264  265 #> [12509,]  248  265  264 #> [12510,]  247  264  266 #> [12511,]  247  264  265 #> [12512,]  247  264  266 #> [12513,]  248  265  264 #> [12514,]  247  264  265 #> [12515,]  247  264  265 #> [12516,]  247  264  265 #> [12517,]  248  265  264 #> [12518,]  248  265  264 #> [12519,]  247  264  265 #> [12520,]  248  265  264 #> [12521,]  247  264  266 #> [12522,]  247  264  266 #> [12523,]  247  264  266 #> [12524,]  247  264  266 #> [12525,]  247  264  265 #> [12526,]  247  264  265 #> [12527,]  248  265  264 #> [12528,]  247  264  265 #> [12529,]  247  264  266 #> [12530,]  247  264  266 #> [12531,]  247  264  266 #> [12532,]  247  264  266 #> [12533,]  247  264  266 #> [12534,]  247  264  265 #> [12535,]  247  264  265 #> [12536,]  248  265  264 #> [12537,]  247  264  265 #> [12538,]  248  265  264 #> [12539,]  247  264  266 #> [12540,]  247  264  266 #> [12541,]  247  264  266 #> [12542,]  248  265  264 #> [12543,]  247  264  265 #> [12544,]  247  264  266 #> [12545,]  247  264  265 #> [12546,]  247  264  265 #> [12547,]  247  264  266 #> [12548,]  247  264  266 #> [12549,]  247  264  265 #> [12550,]  247  264  266 #> [12551,]  248  265  264 #> [12552,]  247  264  265 #> [12553,]  248  265  264 #> [12554,]  248  265  264 #> [12555,]  247  264  265 #> [12556,]  248  265  264 #> [12557,]  247  264  265 #> [12558,]  247  264  266 #> [12559,]  247  264  265 #> [12560,]  247  264  266 #> [12561,]  247  264  266 #> [12562,]  247  264  265 #> [12563,]  247  264  266 #> [12564,]  247  264  265 #> [12565,]  248  265  264 #> [12566,]  248  265  264 #> [12567,]  247  264  265 #> [12568,]  247  264  265 #> [12569,]  247  264  265 #> [12570,]  247  264  266 #> [12571,]  247  264  266 #> [12572,]  247  264  265 #> [12573,]  247  264  265 #> [12574,]  247  264  266 #> [12575,]  247  264  266 #> [12576,]  247  264  266 #> [12577,]  248  265  264 #> [12578,]  247  264  266 #> [12579,]  248  265  264 #> [12580,]  247  264  266 #> [12581,]  247  264  266 #> [12582,]  248  265  264 #> [12583,]  248  265  264 #> [12584,]  248  265  264 #> [12585,]  247  264  265 #> [12586,]  247  264  266 #> [12587,]  248  265  264 #> [12588,]  247  264  266 #> [12589,]  247  264  265 #> [12590,]  247  264  266 #> [12591,]  248  265  264 #> [12592,]  247  264  266 #> [12593,]  248  265  264 #> [12594,]  248  265  264 #> [12595,]  247  264  266 #> [12596,]  247  264  265 #> [12597,]  247  264  265 #> [12598,]  247  264  265 #> [12599,]  247  264  265 #> [12600,]  247  264  265 #> [12601,]  249  266  267 #> [12602,]  249  266  267 #> [12603,]  249  266  267 #> [12604,]  250  267  268 #> [12605,]  249  266  267 #> [12606,]  250  267  268 #> [12607,]  249  266  267 #> [12608,]  249  266  267 #> [12609,]  250  267  268 #> [12610,]  250  267  268 #> [12611,]  250  267  268 #> [12612,]  250  267  268 #> [12613,]  249  266  267 #> [12614,]  250  267  268 #> [12615,]  250  267  268 #> [12616,]  249  266  267 #> [12617,]  249  266  267 #> [12618,]  250  267  268 #> [12619,]  250  267  268 #> [12620,]  249  266  267 #> [12621,]  250  267  268 #> [12622,]  249  266  267 #> [12623,]  250  267  268 #> [12624,]  249  266  267 #> [12625,]  249  266  267 #> [12626,]  250  267  268 #> [12627,]  250  267  268 #> [12628,]  249  266  267 #> [12629,]  249  266  267 #> [12630,]  250  267  268 #> [12631,]  250  267  268 #> [12632,]  250  267  268 #> [12633,]  250  267  268 #> [12634,]  250  267  268 #> [12635,]  250  267  268 #> [12636,]  250  267  268 #> [12637,]  249  266  267 #> [12638,]  250  267  268 #> [12639,]  249  266  267 #> [12640,]  249  266  267 #> [12641,]  250  267  268 #> [12642,]  250  267  268 #> [12643,]  249  266  267 #> [12644,]  249  266  267 #> [12645,]  249  266  267 #> [12646,]  249  266  267 #> [12647,]  249  266  267 #> [12648,]  250  267  268 #> [12649,]  249  266  267 #> [12650,]  249  266  267 #> [12651,]  249  266  267 #> [12652,]  250  267  268 #> [12653,]  249  266  267 #> [12654,]  249  266  267 #> [12655,]  249  266  267 #> [12656,]  249  266  267 #> [12657,]  250  267  268 #> [12658,]  250  267  268 #> [12659,]  249  266  267 #> [12660,]  250  267  268 #> [12661,]  250  267  268 #> [12662,]  250  267  268 #> [12663,]  249  266  267 #> [12664,]  250  267  268 #> [12665,]  249  266  267 #> [12666,]  249  266  267 #> [12667,]  250  267  268 #> [12668,]  250  267  268 #> [12669,]  250  267  268 #> [12670,]  249  266  267 #> [12671,]  249  266  267 #> [12672,]  249  266  267 #> [12673,]  250  267  268 #> [12674,]  250  267  268 #> [12675,]  250  267  268 #> [12676,]  249  266  267 #> [12677,]  249  266  267 #> [12678,]  249  266  267 #> [12679,]  249  266  267 #> [12680,]  250  267  268 #> [12681,]  249  266  267 #> [12682,]  250  267  268 #> [12683,]  249  266  267 #> [12684,]  249  266  267 #> [12685,]  250  267  268 #> [12686,]  249  266  267 #> [12687,]  250  267  268 #> [12688,]  250  267  268 #> [12689,]  249  266  267 #> [12690,]  249  266  267 #> [12691,]  250  267  268 #> [12692,]  250  267  268 #> [12693,]  250  267  268 #> [12694,]  249  266  267 #> [12695,]  250  267  268 #> [12696,]  250  267  268 #> [12697,]  250  267  268 #> [12698,]  249  266  267 #> [12699,]  250  267  268 #> [12700,]  249  266  267 #> [12701,]  251  268  269 #> [12702,]  251  269  270 #> [12703,]  251  268  269 #> [12704,]  251  268  269 #> [12705,]  251  269  270 #> [12706,]  251  268  269 #> [12707,]  251  269  270 #> [12708,]  251  268  269 #> [12709,]  251  269  270 #> [12710,]  251  269  270 #> [12711,]  251  268  269 #> [12712,]  251  269  270 #> [12713,]  251  269  270 #> [12714,]  251  268  269 #> [12715,]  251  268  269 #> [12716,]  251  268  269 #> [12717,]  251  269  270 #> [12718,]  251  269  270 #> [12719,]  251  268  269 #> [12720,]  251  269  270 #> [12721,]  251  269  270 #> [12722,]  251  269  270 #> [12723,]  251  269  270 #> [12724,]  251  269  270 #> [12725,]  251  269  270 #> [12726,]  251  268  269 #> [12727,]  251  269  270 #> [12728,]  251  268  269 #> [12729,]  251  269  270 #> [12730,]  251  269  270 #> [12731,]  251  269  270 #> [12732,]  251  269  270 #> [12733,]  251  269  270 #> [12734,]  251  268  269 #> [12735,]  251  268  269 #> [12736,]  251  269  270 #> [12737,]  251  268  269 #> [12738,]  251  268  269 #> [12739,]  251  269  270 #> [12740,]  251  269  270 #> [12741,]  251  269  270 #> [12742,]  251  268  269 #> [12743,]  251  268  269 #> [12744,]  251  269  270 #> [12745,]  251  268  269 #> [12746,]  251  268  269 #> [12747,]  251  269  270 #> [12748,]  251  269  270 #> [12749,]  251  268  269 #> [12750,]  251  269  270 #> [12751,]  251  269  270 #> [12752,]  251  268  269 #> [12753,]  251  269  270 #> [12754,]  251  269  270 #> [12755,]  251  268  269 #> [12756,]  251  268  269 #> [12757,]  251  268  269 #> [12758,]  251  269  270 #> [12759,]  251  268  269 #> [12760,]  251  269  270 #> [12761,]  251  269  270 #> [12762,]  251  268  269 #> [12763,]  251  269  270 #> [12764,]  251  268  269 #> [12765,]  251  268  269 #> [12766,]  251  269  270 #> [12767,]  251  268  269 #> [12768,]  251  268  269 #> [12769,]  251  268  269 #> [12770,]  251  269  270 #> [12771,]  251  269  270 #> [12772,]  251  268  269 #> [12773,]  251  268  269 #> [12774,]  251  269  270 #> [12775,]  251  269  270 #> [12776,]  251  269  270 #> [12777,]  251  268  269 #> [12778,]  251  269  270 #> [12779,]  251  268  269 #> [12780,]  251  269  270 #> [12781,]  251  269  270 #> [12782,]  251  268  269 #> [12783,]  251  269  270 #> [12784,]  251  269  270 #> [12785,]  251  268  269 #> [12786,]  251  269  270 #> [12787,]  251  269  270 #> [12788,]  251  269  270 #> [12789,]  251  268  269 #> [12790,]  251  269  270 #> [12791,]  251  268  269 #> [12792,]  251  269  270 #> [12793,]  251  269  270 #> [12794,]  251  268  269 #> [12795,]  251  269  270 #> [12796,]  251  268  269 #> [12797,]  251  268  269 #> [12798,]  251  268  269 #> [12799,]  251  269  270 #> [12800,]  251  268  269 #> [12801,]  252  270  271 #> [12802,]  252  270  271 #> [12803,]  252  270  271 #> [12804,]  253  271  272 #> [12805,]  252  270  271 #> [12806,]  252  270  271 #> [12807,]  253  271  272 #> [12808,]  252  270  271 #> [12809,]  252  270  271 #> [12810,]  253  271  272 #> [12811,]  252  270  271 #> [12812,]  252  270  271 #> [12813,]  252  270  271 #> [12814,]  252  270  271 #> [12815,]  253  271  272 #> [12816,]  253  271  272 #> [12817,]  252  270  271 #> [12818,]  253  271  272 #> [12819,]  252  270  271 #> [12820,]  252  270  271 #> [12821,]  253  271  272 #> [12822,]  252  270  271 #> [12823,]  253  271  272 #> [12824,]  252  270  271 #> [12825,]  253  271  272 #> [12826,]  252  270  271 #> [12827,]  253  271  272 #> [12828,]  253  271  272 #> [12829,]  252  270  271 #> [12830,]  252  270  271 #> [12831,]  252  270  271 #> [12832,]  252  270  271 #> [12833,]  252  270  271 #> [12834,]  252  270  271 #> [12835,]  252  270  271 #> [12836,]  252  270  271 #> [12837,]  252  270  271 #> [12838,]  252  270  271 #> [12839,]  253  271  272 #> [12840,]  252  270  271 #> [12841,]  252  270  271 #> [12842,]  252  270  271 #> [12843,]  253  271  272 #> [12844,]  252  270  271 #> [12845,]  253  271  272 #> [12846,]  252  270  271 #> [12847,]  253  271  272 #> [12848,]  252  270  271 #> [12849,]  252  270  271 #> [12850,]  252  270  271 #> [12851,]  252  270  271 #> [12852,]  252  270  271 #> [12853,]  253  271  272 #> [12854,]  252  270  271 #> [12855,]  252  270  271 #> [12856,]  252  270  271 #> [12857,]  252  270  271 #> [12858,]  252  270  271 #> [12859,]  252  270  271 #> [12860,]  252  270  271 #> [12861,]  253  271  272 #> [12862,]  252  270  271 #> [12863,]  252  270  271 #> [12864,]  253  271  272 #> [12865,]  252  270  271 #> [12866,]  252  270  271 #> [12867,]  252  270  271 #> [12868,]  252  270  271 #> [12869,]  252  270  271 #> [12870,]  252  270  271 #> [12871,]  253  271  272 #> [12872,]  253  271  272 #> [12873,]  253  271  272 #> [12874,]  253  271  272 #> [12875,]  253  271  272 #> [12876,]  253  271  272 #> [12877,]  253  271  272 #> [12878,]  252  270  271 #> [12879,]  252  270  271 #> [12880,]  252  270  271 #> [12881,]  252  270  271 #> [12882,]  252  270  271 #> [12883,]  252  270  271 #> [12884,]  253  271  272 #> [12885,]  252  270  271 #> [12886,]  252  270  271 #> [12887,]  252  270  271 #> [12888,]  253  271  272 #> [12889,]  252  270  271 #> [12890,]  252  270  271 #> [12891,]  252  270  271 #> [12892,]  252  270  271 #> [12893,]  252  270  271 #> [12894,]  253  271  272 #> [12895,]  253  271  272 #> [12896,]  252  270  271 #> [12897,]  252  270  271 #> [12898,]  252  270  271 #> [12899,]  252  270  271 #> [12900,]  253  271  272 #> [12901,]  255  273  274 #> [12902,]  255  273  274 #> [12903,]  255  273  274 #> [12904,]  254  272  273 #> [12905,]  255  273  274 #> [12906,]  255  273  274 #> [12907,]  255  273  274 #> [12908,]  254  272  273 #> [12909,]  254  272  273 #> [12910,]  254  272  273 #> [12911,]  255  273  274 #> [12912,]  255  273  274 #> [12913,]  255  273  274 #> [12914,]  255  273  274 #> [12915,]  255  273  274 #> [12916,]  255  273  274 #> [12917,]  255  273  274 #> [12918,]  254  272  273 #> [12919,]  255  273  274 #> [12920,]  254  272  273 #> [12921,]  255  273  274 #> [12922,]  255  273  274 #> [12923,]  255  273  274 #> [12924,]  255  273  274 #> [12925,]  255  273  274 #> [12926,]  255  273  274 #> [12927,]  255  273  274 #> [12928,]  255  273  274 #> [12929,]  255  273  274 #> [12930,]  254  272  273 #> [12931,]  255  273  274 #> [12932,]  255  273  274 #> [12933,]  255  273  274 #> [12934,]  255  273  274 #> [12935,]  255  273  274 #> [12936,]  255  273  274 #> [12937,]  255  273  274 #> [12938,]  255  273  274 #> [12939,]  254  272  273 #> [12940,]  255  273  274 #> [12941,]  255  273  274 #> [12942,]  255  273  274 #> [12943,]  254  272  273 #> [12944,]  255  273  274 #> [12945,]  254  272  273 #> [12946,]  255  273  274 #> [12947,]  255  273  274 #> [12948,]  255  273  274 #> [12949,]  254  272  273 #> [12950,]  255  273  274 #> [12951,]  254  272  273 #> [12952,]  255  273  274 #> [12953,]  254  272  273 #> [12954,]  255  273  274 #> [12955,]  255  273  274 #> [12956,]  254  272  273 #> [12957,]  255  273  274 #> [12958,]  255  273  274 #> [12959,]  255  273  274 #> [12960,]  254  272  273 #> [12961,]  255  273  274 #> [12962,]  255  273  274 #> [12963,]  255  273  274 #> [12964,]  254  272  273 #> [12965,]  254  272  273 #> [12966,]  254  272  273 #> [12967,]  254  272  273 #> [12968,]  255  273  274 #> [12969,]  255  273  274 #> [12970,]  255  273  274 #> [12971,]  255  273  274 #> [12972,]  255  273  274 #> [12973,]  255  273  274 #> [12974,]  255  273  274 #> [12975,]  255  273  274 #> [12976,]  255  273  274 #> [12977,]  255  273  274 #> [12978,]  254  272  273 #> [12979,]  255  273  274 #> [12980,]  255  273  274 #> [12981,]  255  273  274 #> [12982,]  255  273  274 #> [12983,]  255  273  274 #> [12984,]  255  273  274 #> [12985,]  254  272  273 #> [12986,]  255  273  274 #> [12987,]  255  273  274 #> [12988,]  255  273  274 #> [12989,]  254  272  273 #> [12990,]  255  273  274 #> [12991,]  254  272  273 #> [12992,]  255  273  274 #> [12993,]  255  273  274 #> [12994,]  255  273  274 #> [12995,]  254  272  273 #> [12996,]  255  273  274 #> [12997,]  255  273  274 #> [12998,]  255  273  274 #> [12999,]  255  273  274 #> [13000,]  255  273  274 #> [13001,]  256  276  276 #> [13002,]  257  274  275 #> [13003,]  257  274  275 #> [13004,]  256  276  276 #> [13005,]  256  276  276 #> [13006,]  257  274  275 #> [13007,]  256  276  276 #> [13008,]  256  276  276 #> [13009,]  256  276  276 #> [13010,]  256  276  276 #> [13011,]  256  276  276 #> [13012,]  257  274  275 #> [13013,]  256  276  276 #> [13014,]  256  276  276 #> [13015,]  256  275  276 #> [13016,]  256  276  276 #> [13017,]  256  276  276 #> [13018,]  257  274  275 #> [13019,]  257  274  275 #> [13020,]  257  274  275 #> [13021,]  256  276  276 #> [13022,]  256  276  276 #> [13023,]  256  276  276 #> [13024,]  256  276  276 #> [13025,]  257  274  275 #> [13026,]  256  276  276 #> [13027,]  256  276  276 #> [13028,]  257  274  275 #> [13029,]  256  276  276 #> [13030,]  256  276  276 #> [13031,]  256  275  276 #> [13032,]  256  276  276 #> [13033,]  257  274  275 #> [13034,]  257  274  275 #> [13035,]  256  276  276 #> [13036,]  256  276  276 #> [13037,]  256  276  276 #> [13038,]  256  276  276 #> [13039,]  256  276  276 #> [13040,]  256  276  276 #> [13041,]  256  276  276 #> [13042,]  256  275  276 #> [13043,]  256  275  276 #> [13044,]  256  275  276 #> [13045,]  256  276  276 #> [13046,]  256  276  276 #> [13047,]  256  276  276 #> [13048,]  256  276  276 #> [13049,]  256  276  276 #> [13050,]  256  276  276 #> [13051,]  256  276  276 #> [13052,]  256  276  276 #> [13053,]  256  276  276 #> [13054,]  256  276  276 #> [13055,]  256  276  276 #> [13056,]  256  276  276 #> [13057,]  256  276  276 #> [13058,]  256  276  276 #> [13059,]  256  276  276 #> [13060,]  257  274  275 #> [13061,]  256  276  276 #> [13062,]  256  276  276 #> [13063,]  256  275  276 #> [13064,]  256  276  276 #> [13065,]  257  274  275 #> [13066,]  256  276  276 #> [13067,]  256  276  276 #> [13068,]  256  276  276 #> [13069,]  256  276  276 #> [13070,]  257  274  275 #> [13071,]  257  274  275 #> [13072,]  256  276  276 #> [13073,]  257  274  275 #> [13074,]  256  276  276 #> [13075,]  256  275  276 #> [13076,]  256  276  276 #> [13077,]  256  276  276 #> [13078,]  256  275  276 #> [13079,]  256  276  276 #> [13080,]  256  276  276 #> [13081,]  256  276  276 #> [13082,]  256  276  276 #> [13083,]  256  276  276 #> [13084,]  257  274  275 #> [13085,]  256  276  276 #> [13086,]  256  276  276 #> [13087,]  256  276  276 #> [13088,]  256  276  276 #> [13089,]  256  276  276 #> [13090,]  256  276  276 #> [13091,]  256  276  276 #> [13092,]  256  276  276 #> [13093,]  257  274  275 #> [13094,]  256  276  276 #> [13095,]  256  275  276 #> [13096,]  256  276  276 #> [13097,]  257  274  275 #> [13098,]  257  274  275 #> [13099,]  256  276  276 #> [13100,]  256  276  276 #> [13101,]  259  278  279 #> [13102,]  259  278  279 #> [13103,]  258  277  277 #> [13104,]  258  277  277 #> [13105,]  259  278  279 #> [13106,]  259  278  279 #> [13107,]  258  277  277 #> [13108,]  258  277  277 #> [13109,]  259  278  278 #> [13110,]  259  278  279 #> [13111,]  259  278  278 #> [13112,]  258  277  277 #> [13113,]  259  278  278 #> [13114,]  258  277  277 #> [13115,]  259  278  279 #> [13116,]  259  278  279 #> [13117,]  259  278  278 #> [13118,]  259  278  279 #> [13119,]  259  278  279 #> [13120,]  259  278  279 #> [13121,]  259  278  279 #> [13122,]  259  278  278 #> [13123,]  258  277  277 #> [13124,]  259  278  279 #> [13125,]  258  277  277 #> [13126,]  259  278  279 #> [13127,]  259  278  278 #> [13128,]  259  278  279 #> [13129,]  259  278  279 #> [13130,]  259  278  278 #> [13131,]  258  277  277 #> [13132,]  258  277  277 #> [13133,]  259  278  279 #> [13134,]  259  278  279 #> [13135,]  259  278  278 #> [13136,]  259  278  279 #> [13137,]  258  277  277 #> [13138,]  259  278  279 #> [13139,]  259  278  279 #> [13140,]  258  277  277 #> [13141,]  259  278  279 #> [13142,]  259  278  279 #> [13143,]  259  278  278 #> [13144,]  258  277  277 #> [13145,]  259  278  279 #> [13146,]  258  277  277 #> [13147,]  258  277  277 #> [13148,]  259  278  279 #> [13149,]  259  278  278 #> [13150,]  259  278  279 #> [13151,]  259  278  279 #> [13152,]  258  277  277 #> [13153,]  259  278  279 #> [13154,]  259  278  278 #> [13155,]  258  277  277 #> [13156,]  259  278  279 #> [13157,]  258  277  277 #> [13158,]  259  278  278 #> [13159,]  258  277  277 #> [13160,]  258  277  277 #> [13161,]  259  278  279 #> [13162,]  259  278  279 #> [13163,]  259  278  279 #> [13164,]  259  278  279 #> [13165,]  259  278  279 #> [13166,]  259  278  278 #> [13167,]  258  277  277 #> [13168,]  258  277  277 #> [13169,]  259  278  278 #> [13170,]  259  278  279 #> [13171,]  259  278  279 #> [13172,]  258  277  277 #> [13173,]  259  278  279 #> [13174,]  258  277  277 #> [13175,]  258  277  277 #> [13176,]  258  277  277 #> [13177,]  259  278  279 #> [13178,]  258  277  277 #> [13179,]  259  278  278 #> [13180,]  258  277  277 #> [13181,]  259  278  278 #> [13182,]  259  278  278 #> [13183,]  259  278  278 #> [13184,]  259  278  279 #> [13185,]  259  278  279 #> [13186,]  258  277  277 #> [13187,]  259  278  278 #> [13188,]  259  278  278 #> [13189,]  259  278  278 #> [13190,]  259  278  278 #> [13191,]  259  278  279 #> [13192,]  258  277  277 #> [13193,]  259  278  279 #> [13194,]  259  278  279 #> [13195,]  259  278  278 #> [13196,]  258  277  277 #> [13197,]  258  277  277 #> [13198,]  258  277  277 #> [13199,]  259  278  278 #> [13200,]  259  278  279 #> [13201,]  260  279  281 #> [13202,]  261  280  280 #> [13203,]  261  280  281 #> [13204,]  260  279  282 #> [13205,]  261  280  280 #> [13206,]  261  280  281 #> [13207,]  261  280  280 #> [13208,]  260  279  281 #> [13209,]  260  279  280 #> [13210,]  261  280  280 #> [13211,]  260  279  282 #> [13212,]  261  280  280 #> [13213,]  260  279  280 #> [13214,]  260  279  282 #> [13215,]  261  280  282 #> [13216,]  261  280  281 #> [13217,]  260  279  280 #> [13218,]  261  280  280 #> [13219,]  261  280  282 #> [13220,]  261  280  280 #> [13221,]  260  279  280 #> [13222,]  260  279  280 #> [13223,]  261  280  280 #> [13224,]  261  280  280 #> [13225,]  261  280  280 #> [13226,]  261  280  282 #> [13227,]  260  279  280 #> [13228,]  261  280  281 #> [13229,]  261  280  280 #> [13230,]  260  279  280 #> [13231,]  261  280  280 #> [13232,]  261  280  280 #> [13233,]  261  280  280 #> [13234,]  261  280  281 #> [13235,]  260  279  281 #> [13236,]  261  280  280 #> [13237,]  261  280  281 #> [13238,]  261  280  282 #> [13239,]  261  280  280 #> [13240,]  261  280  280 #> [13241,]  261  280  280 #> [13242,]  261  280  282 #> [13243,]  260  279  280 #> [13244,]  260  279  280 #> [13245,]  260  279  281 #> [13246,]  260  279  281 #> [13247,]  261  280  280 #> [13248,]  261  280  280 #> [13249,]  260  279  281 #> [13250,]  261  280  280 #> [13251,]  261  280  280 #> [13252,]  260  279  281 #> [13253,]  261  280  280 #> [13254,]  260  279  280 #> [13255,]  260  279  281 #> [13256,]  261  280  281 #> [13257,]  261  280  281 #> [13258,]  260  279  280 #> [13259,]  261  280  281 #> [13260,]  261  280  280 #> [13261,]  261  280  280 #> [13262,]  261  280  282 #> [13263,]  261  280  280 #> [13264,]  261  280  281 #> [13265,]  261  280  281 #> [13266,]  260  279  280 #> [13267,]  261  280  280 #> [13268,]  260  279  282 #> [13269,]  260  279  282 #> [13270,]  261  280  280 #> [13271,]  261  280  280 #> [13272,]  261  280  281 #> [13273,]  261  280  281 #> [13274,]  261  280  280 #> [13275,]  261  280  280 #> [13276,]  261  280  280 #> [13277,]  261  280  281 #> [13278,]  261  280  280 #> [13279,]  260  279  281 #> [13280,]  260  279  280 #> [13281,]  260  279  280 #> [13282,]  260  279  282 #> [13283,]  260  279  280 #> [13284,]  261  280  280 #> [13285,]  261  280  280 #> [13286,]  261  280  280 #> [13287,]  260  279  280 #> [13288,]  260  279  280 #> [13289,]  260  279  281 #> [13290,]  260  279  280 #> [13291,]  260  279  281 #> [13292,]  260  279  280 #> [13293,]  261  280  280 #> [13294,]  261  280  281 #> [13295,]  260  279  280 #> [13296,]  260  279  282 #> [13297,]  261  280  282 #> [13298,]  261  280  280 #> [13299,]  260  279  280 #> [13300,]  261  280  281 #> [13301,]  263  281  283 #> [13302,]  263  281  283 #> [13303,]  262  283  284 #> [13304,]  262  282  284 #> [13305,]  263  281  283 #> [13306,]  263  281  283 #> [13307,]  262  283  284 #> [13308,]  262  282  284 #> [13309,]  263  281  283 #> [13310,]  263  281  283 #> [13311,]  263  281  283 #> [13312,]  262  283  284 #> [13313,]  263  281  283 #> [13314,]  263  281  283 #> [13315,]  263  281  283 #> [13316,]  263  281  283 #> [13317,]  263  281  283 #> [13318,]  263  281  283 #> [13319,]  263  281  283 #> [13320,]  263  281  283 #> [13321,]  263  281  283 #> [13322,]  263  281  283 #> [13323,]  262  283  284 #> [13324,]  263  281  283 #> [13325,]  262  283  284 #> [13326,]  263  281  283 #> [13327,]  263  281  283 #> [13328,]  263  281  283 #> [13329,]  263  281  283 #> [13330,]  263  281  283 #> [13331,]  262  283  284 #> [13332,]  263  281  283 #> [13333,]  263  281  283 #> [13334,]  263  281  283 #> [13335,]  263  281  283 #> [13336,]  263  281  283 #> [13337,]  262  282  284 #> [13338,]  263  281  283 #> [13339,]  263  281  283 #> [13340,]  262  283  284 #> [13341,]  263  281  283 #> [13342,]  263  281  283 #> [13343,]  263  281  283 #> [13344,]  263  281  283 #> [13345,]  263  281  283 #> [13346,]  262  282  284 #> [13347,]  262  283  284 #> [13348,]  263  281  283 #> [13349,]  263  281  283 #> [13350,]  263  281  283 #> [13351,]  263  281  283 #> [13352,]  262  282  284 #> [13353,]  263  281  283 #> [13354,]  263  281  283 #> [13355,]  262  282  284 #> [13356,]  263  281  283 #> [13357,]  262  283  284 #> [13358,]  263  281  283 #> [13359,]  262  283  284 #> [13360,]  262  283  284 #> [13361,]  263  281  283 #> [13362,]  263  281  283 #> [13363,]  263  281  283 #> [13364,]  263  281  283 #> [13365,]  263  281  283 #> [13366,]  263  281  283 #> [13367,]  263  281  283 #> [13368,]  262  282  284 #> [13369,]  263  281  283 #> [13370,]  263  281  283 #> [13371,]  263  281  283 #> [13372,]  263  281  283 #> [13373,]  263  281  283 #> [13374,]  262  282  284 #> [13375,]  263  281  283 #> [13376,]  263  281  283 #> [13377,]  263  281  283 #> [13378,]  263  281  283 #> [13379,]  263  281  283 #> [13380,]  262  282  284 #> [13381,]  263  281  283 #> [13382,]  263  281  283 #> [13383,]  263  281  283 #> [13384,]  263  281  283 #> [13385,]  263  281  283 #> [13386,]  262  283  284 #> [13387,]  263  281  283 #> [13388,]  263  281  283 #> [13389,]  263  281  283 #> [13390,]  263  281  283 #> [13391,]  263  281  283 #> [13392,]  263  281  283 #> [13393,]  263  281  283 #> [13394,]  263  281  283 #> [13395,]  263  281  283 #> [13396,]  262  282  284 #> [13397,]  262  283  284 #> [13398,]  262  283  284 #> [13399,]  263  281  283 #> [13400,]  263  281  283 #> [13401,]  265  285  286 #> [13402,]  265  285  287 #> [13403,]  264  284  285 #> [13404,]  264  284  285 #> [13405,]  264  284  285 #> [13406,]  265  285  287 #> [13407,]  264  284  285 #> [13408,]  264  284  285 #> [13409,]  264  284  285 #> [13410,]  264  284  285 #> [13411,]  264  284  285 #> [13412,]  264  284  285 #> [13413,]  265  285  286 #> [13414,]  265  285  286 #> [13415,]  265  285  286 #> [13416,]  265  285  286 #> [13417,]  265  285  286 #> [13418,]  264  284  285 #> [13419,]  264  284  285 #> [13420,]  264  284  285 #> [13421,]  265  285  286 #> [13422,]  264  284  285 #> [13423,]  264  284  285 #> [13424,]  264  284  285 #> [13425,]  264  284  285 #> [13426,]  264  284  285 #> [13427,]  264  284  285 #> [13428,]  264  284  285 #> [13429,]  265  285  287 #> [13430,]  264  284  285 #> [13431,]  264  284  285 #> [13432,]  264  284  285 #> [13433,]  265  285  287 #> [13434,]  264  284  285 #> [13435,]  265  285  286 #> [13436,]  264  284  285 #> [13437,]  264  284  285 #> [13438,]  264  284  285 #> [13439,]  264  284  285 #> [13440,]  264  284  285 #> [13441,]  265  285  286 #> [13442,]  264  284  285 #> [13443,]  264  284  285 #> [13444,]  265  285  286 #> [13445,]  264  284  285 #> [13446,]  264  284  285 #> [13447,]  264  284  285 #> [13448,]  264  284  285 #> [13449,]  264  284  285 #> [13450,]  265  285  287 #> [13451,]  264  284  285 #> [13452,]  264  284  285 #> [13453,]  264  284  285 #> [13454,]  264  284  285 #> [13455,]  264  284  285 #> [13456,]  264  284  285 #> [13457,]  264  284  285 #> [13458,]  264  284  285 #> [13459,]  265  285  286 #> [13460,]  264  284  285 #> [13461,]  265  285  287 #> [13462,]  264  284  285 #> [13463,]  264  284  285 #> [13464,]  264  284  285 #> [13465,]  264  284  285 #> [13466,]  264  284  285 #> [13467,]  264  284  285 #> [13468,]  265  285  286 #> [13469,]  264  284  285 #> [13470,]  265  285  287 #> [13471,]  264  284  285 #> [13472,]  264  284  285 #> [13473,]  265  285  287 #> [13474,]  264  284  285 #> [13475,]  264  284  285 #> [13476,]  265  285  286 #> [13477,]  265  285  287 #> [13478,]  264  284  285 #> [13479,]  265  285  286 #> [13480,]  264  284  285 #> [13481,]  265  285  286 #> [13482,]  264  284  285 #> [13483,]  265  285  286 #> [13484,]  264  284  285 #> [13485,]  264  284  285 #> [13486,]  265  285  287 #> [13487,]  264  284  285 #> [13488,]  264  284  285 #> [13489,]  264  284  285 #> [13490,]  264  284  285 #> [13491,]  264  284  285 #> [13492,]  264  284  285 #> [13493,]  265  285  287 #> [13494,]  264  284  285 #> [13495,]  264  284  285 #> [13496,]  265  285  286 #> [13497,]  264  284  285 #> [13498,]  264  284  285 #> [13499,]  265  285  286 #> [13500,]  264  284  285 #> [13501,]  267  287  289 #> [13502,]  268  287  289 #> [13503,]  267  287  289 #> [13504,]  267  287  289 #> [13505,]  267  287  289 #> [13506,]  266  286  288 #> [13507,]  267  287  289 #> [13508,]  266  286  288 #> [13509,]  266  286  288 #> [13510,]  268  287  289 #> [13511,]  267  287  289 #> [13512,]  266  286  288 #> [13513,]  267  287  289 #> [13514,]  267  287  289 #> [13515,]  266  286  288 #> [13516,]  267  287  289 #> [13517,]  267  287  289 #> [13518,]  267  287  289 #> [13519,]  267  287  289 #> [13520,]  267  287  289 #> [13521,]  268  287  289 #> [13522,]  267  287  289 #> [13523,]  267  287  289 #> [13524,]  267  287  289 #> [13525,]  267  287  289 #> [13526,]  266  286  288 #> [13527,]  267  287  289 #> [13528,]  267  287  289 #> [13529,]  268  287  289 #> [13530,]  267  287  289 #> [13531,]  267  287  289 #> [13532,]  267  287  289 #> [13533,]  268  287  289 #> [13534,]  267  287  289 #> [13535,]  267  287  289 #> [13536,]  267  287  289 #> [13537,]  267  287  289 #> [13538,]  267  287  289 #> [13539,]  267  287  289 #> [13540,]  267  287  289 #> [13541,]  267  287  289 #> [13542,]  267  287  289 #> [13543,]  266  286  288 #> [13544,]  267  287  289 #> [13545,]  267  287  289 #> [13546,]  266  286  288 #> [13547,]  267  287  289 #> [13548,]  267  287  289 #> [13549,]  267  287  289 #> [13550,]  267  287  289 #> [13551,]  266  286  288 #> [13552,]  267  287  289 #> [13553,]  267  287  289 #> [13554,]  267  287  289 #> [13555,]  267  287  289 #> [13556,]  266  286  288 #> [13557,]  267  287  289 #> [13558,]  267  287  289 #> [13559,]  267  287  289 #> [13560,]  268  287  289 #> [13561,]  266  286  288 #> [13562,]  267  287  289 #> [13563,]  267  287  289 #> [13564,]  266  286  288 #> [13565,]  267  287  289 #> [13566,]  266  286  288 #> [13567,]  267  287  289 #> [13568,]  267  287  289 #> [13569,]  267  287  289 #> [13570,]  268  287  289 #> [13571,]  267  287  289 #> [13572,]  267  287  289 #> [13573,]  267  287  289 #> [13574,]  267  287  289 #> [13575,]  267  287  289 #> [13576,]  266  286  288 #> [13577,]  267  287  289 #> [13578,]  267  287  289 #> [13579,]  267  287  289 #> [13580,]  267  287  289 #> [13581,]  267  287  289 #> [13582,]  267  287  289 #> [13583,]  267  287  289 #> [13584,]  267  287  289 #> [13585,]  267  287  289 #> [13586,]  268  287  289 #> [13587,]  267  287  289 #> [13588,]  267  287  289 #> [13589,]  267  287  289 #> [13590,]  267  287  289 #> [13591,]  267  287  289 #> [13592,]  267  287  289 #> [13593,]  267  287  289 #> [13594,]  266  286  288 #> [13595,]  267  287  289 #> [13596,]  267  287  289 #> [13597,]  267  287  289 #> [13598,]  267  287  289 #> [13599,]  267  287  289 #> [13600,]  267  287  289 #> [13601,]  269  288  291 #> [13602,]  269  288  290 #> [13603,]  269  288  290 #> [13604,]  269  288  290 #> [13605,]  269  288  290 #> [13606,]  269  288  290 #> [13607,]  269  288  290 #> [13608,]  269  288  290 #> [13609,]  269  288  291 #> [13610,]  269  288  290 #> [13611,]  269  288  291 #> [13612,]  269  288  290 #> [13613,]  269  288  291 #> [13614,]  269  288  290 #> [13615,]  269  288  290 #> [13616,]  269  288  290 #> [13617,]  269  288  291 #> [13618,]  269  288  291 #> [13619,]  269  288  290 #> [13620,]  269  288  291 #> [13621,]  269  288  290 #> [13622,]  269  288  290 #> [13623,]  269  288  290 #> [13624,]  269  288  290 #> [13625,]  269  288  290 #> [13626,]  269  288  290 #> [13627,]  269  288  291 #> [13628,]  269  288  291 #> [13629,]  269  288  291 #> [13630,]  269  288  290 #> [13631,]  269  288  290 #> [13632,]  269  288  290 #> [13633,]  269  288  291 #> [13634,]  269  288  290 #> [13635,]  269  288  290 #> [13636,]  269  288  291 #> [13637,]  269  288  290 #> [13638,]  269  288  291 #> [13639,]  269  288  291 #> [13640,]  269  288  290 #> [13641,]  269  288  290 #> [13642,]  269  288  291 #> [13643,]  269  288  290 #> [13644,]  269  288  290 #> [13645,]  269  288  290 #> [13646,]  269  288  290 #> [13647,]  269  288  290 #> [13648,]  269  288  290 #> [13649,]  269  288  290 #> [13650,]  269  288  290 #> [13651,]  269  288  291 #> [13652,]  269  288  290 #> [13653,]  269  288  291 #> [13654,]  269  288  291 #> [13655,]  269  288  290 #> [13656,]  269  288  291 #> [13657,]  269  288  290 #> [13658,]  269  288  291 #> [13659,]  269  288  290 #> [13660,]  269  288  290 #> [13661,]  269  288  290 #> [13662,]  269  288  291 #> [13663,]  269  288  290 #> [13664,]  269  288  290 #> [13665,]  269  288  291 #> [13666,]  269  288  291 #> [13667,]  269  288  290 #> [13668,]  269  288  290 #> [13669,]  269  288  290 #> [13670,]  269  288  290 #> [13671,]  269  288  290 #> [13672,]  269  288  290 #> [13673,]  269  288  290 #> [13674,]  269  288  290 #> [13675,]  269  288  290 #> [13676,]  269  288  290 #> [13677,]  269  288  291 #> [13678,]  269  288  290 #> [13679,]  269  288  291 #> [13680,]  269  288  290 #> [13681,]  269  288  290 #> [13682,]  269  288  291 #> [13683,]  269  288  291 #> [13684,]  269  288  291 #> [13685,]  269  288  291 #> [13686,]  269  288  290 #> [13687,]  269  288  291 #> [13688,]  269  288  290 #> [13689,]  269  288  291 #> [13690,]  269  288  291 #> [13691,]  269  288  291 #> [13692,]  269  288  290 #> [13693,]  269  288  291 #> [13694,]  269  288  291 #> [13695,]  269  288  290 #> [13696,]  269  288  290 #> [13697,]  269  288  290 #> [13698,]  269  288  290 #> [13699,]  269  288  290 #> [13700,]  269  288  290 #> [13701,]  270  289  292 #> [13702,]  270  289  292 #> [13703,]  270  289  292 #> [13704,]  270  289  292 #> [13705,]  270  289  292 #> [13706,]  270  289  292 #> [13707,]  270  289  292 #> [13708,]  271  290  293 #> [13709,]  271  290  293 #> [13710,]  270  289  292 #> [13711,]  270  289  292 #> [13712,]  270  289  292 #> [13713,]  270  289  292 #> [13714,]  270  289  292 #> [13715,]  270  289  292 #> [13716,]  270  289  292 #> [13717,]  270  289  292 #> [13718,]  270  289  292 #> [13719,]  270  289  292 #> [13720,]  270  289  292 #> [13721,]  270  289  292 #> [13722,]  270  289  292 #> [13723,]  270  289  292 #> [13724,]  270  289  292 #> [13725,]  270  289  292 #> [13726,]  271  290  293 #> [13727,]  270  289  292 #> [13728,]  270  289  292 #> [13729,]  270  289  292 #> [13730,]  270  289  292 #> [13731,]  270  289  292 #> [13732,]  270  289  292 #> [13733,]  270  289  292 #> [13734,]  270  289  292 #> [13735,]  270  289  292 #> [13736,]  270  289  292 #> [13737,]  270  289  292 #> [13738,]  270  289  292 #> [13739,]  270  289  292 #> [13740,]  270  289  292 #> [13741,]  270  289  292 #> [13742,]  270  289  292 #> [13743,]  271  290  293 #> [13744,]  270  289  292 #> [13745,]  270  289  292 #> [13746,]  270  289  292 #> [13747,]  270  289  292 #> [13748,]  270  289  292 #> [13749,]  270  289  292 #> [13750,]  270  289  292 #> [13751,]  270  289  292 #> [13752,]  270  289  292 #> [13753,]  270  289  292 #> [13754,]  270  289  292 #> [13755,]  270  289  292 #> [13756,]  271  290  293 #> [13757,]  270  289  292 #> [13758,]  270  289  292 #> [13759,]  270  289  292 #> [13760,]  270  289  292 #> [13761,]  271  290  293 #> [13762,]  270  289  292 #> [13763,]  270  289  292 #> [13764,]  271  290  293 #> [13765,]  270  289  292 #> [13766,]  270  289  292 #> [13767,]  270  289  292 #> [13768,]  270  289  292 #> [13769,]  270  289  292 #> [13770,]  270  289  292 #> [13771,]  270  289  292 #> [13772,]  270  289  292 #> [13773,]  270  289  292 #> [13774,]  270  289  292 #> [13775,]  270  289  292 #> [13776,]  271  290  293 #> [13777,]  270  289  292 #> [13778,]  270  289  292 #> [13779,]  270  289  292 #> [13780,]  270  289  292 #> [13781,]  270  289  292 #> [13782,]  270  289  292 #> [13783,]  270  289  292 #> [13784,]  270  289  292 #> [13785,]  270  289  292 #> [13786,]  270  289  292 #> [13787,]  270  289  292 #> [13788,]  270  289  292 #> [13789,]  270  289  292 #> [13790,]  270  289  292 #> [13791,]  270  289  292 #> [13792,]  270  289  292 #> [13793,]  270  289  292 #> [13794,]  271  290  293 #> [13795,]  270  289  292 #> [13796,]  270  289  292 #> [13797,]  270  289  292 #> [13798,]  270  289  292 #> [13799,]  270  289  292 #> [13800,]  270  289  292 #> [13801,]  272  291  294 #> [13802,]  272  291  294 #> [13803,]  272  291  294 #> [13804,]  273  292  295 #> [13805,]  272  291  294 #> [13806,]  272  291  294 #> [13807,]  272  291  294 #> [13808,]  272  291  294 #> [13809,]  272  291  294 #> [13810,]  272  291  294 #> [13811,]  272  291  294 #> [13812,]  272  291  294 #> [13813,]  272  291  294 #> [13814,]  273  292  296 #> [13815,]  272  291  294 #> [13816,]  272  291  294 #> [13817,]  272  291  294 #> [13818,]  272  291  294 #> [13819,]  273  292  295 #> [13820,]  272  291  294 #> [13821,]  272  291  294 #> [13822,]  272  291  294 #> [13823,]  272  291  294 #> [13824,]  272  291  294 #> [13825,]  272  291  294 #> [13826,]  272  291  294 #> [13827,]  273  292  295 #> [13828,]  272  291  294 #> [13829,]  272  291  294 #> [13830,]  272  291  294 #> [13831,]  272  291  294 #> [13832,]  272  291  294 #> [13833,]  272  291  294 #> [13834,]  272  291  294 #> [13835,]  272  291  294 #> [13836,]  272  291  294 #> [13837,]  272  291  294 #> [13838,]  272  291  294 #> [13839,]  272  291  294 #> [13840,]  272  291  294 #> [13841,]  273  292  296 #> [13842,]  272  291  294 #> [13843,]  272  291  294 #> [13844,]  272  291  294 #> [13845,]  272  291  294 #> [13846,]  272  291  294 #> [13847,]  272  291  294 #> [13848,]  273  292  295 #> [13849,]  272  291  294 #> [13850,]  272  291  294 #> [13851,]  272  291  294 #> [13852,]  272  291  294 #> [13853,]  272  291  294 #> [13854,]  272  291  294 #> [13855,]  272  291  294 #> [13856,]  272  291  294 #> [13857,]  272  291  294 #> [13858,]  272  291  294 #> [13859,]  272  291  294 #> [13860,]  272  291  294 #> [13861,]  273  292  296 #> [13862,]  272  291  294 #> [13863,]  272  291  294 #> [13864,]  272  291  294 #> [13865,]  272  291  294 #> [13866,]  272  291  294 #> [13867,]  272  291  294 #> [13868,]  272  291  294 #> [13869,]  273  292  295 #> [13870,]  272  291  294 #> [13871,]  272  291  294 #> [13872,]  272  291  294 #> [13873,]  272  291  294 #> [13874,]  272  291  294 #> [13875,]  272  291  294 #> [13876,]  272  291  294 #> [13877,]  272  291  294 #> [13878,]  272  291  294 #> [13879,]  272  291  294 #> [13880,]  272  291  294 #> [13881,]  272  291  294 #> [13882,]  273  292  295 #> [13883,]  272  291  294 #> [13884,]  272  291  294 #> [13885,]  272  291  294 #> [13886,]  272  291  294 #> [13887,]  272  291  294 #> [13888,]  272  291  294 #> [13889,]  272  291  294 #> [13890,]  272  291  294 #> [13891,]  272  291  294 #> [13892,]  273  292  296 #> [13893,]  273  292  295 #> [13894,]  272  291  294 #> [13895,]  272  291  294 #> [13896,]  273  292  296 #> [13897,]  273  292  296 #> [13898,]  272  291  294 #> [13899,]  272  291  294 #> [13900,]  272  291  294 #> [13901,]  275  293  298 #> [13902,]  274  294  297 #> [13903,]  274  295  297 #> [13904,]  274  295  297 #> [13905,]  275  293  298 #> [13906,]  274  294  297 #> [13907,]  274  295  297 #> [13908,]  274  295  297 #> [13909,]  274  295  297 #> [13910,]  275  293  298 #> [13911,]  275  293  298 #> [13912,]  275  293  298 #> [13913,]  274  295  297 #> [13914,]  275  293  298 #> [13915,]  275  293  298 #> [13916,]  274  295  297 #> [13917,]  275  293  298 #> [13918,]  275  293  298 #> [13919,]  274  294  297 #> [13920,]  274  295  297 #> [13921,]  274  295  297 #> [13922,]  275  293  298 #> [13923,]  274  294  297 #> [13924,]  274  295  297 #> [13925,]  274  295  297 #> [13926,]  275  293  298 #> [13927,]  275  293  298 #> [13928,]  274  295  297 #> [13929,]  274  294  297 #> [13930,]  274  294  297 #> [13931,]  275  293  298 #> [13932,]  275  293  298 #> [13933,]  274  295  297 #> [13934,]  274  294  297 #> [13935,]  274  294  297 #> [13936,]  274  295  297 #> [13937,]  274  294  297 #> [13938,]  275  293  298 #> [13939,]  274  295  297 #> [13940,]  274  295  297 #> [13941,]  274  295  297 #> [13942,]  274  294  297 #> [13943,]  275  293  298 #> [13944,]  274  294  297 #> [13945,]  274  295  297 #> [13946,]  274  295  297 #> [13947,]  275  293  298 #> [13948,]  274  294  297 #> [13949,]  274  295  297 #> [13950,]  274  295  297 #> [13951,]  274  295  297 #> [13952,]  275  293  298 #> [13953,]  274  295  297 #> [13954,]  274  295  297 #> [13955,]  274  295  297 #> [13956,]  274  294  297 #> [13957,]  274  295  297 #> [13958,]  275  293  298 #> [13959,]  275  293  298 #> [13960,]  274  294  297 #> [13961,]  275  293  298 #> [13962,]  274  295  297 #> [13963,]  274  294  297 #> [13964,]  274  294  297 #> [13965,]  274  294  297 #> [13966,]  275  293  298 #> [13967,]  274  295  297 #> [13968,]  274  294  297 #> [13969,]  274  295  297 #> [13970,]  275  293  298 #> [13971,]  275  293  298 #> [13972,]  274  295  297 #> [13973,]  274  295  297 #> [13974,]  274  295  297 #> [13975,]  275  293  298 #> [13976,]  274  295  297 #> [13977,]  275  293  298 #> [13978,]  274  294  297 #> [13979,]  275  293  298 #> [13980,]  274  295  297 #> [13981,]  274  294  297 #> [13982,]  274  295  297 #> [13983,]  274  295  297 #> [13984,]  274  295  297 #> [13985,]  274  295  297 #> [13986,]  274  295  297 #> [13987,]  275  293  298 #> [13988,]  274  295  297 #> [13989,]  274  295  297 #> [13990,]  275  293  298 #> [13991,]  275  293  298 #> [13992,]  275  293  298 #> [13993,]  274  295  297 #> [13994,]  274  294  297 #> [13995,]  275  293  298 #> [13996,]  274  294  297 #> [13997,]  274  295  297 #> [13998,]  274  295  297 #> [13999,]  274  295  297 #> [14000,]  275  293  298 #> [14001,]  276  296  300 #> [14002,]  277  297  300 #> [14003,]  276  296  300 #> [14004,]  276  296  299 #> [14005,]  276  296  300 #> [14006,]  276  296  300 #> [14007,]  276  296  300 #> [14008,]  276  296  299 #> [14009,]  277  297  299 #> [14010,]  277  297  299 #> [14011,]  276  296  300 #> [14012,]  277  297  300 #> [14013,]  277  297  300 #> [14014,]  276  296  300 #> [14015,]  276  296  300 #> [14016,]  276  296  300 #> [14017,]  277  297  300 #> [14018,]  276  296  300 #> [14019,]  276  296  300 #> [14020,]  276  296  300 #> [14021,]  277  297  300 #> [14022,]  276  296  300 #> [14023,]  276  296  300 #> [14024,]  276  296  300 #> [14025,]  276  296  300 #> [14026,]  276  296  300 #> [14027,]  276  296  300 #> [14028,]  276  296  300 #> [14029,]  277  297  300 #> [14030,]  276  296  300 #> [14031,]  276  296  300 #> [14032,]  277  297  300 #> [14033,]  277  297  300 #> [14034,]  276  296  300 #> [14035,]  276  296  300 #> [14036,]  276  296  300 #> [14037,]  276  296  300 #> [14038,]  276  296  300 #> [14039,]  276  296  300 #> [14040,]  277  297  300 #> [14041,]  276  296  300 #> [14042,]  276  296  300 #> [14043,]  276  296  299 #> [14044,]  276  296  300 #> [14045,]  276  296  300 #> [14046,]  276  296  300 #> [14047,]  276  296  300 #> [14048,]  276  296  300 #> [14049,]  276  296  300 #> [14050,]  276  296  300 #> [14051,]  276  296  299 #> [14052,]  276  296  300 #> [14053,]  277  297  300 #> [14054,]  276  296  300 #> [14055,]  276  296  300 #> [14056,]  276  296  300 #> [14057,]  276  296  300 #> [14058,]  276  296  300 #> [14059,]  276  296  300 #> [14060,]  277  297  299 #> [14061,]  276  296  300 #> [14062,]  276  296  300 #> [14063,]  277  297  300 #> [14064,]  276  296  300 #> [14065,]  276  296  300 #> [14066,]  276  296  300 #> [14067,]  276  296  299 #> [14068,]  276  296  300 #> [14069,]  276  296  300 #> [14070,]  277  297  300 #> [14071,]  276  296  300 #> [14072,]  276  296  300 #> [14073,]  276  296  300 #> [14074,]  276  296  300 #> [14075,]  277  297  300 #> [14076,]  276  296  300 #> [14077,]  276  296  300 #> [14078,]  276  296  300 #> [14079,]  276  296  300 #> [14080,]  277  297  300 #> [14081,]  277  297  300 #> [14082,]  276  296  300 #> [14083,]  276  296  300 #> [14084,]  276  296  300 #> [14085,]  276  296  299 #> [14086,]  277  297  300 #> [14087,]  276  296  300 #> [14088,]  276  296  300 #> [14089,]  276  296  300 #> [14090,]  276  296  300 #> [14091,]  276  296  299 #> [14092,]  276  296  300 #> [14093,]  276  296  300 #> [14094,]  276  296  300 #> [14095,]  276  296  299 #> [14096,]  276  296  300 #> [14097,]  276  296  300 #> [14098,]  276  296  300 #> [14099,]  276  296  300 #> [14100,]  276  296  300 #> [14101,]  279  299  302 #> [14102,]  278  298  301 #> [14103,]  278  298  301 #> [14104,]  279  299  302 #> [14105,]  279  299  302 #> [14106,]  279  299  302 #> [14107,]  278  298  301 #> [14108,]  279  299  302 #> [14109,]  279  299  302 #> [14110,]  278  298  301 #> [14111,]  279  299  302 #> [14112,]  279  299  302 #> [14113,]  278  298  301 #> [14114,]  279  299  302 #> [14115,]  279  299  302 #> [14116,]  278  298  301 #> [14117,]  278  298  301 #> [14118,]  278  298  301 #> [14119,]  278  298  301 #> [14120,]  279  299  302 #> [14121,]  278  298  301 #> [14122,]  278  298  301 #> [14123,]  278  298  301 #> [14124,]  278  298  301 #> [14125,]  278  298  301 #> [14126,]  279  299  302 #> [14127,]  278  298  301 #> [14128,]  279  299  302 #> [14129,]  278  298  301 #> [14130,]  278  298  301 #> [14131,]  278  298  301 #> [14132,]  278  298  301 #> [14133,]  279  299  302 #> [14134,]  278  298  301 #> [14135,]  278  298  301 #> [14136,]  278  298  301 #> [14137,]  278  298  301 #> [14138,]  279  299  302 #> [14139,]  278  298  301 #> [14140,]  278  298  301 #> [14141,]  279  299  302 #> [14142,]  279  299  302 #> [14143,]  279  299  302 #> [14144,]  278  298  301 #> [14145,]  279  299  302 #> [14146,]  279  299  302 #> [14147,]  278  298  301 #> [14148,]  278  298  301 #> [14149,]  278  298  301 #> [14150,]  279  299  302 #> [14151,]  279  299  302 #> [14152,]  279  299  302 #> [14153,]  279  299  302 #> [14154,]  278  298  301 #> [14155,]  279  299  302 #> [14156,]  279  299  302 #> [14157,]  279  299  302 #> [14158,]  279  299  302 #> [14159,]  278  298  301 #> [14160,]  279  299  302 #> [14161,]  279  299  302 #> [14162,]  278  298  301 #> [14163,]  279  299  302 #> [14164,]  279  299  302 #> [14165,]  279  299  302 #> [14166,]  279  299  302 #> [14167,]  279  299  302 #> [14168,]  279  299  302 #> [14169,]  279  299  302 #> [14170,]  278  298  301 #> [14171,]  279  299  302 #> [14172,]  279  299  302 #> [14173,]  279  299  302 #> [14174,]  279  299  302 #> [14175,]  279  299  302 #> [14176,]  279  299  302 #> [14177,]  278  298  301 #> [14178,]  279  299  302 #> [14179,]  278  298  301 #> [14180,]  278  298  301 #> [14181,]  279  299  302 #> [14182,]  278  298  301 #> [14183,]  278  298  301 #> [14184,]  279  299  302 #> [14185,]  278  298  301 #> [14186,]  278  298  301 #> [14187,]  279  299  302 #> [14188,]  279  299  302 #> [14189,]  279  299  302 #> [14190,]  279  299  302 #> [14191,]  279  299  302 #> [14192,]  279  299  302 #> [14193,]  278  298  301 #> [14194,]  279  299  302 #> [14195,]  278  298  301 #> [14196,]  279  299  302 #> [14197,]  279  299  302 #> [14198,]  278  298  301 #> [14199,]  279  299  302 #> [14200,]  278  298  301 #> [14201,]  281  301  304 #> [14202,]  281  301  304 #> [14203,]  281  301  304 #> [14204,]  280  300  303 #> [14205,]  281  301  304 #> [14206,]  281  301  304 #> [14207,]  281  301  304 #> [14208,]  280  300  303 #> [14209,]  280  300  303 #> [14210,]  281  301  304 #> [14211,]  280  300  303 #> [14212,]  281  301  304 #> [14213,]  281  301  304 #> [14214,]  281  301  304 #> [14215,]  281  301  304 #> [14216,]  281  301  304 #> [14217,]  280  300  303 #> [14218,]  281  301  304 #> [14219,]  281  301  304 #> [14220,]  281  301  304 #> [14221,]  281  301  304 #> [14222,]  280  300  303 #> [14223,]  281  301  304 #> [14224,]  281  301  304 #> [14225,]  281  301  304 #> [14226,]  281  301  304 #> [14227,]  280  300  303 #> [14228,]  281  301  304 #> [14229,]  281  301  304 #> [14230,]  281  301  304 #> [14231,]  281  301  304 #> [14232,]  281  301  304 #> [14233,]  281  301  304 #> [14234,]  281  301  304 #> [14235,]  280  300  303 #> [14236,]  281  301  304 #> [14237,]  281  301  304 #> [14238,]  281  301  304 #> [14239,]  281  301  304 #> [14240,]  281  301  304 #> [14241,]  281  301  304 #> [14242,]  281  301  304 #> [14243,]  281  301  304 #> [14244,]  280  300  303 #> [14245,]  281  301  304 #> [14246,]  281  301  304 #> [14247,]  281  301  304 #> [14248,]  281  301  304 #> [14249,]  281  301  304 #> [14250,]  281  301  304 #> [14251,]  281  301  304 #> [14252,]  280  300  303 #> [14253,]  281  301  304 #> [14254,]  281  301  304 #> [14255,]  281  301  304 #> [14256,]  281  301  304 #> [14257,]  281  301  304 #> [14258,]  280  300  303 #> [14259,]  281  301  304 #> [14260,]  281  301  304 #> [14261,]  281  301  304 #> [14262,]  281  301  304 #> [14263,]  281  301  304 #> [14264,]  281  301  304 #> [14265,]  281  301  304 #> [14266,]  280  300  303 #> [14267,]  281  301  304 #> [14268,]  281  301  304 #> [14269,]  281  301  304 #> [14270,]  281  301  304 #> [14271,]  281  301  304 #> [14272,]  281  301  304 #> [14273,]  281  301  304 #> [14274,]  281  301  304 #> [14275,]  281  301  304 #> [14276,]  281  301  304 #> [14277,]  281  301  304 #> [14278,]  281  301  304 #> [14279,]  281  301  304 #> [14280,]  281  301  304 #> [14281,]  280  300  303 #> [14282,]  280  300  303 #> [14283,]  281  301  304 #> [14284,]  281  301  304 #> [14285,]  281  301  304 #> [14286,]  281  301  304 #> [14287,]  280  300  303 #> [14288,]  281  301  304 #> [14289,]  281  301  304 #> [14290,]  280  300  303 #> [14291,]  281  301  304 #> [14292,]  280  300  303 #> [14293,]  281  301  304 #> [14294,]  281  301  304 #> [14295,]  280  300  303 #> [14296,]  281  301  304 #> [14297,]  281  301  304 #> [14298,]  281  301  304 #> [14299,]  280  300  303 #> [14300,]  281  301  304 #> [14301,]  282  302  306 #> [14302,]  283  303  306 #> [14303,]  282  302  306 #> [14304,]  282  302  306 #> [14305,]  284  304  306 #> [14306,]  282  302  306 #> [14307,]  284  304  306 #> [14308,]  282  302  306 #> [14309,]  284  304  306 #> [14310,]  284  304  306 #> [14311,]  282  302  306 #> [14312,]  283  303  305 #> [14313,]  284  304  306 #> [14314,]  282  302  305 #> [14315,]  282  302  306 #> [14316,]  282  302  306 #> [14317,]  283  303  306 #> [14318,]  284  304  306 #> [14319,]  282  302  306 #> [14320,]  284  304  306 #> [14321,]  284  304  306 #> [14322,]  284  304  306 #> [14323,]  283  303  306 #> [14324,]  284  304  306 #> [14325,]  284  304  306 #> [14326,]  282  302  305 #> [14327,]  284  304  306 #> [14328,]  282  302  306 #> [14329,]  283  303  306 #> [14330,]  284  304  306 #> [14331,]  283  303  306 #> [14332,]  284  304  306 #> [14333,]  284  304  306 #> [14334,]  282  302  306 #> [14335,]  282  302  306 #> [14336,]  284  304  306 #> [14337,]  282  302  306 #> [14338,]  282  302  306 #> [14339,]  284  304  306 #> [14340,]  284  304  306 #> [14341,]  284  304  306 #> [14342,]  282  302  306 #> [14343,]  283  303  306 #> [14344,]  283  303  306 #> [14345,]  282  302  306 #> [14346,]  282  302  306 #> [14347,]  283  303  306 #> [14348,]  283  303  306 #> [14349,]  282  302  306 #> [14350,]  284  304  306 #> [14351,]  284  304  306 #> [14352,]  282  302  306 #> [14353,]  284  304  306 #> [14354,]  284  304  306 #> [14355,]  282  302  306 #> [14356,]  282  302  306 #> [14357,]  282  302  306 #> [14358,]  284  304  306 #> [14359,]  282  302  306 #> [14360,]  284  304  306 #> [14361,]  284  304  306 #> [14362,]  282  302  306 #> [14363,]  283  303  306 #> [14364,]  282  302  306 #> [14365,]  282  302  306 #> [14366,]  284  304  306 #> [14367,]  282  302  306 #> [14368,]  282  302  306 #> [14369,]  282  302  305 #> [14370,]  283  303  306 #> [14371,]  284  304  306 #> [14372,]  282  302  306 #> [14373,]  282  302  306 #> [14374,]  284  304  306 #> [14375,]  283  303  306 #> [14376,]  284  304  306 #> [14377,]  282  302  306 #> [14378,]  283  303  306 #> [14379,]  282  302  306 #> [14380,]  284  304  305 #> [14381,]  283  303  306 #> [14382,]  282  302  306 #> [14383,]  284  304  306 #> [14384,]  284  304  306 #> [14385,]  282  302  306 #> [14386,]  284  304  306 #> [14387,]  284  304  306 #> [14388,]  284  304  306 #> [14389,]  282  302  306 #> [14390,]  284  304  306 #> [14391,]  282  302  306 #> [14392,]  283  303  306 #> [14393,]  284  304  306 #> [14394,]  282  302  306 #> [14395,]  283  303  306 #> [14396,]  282  302  306 #> [14397,]  282  302  306 #> [14398,]  282  302  306 #> [14399,]  284  304  306 #> [14400,]  282  302  306 #> [14401,]  286  306  308 #> [14402,]  285  305  307 #> [14403,]  286  306  308 #> [14404,]  286  306  308 #> [14405,]  285  305  307 #> [14406,]  285  305  307 #> [14407,]  286  306  308 #> [14408,]  285  305  307 #> [14409,]  286  306  308 #> [14410,]  286  306  308 #> [14411,]  285  305  307 #> [14412,]  285  305  307 #> [14413,]  286  306  308 #> [14414,]  286  306  308 #> [14415,]  285  305  307 #> [14416,]  286  306  308 #> [14417,]  285  305  307 #> [14418,]  285  305  307 #> [14419,]  285  305  307 #> [14420,]  286  306  308 #> [14421,]  285  305  307 #> [14422,]  286  306  308 #> [14423,]  285  305  307 #> [14424,]  286  306  308 #> [14425,]  286  306  308 #> [14426,]  285  305  307 #> [14427,]  285  305  307 #> [14428,]  286  306  308 #> [14429,]  285  305  307 #> [14430,]  285  305  307 #> [14431,]  285  305  307 #> [14432,]  285  305  307 #> [14433,]  285  305  307 #> [14434,]  285  305  307 #> [14435,]  285  305  307 #> [14436,]  286  306  308 #> [14437,]  285  305  307 #> [14438,]  285  305  307 #> [14439,]  286  306  308 #> [14440,]  285  305  307 #> [14441,]  286  306  308 #> [14442,]  285  305  307 #> [14443,]  285  305  307 #> [14444,]  285  305  307 #> [14445,]  286  306  308 #> [14446,]  285  305  307 #> [14447,]  285  305  307 #> [14448,]  285  305  307 #> [14449,]  286  306  308 #> [14450,]  286  306  308 #> [14451,]  285  305  307 #> [14452,]  286  306  308 #> [14453,]  286  306  308 #> [14454,]  286  306  308 #> [14455,]  286  306  308 #> [14456,]  285  305  307 #> [14457,]  286  306  308 #> [14458,]  286  306  308 #> [14459,]  286  306  308 #> [14460,]  285  305  307 #> [14461,]  285  305  307 #> [14462,]  285  305  307 #> [14463,]  285  305  307 #> [14464,]  285  305  307 #> [14465,]  285  305  307 #> [14466,]  285  305  307 #> [14467,]  286  306  308 #> [14468,]  285  305  307 #> [14469,]  285  305  307 #> [14470,]  285  305  307 #> [14471,]  286  306  308 #> [14472,]  286  306  308 #> [14473,]  286  306  308 #> [14474,]  285  305  307 #> [14475,]  285  305  307 #> [14476,]  286  306  308 #> [14477,]  285  305  307 #> [14478,]  285  305  307 #> [14479,]  285  305  307 #> [14480,]  285  305  307 #> [14481,]  285  305  307 #> [14482,]  285  305  307 #> [14483,]  285  305  307 #> [14484,]  285  305  307 #> [14485,]  286  306  308 #> [14486,]  286  306  308 #> [14487,]  286  306  308 #> [14488,]  286  306  308 #> [14489,]  285  305  307 #> [14490,]  286  306  308 #> [14491,]  286  306  308 #> [14492,]  285  305  307 #> [14493,]  285  305  307 #> [14494,]  285  305  307 #> [14495,]  285  305  307 #> [14496,]  285  305  307 #> [14497,]  285  305  307 #> [14498,]  285  305  307 #> [14499,]  285  305  307 #> [14500,]  285  305  307 #> [14501,]  288  309  310 #> [14502,]  288  309  310 #> [14503,]  287  307  309 #> [14504,]  287  307  309 #> [14505,]  288  309  310 #> [14506,]  288  308  310 #> [14507,]  287  307  309 #> [14508,]  287  307  309 #> [14509,]  288  309  310 #> [14510,]  287  307  309 #> [14511,]  288  309  310 #> [14512,]  287  307  309 #> [14513,]  288  309  310 #> [14514,]  287  307  309 #> [14515,]  288  309  310 #> [14516,]  287  307  309 #> [14517,]  288  309  310 #> [14518,]  288  309  310 #> [14519,]  288  309  310 #> [14520,]  288  308  310 #> [14521,]  288  308  310 #> [14522,]  288  309  310 #> [14523,]  287  307  309 #> [14524,]  288  309  310 #> [14525,]  287  307  309 #> [14526,]  287  307  309 #> [14527,]  288  309  310 #> [14528,]  288  309  310 #> [14529,]  288  308  310 #> [14530,]  287  307  309 #> [14531,]  287  307  309 #> [14532,]  287  307  309 #> [14533,]  288  309  310 #> [14534,]  287  307  309 #> [14535,]  287  307  309 #> [14536,]  288  308  310 #> [14537,]  287  307  309 #> [14538,]  288  309  310 #> [14539,]  288  309  310 #> [14540,]  287  307  309 #> [14541,]  288  308  310 #> [14542,]  288  308  310 #> [14543,]  288  309  310 #> [14544,]  287  307  309 #> [14545,]  287  307  309 #> [14546,]  287  307  309 #> [14547,]  287  307  309 #> [14548,]  288  309  310 #> [14549,]  287  307  309 #> [14550,]  288  308  310 #> [14551,]  288  309  310 #> [14552,]  287  307  309 #> [14553,]  288  308  310 #> [14554,]  288  308  310 #> [14555,]  287  307  309 #> [14556,]  288  308  310 #> [14557,]  287  307  309 #> [14558,]  288  309  310 #> [14559,]  287  307  309 #> [14560,]  287  307  309 #> [14561,]  288  309  310 #> [14562,]  288  309  310 #> [14563,]  288  309  310 #> [14564,]  288  308  310 #> [14565,]  288  308  310 #> [14566,]  288  309  310 #> [14567,]  287  307  309 #> [14568,]  287  307  309 #> [14569,]  287  307  309 #> [14570,]  288  309  310 #> [14571,]  287  307  309 #> [14572,]  287  307  309 #> [14573,]  288  308  310 #> [14574,]  287  307  309 #> [14575,]  287  307  309 #> [14576,]  287  307  309 #> [14577,]  288  309  310 #> [14578,]  287  307  309 #> [14579,]  288  309  310 #> [14580,]  287  307  309 #> [14581,]  288  308  310 #> [14582,]  288  308  310 #> [14583,]  288  309  310 #> [14584,]  288  308  310 #> [14585,]  288  308  310 #> [14586,]  287  307  309 #> [14587,]  288  309  310 #> [14588,]  287  307  309 #> [14589,]  288  308  310 #> [14590,]  288  309  310 #> [14591,]  288  309  310 #> [14592,]  287  307  309 #> [14593,]  288  309  310 #> [14594,]  288  308  310 #> [14595,]  287  307  309 #> [14596,]  287  307  309 #> [14597,]  287  307  309 #> [14598,]  287  307  309 #> [14599,]  288  308  310 #> [14600,]  288  309  310 #> [14601,]  290  311  312 #> [14602,]  290  310  311 #> [14603,]  289  311  312 #> [14604,]  290  311  312 #> [14605,]  290  311  312 #> [14606,]  290  310  311 #> [14607,]  290  311  312 #> [14608,]  290  311  312 #> [14609,]  290  311  312 #> [14610,]  290  311  312 #> [14611,]  290  310  311 #> [14612,]  289  310  311 #> [14613,]  290  311  312 #> [14614,]  289  311  312 #> [14615,]  290  310  311 #> [14616,]  290  311  312 #> [14617,]  290  310  311 #> [14618,]  290  311  312 #> [14619,]  290  311  312 #> [14620,]  290  311  312 #> [14621,]  290  311  312 #> [14622,]  290  311  312 #> [14623,]  290  310  311 #> [14624,]  290  311  312 #> [14625,]  290  311  312 #> [14626,]  289  311  312 #> [14627,]  290  311  312 #> [14628,]  290  311  312 #> [14629,]  290  310  311 #> [14630,]  290  310  311 #> [14631,]  290  310  311 #> [14632,]  289  311  312 #> [14633,]  290  311  312 #> [14634,]  290  310  311 #> [14635,]  290  310  311 #> [14636,]  290  311  312 #> [14637,]  290  310  311 #> [14638,]  290  311  312 #> [14639,]  290  311  312 #> [14640,]  290  311  312 #> [14641,]  290  311  312 #> [14642,]  290  310  311 #> [14643,]  290  310  311 #> [14644,]  290  310  311 #> [14645,]  290  311  312 #> [14646,]  290  311  312 #> [14647,]  290  310  311 #> [14648,]  289  310  311 #> [14649,]  290  311  312 #> [14650,]  290  311  312 #> [14651,]  289  311  312 #> [14652,]  290  311  312 #> [14653,]  290  311  312 #> [14654,]  289  311  312 #> [14655,]  290  311  312 #> [14656,]  290  310  311 #> [14657,]  290  311  312 #> [14658,]  290  311  312 #> [14659,]  290  311  312 #> [14660,]  290  310  311 #> [14661,]  290  310  311 #> [14662,]  290  311  312 #> [14663,]  290  310  311 #> [14664,]  290  310  311 #> [14665,]  290  310  311 #> [14666,]  289  310  311 #> [14667,]  290  311  312 #> [14668,]  290  311  312 #> [14669,]  289  311  312 #> [14670,]  290  310  311 #> [14671,]  290  311  312 #> [14672,]  290  311  312 #> [14673,]  290  311  312 #> [14674,]  290  311  312 #> [14675,]  290  310  311 #> [14676,]  290  311  312 #> [14677,]  290  311  312 #> [14678,]  290  310  311 #> [14679,]  290  310  311 #> [14680,]  289  311  312 #> [14681,]  290  310  311 #> [14682,]  290  311  312 #> [14683,]  290  311  312 #> [14684,]  290  311  312 #> [14685,]  290  311  312 #> [14686,]  290  311  312 #> [14687,]  290  311  312 #> [14688,]  290  311  312 #> [14689,]  289  311  312 #> [14690,]  290  311  312 #> [14691,]  290  311  312 #> [14692,]  290  310  311 #> [14693,]  290  311  312 #> [14694,]  290  310  311 #> [14695,]  290  310  311 #> [14696,]  290  310  311 #> [14697,]  290  311  312 #> [14698,]  290  311  312 #> [14699,]  290  311  312 #> [14700,]  290  310  311 #> [14701,]  292  313  314 #> [14702,]  292  313  314 #> [14703,]  291  312  313 #> [14704,]  291  312  313 #> [14705,]  291  312  313 #> [14706,]  291  312  313 #> [14707,]  292  313  314 #> [14708,]  292  313  314 #> [14709,]  291  312  313 #> [14710,]  291  312  313 #> [14711,]  291  312  313 #> [14712,]  292  313  314 #> [14713,]  292  313  314 #> [14714,]  291  312  313 #> [14715,]  292  313  314 #> [14716,]  292  313  314 #> [14717,]  292  313  314 #> [14718,]  292  313  314 #> [14719,]  292  313  314 #> [14720,]  292  313  314 #> [14721,]  291  312  313 #> [14722,]  292  313  315 #> [14723,]  292  313  314 #> [14724,]  291  312  313 #> [14725,]  291  312  313 #> [14726,]  292  313  314 #> [14727,]  292  313  314 #> [14728,]  291  312  313 #> [14729,]  292  313  315 #> [14730,]  292  313  314 #> [14731,]  291  312  313 #> [14732,]  291  312  313 #> [14733,]  292  313  314 #> [14734,]  291  312  313 #> [14735,]  291  312  313 #> [14736,]  292  313  314 #> [14737,]  292  313  314 #> [14738,]  292  313  314 #> [14739,]  291  312  313 #> [14740,]  291  312  313 #> [14741,]  292  313  314 #> [14742,]  291  312  313 #> [14743,]  292  313  314 #> [14744,]  292  313  314 #> [14745,]  292  313  314 #> [14746,]  292  313  314 #> [14747,]  291  312  313 #> [14748,]  291  312  313 #> [14749,]  292  313  314 #> [14750,]  292  313  314 #> [14751,]  292  313  314 #> [14752,]  291  312  313 #> [14753,]  292  313  314 #> [14754,]  291  312  313 #> [14755,]  292  313  314 #> [14756,]  292  313  314 #> [14757,]  291  312  313 #> [14758,]  292  313  315 #> [14759,]  292  313  314 #> [14760,]  292  313  314 #> [14761,]  292  313  314 #> [14762,]  291  312  313 #> [14763,]  292  313  314 #> [14764,]  292  313  315 #> [14765,]  291  312  313 #> [14766,]  292  313  314 #> [14767,]  292  313  314 #> [14768,]  292  313  314 #> [14769,]  292  313  314 #> [14770,]  291  312  313 #> [14771,]  292  313  314 #> [14772,]  291  312  313 #> [14773,]  292  313  314 #> [14774,]  291  312  313 #> [14775,]  292  313  314 #> [14776,]  291  312  313 #> [14777,]  292  313  315 #> [14778,]  292  313  314 #> [14779,]  291  312  313 #> [14780,]  292  313  314 #> [14781,]  292  313  314 #> [14782,]  291  312  313 #> [14783,]  292  313  314 #> [14784,]  292  313  314 #> [14785,]  292  313  314 #> [14786,]  292  313  314 #> [14787,]  292  313  315 #> [14788,]  292  313  314 #> [14789,]  292  313  314 #> [14790,]  292  313  314 #> [14791,]  291  312  313 #> [14792,]  292  313  314 #> [14793,]  292  313  314 #> [14794,]  292  313  314 #> [14795,]  292  313  314 #> [14796,]  292  313  314 #> [14797,]  292  313  314 #> [14798,]  291  312  313 #> [14799,]  292  313  314 #> [14800,]  292  313  314 #> [14801,]  294  315  316 #> [14802,]  294  315  316 #> [14803,]  294  315  316 #> [14804,]  294  315  317 #> [14805,]  294  315  316 #> [14806,]  294  315  317 #> [14807,]  294  315  316 #> [14808,]  294  315  316 #> [14809,]  294  315  317 #> [14810,]  294  315  317 #> [14811,]  294  315  317 #> [14812,]  294  315  317 #> [14813,]  294  315  316 #> [14814,]  294  315  317 #> [14815,]  294  315  317 #> [14816,]  294  315  316 #> [14817,]  294  315  316 #> [14818,]  294  315  317 #> [14819,]  294  315  317 #> [14820,]  294  315  316 #> [14821,]  294  315  317 #> [14822,]  294  315  316 #> [14823,]  294  315  316 #> [14824,]  294  315  316 #> [14825,]  293  314  316 #> [14826,]  294  315  317 #> [14827,]  294  315  317 #> [14828,]  294  315  316 #> [14829,]  294  315  316 #> [14830,]  294  315  317 #> [14831,]  294  315  317 #> [14832,]  294  315  317 #> [14833,]  294  315  317 #> [14834,]  294  315  316 #> [14835,]  294  315  316 #> [14836,]  294  315  317 #> [14837,]  294  315  316 #> [14838,]  294  315  317 #> [14839,]  294  315  316 #> [14840,]  294  315  316 #> [14841,]  294  315  317 #> [14842,]  294  315  317 #> [14843,]  294  315  316 #> [14844,]  294  315  316 #> [14845,]  294  315  316 #> [14846,]  294  315  316 #> [14847,]  294  315  316 #> [14848,]  294  315  317 #> [14849,]  294  315  316 #> [14850,]  294  315  316 #> [14851,]  294  315  316 #> [14852,]  294  315  316 #> [14853,]  294  315  316 #> [14854,]  294  315  316 #> [14855,]  294  315  316 #> [14856,]  293  314  316 #> [14857,]  294  315  316 #> [14858,]  294  315  317 #> [14859,]  294  315  316 #> [14860,]  294  315  317 #> [14861,]  294  315  317 #> [14862,]  294  315  317 #> [14863,]  294  315  316 #> [14864,]  294  315  317 #> [14865,]  293  314  316 #> [14866,]  294  315  316 #> [14867,]  294  315  316 #> [14868,]  294  315  317 #> [14869,]  294  315  317 #> [14870,]  294  315  316 #> [14871,]  294  315  316 #> [14872,]  294  315  316 #> [14873,]  294  315  316 #> [14874,]  294  315  317 #> [14875,]  294  315  317 #> [14876,]  294  315  316 #> [14877,]  294  315  316 #> [14878,]  294  315  316 #> [14879,]  294  315  316 #> [14880,]  293  314  316 #> [14881,]  294  315  316 #> [14882,]  294  315  317 #> [14883,]  294  315  316 #> [14884,]  294  315  316 #> [14885,]  293  314  317 #> [14886,]  294  315  316 #> [14887,]  294  315  316 #> [14888,]  294  315  316 #> [14889,]  293  314  316 #> [14890,]  294  315  316 #> [14891,]  294  315  316 #> [14892,]  294  315  317 #> [14893,]  294  315  317 #> [14894,]  294  315  316 #> [14895,]  294  315  316 #> [14896,]  294  315  317 #> [14897,]  294  315  317 #> [14898,]  294  315  316 #> [14899,]  294  315  317 #> [14900,]  294  315  316 #> [14901,]  295  316  318 #> [14902,]  296  317  319 #> [14903,]  295  316  318 #> [14904,]  295  316  318 #> [14905,]  295  316  318 #> [14906,]  295  316  318 #> [14907,]  295  316  318 #> [14908,]  295  316  318 #> [14909,]  295  316  318 #> [14910,]  296  317  319 #> [14911,]  295  316  318 #> [14912,]  296  317  319 #> [14913,]  295  316  318 #> [14914,]  295  316  318 #> [14915,]  295  316  318 #> [14916,]  295  316  318 #> [14917,]  295  316  318 #> [14918,]  295  316  318 #> [14919,]  295  316  318 #> [14920,]  295  316  318 #> [14921,]  296  317  319 #> [14922,]  295  316  318 #> [14923,]  295  316  318 #> [14924,]  295  316  318 #> [14925,]  295  316  318 #> [14926,]  295  316  318 #> [14927,]  295  316  318 #> [14928,]  295  316  318 #> [14929,]  295  316  318 #> [14930,]  295  316  318 #> [14931,]  295  316  318 #> [14932,]  295  316  318 #> [14933,]  295  316  318 #> [14934,]  295  316  318 #> [14935,]  295  316  318 #> [14936,]  295  316  318 #> [14937,]  295  316  318 #> [14938,]  295  316  318 #> [14939,]  295  316  318 #> [14940,]  295  316  318 #> [14941,]  295  316  318 #> [14942,]  295  316  318 #> [14943,]  295  316  318 #> [14944,]  295  316  318 #> [14945,]  295  316  318 #> [14946,]  295  316  318 #> [14947,]  295  316  318 #> [14948,]  295  316  318 #> [14949,]  295  316  318 #> [14950,]  295  316  318 #> [14951,]  295  316  318 #> [14952,]  295  316  318 #> [14953,]  295  316  318 #> [14954,]  295  316  318 #> [14955,]  295  316  318 #> [14956,]  295  316  318 #> [14957,]  295  316  318 #> [14958,]  295  316  318 #> [14959,]  295  316  318 #> [14960,]  295  316  318 #> [14961,]  295  316  318 #> [14962,]  295  316  318 #> [14963,]  295  316  318 #> [14964,]  295  316  318 #> [14965,]  295  316  318 #> [14966,]  295  316  318 #> [14967,]  295  316  318 #> [14968,]  295  316  318 #> [14969,]  295  316  318 #> [14970,]  295  316  318 #> [14971,]  295  316  318 #> [14972,]  295  316  318 #> [14973,]  295  316  318 #> [14974,]  295  316  318 #> [14975,]  295  316  318 #> [14976,]  295  316  318 #> [14977,]  295  316  318 #> [14978,]  295  316  318 #> [14979,]  295  316  318 #> [14980,]  295  316  318 #> [14981,]  295  316  318 #> [14982,]  295  316  318 #> [14983,]  295  316  318 #> [14984,]  295  316  318 #> [14985,]  295  316  318 #> [14986,]  296  317  319 #> [14987,]  295  316  318 #> [14988,]  295  316  318 #> [14989,]  295  316  318 #> [14990,]  295  316  318 #> [14991,]  295  316  318 #> [14992,]  295  316  318 #> [14993,]  295  316  318 #> [14994,]  295  316  318 #> [14995,]  295  316  318 #> [14996,]  295  316  318 #> [14997,]  295  316  318 #> [14998,]  295  316  318 #> [14999,]  295  316  318 #> [15000,]  295  316  318 #> [15001,]  297  319  321 #> [15002,]  297  318  321 #> [15003,]  297  319  320 #> [15004,]  297  319  320 #> [15005,]  297  319  321 #> [15006,]  297  318  321 #> [15007,]  297  319  320 #> [15008,]  297  318  320 #> [15009,]  297  319  321 #> [15010,]  297  319  321 #> [15011,]  297  318  321 #> [15012,]  297  318  320 #> [15013,]  297  319  321 #> [15014,]  297  319  321 #> [15015,]  297  318  321 #> [15016,]  297  319  321 #> [15017,]  297  318  321 #> [15018,]  297  318  321 #> [15019,]  297  318  321 #> [15020,]  297  319  321 #> [15021,]  297  318  321 #> [15022,]  297  319  321 #> [15023,]  297  318  321 #> [15024,]  297  319  321 #> [15025,]  297  319  320 #> [15026,]  297  318  321 #> [15027,]  297  319  321 #> [15028,]  297  319  321 #> [15029,]  297  318  321 #> [15030,]  297  318  321 #> [15031,]  297  318  320 #> [15032,]  297  318  321 #> [15033,]  297  319  321 #> [15034,]  297  318  321 #> [15035,]  297  318  321 #> [15036,]  297  319  321 #> [15037,]  297  318  321 #> [15038,]  297  318  321 #> [15039,]  297  319  321 #> [15040,]  297  318  321 #> [15041,]  297  319  321 #> [15042,]  297  318  321 #> [15043,]  297  318  321 #> [15044,]  297  318  321 #> [15045,]  297  319  321 #> [15046,]  297  318  321 #> [15047,]  297  318  321 #> [15048,]  297  318  321 #> [15049,]  297  319  321 #> [15050,]  297  319  321 #> [15051,]  297  318  321 #> [15052,]  297  319  320 #> [15053,]  297  319  321 #> [15054,]  297  319  321 #> [15055,]  297  319  321 #> [15056,]  297  318  321 #> [15057,]  297  319  320 #> [15058,]  297  319  321 #> [15059,]  297  319  320 #> [15060,]  297  318  320 #> [15061,]  297  318  321 #> [15062,]  297  318  321 #> [15063,]  297  318  321 #> [15064,]  297  318  321 #> [15065,]  297  318  321 #> [15066,]  297  318  321 #> [15067,]  297  319  321 #> [15068,]  297  318  320 #> [15069,]  297  318  321 #> [15070,]  297  318  321 #> [15071,]  297  319  321 #> [15072,]  297  319  321 #> [15073,]  297  319  321 #> [15074,]  297  319  321 #> [15075,]  297  318  321 #> [15076,]  297  319  321 #> [15077,]  297  319  321 #> [15078,]  297  318  321 #> [15079,]  297  318  321 #> [15080,]  297  319  321 #> [15081,]  297  318  321 #> [15082,]  297  318  321 #> [15083,]  297  318  321 #> [15084,]  297  319  321 #> [15085,]  297  319  321 #> [15086,]  297  319  320 #> [15087,]  297  319  321 #> [15088,]  297  319  321 #> [15089,]  297  318  321 #> [15090,]  297  319  321 #> [15091,]  297  319  321 #> [15092,]  297  318  321 #> [15093,]  297  318  321 #> [15094,]  297  318  321 #> [15095,]  297  318  321 #> [15096,]  297  318  320 #> [15097,]  297  318  320 #> [15098,]  297  318  321 #> [15099,]  297  318  321 #> [15100,]  297  318  321 #> [15101,]  298  320  324 #> [15102,]  298  320  324 #> [15103,]  299  321  322 #> [15104,]  298  320  324 #> [15105,]  298  320  324 #> [15106,]  299  321  322 #> [15107,]  298  320  324 #> [15108,]  298  320  324 #> [15109,]  298  320  324 #> [15110,]  298  320  323 #> [15111,]  298  320  323 #> [15112,]  298  320  324 #> [15113,]  298  320  324 #> [15114,]  298  320  323 #> [15115,]  298  320  324 #> [15116,]  298  320  324 #> [15117,]  298  320  324 #> [15118,]  298  320  324 #> [15119,]  299  321  322 #> [15120,]  298  320  324 #> [15121,]  298  320  323 #> [15122,]  298  320  324 #> [15123,]  298  320  324 #> [15124,]  298  320  324 #> [15125,]  299  321  322 #> [15126,]  298  320  324 #> [15127,]  298  320  324 #> [15128,]  298  320  323 #> [15129,]  298  320  324 #> [15130,]  298  320  324 #> [15131,]  298  320  323 #> [15132,]  298  320  323 #> [15133,]  299  321  322 #> [15134,]  299  321  322 #> [15135,]  298  320  324 #> [15136,]  298  320  324 #> [15137,]  298  320  324 #> [15138,]  298  320  324 #> [15139,]  298  320  324 #> [15140,]  298  320  323 #> [15141,]  298  320  324 #> [15142,]  298  320  324 #> [15143,]  298  320  324 #> [15144,]  298  320  324 #> [15145,]  298  320  324 #> [15146,]  298  320  324 #> [15147,]  298  320  324 #> [15148,]  298  320  323 #> [15149,]  298  320  324 #> [15150,]  298  320  324 #> [15151,]  298  320  324 #> [15152,]  298  320  324 #> [15153,]  298  320  324 #> [15154,]  298  320  324 #> [15155,]  298  320  324 #> [15156,]  298  320  324 #> [15157,]  298  320  324 #> [15158,]  298  320  324 #> [15159,]  298  320  324 #> [15160,]  299  321  322 #> [15161,]  298  320  324 #> [15162,]  298  320  324 #> [15163,]  298  320  324 #> [15164,]  298  320  324 #> [15165,]  299  321  322 #> [15166,]  298  320  324 #> [15167,]  298  320  324 #> [15168,]  298  320  324 #> [15169,]  298  320  324 #> [15170,]  299  321  322 #> [15171,]  298  320  324 #> [15172,]  298  320  324 #> [15173,]  299  321  322 #> [15174,]  298  320  323 #> [15175,]  298  320  324 #> [15176,]  298  320  324 #> [15177,]  298  320  324 #> [15178,]  298  320  324 #> [15179,]  298  320  324 #> [15180,]  298  320  324 #> [15181,]  298  320  324 #> [15182,]  298  320  323 #> [15183,]  298  320  324 #> [15184,]  298  320  324 #> [15185,]  298  320  324 #> [15186,]  298  320  324 #> [15187,]  298  320  324 #> [15188,]  298  320  324 #> [15189,]  298  320  324 #> [15190,]  298  320  324 #> [15191,]  298  320  324 #> [15192,]  298  320  324 #> [15193,]  299  321  322 #> [15194,]  298  320  324 #> [15195,]  298  320  324 #> [15196,]  298  320  324 #> [15197,]  299  321  322 #> [15198,]  299  321  322 #> [15199,]  298  320  324 #> [15200,]  298  320  324 #> [15201,]  301  323  326 #> [15202,]  301  323  325 #> [15203,]  301  323  325 #> [15204,]  301  323  325 #> [15205,]  301  323  326 #> [15206,]  301  323  326 #> [15207,]  301  323  325 #> [15208,]  301  323  326 #> [15209,]  301  323  326 #> [15210,]  301  323  325 #> [15211,]  301  323  325 #> [15212,]  301  323  326 #> [15213,]  301  323  325 #> [15214,]  301  323  326 #> [15215,]  301  323  326 #> [15216,]  301  323  325 #> [15217,]  301  323  325 #> [15218,]  301  323  325 #> [15219,]  301  323  325 #> [15220,]  301  323  326 #> [15221,]  301  323  325 #> [15222,]  301  323  325 #> [15223,]  301  323  325 #> [15224,]  301  323  325 #> [15225,]  300  322  325 #> [15226,]  301  323  326 #> [15227,]  301  323  325 #> [15228,]  301  323  326 #> [15229,]  301  323  325 #> [15230,]  301  323  325 #> [15231,]  301  323  325 #> [15232,]  301  323  325 #> [15233,]  301  323  326 #> [15234,]  301  323  325 #> [15235,]  301  323  325 #> [15236,]  301  323  325 #> [15237,]  301  323  325 #> [15238,]  301  323  325 #> [15239,]  301  323  325 #> [15240,]  301  323  325 #> [15241,]  301  323  326 #> [15242,]  301  323  325 #> [15243,]  301  323  326 #> [15244,]  301  323  325 #> [15245,]  301  323  326 #> [15246,]  301  323  326 #> [15247,]  301  323  325 #> [15248,]  301  323  325 #> [15249,]  301  323  325 #> [15250,]  301  323  326 #> [15251,]  301  323  326 #> [15252,]  301  323  325 #> [15253,]  301  323  326 #> [15254,]  301  323  325 #> [15255,]  301  323  326 #> [15256,]  300  322  326 #> [15257,]  301  323  326 #> [15258,]  301  323  326 #> [15259,]  301  323  325 #> [15260,]  301  323  326 #> [15261,]  301  323  326 #> [15262,]  301  323  325 #> [15263,]  301  323  325 #> [15264,]  301  323  326 #> [15265,]  300  322  326 #> [15266,]  301  323  326 #> [15267,]  301  323  325 #> [15268,]  301  323  326 #> [15269,]  301  323  325 #> [15270,]  301  323  325 #> [15271,]  301  323  326 #> [15272,]  301  323  326 #> [15273,]  301  323  326 #> [15274,]  301  323  326 #> [15275,]  301  323  326 #> [15276,]  301  323  326 #> [15277,]  301  323  325 #> [15278,]  301  323  326 #> [15279,]  301  323  325 #> [15280,]  300  322  325 #> [15281,]  301  323  326 #> [15282,]  301  323  325 #> [15283,]  301  323  325 #> [15284,]  301  323  325 #> [15285,]  300  322  325 #> [15286,]  301  323  325 #> [15287,]  301  323  326 #> [15288,]  301  323  325 #> [15289,]  301  323  325 #> [15290,]  301  323  325 #> [15291,]  301  323  325 #> [15292,]  301  323  326 #> [15293,]  301  323  325 #> [15294,]  301  323  326 #> [15295,]  301  323  325 #> [15296,]  301  323  326 #> [15297,]  301  323  326 #> [15298,]  301  323  325 #> [15299,]  301  323  325 #> [15300,]  301  323  325 #> [15301,]  302  324  327 #> [15302,]  303  325  328 #> [15303,]  302  324  327 #> [15304,]  302  324  327 #> [15305,]  303  325  328 #> [15306,]  302  324  327 #> [15307,]  303  325  328 #> [15308,]  302  324  327 #> [15309,]  303  325  328 #> [15310,]  303  325  328 #> [15311,]  302  324  327 #> [15312,]  303  325  328 #> [15313,]  303  325  328 #> [15314,]  302  324  327 #> [15315,]  302  324  327 #> [15316,]  302  324  327 #> [15317,]  303  325  328 #> [15318,]  303  325  328 #> [15319,]  302  324  327 #> [15320,]  303  325  328 #> [15321,]  303  325  328 #> [15322,]  303  325  328 #> [15323,]  303  325  328 #> [15324,]  303  325  328 #> [15325,]  302  324  327 #> [15326,]  302  324  327 #> [15327,]  303  325  328 #> [15328,]  302  324  327 #> [15329,]  303  325  328 #> [15330,]  303  325  328 #> [15331,]  303  325  328 #> [15332,]  303  325  328 #> [15333,]  303  325  328 #> [15334,]  302  324  327 #> [15335,]  302  324  327 #> [15336,]  303  325  328 #> [15337,]  302  324  327 #> [15338,]  302  324  327 #> [15339,]  302  324  327 #> [15340,]  303  325  328 #> [15341,]  303  325  328 #> [15342,]  302  324  327 #> [15343,]  302  324  327 #> [15344,]  303  325  328 #> [15345,]  302  324  327 #> [15346,]  302  324  327 #> [15347,]  303  325  328 #> [15348,]  303  325  328 #> [15349,]  302  324  327 #> [15350,]  303  325  328 #> [15351,]  302  324  327 #> [15352,]  302  324  327 #> [15353,]  303  325  328 #> [15354,]  303  325  328 #> [15355,]  302  324  327 #> [15356,]  302  324  327 #> [15357,]  302  324  327 #> [15358,]  303  325  328 #> [15359,]  302  324  327 #> [15360,]  303  325  328 #> [15361,]  303  325  328 #> [15362,]  302  324  327 #> [15363,]  303  325  328 #> [15364,]  302  324  327 #> [15365,]  302  324  327 #> [15366,]  302  324  327 #> [15367,]  302  324  327 #> [15368,]  302  324  327 #> [15369,]  302  324  327 #> [15370,]  303  325  328 #> [15371,]  302  324  327 #> [15372,]  302  324  327 #> [15373,]  302  324  327 #> [15374,]  303  325  328 #> [15375,]  303  325  328 #> [15376,]  303  325  328 #> [15377,]  302  324  327 #> [15378,]  303  325  328 #> [15379,]  302  324  327 #> [15380,]  303  325  328 #> [15381,]  303  325  328 #> [15382,]  302  324  327 #> [15383,]  303  325  328 #> [15384,]  303  325  328 #> [15385,]  302  324  327 #> [15386,]  303  325  328 #> [15387,]  303  325  328 #> [15388,]  303  325  328 #> [15389,]  302  324  327 #> [15390,]  303  325  328 #> [15391,]  302  324  327 #> [15392,]  303  325  328 #> [15393,]  303  325  328 #> [15394,]  302  324  327 #> [15395,]  303  325  328 #> [15396,]  302  324  327 #> [15397,]  302  324  327 #> [15398,]  302  324  327 #> [15399,]  302  324  327 #> [15400,]  302  324  327 #> [15401,]  304  326  329 #> [15402,]  306  327  330 #> [15403,]  304  326  329 #> [15404,]  305  328  330 #> [15405,]  305  327  330 #> [15406,]  304  326  329 #> [15407,]  306  328  330 #> [15408,]  306  327  330 #> [15409,]  305  328  330 #> [15410,]  305  328  330 #> [15411,]  304  326  329 #> [15412,]  306  327  330 #> [15413,]  306  327  330 #> [15414,]  304  326  329 #> [15415,]  306  327  330 #> [15416,]  304  326  329 #> [15417,]  306  327  330 #> [15418,]  306  327  330 #> [15419,]  304  326  329 #> [15420,]  306  328  330 #> [15421,]  305  327  330 #> [15422,]  306  327  330 #> [15423,]  306  327  330 #> [15424,]  305  328  330 #> [15425,]  305  328  330 #> [15426,]  304  326  329 #> [15427,]  306  327  330 #> [15428,]  304  326  329 #> [15429,]  306  327  330 #> [15430,]  306  327  330 #> [15431,]  305  327  330 #> [15432,]  305  327  330 #> [15433,]  306  327  330 #> [15434,]  304  326  329 #> [15435,]  304  326  329 #> [15436,]  306  328  330 #> [15437,]  304  326  329 #> [15438,]  304  326  329 #> [15439,]  305  328  330 #> [15440,]  305  327  330 #> [15441,]  306  327  330 #> [15442,]  304  326  329 #> [15443,]  306  327  330 #> [15444,]  306  327  330 #> [15445,]  304  326  329 #> [15446,]  306  327  330 #> [15447,]  305  327  330 #> [15448,]  305  327  330 #> [15449,]  304  326  329 #> [15450,]  306  328  330 #> [15451,]  306  327  330 #> [15452,]  304  326  329 #> [15453,]  306  327  330 #> [15454,]  305  328  330 #> [15455,]  306  327  330 #> [15456,]  304  326  329 #> [15457,]  305  328  330 #> [15458,]  306  327  330 #> [15459,]  304  326  329 #> [15460,]  306  327  330 #> [15461,]  306  327  330 #> [15462,]  305  327  330 #> [15463,]  306  327  330 #> [15464,]  304  326  329 #> [15465,]  304  326  329 #> [15466,]  306  327  330 #> [15467,]  305  328  330 #> [15468,]  304  326  329 #> [15469,]  304  326  329 #> [15470,]  305  327  330 #> [15471,]  306  327  330 #> [15472,]  304  326  329 #> [15473,]  304  326  329 #> [15474,]  305  327  330 #> [15475,]  306  327  330 #> [15476,]  305  328  330 #> [15477,]  304  326  329 #> [15478,]  306  327  330 #> [15479,]  304  326  329 #> [15480,]  306  327  330 #> [15481,]  306  327  330 #> [15482,]  305  327  330 #> [15483,]  306  327  330 #> [15484,]  306  327  330 #> [15485,]  306  327  330 #> [15486,]  305  328  330 #> [15487,]  306  327  330 #> [15488,]  305  327  330 #> [15489,]  304  326  329 #> [15490,]  306  328  330 #> [15491,]  305  328  330 #> [15492,]  305  327  330 #> [15493,]  306  327  330 #> [15494,]  304  326  329 #> [15495,]  306  327  330 #> [15496,]  304  326  329 #> [15497,]  304  326  329 #> [15498,]  305  327  330 #> [15499,]  305  327  330 #> [15500,]  304  326  329 #> [15501,]  307  330  332 #> [15502,]  307  330  332 #> [15503,]  307  329  331 #> [15504,]  307  330  332 #> [15505,]  307  330  332 #> [15506,]  307  330  332 #> [15507,]  307  330  332 #> [15508,]  307  330  332 #> [15509,]  308  330  332 #> [15510,]  307  329  331 #> [15511,]  307  329  331 #> [15512,]  307  330  332 #> [15513,]  308  330  332 #> [15514,]  307  329  331 #> [15515,]  307  330  332 #> [15516,]  307  330  332 #> [15517,]  308  330  332 #> [15518,]  308  330  332 #> [15519,]  307  330  332 #> [15520,]  307  330  332 #> [15521,]  307  330  332 #> [15522,]  307  330  332 #> [15523,]  307  330  332 #> [15524,]  307  330  332 #> [15525,]  307  330  332 #> [15526,]  307  330  332 #> [15527,]  308  330  332 #> [15528,]  307  330  332 #> [15529,]  307  330  332 #> [15530,]  307  330  332 #> [15531,]  307  330  332 #> [15532,]  307  329  331 #> [15533,]  307  330  332 #> [15534,]  307  330  332 #> [15535,]  307  330  332 #> [15536,]  307  330  332 #> [15537,]  307  330  332 #> [15538,]  307  330  332 #> [15539,]  307  330  332 #> [15540,]  307  329  331 #> [15541,]  307  330  332 #> [15542,]  308  330  332 #> [15543,]  307  330  332 #> [15544,]  307  330  332 #> [15545,]  307  330  332 #> [15546,]  307  330  332 #> [15547,]  307  330  332 #> [15548,]  307  329  331 #> [15549,]  307  330  332 #> [15550,]  307  330  332 #> [15551,]  308  330  332 #> [15552,]  307  330  332 #> [15553,]  308  330  332 #> [15554,]  307  330  332 #> [15555,]  307  330  332 #> [15556,]  307  330  332 #> [15557,]  307  330  332 #> [15558,]  307  330  332 #> [15559,]  307  330  332 #> [15560,]  307  330  332 #> [15561,]  307  330  332 #> [15562,]  307  330  332 #> [15563,]  307  330  332 #> [15564,]  307  330  332 #> [15565,]  308  330  332 #> [15566,]  308  330  332 #> [15567,]  307  330  332 #> [15568,]  307  330  332 #> [15569,]  307  330  332 #> [15570,]  307  329  331 #> [15571,]  307  330  332 #> [15572,]  307  330  332 #> [15573,]  307  330  332 #> [15574,]  307  330  332 #> [15575,]  307  330  332 #> [15576,]  307  330  332 #> [15577,]  307  330  332 #> [15578,]  307  330  332 #> [15579,]  308  330  332 #> [15580,]  307  330  332 #> [15581,]  307  330  332 #> [15582,]  308  330  332 #> [15583,]  307  330  332 #> [15584,]  308  330  332 #> [15585,]  307  330  332 #> [15586,]  307  330  332 #> [15587,]  308  330  332 #> [15588,]  307  330  332 #> [15589,]  307  330  332 #> [15590,]  307  330  332 #> [15591,]  308  330  332 #> [15592,]  307  330  332 #> [15593,]  308  330  332 #> [15594,]  308  330  332 #> [15595,]  307  330  332 #> [15596,]  307  330  332 #> [15597,]  307  330  332 #> [15598,]  307  330  332 #> [15599,]  307  330  332 #> [15600,]  307  330  332 #> [15601,]  310  332  334 #> [15602,]  309  331  333 #> [15603,]  309  331  333 #> [15604,]  309  331  333 #> [15605,]  310  332  334 #> [15606,]  309  331  333 #> [15607,]  309  331  333 #> [15608,]  309  331  333 #> [15609,]  309  331  333 #> [15610,]  310  332  334 #> [15611,]  310  332  334 #> [15612,]  310  332  334 #> [15613,]  309  331  333 #> [15614,]  310  332  334 #> [15615,]  310  332  334 #> [15616,]  309  331  333 #> [15617,]  310  332  334 #> [15618,]  310  332  334 #> [15619,]  309  331  333 #> [15620,]  309  331  333 #> [15621,]  309  331  333 #> [15622,]  310  332  334 #> [15623,]  309  331  333 #> [15624,]  309  331  333 #> [15625,]  309  331  333 #> [15626,]  310  332  334 #> [15627,]  310  332  334 #> [15628,]  309  331  333 #> [15629,]  309  331  333 #> [15630,]  309  331  333 #> [15631,]  310  332  334 #> [15632,]  310  332  334 #> [15633,]  309  331  333 #> [15634,]  309  331  333 #> [15635,]  309  331  333 #> [15636,]  309  331  333 #> [15637,]  309  331  333 #> [15638,]  310  332  334 #> [15639,]  309  331  333 #> [15640,]  309  331  333 #> [15641,]  309  331  333 #> [15642,]  309  331  333 #> [15643,]  310  332  334 #> [15644,]  309  331  333 #> [15645,]  309  331  333 #> [15646,]  309  331  333 #> [15647,]  310  332  334 #> [15648,]  309  331  333 #> [15649,]  309  331  333 #> [15650,]  309  331  333 #> [15651,]  309  331  333 #> [15652,]  310  332  334 #> [15653,]  309  331  333 #> [15654,]  309  331  333 #> [15655,]  309  331  333 #> [15656,]  309  331  333 #> [15657,]  309  331  333 #> [15658,]  310  332  334 #> [15659,]  310  332  334 #> [15660,]  309  331  333 #> [15661,]  310  332  334 #> [15662,]  309  331  333 #> [15663,]  309  331  333 #> [15664,]  309  331  333 #> [15665,]  309  331  333 #> [15666,]  310  332  334 #> [15667,]  309  331  333 #> [15668,]  309  331  333 #> [15669,]  309  331  333 #> [15670,]  310  332  334 #> [15671,]  310  332  334 #> [15672,]  309  331  333 #> [15673,]  309  331  333 #> [15674,]  309  331  333 #> [15675,]  310  332  334 #> [15676,]  309  331  333 #> [15677,]  310  332  334 #> [15678,]  309  331  333 #> [15679,]  310  332  334 #> [15680,]  309  331  333 #> [15681,]  309  331  333 #> [15682,]  309  331  333 #> [15683,]  309  331  333 #> [15684,]  309  331  333 #> [15685,]  309  331  333 #> [15686,]  309  331  333 #> [15687,]  310  332  334 #> [15688,]  309  331  333 #> [15689,]  309  331  333 #> [15690,]  310  332  334 #> [15691,]  310  332  334 #> [15692,]  310  332  334 #> [15693,]  309  331  333 #> [15694,]  309  331  333 #> [15695,]  310  332  334 #> [15696,]  309  331  333 #> [15697,]  309  331  333 #> [15698,]  309  331  333 #> [15699,]  309  331  333 #> [15700,]  310  332  334 #> [15701,]  312  334  335 #> [15702,]  312  334  335 #> [15703,]  312  334  335 #> [15704,]  312  334  335 #> [15705,]  312  334  335 #> [15706,]  311  333  335 #> [15707,]  312  334  335 #> [15708,]  312  334  335 #> [15709,]  312  334  335 #> [15710,]  312  334  335 #> [15711,]  312  334  335 #> [15712,]  312  334  335 #> [15713,]  312  334  335 #> [15714,]  312  334  335 #> [15715,]  312  334  335 #> [15716,]  312  334  335 #> [15717,]  312  334  335 #> [15718,]  312  334  335 #> [15719,]  312  334  335 #> [15720,]  311  333  335 #> [15721,]  311  333  335 #> [15722,]  312  334  335 #> [15723,]  312  334  335 #> [15724,]  312  334  335 #> [15725,]  311  333  335 #> [15726,]  312  334  335 #> [15727,]  312  334  335 #> [15728,]  312  334  335 #> [15729,]  312  334  335 #> [15730,]  312  334  335 #> [15731,]  312  334  335 #> [15732,]  312  334  335 #> [15733,]  312  334  335 #> [15734,]  312  334  335 #> [15735,]  311  333  335 #> [15736,]  312  334  335 #> [15737,]  312  334  335 #> [15738,]  312  334  335 #> [15739,]  312  334  335 #> [15740,]  312  334  335 #> [15741,]  312  334  335 #> [15742,]  312  334  335 #> [15743,]  312  334  335 #> [15744,]  311  333  335 #> [15745,]  312  334  335 #> [15746,]  312  334  335 #> [15747,]  312  334  335 #> [15748,]  312  334  335 #> [15749,]  312  334  335 #> [15750,]  312  334  335 #> [15751,]  312  334  335 #> [15752,]  312  334  335 #> [15753,]  311  333  335 #> [15754,]  312  334  335 #> [15755,]  312  334  335 #> [15756,]  311  333  335 #> [15757,]  312  334  335 #> [15758,]  312  334  335 #> [15759,]  312  334  335 #> [15760,]  312  334  335 #> [15761,]  312  334  335 #> [15762,]  312  334  335 #> [15763,]  312  334  335 #> [15764,]  312  334  335 #> [15765,]  311  333  335 #> [15766,]  312  334  335 #> [15767,]  312  334  335 #> [15768,]  312  334  335 #> [15769,]  312  334  335 #> [15770,]  312  334  335 #> [15771,]  312  334  335 #> [15772,]  312  334  335 #> [15773,]  312  334  335 #> [15774,]  311  333  335 #> [15775,]  312  334  335 #> [15776,]  312  334  335 #> [15777,]  312  334  335 #> [15778,]  312  334  335 #> [15779,]  312  334  335 #> [15780,]  311  333  335 #> [15781,]  312  334  335 #> [15782,]  312  334  335 #> [15783,]  312  334  335 #> [15784,]  312  334  335 #> [15785,]  311  333  335 #> [15786,]  311  333  335 #> [15787,]  312  334  335 #> [15788,]  312  334  335 #> [15789,]  311  333  335 #> [15790,]  312  334  335 #> [15791,]  312  334  335 #> [15792,]  312  334  335 #> [15793,]  312  334  335 #> [15794,]  312  334  335 #> [15795,]  312  334  335 #> [15796,]  312  334  335 #> [15797,]  312  334  335 #> [15798,]  312  334  335 #> [15799,]  311  333  335 #> [15800,]  312  334  335 #> [15801,]  313  335  337 #> [15802,]  313  335  337 #> [15803,]  313  335  337 #> [15804,]  313  335  337 #> [15805,]  313  335  337 #> [15806,]  313  335  337 #> [15807,]  314  336  336 #> [15808,]  313  335  337 #> [15809,]  313  335  337 #> [15810,]  313  335  337 #> [15811,]  313  335  337 #> [15812,]  313  335  337 #> [15813,]  313  335  337 #> [15814,]  313  335  337 #> [15815,]  313  335  337 #> [15816,]  313  335  337 #> [15817,]  313  335  337 #> [15818,]  313  335  337 #> [15819,]  313  335  337 #> [15820,]  314  336  336 #> [15821,]  313  335  337 #> [15822,]  313  335  337 #> [15823,]  313  335  337 #> [15824,]  314  336  336 #> [15825,]  313  335  337 #> [15826,]  313  335  337 #> [15827,]  313  335  337 #> [15828,]  314  336  336 #> [15829,]  313  335  337 #> [15830,]  313  335  337 #> [15831,]  313  335  337 #> [15832,]  313  335  337 #> [15833,]  313  335  337 #> [15834,]  313  335  337 #> [15835,]  313  335  337 #> [15836,]  313  335  337 #> [15837,]  313  335  337 #> [15838,]  313  335  337 #> [15839,]  313  335  337 #> [15840,]  313  335  337 #> [15841,]  313  335  337 #> [15842,]  313  335  337 #> [15843,]  313  335  337 #> [15844,]  313  335  337 #> [15845,]  313  335  337 #> [15846,]  313  335  337 #> [15847,]  313  335  337 #> [15848,]  313  335  337 #> [15849,]  313  335  337 #> [15850,]  314  336  336 #> [15851,]  313  335  337 #> [15852,]  314  336  336 #> [15853,]  313  335  337 #> [15854,]  313  335  337 #> [15855,]  313  335  337 #> [15856,]  313  335  337 #> [15857,]  313  335  337 #> [15858,]  313  335  337 #> [15859,]  313  335  337 #> [15860,]  313  335  337 #> [15861,]  313  335  337 #> [15862,]  313  335  337 #> [15863,]  313  335  337 #> [15864,]  313  335  337 #> [15865,]  313  335  337 #> [15866,]  313  335  337 #> [15867,]  313  335  337 #> [15868,]  313  335  337 #> [15869,]  313  335  337 #> [15870,]  313  335  337 #> [15871,]  313  335  337 #> [15872,]  313  335  337 #> [15873,]  313  335  337 #> [15874,]  313  335  337 #> [15875,]  313  335  337 #> [15876,]  314  336  336 #> [15877,]  313  335  337 #> [15878,]  313  335  337 #> [15879,]  313  335  337 #> [15880,]  313  335  337 #> [15881,]  313  335  337 #> [15882,]  313  335  337 #> [15883,]  313  335  337 #> [15884,]  313  335  337 #> [15885,]  313  335  337 #> [15886,]  314  336  336 #> [15887,]  313  335  337 #> [15888,]  313  335  337 #> [15889,]  313  335  337 #> [15890,]  313  335  337 #> [15891,]  313  335  337 #> [15892,]  313  335  337 #> [15893,]  313  335  337 #> [15894,]  313  335  337 #> [15895,]  313  335  337 #> [15896,]  313  335  337 #> [15897,]  313  335  337 #> [15898,]  313  335  337 #> [15899,]  313  335  337 #> [15900,]  313  335  337 #> [15901,]  316  338  339 #> [15902,]  316  338  339 #> [15903,]  316  338  339 #> [15904,]  316  338  339 #> [15905,]  316  338  339 #> [15906,]  316  338  339 #> [15907,]  316  338  339 #> [15908,]  316  338  339 #> [15909,]  316  338  339 #> [15910,]  316  338  339 #> [15911,]  316  338  339 #> [15912,]  315  337  338 #> [15913,]  316  338  339 #> [15914,]  316  338  339 #> [15915,]  316  338  339 #> [15916,]  316  338  339 #> [15917,]  316  338  339 #> [15918,]  316  338  339 #> [15919,]  316  338  339 #> [15920,]  316  338  339 #> [15921,]  316  338  339 #> [15922,]  316  338  339 #> [15923,]  316  338  339 #> [15924,]  316  338  339 #> [15925,]  316  338  339 #> [15926,]  316  338  339 #> [15927,]  316  338  339 #> [15928,]  316  338  339 #> [15929,]  316  338  339 #> [15930,]  316  338  339 #> [15931,]  315  337  338 #> [15932,]  316  338  339 #> [15933,]  316  338  339 #> [15934,]  316  338  339 #> [15935,]  316  338  339 #> [15936,]  316  338  339 #> [15937,]  316  338  339 #> [15938,]  316  338  339 #> [15939,]  316  338  339 #> [15940,]  316  338  339 #> [15941,]  316  338  339 #> [15942,]  316  338  339 #> [15943,]  316  338  339 #> [15944,]  316  338  339 #> [15945,]  316  338  339 #> [15946,]  316  338  339 #> [15947,]  316  338  339 #> [15948,]  316  338  339 #> [15949,]  316  338  339 #> [15950,]  316  338  339 #> [15951,]  316  338  339 #> [15952,]  315  337  338 #> [15953,]  316  338  339 #> [15954,]  316  338  339 #> [15955,]  316  338  339 #> [15956,]  316  338  339 #> [15957,]  316  338  339 #> [15958,]  316  338  339 #> [15959,]  315  337  338 #> [15960,]  315  337  338 #> [15961,]  316  338  339 #> [15962,]  316  338  339 #> [15963,]  316  338  339 #> [15964,]  316  338  339 #> [15965,]  316  338  339 #> [15966,]  316  338  339 #> [15967,]  316  338  339 #> [15968,]  316  338  339 #> [15969,]  316  338  339 #> [15970,]  316  338  339 #> [15971,]  316  338  339 #> [15972,]  316  338  339 #> [15973,]  316  338  339 #> [15974,]  316  338  339 #> [15975,]  316  338  339 #> [15976,]  316  338  339 #> [15977,]  316  338  339 #> [15978,]  316  338  339 #> [15979,]  316  338  339 #> [15980,]  316  338  339 #> [15981,]  316  338  339 #> [15982,]  316  338  339 #> [15983,]  316  338  339 #> [15984,]  316  338  339 #> [15985,]  316  338  339 #> [15986,]  316  338  339 #> [15987,]  316  338  339 #> [15988,]  316  338  339 #> [15989,]  316  338  339 #> [15990,]  316  338  339 #> [15991,]  316  338  339 #> [15992,]  316  338  339 #> [15993,]  316  338  339 #> [15994,]  316  338  339 #> [15995,]  316  338  339 #> [15996,]  316  338  339 #> [15997,]  316  338  339 #> [15998,]  316  338  339 #> [15999,]  316  338  339 #> [16000,]  316  338  339 #> [16001,]  318  340  341 #> [16002,]  318  340  341 #> [16003,]  318  340  341 #> [16004,]  317  339  340 #> [16005,]  318  340  341 #> [16006,]  318  340  341 #> [16007,]  318  340  341 #> [16008,]  317  339  340 #> [16009,]  317  339  340 #> [16010,]  318  340  341 #> [16011,]  318  340  341 #> [16012,]  318  340  341 #> [16013,]  318  340  341 #> [16014,]  318  340  341 #> [16015,]  318  340  341 #> [16016,]  318  340  341 #> [16017,]  317  339  340 #> [16018,]  318  340  341 #> [16019,]  318  340  341 #> [16020,]  318  340  341 #> [16021,]  318  340  341 #> [16022,]  318  340  341 #> [16023,]  318  340  341 #> [16024,]  318  340  341 #> [16025,]  318  340  341 #> [16026,]  318  340  341 #> [16027,]  317  339  340 #> [16028,]  318  340  341 #> [16029,]  318  340  341 #> [16030,]  318  340  341 #> [16031,]  318  340  341 #> [16032,]  318  340  341 #> [16033,]  318  340  341 #> [16034,]  318  340  341 #> [16035,]  318  340  341 #> [16036,]  318  340  341 #> [16037,]  318  340  341 #> [16038,]  318  340  341 #> [16039,]  318  340  341 #> [16040,]  318  340  341 #> [16041,]  318  340  341 #> [16042,]  318  340  341 #> [16043,]  318  340  341 #> [16044,]  317  339  340 #> [16045,]  318  340  341 #> [16046,]  318  340  341 #> [16047,]  318  340  341 #> [16048,]  318  340  341 #> [16049,]  318  340  341 #> [16050,]  318  340  341 #> [16051,]  318  340  341 #> [16052,]  317  339  340 #> [16053,]  318  340  341 #> [16054,]  318  340  341 #> [16055,]  318  340  341 #> [16056,]  318  340  341 #> [16057,]  318  340  341 #> [16058,]  318  340  341 #> [16059,]  318  340  341 #> [16060,]  318  340  341 #> [16061,]  318  340  341 #> [16062,]  318  340  341 #> [16063,]  318  340  341 #> [16064,]  318  340  341 #> [16065,]  318  340  341 #> [16066,]  317  339  340 #> [16067,]  318  340  341 #> [16068,]  318  340  341 #> [16069,]  318  340  341 #> [16070,]  318  340  341 #> [16071,]  318  340  341 #> [16072,]  318  340  341 #> [16073,]  318  340  341 #> [16074,]  318  340  341 #> [16075,]  318  340  341 #> [16076,]  318  340  341 #> [16077,]  318  340  341 #> [16078,]  318  340  341 #> [16079,]  318  340  341 #> [16080,]  318  340  341 #> [16081,]  317  339  340 #> [16082,]  317  339  340 #> [16083,]  318  340  341 #> [16084,]  318  340  341 #> [16085,]  318  340  341 #> [16086,]  318  340  341 #> [16087,]  318  340  341 #> [16088,]  318  340  341 #> [16089,]  318  340  341 #> [16090,]  317  339  340 #> [16091,]  318  340  341 #> [16092,]  317  339  340 #> [16093,]  318  340  341 #> [16094,]  318  340  341 #> [16095,]  317  339  340 #> [16096,]  318  340  341 #> [16097,]  318  340  341 #> [16098,]  318  340  341 #> [16099,]  317  339  340 #> [16100,]  318  340  341 #> [16101,]  320  342  343 #> [16102,]  319  341  342 #> [16103,]  319  341  342 #> [16104,]  320  342  343 #> [16105,]  319  341  342 #> [16106,]  319  341  342 #> [16107,]  320  342  343 #> [16108,]  320  342  343 #> [16109,]  320  342  343 #> [16110,]  320  342  343 #> [16111,]  319  341  342 #> [16112,]  319  341  342 #> [16113,]  320  342  343 #> [16114,]  319  341  342 #> [16115,]  320  342  343 #> [16116,]  320  342  343 #> [16117,]  320  342  343 #> [16118,]  320  342  343 #> [16119,]  319  341  342 #> [16120,]  319  341  342 #> [16121,]  320  342  343 #> [16122,]  319  341  342 #> [16123,]  320  342  343 #> [16124,]  319  341  342 #> [16125,]  320  342  343 #> [16126,]  319  341  342 #> [16127,]  320  342  343 #> [16128,]  320  342  343 #> [16129,]  319  341  342 #> [16130,]  319  341  342 #> [16131,]  319  341  342 #> [16132,]  319  341  342 #> [16133,]  319  341  342 #> [16134,]  319  341  342 #> [16135,]  319  341  342 #> [16136,]  319  341  342 #> [16137,]  319  341  342 #> [16138,]  319  341  342 #> [16139,]  320  342  343 #> [16140,]  319  341  342 #> [16141,]  319  341  342 #> [16142,]  319  341  342 #> [16143,]  320  342  343 #> [16144,]  319  341  342 #> [16145,]  320  342  343 #> [16146,]  320  342  343 #> [16147,]  320  342  343 #> [16148,]  319  341  342 #> [16149,]  319  341  342 #> [16150,]  319  341  342 #> [16151,]  319  341  342 #> [16152,]  319  341  342 #> [16153,]  320  342  343 #> [16154,]  319  341  342 #> [16155,]  319  341  342 #> [16156,]  320  342  343 #> [16157,]  319  341  342 #> [16158,]  319  341  342 #> [16159,]  319  341  342 #> [16160,]  319  341  342 #> [16161,]  320  342  343 #> [16162,]  319  341  342 #> [16163,]  319  341  342 #> [16164,]  320  342  343 #> [16165,]  319  341  342 #> [16166,]  319  341  342 #> [16167,]  319  341  342 #> [16168,]  319  341  342 #> [16169,]  319  341  342 #> [16170,]  320  342  343 #> [16171,]  320  342  343 #> [16172,]  320  342  343 #> [16173,]  320  342  343 #> [16174,]  320  342  343 #> [16175,]  320  342  343 #> [16176,]  320  342  343 #> [16177,]  320  342  343 #> [16178,]  319  341  342 #> [16179,]  319  341  342 #> [16180,]  319  341  342 #> [16181,]  319  341  342 #> [16182,]  320  342  343 #> [16183,]  319  341  342 #> [16184,]  320  342  343 #> [16185,]  319  341  342 #> [16186,]  319  341  342 #> [16187,]  320  342  343 #> [16188,]  320  342  343 #> [16189,]  319  341  342 #> [16190,]  320  342  343 #> [16191,]  319  341  342 #> [16192,]  319  341  342 #> [16193,]  319  341  342 #> [16194,]  320  342  343 #> [16195,]  320  342  343 #> [16196,]  319  341  342 #> [16197,]  319  341  342 #> [16198,]  319  341  342 #> [16199,]  319  341  342 #> [16200,]  320  342  343 #> [16201,]  321  343  344 #> [16202,]  321  343  344 #> [16203,]  321  343  344 #> [16204,]  321  343  344 #> [16205,]  321  343  344 #> [16206,]  321  343  344 #> [16207,]  321  343  344 #> [16208,]  322  344  345 #> [16209,]  322  344  345 #> [16210,]  321  343  344 #> [16211,]  321  343  344 #> [16212,]  321  343  344 #> [16213,]  321  343  344 #> [16214,]  321  343  344 #> [16215,]  321  343  344 #> [16216,]  321  343  344 #> [16217,]  321  343  344 #> [16218,]  321  343  344 #> [16219,]  321  343  344 #> [16220,]  321  343  344 #> [16221,]  321  343  344 #> [16222,]  321  343  344 #> [16223,]  321  343  344 #> [16224,]  321  343  344 #> [16225,]  321  343  344 #> [16226,]  322  344  345 #> [16227,]  321  343  344 #> [16228,]  321  343  344 #> [16229,]  321  343  344 #> [16230,]  321  343  344 #> [16231,]  321  343  344 #> [16232,]  321  343  344 #> [16233,]  321  343  344 #> [16234,]  321  343  344 #> [16235,]  321  343  344 #> [16236,]  321  343  344 #> [16237,]  321  343  344 #> [16238,]  321  343  344 #> [16239,]  321  343  344 #> [16240,]  321  343  344 #> [16241,]  321  343  344 #> [16242,]  321  343  344 #> [16243,]  321  343  344 #> [16244,]  321  343  344 #> [16245,]  321  343  344 #> [16246,]  321  343  344 #> [16247,]  321  343  344 #> [16248,]  321  343  344 #> [16249,]  321  343  344 #> [16250,]  321  343  344 #> [16251,]  321  343  344 #> [16252,]  321  343  344 #> [16253,]  321  343  344 #> [16254,]  321  343  344 #> [16255,]  321  343  344 #> [16256,]  321  343  344 #> [16257,]  321  343  344 #> [16258,]  321  343  344 #> [16259,]  321  343  344 #> [16260,]  321  343  344 #> [16261,]  322  344  345 #> [16262,]  321  343  344 #> [16263,]  321  343  344 #> [16264,]  321  343  344 #> [16265,]  321  343  344 #> [16266,]  321  343  344 #> [16267,]  321  343  344 #> [16268,]  321  343  344 #> [16269,]  321  343  344 #> [16270,]  321  343  344 #> [16271,]  321  343  344 #> [16272,]  321  343  344 #> [16273,]  321  343  344 #> [16274,]  321  343  344 #> [16275,]  321  343  344 #> [16276,]  322  344  345 #> [16277,]  321  343  344 #> [16278,]  321  343  344 #> [16279,]  321  343  344 #> [16280,]  321  343  344 #> [16281,]  321  343  344 #> [16282,]  321  343  344 #> [16283,]  321  343  344 #> [16284,]  321  343  344 #> [16285,]  321  343  344 #> [16286,]  321  343  344 #> [16287,]  321  343  344 #> [16288,]  321  343  344 #> [16289,]  321  343  344 #> [16290,]  321  343  344 #> [16291,]  321  343  344 #> [16292,]  321  343  344 #> [16293,]  321  343  344 #> [16294,]  321  343  344 #> [16295,]  321  343  344 #> [16296,]  321  343  344 #> [16297,]  321  343  344 #> [16298,]  321  343  344 #> [16299,]  321  343  344 #> [16300,]  321  343  344 #> [16301,]  323  346  347 #> [16302,]  323  346  347 #> [16303,]  323  345  346 #> [16304,]  323  346  347 #> [16305,]  323  346  347 #> [16306,]  323  346  347 #> [16307,]  323  345  346 #> [16308,]  323  346  347 #> [16309,]  323  346  347 #> [16310,]  323  346  347 #> [16311,]  323  346  347 #> [16312,]  323  346  347 #> [16313,]  323  345  346 #> [16314,]  323  346  347 #> [16315,]  323  346  347 #> [16316,]  323  345  346 #> [16317,]  323  346  347 #> [16318,]  323  346  347 #> [16319,]  323  345  346 #> [16320,]  323  346  347 #> [16321,]  323  345  346 #> [16322,]  323  346  347 #> [16323,]  323  345  346 #> [16324,]  323  346  347 #> [16325,]  323  346  347 #> [16326,]  323  346  347 #> [16327,]  323  346  347 #> [16328,]  323  346  347 #> [16329,]  323  346  347 #> [16330,]  323  345  346 #> [16331,]  323  345  346 #> [16332,]  323  346  347 #> [16333,]  323  346  347 #> [16334,]  323  345  346 #> [16335,]  323  345  346 #> [16336,]  323  345  346 #> [16337,]  323  345  346 #> [16338,]  323  346  347 #> [16339,]  323  345  346 #> [16340,]  323  345  346 #> [16341,]  323  346  347 #> [16342,]  323  346  347 #> [16343,]  323  346  347 #> [16344,]  323  346  347 #> [16345,]  323  346  347 #> [16346,]  323  346  347 #> [16347,]  323  345  346 #> [16348,]  323  346  347 #> [16349,]  323  345  346 #> [16350,]  323  346  347 #> [16351,]  323  346  347 #> [16352,]  323  346  347 #> [16353,]  323  346  347 #> [16354,]  323  345  346 #> [16355,]  323  346  347 #> [16356,]  323  346  347 #> [16357,]  323  346  347 #> [16358,]  323  346  347 #> [16359,]  323  346  347 #> [16360,]  323  346  347 #> [16361,]  323  346  347 #> [16362,]  323  345  346 #> [16363,]  323  346  347 #> [16364,]  323  346  347 #> [16365,]  323  346  347 #> [16366,]  323  346  347 #> [16367,]  323  346  347 #> [16368,]  323  346  347 #> [16369,]  323  346  347 #> [16370,]  323  345  346 #> [16371,]  323  346  347 #> [16372,]  323  346  347 #> [16373,]  323  346  347 #> [16374,]  323  346  347 #> [16375,]  323  346  347 #> [16376,]  323  346  347 #> [16377,]  323  345  346 #> [16378,]  323  346  347 #> [16379,]  323  345  346 #> [16380,]  323  345  346 #> [16381,]  323  346  347 #> [16382,]  323  346  347 #> [16383,]  323  345  346 #> [16384,]  323  346  347 #> [16385,]  323  346  347 #> [16386,]  323  346  347 #> [16387,]  323  346  347 #> [16388,]  323  346  347 #> [16389,]  323  346  347 #> [16390,]  323  346  347 #> [16391,]  323  346  347 #> [16392,]  323  346  347 #> [16393,]  323  345  346 #> [16394,]  323  346  347 #> [16395,]  323  345  346 #> [16396,]  323  346  347 #> [16397,]  323  346  347 #> [16398,]  323  345  346 #> [16399,]  323  346  347 #> [16400,]  323  345  346 #> [16401,]  325  348  348 #> [16402,]  325  348  348 #> [16403,]  324  347  349 #> [16404,]  324  347  350 #> [16405,]  324  347  350 #> [16406,]  325  348  348 #> [16407,]  324  347  349 #> [16408,]  324  347  350 #> [16409,]  324  347  350 #> [16410,]  324  347  350 #> [16411,]  324  347  350 #> [16412,]  324  347  350 #> [16413,]  325  348  348 #> [16414,]  325  348  348 #> [16415,]  325  348  348 #> [16416,]  325  348  348 #> [16417,]  325  348  348 #> [16418,]  324  347  350 #> [16419,]  324  347  350 #> [16420,]  324  347  349 #> [16421,]  325  348  348 #> [16422,]  324  347  350 #> [16423,]  324  347  349 #> [16424,]  324  347  350 #> [16425,]  324  347  349 #> [16426,]  324  347  350 #> [16427,]  324  347  350 #> [16428,]  324  347  350 #> [16429,]  325  348  348 #> [16430,]  324  347  350 #> [16431,]  324  347  350 #> [16432,]  324  347  350 #> [16433,]  325  348  348 #> [16434,]  324  347  349 #> [16435,]  325  348  348 #> [16436,]  324  347  350 #> [16437,]  324  347  349 #> [16438,]  324  347  350 #> [16439,]  324  347  350 #> [16440,]  324  347  350 #> [16441,]  325  348  348 #> [16442,]  324  347  349 #> [16443,]  324  347  350 #> [16444,]  325  348  348 #> [16445,]  324  347  350 #> [16446,]  324  347  350 #> [16447,]  324  347  350 #> [16448,]  324  347  350 #> [16449,]  324  347  350 #> [16450,]  325  348  348 #> [16451,]  324  347  350 #> [16452,]  324  347  350 #> [16453,]  324  347  349 #> [16454,]  324  347  350 #> [16455,]  324  347  350 #> [16456,]  324  347  349 #> [16457,]  324  347  349 #> [16458,]  324  347  350 #> [16459,]  325  348  348 #> [16460,]  324  347  350 #> [16461,]  325  348  348 #> [16462,]  324  347  350 #> [16463,]  324  347  350 #> [16464,]  324  347  350 #> [16465,]  324  347  349 #> [16466,]  324  347  350 #> [16467,]  324  347  350 #> [16468,]  325  348  348 #> [16469,]  324  347  350 #> [16470,]  325  348  348 #> [16471,]  324  347  350 #> [16472,]  324  347  350 #> [16473,]  325  348  348 #> [16474,]  324  347  349 #> [16475,]  324  347  350 #> [16476,]  325  348  348 #> [16477,]  325  348  348 #> [16478,]  324  347  350 #> [16479,]  325  348  348 #> [16480,]  324  347  349 #> [16481,]  325  348  348 #> [16482,]  324  347  349 #> [16483,]  325  348  348 #> [16484,]  324  347  349 #> [16485,]  324  347  349 #> [16486,]  325  348  348 #> [16487,]  324  347  350 #> [16488,]  324  347  350 #> [16489,]  324  347  349 #> [16490,]  324  347  350 #> [16491,]  324  347  350 #> [16492,]  324  347  350 #> [16493,]  325  348  348 #> [16494,]  324  347  349 #> [16495,]  324  347  350 #> [16496,]  325  348  348 #> [16497,]  324  347  350 #> [16498,]  324  347  349 #> [16499,]  325  348  348 #> [16500,]  324  347  350 #> [16501,]  327  350  352 #> [16502,]  326  349  351 #> [16503,]  326  349  351 #> [16504,]  326  349  351 #> [16505,]  326  349  351 #> [16506,]  327  350  352 #> [16507,]  326  349  351 #> [16508,]  327  350  352 #> [16509,]  327  350  352 #> [16510,]  326  349  351 #> [16511,]  326  349  351 #> [16512,]  327  350  352 #> [16513,]  326  349  351 #> [16514,]  327  350  352 #> [16515,]  327  350  352 #> [16516,]  326  349  351 #> [16517,]  326  349  351 #> [16518,]  326  349  351 #> [16519,]  326  349  351 #> [16520,]  327  350  352 #> [16521,]  326  349  351 #> [16522,]  326  349  351 #> [16523,]  326  349  351 #> [16524,]  326  349  351 #> [16525,]  326  349  351 #> [16526,]  327  350  352 #> [16527,]  326  349  351 #> [16528,]  326  349  351 #> [16529,]  326  349  351 #> [16530,]  326  349  351 #> [16531,]  326  349  351 #> [16532,]  326  349  351 #> [16533,]  327  350  352 #> [16534,]  326  349  351 #> [16535,]  326  349  351 #> [16536,]  326  349  351 #> [16537,]  326  349  351 #> [16538,]  326  349  351 #> [16539,]  326  349  351 #> [16540,]  326  349  351 #> [16541,]  326  349  351 #> [16542,]  326  349  351 #> [16543,]  327  350  352 #> [16544,]  326  349  351 #> [16545,]  327  350  352 #> [16546,]  327  350  352 #> [16547,]  326  349  351 #> [16548,]  326  349  351 #> [16549,]  326  349  351 #> [16550,]  327  350  352 #> [16551,]  327  350  352 #> [16552,]  326  349  351 #> [16553,]  327  350  352 #> [16554,]  326  349  351 #> [16555,]  327  350  352 #> [16556,]  327  350  352 #> [16557,]  327  350  352 #> [16558,]  327  350  352 #> [16559,]  326  349  351 #> [16560,]  327  350  352 #> [16561,]  327  350  352 #> [16562,]  326  349  351 #> [16563,]  326  349  351 #> [16564,]  327  350  352 #> [16565,]  327  350  352 #> [16566,]  327  350  352 #> [16567,]  326  349  351 #> [16568,]  327  350  352 #> [16569,]  326  349  351 #> [16570,]  326  349  351 #> [16571,]  327  350  352 #> [16572,]  327  350  352 #> [16573,]  327  350  352 #> [16574,]  327  350  352 #> [16575,]  327  350  352 #> [16576,]  327  350  352 #> [16577,]  326  349  351 #> [16578,]  327  350  352 #> [16579,]  326  349  351 #> [16580,]  326  349  351 #> [16581,]  327  350  352 #> [16582,]  326  349  351 #> [16583,]  326  349  351 #> [16584,]  326  349  351 #> [16585,]  326  349  351 #> [16586,]  326  349  351 #> [16587,]  326  349  351 #> [16588,]  326  349  351 #> [16589,]  326  349  351 #> [16590,]  326  349  351 #> [16591,]  326  349  351 #> [16592,]  327  350  352 #> [16593,]  326  349  351 #> [16594,]  327  350  352 #> [16595,]  326  349  351 #> [16596,]  327  350  352 #> [16597,]  327  350  352 #> [16598,]  326  349  351 #> [16599,]  326  349  351 #> [16600,]  326  349  351 #> [16601,]  329  351  355 #> [16602,]  329  351  355 #> [16603,]  328  352  353 #> [16604,]  329  351  354 #> [16605,]  328  352  353 #> [16606,]  328  352  353 #> [16607,]  329  351  354 #> [16608,]  329  351  354 #> [16609,]  329  351  355 #> [16610,]  329  351  354 #> [16611,]  328  352  353 #> [16612,]  328  352  353 #> [16613,]  329  351  355 #> [16614,]  328  352  353 #> [16615,]  329  351  355 #> [16616,]  329  351  354 #> [16617,]  329  351  355 #> [16618,]  329  351  355 #> [16619,]  328  352  353 #> [16620,]  328  352  353 #> [16621,]  329  351  355 #> [16622,]  328  352  353 #> [16623,]  329  351  354 #> [16624,]  328  352  353 #> [16625,]  329  351  354 #> [16626,]  328  352  353 #> [16627,]  329  351  355 #> [16628,]  329  351  355 #> [16629,]  328  352  353 #> [16630,]  328  352  353 #> [16631,]  329  351  354 #> [16632,]  328  352  353 #> [16633,]  329  351  355 #> [16634,]  328  352  353 #> [16635,]  329  351  354 #> [16636,]  328  352  353 #> [16637,]  329  351  354 #> [16638,]  329  351  355 #> [16639,]  329  351  355 #> [16640,]  328  352  353 #> [16641,]  328  352  353 #> [16642,]  328  352  353 #> [16643,]  329  351  355 #> [16644,]  329  351  354 #> [16645,]  329  351  354 #> [16646,]  329  351  354 #> [16647,]  329  351  354 #> [16648,]  328  352  353 #> [16649,]  329  351  354 #> [16650,]  329  351  355 #> [16651,]  328  352  353 #> [16652,]  329  351  354 #> [16653,]  329  351  355 #> [16654,]  328  352  353 #> [16655,]  328  352  353 #> [16656,]  329  351  355 #> [16657,]  329  351  354 #> [16658,]  329  351  355 #> [16659,]  329  351  354 #> [16660,]  328  352  353 #> [16661,]  329  351  355 #> [16662,]  328  352  353 #> [16663,]  328  352  353 #> [16664,]  329  351  355 #> [16665,]  329  351  355 #> [16666,]  328  352  353 #> [16667,]  328  352  353 #> [16668,]  328  352  353 #> [16669,]  328  352  353 #> [16670,]  329  351  355 #> [16671,]  329  351  354 #> [16672,]  329  351  354 #> [16673,]  329  351  355 #> [16674,]  329  351  354 #> [16675,]  329  351  354 #> [16676,]  329  351  354 #> [16677,]  329  351  355 #> [16678,]  328  352  353 #> [16679,]  329  351  355 #> [16680,]  328  352  353 #> [16681,]  328  352  353 #> [16682,]  329  351  355 #> [16683,]  328  352  353 #> [16684,]  329  351  355 #> [16685,]  329  351  355 #> [16686,]  329  351  354 #> [16687,]  329  351  355 #> [16688,]  329  351  354 #> [16689,]  328  352  353 #> [16690,]  329  351  355 #> [16691,]  328  352  353 #> [16692,]  329  351  354 #> [16693,]  328  352  353 #> [16694,]  329  351  355 #> [16695,]  329  351  354 #> [16696,]  329  351  354 #> [16697,]  329  351  354 #> [16698,]  328  352  353 #> [16699,]  328  352  353 #> [16700,]  329  351  355 #> [16701,]  331  353  356 #> [16702,]  331  353  356 #> [16703,]  330  354  357 #> [16704,]  331  353  356 #> [16705,]  331  353  356 #> [16706,]  331  353  356 #> [16707,]  330  355  357 #> [16708,]  330  355  357 #> [16709,]  331  353  356 #> [16710,]  331  353  356 #> [16711,]  331  353  356 #> [16712,]  331  353  356 #> [16713,]  330  355  357 #> [16714,]  331  353  356 #> [16715,]  331  353  356 #> [16716,]  330  355  357 #> [16717,]  330  355  357 #> [16718,]  331  353  356 #> [16719,]  331  353  356 #> [16720,]  330  354  357 #> [16721,]  331  353  356 #> [16722,]  330  354  357 #> [16723,]  331  353  356 #> [16724,]  330  354  357 #> [16725,]  330  355  357 #> [16726,]  331  353  356 #> [16727,]  331  353  356 #> [16728,]  331  353  356 #> [16729,]  331  353  356 #> [16730,]  331  353  356 #> [16731,]  331  353  356 #> [16732,]  331  353  356 #> [16733,]  331  353  356 #> [16734,]  331  353  356 #> [16735,]  331  353  356 #> [16736,]  331  353  356 #> [16737,]  331  353  356 #> [16738,]  331  353  356 #> [16739,]  330  355  357 #> [16740,]  330  354  357 #> [16741,]  331  353  356 #> [16742,]  331  353  356 #> [16743,]  331  353  356 #> [16744,]  330  355  357 #> [16745,]  330  355  357 #> [16746,]  330  355  357 #> [16747,]  330  355  357 #> [16748,]  331  353  356 #> [16749,]  330  355  357 #> [16750,]  330  355  357 #> [16751,]  331  353  356 #> [16752,]  331  353  356 #> [16753,]  330  355  357 #> [16754,]  330  354  357 #> [16755,]  330  354  357 #> [16756,]  330  355  357 #> [16757,]  331  353  356 #> [16758,]  331  353  356 #> [16759,]  330  355  357 #> [16760,]  331  353  356 #> [16761,]  331  353  356 #> [16762,]  331  353  356 #> [16763,]  330  354  357 #> [16764,]  331  353  356 #> [16765,]  330  355  357 #> [16766,]  330  354  357 #> [16767,]  331  353  356 #> [16768,]  331  353  356 #> [16769,]  331  353  356 #> [16770,]  330  355  357 #> [16771,]  331  353  356 #> [16772,]  330  355  357 #> [16773,]  331  353  356 #> [16774,]  331  353  356 #> [16775,]  331  353  356 #> [16776,]  331  353  356 #> [16777,]  330  355  357 #> [16778,]  330  354  357 #> [16779,]  330  355  357 #> [16780,]  331  353  356 #> [16781,]  331  353  356 #> [16782,]  331  353  356 #> [16783,]  331  353  356 #> [16784,]  330  355  357 #> [16785,]  331  353  356 #> [16786,]  330  355  357 #> [16787,]  331  353  356 #> [16788,]  331  353  356 #> [16789,]  330  354  357 #> [16790,]  330  355  357 #> [16791,]  331  353  356 #> [16792,]  331  353  356 #> [16793,]  331  353  356 #> [16794,]  330  355  357 #> [16795,]  331  353  356 #> [16796,]  331  353  356 #> [16797,]  331  353  356 #> [16798,]  330  354  357 #> [16799,]  331  353  356 #> [16800,]  330  355  357 #> [16801,]  333  357  358 #> [16802,]  332  356  359 #> [16803,]  333  356  359 #> [16804,]  333  357  358 #> [16805,]  333  357  358 #> [16806,]  332  357  358 #> [16807,]  333  356  359 #> [16808,]  333  357  358 #> [16809,]  333  357  358 #> [16810,]  333  356  359 #> [16811,]  332  357  358 #> [16812,]  332  357  358 #> [16813,]  333  356  359 #> [16814,]  333  357  358 #> [16815,]  332  357  358 #> [16816,]  333  356  359 #> [16817,]  332  356  359 #> [16818,]  333  356  359 #> [16819,]  332  356  359 #> [16820,]  333  357  358 #> [16821,]  333  356  359 #> [16822,]  333  356  359 #> [16823,]  332  356  359 #> [16824,]  333  356  359 #> [16825,]  333  356  359 #> [16826,]  332  357  358 #> [16827,]  333  356  359 #> [16828,]  333  357  358 #> [16829,]  332  356  359 #> [16830,]  332  356  359 #> [16831,]  332  356  359 #> [16832,]  333  356  359 #> [16833,]  333  357  358 #> [16834,]  332  356  359 #> [16835,]  332  356  359 #> [16836,]  333  356  359 #> [16837,]  332  356  359 #> [16838,]  333  357  358 #> [16839,]  333  356  359 #> [16840,]  333  356  359 #> [16841,]  333  357  358 #> [16842,]  332  357  358 #> [16843,]  332  357  358 #> [16844,]  332  356  359 #> [16845,]  333  357  358 #> [16846,]  332  357  358 #> [16847,]  332  356  359 #> [16848,]  332  356  359 #> [16849,]  333  356  359 #> [16850,]  333  357  358 #> [16851,]  333  357  358 #> [16852,]  333  357  358 #> [16853,]  333  357  358 #> [16854,]  333  356  359 #> [16855,]  333  357  358 #> [16856,]  332  357  358 #> [16857,]  333  357  358 #> [16858,]  333  357  358 #> [16859,]  333  356  359 #> [16860,]  332  357  358 #> [16861,]  332  357  358 #> [16862,]  333  356  359 #> [16863,]  332  357  358 #> [16864,]  332  357  358 #> [16865,]  332  357  358 #> [16866,]  332  357  358 #> [16867,]  333  357  358 #> [16868,]  332  357  358 #> [16869,]  333  357  358 #> [16870,]  332  356  359 #> [16871,]  333  357  358 #> [16872,]  333  357  358 #> [16873,]  333  357  358 #> [16874,]  333  357  358 #> [16875,]  332  357  358 #> [16876,]  333  357  358 #> [16877,]  333  356  359 #> [16878,]  332  357  358 #> [16879,]  332  356  359 #> [16880,]  333  356  359 #> [16881,]  332  357  358 #> [16882,]  333  357  358 #> [16883,]  333  356  359 #> [16884,]  333  357  358 #> [16885,]  333  356  359 #> [16886,]  333  356  359 #> [16887,]  333  357  358 #> [16888,]  333  357  358 #> [16889,]  333  357  358 #> [16890,]  333  357  358 #> [16891,]  333  357  358 #> [16892,]  332  357  358 #> [16893,]  333  356  359 #> [16894,]  332  357  358 #> [16895,]  332  356  359 #> [16896,]  332  357  358 #> [16897,]  333  357  358 #> [16898,]  333  356  359 #> [16899,]  333  357  358 #> [16900,]  332  356  359 #> [16901,]  335  359  362 #> [16902,]  335  359  362 #> [16903,]  334  358  360 #> [16904,]  335  359  362 #> [16905,]  335  359  362 #> [16906,]  335  359  363 #> [16907,]  335  359  362 #> [16908,]  335  359  362 #> [16909,]  335  359  362 #> [16910,]  335  359  362 #> [16911,]  334  358  361 #> [16912,]  334  358  360 #> [16913,]  335  359  362 #> [16914,]  334  358  361 #> [16915,]  335  359  362 #> [16916,]  335  359  362 #> [16917,]  335  359  362 #> [16918,]  335  359  362 #> [16919,]  334  358  361 #> [16920,]  334  358  361 #> [16921,]  335  359  362 #> [16922,]  334  358  361 #> [16923,]  335  359  362 #> [16924,]  334  358  361 #> [16925,]  335  359  363 #> [16926,]  334  358  361 #> [16927,]  335  359  362 #> [16928,]  335  359  363 #> [16929,]  334  358  361 #> [16930,]  334  358  361 #> [16931,]  335  359  362 #> [16932,]  334  358  360 #> [16933,]  335  359  363 #> [16934,]  334  358  361 #> [16935,]  335  359  362 #> [16936,]  334  358  361 #> [16937,]  335  359  362 #> [16938,]  335  359  362 #> [16939,]  335  359  362 #> [16940,]  334  358  360 #> [16941,]  334  358  361 #> [16942,]  334  358  361 #> [16943,]  335  359  362 #> [16944,]  335  359  362 #> [16945,]  335  359  362 #> [16946,]  335  359  362 #> [16947,]  335  359  362 #> [16948,]  334  358  361 #> [16949,]  335  359  362 #> [16950,]  335  359  362 #> [16951,]  334  358  361 #> [16952,]  335  359  362 #> [16953,]  335  359  362 #> [16954,]  334  358  361 #> [16955,]  335  359  362 #> [16956,]  335  359  362 #> [16957,]  335  359  362 #> [16958,]  335  359  362 #> [16959,]  335  359  362 #> [16960,]  334  358  360 #> [16961,]  335  359  362 #> [16962,]  334  358  361 #> [16963,]  334  358  361 #> [16964,]  335  359  362 #> [16965,]  335  359  363 #> [16966,]  334  358  361 #> [16967,]  334  358  361 #> [16968,]  334  358  360 #> [16969,]  334  358  361 #> [16970,]  335  359  363 #> [16971,]  335  359  362 #> [16972,]  335  359  362 #> [16973,]  335  359  363 #> [16974,]  335  359  362 #> [16975,]  335  359  362 #> [16976,]  335  359  362 #> [16977,]  335  359  362 #> [16978,]  334  358  361 #> [16979,]  335  359  362 #> [16980,]  334  358  360 #> [16981,]  334  358  361 #> [16982,]  335  359  362 #> [16983,]  334  358  361 #> [16984,]  335  359  363 #> [16985,]  335  359  362 #> [16986,]  335  359  362 #> [16987,]  335  359  362 #> [16988,]  335  359  362 #> [16989,]  334  358  361 #> [16990,]  335  359  362 #> [16991,]  334  358  361 #> [16992,]  335  359  362 #> [16993,]  335  359  363 #> [16994,]  335  359  362 #> [16995,]  335  359  362 #> [16996,]  335  359  362 #> [16997,]  335  359  363 #> [16998,]  335  359  363 #> [16999,]  335  359  362 #> [17000,]  335  359  362 #> [17001,]  337  361  364 #> [17002,]  337  361  365 #> [17003,]  336  360  364 #> [17004,]  337  361  364 #> [17005,]  337  361  365 #> [17006,]  337  361  364 #> [17007,]  336  360  364 #> [17008,]  336  360  364 #> [17009,]  337  361  365 #> [17010,]  337  361  365 #> [17011,]  337  361  364 #> [17012,]  337  361  365 #> [17013,]  336  360  365 #> [17014,]  337  361  364 #> [17015,]  337  361  364 #> [17016,]  336  360  364 #> [17017,]  337  361  365 #> [17018,]  337  361  365 #> [17019,]  337  361  364 #> [17020,]  336  360  365 #> [17021,]  337  361  365 #> [17022,]  336  360  364 #> [17023,]  337  361  365 #> [17024,]  336  360  365 #> [17025,]  336  360  364 #> [17026,]  337  361  364 #> [17027,]  337  361  365 #> [17028,]  337  361  364 #> [17029,]  337  361  365 #> [17030,]  337  361  364 #> [17031,]  337  361  365 #> [17032,]  337  361  365 #> [17033,]  337  361  365 #> [17034,]  337  361  364 #> [17035,]  337  361  364 #> [17036,]  337  361  365 #> [17037,]  337  361  364 #> [17038,]  337  361  364 #> [17039,]  336  360  364 #> [17040,]  336  360  365 #> [17041,]  337  361  364 #> [17042,]  337  361  364 #> [17043,]  337  361  364 #> [17044,]  336  360  365 #> [17045,]  337  361  364 #> [17046,]  336  360  364 #> [17047,]  337  361  364 #> [17048,]  337  361  364 #> [17049,]  336  360  364 #> [17050,]  336  360  364 #> [17051,]  337  361  364 #> [17052,]  337  361  364 #> [17053,]  336  360  365 #> [17054,]  337  361  364 #> [17055,]  336  360  364 #> [17056,]  336  360  364 #> [17057,]  337  361  364 #> [17058,]  337  361  364 #> [17059,]  336  360  364 #> [17060,]  337  361  365 #> [17061,]  337  361  365 #> [17062,]  337  361  364 #> [17063,]  336  360  365 #> [17064,]  337  361  364 #> [17065,]  336  360  364 #> [17066,]  336  360  364 #> [17067,]  337  361  364 #> [17068,]  337  361  364 #> [17069,]  337  361  364 #> [17070,]  336  360  365 #> [17071,]  337  361  364 #> [17072,]  336  360  364 #> [17073,]  337  361  364 #> [17074,]  337  361  364 #> [17075,]  337  361  365 #> [17076,]  337  361  364 #> [17077,]  337  361  364 #> [17078,]  337  361  364 #> [17079,]  337  361  364 #> [17080,]  337  361  365 #> [17081,]  337  361  365 #> [17082,]  337  361  364 #> [17083,]  337  361  365 #> [17084,]  336  360  365 #> [17085,]  337  361  364 #> [17086,]  336  360  365 #> [17087,]  337  361  364 #> [17088,]  337  361  365 #> [17089,]  336  360  364 #> [17090,]  336  360  364 #> [17091,]  337  361  364 #> [17092,]  337  361  364 #> [17093,]  337  361  364 #> [17094,]  337  361  364 #> [17095,]  337  361  364 #> [17096,]  337  361  364 #> [17097,]  337  361  364 #> [17098,]  336  360  364 #> [17099,]  337  361  364 #> [17100,]  336  360  364 #> [17101,]  338  362  366 #> [17102,]  338  362  367 #> [17103,]  338  362  367 #> [17104,]  338  362  366 #> [17105,]  338  362  366 #> [17106,]  338  362  367 #> [17107,]  338  362  366 #> [17108,]  338  362  366 #> [17109,]  338  362  366 #> [17110,]  338  362  366 #> [17111,]  338  362  366 #> [17112,]  338  362  367 #> [17113,]  339  363  369 #> [17114,]  338  362  366 #> [17115,]  338  362  366 #> [17116,]  338  362  366 #> [17117,]  338  362  366 #> [17118,]  339  363  369 #> [17119,]  338  362  367 #> [17120,]  338  362  367 #> [17121,]  338  362  366 #> [17122,]  338  362  366 #> [17123,]  338  362  366 #> [17124,]  338  362  366 #> [17125,]  338  362  367 #> [17126,]  338  362  366 #> [17127,]  338  362  366 #> [17128,]  338  362  367 #> [17129,]  338  362  366 #> [17130,]  338  362  366 #> [17131,]  338  362  367 #> [17132,]  338  362  366 #> [17133,]  338  362  367 #> [17134,]  338  362  367 #> [17135,]  338  362  366 #> [17136,]  338  362  366 #> [17137,]  338  362  366 #> [17138,]  338  362  366 #> [17139,]  338  362  366 #> [17140,]  338  362  366 #> [17141,]  338  362  366 #> [17142,]  339  363  368 #> [17143,]  338  362  366 #> [17144,]  338  362  366 #> [17145,]  338  362  366 #> [17146,]  338  362  366 #> [17147,]  338  362  366 #> [17148,]  338  362  366 #> [17149,]  338  362  366 #> [17150,]  338  362  366 #> [17151,]  339  363  368 #> [17152,]  338  362  366 #> [17153,]  339  363  369 #> [17154,]  338  362  366 #> [17155,]  338  362  366 #> [17156,]  338  362  366 #> [17157,]  338  362  366 #> [17158,]  338  362  366 #> [17159,]  338  362  366 #> [17160,]  338  362  367 #> [17161,]  338  362  366 #> [17162,]  338  362  366 #> [17163,]  338  362  366 #> [17164,]  338  362  366 #> [17165,]  339  363  368 #> [17166,]  338  362  366 #> [17167,]  338  362  366 #> [17168,]  338  362  366 #> [17169,]  338  362  366 #> [17170,]  338  362  367 #> [17171,]  338  362  367 #> [17172,]  338  362  366 #> [17173,]  338  362  367 #> [17174,]  338  362  366 #> [17175,]  338  362  366 #> [17176,]  338  362  366 #> [17177,]  338  362  366 #> [17178,]  338  362  366 #> [17179,]  339  363  368 #> [17180,]  338  362  366 #> [17181,]  338  362  366 #> [17182,]  338  362  366 #> [17183,]  338  362  366 #> [17184,]  339  363  369 #> [17185,]  338  362  366 #> [17186,]  338  362  366 #> [17187,]  338  362  366 #> [17188,]  338  362  366 #> [17189,]  338  362  366 #> [17190,]  338  362  366 #> [17191,]  339  363  369 #> [17192,]  338  362  366 #> [17193,]  339  363  368 #> [17194,]  339  363  368 #> [17195,]  338  362  366 #> [17196,]  338  362  366 #> [17197,]  338  362  367 #> [17198,]  338  362  367 #> [17199,]  338  362  366 #> [17200,]  338  362  366 #> [17201,]  341  364  371 #> [17202,]  340  367  370 #> [17203,]  341  364  371 #> [17204,]  341  364  371 #> [17205,]  341  365  371 #> [17206,]  340  367  370 #> [17207,]  341  365  371 #> [17208,]  341  364  371 #> [17209,]  341  365  371 #> [17210,]  341  365  371 #> [17211,]  340  367  370 #> [17212,]  340  367  370 #> [17213,]  341  365  371 #> [17214,]  341  364  371 #> [17215,]  340  367  370 #> [17216,]  341  364  371 #> [17217,]  340  366  370 #> [17218,]  340  367  370 #> [17219,]  340  367  370 #> [17220,]  341  365  371 #> [17221,]  340  367  370 #> [17222,]  341  365  371 #> [17223,]  340  367  370 #> [17224,]  341  365  371 #> [17225,]  341  364  371 #> [17226,]  340  367  370 #> [17227,]  341  365  371 #> [17228,]  341  364  371 #> [17229,]  340  366  370 #> [17230,]  340  367  370 #> [17231,]  340  367  370 #> [17232,]  340  367  370 #> [17233,]  341  365  371 #> [17234,]  340  367  370 #> [17235,]  340  367  370 #> [17236,]  341  365  371 #> [17237,]  340  367  370 #> [17238,]  341  364  371 #> [17239,]  341  365  371 #> [17240,]  341  365  371 #> [17241,]  341  365  371 #> [17242,]  340  367  370 #> [17243,]  340  366  370 #> [17244,]  340  366  370 #> [17245,]  341  364  371 #> [17246,]  340  366  370 #> [17247,]  340  366  370 #> [17248,]  340  367  370 #> [17249,]  341  364  371 #> [17250,]  341  365  371 #> [17251,]  340  366  370 #> [17252,]  341  364  371 #> [17253,]  341  365  371 #> [17254,]  341  365  371 #> [17255,]  341  364  371 #> [17256,]  340  366  370 #> [17257,]  341  364  371 #> [17258,]  341  365  371 #> [17259,]  341  364  371 #> [17260,]  340  367  370 #> [17261,]  340  367  370 #> [17262,]  340  367  370 #> [17263,]  340  366  370 #> [17264,]  340  367  370 #> [17265,]  340  366  370 #> [17266,]  340  366  370 #> [17267,]  341  364  371 #> [17268,]  340  367  370 #> [17269,]  340  367  370 #> [17270,]  340  366  370 #> [17271,]  341  365  371 #> [17272,]  341  364  371 #> [17273,]  341  364  371 #> [17274,]  341  365  371 #> [17275,]  340  367  370 #> [17276,]  341  365  371 #> [17277,]  341  364  371 #> [17278,]  340  366  370 #> [17279,]  340  366  370 #> [17280,]  341  365  371 #> [17281,]  340  366  370 #> [17282,]  340  367  370 #> [17283,]  341  365  371 #> [17284,]  341  365  371 #> [17285,]  341  364  371 #> [17286,]  341  365  371 #> [17287,]  341  365  371 #> [17288,]  341  365  371 #> [17289,]  340  366  370 #> [17290,]  341  365  371 #> [17291,]  341  364  371 #> [17292,]  340  367  370 #> [17293,]  340  367  370 #> [17294,]  340  366  370 #> [17295,]  340  367  370 #> [17296,]  340  367  370 #> [17297,]  340  367  370 #> [17298,]  341  364  371 #> [17299,]  341  364  371 #> [17300,]  340  366  370 #> [17301,]  343  369  373 #> [17302,]  343  369  373 #> [17303,]  343  369  373 #> [17304,]  342  368  372 #> [17305,]  343  369  373 #> [17306,]  343  369  373 #> [17307,]  343  369  373 #> [17308,]  343  369  373 #> [17309,]  342  368  372 #> [17310,]  343  369  373 #> [17311,]  343  369  373 #> [17312,]  343  369  373 #> [17313,]  343  369  373 #> [17314,]  343  369  373 #> [17315,]  343  369  373 #> [17316,]  343  369  373 #> [17317,]  342  368  372 #> [17318,]  343  369  373 #> [17319,]  343  369  373 #> [17320,]  343  369  373 #> [17321,]  343  369  373 #> [17322,]  343  369  373 #> [17323,]  343  369  373 #> [17324,]  343  369  373 #> [17325,]  343  369  373 #> [17326,]  343  369  373 #> [17327,]  343  369  373 #> [17328,]  343  369  373 #> [17329,]  343  369  373 #> [17330,]  343  369  373 #> [17331,]  343  369  373 #> [17332,]  343  369  373 #> [17333,]  343  369  373 #> [17334,]  343  369  373 #> [17335,]  343  369  373 #> [17336,]  343  369  373 #> [17337,]  343  369  373 #> [17338,]  343  369  373 #> [17339,]  343  369  373 #> [17340,]  343  369  373 #> [17341,]  343  369  373 #> [17342,]  343  369  373 #> [17343,]  343  369  373 #> [17344,]  343  369  373 #> [17345,]  343  369  373 #> [17346,]  343  369  373 #> [17347,]  343  369  373 #> [17348,]  343  369  373 #> [17349,]  343  369  373 #> [17350,]  343  369  373 #> [17351,]  343  369  373 #> [17352,]  342  368  372 #> [17353,]  343  369  373 #> [17354,]  343  369  373 #> [17355,]  343  369  373 #> [17356,]  343  369  373 #> [17357,]  343  369  373 #> [17358,]  343  369  373 #> [17359,]  343  369  373 #> [17360,]  343  369  373 #> [17361,]  343  369  373 #> [17362,]  343  369  373 #> [17363,]  343  369  373 #> [17364,]  343  369  373 #> [17365,]  343  369  373 #> [17366,]  343  369  373 #> [17367,]  343  369  373 #> [17368,]  343  369  373 #> [17369,]  343  369  373 #> [17370,]  343  369  373 #> [17371,]  343  369  373 #> [17372,]  343  369  373 #> [17373,]  343  369  373 #> [17374,]  343  369  373 #> [17375,]  343  369  373 #> [17376,]  343  369  373 #> [17377,]  343  369  373 #> [17378,]  343  369  373 #> [17379,]  343  369  373 #> [17380,]  343  369  373 #> [17381,]  342  368  372 #> [17382,]  342  368  372 #> [17383,]  343  369  373 #> [17384,]  343  369  373 #> [17385,]  343  369  373 #> [17386,]  343  369  373 #> [17387,]  343  369  373 #> [17388,]  343  369  373 #> [17389,]  343  369  373 #> [17390,]  343  369  373 #> [17391,]  343  369  373 #> [17392,]  343  369  373 #> [17393,]  343  369  373 #> [17394,]  343  369  373 #> [17395,]  342  368  372 #> [17396,]  343  369  373 #> [17397,]  343  369  373 #> [17398,]  343  369  373 #> [17399,]  343  369  373 #> [17400,]  343  369  373 #> [17401,]  345  371  375 #> [17402,]  345  371  375 #> [17403,]  344  370  374 #> [17404,]  345  371  375 #> [17405,]  345  371  375 #> [17406,]  345  371  375 #> [17407,]  344  370  374 #> [17408,]  345  371  375 #> [17409,]  345  371  375 #> [17410,]  345  371  375 #> [17411,]  345  371  375 #> [17412,]  344  370  374 #> [17413,]  345  371  375 #> [17414,]  345  371  375 #> [17415,]  345  371  375 #> [17416,]  345  371  375 #> [17417,]  345  371  375 #> [17418,]  345  371  375 #> [17419,]  345  371  375 #> [17420,]  345  371  375 #> [17421,]  345  371  375 #> [17422,]  345  371  375 #> [17423,]  345  371  375 #> [17424,]  345  371  375 #> [17425,]  345  371  375 #> [17426,]  345  371  375 #> [17427,]  345  371  375 #> [17428,]  345  371  375 #> [17429,]  345  371  375 #> [17430,]  345  371  375 #> [17431,]  344  370  374 #> [17432,]  345  371  375 #> [17433,]  345  371  375 #> [17434,]  345  371  375 #> [17435,]  345  371  375 #> [17436,]  345  371  375 #> [17437,]  345  371  375 #> [17438,]  345  371  375 #> [17439,]  345  371  375 #> [17440,]  345  371  375 #> [17441,]  345  371  375 #> [17442,]  345  371  375 #> [17443,]  345  371  375 #> [17444,]  345  371  375 #> [17445,]  345  371  375 #> [17446,]  345  371  375 #> [17447,]  345  371  375 #> [17448,]  345  371  375 #> [17449,]  345  371  375 #> [17450,]  345  371  375 #> [17451,]  345  371  375 #> [17452,]  344  370  374 #> [17453,]  345  371  375 #> [17454,]  345  371  375 #> [17455,]  345  371  375 #> [17456,]  345  371  375 #> [17457,]  345  371  375 #> [17458,]  345  371  375 #> [17459,]  344  370  374 #> [17460,]  344  370  374 #> [17461,]  345  371  375 #> [17462,]  345  371  375 #> [17463,]  345  371  375 #> [17464,]  345  371  375 #> [17465,]  345  371  375 #> [17466,]  345  371  375 #> [17467,]  345  371  375 #> [17468,]  345  371  375 #> [17469,]  345  371  375 #> [17470,]  345  371  375 #> [17471,]  345  371  375 #> [17472,]  345  371  375 #> [17473,]  345  371  375 #> [17474,]  345  371  375 #> [17475,]  345  371  375 #> [17476,]  345  371  375 #> [17477,]  345  371  375 #> [17478,]  345  371  375 #> [17479,]  345  371  375 #> [17480,]  345  371  375 #> [17481,]  345  371  375 #> [17482,]  345  371  375 #> [17483,]  345  371  375 #> [17484,]  345  371  375 #> [17485,]  345  371  375 #> [17486,]  345  371  375 #> [17487,]  345  371  375 #> [17488,]  345  371  375 #> [17489,]  345  371  375 #> [17490,]  345  371  375 #> [17491,]  345  371  375 #> [17492,]  345  371  375 #> [17493,]  345  371  375 #> [17494,]  345  371  375 #> [17495,]  345  371  375 #> [17496,]  345  371  375 #> [17497,]  344  370  374 #> [17498,]  345  371  375 #> [17499,]  345  371  375 #> [17500,]  345  371  375 #> [17501,]  347  373  377 #> [17502,]  347  373  377 #> [17503,]  346  372  376 #> [17504,]  346  372  376 #> [17505,]  346  372  376 #> [17506,]  346  372  376 #> [17507,]  347  373  377 #> [17508,]  347  373  377 #> [17509,]  346  372  376 #> [17510,]  346  372  376 #> [17511,]  346  372  376 #> [17512,]  347  373  377 #> [17513,]  347  373  377 #> [17514,]  346  372  376 #> [17515,]  347  373  377 #> [17516,]  347  373  377 #> [17517,]  347  373  377 #> [17518,]  347  373  377 #> [17519,]  347  373  377 #> [17520,]  347  373  377 #> [17521,]  346  372  376 #> [17522,]  347  373  377 #> [17523,]  347  373  377 #> [17524,]  346  372  376 #> [17525,]  346  372  376 #> [17526,]  347  373  377 #> [17527,]  347  373  377 #> [17528,]  346  372  376 #> [17529,]  347  373  377 #> [17530,]  347  373  377 #> [17531,]  346  372  376 #> [17532,]  346  372  376 #> [17533,]  347  373  377 #> [17534,]  346  372  376 #> [17535,]  346  372  376 #> [17536,]  347  373  377 #> [17537,]  347  373  377 #> [17538,]  347  373  377 #> [17539,]  346  372  376 #> [17540,]  346  372  376 #> [17541,]  347  373  377 #> [17542,]  346  372  376 #> [17543,]  347  373  377 #> [17544,]  347  373  377 #> [17545,]  347  373  377 #> [17546,]  347  373  377 #> [17547,]  346  372  376 #> [17548,]  346  372  376 #> [17549,]  347  373  377 #> [17550,]  347  373  377 #> [17551,]  347  373  377 #> [17552,]  346  372  376 #> [17553,]  347  373  377 #> [17554,]  346  372  376 #> [17555,]  347  373  377 #> [17556,]  347  373  377 #> [17557,]  346  372  376 #> [17558,]  347  373  377 #> [17559,]  347  373  377 #> [17560,]  347  373  377 #> [17561,]  347  373  377 #> [17562,]  346  372  376 #> [17563,]  347  373  377 #> [17564,]  347  373  377 #> [17565,]  346  372  376 #> [17566,]  347  373  377 #> [17567,]  346  372  376 #> [17568,]  347  373  377 #> [17569,]  347  373  377 #> [17570,]  346  372  376 #> [17571,]  347  373  377 #> [17572,]  346  372  376 #> [17573,]  346  372  376 #> [17574,]  346  372  376 #> [17575,]  347  373  377 #> [17576,]  346  372  376 #> [17577,]  347  373  377 #> [17578,]  347  373  377 #> [17579,]  346  372  376 #> [17580,]  347  373  377 #> [17581,]  347  373  377 #> [17582,]  346  372  376 #> [17583,]  347  373  377 #> [17584,]  347  373  377 #> [17585,]  347  373  377 #> [17586,]  346  372  376 #> [17587,]  347  373  377 #> [17588,]  346  372  376 #> [17589,]  346  372  376 #> [17590,]  347  373  377 #> [17591,]  346  372  376 #> [17592,]  346  372  376 #> [17593,]  347  373  377 #> [17594,]  346  372  376 #> [17595,]  347  373  377 #> [17596,]  347  373  377 #> [17597,]  347  373  377 #> [17598,]  346  372  376 #> [17599,]  346  372  376 #> [17600,]  347  373  377 #> [17601,]  348  374  378 #> [17602,]  348  374  381 #> [17603,]  348  374  379 #> [17604,]  349  374  378 #> [17605,]  348  374  379 #> [17606,]  348  374  381 #> [17607,]  349  374  379 #> [17608,]  348  374  378 #> [17609,]  348  374  378 #> [17610,]  349  374  379 #> [17611,]  348  374  380 #> [17612,]  348  374  381 #> [17613,]  348  374  378 #> [17614,]  348  374  378 #> [17615,]  349  374  381 #> [17616,]  349  374  379 #> [17617,]  349  374  380 #> [17618,]  349  374  379 #> [17619,]  348  374  381 #> [17620,]  348  374  379 #> [17621,]  349  374  378 #> [17622,]  348  374  378 #> [17623,]  349  374  381 #> [17624,]  348  374  379 #> [17625,]  349  374  379 #> [17626,]  348  374  381 #> [17627,]  349  374  378 #> [17628,]  349  374  379 #> [17629,]  348  374  381 #> [17630,]  348  374  381 #> [17631,]  348  374  381 #> [17632,]  348  374  379 #> [17633,]  348  374  379 #> [17634,]  348  374  381 #> [17635,]  348  374  380 #> [17636,]  348  374  379 #> [17637,]  348  374  381 #> [17638,]  348  374  379 #> [17639,]  349  374  379 #> [17640,]  348  374  379 #> [17641,]  348  374  379 #> [17642,]  348  374  381 #> [17643,]  349  374  381 #> [17644,]  348  374  380 #> [17645,]  349  374  378 #> [17646,]  349  374  378 #> [17647,]  349  374  381 #> [17648,]  348  374  381 #> [17649,]  348  374  378 #> [17650,]  348  374  379 #> [17651,]  348  374  379 #> [17652,]  348  374  378 #> [17653,]  349  374  379 #> [17654,]  348  374  378 #> [17655,]  348  374  378 #> [17656,]  349  374  381 #> [17657,]  348  374  379 #> [17658,]  348  374  378 #> [17659,]  348  374  379 #> [17660,]  348  374  381 #> [17661,]  349  374  381 #> [17662,]  348  374  378 #> [17663,]  348  374  381 #> [17664,]  349  374  381 #> [17665,]  348  374  381 #> [17666,]  348  374  380 #> [17667,]  348  374  378 #> [17668,]  348  374  381 #> [17669,]  348  374  378 #> [17670,]  348  374  381 #> [17671,]  349  374  379 #> [17672,]  349  374  379 #> [17673,]  349  374  379 #> [17674,]  349  374  378 #> [17675,]  349  374  381 #> [17676,]  349  374  379 #> [17677,]  349  374  379 #> [17678,]  348  374  381 #> [17679,]  348  374  381 #> [17680,]  348  374  378 #> [17681,]  348  374  380 #> [17682,]  348  374  378 #> [17683,]  348  374  378 #> [17684,]  349  374  379 #> [17685,]  348  374  378 #> [17686,]  348  374  379 #> [17687,]  348  374  378 #> [17688,]  349  374  378 #> [17689,]  348  374  378 #> [17690,]  348  374  378 #> [17691,]  348  374  378 #> [17692,]  348  374  380 #> [17693,]  348  374  379 #> [17694,]  349  374  381 #> [17695,]  349  374  380 #> [17696,]  348  374  381 #> [17697,]  348  374  379 #> [17698,]  348  374  379 #> [17699,]  348  374  378 #> [17700,]  349  374  381 #> [17701,]  351  376  383 #> [17702,]  351  376  383 #> [17703,]  351  376  383 #> [17704,]  350  375  382 #> [17705,]  351  376  383 #> [17706,]  351  376  383 #> [17707,]  351  376  383 #> [17708,]  350  375  382 #> [17709,]  350  375  382 #> [17710,]  350  375  382 #> [17711,]  351  376  383 #> [17712,]  351  376  383 #> [17713,]  351  376  383 #> [17714,]  351  376  383 #> [17715,]  351  376  383 #> [17716,]  351  376  383 #> [17717,]  351  376  383 #> [17718,]  351  376  383 #> [17719,]  351  376  383 #> [17720,]  351  376  383 #> [17721,]  351  376  383 #> [17722,]  351  376  383 #> [17723,]  351  376  383 #> [17724,]  351  376  383 #> [17725,]  351  376  383 #> [17726,]  351  376  383 #> [17727,]  351  376  383 #> [17728,]  351  376  383 #> [17729,]  351  376  383 #> [17730,]  351  376  383 #> [17731,]  351  376  383 #> [17732,]  351  376  383 #> [17733,]  351  376  383 #> [17734,]  351  376  383 #> [17735,]  351  376  383 #> [17736,]  351  376  383 #> [17737,]  351  376  383 #> [17738,]  351  376  383 #> [17739,]  351  376  383 #> [17740,]  351  376  383 #> [17741,]  351  376  383 #> [17742,]  351  376  383 #> [17743,]  350  375  382 #> [17744,]  351  376  383 #> [17745,]  351  376  383 #> [17746,]  351  376  383 #> [17747,]  351  376  383 #> [17748,]  351  376  383 #> [17749,]  351  376  383 #> [17750,]  351  376  383 #> [17751,]  350  375  382 #> [17752,]  351  376  383 #> [17753,]  351  376  383 #> [17754,]  351  376  383 #> [17755,]  351  376  383 #> [17756,]  351  376  383 #> [17757,]  351  376  383 #> [17758,]  351  376  383 #> [17759,]  351  376  383 #> [17760,]  350  375  382 #> [17761,]  351  376  383 #> [17762,]  351  376  383 #> [17763,]  351  376  383 #> [17764,]  351  376  383 #> [17765,]  351  376  383 #> [17766,]  351  376  383 #> [17767,]  351  376  383 #> [17768,]  351  376  383 #> [17769,]  351  376  383 #> [17770,]  351  376  383 #> [17771,]  351  376  383 #> [17772,]  351  376  383 #> [17773,]  351  376  383 #> [17774,]  351  376  383 #> [17775,]  351  376  383 #> [17776,]  351  376  383 #> [17777,]  351  376  383 #> [17778,]  351  376  383 #> [17779,]  351  376  383 #> [17780,]  351  376  383 #> [17781,]  351  376  383 #> [17782,]  351  376  383 #> [17783,]  351  376  383 #> [17784,]  351  376  383 #> [17785,]  350  375  382 #> [17786,]  351  376  383 #> [17787,]  351  376  383 #> [17788,]  351  376  383 #> [17789,]  351  376  383 #> [17790,]  351  376  383 #> [17791,]  350  375  382 #> [17792,]  351  376  383 #> [17793,]  351  376  383 #> [17794,]  351  376  383 #> [17795,]  350  375  382 #> [17796,]  351  376  383 #> [17797,]  351  376  383 #> [17798,]  351  376  383 #> [17799,]  351  376  383 #> [17800,]  351  376  383 #> [17801,]  353  378  384 #> [17802,]  352  377  385 #> [17803,]  352  377  385 #> [17804,]  353  378  384 #> [17805,]  352  377  385 #> [17806,]  352  377  385 #> [17807,]  353  378  384 #> [17808,]  353  378  384 #> [17809,]  353  378  384 #> [17810,]  353  378  384 #> [17811,]  352  377  385 #> [17812,]  352  377  385 #> [17813,]  353  378  384 #> [17814,]  352  377  385 #> [17815,]  353  378  384 #> [17816,]  353  378  384 #> [17817,]  353  378  384 #> [17818,]  353  378  384 #> [17819,]  352  377  385 #> [17820,]  352  377  385 #> [17821,]  353  378  384 #> [17822,]  352  377  385 #> [17823,]  353  378  384 #> [17824,]  352  377  385 #> [17825,]  353  378  384 #> [17826,]  352  377  385 #> [17827,]  353  378  384 #> [17828,]  353  378  384 #> [17829,]  352  377  385 #> [17830,]  352  377  385 #> [17831,]  352  377  385 #> [17832,]  352  377  385 #> [17833,]  352  377  385 #> [17834,]  352  377  385 #> [17835,]  352  377  385 #> [17836,]  352  377  385 #> [17837,]  352  377  385 #> [17838,]  352  377  385 #> [17839,]  353  378  384 #> [17840,]  352  377  385 #> [17841,]  352  377  385 #> [17842,]  352  377  385 #> [17843,]  353  378  384 #> [17844,]  352  377  385 #> [17845,]  353  378  384 #> [17846,]  353  378  384 #> [17847,]  353  378  384 #> [17848,]  352  377  385 #> [17849,]  352  377  385 #> [17850,]  352  377  385 #> [17851,]  352  377  385 #> [17852,]  352  377  385 #> [17853,]  353  378  384 #> [17854,]  352  377  385 #> [17855,]  352  377  385 #> [17856,]  353  378  384 #> [17857,]  352  377  385 #> [17858,]  352  377  385 #> [17859,]  352  377  385 #> [17860,]  352  377  385 #> [17861,]  353  378  384 #> [17862,]  352  377  385 #> [17863,]  352  377  385 #> [17864,]  353  378  384 #> [17865,]  352  377  385 #> [17866,]  352  377  385 #> [17867,]  352  377  385 #> [17868,]  352  377  385 #> [17869,]  352  377  385 #> [17870,]  353  378  384 #> [17871,]  353  378  384 #> [17872,]  353  378  384 #> [17873,]  353  378  384 #> [17874,]  353  378  384 #> [17875,]  353  378  384 #> [17876,]  353  378  384 #> [17877,]  353  378  384 #> [17878,]  352  377  385 #> [17879,]  352  377  385 #> [17880,]  352  377  385 #> [17881,]  352  377  385 #> [17882,]  353  378  384 #> [17883,]  352  377  385 #> [17884,]  353  378  384 #> [17885,]  352  377  385 #> [17886,]  352  377  385 #> [17887,]  353  378  384 #> [17888,]  353  378  384 #> [17889,]  352  377  385 #> [17890,]  353  378  384 #> [17891,]  352  377  385 #> [17892,]  352  377  385 #> [17893,]  352  377  385 #> [17894,]  353  378  384 #> [17895,]  353  378  384 #> [17896,]  353  378  384 #> [17897,]  352  377  385 #> [17898,]  352  377  385 #> [17899,]  352  377  385 #> [17900,]  353  378  384 #> [17901,]  354  379  386 #> [17902,]  354  379  386 #> [17903,]  354  379  386 #> [17904,]  355  380  387 #> [17905,]  354  379  386 #> [17906,]  354  379  386 #> [17907,]  354  379  386 #> [17908,]  354  379  386 #> [17909,]  354  379  386 #> [17910,]  354  379  386 #> [17911,]  355  380  387 #> [17912,]  355  380  387 #> [17913,]  354  379  386 #> [17914,]  355  380  387 #> [17915,]  355  380  387 #> [17916,]  354  379  386 #> [17917,]  354  379  386 #> [17918,]  354  379  386 #> [17919,]  355  380  387 #> [17920,]  354  379  386 #> [17921,]  355  380  387 #> [17922,]  354  379  386 #> [17923,]  354  379  386 #> [17924,]  354  379  386 #> [17925,]  354  379  386 #> [17926,]  354  379  386 #> [17927,]  355  380  387 #> [17928,]  354  379  386 #> [17929,]  354  379  386 #> [17930,]  354  379  386 #> [17931,]  354  379  386 #> [17932,]  354  379  386 #> [17933,]  354  379  386 #> [17934,]  354  379  386 #> [17935,]  354  379  386 #> [17936,]  354  379  386 #> [17937,]  354  379  386 #> [17938,]  355  380  387 #> [17939,]  354  379  386 #> [17940,]  354  379  386 #> [17941,]  355  380  387 #> [17942,]  355  380  387 #> [17943,]  354  379  386 #> [17944,]  354  379  386 #> [17945,]  354  379  386 #> [17946,]  354  379  386 #> [17947,]  354  379  386 #> [17948,]  355  380  387 #> [17949,]  354  379  386 #> [17950,]  354  379  386 #> [17951,]  354  379  386 #> [17952,]  354  379  386 #> [17953,]  354  379  386 #> [17954,]  354  379  386 #> [17955,]  354  379  386 #> [17956,]  354  379  386 #> [17957,]  354  379  386 #> [17958,]  355  380  387 #> [17959,]  354  379  386 #> [17960,]  354  379  386 #> [17961,]  355  380  387 #> [17962,]  354  379  386 #> [17963,]  354  379  386 #> [17964,]  354  379  386 #> [17965,]  354  379  386 #> [17966,]  354  379  386 #> [17967,]  354  379  386 #> [17968,]  355  380  387 #> [17969,]  355  380  387 #> [17970,]  354  379  386 #> [17971,]  354  379  386 #> [17972,]  354  379  386 #> [17973,]  354  379  386 #> [17974,]  355  380  387 #> [17975,]  355  380  387 #> [17976,]  354  379  386 #> [17977,]  354  379  386 #> [17978,]  354  379  386 #> [17979,]  354  379  386 #> [17980,]  354  379  386 #> [17981,]  354  379  386 #> [17982,]  355  380  387 #> [17983,]  354  379  386 #> [17984,]  354  379  386 #> [17985,]  354  379  386 #> [17986,]  354  379  386 #> [17987,]  354  379  386 #> [17988,]  354  379  386 #> [17989,]  354  379  386 #> [17990,]  354  379  386 #> [17991,]  354  379  386 #> [17992,]  355  380  387 #> [17993,]  355  380  387 #> [17994,]  354  379  386 #> [17995,]  354  379  386 #> [17996,]  355  380  387 #> [17997,]  355  380  387 #> [17998,]  354  379  386 #> [17999,]  354  379  386 #> [18000,]  354  379  386 #> [18001,]  357  382  389 #> [18002,]  357  382  389 #> [18003,]  356  381  388 #> [18004,]  356  381  388 #> [18005,]  356  381  388 #> [18006,]  357  382  389 #> [18007,]  356  381  388 #> [18008,]  356  381  388 #> [18009,]  356  381  388 #> [18010,]  356  381  388 #> [18011,]  356  381  388 #> [18012,]  356  381  388 #> [18013,]  357  382  389 #> [18014,]  357  382  389 #> [18015,]  357  382  389 #> [18016,]  357  382  389 #> [18017,]  357  382  389 #> [18018,]  356  381  388 #> [18019,]  356  381  388 #> [18020,]  356  381  388 #> [18021,]  357  382  389 #> [18022,]  356  381  388 #> [18023,]  356  381  388 #> [18024,]  356  381  388 #> [18025,]  356  381  388 #> [18026,]  357  382  389 #> [18027,]  356  381  388 #> [18028,]  356  381  388 #> [18029,]  357  382  389 #> [18030,]  356  381  388 #> [18031,]  356  381  388 #> [18032,]  356  381  388 #> [18033,]  357  382  389 #> [18034,]  356  381  388 #> [18035,]  357  382  389 #> [18036,]  356  381  388 #> [18037,]  356  381  388 #> [18038,]  356  381  388 #> [18039,]  356  381  388 #> [18040,]  356  381  388 #> [18041,]  357  382  389 #> [18042,]  356  381  388 #> [18043,]  356  381  388 #> [18044,]  357  382  389 #> [18045,]  356  381  388 #> [18046,]  356  381  388 #> [18047,]  356  381  388 #> [18048,]  356  381  388 #> [18049,]  356  381  388 #> [18050,]  357  382  389 #> [18051,]  356  381  388 #> [18052,]  356  381  388 #> [18053,]  356  381  388 #> [18054,]  356  381  388 #> [18055,]  356  381  388 #> [18056,]  356  381  388 #> [18057,]  356  381  388 #> [18058,]  356  381  388 #> [18059,]  357  382  389 #> [18060,]  356  381  388 #> [18061,]  357  382  389 #> [18062,]  356  381  388 #> [18063,]  356  381  388 #> [18064,]  356  381  388 #> [18065,]  356  381  388 #> [18066,]  356  381  388 #> [18067,]  356  381  388 #> [18068,]  357  382  389 #> [18069,]  356  381  388 #> [18070,]  357  382  389 #> [18071,]  357  382  389 #> [18072,]  356  381  388 #> [18073,]  357  382  389 #> [18074,]  356  381  388 #> [18075,]  356  381  388 #> [18076,]  357  382  389 #> [18077,]  357  382  389 #> [18078,]  356  381  388 #> [18079,]  357  382  389 #> [18080,]  356  381  388 #> [18081,]  357  382  389 #> [18082,]  356  381  388 #> [18083,]  357  382  389 #> [18084,]  356  381  388 #> [18085,]  356  381  388 #> [18086,]  357  382  389 #> [18087,]  356  381  388 #> [18088,]  356  381  388 #> [18089,]  356  381  388 #> [18090,]  356  381  388 #> [18091,]  356  381  388 #> [18092,]  356  381  388 #> [18093,]  357  382  389 #> [18094,]  357  382  389 #> [18095,]  356  381  388 #> [18096,]  357  382  389 #> [18097,]  356  381  388 #> [18098,]  356  381  388 #> [18099,]  357  382  389 #> [18100,]  356  381  388 #> [18101,]  360  385  391 #> [18102,]  360  385  391 #> [18103,]  359  384  391 #> [18104,]  358  383  390 #> [18105,]  360  385  391 #> [18106,]  359  384  391 #> [18107,]  359  384  391 #> [18108,]  358  383  390 #> [18109,]  358  383  390 #> [18110,]  358  383  390 #> [18111,]  360  385  391 #> [18112,]  360  385  391 #> [18113,]  360  385  391 #> [18114,]  360  385  391 #> [18115,]  360  385  391 #> [18116,]  360  385  391 #> [18117,]  360  385  391 #> [18118,]  360  385  391 #> [18119,]  360  385  391 #> [18120,]  359  384  391 #> [18121,]  359  384  391 #> [18122,]  360  385  391 #> [18123,]  359  384  391 #> [18124,]  360  385  391 #> [18125,]  359  384  391 #> [18126,]  360  385  391 #> [18127,]  360  385  391 #> [18128,]  360  385  391 #> [18129,]  360  385  391 #> [18130,]  360  385  391 #> [18131,]  360  385  391 #> [18132,]  360  385  391 #> [18133,]  360  385  391 #> [18134,]  359  384  391 #> [18135,]  359  384  391 #> [18136,]  360  385  391 #> [18137,]  359  384  391 #> [18138,]  360  385  391 #> [18139,]  360  385  391 #> [18140,]  360  385  391 #> [18141,]  360  385  391 #> [18142,]  359  384  391 #> [18143,]  358  383  390 #> [18144,]  359  384  391 #> [18145,]  360  385  391 #> [18146,]  360  385  391 #> [18147,]  360  385  391 #> [18148,]  360  385  391 #> [18149,]  360  385  391 #> [18150,]  359  384  391 #> [18151,]  358  383  390 #> [18152,]  360  385  391 #> [18153,]  359  384  391 #> [18154,]  359  384  391 #> [18155,]  359  384  391 #> [18156,]  359  384  391 #> [18157,]  359  384  391 #> [18158,]  360  385  391 #> [18159,]  360  385  391 #> [18160,]  358  383  390 #> [18161,]  360  385  391 #> [18162,]  360  385  391 #> [18163,]  360  385  391 #> [18164,]  358  383  390 #> [18165,]  359  384  391 #> [18166,]  360  385  391 #> [18167,]  358  383  390 #> [18168,]  360  385  391 #> [18169,]  360  385  391 #> [18170,]  360  385  391 #> [18171,]  360  385  391 #> [18172,]  360  385  391 #> [18173,]  359  384  391 #> [18174,]  359  384  391 #> [18175,]  360  385  391 #> [18176,]  360  385  391 #> [18177,]  360  385  391 #> [18178,]  360  385  391 #> [18179,]  360  385  391 #> [18180,]  359  384  391 #> [18181,]  359  384  391 #> [18182,]  359  384  391 #> [18183,]  360  385  391 #> [18184,]  359  384  391 #> [18185,]  358  383  390 #> [18186,]  359  384  391 #> [18187,]  360  385  391 #> [18188,]  359  384  391 #> [18189,]  359  384  391 #> [18190,]  360  385  391 #> [18191,]  358  383  390 #> [18192,]  360  385  391 #> [18193,]  360  385  391 #> [18194,]  359  384  391 #> [18195,]  358  383  390 #> [18196,]  360  385  391 #> [18197,]  359  384  391 #> [18198,]  359  384  391 #> [18199,]  359  384  391 #> [18200,]  360  385  391 #> [18201,]  362  387  393 #> [18202,]  362  387  393 #> [18203,]  361  386  392 #> [18204,]  361  386  392 #> [18205,]  361  386  392 #> [18206,]  362  387  393 #> [18207,]  361  386  392 #> [18208,]  361  386  392 #> [18209,]  361  386  392 #> [18210,]  361  386  392 #> [18211,]  361  386  392 #> [18212,]  361  386  392 #> [18213,]  362  387  393 #> [18214,]  362  387  393 #> [18215,]  362  387  393 #> [18216,]  362  387  393 #> [18217,]  362  387  393 #> [18218,]  361  386  392 #> [18219,]  361  386  392 #> [18220,]  361  386  392 #> [18221,]  362  387  393 #> [18222,]  362  387  393 #> [18223,]  361  386  392 #> [18224,]  361  386  392 #> [18225,]  361  386  392 #> [18226,]  362  387  393 #> [18227,]  362  387  393 #> [18228,]  361  386  392 #> [18229,]  362  387  393 #> [18230,]  361  386  392 #> [18231,]  361  386  392 #> [18232,]  361  386  392 #> [18233,]  362  387  393 #> [18234,]  361  386  392 #> [18235,]  362  387  393 #> [18236,]  361  386  392 #> [18237,]  362  387  393 #> [18238,]  361  386  392 #> [18239,]  361  386  392 #> [18240,]  361  386  392 #> [18241,]  362  387  393 #> [18242,]  361  386  392 #> [18243,]  361  386  392 #> [18244,]  362  387  393 #> [18245,]  361  386  392 #> [18246,]  361  386  392 #> [18247,]  361  386  392 #> [18248,]  361  386  392 #> [18249,]  361  386  392 #> [18250,]  362  387  393 #> [18251,]  361  386  392 #> [18252,]  362  387  393 #> [18253,]  361  386  392 #> [18254,]  361  386  392 #> [18255,]  361  386  392 #> [18256,]  361  386  392 #> [18257,]  361  386  392 #> [18258,]  362  387  393 #> [18259,]  362  387  393 #> [18260,]  361  386  392 #> [18261,]  362  387  393 #> [18262,]  361  386  392 #> [18263,]  361  386  392 #> [18264,]  361  386  392 #> [18265,]  361  386  392 #> [18266,]  361  386  392 #> [18267,]  361  386  392 #> [18268,]  362  387  393 #> [18269,]  361  386  392 #> [18270,]  362  387  393 #> [18271,]  362  387  393 #> [18272,]  361  386  392 #> [18273,]  362  387  393 #> [18274,]  361  386  392 #> [18275,]  361  386  392 #> [18276,]  362  387  393 #> [18277,]  362  387  393 #> [18278,]  361  386  392 #> [18279,]  362  387  393 #> [18280,]  361  386  392 #> [18281,]  362  387  393 #> [18282,]  361  386  392 #> [18283,]  362  387  393 #> [18284,]  361  386  392 #> [18285,]  361  386  392 #> [18286,]  362  387  393 #> [18287,]  361  386  392 #> [18288,]  361  386  392 #> [18289,]  361  386  392 #> [18290,]  362  387  393 #> [18291,]  361  386  392 #> [18292,]  361  386  392 #> [18293,]  362  387  393 #> [18294,]  362  387  393 #> [18295,]  361  386  392 #> [18296,]  362  387  393 #> [18297,]  361  386  392 #> [18298,]  361  386  392 #> [18299,]  362  387  393 #> [18300,]  362  387  393 #> [18301,]  364  388  395 #> [18302,]  364  388  395 #> [18303,]  363  390  396 #> [18304,]  363  389  394 #> [18305,]  363  390  397 #> [18306,]  364  388  395 #> [18307,]  363  390  396 #> [18308,]  363  389  394 #> [18309,]  363  389  394 #> [18310,]  363  390  397 #> [18311,]  364  388  395 #> [18312,]  363  390  397 #> [18313,]  364  388  395 #> [18314,]  364  388  395 #> [18315,]  364  388  395 #> [18316,]  364  388  395 #> [18317,]  364  388  395 #> [18318,]  363  390  397 #> [18319,]  363  390  397 #> [18320,]  363  390  396 #> [18321,]  364  388  395 #> [18322,]  364  388  395 #> [18323,]  363  390  397 #> [18324,]  363  390  397 #> [18325,]  363  390  396 #> [18326,]  364  388  395 #> [18327,]  364  388  395 #> [18328,]  363  390  397 #> [18329,]  364  388  395 #> [18330,]  363  389  394 #> [18331,]  363  390  397 #> [18332,]  363  390  397 #> [18333,]  364  388  395 #> [18334,]  363  390  397 #> [18335,]  364  388  395 #> [18336,]  363  390  397 #> [18337,]  364  388  395 #> [18338,]  363  390  397 #> [18339,]  363  390  396 #> [18340,]  363  390  397 #> [18341,]  364  388  395 #> [18342,]  363  390  397 #> [18343,]  363  389  394 #> [18344,]  364  388  395 #> [18345,]  363  389  394 #> [18346,]  363  389  394 #> [18347,]  364  388  395 #> [18348,]  363  390  397 #> [18349,]  363  389  394 #> [18350,]  364  388  395 #> [18351,]  363  390  397 #> [18352,]  364  388  395 #> [18353,]  363  390  396 #> [18354,]  363  389  394 #> [18355,]  363  389  394 #> [18356,]  363  390  396 #> [18357,]  363  390  397 #> [18358,]  364  388  395 #> [18359,]  364  388  395 #> [18360,]  363  390  397 #> [18361,]  364  388  395 #> [18362,]  363  389  394 #> [18363,]  363  390  397 #> [18364,]  363  390  397 #> [18365,]  363  390  396 #> [18366,]  363  389  394 #> [18367,]  363  389  394 #> [18368,]  364  388  395 #> [18369,]  363  389  394 #> [18370,]  364  388  395 #> [18371,]  364  388  395 #> [18372,]  363  390  397 #> [18373,]  364  388  395 #> [18374,]  363  389  394 #> [18375,]  363  390  397 #> [18376,]  364  388  395 #> [18377,]  364  388  395 #> [18378,]  363  390  397 #> [18379,]  364  388  395 #> [18380,]  363  389  394 #> [18381,]  364  388  395 #> [18382,]  363  389  394 #> [18383,]  364  388  395 #> [18384,]  364  388  395 #> [18385,]  363  389  394 #> [18386,]  364  388  395 #> [18387,]  363  389  394 #> [18388,]  363  389  394 #> [18389,]  363  389  394 #> [18390,]  364  388  395 #> [18391,]  363  389  394 #> [18392,]  363  389  394 #> [18393,]  364  388  395 #> [18394,]  364  388  395 #> [18395,]  363  389  394 #> [18396,]  364  388  395 #> [18397,]  363  390  397 #> [18398,]  363  390  396 #> [18399,]  364  388  395 #> [18400,]  364  388  395 #> [18401,]  366  391  398 #> [18402,]  366  391  398 #> [18403,]  365  393  399 #> [18404,]  366  391  398 #> [18405,]  366  391  398 #> [18406,]  366  391  398 #> [18407,]  365  393  399 #> [18408,]  365  392  399 #> [18409,]  366  391  398 #> [18410,]  366  391  398 #> [18411,]  366  391  398 #> [18412,]  366  391  398 #> [18413,]  365  392  399 #> [18414,]  366  391  398 #> [18415,]  366  391  398 #> [18416,]  365  393  399 #> [18417,]  365  392  399 #> [18418,]  366  391  398 #> [18419,]  366  391  398 #> [18420,]  365  393  399 #> [18421,]  366  391  398 #> [18422,]  365  392  399 #> [18423,]  366  391  398 #> [18424,]  365  393  399 #> [18425,]  365  393  399 #> [18426,]  366  391  398 #> [18427,]  366  391  398 #> [18428,]  366  391  398 #> [18429,]  366  391  398 #> [18430,]  366  391  398 #> [18431,]  366  391  398 #> [18432,]  366  391  398 #> [18433,]  366  391  398 #> [18434,]  366  391  398 #> [18435,]  366  391  398 #> [18436,]  366  391  398 #> [18437,]  366  391  398 #> [18438,]  366  391  398 #> [18439,]  365  393  399 #> [18440,]  365  393  399 #> [18441,]  366  391  398 #> [18442,]  366  391  398 #> [18443,]  366  391  398 #> [18444,]  365  392  399 #> [18445,]  365  393  399 #> [18446,]  365  393  399 #> [18447,]  365  393  399 #> [18448,]  366  391  398 #> [18449,]  365  392  399 #> [18450,]  365  393  399 #> [18451,]  366  391  398 #> [18452,]  366  391  398 #> [18453,]  365  393  399 #> [18454,]  365  393  399 #> [18455,]  365  392  399 #> [18456,]  365  393  399 #> [18457,]  366  391  398 #> [18458,]  366  391  398 #> [18459,]  365  393  399 #> [18460,]  366  391  398 #> [18461,]  366  391  398 #> [18462,]  366  391  398 #> [18463,]  365  393  399 #> [18464,]  366  391  398 #> [18465,]  365  393  399 #> [18466,]  365  392  399 #> [18467,]  366  391  398 #> [18468,]  366  391  398 #> [18469,]  366  391  398 #> [18470,]  365  393  399 #> [18471,]  366  391  398 #> [18472,]  365  393  399 #> [18473,]  366  391  398 #> [18474,]  366  391  398 #> [18475,]  366  391  398 #> [18476,]  366  391  398 #> [18477,]  366  391  398 #> [18478,]  365  393  399 #> [18479,]  365  393  399 #> [18480,]  366  391  398 #> [18481,]  366  391  398 #> [18482,]  366  391  398 #> [18483,]  366  391  398 #> [18484,]  365  393  399 #> [18485,]  366  391  398 #> [18486,]  365  393  399 #> [18487,]  366  391  398 #> [18488,]  366  391  398 #> [18489,]  365  393  399 #> [18490,]  365  392  399 #> [18491,]  366  391  398 #> [18492,]  366  391  398 #> [18493,]  366  391  398 #> [18494,]  365  393  399 #> [18495,]  366  391  398 #> [18496,]  366  391  398 #> [18497,]  366  391  398 #> [18498,]  365  393  399 #> [18499,]  366  391  398 #> [18500,]  365  393  399 #> [18501,]  367  395  401 #> [18502,]  367  395  402 #> [18503,]  367  395  402 #> [18504,]  367  395  401 #> [18505,]  368  394  400 #> [18506,]  367  395  402 #> [18507,]  367  395  402 #> [18508,]  367  395  401 #> [18509,]  367  395  401 #> [18510,]  367  395  401 #> [18511,]  367  395  401 #> [18512,]  367  395  402 #> [18513,]  367  395  401 #> [18514,]  367  395  401 #> [18515,]  367  395  401 #> [18516,]  367  395  401 #> [18517,]  367  395  401 #> [18518,]  368  394  400 #> [18519,]  367  395  402 #> [18520,]  367  395  402 #> [18521,]  367  395  401 #> [18522,]  367  395  401 #> [18523,]  367  395  402 #> [18524,]  367  395  401 #> [18525,]  367  395  402 #> [18526,]  367  395  401 #> [18527,]  367  395  401 #> [18528,]  367  395  402 #> [18529,]  367  395  401 #> [18530,]  367  395  401 #> [18531,]  367  395  402 #> [18532,]  368  394  400 #> [18533,]  367  395  402 #> [18534,]  367  395  402 #> [18535,]  367  395  401 #> [18536,]  367  395  401 #> [18537,]  367  395  401 #> [18538,]  367  395  401 #> [18539,]  367  395  401 #> [18540,]  367  395  402 #> [18541,]  367  395  401 #> [18542,]  367  395  402 #> [18543,]  367  395  401 #> [18544,]  367  395  401 #> [18545,]  367  395  401 #> [18546,]  367  395  401 #> [18547,]  367  395  401 #> [18548,]  367  395  402 #> [18549,]  367  395  401 #> [18550,]  367  395  401 #> [18551,]  367  395  401 #> [18552,]  367  395  401 #> [18553,]  367  395  401 #> [18554,]  367  395  401 #> [18555,]  367  395  401 #> [18556,]  367  395  402 #> [18557,]  367  395  401 #> [18558,]  367  395  401 #> [18559,]  367  395  401 #> [18560,]  367  395  402 #> [18561,]  367  395  401 #> [18562,]  367  395  401 #> [18563,]  367  395  401 #> [18564,]  367  395  402 #> [18565,]  367  395  402 #> [18566,]  367  395  401 #> [18567,]  367  395  401 #> [18568,]  367  395  401 #> [18569,]  367  395  401 #> [18570,]  367  395  402 #> [18571,]  368  394  400 #> [18572,]  367  395  401 #> [18573,]  367  395  402 #> [18574,]  367  395  401 #> [18575,]  368  394  400 #> [18576,]  367  395  401 #> [18577,]  367  395  401 #> [18578,]  367  395  402 #> [18579,]  367  395  401 #> [18580,]  367  395  401 #> [18581,]  367  395  401 #> [18582,]  367  395  401 #> [18583,]  367  395  401 #> [18584,]  367  395  402 #> [18585,]  367  395  401 #> [18586,]  367  395  401 #> [18587,]  367  395  401 #> [18588,]  367  395  401 #> [18589,]  367  395  401 #> [18590,]  367  395  401 #> [18591,]  368  394  400 #> [18592,]  367  395  401 #> [18593,]  367  395  402 #> [18594,]  367  395  401 #> [18595,]  368  394  400 #> [18596,]  367  395  401 #> [18597,]  367  395  402 #> [18598,]  367  395  402 #> [18599,]  367  395  401 #> [18600,]  368  394  400 #> [18601,]  370  397  403 #> [18602,]  369  396  404 #> [18603,]  369  396  404 #> [18604,]  370  397  403 #> [18605,]  369  396  404 #> [18606,]  369  396  404 #> [18607,]  370  397  403 #> [18608,]  370  397  403 #> [18609,]  369  396  404 #> [18610,]  370  397  403 #> [18611,]  369  396  404 #> [18612,]  369  396  404 #> [18613,]  370  397  403 #> [18614,]  369  396  404 #> [18615,]  370  397  403 #> [18616,]  370  397  403 #> [18617,]  370  397  403 #> [18618,]  370  397  403 #> [18619,]  369  396  404 #> [18620,]  369  396  404 #> [18621,]  370  397  403 #> [18622,]  369  396  404 #> [18623,]  370  397  403 #> [18624,]  369  396  404 #> [18625,]  370  397  403 #> [18626,]  369  396  404 #> [18627,]  370  397  403 #> [18628,]  370  397  403 #> [18629,]  369  396  404 #> [18630,]  369  396  404 #> [18631,]  369  396  404 #> [18632,]  369  396  404 #> [18633,]  369  396  404 #> [18634,]  369  396  404 #> [18635,]  369  396  404 #> [18636,]  369  396  404 #> [18637,]  369  396  404 #> [18638,]  369  396  404 #> [18639,]  370  397  403 #> [18640,]  369  396  404 #> [18641,]  369  396  404 #> [18642,]  369  396  404 #> [18643,]  370  397  403 #> [18644,]  369  396  404 #> [18645,]  370  397  403 #> [18646,]  370  397  403 #> [18647,]  370  397  403 #> [18648,]  369  396  404 #> [18649,]  369  396  404 #> [18650,]  369  396  404 #> [18651,]  369  396  404 #> [18652,]  369  396  404 #> [18653,]  370  397  403 #> [18654,]  369  396  404 #> [18655,]  369  396  404 #> [18656,]  370  397  403 #> [18657,]  369  396  404 #> [18658,]  369  396  404 #> [18659,]  369  396  404 #> [18660,]  369  396  404 #> [18661,]  370  397  403 #> [18662,]  369  396  404 #> [18663,]  369  396  404 #> [18664,]  370  397  403 #> [18665,]  369  396  404 #> [18666,]  369  396  404 #> [18667,]  369  396  404 #> [18668,]  369  396  404 #> [18669,]  369  396  404 #> [18670,]  369  396  404 #> [18671,]  370  397  403 #> [18672,]  370  397  403 #> [18673,]  370  397  403 #> [18674,]  370  397  403 #> [18675,]  370  397  403 #> [18676,]  370  397  403 #> [18677,]  370  397  403 #> [18678,]  369  396  404 #> [18679,]  369  396  404 #> [18680,]  369  396  404 #> [18681,]  369  396  404 #> [18682,]  370  397  403 #> [18683,]  369  396  404 #> [18684,]  370  397  403 #> [18685,]  369  396  404 #> [18686,]  369  396  404 #> [18687,]  369  396  404 #> [18688,]  370  397  403 #> [18689,]  369  396  404 #> [18690,]  369  396  404 #> [18691,]  369  396  404 #> [18692,]  369  396  404 #> [18693,]  369  396  404 #> [18694,]  370  397  403 #> [18695,]  370  397  403 #> [18696,]  369  396  404 #> [18697,]  369  396  404 #> [18698,]  369  396  404 #> [18699,]  369  396  404 #> [18700,]  370  397  403 #> [18701,]  372  398  405 #> [18702,]  372  398  405 #> [18703,]  371  400  406 #> [18704,]  372  398  405 #> [18705,]  372  398  405 #> [18706,]  372  398  405 #> [18707,]  372  398  405 #> [18708,]  372  398  405 #> [18709,]  372  398  405 #> [18710,]  372  398  405 #> [18711,]  371  400  406 #> [18712,]  371  399  406 #> [18713,]  372  398  405 #> [18714,]  371  400  406 #> [18715,]  372  398  405 #> [18716,]  372  398  405 #> [18717,]  372  398  405 #> [18718,]  372  398  405 #> [18719,]  371  400  406 #> [18720,]  371  400  406 #> [18721,]  372  398  405 #> [18722,]  371  400  406 #> [18723,]  372  398  405 #> [18724,]  372  398  405 #> [18725,]  372  398  405 #> [18726,]  371  400  406 #> [18727,]  372  398  405 #> [18728,]  372  398  405 #> [18729,]  371  399  406 #> [18730,]  372  398  405 #> [18731,]  372  398  405 #> [18732,]  371  400  406 #> [18733,]  372  398  405 #> [18734,]  372  398  405 #> [18735,]  372  398  405 #> [18736,]  371  400  406 #> [18737,]  372  398  405 #> [18738,]  372  398  405 #> [18739,]  372  398  405 #> [18740,]  371  400  406 #> [18741,]  371  400  406 #> [18742,]  371  399  406 #> [18743,]  372  398  405 #> [18744,]  372  398  405 #> [18745,]  372  398  405 #> [18746,]  372  398  405 #> [18747,]  372  398  405 #> [18748,]  371  399  406 #> [18749,]  372  398  405 #> [18750,]  372  398  405 #> [18751,]  371  400  406 #> [18752,]  372  398  405 #> [18753,]  372  398  405 #> [18754,]  371  400  406 #> [18755,]  372  398  405 #> [18756,]  372  398  405 #> [18757,]  372  398  405 #> [18758,]  372  398  405 #> [18759,]  372  398  405 #> [18760,]  371  400  406 #> [18761,]  372  398  405 #> [18762,]  371  400  406 #> [18763,]  371  399  406 #> [18764,]  372  398  405 #> [18765,]  372  398  405 #> [18766,]  371  400  406 #> [18767,]  372  398  405 #> [18768,]  371  400  406 #> [18769,]  371  400  406 #> [18770,]  372  398  405 #> [18771,]  372  398  405 #> [18772,]  372  398  405 #> [18773,]  372  398  405 #> [18774,]  372  398  405 #> [18775,]  372  398  405 #> [18776,]  372  398  405 #> [18777,]  372  398  405 #> [18778,]  372  398  405 #> [18779,]  372  398  405 #> [18780,]  371  400  406 #> [18781,]  371  399  406 #> [18782,]  372  398  405 #> [18783,]  371  400  406 #> [18784,]  372  398  405 #> [18785,]  372  398  405 #> [18786,]  372  398  405 #> [18787,]  372  398  405 #> [18788,]  372  398  405 #> [18789,]  371  400  406 #> [18790,]  372  398  405 #> [18791,]  371  400  406 #> [18792,]  372  398  405 #> [18793,]  372  398  405 #> [18794,]  372  398  405 #> [18795,]  372  398  405 #> [18796,]  372  398  405 #> [18797,]  372  398  405 #> [18798,]  372  398  405 #> [18799,]  372  398  405 #> [18800,]  372  398  405 #> [18801,]  375  402  407 #> [18802,]  373  401  408 #> [18803,]  373  401  408 #> [18804,]  375  402  407 #> [18805,]  374  402  407 #> [18806,]  373  401  409 #> [18807,]  373  401  408 #> [18808,]  373  401  408 #> [18809,]  373  401  409 #> [18810,]  375  402  407 #> [18811,]  375  402  407 #> [18812,]  375  402  407 #> [18813,]  374  402  407 #> [18814,]  375  402  407 #> [18815,]  375  402  407 #> [18816,]  374  402  407 #> [18817,]  374  402  407 #> [18818,]  375  402  407 #> [18819,]  375  402  407 #> [18820,]  373  401  408 #> [18821,]  373  401  409 #> [18822,]  374  402  407 #> [18823,]  373  401  408 #> [18824,]  374  402  407 #> [18825,]  373  401  408 #> [18826,]  375  402  407 #> [18827,]  375  402  407 #> [18828,]  375  402  407 #> [18829,]  373  401  408 #> [18830,]  375  402  407 #> [18831,]  375  402  407 #> [18832,]  375  402  407 #> [18833,]  375  402  407 #> [18834,]  373  401  408 #> [18835,]  373  401  408 #> [18836,]  373  401  409 #> [18837,]  373  401  408 #> [18838,]  375  402  407 #> [18839,]  374  402  407 #> [18840,]  373  401  408 #> [18841,]  373  401  409 #> [18842,]  373  401  409 #> [18843,]  374  402  407 #> [18844,]  373  401  408 #> [18845,]  373  401  408 #> [18846,]  374  402  407 #> [18847,]  374  402  407 #> [18848,]  375  402  407 #> [18849,]  373  401  408 #> [18850,]  373  401  408 #> [18851,]  374  402  407 #> [18852,]  375  402  407 #> [18853,]  373  401  408 #> [18854,]  373  401  408 #> [18855,]  373  401  408 #> [18856,]  373  401  408 #> [18857,]  373  401  408 #> [18858,]  375  402  407 #> [18859,]  374  402  407 #> [18860,]  373  401  409 #> [18861,]  375  402  407 #> [18862,]  373  401  409 #> [18863,]  374  402  407 #> [18864,]  373  401  408 #> [18865,]  373  401  408 #> [18866,]  374  402  407 #> [18867,]  373  401  408 #> [18868,]  375  402  407 #> [18869,]  375  402  407 #> [18870,]  374  402  407 #> [18871,]  374  402  407 #> [18872,]  373  401  408 #> [18873,]  373  401  408 #> [18874,]  373  401  409 #> [18875,]  375  402  407 #> [18876,]  373  401  408 #> [18877,]  374  402  407 #> [18878,]  374  402  407 #> [18879,]  374  402  407 #> [18880,]  373  401  408 #> [18881,]  373  401  408 #> [18882,]  373  401  409 #> [18883,]  374  402  407 #> [18884,]  373  401  408 #> [18885,]  373  401  409 #> [18886,]  373  401  408 #> [18887,]  375  402  407 #> [18888,]  373  401  408 #> [18889,]  373  401  408 #> [18890,]  374  402  407 #> [18891,]  375  402  407 #> [18892,]  375  402  407 #> [18893,]  375  402  407 #> [18894,]  373  401  408 #> [18895,]  375  402  407 #> [18896,]  375  402  407 #> [18897,]  373  401  409 #> [18898,]  373  401  408 #> [18899,]  373  401  409 #> [18900,]  374  402  407 #> [18901,]  377  404  411 #> [18902,]  376  403  410 #> [18903,]  377  404  411 #> [18904,]  377  404  411 #> [18905,]  377  404  411 #> [18906,]  376  403  410 #> [18907,]  377  404  411 #> [18908,]  377  404  411 #> [18909,]  377  404  411 #> [18910,]  377  404  411 #> [18911,]  376  403  410 #> [18912,]  376  403  410 #> [18913,]  378  404  411 #> [18914,]  377  404  411 #> [18915,]  376  403  410 #> [18916,]  377  404  411 #> [18917,]  376  403  410 #> [18918,]  377  404  411 #> [18919,]  376  403  410 #> [18920,]  378  404  411 #> [18921,]  377  404  411 #> [18922,]  378  404  411 #> [18923,]  376  403  410 #> [18924,]  377  404  411 #> [18925,]  377  404  411 #> [18926,]  376  403  410 #> [18927,]  378  404  411 #> [18928,]  377  404  411 #> [18929,]  376  403  410 #> [18930,]  376  403  410 #> [18931,]  376  403  410 #> [18932,]  377  404  411 #> [18933,]  377  404  411 #> [18934,]  376  403  410 #> [18935,]  376  403  410 #> [18936,]  378  404  411 #> [18937,]  376  403  410 #> [18938,]  378  404  411 #> [18939,]  377  404  411 #> [18940,]  377  404  411 #> [18941,]  378  404  411 #> [18942,]  376  403  410 #> [18943,]  376  403  410 #> [18944,]  376  403  410 #> [18945,]  377  404  411 #> [18946,]  378  404  411 #> [18947,]  376  403  410 #> [18948,]  376  403  410 #> [18949,]  377  404  411 #> [18950,]  378  404  411 #> [18951,]  378  404  411 #> [18952,]  377  404  411 #> [18953,]  378  404  411 #> [18954,]  377  404  411 #> [18955,]  378  404  411 #> [18956,]  376  403  410 #> [18957,]  377  404  411 #> [18958,]  378  404  411 #> [18959,]  377  404  411 #> [18960,]  376  403  410 #> [18961,]  376  403  410 #> [18962,]  377  404  411 #> [18963,]  376  403  410 #> [18964,]  376  403  410 #> [18965,]  376  403  410 #> [18966,]  376  403  410 #> [18967,]  377  404  411 #> [18968,]  376  403  410 #> [18969,]  378  404  411 #> [18970,]  376  403  410 #> [18971,]  378  404  411 #> [18972,]  377  404  411 #> [18973,]  377  404  411 #> [18974,]  377  404  411 #> [18975,]  376  403  410 #> [18976,]  377  404  411 #> [18977,]  378  404  411 #> [18978,]  376  403  410 #> [18979,]  376  403  410 #> [18980,]  378  404  411 #> [18981,]  376  403  410 #> [18982,]  377  404  411 #> [18983,]  378  404  411 #> [18984,]  377  404  411 #> [18985,]  377  404  411 #> [18986,]  377  404  411 #> [18987,]  378  404  411 #> [18988,]  377  404  411 #> [18989,]  377  404  411 #> [18990,]  378  404  411 #> [18991,]  377  404  411 #> [18992,]  376  403  410 #> [18993,]  377  404  411 #> [18994,]  376  403  410 #> [18995,]  376  403  410 #> [18996,]  376  403  410 #> [18997,]  378  404  411 #> [18998,]  377  404  411 #> [18999,]  377  404  411 #> [19000,]  376  403  410 #> [19001,]  379  406  414 #> [19002,]  380  405  414 #> [19003,]  380  405  413 #> [19004,]  379  406  412 #> [19005,]  379  406  414 #> [19006,]  380  405  414 #> [19007,]  379  406  413 #> [19008,]  379  406  412 #> [19009,]  379  406  412 #> [19010,]  379  406  414 #> [19011,]  379  406  414 #> [19012,]  380  405  413 #> [19013,]  379  406  414 #> [19014,]  379  406  414 #> [19015,]  379  406  414 #> [19016,]  379  406  414 #> [19017,]  379  406  412 #> [19018,]  380  405  414 #> [19019,]  380  405  414 #> [19020,]  380  405  414 #> [19021,]  379  406  414 #> [19022,]  379  406  414 #> [19023,]  379  406  413 #> [19024,]  379  406  414 #> [19025,]  380  405  413 #> [19026,]  379  406  414 #> [19027,]  379  406  412 #> [19028,]  380  405  414 #> [19029,]  379  406  414 #> [19030,]  379  406  414 #> [19031,]  380  405  413 #> [19032,]  379  406  414 #> [19033,]  380  405  414 #> [19034,]  380  405  414 #> [19035,]  379  406  414 #> [19036,]  379  406  414 #> [19037,]  379  406  413 #> [19038,]  379  406  414 #> [19039,]  379  406  414 #> [19040,]  379  406  413 #> [19041,]  379  406  414 #> [19042,]  379  406  414 #> [19043,]  379  406  414 #> [19044,]  379  406  412 #> [19045,]  379  406  414 #> [19046,]  379  406  413 #> [19047,]  379  406  413 #> [19048,]  379  406  414 #> [19049,]  379  406  414 #> [19050,]  379  406  414 #> [19051,]  379  406  414 #> [19052,]  379  406  412 #> [19053,]  379  406  414 #> [19054,]  379  406  414 #> [19055,]  379  406  413 #> [19056,]  379  406  414 #> [19057,]  379  406  413 #> [19058,]  379  406  412 #> [19059,]  379  406  413 #> [19060,]  380  405  413 #> [19061,]  379  406  414 #> [19062,]  379  406  414 #> [19063,]  379  406  414 #> [19064,]  379  406  414 #> [19065,]  380  405  414 #> [19066,]  379  406  412 #> [19067,]  379  406  414 #> [19068,]  379  406  413 #> [19069,]  379  406  414 #> [19070,]  380  405  414 #> [19071,]  380  405  414 #> [19072,]  379  406  414 #> [19073,]  380  405  414 #> [19074,]  379  406  413 #> [19075,]  379  406  414 #> [19076,]  379  406  414 #> [19077,]  379  406  414 #> [19078,]  379  406  414 #> [19079,]  379  406  414 #> [19080,]  379  406  413 #> [19081,]  379  406  412 #> [19082,]  379  406  412 #> [19083,]  379  406  414 #> [19084,]  380  405  414 #> [19085,]  379  406  414 #> [19086,]  379  406  413 #> [19087,]  379  406  412 #> [19088,]  379  406  414 #> [19089,]  379  406  414 #> [19090,]  379  406  412 #> [19091,]  379  406  414 #> [19092,]  379  406  412 #> [19093,]  380  405  414 #> [19094,]  379  406  414 #> [19095,]  379  406  412 #> [19096,]  379  406  413 #> [19097,]  380  405  413 #> [19098,]  380  405  413 #> [19099,]  379  406  412 #> [19100,]  380  405  414 #> [19101,]  381  407  415 #> [19102,]  381  408  416 #> [19103,]  381  407  416 #> [19104,]  381  408  416 #> [19105,]  381  408  415 #> [19106,]  381  407  416 #> [19107,]  381  408  416 #> [19108,]  381  408  416 #> [19109,]  381  408  416 #> [19110,]  381  408  415 #> [19111,]  381  407  415 #> [19112,]  381  408  415 #> [19113,]  381  408  416 #> [19114,]  381  408  415 #> [19115,]  381  408  415 #> [19116,]  381  407  416 #> [19117,]  381  408  415 #> [19118,]  381  408  415 #> [19119,]  381  407  416 #> [19120,]  381  408  416 #> [19121,]  381  408  416 #> [19122,]  381  408  415 #> [19123,]  381  408  416 #> [19124,]  381  408  416 #> [19125,]  381  408  416 #> [19126,]  381  408  415 #> [19127,]  381  408  415 #> [19128,]  381  407  416 #> [19129,]  381  408  416 #> [19130,]  381  408  416 #> [19131,]  381  408  415 #> [19132,]  381  408  415 #> [19133,]  381  408  416 #> [19134,]  381  407  416 #> [19135,]  381  407  416 #> [19136,]  381  408  416 #> [19137,]  381  407  416 #> [19138,]  381  407  415 #> [19139,]  381  408  416 #> [19140,]  381  408  416 #> [19141,]  381  408  416 #> [19142,]  381  408  416 #> [19143,]  381  408  415 #> [19144,]  381  408  416 #> [19145,]  381  407  416 #> [19146,]  381  408  416 #> [19147,]  381  408  415 #> [19148,]  381  408  416 #> [19149,]  381  407  416 #> [19150,]  381  408  416 #> [19151,]  381  408  416 #> [19152,]  381  407  415 #> [19153,]  381  408  416 #> [19154,]  381  408  416 #> [19155,]  381  408  416 #> [19156,]  381  408  416 #> [19157,]  381  408  416 #> [19158,]  381  408  415 #> [19159,]  381  408  415 #> [19160,]  381  408  416 #> [19161,]  381  408  415 #> [19162,]  381  408  416 #> [19163,]  381  408  416 #> [19164,]  381  407  416 #> [19165,]  381  408  416 #> [19166,]  381  408  415 #> [19167,]  381  408  416 #> [19168,]  381  407  416 #> [19169,]  381  408  416 #> [19170,]  381  408  415 #> [19171,]  381  408  415 #> [19172,]  381  407  416 #> [19173,]  381  407  416 #> [19174,]  381  408  416 #> [19175,]  381  408  415 #> [19176,]  381  408  416 #> [19177,]  381  407  415 #> [19178,]  381  408  416 #> [19179,]  381  408  415 #> [19180,]  381  408  416 #> [19181,]  381  408  416 #> [19182,]  381  408  416 #> [19183,]  381  408  416 #> [19184,]  381  408  416 #> [19185,]  381  408  416 #> [19186,]  381  408  416 #> [19187,]  381  408  415 #> [19188,]  381  408  416 #> [19189,]  381  408  416 #> [19190,]  381  408  415 #> [19191,]  381  408  415 #> [19192,]  381  408  415 #> [19193,]  381  408  416 #> [19194,]  381  407  416 #> [19195,]  381  408  415 #> [19196,]  381  407  416 #> [19197,]  381  407  416 #> [19198,]  381  408  416 #> [19199,]  381  408  416 #> [19200,]  381  407  415 #> [19201,]  383  410  418 #> [19202,]  383  410  418 #> [19203,]  383  410  418 #> [19204,]  382  409  417 #> [19205,]  383  410  418 #> [19206,]  383  410  418 #> [19207,]  383  410  418 #> [19208,]  382  409  417 #> [19209,]  382  409  417 #> [19210,]  383  410  418 #> [19211,]  383  410  418 #> [19212,]  383  410  418 #> [19213,]  383  410  418 #> [19214,]  383  410  418 #> [19215,]  383  410  418 #> [19216,]  383  410  418 #> [19217,]  382  409  417 #> [19218,]  383  410  418 #> [19219,]  383  410  418 #> [19220,]  383  410  418 #> [19221,]  383  410  418 #> [19222,]  383  410  418 #> [19223,]  383  410  418 #> [19224,]  383  410  418 #> [19225,]  383  410  418 #> [19226,]  383  410  418 #> [19227,]  382  409  417 #> [19228,]  383  410  418 #> [19229,]  383  410  418 #> [19230,]  383  410  418 #> [19231,]  383  410  418 #> [19232,]  383  410  418 #> [19233,]  383  410  418 #> [19234,]  383  410  418 #> [19235,]  383  410  418 #> [19236,]  383  410  418 #> [19237,]  383  410  418 #> [19238,]  383  410  418 #> [19239,]  383  410  418 #> [19240,]  383  410  418 #> [19241,]  383  410  418 #> [19242,]  383  410  418 #> [19243,]  383  410  418 #> [19244,]  382  409  417 #> [19245,]  383  410  418 #> [19246,]  383  410  418 #> [19247,]  383  410  418 #> [19248,]  383  410  418 #> [19249,]  383  410  418 #> [19250,]  383  410  418 #> [19251,]  383  410  418 #> [19252,]  382  409  417 #> [19253,]  383  410  418 #> [19254,]  383  410  418 #> [19255,]  383  410  418 #> [19256,]  383  410  418 #> [19257,]  383  410  418 #> [19258,]  383  410  418 #> [19259,]  383  410  418 #> [19260,]  383  410  418 #> [19261,]  383  410  418 #> [19262,]  383  410  418 #> [19263,]  383  410  418 #> [19264,]  383  410  418 #> [19265,]  383  410  418 #> [19266,]  382  409  417 #> [19267,]  383  410  418 #> [19268,]  383  410  418 #> [19269,]  383  410  418 #> [19270,]  383  410  418 #> [19271,]  383  410  418 #> [19272,]  383  410  418 #> [19273,]  383  410  418 #> [19274,]  383  410  418 #> [19275,]  383  410  418 #> [19276,]  383  410  418 #> [19277,]  383  410  418 #> [19278,]  383  410  418 #> [19279,]  383  410  418 #> [19280,]  383  410  418 #> [19281,]  382  409  417 #> [19282,]  382  409  417 #> [19283,]  383  410  418 #> [19284,]  383  410  418 #> [19285,]  383  410  418 #> [19286,]  383  410  418 #> [19287,]  383  410  418 #> [19288,]  383  410  418 #> [19289,]  383  410  418 #> [19290,]  382  409  417 #> [19291,]  383  410  418 #> [19292,]  382  409  417 #> [19293,]  383  410  418 #> [19294,]  383  410  418 #> [19295,]  382  409  417 #> [19296,]  383  410  418 #> [19297,]  383  410  418 #> [19298,]  383  410  418 #> [19299,]  382  409  417 #> [19300,]  383  410  418 #> [19301,]  385  412  419 #> [19302,]  384  411  419 #> [19303,]  385  412  419 #> [19304,]  385  412  419 #> [19305,]  385  412  419 #> [19306,]  384  411  419 #> [19307,]  385  412  419 #> [19308,]  385  412  419 #> [19309,]  385  412  419 #> [19310,]  385  412  419 #> [19311,]  384  411  419 #> [19312,]  384  411  419 #> [19313,]  385  412  419 #> [19314,]  385  412  419 #> [19315,]  384  411  419 #> [19316,]  385  412  419 #> [19317,]  384  411  419 #> [19318,]  384  411  419 #> [19319,]  384  411  419 #> [19320,]  385  412  419 #> [19321,]  384  411  419 #> [19322,]  385  412  419 #> [19323,]  384  411  419 #> [19324,]  385  412  419 #> [19325,]  385  412  419 #> [19326,]  384  411  419 #> [19327,]  385  412  419 #> [19328,]  385  412  419 #> [19329,]  384  411  419 #> [19330,]  384  411  419 #> [19331,]  384  411  419 #> [19332,]  384  411  419 #> [19333,]  385  412  419 #> [19334,]  384  411  419 #> [19335,]  384  411  419 #> [19336,]  385  412  419 #> [19337,]  384  411  419 #> [19338,]  384  411  419 #> [19339,]  385  412  419 #> [19340,]  385  412  419 #> [19341,]  385  412  419 #> [19342,]  384  411  419 #> [19343,]  384  411  419 #> [19344,]  384  411  419 #> [19345,]  385  412  419 #> [19346,]  384  411  419 #> [19347,]  384  411  419 #> [19348,]  384  411  419 #> [19349,]  385  412  419 #> [19350,]  385  412  419 #> [19351,]  384  411  419 #> [19352,]  385  412  419 #> [19353,]  385  412  419 #> [19354,]  385  412  419 #> [19355,]  385  412  419 #> [19356,]  384  411  419 #> [19357,]  385  412  419 #> [19358,]  385  412  419 #> [19359,]  385  412  419 #> [19360,]  384  411  419 #> [19361,]  384  411  419 #> [19362,]  384  411  419 #> [19363,]  384  411  419 #> [19364,]  384  411  419 #> [19365,]  384  411  419 #> [19366,]  384  411  419 #> [19367,]  385  412  419 #> [19368,]  384  411  419 #> [19369,]  384  411  419 #> [19370,]  384  411  419 #> [19371,]  385  412  419 #> [19372,]  385  412  419 #> [19373,]  385  412  419 #> [19374,]  385  412  419 #> [19375,]  384  411  419 #> [19376,]  385  412  419 #> [19377,]  385  412  419 #> [19378,]  384  411  419 #> [19379,]  384  411  419 #> [19380,]  385  412  419 #> [19381,]  384  411  419 #> [19382,]  384  411  419 #> [19383,]  384  411  419 #> [19384,]  385  412  419 #> [19385,]  385  412  419 #> [19386,]  385  412  419 #> [19387,]  385  412  419 #> [19388,]  385  412  419 #> [19389,]  384  411  419 #> [19390,]  385  412  419 #> [19391,]  385  412  419 #> [19392,]  384  411  419 #> [19393,]  384  411  419 #> [19394,]  384  411  419 #> [19395,]  384  411  419 #> [19396,]  384  411  419 #> [19397,]  384  411  419 #> [19398,]  384  411  419 #> [19399,]  385  412  419 #> [19400,]  384  411  419 #> [19401,]  387  413  421 #> [19402,]  386  413  421 #> [19403,]  387  413  420 #> [19404,]  387  413  420 #> [19405,]  387  413  421 #> [19406,]  386  413  421 #> [19407,]  387  413  420 #> [19408,]  387  413  420 #> [19409,]  387  413  421 #> [19410,]  387  413  421 #> [19411,]  386  413  421 #> [19412,]  386  413  420 #> [19413,]  387  413  421 #> [19414,]  387  413  421 #> [19415,]  386  413  421 #> [19416,]  387  413  421 #> [19417,]  386  413  421 #> [19418,]  387  413  421 #> [19419,]  386  413  421 #> [19420,]  387  413  421 #> [19421,]  387  413  421 #> [19422,]  387  413  421 #> [19423,]  386  413  421 #> [19424,]  387  413  421 #> [19425,]  387  413  420 #> [19426,]  386  413  421 #> [19427,]  387  413  421 #> [19428,]  387  413  421 #> [19429,]  386  413  421 #> [19430,]  386  413  421 #> [19431,]  386  413  420 #> [19432,]  386  413  421 #> [19433,]  387  413  421 #> [19434,]  386  413  421 #> [19435,]  386  413  421 #> [19436,]  387  413  421 #> [19437,]  386  413  421 #> [19438,]  387  413  421 #> [19439,]  387  413  421 #> [19440,]  387  413  421 #> [19441,]  387  413  421 #> [19442,]  386  413  421 #> [19443,]  386  413  421 #> [19444,]  386  413  421 #> [19445,]  387  413  421 #> [19446,]  386  413  421 #> [19447,]  386  413  420 #> [19448,]  386  413  421 #> [19449,]  387  413  421 #> [19450,]  387  413  421 #> [19451,]  386  413  421 #> [19452,]  387  413  420 #> [19453,]  387  413  421 #> [19454,]  387  413  421 #> [19455,]  387  413  421 #> [19456,]  386  413  421 #> [19457,]  387  413  420 #> [19458,]  387  413  421 #> [19459,]  387  413  420 #> [19460,]  386  413  420 #> [19461,]  386  413  421 #> [19462,]  386  413  421 #> [19463,]  386  413  421 #> [19464,]  386  413  421 #> [19465,]  386  413  421 #> [19466,]  386  413  421 #> [19467,]  387  413  421 #> [19468,]  386  413  420 #> [19469,]  386  413  421 #> [19470,]  386  413  421 #> [19471,]  387  413  421 #> [19472,]  387  413  421 #> [19473,]  387  413  421 #> [19474,]  387  413  421 #> [19475,]  386  413  421 #> [19476,]  387  413  421 #> [19477,]  387  413  421 #> [19478,]  386  413  421 #> [19479,]  386  413  421 #> [19480,]  387  413  420 #> [19481,]  386  413  421 #> [19482,]  386  413  421 #> [19483,]  387  413  421 #> [19484,]  387  413  421 #> [19485,]  387  413  421 #> [19486,]  387  413  420 #> [19487,]  387  413  421 #> [19488,]  387  413  421 #> [19489,]  386  413  421 #> [19490,]  387  413  421 #> [19491,]  387  413  421 #> [19492,]  386  413  421 #> [19493,]  386  413  421 #> [19494,]  386  413  421 #> [19495,]  386  413  421 #> [19496,]  386  413  420 #> [19497,]  386  413  420 #> [19498,]  387  413  420 #> [19499,]  387  413  421 #> [19500,]  386  413  421 #> [19501,]  388  414  422 #> [19502,]  388  415  423 #> [19503,]  388  415  423 #> [19504,]  388  414  422 #> [19505,]  388  415  423 #> [19506,]  388  415  423 #> [19507,]  388  415  423 #> [19508,]  388  414  422 #> [19509,]  388  414  422 #> [19510,]  388  415  423 #> [19511,]  388  414  422 #> [19512,]  388  415  423 #> [19513,]  388  414  422 #> [19514,]  388  414  422 #> [19515,]  388  415  423 #> [19516,]  388  415  423 #> [19517,]  388  414  422 #> [19518,]  388  415  423 #> [19519,]  388  415  423 #> [19520,]  388  415  423 #> [19521,]  388  414  422 #> [19522,]  388  414  422 #> [19523,]  388  415  423 #> [19524,]  388  415  423 #> [19525,]  388  415  423 #> [19526,]  388  415  423 #> [19527,]  388  414  422 #> [19528,]  388  415  423 #> [19529,]  388  415  423 #> [19530,]  388  414  422 #> [19531,]  388  415  423 #> [19532,]  388  415  423 #> [19533,]  388  415  423 #> [19534,]  388  415  423 #> [19535,]  388  414  422 #> [19536,]  388  415  423 #> [19537,]  388  415  423 #> [19538,]  388  415  423 #> [19539,]  388  415  423 #> [19540,]  388  415  423 #> [19541,]  388  415  423 #> [19542,]  388  415  423 #> [19543,]  388  414  422 #> [19544,]  388  414  422 #> [19545,]  388  414  422 #> [19546,]  388  414  422 #> [19547,]  388  415  423 #> [19548,]  388  415  423 #> [19549,]  388  414  422 #> [19550,]  388  415  423 #> [19551,]  388  415  423 #> [19552,]  388  414  422 #> [19553,]  388  415  423 #> [19554,]  388  414  422 #> [19555,]  388  414  422 #> [19556,]  388  415  423 #> [19557,]  388  415  423 #> [19558,]  388  414  422 #> [19559,]  388  415  423 #> [19560,]  388  415  423 #> [19561,]  388  415  423 #> [19562,]  388  415  423 #> [19563,]  388  415  423 #> [19564,]  388  415  423 #> [19565,]  388  415  423 #> [19566,]  388  414  422 #> [19567,]  388  414  422 #> [19568,]  388  414  422 #> [19569,]  388  414  422 #> [19570,]  388  415  423 #> [19571,]  388  415  423 #> [19572,]  388  415  423 #> [19573,]  388  415  423 #> [19574,]  388  414  422 #> [19575,]  388  415  423 #> [19576,]  388  415  423 #> [19577,]  388  415  423 #> [19578,]  388  415  423 #> [19579,]  388  414  422 #> [19580,]  388  414  422 #> [19581,]  388  414  422 #> [19582,]  388  414  422 #> [19583,]  388  414  422 #> [19584,]  388  415  423 #> [19585,]  388  414  422 #> [19586,]  388  415  423 #> [19587,]  388  414  422 #> [19588,]  388  414  422 #> [19589,]  388  414  422 #> [19590,]  388  414  422 #> [19591,]  388  414  422 #> [19592,]  388  414  422 #> [19593,]  388  415  423 #> [19594,]  388  415  423 #> [19595,]  388  414  422 #> [19596,]  388  414  422 #> [19597,]  388  415  423 #> [19598,]  388  415  423 #> [19599,]  388  414  422 #> [19600,]  388  415  423 #> [19601,]  389  416  424 #> [19602,]  390  417  425 #> [19603,]  389  416  424 #> [19604,]  390  417  425 #> [19605,]  390  417  425 #> [19606,]  389  416  424 #> [19607,]  390  417  425 #> [19608,]  390  417  425 #> [19609,]  390  417  425 #> [19610,]  390  417  425 #> [19611,]  389  416  424 #> [19612,]  390  417  425 #> [19613,]  390  417  425 #> [19614,]  389  416  424 #> [19615,]  390  417  425 #> [19616,]  389  416  424 #> [19617,]  390  417  425 #> [19618,]  390  417  425 #> [19619,]  389  416  424 #> [19620,]  390  417  425 #> [19621,]  390  417  425 #> [19622,]  390  417  425 #> [19623,]  390  417  425 #> [19624,]  390  417  425 #> [19625,]  390  417  425 #> [19626,]  389  416  424 #> [19627,]  390  417  425 #> [19628,]  389  416  424 #> [19629,]  390  417  425 #> [19630,]  390  417  425 #> [19631,]  390  417  425 #> [19632,]  390  417  425 #> [19633,]  390  417  425 #> [19634,]  389  416  424 #> [19635,]  389  416  424 #> [19636,]  390  417  425 #> [19637,]  389  416  424 #> [19638,]  389  416  424 #> [19639,]  390  417  425 #> [19640,]  390  417  425 #> [19641,]  390  417  425 #> [19642,]  389  416  424 #> [19643,]  390  417  425 #> [19644,]  390  417  425 #> [19645,]  389  416  424 #> [19646,]  390  417  425 #> [19647,]  390  417  425 #> [19648,]  390  417  425 #> [19649,]  389  416  424 #> [19650,]  390  417  425 #> [19651,]  390  417  425 #> [19652,]  389  416  424 #> [19653,]  390  417  425 #> [19654,]  390  417  425 #> [19655,]  390  417  425 #> [19656,]  389  416  424 #> [19657,]  390  417  425 #> [19658,]  390  417  425 #> [19659,]  389  416  424 #> [19660,]  390  417  425 #> [19661,]  390  417  425 #> [19662,]  390  417  425 #> [19663,]  390  417  425 #> [19664,]  389  416  424 #> [19665,]  389  416  424 #> [19666,]  390  417  425 #> [19667,]  390  417  425 #> [19668,]  389  416  424 #> [19669,]  389  416  424 #> [19670,]  390  417  425 #> [19671,]  390  417  425 #> [19672,]  389  416  424 #> [19673,]  389  416  424 #> [19674,]  390  417  425 #> [19675,]  390  417  425 #> [19676,]  390  417  425 #> [19677,]  389  416  424 #> [19678,]  390  417  425 #> [19679,]  389  416  424 #> [19680,]  390  417  425 #> [19681,]  390  417  425 #> [19682,]  390  417  425 #> [19683,]  390  417  425 #> [19684,]  390  417  425 #> [19685,]  390  417  425 #> [19686,]  390  417  425 #> [19687,]  390  417  425 #> [19688,]  390  417  425 #> [19689,]  389  416  424 #> [19690,]  390  417  425 #> [19691,]  390  417  425 #> [19692,]  390  417  425 #> [19693,]  390  417  425 #> [19694,]  389  416  424 #> [19695,]  390  417  425 #> [19696,]  389  416  424 #> [19697,]  389  416  424 #> [19698,]  390  417  425 #> [19699,]  390  417  425 #> [19700,]  389  416  424 #> [19701,]  392  419  427 #> [19702,]  392  419  427 #> [19703,]  391  418  426 #> [19704,]  391  418  426 #> [19705,]  392  419  427 #> [19706,]  392  419  427 #> [19707,]  391  418  426 #> [19708,]  391  418  426 #> [19709,]  392  419  427 #> [19710,]  392  419  427 #> [19711,]  392  419  427 #> [19712,]  391  418  426 #> [19713,]  392  419  427 #> [19714,]  391  418  426 #> [19715,]  392  419  427 #> [19716,]  392  419  427 #> [19717,]  392  419  427 #> [19718,]  392  419  427 #> [19719,]  392  419  427 #> [19720,]  392  419  427 #> [19721,]  392  419  427 #> [19722,]  392  419  427 #> [19723,]  391  418  426 #> [19724,]  392  419  427 #> [19725,]  391  418  426 #> [19726,]  392  419  427 #> [19727,]  392  419  427 #> [19728,]  392  419  427 #> [19729,]  392  419  427 #> [19730,]  392  419  427 #> [19731,]  391  418  426 #> [19732,]  391  418  426 #> [19733,]  392  419  427 #> [19734,]  392  419  427 #> [19735,]  392  419  427 #> [19736,]  392  419  427 #> [19737,]  391  418  426 #> [19738,]  392  419  427 #> [19739,]  392  419  427 #> [19740,]  391  418  426 #> [19741,]  392  419  427 #> [19742,]  392  419  427 #> [19743,]  392  419  427 #> [19744,]  392  419  427 #> [19745,]  392  419  427 #> [19746,]  391  418  426 #> [19747,]  391  418  426 #> [19748,]  392  419  427 #> [19749,]  392  419  427 #> [19750,]  392  419  427 #> [19751,]  392  419  427 #> [19752,]  391  418  426 #> [19753,]  392  419  427 #> [19754,]  392  419  427 #> [19755,]  391  418  426 #> [19756,]  392  419  427 #> [19757,]  391  418  426 #> [19758,]  392  419  427 #> [19759,]  391  418  426 #> [19760,]  391  418  426 #> [19761,]  392  419  427 #> [19762,]  392  419  427 #> [19763,]  392  419  427 #> [19764,]  392  419  427 #> [19765,]  392  419  427 #> [19766,]  392  419  427 #> [19767,]  391  418  426 #> [19768,]  391  418  426 #> [19769,]  392  419  427 #> [19770,]  392  419  427 #> [19771,]  392  419  427 #> [19772,]  391  418  426 #> [19773,]  392  419  427 #> [19774,]  391  418  426 #> [19775,]  392  419  427 #> [19776,]  391  418  426 #> [19777,]  392  419  427 #> [19778,]  391  418  426 #> [19779,]  392  419  427 #> [19780,]  391  418  426 #> [19781,]  392  419  427 #> [19782,]  392  419  427 #> [19783,]  392  419  427 #> [19784,]  392  419  427 #> [19785,]  392  419  427 #> [19786,]  391  418  426 #> [19787,]  392  419  427 #> [19788,]  392  419  427 #> [19789,]  392  419  427 #> [19790,]  392  419  427 #> [19791,]  392  419  427 #> [19792,]  391  418  426 #> [19793,]  392  419  427 #> [19794,]  392  419  427 #> [19795,]  392  419  427 #> [19796,]  391  418  426 #> [19797,]  391  418  426 #> [19798,]  391  418  426 #> [19799,]  392  419  427 #> [19800,]  392  419  427 #> [19801,]  393  420  429 #> [19802,]  393  420  429 #> [19803,]  393  420  428 #> [19804,]  393  420  429 #> [19805,]  393  420  429 #> [19806,]  393  420  429 #> [19807,]  393  420  428 #> [19808,]  393  420  429 #> [19809,]  393  420  429 #> [19810,]  393  420  429 #> [19811,]  393  420  429 #> [19812,]  393  420  429 #> [19813,]  394  421  428 #> [19814,]  393  420  429 #> [19815,]  394  421  429 #> [19816,]  393  420  429 #> [19817,]  393  420  429 #> [19818,]  393  420  429 #> [19819,]  394  421  429 #> [19820,]  394  421  429 #> [19821,]  393  420  428 #> [19822,]  394  421  429 #> [19823,]  393  420  428 #> [19824,]  393  420  429 #> [19825,]  393  420  429 #> [19826,]  393  420  429 #> [19827,]  394  421  429 #> [19828,]  393  420  429 #> [19829,]  394  421  429 #> [19830,]  393  420  428 #> [19831,]  393  420  428 #> [19832,]  393  420  429 #> [19833,]  393  420  429 #> [19834,]  393  420  429 #> [19835,]  393  420  429 #> [19836,]  394  421  429 #> [19837,]  394  421  429 #> [19838,]  394  421  429 #> [19839,]  393  420  428 #> [19840,]  393  420  429 #> [19841,]  394  421  429 #> [19842,]  393  420  429 #> [19843,]  393  420  429 #> [19844,]  393  420  429 #> [19845,]  393  420  429 #> [19846,]  394  421  429 #> [19847,]  393  420  428 #> [19848,]  393  420  429 #> [19849,]  393  420  428 #> [19850,]  394  421  429 #> [19851,]  394  421  429 #> [19852,]  393  420  429 #> [19853,]  394  421  429 #> [19854,]  393  420  428 #> [19855,]  394  421  429 #> [19856,]  393  420  429 #> [19857,]  393  420  429 #> [19858,]  394  421  429 #> [19859,]  393  420  429 #> [19860,]  394  421  429 #> [19861,]  393  420  429 #> [19862,]  393  420  428 #> [19863,]  393  420  429 #> [19864,]  394  421  429 #> [19865,]  393  420  429 #> [19866,]  394  421  429 #> [19867,]  393  420  429 #> [19868,]  393  420  429 #> [19869,]  394  421  429 #> [19870,]  393  420  428 #> [19871,]  394  421  429 #> [19872,]  393  420  429 #> [19873,]  393  420  429 #> [19874,]  393  420  429 #> [19875,]  393  420  429 #> [19876,]  393  420  429 #> [19877,]  394  421  428 #> [19878,]  393  420  429 #> [19879,]  393  420  428 #> [19880,]  394  421  428 #> [19881,]  394  421  429 #> [19882,]  393  420  429 #> [19883,]  394  421  428 #> [19884,]  393  420  429 #> [19885,]  393  420  429 #> [19886,]  393  420  429 #> [19887,]  394  421  429 #> [19888,]  393  420  429 #> [19889,]  393  420  429 #> [19890,]  394  421  429 #> [19891,]  393  420  429 #> [19892,]  393  420  429 #> [19893,]  393  420  429 #> [19894,]  393  420  429 #> [19895,]  393  420  428 #> [19896,]  394  421  429 #> [19897,]  394  421  429 #> [19898,]  393  420  428 #> [19899,]  393  420  429 #> [19900,]  394  421  429 #> [19901,]  396  422  430 #> [19902,]  395  423  431 #> [19903,]  395  424  431 #> [19904,]  395  424  431 #> [19905,]  396  422  430 #> [19906,]  395  423  431 #> [19907,]  395  424  431 #> [19908,]  395  424  431 #> [19909,]  395  424  431 #> [19910,]  396  422  430 #> [19911,]  396  422  430 #> [19912,]  396  422  430 #> [19913,]  395  424  431 #> [19914,]  396  422  430 #> [19915,]  396  422  430 #> [19916,]  395  424  431 #> [19917,]  396  422  430 #> [19918,]  396  422  430 #> [19919,]  395  423  431 #> [19920,]  395  424  431 #> [19921,]  395  424  431 #> [19922,]  396  422  430 #> [19923,]  395  423  431 #> [19924,]  395  424  431 #> [19925,]  395  424  431 #> [19926,]  396  422  430 #> [19927,]  396  422  430 #> [19928,]  395  424  431 #> [19929,]  395  423  431 #> [19930,]  395  423  431 #> [19931,]  396  422  430 #> [19932,]  396  422  430 #> [19933,]  395  424  431 #> [19934,]  395  423  431 #> [19935,]  395  423  431 #> [19936,]  395  424  431 #> [19937,]  395  423  431 #> [19938,]  396  422  430 #> [19939,]  395  424  431 #> [19940,]  395  424  431 #> [19941,]  395  424  431 #> [19942,]  395  423  431 #> [19943,]  396  422  430 #> [19944,]  395  423  431 #> [19945,]  395  424  431 #> [19946,]  395  423  431 #> [19947,]  396  422  430 #> [19948,]  395  423  431 #> [19949,]  395  424  431 #> [19950,]  395  424  431 #> [19951,]  395  424  431 #> [19952,]  396  422  430 #> [19953,]  395  424  431 #> [19954,]  395  424  431 #> [19955,]  395  424  431 #> [19956,]  395  423  431 #> [19957,]  395  424  431 #> [19958,]  396  422  430 #> [19959,]  396  422  430 #> [19960,]  395  423  431 #> [19961,]  396  422  430 #> [19962,]  395  424  431 #> [19963,]  395  423  431 #> [19964,]  395  423  431 #> [19965,]  395  423  431 #> [19966,]  396  422  430 #> [19967,]  395  424  431 #> [19968,]  396  422  430 #> [19969,]  395  424  431 #> [19970,]  396  422  430 #> [19971,]  396  422  430 #> [19972,]  395  424  431 #> [19973,]  395  424  431 #> [19974,]  395  424  431 #> [19975,]  396  422  430 #> [19976,]  395  424  431 #> [19977,]  396  422  430 #> [19978,]  395  423  431 #> [19979,]  396  422  430 #> [19980,]  395  424  431 #> [19981,]  395  423  431 #> [19982,]  395  424  431 #> [19983,]  395  424  431 #> [19984,]  395  424  431 #> [19985,]  395  424  431 #> [19986,]  395  424  431 #> [19987,]  396  422  430 #> [19988,]  395  424  431 #> [19989,]  395  424  431 #> [19990,]  396  422  430 #> [19991,]  396  422  430 #> [19992,]  396  422  430 #> [19993,]  395  423  431 #> [19994,]  395  423  431 #> [19995,]  396  422  430 #> [19996,]  396  422  430 #> [19997,]  395  424  431 #> [19998,]  395  424  431 #> [19999,]  395  424  431 #> [20000,]  396  422  430"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Return forest's leaf node scale parameters. leaf scale sampled forest question, throws error leaf model stochastic scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"computeForestLeafVariances(model_object, forest_type, forest_inds = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"model_object Object type bartmodel bcfmodel corresponding BART / BCF model least one forest sample forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Vector size length(forest_inds) leaf scale parameter requested forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafVariances(bart_model, \"mean\") #>  [1] 0.005253600 0.005963655 0.005278819 0.005290531 0.005651987 0.005033647 #>  [7] 0.005478006 0.005273486 0.005146095 0.005415185 computeForestLeafVariances(bart_model, \"mean\", 0) #> [1] 0.0052536 computeForestLeafVariances(bart_model, \"mean\", c(1,3,5)) #> [1] 0.005963655 0.005290531 0.005033647"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Compute return largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"computeForestMaxLeafIndex(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute max leaf indices. provided, function return max leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Vector containing largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestMaxLeafIndex(bart_model, X, \"mean\") #>  [1] 381 412 420 425 424 434 436 430 429 438 computeForestMaxLeafIndex(bart_model, X, \"mean\", 0) #> [1] 381 computeForestMaxLeafIndex(bart_model, X, \"mean\", c(1,3,9)) #> [1] 412 425 438"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"Convert persistent aspects covariate preprocessor (-memory) C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"convertPreprocessorToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"wrapper around -memory C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Convert list (-memory) JSON representations BART model single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"createBARTModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- list(saveBARTModelToJson(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BART models single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"createBARTModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string_list <- list(saveBARTModelToJsonString(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJsonString(bart_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Convert (-memory) JSON representation BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"createBARTModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"json_object Object type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model) bart_model_roundtrip <- createBARTModelFromJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Convert JSON file containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"createBARTModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) bart_model_roundtrip <- createBARTModelFromJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Convert JSON string containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"createBARTModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJsonString(bart_model) bart_model_roundtrip <- createBARTModelFromJsonString(bart_json) y_hat_mean_roundtrip <- rowMeans(predict(bart_model_roundtrip, X_train)$y_hat) plot(rowMeans(bart_model$y_hat_train), y_hat_mean_roundtrip,       xlab = \"original\", ylab = \"roundtrip\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"createBCFModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_list <- list(saveBCFModelToJson(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJson(bcf_json_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"createBCFModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_string_list <- list(saveBCFModelToJsonString(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJsonString(bcf_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Convert (-memory) JSON representation BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"createBCFModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"json_object Object type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) bcf_json <- saveBCFModelToJson(bcf_model) bcf_model_roundtrip <- createBCFModelFromJson(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Convert JSON file containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"createBCFModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\") # bcf_model_roundtrip <- createBCFModelFromJsonFile(\"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Convert JSON string containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"createBCFModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json <- saveBCFModelToJsonString(bcf_model) # bcf_model_roundtrip <- createBCFModelFromJsonString(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new (empty) C++ Json object — createCppJson","title":"Create a new (empty) C++ Json object — createCppJson","text":"Create new (empty) C++ Json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"createCppJson()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new (empty) C++ Json object — createCppJson","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json file — createCppJsonFile","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"Create C++ Json object Json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"createCppJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"json_filename Name file read. Must end .json.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) tmpjson <- tempfile(fileext = \".json\") example_json$save_file(file.path(tmpjson)) example_json_roundtrip <- createCppJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json string — createCppJsonString","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"Create C++ Json object Json string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"createCppJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) example_json_string <- example_json$return_json_string() example_json_roundtrip <- createCppJsonString(example_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R class that wraps a C++ random number generator — createCppRNG","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"Create R class wraps C++ random number generator","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"createCppRNG(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"CppRng object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"rng <- createCppRNG(1234) rng <- createCppRNG()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest — createForest","title":"Create a forest — createForest","text":"Create forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest — createForest","text":"","code":"createForest(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest — createForest","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest — createForest","text":"Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest — createForest","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest dataset object — createForestDataset","title":"Create a forest dataset object — createForestDataset","text":"Create forest dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest dataset object — createForestDataset","text":"","code":"createForestDataset(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest dataset object — createForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest dataset object — createForestDataset","text":"ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest dataset object — createForestDataset","text":"","code":"covariate_matrix <- matrix(runif(10*100), ncol = 10) basis_matrix <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) forest_dataset <- createForestDataset(covariate_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model object — createForestModel","title":"Create a forest model object — createForestModel","text":"Create forest model object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model object — createForestModel","text":"","code":"createForestModel(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model object — createForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree ensemble mean model. Setting -1 enforce depth limits trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model object — createForestModel","text":"ForestModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model object — createForestModel","text":"","code":"num_trees <- 100 n <- 100 p <- 10 alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a container of forest samples — createForestSamples","title":"Create a container of forest samples — createForestSamples","text":"Create container forest samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a container of forest samples — createForestSamples","text":"","code":"createForestSamples(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a container of forest samples — createForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a container of forest samples — createForestSamples","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a container of forest samples — createForestSamples","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an outcome object — createOutcome","title":"Create an outcome object — createOutcome","text":"Create outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an outcome object — createOutcome","text":"","code":"createOutcome(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an outcome object — createOutcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an outcome object — createOutcome","text":"Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an outcome object — createOutcome","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) outcome <- createOutcome(y)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"createPreprocessorFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"json_object -memory wrapper around JSON C++ object containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJson(preprocessor_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"createPreprocessorFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"json_string -memory JSON string containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJsonString(preprocessor_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectSamples object — createRandomEffectSamples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"Create RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"createRandomEffectSamples(num_components, num_groups, random_effects_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random effects dataset object — createRandomEffectsDataset","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"Create random effects dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"createRandomEffectsDataset(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"rfx_group_ids <- sample(1:2, size = 100, replace = TRUE) rfx_basis <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsModel object — createRandomEffectsModel","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"Create RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsTracker object — createRandomEffectsTracker","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"Create RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"createRandomEffectsTracker(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"# S3 method for class 'bartmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"object Object type bartmodel containing draws BART model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) snr <- 3 group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) E_y <- f_XW + rfx_term y <- E_y + rnorm(n, 0, 1)*(sd(E_y)/snr) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- group_ids[test_inds] rfx_group_ids_train <- group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     rfx_group_ids_train = rfx_group_ids_train, rfx_group_ids_test = rfx_group_ids_test,                     rfx_basis_train = rfx_basis_train, rfx_basis_test = rfx_basis_test,                     num_gfr = 100, num_burnin = 0, num_mcmc = 100) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) rfx_samples <- getRandomEffectSamples(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"Generic function extracting random effect samples model object (BCF, BART, etc...)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"object Fitted model object extract random effects ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"List random effect samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"Combine multiple JSON model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"loadForestContainerCombinedJson(json_object_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"json_object_list List objects class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) mean_forest <- loadForestContainerCombinedJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"loadForestContainerCombinedJsonString(json_string_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"json_string_list List strings parse objects type CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) mean_forest <- loadForestContainerCombinedJsonString(bart_json_string, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of forest samples from json — loadForestContainerJson","title":"Load a container of forest samples from json — loadForestContainerJson","text":"Load container forest samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"loadForestContainerJson(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of forest samples from json — loadForestContainerJson","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of forest samples from json — loadForestContainerJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) mean_forest <- loadForestContainerJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"Combine multiple JSON model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"loadRandomEffectSamplesCombinedJson(json_object_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"json_object_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"loadRandomEffectSamplesCombinedJsonString(json_string_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"json_string_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJsonString(bart_json_string, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"Load container random effect samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"loadRandomEffectSamplesJson(json_object, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"json_object Object class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) rfx_samples <- loadRandomEffectSamplesJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a scalar from json — loadScalarJson","title":"Load a scalar from json — loadScalarJson","text":"Load scalar json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a scalar from json — loadScalarJson","text":"","code":"loadScalarJson(json_object, json_scalar_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a scalar from json — loadScalarJson","text":"json_object Object class CppJson json_scalar_label Label referring particular scalar / string value (.e. \"num_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a scalar from json — loadScalarJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a scalar from json — loadScalarJson","text":"","code":"example_scalar <- 5.4 example_json <- createCppJson() example_json$add_scalar(\"myscalar\", example_scalar) roundtrip_scalar <- loadScalarJson(example_json, \"myscalar\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a vector from json — loadVectorJson","title":"Load a vector from json — loadVectorJson","text":"Load vector json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a vector from json — loadVectorJson","text":"","code":"loadVectorJson(json_object, json_vector_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a vector from json — loadVectorJson","text":"json_object Object class CppJson json_vector_label Label referring particular vector (.e. \"sigma2_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a vector from json — loadVectorJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a vector from json — loadVectorJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) roundtrip_vec <- loadVectorJson(example_json, \"myvec\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BART model on new data — predict.bartmodel","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"Predict sampled BART model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"# S3 method for class 'bartmodel' predict(   object,   X,   leaf_basis = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"object Object type bart containing draws regression forest associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. leaf_basis (Optional) Bases used prediction (e.g. dot product leaf values). Default: NULL. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"List prediction matrices. model random effects, list one element – predictions forest. model random effects, list three elements – forest predictions, random effects predictions, sum (y_hat).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) y_hat_test <- predict(bart_model, X_test)$y_hat plot(rowMeans(y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BCF model on new data — predict.bcfmodel","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"Predict sampled BCF model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' predict(   object,   X,   Z,   propensity = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. Z Treatments used prediction. propensity (Optional) Propensities used prediction. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"List 3-5 nrow(X) object$num_samples matrices: prognostic function estimates, treatment effect estimates, (optionally) random effects predictions, (optionally) variance forest predictions, outcome predictions.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train) preds <- predict(bcf_model, X_test, Z_test, pi_test) plot(rowMeans(preds$mu_hat), mu_test, xlab = \"predicted\",      ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(preds$tau_hat), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"preprocessPredictionData(input_data, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"input_data Covariates, provided either dataframe matrix metadata List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocessed data categorical variables appropriately handled","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"cov_df <- data.frame(x1 = 1:5, x2 = 5:1, x3 = 6:10) metadata <- list(num_ordered_cat_vars = 0, num_unordered_cat_vars = 0,                   num_numeric_vars = 3, numeric_vars = c(\"x1\", \"x2\", \"x3\")) X_preprocessed <- preprocessPredictionData(cov_df, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"preprocessTrainData(input_data)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"input_data Covariates, provided either dataframe matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"List preprocessed (unmodified) data details number type variable, unique categories associated categorical variables, vector feature types needed calls BART BCF.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) X <- preprocess_list$X"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"Reset active forest, either specific forest ForestContainer ensemble single-node (.e. root) trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"resetActiveForest(active_forest, forest_samples = NULL, forest_num = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"active_forest Current active forest forest_samples (Optional) Container forest samples re-initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees. forest_num (Optional) Index forest samples initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples$add_forest_with_constant_leaves(0.0) forest_samples$add_numeric_split_tree(0, 0, 0, 0, 0.5, -1.0, 1.0) forest_samples$add_numeric_split_tree(0, 1, 0, 1, 0.75, 3.4, 0.75) active_forest$set_root_leaves(0.1) resetActiveForest(active_forest, forest_samples, 0) resetActiveForest(active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"Re-initialize forest model (tracking data structures) specific forest ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"resetForestModel(forest_model, forest, dataset, residual, is_mean_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"forest_model Forest model tracking data structures forest Forest re-initialize forest model dataset Training dataset object residual Residual also updated is_mean_model Whether model updated conditional mean model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"n <- 100 p <- 10 num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) leaf_model <- 0 sigma2 <- 1.0 leaf_scale <- as.matrix(1.0) variable_weights <- rep(1/p, p) a_forest <- 1 b_forest <- 1 cutpoint_grid_size <- 100 X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) y <- -5 + 10*(X[,1] > 0.5) + rnorm(n) outcome <- createOutcome(y) rng <- createCppRNG(1234) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth) active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_model$sample_one_iteration(     forest_dataset, outcome, forest_samples, active_forest,      rng, feature_types, leaf_model, leaf_scale, variable_weights,      a_forest, b_forest, sigma2, cutpoint_grid_size, keep_forest = TRUE,      gfr = FALSE, pre_initialized = TRUE ) resetActiveForest(active_forest, forest_samples, 0) resetForestModel(forest_model, active_forest, forest_dataset, outcome, TRUE)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"Reset RandomEffectsModel object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"resetRandomEffectsModel(rfx_model, rfx_samples, sample_num, sigma_alpha_init)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"rfx_model Object type RandomEffectsModel. rfx_samples Object type RandomEffectSamples. sample_num Index sample stored rfx_samples reset state random effects model. Zero-indexed, resetting based first sample require setting sample_num = 0. sigma_alpha_init Initial value \"working parameter\" scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"Reset RandomEffectsTracker object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"resetRandomEffectsTracker(   rfx_tracker,   rfx_model,   rfx_dataset,   residual,   rfx_samples )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome. rfx_samples Object type RandomEffectSamples.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0) resetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome, rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object to its ","title":"Reset a RandomEffectsModel object to its ","text":"Reset RandomEffectsModel object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object to its ","text":"","code":"rootResetRandomEffectsModel(   rfx_model,   alpha_init,   xi_init,   sigma_alpha_init,   sigma_xi_init,   sigma_xi_shape,   sigma_xi_scale )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object to its ","text":"rfx_model Object type RandomEffectsModel. alpha_init Initial value \"working parameter\". xi_init Initial value \"group parameters\". sigma_alpha_init Initial value \"working parameter\" scale parameter. sigma_xi_init Initial value \"group parameters\" scale parameter. sigma_xi_shape Shape parameter inverse gamma variance model group parameters. sigma_xi_scale Scale parameter inverse gamma variance model group parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object to its ","title":"Reset a RandomEffectsTracker object to its ","text":"Reset RandomEffectsTracker object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object to its ","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale) rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"Sample one iteration (inverse gamma) global variance model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"sampleGlobalErrorVarianceOneIteration(residual, dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"residual Outcome class dataset ForestDataset class rng C++ random number generator Global variance shape parameter b Global variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) y_std <- (y-mean(y))/sd(y) forest_dataset <- createForestDataset(X) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 sigma2 <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"Sample one iteration leaf parameter variance model (univariate basis constant leaf!)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"sampleLeafVarianceOneIteration(forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"forest C++ forest rng C++ random number generator Leaf variance shape parameter b Leaf variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 tau <- sampleLeafVarianceOneIteration(active_forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Convert persistent aspects BART model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"saveBARTModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"Convert persistent aspects BART model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"saveBARTModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"object Object type bartmodel containing draws BART model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"Convert persistent aspects BART model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"saveBARTModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string <- saveBARTModelToJsonString(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Convert persistent aspects BCF model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"saveBCFModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # bcf_json <- saveBCFModelToJson(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"Convert persistent aspects BCF model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"saveBCFModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"Convert persistent aspects BCF model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"saveBCFModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonString(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"Convert persistent aspects covariate preprocessor (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"savePreprocessorToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Stochastic tree ensembles (XBART BART) supervised learning causal inference.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Maintainer: Drew Herren drewherrenopensource@gmail.com (ORCID) Authors: Richard Hahn Jared Murray Carlos Carvalho Jingyu contributors: stochtree contributors [copyright holder]","code":""},{"path":"https://stochastictree.github.io/stochtree-r/news/index.html","id":"stochtree-010","dir":"Changelog","previous_headings":"","what":"stochtree 0.1.0","title":"stochtree 0.1.0","text":"Initial CRAN submission.","code":""}]
