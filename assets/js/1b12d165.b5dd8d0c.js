"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5409],{8392:(e,c,d)=>{d.r(c),d.d(c,{assets:()=>i,contentTitle:()=>n,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"c-documentation-markdown/namespace_`StochTree`","title":"namespace `StochTree`","description":"Copyright (c) 2024 by stochtree authors","source":"@site/docs/c-documentation-markdown/namespace_`StochTree`.md","sourceDirName":"c-documentation-markdown","slug":"/c-documentation-markdown/namespace_`StochTree`","permalink":"/documentation/docs/c-documentation-markdown/namespace_`StochTree`","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/c-documentation-markdown/namespace_`StochTree`.md","tags":[],"version":"current","frontMatter":{"title":"namespace `StochTree`"},"sidebar":"tutorialSidebar","previous":{"title":"class `RngCpp`","permalink":"/documentation/docs/c-documentation-markdown/class_`RngCpp`"},"next":{"title":"struct `StochTree::LocalFile`","permalink":"/documentation/docs/c-documentation-markdown/struct_`StochTreeLocalFile`"}}');var o=d(4848),r=d(8453);const s={title:"namespace `StochTree`"},n="namespace StochTree",i={},a=[{value:"Summary",id:"summary",level:2},{value:"Members",id:"members",level:2},{value:"<code>enum </code><code>DataType</code>",id:"enum-datatype",level:4},{value:"<code>public void </code><code>LoadData</code><code>(double * data_ptr,int num_row,int num_col,bool is_row_major,Eigen::MatrixXd &amp; data_matrix)</code>",id:"public-void-loaddatadouble--data_ptrint-num_rowint-num_colbool-is_row_majoreigenmatrixxd--data_matrix",level:4},{value:"<code>public void </code><code>LoadData</code><code>(double * data_ptr,int num_row,Eigen::VectorXd &amp; data_vector)</code>",id:"public-void-loaddatadouble--data_ptrint-num_roweigenvectorxd--data_vector",level:4},{value:"<code>public void </code><code>GetStatistic</code><code>(const char * str,int * comma_cnt,int * tab_cnt,int * colon_cnt)</code>",id:"public-void-getstatisticconst-char--strint--comma_cntint--tab_cntint--colon_cnt",level:4},{value:"<code>public int </code><code>GetLabelIdxForLibsvm</code><code>(const std::string &amp; str,int num_features,int label_idx)</code>",id:"public-int-getlabelidxforlibsvmconst-stdstring--strint-num_featuresint-label_idx",level:4},{value:"<code>public int </code><code>GetLabelIdxForTSV</code><code>(const std::string &amp; str,int num_features,int label_idx)</code>",id:"public-int-getlabelidxfortsvconst-stdstring--strint-num_featuresint-label_idx",level:4},{value:"<code>public int </code><code>GetLabelIdxForCSV</code><code>(const std::string &amp; str,int num_features,int label_idx)</code>",id:"public-int-getlabelidxforcsvconst-stdstring--strint-num_featuresint-label_idx",level:4},{value:"<code>public void </code><code>GetLine</code><code>(std::stringstream * ss,std::string * line,const VirtualFileReader * reader,std::vector&lt; char &gt; * buffer,size_t buffer_size)</code>",id:"public-void-getlinestdstringstream--ssstdstring--lineconst-virtualfilereader--readerstdvector-char---buffersize_t-buffer_size",level:4},{value:"<code>public std::vector&lt; std::string &gt; </code><code>ReadKLineFromFile</code><code>(const char * filename,bool header,int k)</code>",id:"public-stdvector-stdstring--readklinefromfileconst-char--filenamebool-headerint-k",level:4},{value:"<code>public int </code><code>GetNumColFromLIBSVMFile</code><code>(const char * filename,bool header)</code>",id:"public-int-getnumcolfromlibsvmfileconst-char--filenamebool-header",level:4},{value:"<code>public DataType </code><code>GetDataType</code><code>(const char * filename,bool header,const std::vector&lt; std::string &gt; &amp; lines,int * num_col)</code>",id:"public-datatype-getdatatypeconst-char--filenamebool-headerconst-stdvector-stdstring---linesint--num_col",level:4},{value:"<code>public void </code><code>TreeNodeVectorsToJson</code><code>(json &amp; obj,Tree * tree)</code>",id:"public-void-treenodevectorstojsonjson--objtree--tree",level:4},{value:"<code>public void </code><code>MultivariateLeafVectorToJson</code><code>(json &amp; obj,Tree * tree)</code>",id:"public-void-multivariateleafvectortojsonjson--objtree--tree",level:4},{value:"<code>public void </code><code>SplitCategoryVectorToJson</code><code>(json &amp; obj,Tree * tree)</code>",id:"public-void-splitcategoryvectortojsonjson--objtree--tree",level:4},{value:"<code>public void </code><code>NodeListsToJson</code><code>(json &amp; obj,Tree * tree)</code>",id:"public-void-nodeliststojsonjson--objtree--tree",level:4},{value:"<code>public void </code><code>JsonToTreeNodeVectors</code><code>(const json &amp; tree_json,Tree * tree)</code>",id:"public-void-jsontotreenodevectorsconst-json--tree_jsontree--tree",level:4},{value:"<code>public void </code><code>JsonToMultivariateLeafVector</code><code>(const json &amp; tree_json,Tree * tree)</code>",id:"public-void-jsontomultivariateleafvectorconst-json--tree_jsontree--tree",level:4},{value:"<code>public void </code><code>JsonToSplitCategoryVector</code><code>(const json &amp; tree_json,Tree * tree)</code>",id:"public-void-jsontosplitcategoryvectorconst-json--tree_jsontree--tree",level:4},{value:"<code>public void </code><code>JsonToNodeLists</code><code>(const json &amp; tree_json,Tree * tree)</code>",id:"public-void-jsontonodelistsconst-json--tree_jsontree--tree",level:4}];function l(e){const c={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(c.header,{children:(0,o.jsxs)(c.h1,{id:"namespace-stochtree",children:["namespace ",(0,o.jsx)(c.code,{children:"StochTree"})]})}),"\n",(0,o.jsx)(c.p,{children:"Copyright (c) 2024 by stochtree authors"}),"\n",(0,o.jsx)(c.p,{children:"Copyright (c) 2018 Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE file in the project root for license information."}),"\n",(0,o.jsx)(c.p,{children:"Copyright (c) 2016 Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE file in the project root for license information."}),"\n",(0,o.jsx)(c.p,{children:"Copyright (c) 2024 stochtree authors"}),"\n",(0,o.jsx)(c.p,{children:"Inspired by the design of the tree in the xgboost and treelite package, both released under the Apache license with the following copyright: Copyright 2015-2023 by XGBoost Contributors Copyright 2017-2021 by [treelite] Contributors"}),"\n",(0,o.jsx)(c.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsxs)(c.table,{children:[(0,o.jsx)(c.thead,{children:(0,o.jsxs)(c.tr,{children:[(0,o.jsx)(c.th,{children:"Members"}),(0,o.jsx)(c.th,{children:"Descriptions"})]})}),(0,o.jsxs)(c.tbody,{children:[(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"enum "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1aadac066fad287a876d82d215034ddece",children:(0,o.jsx)(c.code,{children:"DataType"})})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a79b3e91f2279b0faa67b197d9bebe364",children:(0,o.jsx)(c.code,{children:"LoadData"})}),(0,o.jsx)(c.code,{children:"(double * data_ptr,int num_row,int num_col,bool is_row_major,Eigen::MatrixXd & data_matrix)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a37009d39fc8c804523961c8437794be2",children:(0,o.jsx)(c.code,{children:"LoadData"})}),(0,o.jsx)(c.code,{children:"(double * data_ptr,int num_row,Eigen::VectorXd & data_vector)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1adadf702449bc25e53e4c87dd281f6c16",children:(0,o.jsx)(c.code,{children:"GetStatistic"})}),(0,o.jsx)(c.code,{children:"(const char * str,int * comma_cnt,int * tab_cnt,int * colon_cnt)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public int "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a441e9253ebe4a33d2269a09464a9adc3",children:(0,o.jsx)(c.code,{children:"GetLabelIdxForLibsvm"})}),(0,o.jsx)(c.code,{children:"(const std::string & str,int num_features,int label_idx)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public int "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1aaab0b5a0c1e3a110b07d583a31ef0204",children:(0,o.jsx)(c.code,{children:"GetLabelIdxForTSV"})}),(0,o.jsx)(c.code,{children:"(const std::string & str,int num_features,int label_idx)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public int "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1ae848b1ac95793c76ca4ed0da9b0d0c68",children:(0,o.jsx)(c.code,{children:"GetLabelIdxForCSV"})}),(0,o.jsx)(c.code,{children:"(const std::string & str,int num_features,int label_idx)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a42736434dc1da3b939c67f1d18703ae6",children:(0,o.jsx)(c.code,{children:"GetLine"})}),(0,o.jsx)(c.code,{children:"(std::stringstream * ss,std::string * line,const VirtualFileReader * reader,std::vector< char > * buffer,size_t buffer_size)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public std::vector< std::string > "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1ad0d56e7e54c33c79beb8b8c6ddd25c5b",children:(0,o.jsx)(c.code,{children:"ReadKLineFromFile"})}),(0,o.jsx)(c.code,{children:"(const char * filename,bool header,int k)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public int "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a73eb7b1b4cbc5dc88be3454e5e9fcfbf",children:(0,o.jsx)(c.code,{children:"GetNumColFromLIBSVMFile"})}),(0,o.jsx)(c.code,{children:"(const char * filename,bool header)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public DataType "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a13ee5cdb09aa6e4fcab6b5d46653e4e4",children:(0,o.jsx)(c.code,{children:"GetDataType"})}),(0,o.jsx)(c.code,{children:"(const char * filename,bool header,const std::vector< std::string > & lines,int * num_col)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1ab98c941b48d9e2d5688e0cc92a53f0cc",children:(0,o.jsx)(c.code,{children:"TreeNodeVectorsToJson"})}),(0,o.jsx)(c.code,{children:"(json & obj,Tree * tree)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1ac61d620ff7b2527c0f1027277202d06f",children:(0,o.jsx)(c.code,{children:"MultivariateLeafVectorToJson"})}),(0,o.jsx)(c.code,{children:"(json & obj,Tree * tree)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1aa0f0949f876dba5db4ace80f8173394a",children:(0,o.jsx)(c.code,{children:"SplitCategoryVectorToJson"})}),(0,o.jsx)(c.code,{children:"(json & obj,Tree * tree)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a529f34e95318a5e2786f54a44e18d2af",children:(0,o.jsx)(c.code,{children:"NodeListsToJson"})}),(0,o.jsx)(c.code,{children:"(json & obj,Tree * tree)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1afb228b4aafb891869faf5382451e5720",children:(0,o.jsx)(c.code,{children:"JsonToTreeNodeVectors"})}),(0,o.jsx)(c.code,{children:"(const json & tree_json,Tree * tree)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a76dca66692932497995dd1cf74ba611e",children:(0,o.jsx)(c.code,{children:"JsonToMultivariateLeafVector"})}),(0,o.jsx)(c.code,{children:"(const json & tree_json,Tree * tree)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a859fbb7cd257d38c26e50f5684a1a7f3",children:(0,o.jsx)(c.code,{children:"JsonToSplitCategoryVector"})}),(0,o.jsx)(c.code,{children:"(const json & tree_json,Tree * tree)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a04d09843b9c34aad2f6a9dbeb3babbfe",children:(0,o.jsx)(c.code,{children:"JsonToNodeLists"})}),(0,o.jsx)(c.code,{children:"(const json & tree_json,Tree * tree)"})]}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsxs)(c.td,{children:[(0,o.jsx)(c.code,{children:"struct "}),(0,o.jsx)(c.a,{href:"#structStochTree_1_1LocalFile",children:(0,o.jsx)(c.code,{children:"StochTree::LocalFile"})})]}),(0,o.jsx)(c.td,{})]})]})]}),"\n",(0,o.jsx)(c.h2,{id:"members",children:"Members"}),"\n",(0,o.jsxs)(c.h4,{id:"enum-datatype",children:[(0,o.jsx)(c.code,{children:"enum "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1aadac066fad287a876d82d215034ddece",children:(0,o.jsx)(c.code,{children:"DataType"})})]}),"\n",(0,o.jsxs)(c.table,{children:[(0,o.jsx)(c.thead,{children:(0,o.jsxs)(c.tr,{children:[(0,o.jsx)(c.th,{children:"Values"}),(0,o.jsx)(c.th,{children:"Descriptions"})]})}),(0,o.jsxs)(c.tbody,{children:[(0,o.jsxs)(c.tr,{children:[(0,o.jsx)(c.td,{children:"INVALID"}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsx)(c.td,{children:"CSV"}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsx)(c.td,{children:"TSV"}),(0,o.jsx)(c.td,{})]}),(0,o.jsxs)(c.tr,{children:[(0,o.jsx)(c.td,{children:"LIBSVM"}),(0,o.jsx)(c.td,{})]})]})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-loaddatadouble--data_ptrint-num_rowint-num_colbool-is_row_majoreigenmatrixxd--data_matrix",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a79b3e91f2279b0faa67b197d9bebe364",children:(0,o.jsx)(c.code,{children:"LoadData"})}),(0,o.jsx)(c.code,{children:"(double * data_ptr,int num_row,int num_col,bool is_row_major,Eigen::MatrixXd & data_matrix)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-loaddatadouble--data_ptrint-num_roweigenvectorxd--data_vector",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a37009d39fc8c804523961c8437794be2",children:(0,o.jsx)(c.code,{children:"LoadData"})}),(0,o.jsx)(c.code,{children:"(double * data_ptr,int num_row,Eigen::VectorXd & data_vector)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-getstatisticconst-char--strint--comma_cntint--tab_cntint--colon_cnt",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1adadf702449bc25e53e4c87dd281f6c16",children:(0,o.jsx)(c.code,{children:"GetStatistic"})}),(0,o.jsx)(c.code,{children:"(const char * str,int * comma_cnt,int * tab_cnt,int * colon_cnt)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-int-getlabelidxforlibsvmconst-stdstring--strint-num_featuresint-label_idx",children:[(0,o.jsx)(c.code,{children:"public int "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a441e9253ebe4a33d2269a09464a9adc3",children:(0,o.jsx)(c.code,{children:"GetLabelIdxForLibsvm"})}),(0,o.jsx)(c.code,{children:"(const std::string & str,int num_features,int label_idx)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-int-getlabelidxfortsvconst-stdstring--strint-num_featuresint-label_idx",children:[(0,o.jsx)(c.code,{children:"public int "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1aaab0b5a0c1e3a110b07d583a31ef0204",children:(0,o.jsx)(c.code,{children:"GetLabelIdxForTSV"})}),(0,o.jsx)(c.code,{children:"(const std::string & str,int num_features,int label_idx)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-int-getlabelidxforcsvconst-stdstring--strint-num_featuresint-label_idx",children:[(0,o.jsx)(c.code,{children:"public int "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1ae848b1ac95793c76ca4ed0da9b0d0c68",children:(0,o.jsx)(c.code,{children:"GetLabelIdxForCSV"})}),(0,o.jsx)(c.code,{children:"(const std::string & str,int num_features,int label_idx)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-getlinestdstringstream--ssstdstring--lineconst-virtualfilereader--readerstdvector-char---buffersize_t-buffer_size",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a42736434dc1da3b939c67f1d18703ae6",children:(0,o.jsx)(c.code,{children:"GetLine"})}),(0,o.jsx)(c.code,{children:"(std::stringstream * ss,std::string * line,const VirtualFileReader * reader,std::vector< char > * buffer,size_t buffer_size)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-stdvector-stdstring--readklinefromfileconst-char--filenamebool-headerint-k",children:[(0,o.jsx)(c.code,{children:"public std::vector< std::string > "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1ad0d56e7e54c33c79beb8b8c6ddd25c5b",children:(0,o.jsx)(c.code,{children:"ReadKLineFromFile"})}),(0,o.jsx)(c.code,{children:"(const char * filename,bool header,int k)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-int-getnumcolfromlibsvmfileconst-char--filenamebool-header",children:[(0,o.jsx)(c.code,{children:"public int "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a73eb7b1b4cbc5dc88be3454e5e9fcfbf",children:(0,o.jsx)(c.code,{children:"GetNumColFromLIBSVMFile"})}),(0,o.jsx)(c.code,{children:"(const char * filename,bool header)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-datatype-getdatatypeconst-char--filenamebool-headerconst-stdvector-stdstring---linesint--num_col",children:[(0,o.jsx)(c.code,{children:"public DataType "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a13ee5cdb09aa6e4fcab6b5d46653e4e4",children:(0,o.jsx)(c.code,{children:"GetDataType"})}),(0,o.jsx)(c.code,{children:"(const char * filename,bool header,const std::vector< std::string > & lines,int * num_col)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-treenodevectorstojsonjson--objtree--tree",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1ab98c941b48d9e2d5688e0cc92a53f0cc",children:(0,o.jsx)(c.code,{children:"TreeNodeVectorsToJson"})}),(0,o.jsx)(c.code,{children:"(json & obj,Tree * tree)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-multivariateleafvectortojsonjson--objtree--tree",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1ac61d620ff7b2527c0f1027277202d06f",children:(0,o.jsx)(c.code,{children:"MultivariateLeafVectorToJson"})}),(0,o.jsx)(c.code,{children:"(json & obj,Tree * tree)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-splitcategoryvectortojsonjson--objtree--tree",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1aa0f0949f876dba5db4ace80f8173394a",children:(0,o.jsx)(c.code,{children:"SplitCategoryVectorToJson"})}),(0,o.jsx)(c.code,{children:"(json & obj,Tree * tree)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-nodeliststojsonjson--objtree--tree",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a529f34e95318a5e2786f54a44e18d2af",children:(0,o.jsx)(c.code,{children:"NodeListsToJson"})}),(0,o.jsx)(c.code,{children:"(json & obj,Tree * tree)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-jsontotreenodevectorsconst-json--tree_jsontree--tree",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1afb228b4aafb891869faf5382451e5720",children:(0,o.jsx)(c.code,{children:"JsonToTreeNodeVectors"})}),(0,o.jsx)(c.code,{children:"(const json & tree_json,Tree * tree)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-jsontomultivariateleafvectorconst-json--tree_jsontree--tree",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a76dca66692932497995dd1cf74ba611e",children:(0,o.jsx)(c.code,{children:"JsonToMultivariateLeafVector"})}),(0,o.jsx)(c.code,{children:"(const json & tree_json,Tree * tree)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-jsontosplitcategoryvectorconst-json--tree_jsontree--tree",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a859fbb7cd257d38c26e50f5684a1a7f3",children:(0,o.jsx)(c.code,{children:"JsonToSplitCategoryVector"})}),(0,o.jsx)(c.code,{children:"(const json & tree_json,Tree * tree)"})]}),"\n",(0,o.jsxs)(c.h4,{id:"public-void-jsontonodelistsconst-json--tree_jsontree--tree",children:[(0,o.jsx)(c.code,{children:"public void "}),(0,o.jsx)(c.a,{href:"#namespaceStochTree_1a04d09843b9c34aad2f6a9dbeb3babbfe",children:(0,o.jsx)(c.code,{children:"JsonToNodeLists"})}),(0,o.jsx)(c.code,{children:"(const json & tree_json,Tree * tree)"})]})]})}function h(e={}){const{wrapper:c}={...(0,r.R)(),...e.components};return c?(0,o.jsx)(c,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,c,d)=>{d.d(c,{R:()=>s,x:()=>n});var t=d(6540);const o={},r=t.createContext(o);function s(e){const c=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(c):{...c,...e}}),[c,e])}function n(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:c},e.children)}}}]);