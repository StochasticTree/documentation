"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6792],{5418:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"c-documentation-markdown/class_`ForestSamplerCpp`","title":"class `ForestSamplerCpp`","description":"Summary","source":"@site/docs/c-documentation-markdown/class_`ForestSamplerCpp`.md","sourceDirName":"c-documentation-markdown","slug":"/c-documentation-markdown/class_`ForestSamplerCpp`","permalink":"/documentation/docs/c-documentation-markdown/class_`ForestSamplerCpp`","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/c-documentation-markdown/class_`ForestSamplerCpp`.md","tags":[],"version":"current","frontMatter":{"title":"class `ForestSamplerCpp`"},"sidebar":"tutorialSidebar","previous":{"title":"class `ForestDatasetCpp`","permalink":"/documentation/docs/c-documentation-markdown/class_`ForestDatasetCpp`"},"next":{"title":"class `GlobalVarianceModelCpp`","permalink":"/documentation/docs/c-documentation-markdown/class_`GlobalVarianceModelCpp`"}}');var r=a(4848),t=a(8453);const l={title:"class `ForestSamplerCpp`"},i="class ForestSamplerCpp",c={},o=[{value:"Summary",id:"summary",level:2},{value:"Members",id:"members",level:2},{value:"<code>public inline  </code><code>ForestSamplerCpp</code><code>(</code><code>ForestDatasetCpp</code><code> &amp; dataset,py::array_t&lt; int &gt; feature_types,int num_trees,data_size_t num_obs,double alpha,double beta,int min_samples_leaf,int max_depth)</code>",id:"public-inline--forestsamplercppforestdatasetcpp--datasetpyarray_t-int--feature_typesint-num_treesdata_size_t-num_obsdouble-alphadouble-betaint-min_samples_leafint-max_depth",level:4},{value:"<code>public inline  </code><code>~ForestSamplerCpp</code><code>()</code>",id:"public-inline--forestsamplercpp",level:4},{value:"<code>public inline StochTree::ForestTracker * </code><code>GetTracker</code><code>()</code>",id:"public-inline-stochtreeforesttracker--gettracker",level:4},{value:"<code>public inline void </code><code>SampleOneIteration</code><code>(</code><code>ForestContainerCpp</code><code> &amp; forest_samples,</code><code>ForestDatasetCpp</code><code> &amp; dataset,</code><code>ResidualCpp</code><code> &amp; residual,</code><code>RngCpp</code><code> &amp; rng,py::array_t&lt; int &gt; feature_types,int cutpoint_grid_size,py::array_t&lt; double &gt; leaf_model_scale_input,py::array_t&lt; double &gt; variable_weights,double a_forest,double b_forest,double global_variance,int leaf_model_int,bool gfr,bool pre_initialized)</code>",id:"public-inline-void-sampleoneiterationforestcontainercpp--forest_samplesforestdatasetcpp--datasetresidualcpp--residualrngcpp--rngpyarray_t-int--feature_typesint-cutpoint_grid_sizepyarray_t-double--leaf_model_scale_inputpyarray_t-double--variable_weightsdouble-a_forestdouble-b_forestdouble-global_varianceint-leaf_model_intbool-gfrbool-pre_initialized",level:4},{value:"<code>public inline void </code><code>InitializeForestModel</code><code>(</code><code>ForestDatasetCpp</code><code> &amp; dataset,</code><code>ResidualCpp</code><code> &amp; residual,</code><code>ForestContainerCpp</code><code> &amp; forest_samples,int leaf_model_int,py::array_t&lt; double &gt; initial_values)</code>",id:"public-inline-void-initializeforestmodelforestdatasetcpp--datasetresidualcpp--residualforestcontainercpp--forest_samplesint-leaf_model_intpyarray_t-double--initial_values",level:4},{value:"<code>public inline void </code><code>PropagateBasisUpdate</code><code>(</code><code>ForestDatasetCpp</code><code> &amp; dataset,</code><code>ResidualCpp</code><code> &amp; residual,</code><code>ForestContainerCpp</code><code> &amp; forest_samples,int forest_num)</code>",id:"public-inline-void-propagatebasisupdateforestdatasetcpp--datasetresidualcpp--residualforestcontainercpp--forest_samplesint-forest_num",level:4},{value:"<code>public inline void </code><code>PropagateResidualUpdate</code><code>(</code><code>ResidualCpp</code><code> &amp; residual)</code>",id:"public-inline-void-propagateresidualupdateresidualcpp--residual",level:4}];function n(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsxs)(s.h1,{id:"class-forestsamplercpp",children:["class ",(0,r.jsx)(s.code,{children:"ForestSamplerCpp"})]})}),"\n",(0,r.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Members"}),(0,r.jsx)(s.th,{children:"Descriptions"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"public inline  "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1a716e2183d9ee5577e19e33b7b6221d93",children:(0,r.jsx)(s.code,{children:"ForestSamplerCpp"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classForestDatasetCpp",children:(0,r.jsx)(s.code,{children:"ForestDatasetCpp"})}),(0,r.jsx)(s.code,{children:" & dataset,py::array_t< int > feature_types,int num_trees,data_size_t num_obs,double alpha,double beta,int min_samples_leaf,int max_depth)"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"public inline  "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1a6ebd4b2b5b43fc2efa43bcf67fe611e3",children:(0,r.jsx)(s.code,{children:"~ForestSamplerCpp"})}),(0,r.jsx)(s.code,{children:"()"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"public inline StochTree::ForestTracker * "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1ac01993c23e40d2519a2cd554982c0c03",children:(0,r.jsx)(s.code,{children:"GetTracker"})}),(0,r.jsx)(s.code,{children:"()"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"public inline void "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1a897b657f4df5049c1839e1b729d01b05",children:(0,r.jsx)(s.code,{children:"SampleOneIteration"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classForestContainerCpp",children:(0,r.jsx)(s.code,{children:"ForestContainerCpp"})}),(0,r.jsx)(s.code,{children:" & forest_samples,"}),(0,r.jsx)(s.a,{href:"#classForestDatasetCpp",children:(0,r.jsx)(s.code,{children:"ForestDatasetCpp"})}),(0,r.jsx)(s.code,{children:" & dataset,"}),(0,r.jsx)(s.a,{href:"#classResidualCpp",children:(0,r.jsx)(s.code,{children:"ResidualCpp"})}),(0,r.jsx)(s.code,{children:" & residual,"}),(0,r.jsx)(s.a,{href:"#classRngCpp",children:(0,r.jsx)(s.code,{children:"RngCpp"})}),(0,r.jsx)(s.code,{children:" & rng,py::array_t< int > feature_types,int cutpoint_grid_size,py::array_t< double > leaf_model_scale_input,py::array_t< double > variable_weights,double a_forest,double b_forest,double global_variance,int leaf_model_int,bool gfr,bool pre_initialized)"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"public inline void "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1ab04639d7daaadd32f3ba71aba1d7cbed",children:(0,r.jsx)(s.code,{children:"InitializeForestModel"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classForestDatasetCpp",children:(0,r.jsx)(s.code,{children:"ForestDatasetCpp"})}),(0,r.jsx)(s.code,{children:" & dataset,"}),(0,r.jsx)(s.a,{href:"#classResidualCpp",children:(0,r.jsx)(s.code,{children:"ResidualCpp"})}),(0,r.jsx)(s.code,{children:" & residual,"}),(0,r.jsx)(s.a,{href:"#classForestContainerCpp",children:(0,r.jsx)(s.code,{children:"ForestContainerCpp"})}),(0,r.jsx)(s.code,{children:" & forest_samples,int leaf_model_int,py::array_t< double > initial_values)"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"public inline void "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1aac739a6f76c718a65e9359565da9be1b",children:(0,r.jsx)(s.code,{children:"PropagateBasisUpdate"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classForestDatasetCpp",children:(0,r.jsx)(s.code,{children:"ForestDatasetCpp"})}),(0,r.jsx)(s.code,{children:" & dataset,"}),(0,r.jsx)(s.a,{href:"#classResidualCpp",children:(0,r.jsx)(s.code,{children:"ResidualCpp"})}),(0,r.jsx)(s.code,{children:" & residual,"}),(0,r.jsx)(s.a,{href:"#classForestContainerCpp",children:(0,r.jsx)(s.code,{children:"ForestContainerCpp"})}),(0,r.jsx)(s.code,{children:" & forest_samples,int forest_num)"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"public inline void "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1af17503801ae8a23510d7ed33ec663958",children:(0,r.jsx)(s.code,{children:"PropagateResidualUpdate"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classResidualCpp",children:(0,r.jsx)(s.code,{children:"ResidualCpp"})}),(0,r.jsx)(s.code,{children:" & residual)"})]}),(0,r.jsx)(s.td,{})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"members",children:"Members"}),"\n",(0,r.jsxs)(s.h4,{id:"public-inline--forestsamplercppforestdatasetcpp--datasetpyarray_t-int--feature_typesint-num_treesdata_size_t-num_obsdouble-alphadouble-betaint-min_samples_leafint-max_depth",children:[(0,r.jsx)(s.code,{children:"public inline  "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1a716e2183d9ee5577e19e33b7b6221d93",children:(0,r.jsx)(s.code,{children:"ForestSamplerCpp"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classForestDatasetCpp",children:(0,r.jsx)(s.code,{children:"ForestDatasetCpp"})}),(0,r.jsx)(s.code,{children:" & dataset,py::array_t< int > feature_types,int num_trees,data_size_t num_obs,double alpha,double beta,int min_samples_leaf,int max_depth)"})]}),"\n",(0,r.jsxs)(s.h4,{id:"public-inline--forestsamplercpp",children:[(0,r.jsx)(s.code,{children:"public inline  "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1a6ebd4b2b5b43fc2efa43bcf67fe611e3",children:(0,r.jsx)(s.code,{children:"~ForestSamplerCpp"})}),(0,r.jsx)(s.code,{children:"()"})]}),"\n",(0,r.jsxs)(s.h4,{id:"public-inline-stochtreeforesttracker--gettracker",children:[(0,r.jsx)(s.code,{children:"public inline StochTree::ForestTracker * "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1ac01993c23e40d2519a2cd554982c0c03",children:(0,r.jsx)(s.code,{children:"GetTracker"})}),(0,r.jsx)(s.code,{children:"()"})]}),"\n",(0,r.jsxs)(s.h4,{id:"public-inline-void-sampleoneiterationforestcontainercpp--forest_samplesforestdatasetcpp--datasetresidualcpp--residualrngcpp--rngpyarray_t-int--feature_typesint-cutpoint_grid_sizepyarray_t-double--leaf_model_scale_inputpyarray_t-double--variable_weightsdouble-a_forestdouble-b_forestdouble-global_varianceint-leaf_model_intbool-gfrbool-pre_initialized",children:[(0,r.jsx)(s.code,{children:"public inline void "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1a897b657f4df5049c1839e1b729d01b05",children:(0,r.jsx)(s.code,{children:"SampleOneIteration"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classForestContainerCpp",children:(0,r.jsx)(s.code,{children:"ForestContainerCpp"})}),(0,r.jsx)(s.code,{children:" & forest_samples,"}),(0,r.jsx)(s.a,{href:"#classForestDatasetCpp",children:(0,r.jsx)(s.code,{children:"ForestDatasetCpp"})}),(0,r.jsx)(s.code,{children:" & dataset,"}),(0,r.jsx)(s.a,{href:"#classResidualCpp",children:(0,r.jsx)(s.code,{children:"ResidualCpp"})}),(0,r.jsx)(s.code,{children:" & residual,"}),(0,r.jsx)(s.a,{href:"#classRngCpp",children:(0,r.jsx)(s.code,{children:"RngCpp"})}),(0,r.jsx)(s.code,{children:" & rng,py::array_t< int > feature_types,int cutpoint_grid_size,py::array_t< double > leaf_model_scale_input,py::array_t< double > variable_weights,double a_forest,double b_forest,double global_variance,int leaf_model_int,bool gfr,bool pre_initialized)"})]}),"\n",(0,r.jsxs)(s.h4,{id:"public-inline-void-initializeforestmodelforestdatasetcpp--datasetresidualcpp--residualforestcontainercpp--forest_samplesint-leaf_model_intpyarray_t-double--initial_values",children:[(0,r.jsx)(s.code,{children:"public inline void "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1ab04639d7daaadd32f3ba71aba1d7cbed",children:(0,r.jsx)(s.code,{children:"InitializeForestModel"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classForestDatasetCpp",children:(0,r.jsx)(s.code,{children:"ForestDatasetCpp"})}),(0,r.jsx)(s.code,{children:" & dataset,"}),(0,r.jsx)(s.a,{href:"#classResidualCpp",children:(0,r.jsx)(s.code,{children:"ResidualCpp"})}),(0,r.jsx)(s.code,{children:" & residual,"}),(0,r.jsx)(s.a,{href:"#classForestContainerCpp",children:(0,r.jsx)(s.code,{children:"ForestContainerCpp"})}),(0,r.jsx)(s.code,{children:" & forest_samples,int leaf_model_int,py::array_t< double > initial_values)"})]}),"\n",(0,r.jsxs)(s.h4,{id:"public-inline-void-propagatebasisupdateforestdatasetcpp--datasetresidualcpp--residualforestcontainercpp--forest_samplesint-forest_num",children:[(0,r.jsx)(s.code,{children:"public inline void "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1aac739a6f76c718a65e9359565da9be1b",children:(0,r.jsx)(s.code,{children:"PropagateBasisUpdate"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classForestDatasetCpp",children:(0,r.jsx)(s.code,{children:"ForestDatasetCpp"})}),(0,r.jsx)(s.code,{children:" & dataset,"}),(0,r.jsx)(s.a,{href:"#classResidualCpp",children:(0,r.jsx)(s.code,{children:"ResidualCpp"})}),(0,r.jsx)(s.code,{children:" & residual,"}),(0,r.jsx)(s.a,{href:"#classForestContainerCpp",children:(0,r.jsx)(s.code,{children:"ForestContainerCpp"})}),(0,r.jsx)(s.code,{children:" & forest_samples,int forest_num)"})]}),"\n",(0,r.jsxs)(s.h4,{id:"public-inline-void-propagateresidualupdateresidualcpp--residual",children:[(0,r.jsx)(s.code,{children:"public inline void "}),(0,r.jsx)(s.a,{href:"#classForestSamplerCpp_1af17503801ae8a23510d7ed33ec663958",children:(0,r.jsx)(s.code,{children:"PropagateResidualUpdate"})}),(0,r.jsx)(s.code,{children:"("}),(0,r.jsx)(s.a,{href:"#classResidualCpp",children:(0,r.jsx)(s.code,{children:"ResidualCpp"})}),(0,r.jsx)(s.code,{children:" & residual)"})]})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(n,{...e})}):n(e)}},8453:(e,s,a)=>{a.d(s,{R:()=>l,x:()=>i});var d=a(6540);const r={},t=d.createContext(r);function l(e){const s=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),d.createElement(t.Provider,{value:s},e.children)}}}]);