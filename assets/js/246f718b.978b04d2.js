"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5343],{630:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"r-documentation-markdown/ForestDataset","title":"ForestDataset","description":"Description","source":"@site/docs/r-documentation-markdown/ForestDataset.md","sourceDirName":"r-documentation-markdown","slug":"/r-documentation-markdown/ForestDataset","permalink":"/documentation/docs/r-documentation-markdown/ForestDataset","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/r-documentation-markdown/ForestDataset.md","tags":[],"version":"current","frontMatter":{"title":"ForestDataset"},"sidebar":"tutorialSidebar","previous":{"title":"CppRNG","permalink":"/documentation/docs/r-documentation-markdown/CppRNG"},"next":{"title":"ForestModel","permalink":"/documentation/docs/r-documentation-markdown/ForestModel"}}');var a=t(4848),r=t(8453);const i={title:"ForestDataset"},d="Dataset used to sample a forest",o={},c=[{value:"Description",id:"description",level:2},{value:"Public fields",id:"public-fields",level:2},{value:"Methods",id:"methods",level:2},{value:"Public methods",id:"public-methods",level:3},{value:"Method <code>new()</code>",id:"method-new",level:3},{value:"Usage",id:"usage",level:4},{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"Method <code>update_basis()</code>",id:"method-update_basis",level:3},{value:"Usage",id:"usage-1",level:4},{value:"Arguments",id:"arguments-1",level:4},{value:"Method <code>num_observations()</code>",id:"method-num_observations",level:3},{value:"Usage",id:"usage-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Method <code>num_covariates()</code>",id:"method-num_covariates",level:3},{value:"Usage",id:"usage-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Method <code>num_basis()</code>",id:"method-num_basis",level:3},{value:"Usage",id:"usage-4",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Method <code>has_basis()</code>",id:"method-has_basis",level:3},{value:"Usage",id:"usage-5",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Method <code>has_variance_weights()</code>",id:"method-has_variance_weights",level:3},{value:"Usage",id:"usage-6",level:4},{value:"Returns",id:"returns-5",level:4}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"dataset-used-to-sample-a-forest",children:"Dataset used to sample a forest"})}),"\n",(0,a.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(s.p,{children:"A dataset consists of three matrices / vectors: covariates,\nbases, and variance weights. Both the basis vector and variance\nweights are optional."}),"\n",(0,a.jsx)(s.h2,{id:"public-fields",children:"Public fields"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"data_ptr"}),": External pointer to a C++ ForestDataset class"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"public-methods",children:"Public methods"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#method-ForestDataset-new",children:(0,a.jsx)(s.code,{children:"ForestDataset$new()"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#method-ForestDataset-update_basis",children:(0,a.jsx)(s.code,{children:"ForestDataset$update_basis()"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#method-ForestDataset-num_observations",children:(0,a.jsx)(s.code,{children:"ForestDataset$num_observations()"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#method-ForestDataset-num_covariates",children:(0,a.jsx)(s.code,{children:"ForestDataset$num_covariates()"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#method-ForestDataset-num_basis",children:(0,a.jsx)(s.code,{children:"ForestDataset$num_basis()"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#method-ForestDataset-has_basis",children:(0,a.jsx)(s.code,{children:"ForestDataset$has_basis()"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#method-ForestDataset-has_variance_weights",children:(0,a.jsx)(s.code,{children:"ForestDataset$has_variance_weights()"})})}),"\n"]}),"\n",(0,a.jsxs)(s.h3,{id:"method-new",children:["Method ",(0,a.jsx)(s.code,{children:"new()"})]}),"\n",(0,a.jsx)(s.p,{children:"Create a new ForestDataset object."}),"\n",(0,a.jsx)(s.h4,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"ForestDataset$new(covariates, basis = NULL, variance_weights = NULL)\n"})}),"\n",(0,a.jsx)(s.h4,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"covariates"}),": Matrix of covariates"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"basis"}),": (Optional) Matrix of bases used to define a leaf regression"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"variance_weights"}),": (Optional) Vector of observation-specific variance weights"]}),"\n"]}),"\n",(0,a.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,a.jsxs)(s.p,{children:["A new ",(0,a.jsx)(s.code,{children:"ForestDataset"})," object."]}),"\n",(0,a.jsxs)(s.h3,{id:"method-update_basis",children:["Method ",(0,a.jsx)(s.code,{children:"update_basis()"})]}),"\n",(0,a.jsx)(s.p,{children:"Update basis matrix in a dataset"}),"\n",(0,a.jsx)(s.h4,{id:"usage-1",children:"Usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"ForestDataset$update_basis(basis)\n"})}),"\n",(0,a.jsx)(s.h4,{id:"arguments-1",children:"Arguments"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"basis"}),": Updated matrix of bases used to define a leaf regression"]}),"\n"]}),"\n",(0,a.jsxs)(s.h3,{id:"method-num_observations",children:["Method ",(0,a.jsx)(s.code,{children:"num_observations()"})]}),"\n",(0,a.jsxs)(s.p,{children:["Return number of observations in a ",(0,a.jsx)(s.code,{children:"ForestDataset"})," object"]}),"\n",(0,a.jsx)(s.h4,{id:"usage-2",children:"Usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"ForestDataset$num_observations()\n"})}),"\n",(0,a.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,a.jsx)(s.p,{children:"Observation count"}),"\n",(0,a.jsxs)(s.h3,{id:"method-num_covariates",children:["Method ",(0,a.jsx)(s.code,{children:"num_covariates()"})]}),"\n",(0,a.jsxs)(s.p,{children:["Return number of covariates in a ",(0,a.jsx)(s.code,{children:"ForestDataset"})," object"]}),"\n",(0,a.jsx)(s.h4,{id:"usage-3",children:"Usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"ForestDataset$num_covariates()\n"})}),"\n",(0,a.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,a.jsx)(s.p,{children:"Covariate count"}),"\n",(0,a.jsxs)(s.h3,{id:"method-num_basis",children:["Method ",(0,a.jsx)(s.code,{children:"num_basis()"})]}),"\n",(0,a.jsxs)(s.p,{children:["Return number of bases in a ",(0,a.jsx)(s.code,{children:"ForestDataset"})," object"]}),"\n",(0,a.jsx)(s.h4,{id:"usage-4",children:"Usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"ForestDataset$num_basis()\n"})}),"\n",(0,a.jsx)(s.h4,{id:"returns-3",children:"Returns"}),"\n",(0,a.jsx)(s.p,{children:"Basis count"}),"\n",(0,a.jsxs)(s.h3,{id:"method-has_basis",children:["Method ",(0,a.jsx)(s.code,{children:"has_basis()"})]}),"\n",(0,a.jsx)(s.p,{children:"Whether or not a dataset has a basis matrix"}),"\n",(0,a.jsx)(s.h4,{id:"usage-5",children:"Usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"ForestDataset$has_basis()\n"})}),"\n",(0,a.jsx)(s.h4,{id:"returns-4",children:"Returns"}),"\n",(0,a.jsx)(s.p,{children:"True if basis matrix is loaded, false otherwise"}),"\n",(0,a.jsxs)(s.h3,{id:"method-has_variance_weights",children:["Method ",(0,a.jsx)(s.code,{children:"has_variance_weights()"})]}),"\n",(0,a.jsx)(s.p,{children:"Whether or not a dataset has variance weights"}),"\n",(0,a.jsx)(s.h4,{id:"usage-6",children:"Usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"ForestDataset$has_variance_weights()\n"})}),"\n",(0,a.jsx)(s.h4,{id:"returns-5",children:"Returns"}),"\n",(0,a.jsx)(s.p,{children:"True if variance weights are loaded, false otherwise"})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>d});var n=t(6540);const a={},r=n.createContext(a);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);