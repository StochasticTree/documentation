"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1811],{4445:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"r-documentation-markdown/createForestModel","title":"createForestModel","description":"Description","source":"@site/docs/r-documentation-markdown/createForestModel.md","sourceDirName":"r-documentation-markdown","slug":"/r-documentation-markdown/createForestModel","permalink":"/documentation/docs/r-documentation-markdown/createForestModel","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/r-documentation-markdown/createForestModel.md","tags":[],"version":"current","frontMatter":{"title":"createForestModel"},"sidebar":"tutorialSidebar","previous":{"title":"createForestDataset","permalink":"/documentation/docs/r-documentation-markdown/createForestDataset"},"next":{"title":"createOutcome","permalink":"/documentation/docs/r-documentation-markdown/createOutcome"}}');var o=n(4848),s=n(8453);const a={title:"createForestModel"},c="Create a forest model object",i={},d=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Value",id:"value",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"create-a-forest-model-object",children:"Create a forest model object"})}),"\n",(0,o.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)(t.p,{children:"Create a forest model object"}),"\n",(0,o.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-r",children:"createForestModel(\n  forest_dataset,\n  feature_types,\n  num_trees,\n  n,\n  alpha,\n  beta,\n  min_samples_leaf,\n  max_depth\n)\n"})}),"\n",(0,o.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"forest_dataset"}),": ",(0,o.jsx)(t.code,{children:"ForestDataset"})," object, used to initialize forest sampling data structures"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"feature_types"}),": Feature types (integers where 0 = numeric, 1 = ordered categorical, 2 = unordered categorical)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"num_trees"}),": Number of trees in the forest being sampled"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"n"}),": Number of observations in ",(0,o.jsx)(t.code,{children:"forest_dataset"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"alpha"}),": Root node split probability in tree prior"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"beta"}),": Depth prior penalty in tree prior"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"min_samples_leaf"}),": Minimum number of samples in a tree leaf"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"value",children:"Value"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"ForestModel"})," object"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(6540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);