"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8424],{8072:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"r-documentation-markdown/getRandomEffectSamples","title":"getRandomEffectSamples","description":"Description","source":"@site/docs/r-documentation-markdown/getRandomEffectSamples.md","sourceDirName":"r-documentation-markdown","slug":"/r-documentation-markdown/getRandomEffectSamples","permalink":"/documentation/docs/r-documentation-markdown/getRandomEffectSamples","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/r-documentation-markdown/getRandomEffectSamples.md","tags":[],"version":"current","frontMatter":{"title":"getRandomEffectSamples"},"sidebar":"tutorialSidebar","previous":{"title":"getRandomEffectSamples.bcf","permalink":"/documentation/docs/r-documentation-markdown/getRandomEffectSamples.bcf"},"next":{"title":"loadForestContainerCombinedJson","permalink":"/documentation/docs/r-documentation-markdown/loadForestContainerCombinedJson"}}');var a=n(4848),r=n(8453);const c={title:"getRandomEffectSamples"},s="Generic function for extracting random effect samples from a model object (BCF, BART, etc...)",d={},i=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Value",id:"value",level:2}];function m(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"generic-function-for-extracting-random-effect-samples-from-a-model-object-bcf-bart-etc",children:"Generic function for extracting random effect samples from a model object (BCF, BART, etc...)"})}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(t.p,{children:"Generic function for extracting random effect samples from a model object (BCF, BART, etc...)"}),"\n",(0,a.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-r",children:"getRandomEffectSamples(object, ...)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"object"}),": Fitted model object from which to extract random effects"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"..."}),": Other parameters to be used in random effects extraction"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"value",children:"Value"}),"\n",(0,a.jsx)(t.p,{children:"List of random effect samples"})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var o=n(6540);const a={},r=o.createContext(a);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);