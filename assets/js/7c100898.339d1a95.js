"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5053],{3445:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"c-documentation-markdown/class_`ForestContainerCpp`","title":"class `ForestContainerCpp`","description":"Summary","source":"@site/docs/c-documentation-markdown/class_`ForestContainerCpp`.md","sourceDirName":"c-documentation-markdown","slug":"/c-documentation-markdown/class_`ForestContainerCpp`","permalink":"/documentation/docs/c-documentation-markdown/class_`ForestContainerCpp`","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/c-documentation-markdown/class_`ForestContainerCpp`.md","tags":[],"version":"current","frontMatter":{"title":"class `ForestContainerCpp`"},"sidebar":"tutorialSidebar","previous":{"title":"Summary","permalink":"/documentation/docs/c-documentation-markdown/Summary"},"next":{"title":"class `ForestDatasetCpp`","permalink":"/documentation/docs/c-documentation-markdown/class_`ForestDatasetCpp`"}}');var c=n(4848),s=n(8453);const t={title:"class `ForestContainerCpp`"},l="class ForestContainerCpp",r={},o=[{value:"Summary",id:"summary",level:2},{value:"Members",id:"members",level:2},{value:"<code>public inline  </code><code>ForestContainerCpp</code><code>(int num_trees,int output_dimension,bool is_leaf_constant,bool is_exponentiated)</code>",id:"public-inline--forestcontainercppint-num_treesint-output_dimensionbool-is_leaf_constantbool-is_exponentiated",level:4},{value:"<code>public inline  </code><code>~ForestContainerCpp</code><code>()</code>",id:"public-inline--forestcontainercpp",level:4},{value:"<code>public inline int </code><code>OutputDimension</code><code>()</code>",id:"public-inline-int-outputdimension",level:4},{value:"<code>public inline int </code><code>NumSamples</code><code>()</code>",id:"public-inline-int-numsamples",level:4},{value:"<code>public inline py::array_t&lt; double &gt; </code><code>Predict</code><code>(</code><code>ForestDatasetCpp</code><code> &amp; dataset)</code>",id:"public-inline-pyarray_t-double--predictforestdatasetcpp--dataset",level:4},{value:"<code>public inline py::array_t&lt; double &gt; </code><code>PredictRaw</code><code>(</code><code>ForestDatasetCpp</code><code> &amp; dataset)</code>",id:"public-inline-pyarray_t-double--predictrawforestdatasetcpp--dataset",level:4},{value:"<code>public inline py::array_t&lt; double &gt; </code><code>PredictRawSingleForest</code><code>(</code><code>ForestDatasetCpp</code><code> &amp; dataset,int forest_num)</code>",id:"public-inline-pyarray_t-double--predictrawsingleforestforestdatasetcpp--datasetint-forest_num",level:4},{value:"<code>public inline py::array_t&lt; double &gt; </code><code>PredictRawSingleTree</code><code>(</code><code>ForestDatasetCpp</code><code> &amp; dataset,int forest_num,int tree_num)</code>",id:"public-inline-pyarray_t-double--predictrawsingletreeforestdatasetcpp--datasetint-forest_numint-tree_num",level:4},{value:"<code>public inline void </code><code>SetRootValue</code><code>(int forest_num,double leaf_value)</code>",id:"public-inline-void-setrootvalueint-forest_numdouble-leaf_value",level:4},{value:"<code>public inline void </code><code>SetRootVector</code><code>(int forest_num,py::array_t&lt; double &gt; &amp; leaf_vector,int leaf_size)</code>",id:"public-inline-void-setrootvectorint-forest_numpyarray_t-double---leaf_vectorint-leaf_size",level:4},{value:"<code>public inline void </code><code>InitializeRootValue</code><code>(double val)</code>",id:"public-inline-void-initializerootvaluedouble-val",level:4},{value:"<code>public inline void </code><code>InitializeRootVector</code><code>(std::vector&lt; double &gt; vals)</code>",id:"public-inline-void-initializerootvectorstdvector-double--vals",level:4},{value:"<code>public void </code><code>AdjustResidual</code><code>(</code><code>ForestDatasetCpp</code><code> &amp; dataset,</code><code>ResidualCpp</code><code> &amp; residual,</code><code>ForestSamplerCpp</code><code> &amp; sampler,bool requires_basis,int forest_num,bool add)</code>",id:"public-void-adjustresidualforestdatasetcpp--datasetresidualcpp--residualforestsamplercpp--samplerbool-requires_basisint-forest_numbool-add",level:4},{value:"<code>public inline void </code><code>SaveToJsonFile</code><code>(std::string json_filename)</code>",id:"public-inline-void-savetojsonfilestdstring-json_filename",level:4},{value:"<code>public inline void </code><code>LoadFromJsonFile</code><code>(std::string json_filename)</code>",id:"public-inline-void-loadfromjsonfilestdstring-json_filename",level:4},{value:"<code>public void </code><code>LoadFromJson</code><code>(</code><code>JsonCpp</code><code> &amp; json,std::string forest_label)</code>",id:"public-void-loadfromjsonjsoncpp--jsonstdstring-forest_label",level:4},{value:"<code>public inline std::string </code><code>DumpJsonString</code><code>()</code>",id:"public-inline-stdstring-dumpjsonstring",level:4},{value:"<code>public inline void </code><code>LoadFromJsonString</code><code>(std::string &amp; json_string)</code>",id:"public-inline-void-loadfromjsonstringstdstring--json_string",level:4},{value:"<code>public inline StochTree::ForestContainer * </code><code>GetContainer</code><code>()</code>",id:"public-inline-stochtreeforestcontainer--getcontainer",level:4},{value:"<code>public inline StochTree::TreeEnsemble * </code><code>GetForest</code><code>(int i)</code>",id:"public-inline-stochtreetreeensemble--getforestint-i",level:4},{value:"<code>public inline nlohmann::json </code><code>ToJson</code><code>()</code>",id:"public-inline-nlohmannjson-tojson",level:4},{value:"<code>public inline void </code><code>AddSampleValue</code><code>(double leaf_value)</code>",id:"public-inline-void-addsamplevaluedouble-leaf_value",level:4},{value:"<code>public inline void </code><code>AddSampleVector</code><code>(py::array_t&lt; double &gt; leaf_vector)</code>",id:"public-inline-void-addsamplevectorpyarray_t-double--leaf_vector",level:4},{value:"<code>public inline void </code><code>AddNumericSplitVector</code><code>(int forest_num,int tree_num,int leaf_num,int feature_num,double split_threshold,py::array_t&lt; double &gt; left_leaf_vector,py::array_t&lt; double &gt; right_leaf_vector)</code>",id:"public-inline-void-addnumericsplitvectorint-forest_numint-tree_numint-leaf_numint-feature_numdouble-split_thresholdpyarray_t-double--left_leaf_vectorpyarray_t-double--right_leaf_vector",level:4},{value:"<code>public inline void </code><code>AddNumericSplitValue</code><code>(int forest_num,int tree_num,int leaf_num,int feature_num,double split_threshold,double left_leaf_value,double right_leaf_value)</code>",id:"public-inline-void-addnumericsplitvalueint-forest_numint-tree_numint-leaf_numint-feature_numdouble-split_thresholddouble-left_leaf_valuedouble-right_leaf_value",level:4},{value:"<code>public inline py::array_t&lt; int &gt; </code><code>GetTreeLeaves</code><code>(int forest_num,int tree_num)</code>",id:"public-inline-pyarray_t-int--gettreeleavesint-forest_numint-tree_num",level:4},{value:"<code>public inline py::array_t&lt; int &gt; </code><code>GetTreeSplitCounts</code><code>(int forest_num,int tree_num,int num_features)</code>",id:"public-inline-pyarray_t-int--gettreesplitcountsint-forest_numint-tree_numint-num_features",level:4},{value:"<code>public inline py::array_t&lt; int &gt; </code><code>GetForestSplitCounts</code><code>(int forest_num,int num_features)</code>",id:"public-inline-pyarray_t-int--getforestsplitcountsint-forest_numint-num_features",level:4},{value:"<code>public inline py::array_t&lt; int &gt; </code><code>GetOverallSplitCounts</code><code>(int num_features)</code>",id:"public-inline-pyarray_t-int--getoverallsplitcountsint-num_features",level:4},{value:"<code>public inline py::array_t&lt; int &gt; </code><code>GetGranularSplitCounts</code><code>(int num_features)</code>",id:"public-inline-pyarray_t-int--getgranularsplitcountsint-num_features",level:4}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(i.header,{children:(0,c.jsxs)(i.h1,{id:"class-forestcontainercpp",children:["class ",(0,c.jsx)(i.code,{children:"ForestContainerCpp"})]})}),"\n",(0,c.jsx)(i.h2,{id:"summary",children:"Summary"}),"\n",(0,c.jsxs)(i.table,{children:[(0,c.jsx)(i.thead,{children:(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.th,{children:"Members"}),(0,c.jsx)(i.th,{children:"Descriptions"})]})}),(0,c.jsxs)(i.tbody,{children:[(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline  "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a0fef3ffe1672ca77891544f3d0716e6b",children:(0,c.jsx)(i.code,{children:"ForestContainerCpp"})}),(0,c.jsx)(i.code,{children:"(int num_trees,int output_dimension,bool is_leaf_constant,bool is_exponentiated)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline  "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1aaf6e33c00c6b6c4838079ea3cbf53674",children:(0,c.jsx)(i.code,{children:"~ForestContainerCpp"})}),(0,c.jsx)(i.code,{children:"()"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline int "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a13c991845a804a8f39b7b05d93a88dc0",children:(0,c.jsx)(i.code,{children:"OutputDimension"})}),(0,c.jsx)(i.code,{children:"()"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline int "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a79d220afd860e3697fb20b4ba0ed6e6e",children:(0,c.jsx)(i.code,{children:"NumSamples"})}),(0,c.jsx)(i.code,{children:"()"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< double > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a2db2e6b954f08a94cd1eb6119f2ee768",children:(0,c.jsx)(i.code,{children:"Predict"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< double > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a7571c4ffe69a319360e485b697a5ba12",children:(0,c.jsx)(i.code,{children:"PredictRaw"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< double > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1abb59e21562dd76e6eaf467f443ca8eb9",children:(0,c.jsx)(i.code,{children:"PredictRawSingleForest"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset,int forest_num)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< double > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1ae633f36e5088076fc625bc8e06a7b211",children:(0,c.jsx)(i.code,{children:"PredictRawSingleTree"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset,int forest_num,int tree_num)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a1d85e6b963eeb042dcdea70c47f45d3f",children:(0,c.jsx)(i.code,{children:"SetRootValue"})}),(0,c.jsx)(i.code,{children:"(int forest_num,double leaf_value)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a492b80b03c79bfa94d59c7de11303abd",children:(0,c.jsx)(i.code,{children:"SetRootVector"})}),(0,c.jsx)(i.code,{children:"(int forest_num,py::array_t< double > & leaf_vector,int leaf_size)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a4715522f9b93610451cb792aee74c15f",children:(0,c.jsx)(i.code,{children:"InitializeRootValue"})}),(0,c.jsx)(i.code,{children:"(double val)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a650ae9edb6785705969fe8d9266cd588",children:(0,c.jsx)(i.code,{children:"InitializeRootVector"})}),(0,c.jsx)(i.code,{children:"(std::vector< double > vals)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a1ef71ac20bff3ae308a8daff78da06f8",children:(0,c.jsx)(i.code,{children:"AdjustResidual"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset,"}),(0,c.jsx)(i.a,{href:"#classResidualCpp",children:(0,c.jsx)(i.code,{children:"ResidualCpp"})}),(0,c.jsx)(i.code,{children:" & residual,"}),(0,c.jsx)(i.a,{href:"#classForestSamplerCpp",children:(0,c.jsx)(i.code,{children:"ForestSamplerCpp"})}),(0,c.jsx)(i.code,{children:" & sampler,bool requires_basis,int forest_num,bool add)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a30841ef6d674959e412aec7d677f58e8",children:(0,c.jsx)(i.code,{children:"SaveToJsonFile"})}),(0,c.jsx)(i.code,{children:"(std::string json_filename)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a1169f0e3c9f2f33fca6da0fd61820c0f",children:(0,c.jsx)(i.code,{children:"LoadFromJsonFile"})}),(0,c.jsx)(i.code,{children:"(std::string json_filename)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1adce3d8dd9ca9866e06cc7cefb11ac010",children:(0,c.jsx)(i.code,{children:"LoadFromJson"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classJsonCpp",children:(0,c.jsx)(i.code,{children:"JsonCpp"})}),(0,c.jsx)(i.code,{children:" & json,std::string forest_label)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline std::string "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a78b5cee874333c52d7b0ca5d9af4da31",children:(0,c.jsx)(i.code,{children:"DumpJsonString"})}),(0,c.jsx)(i.code,{children:"()"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a8325daf220502cf275c2e83681d40ed9",children:(0,c.jsx)(i.code,{children:"LoadFromJsonString"})}),(0,c.jsx)(i.code,{children:"(std::string & json_string)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline StochTree::ForestContainer * "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a56e7247fcef3f4ff370f7ab50e092d0a",children:(0,c.jsx)(i.code,{children:"GetContainer"})}),(0,c.jsx)(i.code,{children:"()"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline StochTree::TreeEnsemble * "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1afca04cd37b2973e41f5bbf529e61946c",children:(0,c.jsx)(i.code,{children:"GetForest"})}),(0,c.jsx)(i.code,{children:"(int i)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline nlohmann::json "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1aedc3756fab2320ff704e507ed4229766",children:(0,c.jsx)(i.code,{children:"ToJson"})}),(0,c.jsx)(i.code,{children:"()"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1ab9ef774f9d03be1b6027e77c9a87801f",children:(0,c.jsx)(i.code,{children:"AddSampleValue"})}),(0,c.jsx)(i.code,{children:"(double leaf_value)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a614daa8ea9cbee47b6f5582874bd32bb",children:(0,c.jsx)(i.code,{children:"AddSampleVector"})}),(0,c.jsx)(i.code,{children:"(py::array_t< double > leaf_vector)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1ae5c5e5444d988e72d097c965b876324c",children:(0,c.jsx)(i.code,{children:"AddNumericSplitVector"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int tree_num,int leaf_num,int feature_num,double split_threshold,py::array_t< double > left_leaf_vector,py::array_t< double > right_leaf_vector)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1ab898857480955a868d0d356f2e534ae8",children:(0,c.jsx)(i.code,{children:"AddNumericSplitValue"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int tree_num,int leaf_num,int feature_num,double split_threshold,double left_leaf_value,double right_leaf_value)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a146de93a75e64e18ce721c145f684207",children:(0,c.jsx)(i.code,{children:"GetTreeLeaves"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int tree_num)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a8377a17e8b4f27523775130849f92d8c",children:(0,c.jsx)(i.code,{children:"GetTreeSplitCounts"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int tree_num,int num_features)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a2d0a8067ddfb2d3b703307725205f002",children:(0,c.jsx)(i.code,{children:"GetForestSplitCounts"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int num_features)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a3b2bff3c52a603480ffe77b1671eae61",children:(0,c.jsx)(i.code,{children:"GetOverallSplitCounts"})}),(0,c.jsx)(i.code,{children:"(int num_features)"})]}),(0,c.jsx)(i.td,{})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a64428c5deaaf26733a8d94cd7bd5fb71",children:(0,c.jsx)(i.code,{children:"GetGranularSplitCounts"})}),(0,c.jsx)(i.code,{children:"(int num_features)"})]}),(0,c.jsx)(i.td,{})]})]})]}),"\n",(0,c.jsx)(i.h2,{id:"members",children:"Members"}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline--forestcontainercppint-num_treesint-output_dimensionbool-is_leaf_constantbool-is_exponentiated",children:[(0,c.jsx)(i.code,{children:"public inline  "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a0fef3ffe1672ca77891544f3d0716e6b",children:(0,c.jsx)(i.code,{children:"ForestContainerCpp"})}),(0,c.jsx)(i.code,{children:"(int num_trees,int output_dimension,bool is_leaf_constant,bool is_exponentiated)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline--forestcontainercpp",children:[(0,c.jsx)(i.code,{children:"public inline  "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1aaf6e33c00c6b6c4838079ea3cbf53674",children:(0,c.jsx)(i.code,{children:"~ForestContainerCpp"})}),(0,c.jsx)(i.code,{children:"()"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-int-outputdimension",children:[(0,c.jsx)(i.code,{children:"public inline int "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a13c991845a804a8f39b7b05d93a88dc0",children:(0,c.jsx)(i.code,{children:"OutputDimension"})}),(0,c.jsx)(i.code,{children:"()"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-int-numsamples",children:[(0,c.jsx)(i.code,{children:"public inline int "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a79d220afd860e3697fb20b4ba0ed6e6e",children:(0,c.jsx)(i.code,{children:"NumSamples"})}),(0,c.jsx)(i.code,{children:"()"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-double--predictforestdatasetcpp--dataset",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< double > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a2db2e6b954f08a94cd1eb6119f2ee768",children:(0,c.jsx)(i.code,{children:"Predict"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-double--predictrawforestdatasetcpp--dataset",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< double > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a7571c4ffe69a319360e485b697a5ba12",children:(0,c.jsx)(i.code,{children:"PredictRaw"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-double--predictrawsingleforestforestdatasetcpp--datasetint-forest_num",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< double > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1abb59e21562dd76e6eaf467f443ca8eb9",children:(0,c.jsx)(i.code,{children:"PredictRawSingleForest"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset,int forest_num)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-double--predictrawsingletreeforestdatasetcpp--datasetint-forest_numint-tree_num",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< double > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1ae633f36e5088076fc625bc8e06a7b211",children:(0,c.jsx)(i.code,{children:"PredictRawSingleTree"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset,int forest_num,int tree_num)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-setrootvalueint-forest_numdouble-leaf_value",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a1d85e6b963eeb042dcdea70c47f45d3f",children:(0,c.jsx)(i.code,{children:"SetRootValue"})}),(0,c.jsx)(i.code,{children:"(int forest_num,double leaf_value)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-setrootvectorint-forest_numpyarray_t-double---leaf_vectorint-leaf_size",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a492b80b03c79bfa94d59c7de11303abd",children:(0,c.jsx)(i.code,{children:"SetRootVector"})}),(0,c.jsx)(i.code,{children:"(int forest_num,py::array_t< double > & leaf_vector,int leaf_size)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-initializerootvaluedouble-val",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a4715522f9b93610451cb792aee74c15f",children:(0,c.jsx)(i.code,{children:"InitializeRootValue"})}),(0,c.jsx)(i.code,{children:"(double val)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-initializerootvectorstdvector-double--vals",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a650ae9edb6785705969fe8d9266cd588",children:(0,c.jsx)(i.code,{children:"InitializeRootVector"})}),(0,c.jsx)(i.code,{children:"(std::vector< double > vals)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-void-adjustresidualforestdatasetcpp--datasetresidualcpp--residualforestsamplercpp--samplerbool-requires_basisint-forest_numbool-add",children:[(0,c.jsx)(i.code,{children:"public void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a1ef71ac20bff3ae308a8daff78da06f8",children:(0,c.jsx)(i.code,{children:"AdjustResidual"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classForestDatasetCpp",children:(0,c.jsx)(i.code,{children:"ForestDatasetCpp"})}),(0,c.jsx)(i.code,{children:" & dataset,"}),(0,c.jsx)(i.a,{href:"#classResidualCpp",children:(0,c.jsx)(i.code,{children:"ResidualCpp"})}),(0,c.jsx)(i.code,{children:" & residual,"}),(0,c.jsx)(i.a,{href:"#classForestSamplerCpp",children:(0,c.jsx)(i.code,{children:"ForestSamplerCpp"})}),(0,c.jsx)(i.code,{children:" & sampler,bool requires_basis,int forest_num,bool add)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-savetojsonfilestdstring-json_filename",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a30841ef6d674959e412aec7d677f58e8",children:(0,c.jsx)(i.code,{children:"SaveToJsonFile"})}),(0,c.jsx)(i.code,{children:"(std::string json_filename)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-loadfromjsonfilestdstring-json_filename",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a1169f0e3c9f2f33fca6da0fd61820c0f",children:(0,c.jsx)(i.code,{children:"LoadFromJsonFile"})}),(0,c.jsx)(i.code,{children:"(std::string json_filename)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-void-loadfromjsonjsoncpp--jsonstdstring-forest_label",children:[(0,c.jsx)(i.code,{children:"public void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1adce3d8dd9ca9866e06cc7cefb11ac010",children:(0,c.jsx)(i.code,{children:"LoadFromJson"})}),(0,c.jsx)(i.code,{children:"("}),(0,c.jsx)(i.a,{href:"#classJsonCpp",children:(0,c.jsx)(i.code,{children:"JsonCpp"})}),(0,c.jsx)(i.code,{children:" & json,std::string forest_label)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-stdstring-dumpjsonstring",children:[(0,c.jsx)(i.code,{children:"public inline std::string "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a78b5cee874333c52d7b0ca5d9af4da31",children:(0,c.jsx)(i.code,{children:"DumpJsonString"})}),(0,c.jsx)(i.code,{children:"()"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-loadfromjsonstringstdstring--json_string",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a8325daf220502cf275c2e83681d40ed9",children:(0,c.jsx)(i.code,{children:"LoadFromJsonString"})}),(0,c.jsx)(i.code,{children:"(std::string & json_string)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-stochtreeforestcontainer--getcontainer",children:[(0,c.jsx)(i.code,{children:"public inline StochTree::ForestContainer * "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a56e7247fcef3f4ff370f7ab50e092d0a",children:(0,c.jsx)(i.code,{children:"GetContainer"})}),(0,c.jsx)(i.code,{children:"()"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-stochtreetreeensemble--getforestint-i",children:[(0,c.jsx)(i.code,{children:"public inline StochTree::TreeEnsemble * "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1afca04cd37b2973e41f5bbf529e61946c",children:(0,c.jsx)(i.code,{children:"GetForest"})}),(0,c.jsx)(i.code,{children:"(int i)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-nlohmannjson-tojson",children:[(0,c.jsx)(i.code,{children:"public inline nlohmann::json "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1aedc3756fab2320ff704e507ed4229766",children:(0,c.jsx)(i.code,{children:"ToJson"})}),(0,c.jsx)(i.code,{children:"()"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-addsamplevaluedouble-leaf_value",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1ab9ef774f9d03be1b6027e77c9a87801f",children:(0,c.jsx)(i.code,{children:"AddSampleValue"})}),(0,c.jsx)(i.code,{children:"(double leaf_value)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-addsamplevectorpyarray_t-double--leaf_vector",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a614daa8ea9cbee47b6f5582874bd32bb",children:(0,c.jsx)(i.code,{children:"AddSampleVector"})}),(0,c.jsx)(i.code,{children:"(py::array_t< double > leaf_vector)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-addnumericsplitvectorint-forest_numint-tree_numint-leaf_numint-feature_numdouble-split_thresholdpyarray_t-double--left_leaf_vectorpyarray_t-double--right_leaf_vector",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1ae5c5e5444d988e72d097c965b876324c",children:(0,c.jsx)(i.code,{children:"AddNumericSplitVector"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int tree_num,int leaf_num,int feature_num,double split_threshold,py::array_t< double > left_leaf_vector,py::array_t< double > right_leaf_vector)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-void-addnumericsplitvalueint-forest_numint-tree_numint-leaf_numint-feature_numdouble-split_thresholddouble-left_leaf_valuedouble-right_leaf_value",children:[(0,c.jsx)(i.code,{children:"public inline void "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1ab898857480955a868d0d356f2e534ae8",children:(0,c.jsx)(i.code,{children:"AddNumericSplitValue"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int tree_num,int leaf_num,int feature_num,double split_threshold,double left_leaf_value,double right_leaf_value)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-int--gettreeleavesint-forest_numint-tree_num",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a146de93a75e64e18ce721c145f684207",children:(0,c.jsx)(i.code,{children:"GetTreeLeaves"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int tree_num)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-int--gettreesplitcountsint-forest_numint-tree_numint-num_features",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a8377a17e8b4f27523775130849f92d8c",children:(0,c.jsx)(i.code,{children:"GetTreeSplitCounts"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int tree_num,int num_features)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-int--getforestsplitcountsint-forest_numint-num_features",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a2d0a8067ddfb2d3b703307725205f002",children:(0,c.jsx)(i.code,{children:"GetForestSplitCounts"})}),(0,c.jsx)(i.code,{children:"(int forest_num,int num_features)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-int--getoverallsplitcountsint-num_features",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a3b2bff3c52a603480ffe77b1671eae61",children:(0,c.jsx)(i.code,{children:"GetOverallSplitCounts"})}),(0,c.jsx)(i.code,{children:"(int num_features)"})]}),"\n",(0,c.jsxs)(i.h4,{id:"public-inline-pyarray_t-int--getgranularsplitcountsint-num_features",children:[(0,c.jsx)(i.code,{children:"public inline py::array_t< int > "}),(0,c.jsx)(i.a,{href:"#classForestContainerCpp_1a64428c5deaaf26733a8d94cd7bd5fb71",children:(0,c.jsx)(i.code,{children:"GetGranularSplitCounts"})}),(0,c.jsx)(i.code,{children:"(int num_features)"})]})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,c.jsx)(i,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>l});var d=n(6540);const c={},s=d.createContext(c);function t(e){const i=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),d.createElement(s.Provider,{value:i},e.children)}}}]);