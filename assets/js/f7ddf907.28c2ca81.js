"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4114],{470:(e,t,d)=>{d.r(t),d.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"r-documentation-markdown/Outcome","title":"Outcome","description":"Description","source":"@site/docs/r-documentation-markdown/Outcome.md","sourceDirName":"r-documentation-markdown","slug":"/r-documentation-markdown/Outcome","permalink":"/documentation/docs/r-documentation-markdown/Outcome","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/r-documentation-markdown/Outcome.md","tags":[],"version":"current","frontMatter":{"title":"Outcome"},"sidebar":"tutorialSidebar","previous":{"title":"ForestSamples","permalink":"/documentation/docs/r-documentation-markdown/ForestSamples"},"next":{"title":"RandomEffectSamples","permalink":"/documentation/docs/r-documentation-markdown/RandomEffectSamples"}}');var r=d(4848),c=d(8453);const s={title:"Outcome"},o="Outcome / partial residual used to sample an additive model.",i={},a=[{value:"Description",id:"description",level:2},{value:"Public fields",id:"public-fields",level:2},{value:"Methods",id:"methods",level:2},{value:"Public methods",id:"public-methods",level:3},{value:"Method <code>new()</code>",id:"method-new",level:3},{value:"Usage",id:"usage",level:4},{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"Method <code>get_data()</code>",id:"method-get_data",level:3},{value:"Usage",id:"usage-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Method <code>add_vector()</code>",id:"method-add_vector",level:3},{value:"Usage",id:"usage-2",level:4},{value:"Arguments",id:"arguments-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Method <code>subtract_vector()</code>",id:"method-subtract_vector",level:3},{value:"Usage",id:"usage-3",level:4},{value:"Arguments",id:"arguments-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Method <code>update_data()</code>",id:"method-update_data",level:3},{value:"Usage",id:"usage-4",level:4},{value:"Arguments",id:"arguments-3",level:4},{value:"Returns",id:"returns-4",level:4}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"outcome--partial-residual-used-to-sample-an-additive-model",children:"Outcome / partial residual used to sample an additive model."})}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:'The outcome class is wrapper around a vector of (mutable)\noutcomes for ML tasks (supervised learning, causal inference).\nWhen an additive tree ensemble is sampled, the outcome used to\nsample a specific model term is the "partial residual" consisting\nof the outcome minus the predictions of every other model term\n(trees, group random effects, etc...).'}),"\n",(0,r.jsx)(t.h2,{id:"public-fields",children:"Public fields"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"data_ptr"}),": External pointer to a C++ Outcome class"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"public-methods",children:"Public methods"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#method-Outcome-new",children:(0,r.jsx)(t.code,{children:"Outcome$new()"})})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#method-Outcome-get_data",children:(0,r.jsx)(t.code,{children:"Outcome$get_data()"})})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#method-Outcome-add_vector",children:(0,r.jsx)(t.code,{children:"Outcome$add_vector()"})})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#method-Outcome-subtract_vector",children:(0,r.jsx)(t.code,{children:"Outcome$subtract_vector()"})})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#method-Outcome-update_data",children:(0,r.jsx)(t.code,{children:"Outcome$update_data()"})})}),"\n"]}),"\n",(0,r.jsxs)(t.h3,{id:"method-new",children:["Method ",(0,r.jsx)(t.code,{children:"new()"})]}),"\n",(0,r.jsx)(t.p,{children:"Create a new Outcome object."}),"\n",(0,r.jsx)(t.h4,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Outcome$new(outcome)\n"})}),"\n",(0,r.jsx)(t.h4,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"outcome"}),": Vector of outcome values"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(t.p,{children:["A new ",(0,r.jsx)(t.code,{children:"Outcome"})," object."]}),"\n",(0,r.jsxs)(t.h3,{id:"method-get_data",children:["Method ",(0,r.jsx)(t.code,{children:"get_data()"})]}),"\n",(0,r.jsx)(t.p,{children:"Extract raw data in R from the underlying C++ object"}),"\n",(0,r.jsx)(t.h4,{id:"usage-1",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Outcome$get_data()\n"})}),"\n",(0,r.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(t.p,{children:["R vector containing (copy of) the values in ",(0,r.jsx)(t.code,{children:"Outcome"})," object"]}),"\n",(0,r.jsxs)(t.h3,{id:"method-add_vector",children:["Method ",(0,r.jsx)(t.code,{children:"add_vector()"})]}),"\n",(0,r.jsxs)(t.p,{children:["Update the current state of the outcome (i.e. partial residual) data by adding the values of ",(0,r.jsx)(t.code,{children:"update_vector"})]}),"\n",(0,r.jsx)(t.h4,{id:"usage-2",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Outcome$add_vector(update_vector)\n"})}),"\n",(0,r.jsx)(t.h4,{id:"arguments-1",children:"Arguments"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"update_vector"}),": Vector to be added to outcome"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:"NULL"}),"\n",(0,r.jsxs)(t.h3,{id:"method-subtract_vector",children:["Method ",(0,r.jsx)(t.code,{children:"subtract_vector()"})]}),"\n",(0,r.jsxs)(t.p,{children:["Update the current state of the outcome (i.e. partial residual) data by subtracting the values of ",(0,r.jsx)(t.code,{children:"update_vector"})]}),"\n",(0,r.jsx)(t.h4,{id:"usage-3",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Outcome$subtract_vector(update_vector)\n"})}),"\n",(0,r.jsx)(t.h4,{id:"arguments-2",children:"Arguments"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"update_vector"}),": Vector to be subtracted from outcome"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"returns-3",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:"NULL"}),"\n",(0,r.jsxs)(t.h3,{id:"method-update_data",children:["Method ",(0,r.jsx)(t.code,{children:"update_data()"})]}),"\n",(0,r.jsxs)(t.p,{children:["Update the current state of the outcome (i.e. partial residual) data by replacing each element with the elements of ",(0,r.jsx)(t.code,{children:"new_vector"})]}),"\n",(0,r.jsx)(t.h4,{id:"usage-4",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Outcome$update_data(new_vector)\n"})}),"\n",(0,r.jsx)(t.h4,{id:"arguments-3",children:"Arguments"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"new_vector"}),": Vector from which to overwrite the current data"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"returns-4",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:"NULL"})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,d)=>{d.d(t,{R:()=>s,x:()=>o});var n=d(6540);const r={},c=n.createContext(r);function s(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);