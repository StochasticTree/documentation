"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6298],{1204:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"r-documentation-markdown/predict.bartmodel","title":"predict.bartmodel","description":"Description","source":"@site/docs/r-documentation-markdown/predict.bartmodel.md","sourceDirName":"r-documentation-markdown","slug":"/r-documentation-markdown/predict.bartmodel","permalink":"/documentation/docs/r-documentation-markdown/predict.bartmodel","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/r-documentation-markdown/predict.bartmodel.md","tags":[],"version":"current","frontMatter":{"title":"predict.bartmodel"},"sidebar":"tutorialSidebar","previous":{"title":"orderedCatPreprocess","permalink":"/documentation/docs/r-documentation-markdown/orderedCatPreprocess"},"next":{"title":"predict.bcf","permalink":"/documentation/docs/r-documentation-markdown/predict.bcf"}}');var s=n(4848),d=n(8453);const a={title:"predict.bartmodel"},o="Predict from a sampled BART model on new data",i={},c=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Value",id:"value",level:2},{value:"Examples",id:"examples",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"predict-from-a-sampled-bart-model-on-new-data",children:"Predict from a sampled BART model on new data"})}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"Predict from a sampled BART model on new data"}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-r",children:"# S3 method for bartmodel\npredict(\n  bart,\n  X_test,\n  W_test = NULL,\n  group_ids_test = NULL,\n  rfx_basis_test = NULL\n)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"bart"}),": Object of type ",(0,s.jsx)(t.code,{children:"bart"})," containing draws of a regression forest and associated sampling outputs."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"X_test"}),": Covariates used to determine tree leaf predictions for each observation. Must be passed as a matrix or dataframe."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"W_test"}),": (Optional) Bases used for prediction (by e.g. dot product with leaf values). Default: ",(0,s.jsx)(t.code,{children:"NULL"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"group_ids_test"}),": (Optional) Test set group labels used for an additive random effects model.\nWe do not currently support (but plan to in the near future), test set evaluation for group labels\nthat were not in the training set."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"rfx_basis_test"}),': (Optional) Test set basis for "random-slope" regression in additive random effects model.']}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"value",children:"Value"}),"\n",(0,s.jsxs)(t.p,{children:["List of prediction matrices. If model does not have random effects, the list has one element -- the predictions from the forest.\nIf the model does have random effects, the list has three elements -- forest predictions, random effects predictions, and their sum (",(0,s.jsx)(t.code,{children:"y_hat"}),")."]}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-r",children:"n \\<- 100\np \\<- 5\nX \\<- matrix(runif(n*p), ncol = p)\nf_XW \\<- (\n```r\n((0 \\<= X[,1]) & (0.25 \\> X[,1])) * (-7.5) + \n((0.25 \\<= X[,1]) & (0.5 \\> X[,1])) * (-2.5) + \n((0.5 \\<= X[,1]) & (0.75 \\> X[,1])) * (2.5) + \n((0.75 \\<= X[,1]) & (1 \\> X[,1])) * (7.5)\n"})}),"\n",(0,s.jsxs)(t.p,{children:[")\nnoise_sd <- 1\ny <- f_XW + rnorm(n, 0, noise_sd)\ntest_set_pct <- 0.2\nn_test <- round(test_set_pct*n)\nn_train <- n - n_test\ntest_inds <- sort(sample(1",":n",", n_test, replace = FALSE))\ntrain_inds <- (1",":n",")[!((1",":n",") %in% test_inds)]\nX_test <- X[test_inds,]\nX_train <- X[train_inds,]\ny_test <- y[test_inds]\ny_train <- y[train_inds]\nbart_model <- bart(X_train = X_train, y_train = y_train)\ny_hat_test <- predict(bart_model, X_test)"]}),"\n",(0,s.jsx)(t.h1,{id:"plotrowmeansy_hat_test-y_test-xlab--predicted-ylab--actual",children:'plot(rowMeans(y_hat_test), y_test, xlab = "predicted", ylab = "actual")'}),"\n",(0,s.jsx)(t.h1,{id:"abline01colredlty3lwd3",children:'abline(0,1,col="red",lty=3,lwd=3)'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{})})]})}function m(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(6540);const s={},d=r.createContext(s);function a(e){const t=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(d.Provider,{value:t},e.children)}}}]);